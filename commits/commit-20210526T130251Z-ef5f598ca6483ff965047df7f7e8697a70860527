{
  "sha": "ef5f598ca6483ff965047df7f7e8697a70860527",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWY1ZjU5OGNhNjQ4M2ZmOTY1MDQ3ZGY3ZjdlODY5N2E3MDg2MDUyNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-26T13:02:51Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-26T13:02:51Z"
    },
    "message": "Introduce htab_delete_entry\n\nIn a bigger series I'm working on, it is convenient to have a\nlibiberty hash table that manages objects allocated with 'new'.  To\nmake this simpler, I wrote a small template function to serve as a\nconcise wrapper.  Then I realized that this could be reused in a few\nother places.\n\ngdb/ChangeLog\n2021-05-26  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (allocate_type_unit_groups_table)\n\t(handle_DW_AT_stmt_list, allocate_dwo_file_hash_table): Use\n\thtab_delete_entry.\n\t(free_line_header_voidp): Remove.\n\t* completer.c\n\t(completion_tracker::completion_hash_entry::deleter): Remove.\n\t(completion_tracker::discard_completions): Use htab_delete_entry.\n\t* utils.h (htab_delete_entry): New template function.",
    "tree": {
      "sha": "3e90ee19b538abef8a247e588efb90d528015775",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e90ee19b538abef8a247e588efb90d528015775"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ef5f598ca6483ff965047df7f7e8697a70860527",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef5f598ca6483ff965047df7f7e8697a70860527",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ef5f598ca6483ff965047df7f7e8697a70860527",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef5f598ca6483ff965047df7f7e8697a70860527/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe1f847d9a73c090527d2620eb9883185351aea0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe1f847d9a73c090527d2620eb9883185351aea0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe1f847d9a73c090527d2620eb9883185351aea0"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 28,
    "deletions": 39
  },
  "files": [
    {
      "sha": "3efdb5d05e8ff620d24805c901836ca2e8ffb196",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ef5f598ca6483ff965047df7f7e8697a70860527",
      "patch": "@@ -1,3 +1,14 @@\n+2021-05-26  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (allocate_type_unit_groups_table)\n+\t(handle_DW_AT_stmt_list, allocate_dwo_file_hash_table): Use\n+\thtab_delete_entry.\n+\t(free_line_header_voidp): Remove.\n+\t* completer.c\n+\t(completion_tracker::completion_hash_entry::deleter): Remove.\n+\t(completion_tracker::discard_completions): Use htab_delete_entry.\n+\t* utils.h (htab_delete_entry): New template function.\n+\n 2021-05-24  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* python/py-tui.c (tui_py_window::refresh_window):"
    },
    {
      "sha": "060160f17faed5028386978fed6fc597e34841a6",
      "filename": "gdb/completer.c",
      "status": "modified",
      "additions": 5,
      "deletions": 12,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/completer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/completer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/completer.c?ref=ef5f598ca6483ff965047df7f7e8697a70860527",
      "patch": "@@ -88,14 +88,6 @@ class completion_tracker::completion_hash_entry\n     return htab_hash_string (m_name.get ());\n   }\n \n-  /* A static function that can be passed to the htab hash system to be\n-     used as a callback that deletes an item from the hash.  */\n-  static void deleter (void *arg)\n-  {\n-    completion_hash_entry *entry = (completion_hash_entry *) arg;\n-    delete entry;\n-  }\n-\n private:\n \n   /* The symbol name stored in this hash entry.  */\n@@ -1618,10 +1610,11 @@ completion_tracker::discard_completions ()\n \treturn entry->hash_name ();\n       };\n \n-  m_entries_hash.reset (htab_create_alloc (INITIAL_COMPLETION_HTAB_SIZE,\n-\t\t\t\t\t   entry_hash_func, entry_eq_func,\n-\t\t\t\t\t   completion_hash_entry::deleter,\n-\t\t\t\t\t   xcalloc, xfree));\n+  m_entries_hash.reset\n+    (htab_create_alloc (INITIAL_COMPLETION_HTAB_SIZE,\n+\t\t\tentry_hash_func, entry_eq_func,\n+\t\t\thtab_delete_entry<completion_hash_entry>,\n+\t\t\txcalloc, xfree));\n }\n \n /* See completer.h.  */"
    },
    {
      "sha": "d3b5b89c1c3282a967e27d46d9b6b4259aefd5f6",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 27,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=ef5f598ca6483ff965047df7f7e8697a70860527",
      "patch": "@@ -1571,8 +1571,6 @@ typedef std::unique_ptr<struct dwo_file> dwo_file_up;\n static void process_cu_includes (dwarf2_per_objfile *per_objfile);\n \n static void check_producer (struct dwarf2_cu *cu);\n-\n-static void free_line_header_voidp (void *arg);\n \f\n /* Various complaints about symbol reading that don't abort the process.  */\n \n@@ -6739,12 +6737,7 @@ allocate_type_unit_groups_table ()\n   return htab_up (htab_create_alloc (3,\n \t\t\t\t     hash_type_unit_group,\n \t\t\t\t     eq_type_unit_group,\n-\t\t\t\t     [] (void *arg)\n-\t\t\t\t     {\n-\t\t\t\t       type_unit_group *grp\n-\t\t\t\t\t = (type_unit_group *) arg;\n-\t\t\t\t       delete grp;\n-\t\t\t\t     },\n+\t\t\t\t     htab_delete_entry<type_unit_group>,\n \t\t\t\t     xcalloc, xfree));\n }\n \n@@ -10431,7 +10424,7 @@ handle_DW_AT_stmt_list (struct die_info *die, struct dwarf2_cu *cu,\n       per_objfile->line_header_hash\n \t.reset (htab_create_alloc (127, line_header_hash_voidp,\n \t\t\t\t   line_header_eq_voidp,\n-\t\t\t\t   free_line_header_voidp,\n+\t\t\t\t   htab_delete_entry<line_header>,\n \t\t\t\t   xcalloc, xfree));\n     }\n \n@@ -10762,17 +10755,10 @@ eq_dwo_file (const void *item_lhs, const void *item_rhs)\n static htab_up\n allocate_dwo_file_hash_table ()\n {\n-  auto delete_dwo_file = [] (void *item)\n-    {\n-      struct dwo_file *dwo_file = (struct dwo_file *) item;\n-\n-      delete dwo_file;\n-    };\n-\n   return htab_up (htab_create_alloc (41,\n \t\t\t\t     hash_dwo_file,\n \t\t\t\t     eq_dwo_file,\n-\t\t\t\t     delete_dwo_file,\n+\t\t\t\t     htab_delete_entry<dwo_file>,\n \t\t\t\t     xcalloc, xfree));\n }\n \n@@ -20513,16 +20499,6 @@ die_specification (struct die_info *die, struct dwarf2_cu **spec_cu)\n     return follow_die_ref (die, spec_attr, spec_cu);\n }\n \n-/* Stub for free_line_header to match void * callback types.  */\n-\n-static void\n-free_line_header_voidp (void *arg)\n-{\n-  struct line_header *lh = (struct line_header *) arg;\n-\n-  delete lh;\n-}\n-\n /* A convenience function to find the proper .debug_line section for a CU.  */\n \n static struct dwarf2_section_info *"
    },
    {
      "sha": "f05e6627dcaa39dca88a76b461ace926f20d2fd8",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef5f598ca6483ff965047df7f7e8697a70860527/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=ef5f598ca6483ff965047df7f7e8697a70860527",
      "patch": "@@ -306,6 +306,15 @@ struct htab_deleter\n /* A unique_ptr wrapper for htab_t.  */\n typedef std::unique_ptr<htab, htab_deleter> htab_up;\n \n+/* A wrapper for 'delete' that can used as a hash table entry deletion\n+   function.  */\n+template<typename T>\n+void\n+htab_delete_entry (void *ptr)\n+{\n+  delete (T *) ptr;\n+}\n+\n extern void init_page_info (void);\n \n /* Temporarily set BATCH_FLAG and the associated unlimited terminal size."
    }
  ]
}