{
  "sha": "00894ecf4636a242fbd11536acdf50f7891b374a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDA4OTRlY2Y0NjM2YTI0MmZiZDExNTM2YWNkZjUwZjc4OTFiMzc0YQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-30T17:54:45Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-08-30T17:58:20Z"
    },
    "message": "gdb: fix build error in unittests/parallel-for-selftests.c\n\nWe get this error when building GDB on some platforms.  I get it using\ng++-10 on Ubuntu 20.04 (installed using the distro package).  It was\nalso reported by John Baldwin, using a clang that uses libc++.\n\n      CXX    unittests/parallel-for-selftests.o\n    cc1plus: warning: command line option '-Wmissing-prototypes' is valid for C/ObjC but not for C++\n    /home/smarchi/src/binutils-gdb/gdb/unittests/parallel-for-selftests.c: In function 'void selftests::parallel_for::test(int)':\n    /home/smarchi/src/binutils-gdb/gdb/unittests/parallel-for-selftests.c:53:30: error: use of deleted function 'std::atomic<int>::atomic(const std::atomic<int>&)'\n       53 |   std::atomic<int> counter = 0;\n          |                              ^\n    In file included from /usr/include/c++/9/future:42,\n                     from /home/smarchi/src/binutils-gdb/gdb/../gdbsupport/thread-pool.h:29,\n                     from /home/smarchi/src/binutils-gdb/gdb/../gdbsupport/parallel-for.h:26,\n                     from /home/smarchi/src/binutils-gdb/gdb/unittests/parallel-for-selftests.c:22:\n    /usr/include/c++/9/atomic:755:7: note: declared here\n      755 |       atomic(const atomic&) = delete;\n          |       ^~~~~~\n    /usr/include/c++/9/atomic:759:17: note:   after user-defined conversion: 'constexpr std::atomic<int>::atomic(std::atomic<int>::__integral_type)'\n      759 |       constexpr atomic(__integral_type __i) noexcept : __base_type(__i) { }\n          |                 ^~~~~~\n\nI haven't dug to know why it does not happen everywhere, but this patch\nfixes it by using the constructor to initialize the variable, rather\nthan the assignment operator.\n\nChange-Id: I6b27958171bf6187f6a875657395fd10441db7e6",
    "tree": {
      "sha": "73326f07f190d5d806912bcbd49d7ed16fe108b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/73326f07f190d5d806912bcbd49d7ed16fe108b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/00894ecf4636a242fbd11536acdf50f7891b374a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00894ecf4636a242fbd11536acdf50f7891b374a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/00894ecf4636a242fbd11536acdf50f7891b374a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00894ecf4636a242fbd11536acdf50f7891b374a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "685bb4e84bafaa5d9506cdacaf2766638bbbc560",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/685bb4e84bafaa5d9506cdacaf2766638bbbc560",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/685bb4e84bafaa5d9506cdacaf2766638bbbc560"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 1,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a2cd47251ebb3d460b194a9ea76753635a46076c",
      "filename": "gdb/unittests/parallel-for-selftests.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00894ecf4636a242fbd11536acdf50f7891b374a/gdb/unittests/parallel-for-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00894ecf4636a242fbd11536acdf50f7891b374a/gdb/unittests/parallel-for-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/parallel-for-selftests.c?ref=00894ecf4636a242fbd11536acdf50f7891b374a",
      "patch": "@@ -50,7 +50,7 @@ test (int n_threads)\n \n #define NUMBER 10000\n \n-  std::atomic<int> counter = 0;\n+  std::atomic<int> counter (0);\n   gdb::parallel_for_each (0, NUMBER,\n \t\t\t  [&] (int start, int end)\n \t\t\t  {"
    }
  ]
}