{
  "sha": "a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTQzYjI5YzkwZDhlZmExMDEzY2I0YjZiYzQ5YmI3OGRlNWU3OTc4NA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-20T16:17:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-11-20T16:19:19Z"
    },
    "message": "gdb: fix dwarf2/read.c build on solaris\n\nWhen building on solaris (gcc farm machine gcc211), I get:\n\n      CXX    dwarf2/read.o\n    /export/home/simark/src/binutils-gdb/gdb/dwarf2/read.c: In function 'void finish_fixed_point_type(type*, die_info*, dwarf2_cu*)':\n    /export/home/simark/src/binutils-gdb/gdb/dwarf2/read.c:18204:42: error: call of overloaded 'abs(LONGEST&)' is ambiguous\n           *num_or_denom = 1 << abs (scale_exp);\n                                              ^\n    In file included from /usr/include/stdlib.h:11:0,\n                     from ../gnulib/import/stdlib.h:36,\n                     from /opt/csw/include/c++/5.5.0/cstdlib:72,\n                     from /export/home/simark/src/binutils-gdb/gdb/../gdbsupport/common-defs.h:90,\n                     from /export/home/simark/src/binutils-gdb/gdb/defs.h:28,\n                     from /export/home/simark/src/binutils-gdb/gdb/dwarf2/read.c:31:\n    /opt/csw/lib/gcc/sparc-sun-solaris2.10/5.5.0/include-fixed/iso/stdlib_iso.h:163:16: note: candidate: long int std::abs(long int)\n      inline long   abs(long _l) { return labs(_l); }\n                    ^\n    /opt/csw/lib/gcc/sparc-sun-solaris2.10/5.5.0/include-fixed/iso/stdlib_iso.h:117:12: note: candidate: int std::abs(int)\n     extern int abs(int);\n                ^\n\nI don't know why, but using std::abs instead of just abs fixes it.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (finish_fixed_point_type): Use std::abs instead\n\tof abs.\n\nChange-Id: I57b9098351f2a8b2d2f61e848b97f7b2dfe55908",
    "tree": {
      "sha": "522bb10f51a7533b30d55429c44c60d38ef89de5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/522bb10f51a7533b30d55429c44c60d38ef89de5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a43b29c90d8efa1013cb4b6bc49bb78de5e79784/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "14f62a099a0287c858ac7f4882e88736c11ed1cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14f62a099a0287c858ac7f4882e88736c11ed1cc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/14f62a099a0287c858ac7f4882e88736c11ed1cc"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "91068603e7c92d11ffd590b5959e68b8d3033a5a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a43b29c90d8efa1013cb4b6bc49bb78de5e79784/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a43b29c90d8efa1013cb4b6bc49bb78de5e79784/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-20  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.c (finish_fixed_point_type): Use std::abs instead\n+\tof abs.\n+\n 2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctfread.c (elfctf_build_psymtabs): Use ctf_dict_open, not"
    },
    {
      "sha": "f8797537108329823572c301e29e7d85d8cf50a0",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a43b29c90d8efa1013cb4b6bc49bb78de5e79784/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a43b29c90d8efa1013cb4b6bc49bb78de5e79784/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=a43b29c90d8efa1013cb4b6bc49bb78de5e79784",
      "patch": "@@ -18201,14 +18201,14 @@ finish_fixed_point_type (struct type *type, struct die_info *die,\n       LONGEST scale_exp = attr->constant_value (0);\n       ULONGEST *num_or_denom = scale_exp > 0 ? &scale_num : &scale_denom;\n \n-      *num_or_denom = 1 << abs (scale_exp);\n+      *num_or_denom = 1 << std::abs (scale_exp);\n     }\n   else if (attr->name == DW_AT_decimal_scale)\n     {\n       LONGEST scale_exp = attr->constant_value (0);\n       ULONGEST *num_or_denom = scale_exp > 0 ? &scale_num : &scale_denom;\n \n-      *num_or_denom = uinteger_pow (10, abs (scale_exp));\n+      *num_or_denom = uinteger_pow (10, std::abs (scale_exp));\n     }\n   else if (attr->name == DW_AT_small)\n     {"
    }
  ]
}