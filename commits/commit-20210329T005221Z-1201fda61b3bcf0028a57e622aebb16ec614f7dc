{
  "sha": "1201fda61b3bcf0028a57e622aebb16ec614f7dc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTIwMWZkYTYxYjNiY2YwMDI4YTU3ZTYyMmFlYmIxNmVjNjE0ZjdkYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-28T23:11:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-03-29T00:52:21Z"
    },
    "message": "hash table iterator callback functions int vs. bfd_boolean\n\nCorrect return type of callbacks invoked by htab_traverse and other\nhashtab.h functions to int, and one case of a callback invoked by\nelf_link_hash_traverse to bfd_boolean.\n\n\t* elf32-i386.c (elf_i386_finish_local_dynamic_symbol): Return int.\n\t* elf64-ia64-vms.c (elf64_ia64_local_dyn_info_free): Likewise.\n\t(elf64_ia64_local_dyn_sym_thunk): Likewise.\n\t* elf64-x86-64.c (elf_x86_64_finish_local_dynamic_symbol): Likewise.\n\t* elfnn-aarch64.c (elfNN_aarch64_allocate_local_ifunc_dynrelocs),\n\t(elfNN_aarch64_finish_local_dynamic_symbol): Likewise.\n\t* elfnn-ia64.c (elfNN_ia64_local_dyn_info_free): Likewise.\n\t(elfNN_ia64_local_dyn_sym_thunk): Likewise.\n\t* elfnn-riscv.c (allocate_local_ifunc_dynrelocs): Likewise.\n\t(riscv_pcrel_reloc_eq): Likewise.\n\t(riscv_elf_finish_local_dynamic_symbol): Likewise.\n\t* elfxx-sparc.c (allocate_local_dynrelocs): Likewise.\n\t(finish_local_dynamic_symbol): Likewise.\n\t* elfxx-x86.c (elf_x86_allocate_local_dynreloc): Likewise.\n\t* elfxx-mips.c (mips_elf_resolve_got_page_ref): Likewise.\n\t(mips_elf_count_got_symbols): Change return type to bfd_boolean.",
    "tree": {
      "sha": "d412f7aa757a5f02b941a8879457b889355ff226",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d412f7aa757a5f02b941a8879457b889355ff226"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1201fda61b3bcf0028a57e622aebb16ec614f7dc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1201fda61b3bcf0028a57e622aebb16ec614f7dc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1201fda61b3bcf0028a57e622aebb16ec614f7dc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1201fda61b3bcf0028a57e622aebb16ec614f7dc/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "37bb890f814d58dd4c5f67db32ea4618008229ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37bb890f814d58dd4c5f67db32ea4618008229ee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/37bb890f814d58dd4c5f67db32ea4618008229ee"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 35,
    "deletions": 16
  },
  "files": [
    {
      "sha": "398def06eb3859431bfef6279640545aa8ba1dc8",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -1,3 +1,22 @@\n+2021-03-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf32-i386.c (elf_i386_finish_local_dynamic_symbol): Return int.\n+\t* elf64-ia64-vms.c (elf64_ia64_local_dyn_info_free): Likewise.\n+\t(elf64_ia64_local_dyn_sym_thunk): Likewise.\n+\t* elf64-x86-64.c (elf_x86_64_finish_local_dynamic_symbol): Likewise.\n+\t* elfnn-aarch64.c (elfNN_aarch64_allocate_local_ifunc_dynrelocs),\n+\t(elfNN_aarch64_finish_local_dynamic_symbol): Likewise.\n+\t* elfnn-ia64.c (elfNN_ia64_local_dyn_info_free): Likewise.\n+\t(elfNN_ia64_local_dyn_sym_thunk): Likewise.\n+\t* elfnn-riscv.c (allocate_local_ifunc_dynrelocs): Likewise.\n+\t(riscv_pcrel_reloc_eq): Likewise.\n+\t(riscv_elf_finish_local_dynamic_symbol): Likewise.\n+\t* elfxx-sparc.c (allocate_local_dynrelocs): Likewise.\n+\t(finish_local_dynamic_symbol): Likewise.\n+\t* elfxx-x86.c (elf_x86_allocate_local_dynreloc): Likewise.\n+\t* elfxx-mips.c (mips_elf_resolve_got_page_ref): Likewise.\n+\t(mips_elf_count_got_symbols): Change return type to bfd_boolean.\n+\n 2021-03-29  Alan Modra  <amodra@gmail.com>\n \n \t* elflink.c (elf_link_output_symstrtab): Make flinfo parameter"
    },
    {
      "sha": "ccbf2d6d0e6163bcf49801ccaa4816feb673d853",
      "filename": "bfd/elf32-i386.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf32-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf32-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-i386.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -3918,7 +3918,7 @@ elf_i386_finish_dynamic_symbol (bfd *output_bfd,\n /* Finish up local dynamic symbol handling.  We set the contents of\n    various dynamic sections here.  */\n \n-static bfd_boolean\n+static int\n elf_i386_finish_local_dynamic_symbol (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h"
    },
    {
      "sha": "617ecfe5d08831b07bb51a0b6c56ddb1bd46457d",
      "filename": "bfd/elf64-ia64-vms.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf64-ia64-vms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf64-ia64-vms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ia64-vms.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -1010,7 +1010,7 @@ elf64_ia64_global_dyn_info_free (void **xentry,\n \n /* Free the local elf64_ia64_dyn_sym_info array.  */\n \n-static bfd_boolean\n+static int\n elf64_ia64_local_dyn_info_free (void **slot,\n \t\t\t\tvoid * unused ATTRIBUTE_UNUSED)\n {\n@@ -1111,7 +1111,7 @@ elf64_ia64_global_dyn_sym_thunk (struct bfd_hash_entry *xentry,\n   return TRUE;\n }\n \n-static bfd_boolean\n+static int\n elf64_ia64_local_dyn_sym_thunk (void **slot, void * xdata)\n {\n   struct elf64_ia64_local_hash_entry *entry"
    },
    {
      "sha": "5edbb7084ad31be07c617e5dbb712cc845c2e839",
      "filename": "bfd/elf64-x86-64.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf64-x86-64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elf64-x86-64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-x86-64.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -4574,7 +4574,7 @@ elf_x86_64_finish_dynamic_symbol (bfd *output_bfd,\n /* Finish up local dynamic symbol handling.  We set the contents of\n    various dynamic sections here.  */\n \n-static bfd_boolean\n+static int\n elf_x86_64_finish_local_dynamic_symbol (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h"
    },
    {
      "sha": "3ec0983caff0c40a6730549df43fe3e6152360d2",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -8828,7 +8828,7 @@ elfNN_aarch64_allocate_ifunc_dynrelocs (struct elf_link_hash_entry *h,\n /* Allocate space in .plt, .got and associated reloc sections for\n    local ifunc dynamic relocs.  */\n \n-static bfd_boolean\n+static int\n elfNN_aarch64_allocate_local_ifunc_dynrelocs (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h\n@@ -9475,7 +9475,7 @@ elfNN_aarch64_finish_dynamic_symbol (bfd *output_bfd,\n /* Finish up local dynamic symbol handling.  We set the contents of\n    various dynamic sections here.  */\n \n-static bfd_boolean\n+static int\n elfNN_aarch64_finish_local_dynamic_symbol (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h"
    },
    {
      "sha": "04bf7d7f25ad4588977c635dbe170e63a572b09b",
      "filename": "bfd/elfnn-ia64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-ia64.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -1408,7 +1408,7 @@ elfNN_ia64_global_dyn_info_free (void **xentry,\n \n /* Free the local elfNN_ia64_dyn_sym_info array.  */\n \n-static bfd_boolean\n+static int\n elfNN_ia64_local_dyn_info_free (void **slot,\n \t\t\t\tvoid * unused ATTRIBUTE_UNUSED)\n {\n@@ -1507,7 +1507,7 @@ elfNN_ia64_global_dyn_sym_thunk (struct bfd_hash_entry *xentry,\n   return TRUE;\n }\n \n-static bfd_boolean\n+static int\n elfNN_ia64_local_dyn_sym_thunk (void **slot, void * xdata)\n {\n   struct elfNN_ia64_local_hash_entry *entry"
    },
    {
      "sha": "391846aaa69368d0da5df9f3271a5339ea370dc4",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -1352,7 +1352,7 @@ allocate_ifunc_dynrelocs (struct elf_link_hash_entry *h,\n /* Allocate space in .plt, .got and associated reloc sections for\n    local ifunc dynamic relocs.  */\n \n-static bfd_boolean\n+static int\n allocate_local_ifunc_dynrelocs (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h\n@@ -1766,7 +1766,7 @@ riscv_pcrel_reloc_hash (const void *entry)\n   return (hashval_t)(e->address >> 2);\n }\n \n-static bfd_boolean\n+static int\n riscv_pcrel_reloc_eq (const void *entry1, const void *entry2)\n {\n   const riscv_pcrel_hi_reloc *e1 = entry1, *e2 = entry2;\n@@ -3110,7 +3110,7 @@ riscv_elf_finish_dynamic_symbol (bfd *output_bfd,\n /* Finish up local dynamic symbol handling.  We set the contents of\n    various dynamic sections here.  */\n \n-static bfd_boolean\n+static int\n riscv_elf_finish_local_dynamic_symbol (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h = (struct elf_link_hash_entry *) *slot;"
    },
    {
      "sha": "07a233ff9202b907c85100fbd7101f658a8cf514",
      "filename": "bfd/elfxx-mips.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -4362,7 +4362,7 @@ mips_elf_record_got_page_entry (struct mips_elf_traverse_got_arg *arg,\n    whether the page reference described by *REFP needs a GOT page entry,\n    and record that entry in DATA->g if so.  Set DATA->g to null on failure.  */\n \n-static bfd_boolean\n+static int\n mips_elf_resolve_got_page_ref (void **refp, void *data)\n {\n   struct mips_got_page_ref *ref;\n@@ -4530,7 +4530,7 @@ mips_use_local_got_p (struct bfd_link_info *info,\n    Count the number of global symbols that are in the primary GOT only\n    because they have relocations against them (reloc_only_gotno).  */\n \n-static int\n+static bfd_boolean\n mips_elf_count_got_symbols (struct mips_elf_link_hash_entry *h, void *data)\n {\n   struct bfd_link_info *info;"
    },
    {
      "sha": "f2ef9a34499cc2d121cbb5d3c036d7d1ed51e284",
      "filename": "bfd/elfxx-sparc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-sparc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-sparc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-sparc.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -2345,7 +2345,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void * inf)\n /* Allocate space in .plt, .got and associated reloc sections for\n    local dynamic relocs.  */\n \n-static bfd_boolean\n+static int\n allocate_local_dynrelocs (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h\n@@ -4658,7 +4658,7 @@ sparc_vxworks_finish_shared_plt (bfd *output_bfd, struct bfd_link_info *info)\n /* Finish up local dynamic symbol handling.  We set the contents of\n    various dynamic sections here.  */\n \n-static bfd_boolean\n+static int\n finish_local_dynamic_symbol (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h"
    },
    {
      "sha": "81c1e5c7fa6ba442a80c3066c55c79e4304bd1ea",
      "filename": "bfd/elfxx-x86.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-x86.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201fda61b3bcf0028a57e622aebb16ec614f7dc/bfd/elfxx-x86.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.c?ref=1201fda61b3bcf0028a57e622aebb16ec614f7dc",
      "patch": "@@ -534,7 +534,7 @@ elf_x86_allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n /* Allocate space in .plt, .got and associated reloc sections for\n    local dynamic relocs.  */\n \n-static bfd_boolean\n+static int\n elf_x86_allocate_local_dynreloc (void **slot, void *inf)\n {\n   struct elf_link_hash_entry *h"
    }
  ]
}