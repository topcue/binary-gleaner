{
  "sha": "1889da7048b310151d142b100678b6bd6053b548",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTg4OWRhNzA0OGIzMTAxNTFkMTQyYjEwMDY3OGI2YmQ2MDUzYjU0OA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T10:46:54Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-04-15T11:31:34Z"
    },
    "message": "[binutils, ARM, 10/16] BFCSEL infrastructure with new global reloc R_ARM_THM_BF12\n\nThis patch is part of a series of patches to add support for Armv8.1-M Mainline\ninstructions to binutils.\nThis adds infrastructure for the BFCSEL instructions which is one of the first\ninstructions in Arm that have more than one relocations in them.\n\nThis adds a new relocation R_ARM_THM_BF12.\n\nThe inconsistency between external R_ARM_THM_BF12 and internal\nBFD_RELOC_ARM_THUMB_BF13 is because internally we count the static bit-0 of the\nimmediate and we don't externally.\n\nChangeLog entries are as follows :\n\nChangeLog entries are as follows :\n\n*** bfd/ChnageLog ***\n\n2019-04-04  Sudakshina Das  <sudi.das@arm.com>\n\n\t* reloc.c (BFD_RELOC_ARM_THUMB_BF13): New.\n\t* bfd-in2.h: Regenerated.\n\t* libbfd.h: Regenerated.\n\t* elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF13.\n\t(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF13\n\tand R_ARM_THM_BF12 together.\n\t(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF13.\n\n*** elfcpp/ChangeLog ***\n\n2019-04-04  Sudakshina Das  <sudi.das@arm.com>\n\n\t* arm.h (R_ARM_THM_BF12): New relocation code.\n\n*** gas/ChangeLog ***\n\n2019-04-04  Sudakshina Das  <sudi.das@arm.com>\n\n\t* config/tc-arm.c (md_pcrel_from_section): New switch case for\n\tBFD_RELOC_ARM_THUMB_BF13.\n\t(md_appdy_fix): Likewise.\n\t(tc_gen_reloc): Likewise.\n\n*** include/ChangeLog ***\n\n2019-04-04  Sudakshina Das  <sudi.das@arm.com>\n\n\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.\n\n*** opcodes/ChangeLog ***\n\n2019-04-04  Sudakshina Das  <sudi.das@arm.com>\n\n\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.",
    "tree": {
      "sha": "e0e8d1d48cd6814f4c10ea01da58235a3c81728b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e0e8d1d48cd6814f4c10ea01da58235a3c81728b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1889da7048b310151d142b100678b6bd6053b548",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1889da7048b310151d142b100678b6bd6053b548",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1889da7048b310151d142b100678b6bd6053b548",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1889da7048b310151d142b100678b6bd6053b548/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "65d1bc05e89e45b102783422c3984ed718547d5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65d1bc05e89e45b102783422c3984ed718547d5c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/65d1bc05e89e45b102783422c3984ed718547d5c"
    }
  ],
  "stats": {
    "total": 153,
    "additions": 152,
    "deletions": 1
  },
  "files": [
    {
      "sha": "88ca61e413b49630b651cbbf7424b5e4437e94df",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* reloc.c (BFD_RELOC_ARM_THUMB_BF13): New.\n+\t* bfd-in2.h: Regenerated.\n+\t* libbfd.h: Regenerated.\n+\t* elf32-arm.c (elf32_arm_howto_table_1): New entry for R_ARM_THM_BF13.\n+\t(elf32_arm_reloc_map elf32_arm_reloc_map): Map BFD_RELOC_ARM_THUMB_BF13\n+\tand R_ARM_THM_BF12 together.\n+\t(elf32_arm_final_link_relocate): New switch case for R_ARM_THM_BF13.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* reloc.c (BFD_RELOC_ARM_THUMB_BF19): New"
    },
    {
      "sha": "95d66b586d608ea397121f9124f24b0f2e9a9307",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -3570,6 +3570,9 @@ field in the instruction.  */\n /* ARM 17-bit pc-relative branch for Branch Future instructions.  */\n   BFD_RELOC_ARM_THUMB_BF17,\n \n+/* ARM 13-bit pc-relative branch for BFCSEL instruction.  */\n+  BFD_RELOC_ARM_THUMB_BF13,\n+\n /* ARM 19-bit pc-relative branch for Branch Future Link instruction.  */\n   BFD_RELOC_ARM_THUMB_BF19,\n "
    },
    {
      "sha": "337961d26e16c6458f41d54b2e8dbe6891a5017c",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 59,
      "deletions": 1,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1756,7 +1756,19 @@ static reloc_howto_type elf32_arm_howto_table_1[] =\n \t 0x001f0ffe,\t\t/* src_mask.  */\n \t 0x001f0ffe,\t\t/* dst_mask.  */\n \t TRUE),\t\t\t/* pcrel_offset.  */\n-  EMPTY_HOWTO (137),\n+  HOWTO (R_ARM_THM_BF12,\t/* type.  */\n+\t 0,\t\t\t/* rightshift.  */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long).  */\n+\t 12,\t\t\t/* bitsize.  */\n+\t TRUE,\t\t\t/* pc_relative.  */\n+\t 0,\t\t\t/* bitpos.  */\n+\t complain_overflow_dont,/* do not complain_on_overflow.  */\n+\t bfd_elf_generic_reloc,\t/* special_function.  */\n+\t \"R_ARM_THM_BF12\",\t/* name.  */\n+\t FALSE,\t\t\t/* partial_inplace.  */\n+\t 0x00010ffe,\t\t/* src_mask.  */\n+\t 0x00010ffe,\t\t/* dst_mask.  */\n+\t TRUE),\t\t\t/* pcrel_offset.  */\n   HOWTO (R_ARM_THM_BF18,\t/* type.  */\n \t 0,\t\t\t/* rightshift.  */\n \t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long).  */\n@@ -2083,6 +2095,7 @@ static const struct elf32_arm_reloc_map elf32_arm_reloc_map[] =\n     {BFD_RELOC_ARM_THUMB_ALU_ABS_G1_NC, R_ARM_THM_ALU_ABS_G1_NC},\n     {BFD_RELOC_ARM_THUMB_ALU_ABS_G0_NC, R_ARM_THM_ALU_ABS_G0_NC},\n     {BFD_RELOC_ARM_THUMB_BF17, R_ARM_THM_BF16},\n+    {BFD_RELOC_ARM_THUMB_BF13, R_ARM_THM_BF12},\n     {BFD_RELOC_ARM_THUMB_BF19, R_ARM_THM_BF18}\n   };\n \n@@ -12984,6 +12997,51 @@ elf32_arm_final_link_relocate (reloc_howto_type *\t    howto,\n \treturn bfd_reloc_ok;\n       }\n \n+    case R_ARM_THM_BF12:\n+      {\n+\tbfd_vma relocation;\n+\tbfd_vma upper_insn = bfd_get_16 (input_bfd, hit_data);\n+\tbfd_vma lower_insn = bfd_get_16 (input_bfd, hit_data + 2);\n+\n+\tif (globals->use_rel)\n+\t  {\n+\t    bfd_vma immA  = (upper_insn & 0x0001);\n+\t    bfd_vma immB  = (lower_insn & 0x07fe) >> 1;\n+\t    bfd_vma immC  = (lower_insn & 0x0800) >> 11;\n+\t    addend  = (immA << 12);\n+\t    addend |= (immB << 2);\n+\t    addend |= (immC << 1);\n+\t    addend |= 1;\n+\t    /* Sign extend.  */\n+\t    addend = (addend & 0x1000) ? addend - (1 << 13) : addend;\n+\t  }\n+\n+\tvalue = get_value_helper (plt_offset, splt, input_section, sym_sec, h,\n+\t\t\t\t  info, input_bfd, rel, sym_name, st_type,\n+\t\t\t\t  globals, unresolved_reloc_p);\n+\n+\trelocation  = value + addend;\n+\trelocation -= (input_section->output_section->vma\n+\t\t       + input_section->output_offset\n+\t\t       + rel->r_offset);\n+\n+\t/* Put RELOCATION back into the insn.  */\n+\t{\n+\t  bfd_vma immA = (relocation & 0x00001000) >> 12;\n+\t  bfd_vma immB = (relocation & 0x00000ffc) >> 2;\n+\t  bfd_vma immC = (relocation & 0x00000002) >> 1;\n+\n+\t  upper_insn = (upper_insn & 0xfffe) | immA;\n+\t  lower_insn = (lower_insn & 0xf001) | (immC << 11) | (immB << 1);\n+\t}\n+\n+\t/* Put the relocated value back in the object file:  */\n+\tbfd_put_16 (input_bfd, upper_insn, hit_data);\n+\tbfd_put_16 (input_bfd, lower_insn, hit_data + 2);\n+\n+\treturn bfd_reloc_ok;\n+      }\n+\n     case R_ARM_THM_BF18:\n       {\n \tbfd_vma relocation;"
    },
    {
      "sha": "b3d71d976a437454593dde7afb7c0d8e368c56ca",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1531,6 +1531,7 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_ARM_PCREL_JUMP\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH5\",\n   \"BFD_RELOC_ARM_THUMB_BF17\",\n+  \"BFD_RELOC_ARM_THUMB_BF13\",\n   \"BFD_RELOC_ARM_THUMB_BF19\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH7\",\n   \"BFD_RELOC_THUMB_PCREL_BRANCH9\","
    },
    {
      "sha": "c41b2fe75d10e9441cd38861b2f6f02f546f6a64",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -3024,6 +3024,11 @@ ENUM\n ENUMDOC\n   ARM 17-bit pc-relative branch for Branch Future instructions.\n \n+ENUM\n+  BFD_RELOC_ARM_THUMB_BF13\n+ENUMDOC\n+  ARM 13-bit pc-relative branch for BFCSEL instruction.\n+\n ENUM\n   BFD_RELOC_ARM_THUMB_BF19\n ENUMDOC"
    },
    {
      "sha": "aa8aa74822d2d4e93e47214e532735b546dc4006",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm.h (R_ARM_THM_BF12): New relocation code.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* arm.h (R_ARM_THM_BF18): New relocation code."
    },
    {
      "sha": "19048658ece500ef4406972a453d79d283a4e805",
      "filename": "elfcpp/arm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/elfcpp/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/elfcpp/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/arm.h?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -197,6 +197,7 @@ enum\n   // 131 - 135\t\t\tUnallocated\n   // Relocations for Armv8.1-M Mainline (BF/BFL)\n   R_ARM_THM_BF16 = 136,\t\t// Static       Thumb32 ((S + A) | T) \u2013 P\n+  R_ARM_THM_BF12 = 137,\t\t// Static       Thumb32 ((S + A) | T) \u2013 P\n   R_ARM_THM_BF18 = 138,\t\t// Static       Thumb32 ((S + A) | T) \u2013 P\n   // 139\t\t\tUnallocated\n   // 140 - 159\t\t\tDynamic\t\tReserved for future allocation"
    },
    {
      "sha": "6af144fc486fbae8bfb7ee5d100653a900617c1a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* config/tc-arm.c (md_pcrel_from_section): New switch case for\n+\tBFD_RELOC_ARM_THUMB_BF13.\n+\t(md_appdy_fix): Likewise.\n+\t(tc_gen_reloc): Likewise.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n             Andre Vieira  <andre.simoesdiasvieira@arm.com>\n "
    },
    {
      "sha": "5d7f2c0a6d4d7834038b92d6c4256cee7e69ed4c",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -22946,6 +22946,7 @@ md_pcrel_from_section (fixS * fixP, segT seg)\n     case BFD_RELOC_THUMB_PCREL_BRANCH25:\n     case BFD_RELOC_ARM_THUMB_BF17:\n     case BFD_RELOC_ARM_THUMB_BF19:\n+    case BFD_RELOC_ARM_THUMB_BF13:\n       return base + 4;\n \n     case BFD_RELOC_THUMB_PCREL_BRANCH23:\n@@ -24909,6 +24910,39 @@ md_apply_fix (fixS *\tfixP,\n \t}\n       break;\n \n+    case BFD_RELOC_ARM_THUMB_BF13:\n+      if (fixP->fx_addsy\n+\t  && (S_GET_SEGMENT (fixP->fx_addsy) == seg)\n+\t  && !S_FORCE_RELOC (fixP->fx_addsy, TRUE)\n+\t  && ARM_IS_FUNC (fixP->fx_addsy)\n+\t  && ARM_CPU_HAS_FEATURE (selected_cpu, arm_ext_v8_1m_main))\n+\t{\n+\t  /* Force a relocation for a branch 13 bits wide.  */\n+\t  fixP->fx_done = 0;\n+\t}\n+\n+      if (v8_1_branch_value_check (value, 13, TRUE) == FAIL)\n+\tas_bad_where (fixP->fx_file, fixP->fx_line,\n+\t\t      BAD_BRANCH_OFF);\n+\n+      if (fixP->fx_done || !seg->use_rela_p)\n+\t{\n+\t  offsetT newval2;\n+\t  addressT immA, immB, immC;\n+\n+\t  immA = (value & 0x00001000) >> 12;\n+\t  immB = (value & 0x00000ffc) >> 2;\n+\t  immC = (value & 0x00000002) >> 1;\n+\n+\t  newval   = md_chars_to_number (buf, THUMB_SIZE);\n+\t  newval2  = md_chars_to_number (buf + THUMB_SIZE, THUMB_SIZE);\n+\t  newval  |= immA;\n+\t  newval2 |= (immC << 11) | (immB << 1);\n+\t  md_number_to_chars (buf, newval, THUMB_SIZE);\n+\t  md_number_to_chars (buf + THUMB_SIZE, newval2, THUMB_SIZE);\n+\t}\n+      break;\n+\n     case BFD_RELOC_ARM_V4BX:\n       /* This will need to go in the object file.  */\n       fixP->fx_done = 0;\n@@ -25093,6 +25127,7 @@ tc_gen_reloc (asection *section, fixS *fixp)\n     case BFD_RELOC_ARM_FUNCDESC:\n     case BFD_RELOC_ARM_THUMB_BF17:\n     case BFD_RELOC_ARM_THUMB_BF19:\n+    case BFD_RELOC_ARM_THUMB_BF13:\n       code = fixp->fx_r_type;\n       break;\n "
    },
    {
      "sha": "038a070f28542fa5738db8caeaa1698b06479cd6",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF12.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* elf/arm.h (START_RELOC_NUMBERS): New entry for R_ARM_THM_BF18."
    },
    {
      "sha": "9f22ffed2b5c664c72ff53fafdf9c074d1e126b9",
      "filename": "include/elf/arm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/include/elf/arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/include/elf/arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/arm.h?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -242,6 +242,7 @@ START_RELOC_NUMBERS (elf_arm_reloc_type)\n   RELOC_NUMBER (R_ARM_THM_ALU_ABS_G2_NC,134)\n   RELOC_NUMBER (R_ARM_THM_ALU_ABS_G3_NC,135)\n   RELOC_NUMBER (R_ARM_THM_BF16,\t\t136)\n+  RELOC_NUMBER (R_ARM_THM_BF12,\t\t137)\n   RELOC_NUMBER (R_ARM_THM_BF18,\t\t138)\n \n   RELOC_NUMBER (R_ARM_IRELATIVE,      \t160)"
    },
    {
      "sha": "69a191abf707bb79d4427a8948ee0818d4a3d6e1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (print_insn_thumb32): Updated to accept new %Z pattern.\n+\n 2019-04-15  Sudakshina Das  <sudi.das@arm.com>\n \n \t* arm-dis.c (thumb32_opcodes): New instruction bfl."
    },
    {
      "sha": "93e1efed8fb399eebed794db43cf24b02478211c",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1889da7048b310151d142b100678b6bd6053b548/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1889da7048b310151d142b100678b6bd6053b548/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=1889da7048b310151d142b100678b6bd6053b548",
      "patch": "@@ -2716,6 +2716,7 @@ static const struct opcode16 thumb_opcodes[] =\n        %G\t\tprint a fallback offset for Branch Future instructions\n        %W\t\tprint an offset for BF instruction\n        %Y\t\tprint an offset for BFL instruction\n+       %Z\t\tprint an offset for BFCSEL instruction\n        %b\t\tprint a conditional branch offset\n        %B\t\tprint an unconditional branch offset\n        %s\t\tprint the shift field of an SSAT instruction\n@@ -5918,6 +5919,23 @@ print_insn_thumb32 (bfd_vma pc, struct disassemble_info *info, long given)\n \t\t}\n \t\tbreak;\n \n+\t      case 'Z':\n+\t\t{\n+\t\t  unsigned int immA = (given & 0x00010000u) >> 16;\n+\t\t  unsigned int immB = (given & 0x000007feu) >> 1;\n+\t\t  unsigned int immC = (given & 0x00000800u) >> 11;\n+\t\t  bfd_vma offset = 0;\n+\n+\t\t  offset |= immA << 12;\n+\t\t  offset |= immB << 2;\n+\t\t  offset |= immC << 1;\n+\t\t  /* Sign extend.  */\n+\t\t  offset = (offset & 0x1000) ? offset - (1 << 13) : offset;\n+\n+\t\t  info->print_address_func (pc + 4 + offset, info);\n+\t\t}\n+\t\tbreak;\n+\n \t      case 'b':\n \t\t{\n \t\t  unsigned int S = (given & 0x04000000u) >> 26;"
    }
  ]
}