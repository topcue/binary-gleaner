{
  "sha": "e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTViOWIzOWY4ODcyZmEwMWVmYjljN2Y4Y2U3MjgzZmI5Y2Q1MTIyZA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-02-22T00:18:10Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-03-26T15:57:25Z"
    },
    "message": "target_is_non_stop_p and sync targets\n\ngdb.base/maint-target-async-off.exp fails if you test against\ngdbserver with \"maint set target-non-stop on\" forced.\n\n  (gdb) run\n  Starting program: build/gdb/testsuite/outputs/gdb.base/maint-target-async-off/maint-target-async-off\n\n  Breakpoint 1, main () at src/gdb/testsuite/gdb.base/maint-target-async-off.c:21\n  21        return 0;\n  (gdb) FAIL: gdb.base/maint-target-async-off.exp: continue until exit (timeout)\n\nAbove, GDB just stopped listening to stdin.\n\nBasically, GDB assumes that a target working in non-stop mode\noperation also supports async mode; it's a requirement.  GDB\nmisbehaves badly otherwise, and even hits failed assertions.\n\nFix this by making target_is_non_stop_p return false if async is off.\n\ngdb/ChangeLog:\n\n\t* target.c (target_always_non_stop_p): Also check whether the\n\ttarget can async.\n\nChange-Id: I7e52e1061396a5b9b02ada462f68a14b76d68974",
    "tree": {
      "sha": "608471a450639b33a4c3eac3fe91f137681aab3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/608471a450639b33a4c3eac3fe91f137681aab3b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bab287cdcfb47ac472da9e8d3c8db8b15880c12c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bab287cdcfb47ac472da9e8d3c8db8b15880c12c"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 10,
    "deletions": 4
  },
  "files": [
    {
      "sha": "7f60d3c01ab85cace737ef5fa74ca7fc603e5a17",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-26  Pedro Alves  <pedro@palves.net>\n+\n+\t* target.c (target_always_non_stop_p): Also check whether the\n+\ttarget can async.\n+\n 2021-03-26  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (dwarf2_read_debug_names)"
    },
    {
      "sha": "51832c52b6aff6ae8f0498ea16e3956b83168564",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=e5b9b39f8872fa01efb9c7f8ce7283fb9cd5122d",
      "patch": "@@ -4370,10 +4370,11 @@ target_always_non_stop_p (void)\n bool\n target_is_non_stop_p ()\n {\n-  return (non_stop\n-\t  || target_non_stop_enabled == AUTO_BOOLEAN_TRUE\n-\t  || (target_non_stop_enabled == AUTO_BOOLEAN_AUTO\n-\t      && target_always_non_stop_p ()));\n+  return ((non_stop\n+\t   || target_non_stop_enabled == AUTO_BOOLEAN_TRUE\n+\t   || (target_non_stop_enabled == AUTO_BOOLEAN_AUTO\n+\t       && target_always_non_stop_p ()))\n+\t  && target_can_async_p ());\n }\n \n /* See target.h.  */"
    }
  ]
}