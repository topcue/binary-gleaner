{
  "sha": "1c9f770d16a715662564d810a1c1efefd7a66540",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWM5Zjc3MGQxNmE3MTU2NjI1NjRkODEwYTFjMWVmZWZkN2E2NjU0MA==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-28T22:02:06Z"
    },
    "committer": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-09-29T12:08:51Z"
    },
    "message": "binutils: dwarf.c handle DWARF5 DW_LLE_start_end and DW_LLE_start_length.\n\ndisplay_loclists_list only handled DW_LLE_offset_pair as bounded\nlocation description. Also handle DW_LLE_start_end and DW_LLE_start_lenght.\nThese don't use the base_address.\n\nbinutils/ChangeLog:\n\n      * dwarf.c (display_loclists_list): Handle DW_LLE_start_end and\n      DW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.",
    "tree": {
      "sha": "3b897f79e96d21885f5e5435c2a8e65e32159a91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3b897f79e96d21885f5e5435c2a8e65e32159a91"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c9f770d16a715662564d810a1c1efefd7a66540",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c9f770d16a715662564d810a1c1efefd7a66540",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c9f770d16a715662564d810a1c1efefd7a66540",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c9f770d16a715662564d810a1c1efefd7a66540/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9aed480c3a725d3651d9035cba05c2daaeb5d7d0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9aed480c3a725d3651d9035cba05c2daaeb5d7d0"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 24,
    "deletions": 4
  },
  "files": [
    {
      "sha": "4838c80d31105d2d2b5d1a65abc0d77c44ae47af",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c9f770d16a715662564d810a1c1efefd7a66540/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c9f770d16a715662564d810a1c1efefd7a66540/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=1c9f770d16a715662564d810a1c1efefd7a66540",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-29  Mark Wielaard  <mark@klomp.org>\n+\n+\t* dwarf.c (display_loclists_list): Handle DW_LLE_start_end and\n+\tDW_LLE_start_length. Only add base_address for DW_LLE_offset_pair.\n+\n 2020-09-25  Alan Modra  <amodra@gmail.com>\n \n \t* elfcomm.c (byte_put_little_endian, byte_put_big_endian): Support"
    },
    {
      "sha": "e152b20438cc160e76d72dce9b64632aaabbc922",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 19,
      "deletions": 4,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c9f770d16a715662564d810a1c1efefd7a66540/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c9f770d16a715662564d810a1c1efefd7a66540/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=1c9f770d16a715662564d810a1c1efefd7a66540",
      "patch": "@@ -6055,7 +6055,9 @@ display_loclists_list (struct dwarf_section *section,\n \n       SAFE_BYTE_GET_AND_INC (llet, start, 1, section_end);\n \n-      if (vstart && llet == DW_LLE_offset_pair)\n+      if (vstart && (llet == DW_LLE_offset_pair\n+\t\t     || llet == DW_LLE_start_end\n+\t\t     || llet == DW_LLE_start_length))\n \t{\n \t  off = offset + (vstart - *start_ptr);\n \n@@ -6076,7 +6078,18 @@ display_loclists_list (struct dwarf_section *section,\n \t  break;\n \tcase DW_LLE_offset_pair:\n \t  READ_ULEB (begin, start, section_end);\n+\t  begin += base_address;\n \t  READ_ULEB (end, start, section_end);\n+\t  end += base_address;\n+\t  break;\n+\tcase DW_LLE_start_end:\n+\t  SAFE_BYTE_GET_AND_INC (begin, start, pointer_size, section_end);\n+\t  SAFE_BYTE_GET_AND_INC (end, start, pointer_size, section_end);\n+\t  break;\n+\tcase DW_LLE_start_length:\n+\t  SAFE_BYTE_GET_AND_INC (begin, start, pointer_size, section_end);\n+\t  READ_ULEB (end, start, section_end);\n+\t  end += begin;\n \t  break;\n \tcase DW_LLE_base_address:\n \t  SAFE_BYTE_GET_AND_INC (base_address, start, pointer_size,\n@@ -6103,7 +6116,9 @@ display_loclists_list (struct dwarf_section *section,\n \t}\n       if (llet == DW_LLE_end_of_list)\n \tbreak;\n-      if (llet != DW_LLE_offset_pair)\n+      if (llet != DW_LLE_offset_pair\n+\t  && llet != DW_LLE_start_end\n+\t  && llet != DW_LLE_start_length)\n \tcontinue;\n \n       if (start + 2 > section_end)\n@@ -6115,8 +6130,8 @@ display_loclists_list (struct dwarf_section *section,\n \n       READ_ULEB (length, start, section_end);\n \n-      print_dwarf_vma (begin + base_address, pointer_size);\n-      print_dwarf_vma (end + base_address, pointer_size);\n+      print_dwarf_vma (begin, pointer_size);\n+      print_dwarf_vma (end, pointer_size);\n \n       putchar ('(');\n       need_frame_base = decode_location_expression (start,"
    }
  ]
}