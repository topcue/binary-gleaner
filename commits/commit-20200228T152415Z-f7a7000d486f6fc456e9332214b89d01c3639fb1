{
  "sha": "f7a7000d486f6fc456e9332214b89d01c3639fb1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjdhNzAwMGQ0ODZmNmZjNDU2ZTkzMzIyMTRiODlkMDFjMzYzOWZiMQ==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-02-26T13:37:28Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-02-28T15:24:15Z"
    },
    "message": "Fix SVE-related failure in gdb.arch/aarch64-fp.exp\n\nThe gdb.arch/aarch64-fp.exp test assumes it is dealing with a regular SIMD\ntarget that exposes the V registers as raw registers.  SVE-enabled targets\nturn the V registers into pseudo-registers.\n\nThat is all fine, but the testcase uses the \"info registers\" command, which\nprints pseudo-register's contents twice. One for the hex format and another\nfor the natural format of the type.\n\n(gdb) info registers v0\nv0             {d = {f = {0x0, 0x0}, u = {0x1716151413121110, 0x1f1e1d1c1b1a1918}, s = {0x1716151413121110, 0x1f1e1d1c1b1a1918}}, s = {f = {0x0, 0x0, 0x0, 0x0}, u = {0x13121110, 0x17161514, 0x1b1a1918, 0x1f1e1d1c}, s = {0x13121110, 0x17161514, 0x1b1a1918, 0x1f1e1d1c}}, h = {f = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, u = {0x1110, 0x1312, 0x1514, 0x1716, 0x1918, 0x1b1a, 0x1d1c, 0x1f1e}, s = {0x1110, 0x1312, 0x1514, 0x1716, 0x1918, 0x1b1a, 0x1d1c, 0x1f1e}}, b = {u = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f}, s = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f}}, q = {u = {0x1f1e1d1c1b1a19181716151413121110}, s = {0x1f1e1d1c1b1a19181716151413121110}}} {d = {f = {1.846323925681849e-197, 8.5677456166123577e-159}, u = {1663540288323457296, 2242261671028070680}, s = {1663540288323457296, 2242261671028070680}}, s = {f = {1.84362032e-27, 4.84942184e-25, 1.27466897e-22, 3.34818801e-20}, u = {319951120, 387323156, 454695192, 522067228}, s = {319951120, 387323156, 454695192, 522067228}}, h = {f = {0.00061798, 0.00086308, 0.0012398, 0.00173, 0.0024872, 0.0034676, 0.0049896, 0.0069504}, u = {4368, 4882, 5396, 5910, 6424, 6938, 7452, 7966}, s = {4368, 4882, 5396, 5910, 6424, 6938, 7452, 7966}}, b = {u = {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}, s = {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31}}, q = {u = {41362427191743139026751447860679676176}, s = {41362427191743139026751447860679676176}}}\n\n(gdb) p/x $v0\n$1 = {d = {f = {0x0, 0x0}, u = {0x1716151413121110, 0x1f1e1d1c1b1a1918}, s = {0x1716151413121110, 0x1f1e1d1c1b1a1918}}, s = {f = {0x0, 0x0, 0x0, 0x0}, u = {0x13121110, 0x17161514, 0x1b1a1918, 0x1f1e1d1c}, s = {0x13121110, 0x17161514, 0x1b1a1918, 0x1f1e1d1c}}, h = {f = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, u = {0x1110, 0x1312, 0x1514, 0x1716, 0x1918, 0x1b1a, 0x1d1c, 0x1f1e}, s = {0x1110, 0x1312, 0x1514, 0x1716, 0x1918, 0x1b1a, 0x1d1c, 0x1f1e}}, b = {u = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f}, s = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f}}, q = {u = {0x1f1e1d1c1b1a19181716151413121110}, s = {0x1f1e1d1c1b1a19181716151413121110}}}\n\nSince the testcase is not expecting that, we run into a couple failures:\n\nFAIL: gdb.arch/aarch64-fp.exp: check register v0 value\nFAIL: gdb.arch/aarch64-fp.exp: check register v1 value\n\nThe following patch switches to using \"p/x\" for printing register values, which\nprints the values once with the hex format, instead of twice.\n\ngdb/testsuite/ChangeLog\n\n2020-02-28  Luis Machado  <luis.machado@linaro.org>\n\n\t* gdb.arch/aarch64-fp.exp: Switch from \"info registers\" command\n\tto \"p/x\".",
    "tree": {
      "sha": "3b6829214f056a1bfd0a951924e428233c5f9163",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3b6829214f056a1bfd0a951924e428233c5f9163"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f7a7000d486f6fc456e9332214b89d01c3639fb1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7a7000d486f6fc456e9332214b89d01c3639fb1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f7a7000d486f6fc456e9332214b89d01c3639fb1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7a7000d486f6fc456e9332214b89d01c3639fb1/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "718e081605e86b7421afc1b3ab2e4918292dd254",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/718e081605e86b7421afc1b3ab2e4918292dd254",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/718e081605e86b7421afc1b3ab2e4918292dd254"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 11,
    "deletions": 6
  },
  "files": [
    {
      "sha": "5248d59e6e15175a08120f898b43cf2517ac8fc5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f7a7000d486f6fc456e9332214b89d01c3639fb1/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f7a7000d486f6fc456e9332214b89d01c3639fb1/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f7a7000d486f6fc456e9332214b89d01c3639fb1",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-28  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* gdb.arch/aarch64-fp.exp: Switch from \"info registers\" command\n+\tto \"p/x\".\n+\n 2020-02-28  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.arch/aarch64-dbreg-contents.c: Include stdlib.h, unistd.h,"
    },
    {
      "sha": "74224d48bd51787ceadb1af3a691d730e7ca047b",
      "filename": "gdb/testsuite/gdb.arch/aarch64-fp.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f7a7000d486f6fc456e9332214b89d01c3639fb1/gdb/testsuite/gdb.arch/aarch64-fp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f7a7000d486f6fc456e9332214b89d01c3639fb1/gdb/testsuite/gdb.arch/aarch64-fp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/aarch64-fp.exp?ref=f7a7000d486f6fc456e9332214b89d01c3639fb1",
      "patch": "@@ -51,27 +51,27 @@ if {$endianness == \"little\"} {\n     set reg_value1 \"0x202122232425262728292a2b2c2d2e2f\"\n }\n \n-gdb_test \"info registers q0\" \\\n+gdb_test \"p/x \\$q0\" \\\n     \"q0.*{u = $reg_value0, s = $reg_value0.*\" \\\n     \"check register q0 value\"\n \n-gdb_test \"info registers q1\" \\\n+gdb_test \"p/x \\$q1\" \\\n     \"q1.*{u = $reg_value1, s = $reg_value1.*\" \\\n     \"check register q1 value\"\n \n-gdb_test \"info registers v0\" \\\n+gdb_test \"p/x \\$v0\" \\\n     \"v0.*$reg_value0}}}\" \\\n     \"check register v0 value\"\n \n-gdb_test \"info registers v1\" \\\n+gdb_test \"p/x \\$v1\" \\\n     \"v1.*$reg_value1}}}\" \\\n     \"check register v1 value\"\n \n-gdb_test \"info registers fpsr\" \\\n+gdb_test \"p/x \\$fpsr\" \\\n     \"fpsr.*0x\\[0-9a-fA-F\\].*\" \\\n     \"check register fpsr value\"\n \n-gdb_test \"info registers fpcr\" \\\n+gdb_test \"p/x \\$fpcr\" \\\n     \"fpcr.*0x\\[0-9a-fA-F\\].*\" \\\n     \"check register fpcr value\"\n "
    }
  ]
}