{
  "sha": "d3ad6278d6b977cfeb3156b65862224899549c76",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDNhZDYyNzhkNmI5NzdjZmViMzE1NmI2NTg2MjIyNDg5OTU0OWM3Ng==",
  "commit": {
    "author": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-06-12T21:16:19Z"
    },
    "committer": {
      "name": "Stafford Horne",
      "email": "shorne@gmail.com",
      "date": "2019-06-12T21:16:19Z"
    },
    "message": "cpu/or1k: Define unordered comparisons\n\nAdd support for new floating point unordered comparisons.  These have been\ndefined in OpenRISC architecture proposal 7[0] and are now included in the\narchitecture specification 1.3.\n\nThese new instructions provide the ability for floating point comparisons to\ndetect NaNs.\n\n[0] https://openrisc.io/proposals/lfsf\n\ncpu/ChangeLog:\n\nyyyy-mm-dd  Stafford Horne  <shorne@gmail.com>\n\n\t* or1korfpx.cpu (insn-opcode-float-regreg): Add SFUEQ_S, SFUNE_S,\n\tSFUGT_S, SFUGE_S, SFULT_S, SFULE_S, SFUN_S, SFUEQ_D, SFUNE_D, SFUGT_D,\n\tSFUGE_D, SFULT_D, SFULE_D, SFUN_D opcodes.\n\t(float-setflag-insn-base): New pmacro based on float-setflag-insn.\n\t(float-setflag-symantics, float-setflag-unordered-cmp-symantics,\n\tfloat-setflag-unordered-symantics): New pmacro for instruction\n\tsymantics.\n\t(float-setflag-insn): Update to use float-setflag-insn-base.\n\t(float-setflag-unordered-insn): New pmacro for generating instructions.",
    "tree": {
      "sha": "099ecb4f073447a6f1208a76285505f1bf73d60e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/099ecb4f073447a6f1208a76285505f1bf73d60e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d3ad6278d6b977cfeb3156b65862224899549c76",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3ad6278d6b977cfeb3156b65862224899549c76",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d3ad6278d6b977cfeb3156b65862224899549c76",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3ad6278d6b977cfeb3156b65862224899549c76/comments",
  "author": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "stffrdhrn",
    "id": 2404255,
    "node_id": "MDQ6VXNlcjI0MDQyNTU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stffrdhrn",
    "html_url": "https://github.com/stffrdhrn",
    "followers_url": "https://api.github.com/users/stffrdhrn/followers",
    "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}",
    "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions",
    "organizations_url": "https://api.github.com/users/stffrdhrn/orgs",
    "repos_url": "https://api.github.com/users/stffrdhrn/repos",
    "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stffrdhrn/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6ce26ac7c381c78858b9a7bac344b5cd04bfb03e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ce26ac7c381c78858b9a7bac344b5cd04bfb03e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6ce26ac7c381c78858b9a7bac344b5cd04bfb03e"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 55,
    "deletions": 4
  },
  "files": [
    {
      "sha": "7f141af8bad017a36335828dc28c7650750cf4b5",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3ad6278d6b977cfeb3156b65862224899549c76/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3ad6278d6b977cfeb3156b65862224899549c76/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=d3ad6278d6b977cfeb3156b65862224899549c76",
      "patch": "@@ -1,3 +1,15 @@\n+2019-06-13  Stafford Horne  <shorne@gmail.com>\n+\n+\t* or1korfpx.cpu (insn-opcode-float-regreg): Add SFUEQ_S, SFUNE_S,\n+\tSFUGT_S, SFUGE_S, SFULT_S, SFULE_S, SFUN_S, SFUEQ_D, SFUNE_D, SFUGT_D,\n+\tSFUGE_D, SFULT_D, SFULE_D, SFUN_D opcodes.\n+\t(float-setflag-insn-base): New pmacro based on float-setflag-insn.\n+\t(float-setflag-symantics, float-setflag-unordered-cmp-symantics,\n+\tfloat-setflag-unordered-symantics): New pmacro for instruction\n+\tsymantics.\n+\t(float-setflag-insn): Update to use float-setflag-insn-base.\n+\t(float-setflag-unordered-insn): New pmacro for generating instructions.\n+\n 2019-06-13  Andrey Bacherov  <avbacherov@opencores.org>\n \t    Stafford Horne  <shorne@gmail.com>\n "
    },
    {
      "sha": "5e33b82a448f28da7d3cd557dfea8a285aaedcb4",
      "filename": "cpu/or1korfpx.cpu",
      "status": "modified",
      "additions": 43,
      "deletions": 4,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d3ad6278d6b977cfeb3156b65862224899549c76/cpu/or1korfpx.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d3ad6278d6b977cfeb3156b65862224899549c76/cpu/or1korfpx.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/or1korfpx.cpu?ref=d3ad6278d6b977cfeb3156b65862224899549c76",
      "patch": "@@ -54,6 +54,20 @@\n    (\"SFGE_D\" #x1b)\n    (\"SFLT_D\" #x1c)\n    (\"SFLE_D\" #x1d)\n+   (\"SFUEQ_S\" #x28)\n+   (\"SFUNE_S\" #x29)\n+   (\"SFUGT_S\" #x2a)\n+   (\"SFUGE_S\" #x2b)\n+   (\"SFULT_S\" #x2c)\n+   (\"SFULE_S\" #x2d)\n+   (\"SFUN_S\" #x2e)\n+   (\"SFUEQ_D\" #x38)\n+   (\"SFUNE_D\" #x39)\n+   (\"SFUGT_D\" #x3a)\n+   (\"SFUGE_D\" #x3b)\n+   (\"SFULT_D\" #x3c)\n+   (\"SFULE_D\" #x3d)\n+   (\"SFUN_D\" #x3e)\n    (\"CUST1_S\" #xd0)\n    (\"CUST1_D\" #xe0)\n    )\n@@ -252,41 +266,66 @@\n      ()\n      )\n \n-(define-pmacro (float-setflag-insn mnemonic)\n+(define-pmacro (float-setflag-insn-base mnemonic rtx-mnemonic symantics)\n   (begin\n     (dni (.sym lf- mnemonic -s)\n          (.str \"lf.sf\" mnemonic \".s reg/reg\")\n          ((MACH ORFPX32-MACHS))\n          (.str \"lf.sf\" mnemonic \".s $rASF,$rBSF\")\n          (+ OPC_FLOAT (f-r1 0) rASF rBSF (f-resv-10-3 0) (.sym OPC_FLOAT_REGREG_SF (.upcase mnemonic) _S))\n-         (set BI sys-sr-f (mnemonic SF rASF rBSF))\n+         (symantics rtx-mnemonic SF rASF rBSF)\n          ()\n          )\n     (dni (.sym lf- mnemonic -d)\n          (.str \"lf.sf\" mnemonic \".d reg/reg\")\n          ((MACH ORFPX64-MACHS))\n          (.str \"lf.sf\" mnemonic \".d $rADF,$rBDF\")\n          (+ OPC_FLOAT (f-r1 0) rADF rBDF (f-resv-10-3 0) (.sym OPC_FLOAT_REGREG_SF (.upcase mnemonic) _D))\n-         (set BI sys-sr-f (mnemonic DF rADF rBDF))\n+         (symantics rtx-mnemonic DF rADF rBDF)\n          ()\n          )\n     (dni (.sym lf- mnemonic -d32)\n          (.str \"lf.sf\" mnemonic \".d regpair/regpair\")\n          ((MACH ORFPX64A32-MACHS))\n          (.str \"lf.sf\" mnemonic \".d $rAD32F,$rBD32F\")\n          (+ OPC_FLOAT (f-r1 0) rAD32F rBD32F (f-resv-10-1 0) (.sym OPC_FLOAT_REGREG_SF (.upcase mnemonic) _D))\n-         (set BI sys-sr-f (mnemonic DF rAD32F rBD32F))\n+         (symantics rtx-mnemonic DF rAD32F rBD32F)\n          ()\n          )\n     )\n   )\n \n+(define-pmacro (float-setflag-symantics mnemonic mode r1 r2)\n+  (set BI sys-sr-f (mnemonic mode r1 r2)))\n+\n+(define-pmacro (float-setflag-insn mnemonic)\n+  (float-setflag-insn-base mnemonic mnemonic float-setflag-symantics))\n+\n+(define-pmacro (float-setflag-unordered-cmp-symantics mnemonic mode r1 r2)\n+  (set BI sys-sr-f (or (unordered mode r1 r2)\n+                       (mnemonic mode r1 r2))))\n+\n+(define-pmacro (float-setflag-unordered-symantics mnemonic mode r1 r2)\n+  (set BI sys-sr-f (unordered mode r1 r2)))\n+\n+(define-pmacro (float-setflag-unordered-insn mnemonic)\n+  (float-setflag-insn-base (.str \"u\" mnemonic)\n+                           mnemonic\n+                           float-setflag-unordered-cmp-symantics))\n+\n (float-setflag-insn eq)\n (float-setflag-insn ne)\n (float-setflag-insn ge)\n (float-setflag-insn gt)\n (float-setflag-insn lt)\n (float-setflag-insn le)\n+(float-setflag-unordered-insn eq)\n+(float-setflag-unordered-insn ne)\n+(float-setflag-unordered-insn gt)\n+(float-setflag-unordered-insn ge)\n+(float-setflag-unordered-insn lt)\n+(float-setflag-unordered-insn le)\n+(float-setflag-insn-base un () float-setflag-unordered-symantics)\n \n (dni lf-madd-s\n      \"lf.madd.s reg/reg/reg\""
    }
  ]
}