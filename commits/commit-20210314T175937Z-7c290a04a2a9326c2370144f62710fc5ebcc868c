{
  "sha": "7c290a04a2a9326c2370144f62710fc5ebcc868c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2MyOTBhMDRhMmE5MzI2YzIzNzAxNDRmNjI3MTBmYzVlYmNjODY4Yw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-14T17:59:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-14T17:59:37Z"
    },
    "message": "Use cu_header consistently in read_attribute_value\n\nread_attribute_value has a local cu_header variable, but then some\nspots in the function use cu->header instead.  It seems better to me\nto prefer the local everywhere, so this patch makes this change.\n\ngdb/ChangeLog\n2021-03-14  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (read_attribute_value): Use cu_header\n\tconsistently.",
    "tree": {
      "sha": "9205eae54594a9d6e6fc6934f8b54116744742c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9205eae54594a9d6e6fc6934f8b54116744742c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7c290a04a2a9326c2370144f62710fc5ebcc868c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c290a04a2a9326c2370144f62710fc5ebcc868c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7c290a04a2a9326c2370144f62710fc5ebcc868c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c290a04a2a9326c2370144f62710fc5ebcc868c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0280fdcc0822f028d9889bb8c9559989bf71e69b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0280fdcc0822f028d9889bb8c9559989bf71e69b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0280fdcc0822f028d9889bb8c9559989bf71e69b"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 16,
    "deletions": 11
  },
  "files": [
    {
      "sha": "3daf542077a9c55c8256ae843e895af1eb15c3f5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c290a04a2a9326c2370144f62710fc5ebcc868c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c290a04a2a9326c2370144f62710fc5ebcc868c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7c290a04a2a9326c2370144f62710fc5ebcc868c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-14  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (read_attribute_value): Use cu_header\n+\tconsistently.\n+\n 2021-03-14  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (struct die_reader_specs) <abfd>: Fix formatting."
    },
    {
      "sha": "a4eb92c7d6f9f9c6630d6e0a70bc46de89679f3b",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7c290a04a2a9326c2370144f62710fc5ebcc868c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7c290a04a2a9326c2370144f62710fc5ebcc868c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=7c290a04a2a9326c2370144f62710fc5ebcc868c",
      "patch": "@@ -20332,23 +20332,23 @@ read_attribute_value (const struct die_reader_specs *reader,\n   switch (form)\n     {\n     case DW_FORM_ref_addr:\n-      if (cu->header.version == 2)\n-\tattr->set_unsigned (cu->header.read_address (abfd, info_ptr,\n+      if (cu_header->version == 2)\n+\tattr->set_unsigned (cu_header->read_address (abfd, info_ptr,\n \t\t\t\t\t\t     &bytes_read));\n       else\n-\tattr->set_unsigned (cu->header.read_offset (abfd, info_ptr,\n+\tattr->set_unsigned (cu_header->read_offset (abfd, info_ptr,\n \t\t\t\t\t\t    &bytes_read));\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_GNU_ref_alt:\n-      attr->set_unsigned (cu->header.read_offset (abfd, info_ptr,\n+      attr->set_unsigned (cu_header->read_offset (abfd, info_ptr,\n \t\t\t\t\t\t  &bytes_read));\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_addr:\n       {\n \tstruct gdbarch *gdbarch = objfile->arch ();\n-\tCORE_ADDR addr = cu->header.read_address (abfd, info_ptr, &bytes_read);\n+\tCORE_ADDR addr = cu_header->read_address (abfd, info_ptr, &bytes_read);\n \taddr = gdbarch_adjust_dwarf2_addr (gdbarch, addr);\n \tattr->set_address (addr);\n \tinfo_ptr += bytes_read;\n@@ -20390,7 +20390,7 @@ read_attribute_value (const struct die_reader_specs *reader,\n       attr->set_block (blk);\n       break;\n     case DW_FORM_sec_offset:\n-      attr->set_unsigned (cu->header.read_offset (abfd, info_ptr,\n+      attr->set_unsigned (cu_header->read_offset (abfd, info_ptr,\n \t\t\t\t\t\t  &bytes_read));\n       info_ptr += bytes_read;\n       break;\n@@ -20479,22 +20479,22 @@ read_attribute_value (const struct die_reader_specs *reader,\n       info_ptr += bytes_read;\n       break;\n     case DW_FORM_ref1:\n-      attr->set_unsigned ((to_underlying (cu->header.sect_off)\n+      attr->set_unsigned ((to_underlying (cu_header->sect_off)\n \t\t\t   + read_1_byte (abfd, info_ptr)));\n       info_ptr += 1;\n       break;\n     case DW_FORM_ref2:\n-      attr->set_unsigned ((to_underlying (cu->header.sect_off)\n+      attr->set_unsigned ((to_underlying (cu_header->sect_off)\n \t\t\t   + read_2_bytes (abfd, info_ptr)));\n       info_ptr += 2;\n       break;\n     case DW_FORM_ref4:\n-      attr->set_unsigned ((to_underlying (cu->header.sect_off)\n+      attr->set_unsigned ((to_underlying (cu_header->sect_off)\n \t\t\t   + read_4_bytes (abfd, info_ptr)));\n       info_ptr += 4;\n       break;\n     case DW_FORM_ref8:\n-      attr->set_unsigned ((to_underlying (cu->header.sect_off)\n+      attr->set_unsigned ((to_underlying (cu_header->sect_off)\n \t\t\t   + read_8_bytes (abfd, info_ptr)));\n       info_ptr += 8;\n       break;\n@@ -20503,7 +20503,7 @@ read_attribute_value (const struct die_reader_specs *reader,\n       info_ptr += 8;\n       break;\n     case DW_FORM_ref_udata:\n-      attr->set_unsigned ((to_underlying (cu->header.sect_off)\n+      attr->set_unsigned ((to_underlying (cu_header->sect_off)\n \t\t\t   + read_unsigned_leb128 (abfd, info_ptr,\n \t\t\t\t\t\t   &bytes_read)));\n       info_ptr += bytes_read;"
    }
  ]
}