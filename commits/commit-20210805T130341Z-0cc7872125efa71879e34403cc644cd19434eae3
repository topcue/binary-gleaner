{
  "sha": "0cc7872125efa71879e34403cc644cd19434eae3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGNjNzg3MjEyNWVmYTcxODc5ZTM0NDAzY2M2NDRjZDE5NDM0ZWFlMw==",
  "commit": {
    "author": {
      "name": "Cui,Lili",
      "email": "lili.cui@intel.com",
      "date": "2021-06-14T03:05:05Z"
    },
    "committer": {
      "name": "Cui,Lili",
      "email": "lili.cui@intel.com",
      "date": "2021-08-05T13:03:41Z"
    },
    "message": "[PATCH 1/2] Enable Intel AVX512_FP16 instructions\n\nIntel AVX512 FP16 instructions use maps 3, 5 and 6. Maps 5 and 6 use 3 bits\nin the EVEX.mmm field (0b101, 0b110). Map 5 is for instructions that were FP32\nin map 1 (0Fxx). Map 6 is for instructions that were FP32 in map 2 (0F38xx).\nThere are some exceptions to this rule. Some things in map 1 (0Fxx) with imm8\noperands predated our current conventions; those instructions moved to map 3.\nFP32 things in map 3 (0F3Axx) found new opcodes in map3 for FP16 because map3\nis very sparsely populated. Most of the FP16 instructions share opcodes and\nprefix (EVEX.pp) bits with the related FP32 operations.\n\nIntel AVX512 FP16 instructions has new displacements scaling rules, please refer\nto the public software developer manual for detail information.\n\ngas/\n\n2021-08-05  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n            H.J. Lu  <hongjiu.lu@intel.com>\n            Wei Xiao <wei3.xiao@intel.com>\n            Lili Cui  <lili.cui@intel.com>\n\n\t* config/tc-i386.c (struct Broadcast_Operation): Adjust comment.\n\t(cpu_arch): Add .avx512_fp16.\n\t(cpu_noarch): Add noavx512_fp16.\n\t(pte): Add evexmap5 and evexmap6.\n\t(build_evex_prefix): Handle EVEXMAP5 and EVEXMAP6.\n\t(check_VecOperations): Handle {1to32}.\n\t(check_VecOperands): Handle CheckRegNumb.\n\t(check_word_reg): Handle Toqword.\n\t(i386_error): Add invalid_dest_and_src_register_set.\n\t(match_template): Handle invalid_dest_and_src_register_set.\n\t* doc/c-i386.texi: Document avx512_fp16, noavx512_fp16.\n\nopcodes/\n\n2021-08-05  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n            H.J. Lu  <hongjiu.lu@intel.com>\n            Wei Xiao <wei3.xiao@intel.com>\n            Lili Cui  <lili.cui@intel.com>\n\n\t* i386-dis.c (EXwScalarS): New.\n\t(EXxh): Ditto.\n\t(EXxhc): Ditto.\n\t(EXxmmqh): Ditto.\n\t(EXxmmqdh): Ditto.\n\t(EXEvexXwb): Ditto.\n\t(DistinctDest_Fixup): Ditto.\n\t(enum): Add xh_mode, evex_half_bcst_xmmqh_mode, evex_half_bcst_xmmqdh_mode\n\tand w_swap_mode.\n\t(enum): Add PREFIX_EVEX_0F3A08_W_0, PREFIX_EVEX_0F3A0A_W_0,\n\tPREFIX_EVEX_0F3A26, PREFIX_EVEX_0F3A27, PREFIX_EVEX_0F3A56,\n\tPREFIX_EVEX_0F3A57, PREFIX_EVEX_0F3A66, PREFIX_EVEX_0F3A67,\n\tPREFIX_EVEX_0F3AC2, PREFIX_EVEX_MAP5_10, PREFIX_EVEX_MAP5_11,\n\tPREFIX_EVEX_MAP5_1D, PREFIX_EVEX_MAP5_2A, PREFIX_EVEX_MAP5_2C,\n\tPREFIX_EVEX_MAP5_2D, PREFIX_EVEX_MAP5_2E, PREFIX_EVEX_MAP5_2F,\n\tPREFIX_EVEX_MAP5_51, PREFIX_EVEX_MAP5_58, PREFIX_EVEX_MAP5_59,\n\tPREFIX_EVEX_MAP5_5A_W_0, PREFIX_EVEX_MAP5_5A_W_1,\n\tPREFIX_EVEX_MAP5_5B_W_0, PREFIX_EVEX_MAP5_5B_W_1,\n\tPREFIX_EVEX_MAP5_5C, PREFIX_EVEX_MAP5_5D, PREFIX_EVEX_MAP5_5E,\n\tPREFIX_EVEX_MAP5_5F, PREFIX_EVEX_MAP5_78, PREFIX_EVEX_MAP5_79,\n\tPREFIX_EVEX_MAP5_7A, PREFIX_EVEX_MAP5_7B, PREFIX_EVEX_MAP5_7C,\n\tPREFIX_EVEX_MAP5_7D_W_0, PREFIX_EVEX_MAP6_13, PREFIX_EVEX_MAP6_56,\n\tPREFIX_EVEX_MAP6_57, PREFIX_EVEX_MAP6_D6, PREFIX_EVEX_MAP6_D7\n\t(enum): Add EVEX_MAP5 and EVEX_MAP6.\n\t(enum): Add EVEX_W_MAP5_5A, EVEX_W_MAP5_5B,\n\tEVEX_W_MAP5_78_P_0, EVEX_W_MAP5_78_P_2, EVEX_W_MAP5_79_P_0,\n\tEVEX_W_MAP5_79_P_2, EVEX_W_MAP5_7A_P_2, EVEX_W_MAP5_7A_P_3,\n\tEVEX_W_MAP5_7B_P_2, EVEX_W_MAP5_7C_P_0, EVEX_W_MAP5_7C_P_2,\n\tEVEX_W_MAP5_7D, EVEX_W_MAP6_13_P_0, EVEX_W_MAP6_13_P_2,\n\t(get_valid_dis386): Properly handle new instructions.\n\t(intel_operand_size): Handle new modes.\n\t(OP_E_memory): Ditto.\n\t(OP_EX): Ditto.\n\t* i386-dis-evex.h: Updated for AVX512_FP16.\n\t* i386-dis-evex-mod.h: Updated for AVX512_FP16.\n\t* i386-dis-evex-prefix.h: Updated for AVX512_FP16.\n\t* i386-dis-evex-reg.h : Updated for AVX512_FP16.\n\t* i386-dis-evex-w.h : Updated for AVX512_FP16.\n\t* i386-gen.c (cpu_flag_init): Add CPU_AVX512_FP16_FLAGS,\n\tand CPU_ANY_AVX512_FP16_FLAGS. Update CPU_ANY_AVX512F_FLAGS\n\tand CPU_ANY_AVX512BW_FLAGS.\n\t(cpu_flags): Add CpuAVX512_FP16.\n\t(opcode_modifiers): Add DistinctDest.\n\t* i386-opc.h (enum): (AVX512_FP16): New.\n\t(i386_opcode_modifier): Add reqdistinctreg.\n\t(i386_cpu_flags): Add cpuavx512_fp16.\n\t(EVEXMAP5): Defined as a macro.\n\t(EVEXMAP6): Ditto.\n\t* i386-opc.tbl: Add Intel AVX512_FP16 instructions.\n\t* i386-init.h: Regenerated.\n\t* i386-tbl.h: Ditto.",
    "tree": {
      "sha": "a342743f974e2be23c3d25d9f79c7f52560cb0d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a342743f974e2be23c3d25d9f79c7f52560cb0d8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0cc7872125efa71879e34403cc644cd19434eae3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cc7872125efa71879e34403cc644cd19434eae3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0cc7872125efa71879e34403cc644cd19434eae3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0cc7872125efa71879e34403cc644cd19434eae3/comments",
  "author": {
    "login": "cuilili8868",
    "id": 54013017,
    "node_id": "MDQ6VXNlcjU0MDEzMDE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/54013017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cuilili8868",
    "html_url": "https://github.com/cuilili8868",
    "followers_url": "https://api.github.com/users/cuilili8868/followers",
    "following_url": "https://api.github.com/users/cuilili8868/following{/other_user}",
    "gists_url": "https://api.github.com/users/cuilili8868/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cuilili8868/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cuilili8868/subscriptions",
    "organizations_url": "https://api.github.com/users/cuilili8868/orgs",
    "repos_url": "https://api.github.com/users/cuilili8868/repos",
    "events_url": "https://api.github.com/users/cuilili8868/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cuilili8868/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cuilili8868",
    "id": 54013017,
    "node_id": "MDQ6VXNlcjU0MDEzMDE3",
    "avatar_url": "https://avatars.githubusercontent.com/u/54013017?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cuilili8868",
    "html_url": "https://github.com/cuilili8868",
    "followers_url": "https://api.github.com/users/cuilili8868/followers",
    "following_url": "https://api.github.com/users/cuilili8868/following{/other_user}",
    "gists_url": "https://api.github.com/users/cuilili8868/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cuilili8868/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cuilili8868/subscriptions",
    "organizations_url": "https://api.github.com/users/cuilili8868/orgs",
    "repos_url": "https://api.github.com/users/cuilili8868/repos",
    "events_url": "https://api.github.com/users/cuilili8868/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cuilili8868/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ddbe6976d51240c806488beb53b708858d8a3a67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ddbe6976d51240c806488beb53b708858d8a3a67",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ddbe6976d51240c806488beb53b708858d8a3a67"
    }
  ],
  "stats": {
    "total": 41517,
    "additions": 25307,
    "deletions": 16210
  },
  "files": [
    {
      "sha": "9e24e4ddc174ce00f038ac125f15eb77535979d0",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -1,5 +1,7 @@\n -*- text -*-\n \n+* Add support for Intel AVX512_FP16 instructions.\n+\n Changes in 2.37:\n \n * arm-symbianelf support removed."
    },
    {
      "sha": "cdc660f79a4469ee42d3ddcedc7519b1ccba3ce8",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 42,
      "deletions": 3,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -246,6 +246,7 @@ enum i386_error\n     invalid_vsib_address,\n     invalid_vector_register_set,\n     invalid_tmm_register_set,\n+    invalid_dest_and_src_register_set,\n     unsupported_vector_index_register,\n     unsupported_broadcast,\n     broadcast_needed,\n@@ -380,7 +381,7 @@ struct _i386_insn\n        expresses the broadcast factor.  */\n     struct Broadcast_Operation\n     {\n-      /* Type of broadcast: {1to2}, {1to4}, {1to8}, or {1to16}.  */\n+      /* Type of broadcast: {1to2}, {1to4}, {1to8}, {1to16} or {1to32}.  */\n       unsigned int type;\n \n       /* Index of broadcasted operand.  */\n@@ -1237,6 +1238,8 @@ static const arch_entry cpu_arch[] =\n     CPU_UINTR_FLAGS, 0 },\n   { STRING_COMMA_LEN (\".hreset\"), PROCESSOR_UNKNOWN,\n     CPU_HRESET_FLAGS, 0 },\n+  { STRING_COMMA_LEN (\".avx512_fp16\"), PROCESSOR_UNKNOWN,\n+    CPU_AVX512_FP16_FLAGS, 0 },\n };\n \n static const noarch_entry cpu_noarch[] =\n@@ -1292,6 +1295,7 @@ static const noarch_entry cpu_noarch[] =\n   { STRING_COMMA_LEN (\"nowidekl\"), CPU_ANY_WIDEKL_FLAGS },\n   { STRING_COMMA_LEN (\"nouintr\"), CPU_ANY_UINTR_FLAGS },\n   { STRING_COMMA_LEN (\"nohreset\"), CPU_ANY_HRESET_FLAGS },\n+  { STRING_COMMA_LEN (\"noavx512_fp16\"), CPU_ANY_AVX512_FP16_FLAGS },\n };\n \n #ifdef I386COFF\n@@ -3270,7 +3274,7 @@ pte (insn_template *t)\n {\n   static const unsigned char opc_pfx[] = { 0, 0x66, 0xf3, 0xf2 };\n   static const char *const opc_spc[] = {\n-    NULL, \"0f\", \"0f38\", \"0f3a\", NULL, NULL, NULL, NULL,\n+    NULL, \"0f\", \"0f38\", \"0f3a\", NULL, \"evexmap5\", \"evexmap6\", NULL,\n     \"XOP08\", \"XOP09\", \"XOP0A\",\n   };\n   unsigned int j;\n@@ -3865,7 +3869,7 @@ build_evex_prefix (void)\n   /* The high 3 bits of the second EVEX byte are 1's compliment of RXB\n      bits from REX.  */\n   gas_assert (i.tm.opcode_modifier.opcodespace >= SPACE_0F);\n-  gas_assert (i.tm.opcode_modifier.opcodespace <= SPACE_0F3A);\n+  gas_assert (i.tm.opcode_modifier.opcodespace <= SPACE_EVEXMAP6);\n   i.vex.bytes[1] = (~i.rex & 0x7) << 5 | i.tm.opcode_modifier.opcodespace;\n \n   /* The fifth bit of the second EVEX byte is 1's compliment of the\n@@ -6088,6 +6092,24 @@ check_VecOperands (const insn_template *t)\n       return 1;\n     }\n \n+  /* For some special instructions require that destination must be distinct\n+     from source registers.  */\n+  if (t->opcode_modifier.distinctdest)\n+    {\n+      unsigned int dest_reg = i.operands - 1;\n+\n+      know (i.operands >= 3);\n+\n+      /* #UD if dest_reg == src1_reg or dest_reg == src2_reg.  */\n+      if (i.op[dest_reg - 1].regs == i.op[dest_reg].regs\n+\t  || (i.reg_operands > 2\n+\t      && i.op[dest_reg - 2].regs == i.op[dest_reg].regs))\n+\t{\n+\t  i.error = invalid_dest_and_src_register_set;\n+\t  return 1;\n+\t}\n+    }\n+\n   /* Check if broadcast is supported by the instruction and is applied\n      to the memory operand.  */\n   if (i.broadcast.type)\n@@ -6848,6 +6870,9 @@ match_template (char mnem_suffix)\n \tcase invalid_tmm_register_set:\n \t  err_msg = _(\"all tmm registers must be distinct\");\n \t  break;\n+\tcase invalid_dest_and_src_register_set:\n+\t  err_msg = _(\"destination and source registers must be distinct\");\n+\t  break;\n \tcase unsupported_vector_index_register:\n \t  err_msg = _(\"unsupported vector index register\");\n \t  break;\n@@ -7628,6 +7653,14 @@ check_word_reg (void)\n \t\ti.suffix);\n \treturn 0;\n       }\n+    /* For some instructions need encode as EVEX.W=1 without explicit VexW1. */\n+    else if (i.types[op].bitfield.qword\n+\t     && intel_syntax\n+\t     && i.tm.opcode_modifier.toqword)\n+      {\n+\t  /* Convert to QWORD.  We want EVEX.W byte. */\n+\t  i.suffix = QWORD_MNEM_SUFFIX;\n+      }\n   return 1;\n }\n \n@@ -10520,6 +10553,12 @@ check_VecOperations (char *op_string)\n \t\t  bcst_type = 16;\n \t\t  op_string++;\n \t\t}\n+\t      else if (*op_string == '3'\n+\t\t       && *(op_string+1) == '2')\n+\t\t{\n+\t\t  bcst_type = 32;\n+\t\t  op_string++;\n+\t\t}\n \t      else\n \t\t{\n \t\t  as_bad (_(\"Unsupported broadcast: `%s'\"), saved);"
    },
    {
      "sha": "9058ad444b0ca99912fcbbf842cfda5a8bc34229",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -214,6 +214,7 @@ accept various extension mnemonics.  For example,\n @code{tdx},\n @code{avx512_bf16},\n @code{avx_vnni},\n+@code{avx512_fp16},\n @code{noavx512f},\n @code{noavx512cd},\n @code{noavx512er},\n@@ -233,6 +234,7 @@ accept various extension mnemonics.  For example,\n @code{notdx},\n @code{noavx512_bf16},\n @code{noavx_vnni},\n+@code{noavx512_fp16},\n @code{noenqcmd},\n @code{noserialize},\n @code{notsxldtrk},\n@@ -1519,7 +1521,7 @@ supported on the CPU specified.  The choices for @var{cpu_type} are:\n @item @samp{.avx512vbmi} @tab @samp{.avx512_4fmaps} @tab @samp{.avx512_4vnniw}\n @item @samp{.avx512_vpopcntdq} @tab @samp{.avx512_vbmi2} @tab @samp{.avx512_vnni}\n @item @samp{.avx512_bitalg} @tab @samp{.avx512_bf16} @tab @samp{.avx512_vp2intersect}\n-@item @samp{.tdx} @tab @samp{.avx_vnni}\n+@item @samp{.tdx} @tab @samp{.avx_vnni}  @tab @samp{.avx512_fp16}\n @item @samp{.clwb} @tab @samp{.rdpid} @tab @samp{.ptwrite} @tab @item @samp{.ibt}\n @item @samp{.wbnoinvd} @tab @samp{.pconfig} @tab @samp{.waitpkg} @tab @samp{.cldemote}\n @item @samp{.shstk} @tab @samp{.gfni} @tab @samp{.vaes} @tab @samp{.vpclmulqdq}"
    },
    {
      "sha": "9c8156ac11ebdb9d20a3d7bf2332e059a40ac52f",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 221,
      "deletions": 0,
      "changes": 221,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -375,3 +375,224 @@\n     { \"vfmsub213s%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexR }, 0 },\n     { \"v4fnmaddss\",\t{ XMScalar, VexScalar, Mxmm }, 0 },\n   },\n+  /* PREFIX_EVEX_0F3A08_W_0 */\n+  {\n+    { \"vrndscaleph\",    { XM, EXxh, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vrndscaleps\",    { XM, EXx, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A0A_W_0 */\n+  {\n+    { \"vrndscalesh\",    { XMScalar, VexScalar, EXw, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vrndscaless\",    { XMScalar, VexScalar, EXd, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A26 */\n+  {\n+    { \"vgetmantp%XH\",     { XM, EXxh, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vgetmantp%XW\",\t{ XM, EXx, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A27 */\n+  {\n+    { \"vgetmants%XH\",     { XMScalar, VexScalar, EXw, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vgetmants%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A56 */\n+  {\n+    { \"vreducep%XH\",      { XM, EXxh, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vreducep%XW\",\t{ XM, EXx, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A57 */\n+  {\n+    { \"vreduces%XH\",      { XMScalar, VexScalar, EXw, EXxEVexS, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vreduces%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A66 */\n+  {\n+    { \"vfpclassp%XH%XZ\",  { MaskG, EXxh, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vfpclassp%XW%XZ\",    { MaskG, EXx, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3A67 */\n+  {\n+    { \"vfpclasss%XH\",     { MaskG, EXw, Ib }, 0 },\n+    { Bad_Opcode },\n+    { \"vfpclasss%XW\",\t{ MaskG, EXdq, Ib }, 0 },\n+  },\n+  /* PREFIX_EVEX_0F3AC2 */\n+  {\n+    { \"vcmpp%XH\", { MaskG, Vex, EXxh, EXxEVexS, CMP }, 0 },\n+    { \"vcmps%XH\", { MaskG, VexScalar, EXw, EXxEVexS, CMP }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_10 */\n+  {\n+    { Bad_Opcode },\n+    { \"vmovs%XH\", { XMScalar, VexScalarR, EXw }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_11 */\n+  {\n+    { Bad_Opcode },\n+    { \"vmovs%XH\", { EXwS, VexScalarR, XMScalar }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_1D */\n+  {\n+    { \"vcvtss2s%XH\",      { XMM, VexScalar, EXd, EXxEVexR }, 0 },\n+    { Bad_Opcode },\n+    { \"vcvtps2p%XHx%XY\",  { XMxmmq, EXx, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_2A */\n+  {\n+    { Bad_Opcode },\n+    { \"vcvtsi2sh{%LQ|}\",        { XMScalar, VexScalar, EXxEVexR, Edq }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_2C */\n+  {\n+    { Bad_Opcode },\n+    { \"vcvttsh2si\",     { Gdq, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_2D */\n+  {\n+    { Bad_Opcode },\n+    { \"vcvtsh2si\",      { Gdq, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_2E */\n+  {\n+    { \"vucomis%XH\",       { XMScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_2F */\n+  {\n+    { \"vcomis%XH\",        { XMScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_51 */\n+  {\n+    { \"vsqrtp%XH\",        { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vsqrts%XH\",        { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_58 */\n+  {\n+    { \"vaddp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n+    { \"vadds%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_59 */\n+  {\n+    { \"vmulp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n+    { \"vmuls%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5A_W_0 */\n+  {\n+    { \"vcvtph2pd\",      { XM, EXxmmqdh, EXxEVexS }, 0 },\n+    { \"vcvtsh2sd\",      { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5A_W_1 */\n+  {\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vcvtpd2ph%XZ\",   { XMM, EXx, EXxEVexR }, 0 },\n+    { \"vcvtsd2sh\",      { XMM, VexScalar, EXq, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5B_W_0 */\n+  {\n+    { \"vcvtdq2ph%XY\",   { XMxmmq, EXx, EXxEVexR }, 0 },\n+    { \"vcvttph2dq\",     { XM, EXxmmqh, EXxEVexS }, 0 },\n+    { \"vcvtph2dq\",      { XM, EXxmmqh, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5B_W_1 */\n+  {\n+    { \"vcvtqq2ph%XZ\",   { XMM, EXx, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5C */\n+  {\n+    { \"vsubp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n+    { \"vsubs%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5D */\n+  {\n+    { \"vminp%XH\", { XM, Vex, EXxh, EXxEVexS }, 0 },\n+    { \"vmins%XH\", { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5E */\n+  {\n+    { \"vdivp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n+    { \"vdivs%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_5F */\n+  {\n+    { \"vmaxp%XH\", { XM, Vex, EXxh, EXxEVexS }, 0 },\n+    { \"vmaxs%XH\", { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP5_78 */\n+  {\n+    { VEX_W_TABLE (EVEX_W_MAP5_78_P_0) },\n+    { \"vcvttsh2usi\",    { Gdq, EXw, EXxEVexS }, 0 },\n+    { VEX_W_TABLE (EVEX_W_MAP5_78_P_2) },\n+  },\n+  /* PREFIX_EVEX_MAP5_79 */\n+  {\n+    { VEX_W_TABLE (EVEX_W_MAP5_79_P_0) },\n+    { \"vcvtsh2usi\",     { Gdq, EXw, EXxEVexR }, 0 },\n+    { VEX_W_TABLE (EVEX_W_MAP5_79_P_2) },\n+  },\n+  /* PREFIX_EVEX_MAP5_7A */\n+  {\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { VEX_W_TABLE (EVEX_W_MAP5_7A_P_2) },\n+    { VEX_W_TABLE (EVEX_W_MAP5_7A_P_3) },\n+  },\n+  /* PREFIX_EVEX_MAP5_7B */\n+  {\n+    { Bad_Opcode },\n+    { \"vcvtusi2sh{%LQ|}\",       { XMScalar, VexScalar, EXxEVexR, Edq }, 0 },\n+    { VEX_W_TABLE (EVEX_W_MAP5_7B_P_2) },\n+  },\n+  /* PREFIX_EVEX_MAP5_7C */\n+  {\n+    { VEX_W_TABLE (EVEX_W_MAP5_7C_P_0) },\n+    { Bad_Opcode },\n+    { VEX_W_TABLE (EVEX_W_MAP5_7C_P_2) },\n+  },\n+  /* PREFIX_EVEX_MAP5_7D_W_0 */\n+  {\n+    { \"vcvtph2uw\",      { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtw2ph\",       { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtph2w\",       { XM, EXxh, EXxEVexR }, 0 },\n+    { \"vcvtuw2ph\",      { XM, EXxh, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP6_13 */\n+  {\n+    { VEX_W_TABLE (EVEX_W_MAP6_13_P_0) },\n+    { Bad_Opcode },\n+    { VEX_W_TABLE (EVEX_W_MAP6_13_P_2) },\n+  },\n+  /* PREFIX_EVEX_MAP6_56 */\n+  {\n+    { Bad_Opcode },\n+    { \"vfmaddcp%XH\",      { { DistinctDest_Fixup, 0 }, Vex, EXx, EXxEVexR }, 0 },\n+    { Bad_Opcode },\n+    { \"vfcmaddcp%XH\",     { { DistinctDest_Fixup, 0 }, Vex, EXx, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP6_57 */\n+  {\n+    { Bad_Opcode },\n+    { \"vfmaddcs%XH\",      { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { Bad_Opcode },\n+    { \"vfcmaddcs%XH\",     { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP6_D6 */\n+  {\n+    { Bad_Opcode },\n+    { \"vfmulcp%XH\",     { { DistinctDest_Fixup, 0 }, Vex, EXx, EXxEVexR }, 0 },\n+    { Bad_Opcode },\n+    { \"vfcmulcp%XH\",    { { DistinctDest_Fixup, 0 }, Vex, EXx, EXxEVexR }, 0 },\n+  },\n+  /* PREFIX_EVEX_MAP6_D7 */\n+  {\n+    { Bad_Opcode },\n+    { \"vfmulcs%XH\",     { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { Bad_Opcode },\n+    { \"vfcmulcs%XH\",    { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+  },"
    },
    {
      "sha": "62c3d3b9afbb301232138dc5dc43cd7f71eefbd8",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 61,
      "deletions": 2,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -552,7 +552,7 @@\n   },\n   /* EVEX_W_0F3A08 */\n   {\n-    { \"vrndscaleps\",\t{ XM, EXx, EXxEVexS, Ib }, PREFIX_DATA },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A08_W_0) },\n   },\n   /* EVEX_W_0F3A09 */\n   {\n@@ -561,7 +561,7 @@\n   },\n   /* EVEX_W_0F3A0A */\n   {\n-    { \"vrndscaless\",\t{ XMScalar, VexScalar, EXd, EXxEVexS, Ib }, PREFIX_DATA },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A0A_W_0) },\n   },\n   /* EVEX_W_0F3A0B */\n   {\n@@ -636,3 +636,62 @@\n     { Bad_Opcode },\n     { \"vpshrdw\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n+  /* EVEX_W_MAP5_5A */\n+  {\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5A_W_0) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5A_W_1) },\n+  },\n+  /* EVEX_W_MAP5_5B */\n+  {\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5B_W_0) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5B_W_1) },\n+  },\n+  /* EVEX_W_MAP5_78_P_0 */\n+  {\n+    { \"vcvttph2udq\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP5_78_P_2 */\n+  {\n+    { \"vcvttph2uqq\",\t{ XM, EXxmmqdh, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP5_79_P_0 */\n+  {\n+    { \"vcvtph2udq\",\t{ XM, EXxmmqh, EXxEVexR }, 0 },\n+  },\n+  /* EVEX_W_MAP5_79_P_2 */\n+  {\n+    { \"vcvtph2uqq\",\t{ XM, EXxmmqdh, EXxEVexR }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7A_P_2 */\n+  {\n+    { \"vcvttph2qq\",\t{ XM, EXxmmqdh, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7A_P_3 */\n+  {\n+    { \"vcvtudq2ph%XY\",\t{ XMxmmq, EXx, EXxEVexR }, 0 },\n+    { \"vcvtuqq2ph%XZ\",\t{ XMM, EXx, EXxEVexR }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7B_P_2 */\n+  {\n+    { \"vcvtph2qq\",\t{ XM, EXxmmqdh, EXxEVexR }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7C_P_0 */\n+  {\n+    { \"vcvttph2uw\",\t{ XM, EXxh, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7C_P_2 */\n+  {\n+    { \"vcvttph2w\",\t{ XM, EXxh, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP5_7D */\n+  {\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7D_W_0) },\n+  },\n+  /* EVEX_W_MAP6_13_P_0 */\n+  {\n+    { \"vcvtsh2ss\",\t{ XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+  },\n+  /* EVEX_W_MAP6_13_P_2 */\n+  {\n+    { \"vcvtph2psx\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n+  },"
    },
    {
      "sha": "d79c78c17936226ce501d473ddc5f6bf443c88bd",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 595,
      "deletions": 13,
      "changes": 608,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -403,8 +403,8 @@ static const struct dis386 evex_table[][256] = {\n     /* 60 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpexpand%BW\", { XM, EXbwUnit }, PREFIX_DATA },\n-    { \"vpcompress%BW\",   { EXbwUnit, XM }, PREFIX_DATA },\n+    { \"vpexpand%BW\",\t{ XM, EXbwUnit }, PREFIX_DATA },\n+    { \"vpcompress%BW\",\t{ EXbwUnit, XM }, PREFIX_DATA },\n     { \"vpblendm%DQ\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vblendmp%XW\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { \"vpblendm%BW\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n@@ -453,7 +453,7 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { \"vperm%BW\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { Bad_Opcode },\n-    { \"vpshufbitqmb\",  { MaskG, Vex, EXx }, PREFIX_DATA },\n+    { \"vpshufbitqmb\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n     /* 90 */\n     { \"vpgatherd%DQ\",\t{ XMGatherD, MVexVSIBDWpX }, PREFIX_DATA },\n     { \"vpgatherq%DQ\",\t{ XMGatherQ, MVexVSIBQWpX }, PREFIX_DATA },\n@@ -518,11 +518,11 @@ static const struct dis386 evex_table[][256] = {\n     { MOD_TABLE (MOD_EVEX_0F38C6) },\n     { MOD_TABLE (MOD_EVEX_0F38C7) },\n     /* C8 */\n-    { \"vexp2p%XW\",        { XM, EXx, EXxEVexS }, PREFIX_DATA },\n+    { \"vexp2p%XW\",\t{ XM, EXx, EXxEVexS }, PREFIX_DATA },\n     { Bad_Opcode },\n-    { \"vrcp28p%XW\",       { XM, EXx, EXxEVexS }, PREFIX_DATA },\n+    { \"vrcp28p%XW\",\t{ XM, EXx, EXxEVexS }, PREFIX_DATA },\n     { \"vrcp28s%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS }, PREFIX_DATA },\n-    { \"vrsqrt28p%XW\",     { XM, EXx, EXxEVexS }, PREFIX_DATA },\n+    { \"vrsqrt28p%XW\",\t{ XM, EXx, EXxEVexS }, PREFIX_DATA },\n     { \"vrsqrt28s%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS }, PREFIX_DATA },\n     { Bad_Opcode },\n     { VEX_W_TABLE (VEX_W_0F38CF) },\n@@ -626,8 +626,8 @@ static const struct dis386 evex_table[][256] = {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A23) },\n     { Bad_Opcode },\n     { \"vpternlog%DQ\",\t{ XM, Vex, EXx, Ib }, PREFIX_DATA },\n-    { \"vgetmantp%XW\",\t{ XM, EXx, EXxEVexS, Ib }, PREFIX_DATA },\n-    { \"vgetmants%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS, Ib }, PREFIX_DATA },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A26) },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A27) },\n     /* 28 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -680,8 +680,8 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { \"vfixupimmp%XW\",\t{ XM, Vex, EXx, EXxEVexS, Ib }, PREFIX_DATA },\n     { \"vfixupimms%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS, Ib }, PREFIX_DATA },\n-    { \"vreducep%XW\",\t{ XM, EXx, EXxEVexS, Ib }, PREFIX_DATA },\n-    { \"vreduces%XW\",\t{ XMScalar, VexScalar, EXdq, EXxEVexS, Ib }, PREFIX_DATA },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A56) },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A57) },\n     /* 58 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -698,8 +698,8 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfpclassp%XW%XZ\",\t{ MaskG, EXx, Ib }, PREFIX_DATA },\n-    { \"vfpclasss%XW\",\t{ MaskG, EXdq, Ib }, PREFIX_DATA },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A66) },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3A67) },\n     /* 68 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -802,7 +802,7 @@ static const struct dis386 evex_table[][256] = {\n     /* C0 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_0F3AC2) },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -872,4 +872,586 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n   },\n+  /* EVEX_MAP5_ */\n+  {\n+    /* 00 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 08 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 10 */\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_10) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_11) },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 18 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_1D) },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 20 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 28 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_2A) },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_2C) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_2D) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_2E) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_2F) },\n+    /* 30 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 38 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 40 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 48 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 50 */\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_51) },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 58 */\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_58) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_59) },\n+    { VEX_W_TABLE (EVEX_W_MAP5_5A) },\n+    { VEX_W_TABLE (EVEX_W_MAP5_5B) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5C) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5D) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5E) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_5F) },\n+    /* 60 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 68 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vmovw\", { XMScalar, Edw }, PREFIX_DATA },\n+    { Bad_Opcode },\n+    /* 70 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 78 */\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_78) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_79) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7A) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7B) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP5_7C) },\n+    { VEX_W_TABLE (EVEX_W_MAP5_7D) },\n+    { \"vmovw\",\t  { Edw, XMScalar }, PREFIX_DATA },\n+    { Bad_Opcode },\n+    /* 80 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 88 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 90 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 98 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* A0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* A8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* B0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* B8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* C0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* C8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* D0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* D8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* E0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* E8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* F0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* F8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+  },\n+  /* EVEX_MAP6_ */\n+  {\n+    /* 00 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 08 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 10 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP6_13) },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 18 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 20 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 28 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vscalefp%XH\",      { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vscalefs%XH\",      { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 30 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 38 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 40 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vgetexpp%XH\",      { XM, EXxh, EXxEVexS }, PREFIX_DATA },\n+    { \"vgetexps%XH\",      { XMM, VexScalar, EXw, EXxEVexS }, PREFIX_DATA },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 48 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vrcpp%XH\",\t  { XM, EXxh }, PREFIX_DATA },\n+    { \"vrcps%XH\",\t  { XMM, VexScalar, EXw }, PREFIX_DATA },\n+    { \"vrsqrtp%XH\",       { XM, EXxh }, PREFIX_DATA },\n+    { \"vrsqrts%XH\",       { XMM, VexScalar, EXw }, PREFIX_DATA },\n+    /* 50 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP6_56) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP6_57) },\n+    /* 58 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 60 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 68 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 70 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 78 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 80 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 88 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* 90 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vfmaddsub132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsubadd132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    /* 98 */\n+    { \"vfmadd132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd132s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub132s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd132p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd132s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub132p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub132s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    /* A0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vfmaddsub213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsubadd213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    /* A8 */\n+    { \"vfmadd213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd213s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub213s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd213p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd213s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub213p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub213s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    /* B0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { \"vfmaddsub231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsubadd231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    /* B8 */\n+    { \"vfmadd231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd231s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub231s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd231p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd231s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub231p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub231s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    /* C0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* C8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* D0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP6_D6) },\n+    { PREFIX_TABLE (PREFIX_EVEX_MAP6_D7) },\n+    /* D8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* E0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* E8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* F0 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    /* F8 */\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+    { Bad_Opcode },\n+  },\n };"
    },
    {
      "sha": "2c7027ca6f17b3a6476e41ccc8653596639da5e0",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 225,
      "deletions": 27,
      "changes": 252,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -114,6 +114,7 @@ static void XMM_Fixup (int, int);\n static void FXSAVE_Fixup (int, int);\n \n static void MOVSXD_Fixup (int, int);\n+static void DistinctDest_Fixup (int, int);\n \n struct dis_private {\n   /* Points to first byte not fetched.  */\n@@ -358,18 +359,22 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define EXw { OP_EX, w_mode }\n #define EXd { OP_EX, d_mode }\n #define EXdS { OP_EX, d_swap_mode }\n+#define EXwS { OP_EX, w_swap_mode }\n #define EXq { OP_EX, q_mode }\n #define EXqS { OP_EX, q_swap_mode }\n #define EXdq { OP_EX, dq_mode }\n #define EXx { OP_EX, x_mode }\n+#define EXxh { OP_EX, xh_mode }\n #define EXxS { OP_EX, x_swap_mode }\n #define EXxmm { OP_EX, xmm_mode }\n #define EXymm { OP_EX, ymm_mode }\n #define EXtmm { OP_EX, tmm_mode }\n #define EXxmmq { OP_EX, xmmq_mode }\n+#define EXxmmqh { OP_EX, evex_half_bcst_xmmqh_mode }\n #define EXEvexHalfBcstXmmq { OP_EX, evex_half_bcst_xmmq_mode }\n #define EXxmmdw { OP_EX, xmmdw_mode }\n #define EXxmmqd { OP_EX, xmmqd_mode }\n+#define EXxmmqdh { OP_EX, evex_half_bcst_xmmqdh_mode }\n #define EXymmq { OP_EX, ymmq_mode }\n #define EXEvexXGscat { OP_EX, evex_x_gscat_mode }\n #define EXEvexXNoBcst { OP_EX, evex_x_nobcst_mode }\n@@ -459,6 +464,8 @@ enum\n   w_mode,\n   /* double word operand  */\n   d_mode,\n+  /* word operand with operand swapped  */\n+  w_swap_mode,\n   /* double word operand with operand swapped */\n   d_swap_mode,\n   /* quad word operand */\n@@ -479,6 +486,9 @@ enum\n   /* Similar to x_mode, but with operands swapped and disabled broadcast\n      in EVEX.  */\n   x_swap_mode,\n+  /* 16-byte XMM, 32-byte YMM or 64-byte ZMM operand.  In EVEX with\n+     broadcast of 16bit enabled.  */\n+  xh_mode,\n   /* 16-byte XMM operand */\n   xmm_mode,\n   /* XMM, XMM or YMM register operand, or quad word, xmmword or ymmword\n@@ -487,10 +497,16 @@ enum\n   xmmq_mode,\n   /* Same as xmmq_mode, but broadcast is allowed.  */\n   evex_half_bcst_xmmq_mode,\n+  /* XMM, XMM or YMM register operand, or quad word, xmmword or ymmword\n+     memory operand (depending on vector length).  16bit broadcast.  */\n+  evex_half_bcst_xmmqh_mode,\n   /* 16-byte XMM, word, double word or quad word operand.  */\n   xmmdw_mode,\n   /* 16-byte XMM, double word, quad word operand or xmm word operand.  */\n   xmmqd_mode,\n+  /* 16-byte XMM, double word, quad word operand or xmm word operand.\n+     16bit broadcast.  */\n+  evex_half_bcst_xmmqdh_mode,\n   /* 32-byte YMM operand */\n   ymm_mode,\n   /* quad word, ymmword or zmmword memory operand.  */\n@@ -841,7 +857,7 @@ enum\n   MOD_EVEX_0F387B_W_0,\n   MOD_EVEX_0F387C,\n   MOD_EVEX_0F38C6,\n-  MOD_EVEX_0F38C7\n+  MOD_EVEX_0F38C7,\n };\n \n enum\n@@ -1078,6 +1094,48 @@ enum\n   PREFIX_EVEX_0F389B,\n   PREFIX_EVEX_0F38AA,\n   PREFIX_EVEX_0F38AB,\n+\n+  PREFIX_EVEX_0F3A08_W_0,\n+  PREFIX_EVEX_0F3A0A_W_0,\n+  PREFIX_EVEX_0F3A26,\n+  PREFIX_EVEX_0F3A27,\n+  PREFIX_EVEX_0F3A56,\n+  PREFIX_EVEX_0F3A57,\n+  PREFIX_EVEX_0F3A66,\n+  PREFIX_EVEX_0F3A67,\n+  PREFIX_EVEX_0F3AC2,\n+\n+  PREFIX_EVEX_MAP5_10,\n+  PREFIX_EVEX_MAP5_11,\n+  PREFIX_EVEX_MAP5_1D,\n+  PREFIX_EVEX_MAP5_2A,\n+  PREFIX_EVEX_MAP5_2C,\n+  PREFIX_EVEX_MAP5_2D,\n+  PREFIX_EVEX_MAP5_2E,\n+  PREFIX_EVEX_MAP5_2F,\n+  PREFIX_EVEX_MAP5_51,\n+  PREFIX_EVEX_MAP5_58,\n+  PREFIX_EVEX_MAP5_59,\n+  PREFIX_EVEX_MAP5_5A_W_0,\n+  PREFIX_EVEX_MAP5_5A_W_1,\n+  PREFIX_EVEX_MAP5_5B_W_0,\n+  PREFIX_EVEX_MAP5_5B_W_1,\n+  PREFIX_EVEX_MAP5_5C,\n+  PREFIX_EVEX_MAP5_5D,\n+  PREFIX_EVEX_MAP5_5E,\n+  PREFIX_EVEX_MAP5_5F,\n+  PREFIX_EVEX_MAP5_78,\n+  PREFIX_EVEX_MAP5_79,\n+  PREFIX_EVEX_MAP5_7A,\n+  PREFIX_EVEX_MAP5_7B,\n+  PREFIX_EVEX_MAP5_7C,\n+  PREFIX_EVEX_MAP5_7D_W_0,\n+\n+  PREFIX_EVEX_MAP6_13,\n+  PREFIX_EVEX_MAP6_56,\n+  PREFIX_EVEX_MAP6_57,\n+  PREFIX_EVEX_MAP6_D6,\n+  PREFIX_EVEX_MAP6_D7,\n };\n \n enum\n@@ -1159,7 +1217,9 @@ enum\n {\n   EVEX_0F = 0,\n   EVEX_0F38,\n-  EVEX_0F3A\n+  EVEX_0F3A,\n+  EVEX_MAP5,\n+  EVEX_MAP6,\n };\n \n enum\n@@ -1587,6 +1647,22 @@ enum\n   EVEX_W_0F3A43_L_n,\n   EVEX_W_0F3A70,\n   EVEX_W_0F3A72,\n+\n+  EVEX_W_MAP5_5A,\n+  EVEX_W_MAP5_5B,\n+  EVEX_W_MAP5_78_P_0,\n+  EVEX_W_MAP5_78_P_2,\n+  EVEX_W_MAP5_79_P_0,\n+  EVEX_W_MAP5_79_P_2,\n+  EVEX_W_MAP5_7A_P_2,\n+  EVEX_W_MAP5_7A_P_3,\n+  EVEX_W_MAP5_7B_P_2,\n+  EVEX_W_MAP5_7C_P_0,\n+  EVEX_W_MAP5_7C_P_2,\n+  EVEX_W_MAP5_7D,\n+\n+  EVEX_W_MAP6_13_P_0,\n+  EVEX_W_MAP6_13_P_2,\n };\n \n typedef void (*op_rtn) (int bytemode, int sizeflag);\n@@ -1647,6 +1723,7 @@ struct dis386 {\n    \"XZ\" => print 'x', 'y', or 'z' if suffix_always is true or no\n \t   register operands and no broadcast.\n    \"XW\" => print 's', 'd' depending on the VEX.W bit (for FMA)\n+   \"XH\" => print 'h' if EVEX.W=0, EVEX.W=1 is not a valid encoding (for FP16)\n    \"XV\" => print \"{vex3}\" pseudo prefix\n    \"LQ\" => print 'l' ('d' in Intel mode) or 'q' for memory operand, cond\n \t   being false, or no operand at all in 64bit mode, or if suffix_always\n@@ -9252,6 +9329,12 @@ get_valid_dis386 (const struct dis386 *dp, disassemble_info *info)\n \tcase 0x3:\n \t  vex_table_index = EVEX_0F3A;\n \t  break;\n+\tcase 0x5:\n+\t  vex_table_index = EVEX_MAP5;\n+\t  break;\n+\tcase 0x6:\n+\t  vex_table_index = EVEX_MAP6;\n+\t  break;\n \t}\n \n       /* The second byte after 0x62.  */\n@@ -10451,28 +10534,46 @@ putop (const char *in_template, int sizeflag)\n \t    used_prefixes |= (prefixes & PREFIX_DATA);\n \t  break;\n \tcase 'H':\n-\t  if (intel_syntax)\n-\t    break;\n-\t  if ((prefixes & (PREFIX_CS | PREFIX_DS)) == PREFIX_CS\n-\t      || (prefixes & (PREFIX_CS | PREFIX_DS)) == PREFIX_DS)\n+\t  if (l == 0)\n \t    {\n-\t      used_prefixes |= prefixes & (PREFIX_CS | PREFIX_DS);\n-\t      *obufp++ = ',';\n-\t      *obufp++ = 'p';\n-\n-\t      /* Set active_seg_prefix even if not set in 64-bit mode\n-\t\t because here it is a valid branch hint. */\n-\t      if (prefixes & PREFIX_DS)\n+\t      if (intel_syntax)\n+\t        break;\n+\t      if ((prefixes & (PREFIX_CS | PREFIX_DS)) == PREFIX_CS\n+\t          || (prefixes & (PREFIX_CS | PREFIX_DS)) == PREFIX_DS)\n \t\t{\n-\t\t  active_seg_prefix = PREFIX_DS;\n-\t\t  *obufp++ = 't';\n+\t          used_prefixes |= prefixes & (PREFIX_CS | PREFIX_DS);\n+\t          *obufp++ = ',';\n+\t          *obufp++ = 'p';\n+\n+\t\t  /* Set active_seg_prefix even if not set in 64-bit mode\n+\t\t     because here it is a valid branch hint. */\n+\t\t  if (prefixes & PREFIX_DS)\n+\t\t    {\n+\t\t      active_seg_prefix = PREFIX_DS;\n+\t\t      *obufp++ = 't';\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      active_seg_prefix = PREFIX_CS;\n+\t\t      *obufp++ = 'n';\n+\t\t    }\n \t\t}\n+\t    }\n+\t  else if (l == 1 && last[0] == 'X')\n+\t    {\n+\t      if (vex.w == 0)\n+\t\t*obufp++ = 'h';\n \t      else\n \t\t{\n-\t\t  active_seg_prefix = PREFIX_CS;\n-\t\t  *obufp++ = 'n';\n+\t\t  *obufp++ = '{';\n+\t\t  *obufp++ = 'b';\n+\t\t  *obufp++ = 'a';\n+\t\t  *obufp++ = 'd';\n+\t\t  *obufp++ = '}';\n \t\t}\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'K':\n \t  USED_REX (REX_W);\n@@ -10956,14 +11057,25 @@ print_displacement (char *buf, bfd_vma disp)\n static void\n intel_operand_size (int bytemode, int sizeflag)\n {\n-  if (vex.b\n-      && (bytemode == x_mode\n-\t  || bytemode == evex_half_bcst_xmmq_mode))\n+  if (vex.b)\n     {\n-      if (vex.w)\n-\toappend (\"QWORD PTR \");\n-      else\n-\toappend (\"DWORD PTR \");\n+      switch (bytemode)\n+\t{\n+\tcase x_mode:\n+\tcase evex_half_bcst_xmmq_mode:\n+\t  if (vex.w)\n+\t    oappend (\"QWORD PTR \");\n+\t  else\n+\t    oappend (\"DWORD PTR \");\n+\t  break;\n+\tcase xh_mode:\n+\tcase evex_half_bcst_xmmqh_mode:\n+\tcase evex_half_bcst_xmmqdh_mode:\n+\t  oappend (\"WORD PTR \");\n+\t  break;\n+\tdefault:\n+\t  abort ();\n+\t}\n       return;\n     }\n   switch (bytemode)\n@@ -10974,6 +11086,7 @@ intel_operand_size (int bytemode, int sizeflag)\n       oappend (\"BYTE PTR \");\n       break;\n     case w_mode:\n+    case w_swap_mode:\n     case dw_mode:\n       oappend (\"WORD PTR \");\n       break;\n@@ -11054,6 +11167,7 @@ intel_operand_size (int bytemode, int sizeflag)\n       oappend (\"TBYTE PTR \");\n       break;\n     case x_mode:\n+    case xh_mode:\n     case x_swap_mode:\n     case evex_x_gscat_mode:\n     case evex_x_nobcst_mode:\n@@ -11085,6 +11199,7 @@ intel_operand_size (int bytemode, int sizeflag)\n       oappend (\"YMMWORD PTR \");\n       break;\n     case xmmq_mode:\n+    case evex_half_bcst_xmmqh_mode:\n     case evex_half_bcst_xmmq_mode:\n       if (!need_vex)\n \tabort ();\n@@ -11124,6 +11239,7 @@ intel_operand_size (int bytemode, int sizeflag)\n \t}\n       break;\n     case xmmqd_mode:\n+    case evex_half_bcst_xmmqdh_mode:\n       if (!need_vex)\n \tabort ();\n \n@@ -11341,6 +11457,7 @@ OP_E_memory (int bytemode, int sizeflag)\n \t{\n \tcase dw_mode:\n \tcase w_mode:\n+\tcase w_swap_mode:\n \t  shift = 1;\n \t  break;\n \tcase db_mode:\n@@ -11361,6 +11478,15 @@ OP_E_memory (int bytemode, int sizeflag)\n \tcase evex_x_gscat_mode:\n \t  shift = vex.w ? 3 : 2;\n \t  break;\n+\tcase xh_mode:\n+\tcase evex_half_bcst_xmmqh_mode:\n+\tcase evex_half_bcst_xmmqdh_mode:\n+\t  if (vex.b)\n+\t    {\n+\t      shift = vex.w ? 2 : 1;\n+\t      break;\n+\t    }\n+\t  /* Fall through.  */\n \tcase x_mode:\n \tcase evex_half_bcst_xmmq_mode:\n \t  if (vex.b)\n@@ -11391,10 +11517,12 @@ OP_E_memory (int bytemode, int sizeflag)\n \t    }\n \t  /* Make necessary corrections to shift for modes that need it.  */\n \t  if (bytemode == xmmq_mode\n+\t      || bytemode == evex_half_bcst_xmmqh_mode\n \t      || bytemode == evex_half_bcst_xmmq_mode\n \t      || (bytemode == ymmq_mode && vex.length == 128))\n \t    shift -= 1;\n-\t  else if (bytemode == xmmqd_mode)\n+\t  else if (bytemode == xmmqd_mode\n+\t           || bytemode == evex_half_bcst_xmmqdh_mode)\n \t    shift -= 2;\n \t  else if (bytemode == xmmdw_mode)\n \t    shift -= 3;\n@@ -11780,7 +11908,32 @@ OP_E_memory (int bytemode, int sizeflag)\n   if (vex.b)\n     {\n       evex_used |= EVEX_b_used;\n-      if (vex.w\n+      if (bytemode == xh_mode)\n+        {\n+          if (vex.w)\n+            {\n+              abort ();\n+            }\n+          else\n+            {\n+              switch (vex.length)\n+                {\n+                case 128:\n+                  oappend (\"{1to8}\");\n+                  break;\n+                case 256:\n+                  oappend (\"{1to16}\");\n+                  break;\n+                case 512:\n+                  oappend (\"{1to32}\");\n+                  break;\n+                default:\n+                  abort ();\n+                }\n+            }\n+        }\n+      else if (vex.w\n+\t  || bytemode == evex_half_bcst_xmmqdh_mode\n \t  || bytemode == evex_half_bcst_xmmq_mode)\n \t{\n \t  switch (vex.length)\n@@ -11798,7 +11951,8 @@ OP_E_memory (int bytemode, int sizeflag)\n \t      abort ();\n \t    }\n \t}\n-      else if (bytemode == x_mode)\n+      else if (bytemode == x_mode\n+\t  || bytemode == evex_half_bcst_xmmqh_mode)\n \t{\n \t  switch (vex.length)\n \t    {\n@@ -12448,6 +12602,7 @@ print_vector_reg (unsigned int reg, int bytemode)\n   const char **names;\n \n   if (bytemode == xmmq_mode\n+      || bytemode == evex_half_bcst_xmmqh_mode\n       || bytemode == evex_half_bcst_xmmq_mode)\n     {\n       switch (vex.length)\n@@ -12479,6 +12634,8 @@ print_vector_reg (unsigned int reg, int bytemode)\n \t   && bytemode != scalar_mode\n \t   && bytemode != xmmdw_mode\n \t   && bytemode != xmmqd_mode\n+\t   && bytemode != evex_half_bcst_xmmqdh_mode\n+\t   && bytemode != w_swap_mode\n \t   && bytemode != b_mode\n \t   && bytemode != w_mode\n \t   && bytemode != d_mode\n@@ -12634,6 +12791,7 @@ OP_EX (int bytemode, int sizeflag)\n \n   if ((sizeflag & SUFFIX_ALWAYS)\n       && (bytemode == x_swap_mode\n+\t  || bytemode == w_swap_mode\n \t  || bytemode == d_swap_mode\n \t  || bytemode == q_swap_mode))\n     swap_operand ();\n@@ -13507,6 +13665,46 @@ MOVSXD_Fixup (int bytemode, int sizeflag)\n   OP_E (bytemode, sizeflag);\n }\n \n+static void\n+DistinctDest_Fixup (int bytemode, int sizeflag)\n+{\n+  unsigned int reg = vex.register_specifier;\n+  unsigned int modrm_reg = modrm.reg;\n+  unsigned int modrm_rm = modrm.rm;\n+\n+  /* Calc destination register number.  */\n+  if (rex & REX_R)\n+    modrm_reg += 8;\n+  if (!vex.r)\n+    modrm_reg += 16;\n+\n+  /* Calc src1 register number.  */\n+  if (address_mode != mode_64bit)\n+    reg &= 7;\n+  else if (vex.evex && !vex.v)\n+    reg += 16;\n+\n+  /* Calc src2 register number.  */\n+  if (modrm.mod == 3)\n+    {\n+      if (rex & REX_B)\n+        modrm_rm += 8;\n+      if (rex & REX_X)\n+        modrm_rm += 16;\n+    }\n+\n+  /* Destination and source registers must be distinct, output bad if\n+     dest == src1 or dest == src2.  */\n+  if (modrm_reg == reg\n+      || (modrm.mod == 3\n+\t  && modrm_reg == modrm_rm))\n+    {\n+      oappend (\"(bad)\");\n+    }\n+  else\n+    OP_XMM (bytemode, sizeflag);\n+}\n+\n static void\n OP_Rounding (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n {"
    },
    {
      "sha": "f8de27ef346ab4fba3e1a3b920c037750f591902",
      "filename": "opcodes/i386-gen.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-gen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-gen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-gen.c?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -243,6 +243,8 @@ static initializer cpu_flag_init[] =\n     \"CPU_AVX512F_FLAGS|CpuAVX512_BITALG\" },\n   { \"CPU_AVX512_BF16_FLAGS\",\n     \"CPU_AVX512F_FLAGS|CpuAVX512_BF16\" },\n+  { \"CPU_AVX512_FP16_FLAGS\",\n+    \"CPU_AVX512BW_FLAGS|CpuAVX512_FP16\" },\n   { \"CPU_L1OM_FLAGS\",\n     \"unknown\" },\n   { \"CPU_K1OM_FLAGS\",\n@@ -374,7 +376,7 @@ static initializer cpu_flag_init[] =\n   { \"CPU_ANY_AVX2_FLAGS\",\n     \"CPU_ANY_AVX512F_FLAGS|CpuAVX2\" },\n   { \"CPU_ANY_AVX512F_FLAGS\",\n-    \"CpuAVX512F|CpuAVX512CD|CpuAVX512ER|CpuAVX512PF|CpuAVX512DQ|CpuAVX512BW|CpuAVX512VL|CpuAVX512IFMA|CpuAVX512VBMI|CpuAVX512_4FMAPS|CpuAVX512_4VNNIW|CpuAVX512_VPOPCNTDQ|CpuAVX512_VBMI2|CpuAVX512_VNNI|CpuAVX512_BITALG|CpuAVX512_BF16|CpuAVX512_VP2INTERSECT\" },\n+    \"CpuAVX512F|CpuAVX512CD|CpuAVX512ER|CpuAVX512PF|CpuAVX512DQ|CPU_ANY_AVX512BW_FLAGS|CpuAVX512VL|CpuAVX512IFMA|CpuAVX512VBMI|CpuAVX512_4FMAPS|CpuAVX512_4VNNIW|CpuAVX512_VPOPCNTDQ|CpuAVX512_VBMI2|CpuAVX512_VNNI|CpuAVX512_BITALG|CpuAVX512_BF16|CpuAVX512_VP2INTERSECT\" },\n   { \"CPU_ANY_AVX512CD_FLAGS\",\n     \"CpuAVX512CD\" },\n   { \"CPU_ANY_AVX512ER_FLAGS\",\n@@ -384,7 +386,7 @@ static initializer cpu_flag_init[] =\n   { \"CPU_ANY_AVX512DQ_FLAGS\",\n     \"CpuAVX512DQ\" },\n   { \"CPU_ANY_AVX512BW_FLAGS\",\n-    \"CpuAVX512BW\" },\n+    \"CpuAVX512BW|CPU_ANY_AVX512_FP16_FLAGS\" },\n   { \"CPU_ANY_AVX512VL_FLAGS\",\n     \"CpuAVX512VL\" },\n   { \"CPU_ANY_AVX512IFMA_FLAGS\",\n@@ -439,6 +441,8 @@ static initializer cpu_flag_init[] =\n     \"CpuWideKL\" },\n   { \"CPU_ANY_HRESET_FLAGS\",\n     \"CpuHRESET\" },\n+  { \"CPU_ANY_AVX512_FP16_FLAGS\",\n+    \"CpuAVX512_FP16\" },\n };\n \n static initializer operand_type_init[] =\n@@ -645,6 +649,7 @@ static bitfield cpu_flags[] =\n   BITFIELD (CpuAVX512_VP2INTERSECT),\n   BITFIELD (CpuTDX),\n   BITFIELD (CpuAVX_VNNI),\n+  BITFIELD (CpuAVX512_FP16),\n   BITFIELD (CpuMWAITX),\n   BITFIELD (CpuCLZERO),\n   BITFIELD (CpuOSPKE),\n@@ -693,6 +698,7 @@ static bitfield opcode_modifiers[] =\n   BITFIELD (FloatR),\n   BITFIELD (Size),\n   BITFIELD (CheckRegSize),\n+  BITFIELD (DistinctDest),\n   BITFIELD (MnemonicSize),\n   BITFIELD (Anysize),\n   BITFIELD (No_bSuf),"
    },
    {
      "sha": "ee8684bd880ea9af9049bb4aa3af0e4c3ff05a06",
      "filename": "opcodes/i386-init.h",
      "status": "modified",
      "additions": 269,
      "deletions": 251,
      "changes": 520,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-init.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-init.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-init.h?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -25,7 +25,7 @@\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n-      1, 1, 1, 0, 1, 1 } }\n+      1, 1, 1, 1, 0, 1, 1 } }\n \n #define CPU_GENERIC32_FLAGS \\\n   { { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -34,7 +34,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_GENERIC64_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, \\\n@@ -43,7 +43,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_NONE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -52,7 +52,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I186_FLAGS \\\n   { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -61,7 +61,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I286_FLAGS \\\n   { { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -70,7 +70,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I386_FLAGS \\\n   { { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -79,7 +79,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I486_FLAGS \\\n   { { 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -88,7 +88,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I586_FLAGS \\\n   { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n@@ -97,7 +97,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_I686_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \\\n@@ -106,7 +106,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PENTIUMPRO_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \\\n@@ -115,7 +115,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_P2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, \\\n@@ -124,7 +124,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_P3_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, \\\n@@ -133,7 +133,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_P4_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, \\\n@@ -142,7 +142,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_NOCONA_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -151,7 +151,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CORE_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -160,7 +160,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CORE2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -169,7 +169,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_COREI7_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -178,7 +178,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_K6_FLAGS \\\n   { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, \\\n@@ -187,7 +187,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_K6_2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, \\\n@@ -196,7 +196,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ATHLON_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, \\\n@@ -205,7 +205,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_K8_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, \\\n@@ -214,7 +214,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AMDFAM10_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, \\\n@@ -223,7 +223,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BDVER1_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -232,7 +232,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BDVER2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -241,7 +241,7 @@\n       1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BDVER3_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -250,43 +250,43 @@\n       1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BDVER4_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, \\\n       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ZNVER1_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, \\\n       1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ZNVER2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, \\\n       1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ZNVER3_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n       0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, \\\n       1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, \\\n-      0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \\\n-      1, 1, 1, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, \\\n+      0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, \\\n+      0, 1, 1, 1, 0, 0, 0 } }\n \n #define CPU_BTVER1_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -295,7 +295,7 @@\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BTVER2_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, \\\n@@ -304,7 +304,7 @@\n       1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_8087_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -313,7 +313,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_287_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -322,7 +322,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_387_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n@@ -331,7 +331,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_687_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, \\\n@@ -340,7 +340,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CMOV_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -349,7 +349,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_FXSR_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -358,7 +358,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CLFLUSH_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -367,7 +367,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_NOP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -376,7 +376,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SYSCALL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -385,7 +385,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MMX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n@@ -394,7 +394,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n@@ -403,7 +403,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -412,7 +412,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE3_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -421,7 +421,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSSE3_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -430,7 +430,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE4_1_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -439,7 +439,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE4_2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -448,7 +448,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_VMX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -457,7 +457,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SMX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -466,7 +466,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_XSAVE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -475,7 +475,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_XSAVEOPT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -484,7 +484,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AES_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -493,7 +493,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PCLMUL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -502,7 +502,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_FMA_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -511,7 +511,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_FMA4_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -520,7 +520,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_XOP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -529,7 +529,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_LWP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -538,7 +538,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BMI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -547,7 +547,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_TBM_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -556,7 +556,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MOVBE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -565,7 +565,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CX16_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -574,7 +574,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RDTSCP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -583,7 +583,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_EPT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -592,7 +592,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_FSGSBASE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -601,7 +601,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RDRND_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -610,7 +610,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_F16C_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -619,7 +619,7 @@\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_BMI2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -628,7 +628,7 @@\n       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_LZCNT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -637,7 +637,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_POPCNT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -646,7 +646,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_HLE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -655,7 +655,7 @@\n       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RTM_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -664,7 +664,7 @@\n       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_INVPCID_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -673,7 +673,7 @@\n       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_VMFUNC_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -682,7 +682,7 @@\n       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_3DNOW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, \\\n@@ -691,7 +691,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_3DNOWA_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, \\\n@@ -700,7 +700,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PADLOCK_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -709,7 +709,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SVME_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -718,7 +718,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SSE4A_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -727,7 +727,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ABM_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -736,7 +736,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -745,7 +745,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -754,7 +754,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX_VNNI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -763,7 +763,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512F_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -772,7 +772,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512CD_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -781,7 +781,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512ER_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -790,7 +790,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512PF_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -799,7 +799,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512DQ_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -808,7 +808,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512BW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -817,7 +817,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512VL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -826,7 +826,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512IFMA_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -835,7 +835,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512VBMI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -844,7 +844,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_4FMAPS_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -853,7 +853,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_4VNNIW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -862,7 +862,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_VPOPCNTDQ_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -871,7 +871,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_VBMI2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -880,7 +880,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_VNNI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -889,7 +889,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_BITALG_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -898,7 +898,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_BF16_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -907,7 +907,16 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n+\n+#define CPU_AVX512_FP16_FLAGS \\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n+      0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, \\\n+      1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_L1OM_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n@@ -916,7 +925,7 @@\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n-      1, 1, 1, 0, 1, 1 } }\n+      1, 1, 1, 1, 0, 1, 1 } }\n \n #define CPU_K1OM_FLAGS \\\n   { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n@@ -925,7 +934,7 @@\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n-      1, 1, 1, 0, 1, 1 } }\n+      1, 1, 1, 1, 0, 1, 1 } }\n \n #define CPU_IAMCU_FLAGS \\\n   { { 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -934,7 +943,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ADX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -943,7 +952,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RDSEED_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -952,7 +961,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PRFCHW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -961,7 +970,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SMAP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -970,7 +979,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MPX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -979,7 +988,7 @@\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SHA_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -988,7 +997,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CLFLUSHOPT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -997,7 +1006,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_XSAVES_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1006,7 +1015,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_XSAVEC_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1015,7 +1024,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PREFETCHWT1_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1024,7 +1033,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SE1_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1033,7 +1042,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CLWB_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1042,205 +1051,205 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CLZERO_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MWAITX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_OSPKE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RDPID_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PTWRITE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_IBT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SHSTK_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_GFNI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_VAES_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_VPCLMULQDQ_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_WBNOINVD_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_PCONFIG_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_WAITPKG_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_UINTR_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_CLDEMOTE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AMX_INT8_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AMX_BF16_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AMX_TILE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MOVDIRI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MOVDIR64B_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ENQCMD_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SERIALIZE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_AVX512_VP2INTERSECT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1249,7 +1258,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_TDX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1258,70 +1267,70 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_RDPRU_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_MCOMMIT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_SEV_ES_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_TSXLDTRK_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_KL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_WIDEKL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_HRESET_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      1, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_INVLPGB_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1330,7 +1339,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      1, 0, 0, 0, 0, 0 } }\n+      0, 1, 0, 0, 0, 0, 0 } }\n \n #define CPU_TLBSYNC_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1339,7 +1348,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 1, 0, 0, 0, 0 } }\n+      0, 0, 1, 0, 0, 0, 0 } }\n \n #define CPU_SNP_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1348,7 +1357,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 1, 0, 0, 0 } }\n+      0, 0, 0, 1, 0, 0, 0 } }\n \n #define CPU_ANY_X87_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, \\\n@@ -1357,7 +1366,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_287_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, \\\n@@ -1366,7 +1375,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_387_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, \\\n@@ -1375,7 +1384,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_687_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, \\\n@@ -1384,7 +1393,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_CMOV_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1393,7 +1402,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_FXSR_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1402,7 +1411,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_MMX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, \\\n@@ -1411,7 +1420,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n@@ -1420,7 +1429,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n@@ -1429,7 +1438,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE3_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1438,7 +1447,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSSE3_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1447,7 +1456,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE4_1_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1456,7 +1465,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE4_2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1465,7 +1474,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SSE4A_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1474,34 +1483,34 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n-      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n-      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512F_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n-      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512CD_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1510,7 +1519,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512ER_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1519,7 +1528,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512PF_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1528,7 +1537,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512DQ_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1537,16 +1546,16 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512BW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512VL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1555,7 +1564,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512IFMA_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1564,7 +1573,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512VBMI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1573,7 +1582,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_4FMAPS_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1582,7 +1591,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_4VNNIW_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1591,7 +1600,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_VPOPCNTDQ_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1600,25 +1609,25 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_IBT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SHSTK_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_VBMI2_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1627,7 +1636,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_VNNI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1636,7 +1645,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_BITALG_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1645,7 +1654,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_BF16_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1654,34 +1663,34 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AMX_INT8_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AMX_BF16_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AMX_TILE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, \\\n-      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n+      1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX_VNNI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1690,52 +1699,52 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_MOVDIRI_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_UINTR_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_MOVDIR64B_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_ENQCMD_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_SERIALIZE_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_AVX512_VP2INTERSECT_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1744,7 +1753,7 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_TDX_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n@@ -1753,43 +1762,52 @@\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_TSXLDTRK_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_KL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_WIDEKL_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n #define CPU_ANY_HRESET_FLAGS \\\n   { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, \\\n-      0, 0, 0, 0, 0, 0 } }\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      1, 0, 0, 0, 0, 0, 0 } }\n+\n+#define CPU_ANY_AVX512_FP16_FLAGS \\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n+      0, 0, 0, 0, 0, 0, 0 } }\n \n \n #define OPERAND_TYPE_NONE \\"
    },
    {
      "sha": "f83af0b2bb49cb86b99f68ea199a4dcd643ae3b4",
      "filename": "opcodes/i386-opc.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.h?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -211,6 +211,8 @@ enum\n   CpuTDX,\n   /* Intel AVX VNNI Instructions support required.  */\n   CpuAVX_VNNI,\n+  /* Intel AVX-512 FP16 Instructions support required.  */\n+  CpuAVX512_FP16,\n   /* mwaitx instruction required */\n   CpuMWAITX,\n   /* Clzero instruction required */\n@@ -388,6 +390,7 @@ typedef union i386_cpu_flags\n       unsigned int cpuavx512_vp2intersect:1;\n       unsigned int cputdx:1;\n       unsigned int cpuavx_vnni:1;\n+      unsigned int cpuavx512_fp16:1;\n       unsigned int cpumwaitx:1;\n       unsigned int cpuclzero:1;\n       unsigned int cpuospke:1;\n@@ -467,6 +470,9 @@ enum\n   Size,\n   /* check register size.  */\n   CheckRegSize,\n+  /* Instrucion requires that destination must be distinct from source\n+     registers.  */\n+  DistinctDest,\n   /* instruction ignores operand size prefix and in Intel mode ignores\n      mnemonic size suffix check.  */\n #define IGNORESIZE\t1\n@@ -578,6 +584,8 @@ enum\n      1: 0F opcode prefix / space.\n      2: 0F38 opcode prefix / space.\n      3: 0F3A opcode prefix / space.\n+     5: EVEXMAP5 opcode prefix / space.\n+     6: EVEXMAP6 opcode prefix / space.\n      8: XOP 08 opcode space.\n      9: XOP 09 opcode space.\n      A: XOP 0A opcode space.\n@@ -586,6 +594,8 @@ enum\n #define SPACE_0F\t1\n #define SPACE_0F38\t2\n #define SPACE_0F3A\t3\n+#define SPACE_EVEXMAP5\t5\n+#define SPACE_EVEXMAP6\t6\n #define SPACE_XOP08\t8\n #define SPACE_XOP09\t9\n #define SPACE_XOP0A\t0xA\n@@ -718,6 +728,7 @@ typedef struct i386_opcode_modifier\n   unsigned int floatr:1;\n   unsigned int size:2;\n   unsigned int checkregsize:1;\n+  unsigned int distinctdest:1;\n   unsigned int mnemonicsize:2;\n   unsigned int anysize:1;\n   unsigned int no_bsuf:1;"
    },
    {
      "sha": "ba9451a4e4e0986255315c193184daa488b53b9e",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 366,
      "deletions": 0,
      "changes": 366,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=0cc7872125efa71879e34403cc644cd19434eae3",
      "patch": "@@ -95,6 +95,9 @@\n #define SpaceXOP09 OpcodeSpace=SPACE_XOP09\n #define SpaceXOP0A OpcodeSpace=SPACE_XOP0A\n \n+#define EVexMap5 OpcodeSpace=SPACE_EVEXMAP5\n+#define EVexMap6 OpcodeSpace=SPACE_EVEXMAP6\n+\n #define VexW0 VexW=VEXW0\n #define VexW1 VexW=VEXW1\n #define VexWIG VexW=VEXWIG\n@@ -3930,3 +3933,366 @@ senduipi, 0xf30fc7, 6, CpuUINTR|Cpu64, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_\n hreset, 0xf30f3af0c0, None, CpuHRESET, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8 }\n \n // HRESET instructions end.\n+\n+// FP16 (HFNI) instructions.\n+\n+vaddph, 0x58, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vaddph, 0x58, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vaddsh, 0xf358, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap5|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vaddsh, 0xf358, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfcmaddcph, 0xf256, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Dword|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfcmaddcph, 0xf256, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfcmaddcsh, 0xf257, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=2|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfcmaddcsh, 0xf257, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmaddcph, 0xf356, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Dword|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmaddcph, 0xf356, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmaddcsh, 0xf357, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=2|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmaddcsh, 0xf357, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfcmulcph, 0xf2d6, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Dword|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfcmulcph, 0xf2d6, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfcmulcsh, 0xf2d7, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=2|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfcmulcsh, 0xf2d7, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmulcph, 0xf3d6, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Dword|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmulcph, 0xf3d6, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmulcsh, 0xf3d7, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=2|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmulcsh, 0xf3d7, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|DistinctDest|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vcmp<avx_frel>ph, 0xc2, 0x<avx_frel:imm>, CpuAVX512_FP16, Modrm|Masking=2|Space0F3A|VexVVVV|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ImmExt, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegMask }\n+vcmp<avx_frel>ph, 0xc2, 0x<avx_frel:imm>, CpuAVX512_FP16, Modrm|EVex512|Masking=2|Space0F3A|VexVVVV=1|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ImmExt|SAE, { Imm8, RegZMM, RegZMM, RegMask }\n+vcmpph, 0xc2, None, CpuAVX512_FP16, Modrm|Masking=2|Space0F3A|VexVVVV|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegMask }\n+vcmpph, 0xc2, None, CpuAVX512_FP16, Modrm|EVex512|Masking=2|Space0F3A|VexVVVV=1|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegZMM, RegZMM, RegMask }\n+\n+vcmp<avx_frel>sh, 0xf3c2, 0x<avx_frel:imm>, CpuAVX512_FP16, Modrm|EVex128|Masking=2|Space0F3A|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ImmExt, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegMask }\n+vcmp<avx_frel>sh, 0xf3c2, 0x<avx_frel:imm>, CpuAVX512_FP16, Modrm|EVex128|Masking=2|Space0F3A|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ImmExt|SAE, { Imm8, RegXMM, RegXMM, RegMask }\n+vcmpsh, 0xf3c2, None, CpuAVX512_FP16, Modrm|EVex128|Masking=2|Space0F3A|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegMask }\n+vcmpsh, 0xf3c2, None, CpuAVX512_FP16, Modrm|EVex128|Masking=2|Space0F3A|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegXMM, RegXMM, RegMask }\n+\n+vcomish, 0x2f, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM }\n+vcomish, 0x2f, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM }\n+vucomish, 0x2e, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM }\n+vucomish, 0x2e, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM }\n+\n+vcvtdq2ph, 0x5b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|Dword|BaseIndex, RegXMM }\n+vcvtdq2ph, 0x5b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegZMM|Dword|Unspecified|BaseIndex, RegYMM }\n+vcvtdq2phx, 0x5b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtdq2phy, 0x5b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtdq2ph, 0x5b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegYMM }\n+\n+vcvtudq2ph, 0xf27a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegZMM|Dword|Unspecified|BaseIndex, RegYMM }\n+vcvtudq2ph, 0xf27a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|Dword|BaseIndex, RegXMM }\n+vcvtudq2phx, 0xf27a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtudq2phy, 0xf27a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtudq2ph, 0xf27a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegYMM }\n+\n+vcvtqq2ph, 0x5b, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW1|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Qword|BaseIndex, RegXMM }\n+vcvtqq2phz, 0x5b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegZMM|Unspecified|BaseIndex, RegXMM }\n+vcvtqq2phx, 0x5b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW1|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtqq2phy, 0x5b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW1|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtqq2ph, 0x5b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegXMM }\n+\n+vcvtuqq2ph, 0xf27a, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW1|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Qword|BaseIndex, RegXMM }\n+vcvtuqq2phz, 0xf27a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegZMM|Unspecified|BaseIndex, RegXMM }\n+vcvtuqq2phx, 0xf27a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW1|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtuqq2phy, 0xf27a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW1|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtuqq2ph, 0xf27a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegXMM }\n+\n+vcvtpd2ph, 0x665a, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW1|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Qword|BaseIndex, RegXMM }\n+vcvtpd2phx, 0x665a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW1|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtpd2phy, 0x665a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW1|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtpd2phz, 0x665a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegZMM|Unspecified|BaseIndex, RegXMM }\n+vcvtpd2ph, 0x665a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegXMM }\n+\n+vcvtps2phx, 0x661d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegZMM|Dword|Unspecified|BaseIndex, RegYMM }\n+vcvtps2phx, 0x661d, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|Dword|BaseIndex, RegXMM }\n+vcvtps2phxx, 0x661d, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegXMM|Unspecified|BaseIndex, RegXMM }\n+vcvtps2phxy, 0x661d, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { RegYMM|Unspecified|BaseIndex, RegXMM }\n+vcvtps2phx, 0x661d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegYMM }\n+\n+vcvtw2ph, 0xf37d, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvtw2ph, 0xf37d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvtuw2ph, 0xf27d, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvtuw2ph, 0xf27d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvtph2dq, 0x665b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2dq, 0x665b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegYMM }\n+vcvtph2dq, 0x665b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegYMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2dq, 0x665b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegYMM, RegZMM }\n+\n+vcvtph2udq, 0x79, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2udq, 0x79, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegYMM }\n+vcvtph2udq, 0x79, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegYMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2udq, 0x79, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegYMM, RegZMM }\n+\n+vcvtph2qq, 0x667b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Dword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2qq, 0x667b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegYMM }\n+vcvtph2qq, 0x667b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2qq, 0x667b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegZMM }\n+\n+vcvtph2uqq, 0x6679, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Dword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2uqq, 0x6679, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegYMM }\n+vcvtph2uqq, 0x6679, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2uqq, 0x6679, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegZMM }\n+\n+vcvtph2pd, 0x5a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Dword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2pd, 0x5a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegYMM }\n+vcvtph2pd, 0x5a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2pd, 0x5a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegZMM }\n+\n+vcvtph2w, 0x667d, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvtph2w, 0x667d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvtph2uw, 0x7d, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvtph2uw, 0x7d, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvtsd2sh, 0xf25a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW1|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Qword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtsd2sh, 0xf25a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vcvtss2sh, 0x1d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtss2sh, 0x1d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vcvtsi2sh, 0xf32a, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|Disp8ShiftVL|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|ATTSyntax, { Reg32|Reg64|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtsi2sh, 0xf32a, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|Disp8ShiftVL|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|IntelSyntax, { Reg32|Reg64|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtsi2sh, 0xf32a, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|StaticRounding|SAE, { Reg32|Reg64, Imm8, RegXMM, RegXMM }\n+vcvtsi2sh, 0xf32a, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|StaticRounding|SAE|IntelSyntax, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n+\n+vcvtusi2sh, 0xf37b, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|Disp8ShiftVL|IgnoreSize|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|ATTSyntax, { Reg32|Reg64|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtusi2sh, 0xf37b, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|Disp8ShiftVL|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|IntelSyntax, { Reg32|Reg64|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtusi2sh, 0xf37b, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|StaticRounding|SAE, { Reg32|Reg64, Imm8, RegXMM, RegXMM }\n+vcvtusi2sh, 0xf37b, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|VexVVVV|No_bSuf|No_wSuf|No_sSuf|No_ldSuf|StaticRounding|SAE|IntelSyntax, { Imm8, Reg32|Reg64, RegXMM, RegXMM }\n+\n+vcvtsh2sd, 0xf35a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtsh2sd, 0xf35a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vcvtsh2ss, 0x13, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vcvtsh2ss, 0x13, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vcvtsh2si, 0xf32d, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ToQword, { RegXMM|Word|Unspecified|BaseIndex, Reg32|Reg64 }\n+vcvtsh2si, 0xf32d, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, Reg32|Reg64 }\n+\n+vcvtsh2usi, 0xf379, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ToQword, { RegXMM|Word|Unspecified|BaseIndex, Reg32|Reg64 }\n+vcvtsh2usi, 0xf379, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, Reg32|Reg64 }\n+\n+vcvttph2dq, 0xf35b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegXMM }\n+vcvttph2dq, 0xf35b, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegYMM }\n+vcvttph2dq, 0xf35b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegYMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvttph2dq, 0xf35b, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegYMM, RegZMM }\n+\n+vcvttph2udq, 0x78, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegXMM }\n+vcvttph2udq, 0x78, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegYMM }\n+vcvttph2udq, 0x78, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegYMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvttph2udq, 0x78, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegYMM, RegZMM }\n+\n+vcvttph2qq, 0x667a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Dword|Unspecified|BaseIndex, RegXMM }\n+vcvttph2qq, 0x667a, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegYMM }\n+vcvttph2qq, 0x667a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvttph2qq, 0x667a, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegZMM }\n+\n+vcvttph2uqq, 0x6678, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=2|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Dword|Unspecified|BaseIndex, RegXMM }\n+vcvttph2uqq, 0x6678, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegYMM }\n+vcvttph2uqq, 0x6678, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvttph2uqq, 0x6678, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegZMM }\n+\n+vcvtph2psx, 0x6613, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=3|EVexMap6|VexW0|Broadcast|Disp8MemShift=3|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Qword|Unspecified|BaseIndex, RegXMM }\n+vcvtph2psx, 0x6613, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=3|EVexMap6|VexW0|Broadcast|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegYMM }\n+vcvtph2psx, 0x6613, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap6|VexW0|Broadcast|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegYMM|Word|Unspecified|BaseIndex, RegZMM }\n+vcvtph2psx, 0x6613, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegYMM, RegZMM }\n+\n+vcvttph2w, 0x667c, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvttph2w, 0x667c, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvttph2uw, 0x7c, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vcvttph2uw, 0x7c, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vcvttsh2si, 0xf32c, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ToQword, { RegXMM|Word|Unspecified|BaseIndex, Reg32|Reg64 }\n+vcvttsh2si, 0xf32c, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, Reg32|Reg64 }\n+\n+vcvttsh2usi, 0xf378, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ToQword, { RegXMM|Word|Unspecified|BaseIndex, Reg32|Reg64 }\n+vcvttsh2usi, 0xf378, None, CpuAVX512_FP16, Modrm|EVexLIG|EVexMap5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, Reg32|Reg64 }\n+\n+vdivph, 0x5e, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vdivph, 0x5e, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vdivsh, 0xf35e, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vdivsh, 0xf35e, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmadd132ph, 0x6698, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmadd132ph, 0x6698, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmadd213ph, 0x66a8, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmadd213ph, 0x66a8, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmadd231ph, 0x66b8, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmadd231ph, 0x66b8, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmadd132sh, 0x6699, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmadd132sh, 0x6699, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmadd213sh, 0x66a9, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmadd213sh, 0x66a9, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmadd231sh, 0x66b9, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmadd231sh, 0x66b9, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmaddsub132ph, 0x6696, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmaddsub132ph, 0x6696, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmaddsub213ph, 0x66a6, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmaddsub213ph, 0x66a6, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmaddsub231ph, 0x66b6, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmaddsub231ph, 0x66b6, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmadd132ph, 0x669c, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmadd132ph, 0x669c, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmadd213ph, 0x66ac, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmadd213ph, 0x66ac, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmadd231ph, 0x66bc, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmadd231ph, 0x66bc, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmadd132sh, 0x669d, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmadd132sh, 0x669d, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfnmadd213sh, 0x66ad, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmadd213sh, 0x66ad, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfnmadd231sh, 0x66bd, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmadd231sh, 0x66bd, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfpclassph, 0x66, None, CpuAVX512_FP16, Modrm|Masking=2|Space0F3A|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|RegYMM|RegZMM|Word|BaseIndex, RegMask }\n+vfpclassphz, 0x66, None, CpuAVX512_FP16, Modrm|EVex512|Masking=2|Space0F3A|VexW0|Disp8MemShift=6|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { Imm8, RegZMM|Unspecified|BaseIndex, RegMask }\n+vfpclassphx, 0x66, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex128|Masking=2|Space0F3A|VexW0|Disp8MemShift=4|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { Imm8, RegXMM|Unspecified|BaseIndex, RegMask }\n+vfpclassphy, 0x66, None, CpuAVX512_FP16|CpuAVX512VL, Modrm|EVex256|Masking=2|Space0F3A|VexW0|Disp8MemShift=5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|ATTSyntax, { Imm8, RegYMM|Unspecified|BaseIndex, RegMask }\n+\n+vfpclasssh, 0x67, None, CpuAVX512_FP16, Modrm|EVex128|Masking=2|Space0F3A|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Word|Unspecified|BaseIndex, RegMask }\n+\n+vgetmantph, 0x26, None, CpuAVX512_FP16, Modrm|Masking=3|Space0F3A|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vgetmantph, 0x26, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|Space0F3A|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegZMM, RegZMM }\n+vgetmantsh, 0x27, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vgetmantsh, 0x27, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vmaxph, 0x5f, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vmaxph, 0x5f, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vmaxsh, 0xf35f, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vmaxsh, 0xf35f, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vminph, 0x5d, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vminph, 0x5d, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vminsh, 0xf35d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vminsh, 0xf35d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vmovsh, 0xf310, None, CpuAVX512_FP16, D|Modrm|EVexLIG|Masking=3|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Word|Unspecified|BaseIndex, RegXMM }\n+vmovsh, 0xf310, None, CpuAVX512_FP16, D|Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, RegXMM, RegXMM }\n+\n+vmovw, 0x666e, None, CpuAVX512_FP16, D|Modrm|EVex128|VexWIG|EVexMap5|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Word|Unspecified|BaseIndex, RegXMM }\n+vmovw, 0x667e, None, CpuAVX512_FP16, D|RegMem|EVex128|VexWIG|EVexMap5|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Reg32 }\n+\n+vfmsub132ph, 0x669a, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsub132ph, 0x669a, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmsub213ph, 0x66aa, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsub213ph, 0x66aa, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmsub231ph, 0x66ba, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsub231ph, 0x66ba, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmsub132sh, 0x669b, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmsub132sh, 0x669b, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmsub213sh, 0x66ab, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmsub213sh, 0x66ab, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmsub231sh, 0x66bb, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfmsub231sh, 0x66bb, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfmsubadd132ph, 0x6697, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsubadd132ph, 0x6697, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmsubadd213ph, 0x66a7, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsubadd213ph, 0x66a7, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfmsubadd231ph, 0x66b7, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfmsubadd231ph, 0x66b7, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmsub132ph, 0x669e, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmsub132ph, 0x669e, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmsub213ph, 0x66ae, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmsub213ph, 0x66ae, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmsub231ph, 0x66be, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vfnmsub231ph, 0x66be, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vfnmsub132sh, 0x669f, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmsub132sh, 0x669f, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfnmsub213sh, 0x66af, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmsub213sh, 0x66af, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vfnmsub231sh, 0x66bf, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vfnmsub231sh, 0x66bf, None, CpuAVX512_FP16, Modrm|EVexLIG|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vgetexpph, 0x6642, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vgetexpph, 0x6642, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vgetexpsh, 0x6643, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vgetexpsh, 0x6643, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vmulph, 0x59, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vmulph, 0x59, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vmulsh, 0xf359, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vmulsh, 0xf359, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vreduceph, 0x56, None, CpuAVX512_FP16, Modrm|Masking=3|Space0F3A|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vreduceph, 0x56, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|Space0F3A|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegZMM, RegZMM }\n+\n+vreducesh, 0x57, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vreducesh, 0x57, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vrndscaleph, 0x08, None, CpuAVX512_FP16, Modrm|Masking=3|Space0F3A|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vrndscaleph, 0x08, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|Space0F3A|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegZMM, RegZMM }\n+\n+vrndscalesh, 0x0a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vrndscalesh, 0x0a, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|Space0F3A|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SAE, { Imm8, Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vrcpph, 0x664c, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+\n+vrcpsh, 0x664d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+\n+vrsqrtph, 0x664e, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+\n+vrsqrtsh, 0x664f, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+\n+vscalefph, 0x662c, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap6|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vscalefph, 0x662c, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap6|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vscalefsh, 0x662d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vscalefsh, 0x662d, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap6|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vsqrtph, 0x51, None, CpuAVX512_FP16, Modrm|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }\n+vsqrtph, 0x51, None, CpuAVX512_FP16, Modrm|EVex512|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM }\n+\n+vsqrtsh, 0xf351, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vsqrtsh, 0xf351, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+vsubph, 0x5c, None, CpuAVX512_FP16, Modrm|VexVVVV|Masking=3|EVexMap5|VexW0|Broadcast|Disp8ShiftVL|CheckRegSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|RegYMM|RegZMM|Word|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }\n+vsubph, 0x5c, None, CpuAVX512_FP16, Modrm|EVex512|VexVVVV|Masking=3|EVexMap5|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegZMM, RegZMM, RegZMM }\n+\n+vsubsh, 0xf35c, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|Disp8MemShift=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM|Word|Unspecified|BaseIndex, RegXMM, RegXMM }\n+vsubsh, 0xf35c, None, CpuAVX512_FP16, Modrm|EVexLIG|Masking=3|EVexMap5|VexVVVV|VexW0|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|StaticRounding|SAE, { Imm8, RegXMM, RegXMM, RegXMM }\n+\n+// FP16 (HFNI) instructions end."
    },
    {
      "sha": "e0151f9b4ac625d8d23b484c660ebca270d9e0d0",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 23504,
      "deletions": 15911,
      "changes": 39415,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0cc7872125efa71879e34403cc644cd19434eae3/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=0cc7872125efa71879e34403cc644cd19434eae3"
    }
  ]
}