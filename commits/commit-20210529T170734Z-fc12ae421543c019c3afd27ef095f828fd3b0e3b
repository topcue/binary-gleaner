{
  "sha": "fc12ae421543c019c3afd27ef095f828fd3b0e3b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmMxMmFlNDIxNTQzYzAxOWMzYWZkMjdlZjA5NWY4MjhmZDNiMGUzYg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T16:20:20Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T17:07:34Z"
    },
    "message": "sim: frv: fix compiler parentheses suggestions warnings\n\nNewer gcc warns when writing statements like (a && b || c && d),\nso add more parentheses to make it (and the reader) happy.",
    "tree": {
      "sha": "afd84659c25c95f0d64d4a51c34ac305bbb331eb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/afd84659c25c95f0d64d4a51c34ac305bbb331eb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc12ae421543c019c3afd27ef095f828fd3b0e3b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc12ae421543c019c3afd27ef095f828fd3b0e3b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc12ae421543c019c3afd27ef095f828fd3b0e3b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc12ae421543c019c3afd27ef095f828fd3b0e3b/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd7caae65175a8ea1149cae7dcf11948f4933d1b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd7caae65175a8ea1149cae7dcf11948f4933d1b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd7caae65175a8ea1149cae7dcf11948f4933d1b"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 39,
    "deletions": 25
  },
  "files": [
    {
      "sha": "348308d7b64e75e80225dc47da59b6e2c863ee45",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=fc12ae421543c019c3afd27ef095f828fd3b0e3b",
      "patch": "@@ -1,3 +1,16 @@\n+2021-05-29  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* cache.c (non_cache_access): Add parentheses.\n+\t* memory.c (fr500_check_data_read_address): Likewise.\n+\t(fr550_check_data_read_address): Likewise.\n+\t(fr500_check_readwrite_address): Likewise.\n+\t(fr550_check_readwrite_address): Likewise.\n+\t(fr500_check_insn_read_address): Likewise.\n+\t(fr500_check_write_address): Likewise.\n+\t(fr550_check_write_address): Likewise.\n+\t* traps.c (frv_mtrap): Likewise.\n+\t(frvbf_commit): Likewise.\n+\n 2021-05-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-main.h (struct sim_state): Delete."
    },
    {
      "sha": "5c7700354fe4a2b8172fbfae2a67163d5b822584",
      "filename": "sim/frv/cache.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/cache.c?ref=fc12ae421543c019c3afd27ef095f828fd3b0e3b",
      "patch": "@@ -211,12 +211,12 @@ non_cache_access (FRV_CACHE *cache, USI address)\n     case bfd_mach_fr400:\n     case bfd_mach_fr450:\n       if (address >= 0xff000000\n-\t  || address >= 0xfe000000 && address <= 0xfeffffff)\n+\t  || (address >= 0xfe000000 && address <= 0xfeffffff))\n \treturn 1; /* non-cache access */\n       break;\n     case bfd_mach_fr550:\n       if (address >= 0xff000000\n-\t  || address >= 0xfeff0000 && address <= 0xfeffffff)\n+\t  || (address >= 0xfeff0000 && address <= 0xfeffffff))\n \treturn 1; /* non-cache access */\n       if (cache == CPU_INSN_CACHE (current_cpu))\n \t{\n@@ -228,7 +228,7 @@ non_cache_access (FRV_CACHE *cache, USI address)\n       break;\n     default:\n       if (address >= 0xff000000\n-\t  || address >= 0xfeff0000 && address <= 0xfeffffff)\n+\t  || (address >= 0xfeff0000 && address <= 0xfeffffff))\n \treturn 1; /* non-cache access */\n       if (cache == CPU_INSN_CACHE (current_cpu))\n \t{"
    },
    {
      "sha": "a226cd21060611a7797b02be10ba8fb04b6b7191",
      "filename": "sim/frv/memory.c",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/memory.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/memory.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/memory.c?ref=fc12ae421543c019c3afd27ef095f828fd3b0e3b",
      "patch": "@@ -51,8 +51,8 @@ fr500_check_data_read_address (SIM_CPU *current_cpu, SI address, int align_mask)\n       address &= ~align_mask;\n     }\n \n-  if ((USI)address >= 0xfeff0600 && (USI)address <= 0xfeff7fff\n-      || (USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff)\n+  if (((USI)address >= 0xfeff0600 && (USI)address <= 0xfeff7fff)\n+      || ((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff))\n     frv_queue_data_access_error_interrupt (current_cpu, address);\n \n   return address;\n@@ -61,7 +61,7 @@ fr500_check_data_read_address (SIM_CPU *current_cpu, SI address, int align_mask)\n static SI\n fr550_check_data_read_address (SIM_CPU *current_cpu, SI address, int align_mask)\n {\n-  if ((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff\n+  if (((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff)\n       || (align_mask > 0x3\n \t  && ((USI)address >= 0xfeff0000 && (USI)address <= 0xfeffffff)))\n     frv_queue_data_access_error_interrupt (current_cpu, address);\n@@ -118,10 +118,10 @@ fr400_check_readwrite_address (SIM_CPU *current_cpu, SI address, int align_mask)\n static SI\n fr500_check_readwrite_address (SIM_CPU *current_cpu, SI address, int align_mask)\n {\n-  if ((USI)address >= 0xfe000000 && (USI)address <= 0xfe003fff\n-      || (USI)address >= 0xfe004000 && (USI)address <= 0xfe3fffff\n-      || (USI)address >= 0xfe400000 && (USI)address <= 0xfe403fff\n-      || (USI)address >= 0xfe404000 && (USI)address <= 0xfe7fffff)\n+  if (((USI)address >= 0xfe000000 && (USI)address <= 0xfe003fff)\n+      || ((USI)address >= 0xfe004000 && (USI)address <= 0xfe3fffff)\n+      || ((USI)address >= 0xfe400000 && (USI)address <= 0xfe403fff)\n+      || ((USI)address >= 0xfe404000 && (USI)address <= 0xfe7fffff))\n     frv_queue_data_access_exception_interrupt (current_cpu);\n \n   return address;\n@@ -132,14 +132,14 @@ fr550_check_readwrite_address (SIM_CPU *current_cpu, SI address, int align_mask)\n {\n   /* No alignment restrictions on fr550 */\n \n-  if ((USI)address >= 0xfe000000 && (USI)address <= 0xfe3fffff\n-      || (USI)address >= 0xfe408000 && (USI)address <= 0xfe7fffff)\n+  if (((USI)address >= 0xfe000000 && (USI)address <= 0xfe3fffff)\n+      || ((USI)address >= 0xfe408000 && (USI)address <= 0xfe7fffff))\n     frv_queue_data_access_exception_interrupt (current_cpu);\n   else\n     {\n       USI hsr0 = GET_HSR0 ();\n       if (! GET_HSR0_RME (hsr0)\n-\t  && (USI)address >= 0xfe400000 && (USI)address <= 0xfe407fff)\n+\t  && ((USI)address >= 0xfe400000 && (USI)address <= 0xfe407fff))\n \tfrv_queue_data_access_exception_interrupt (current_cpu);\n     }\n \n@@ -199,18 +199,18 @@ fr500_check_insn_read_address (SIM_CPU *current_cpu, PCADDR address,\n       address &= ~align_mask;\n     }\n \n-  if ((USI)address >= 0xfeff0600 && (USI)address <= 0xfeff7fff\n-      || (USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff)\n+  if (((USI)address >= 0xfeff0600 && (USI)address <= 0xfeff7fff)\n+      || ((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff))\n     frv_queue_instruction_access_error_interrupt (current_cpu);\n-  else if ((USI)address >= 0xfe004000 && (USI)address <= 0xfe3fffff\n-\t   || (USI)address >= 0xfe400000 && (USI)address <= 0xfe403fff\n-\t   || (USI)address >= 0xfe404000 && (USI)address <= 0xfe7fffff)\n+  else if (((USI)address >= 0xfe004000 && (USI)address <= 0xfe3fffff)\n+\t   || ((USI)address >= 0xfe400000 && (USI)address <= 0xfe403fff)\n+\t   || ((USI)address >= 0xfe404000 && (USI)address <= 0xfe7fffff))\n     frv_queue_instruction_access_exception_interrupt (current_cpu);\n   else\n     {\n       USI hsr0 = GET_HSR0 ();\n       if (! GET_HSR0_RME (hsr0)\n-\t  && (USI)address >= 0xfe000000 && (USI)address <= 0xfe003fff)\n+\t  && ((USI)address >= 0xfe000000 && (USI)address <= 0xfe003fff))\n \tfrv_queue_instruction_access_exception_interrupt (current_cpu);\n     }\n \n@@ -704,8 +704,8 @@ fr500_check_write_address (SIM_CPU *current_cpu, SI address, int align_mask)\n \titem->slot = frv_interrupt_state.slot;\n       address &= ~align_mask;\n     }\n-  if (address >= 0xfeff0600 && address <= 0xfeff7fff\n-      || address >= 0xfe800000 && address <= 0xfefeffff)\n+  if ((address >= 0xfeff0600 && address <= 0xfeff7fff)\n+      || (address >= 0xfe800000 && address <= 0xfefeffff))\n     frv_queue_program_interrupt (current_cpu, FRV_DATA_STORE_ERROR);\n \n   return address;\n@@ -714,7 +714,7 @@ fr500_check_write_address (SIM_CPU *current_cpu, SI address, int align_mask)\n static SI\n fr550_check_write_address (SIM_CPU *current_cpu, SI address, int align_mask)\n {\n-  if ((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff\n+  if (((USI)address >= 0xfe800000 && (USI)address <= 0xfefeffff)\n       || (align_mask > 0x3\n \t  && ((USI)address >= 0xfeff0000 && (USI)address <= 0xfeffffff)))\n     frv_queue_program_interrupt (current_cpu, FRV_DATA_STORE_ERROR);"
    },
    {
      "sha": "d5cab2496226e4767282b692852693f23c45c2e8",
      "filename": "sim/frv/traps.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/traps.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc12ae421543c019c3afd27ef095f828fd3b0e3b/sim/frv/traps.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/traps.c?ref=fc12ae421543c019c3afd27ef095f828fd3b0e3b",
      "patch": "@@ -275,7 +275,8 @@ frv_mtrap (SIM_CPU *current_cpu)\n \n   /* Check the status of media exceptions in MSR0.  */\n   SI msr = GET_MSR (0);\n-  if (GET_MSR_AOVF (msr) || GET_MSR_MTT (msr) && STATE_ARCHITECTURE (sd)->mach != bfd_mach_fr550)\n+  if (GET_MSR_AOVF (msr)\n+      || (GET_MSR_MTT (msr) && STATE_ARCHITECTURE (sd)->mach != bfd_mach_fr550))\n     frv_queue_program_interrupt (current_cpu, FRV_MP_EXCEPTION);\n }\n \n@@ -922,8 +923,8 @@ frvbf_commit (SIM_CPU *current_cpu, SI target_index, BI is_float)\n     NE_flag = GET_NE_FLAG (NE_flags, target_index);\n   else\n     {\n-      NE_flag =\n-\thi_available && NE_flags[0] != 0 || lo_available && NE_flags[1] != 0;\n+      NE_flag = (hi_available && NE_flags[0] != 0)\n+\t\t|| (lo_available && NE_flags[1] != 0);\n     }\n \n   /* Always clear the appropriate NE flags.  */"
    }
  ]
}