{
  "sha": "a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTMyYWQ4YzU1YzVjNmJjZGJjNjc3M2I2YjgyNWM0NTA1ZmQ0NGMxNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-10T02:26:09Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:45Z"
    },
    "message": "Convert main_info to type-safe registry API\n\nThis changes main_info to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (struct main_info): Add destructor and initializers.\n\t(main_progspace_key): Move.  Change type.\n\t(get_main_info): Update.\n\t(main_info_cleanup): Remove.\n\t(_initialize_symtab): Update.",
    "tree": {
      "sha": "b50441918b59fc320dafb3051a95b9ac34545352",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b50441918b59fc320dafb3051a95b9ac34545352"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f6e90a0cec8c269634ba0bff3c9e549a903c39a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f6e90a0cec8c269634ba0bff3c9e549a903c39a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f6e90a0cec8c269634ba0bff3c9e549a903c39a"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 23,
    "deletions": 29
  },
  "files": [
    {
      "sha": "2642249cc30ed8e7d0e72dcddf4fdb66ebedc999",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (struct main_info): Add destructor and initializers.\n+\t(main_progspace_key): Move.  Change type.\n+\t(get_main_info): Update.\n+\t(main_info_cleanup): Remove.\n+\t(_initialize_symtab): Update.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* registry.h (DECLARE_REGISTRY): Define the _key class."
    },
    {
      "sha": "5d1c14b9874db64770ad1e54db4ef8de3a8709d1",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 15,
      "deletions": 29,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=a32ad8c55c5c6bcdbc6773b6b825c4505fd44c16",
      "patch": "@@ -95,23 +95,30 @@ static struct block_symbol\n   lookup_symbol_in_objfile (struct objfile *objfile, int block_index,\n \t\t\t    const char *name, const domain_enum domain);\n \n-/* Program space key for finding name and language of \"main\".  */\n-\n-static const struct program_space_data *main_progspace_key;\n-\n /* Type of the data stored on the program space.  */\n \n struct main_info\n {\n+  main_info () = default;\n+\n+  ~main_info ()\n+  {\n+    xfree (name_of_main);\n+  }\n+\n   /* Name of \"main\".  */\n \n-  char *name_of_main;\n+  char *name_of_main = nullptr;\n \n   /* Language of \"main\".  */\n \n-  enum language language_of_main;\n+  enum language language_of_main = language_unknown;\n };\n \n+/* Program space key for finding name and language of \"main\".  */\n+\n+static const program_space_key<main_info> main_progspace_key;\n+\n /* Program space key for finding its symbol cache.  */\n \n static const struct program_space_data *symbol_cache_key;\n@@ -5665,9 +5672,7 @@ make_source_files_completion_list (const char *text, const char *word)\n static struct main_info *\n get_main_info (void)\n {\n-  struct main_info *info\n-    = (struct main_info *) program_space_data (current_program_space,\n-\t\t\t\t\t       main_progspace_key);\n+  struct main_info *info = main_progspace_key.get (current_program_space);\n \n   if (info == NULL)\n     {\n@@ -5677,28 +5682,12 @@ get_main_info (void)\n \t gdb returned \"main\" as the name even if no function named\n \t \"main\" was defined the program; and this approach lets us\n \t keep compatibility.  */\n-      info = XCNEW (struct main_info);\n-      info->language_of_main = language_unknown;\n-      set_program_space_data (current_program_space, main_progspace_key,\n-\t\t\t      info);\n+      info = main_progspace_key.emplace (current_program_space);\n     }\n \n   return info;\n }\n \n-/* A cleanup to destroy a struct main_info when a progspace is\n-   destroyed.  */\n-\n-static void\n-main_info_cleanup (struct program_space *pspace, void *data)\n-{\n-  struct main_info *info = (struct main_info *) data;\n-\n-  if (info != NULL)\n-    xfree (info->name_of_main);\n-  xfree (info);\n-}\n-\n static void\n set_main_name (const char *name, enum language lang)\n {\n@@ -6048,9 +6037,6 @@ _initialize_symtab (void)\n {\n   initialize_ordinary_address_classes ();\n \n-  main_progspace_key\n-    = register_program_space_data_with_cleanup (NULL, main_info_cleanup);\n-\n   symbol_cache_key\n     = register_program_space_data_with_cleanup (NULL, symbol_cache_cleanup);\n "
    }
  ]
}