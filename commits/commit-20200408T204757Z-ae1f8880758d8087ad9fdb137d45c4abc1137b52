{
  "sha": "ae1f8880758d8087ad9fdb137d45c4abc1137b52",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWUxZjg4ODA3NThkODA4N2FkOWZkYjEzN2Q0NWM0YWJjMTEzN2I1Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:33:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:47:57Z"
    },
    "message": "Share windows_thread_info between gdb and gdbserver\n\nThis introduces a new file, nat/windows-nat.h, which holds the\ndefinition of windows_thread_info.  This is now shared between gdb and\ngdbserver.\n\nNote that the two implementations different slightly.  gdb had a\ncouple of fields (\"name\" and \"reload_context\") that gdbserver did not;\nwhile gdbserver had one field (\"base_context\") that gdb did not, plus\nbetter comments.  The new file preserves all the fields, and the\ncomments.\n\ngdb/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (struct windows_thread_info): Remove.\n\t* nat/windows-nat.h: New file.\n\ngdbserver/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* win32-low.h (struct windows_thread_info): Remove.",
    "tree": {
      "sha": "ed4414c3a897650c246b2d9c972f00ffe90721f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed4414c3a897650c246b2d9c972f00ffe90721f0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ae1f8880758d8087ad9fdb137d45c4abc1137b52",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae1f8880758d8087ad9fdb137d45c4abc1137b52",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ae1f8880758d8087ad9fdb137d45c4abc1137b52",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ae1f8880758d8087ad9fdb137d45c4abc1137b52/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "55a1e039f9d5e2ae144b64f52f2034e4f9177336",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/55a1e039f9d5e2ae144b64f52f2034e4f9177336",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/55a1e039f9d5e2ae144b64f52f2034e4f9177336"
    }
  ],
  "stats": {
    "total": 125,
    "additions": 77,
    "deletions": 48
  },
  "files": [
    {
      "sha": "c2e6d60fd6fe0ef3b6683430ab4562149a699fa6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (struct windows_thread_info): Remove.\n+\t* nat/windows-nat.h: New file.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (struct windows_thread_info) <tid>: Rename from \"id\"."
    },
    {
      "sha": "71df097ed0ba166c3d3d47b01b439472fb658943",
      "filename": "gdb/nat/windows-nat.h",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/nat/windows-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/nat/windows-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.h?ref=ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "patch": "@@ -0,0 +1,66 @@\n+/* Internal interfaces for the Windows code\n+   Copyright (C) 1995-2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef NAT_WINDOWS_NAT_H\n+#define NAT_WINDOWS_NAT_H\n+\n+#include <windows.h>\n+\n+/* Thread information structure used to track extra information about\n+   each thread.  */\n+struct windows_thread_info\n+{\n+  /* The Win32 thread identifier.  */\n+  DWORD tid;\n+\n+  /* The handle to the thread.  */\n+  HANDLE h;\n+\n+  /* Thread Information Block address.  */\n+  CORE_ADDR thread_local_base;\n+\n+  /* Non zero if SuspendThread was called on this thread.  */\n+  int suspended;\n+\n+#ifdef _WIN32_WCE\n+  /* The context as retrieved right after suspending the thread. */\n+  CONTEXT base_context;\n+#endif\n+\n+  /* The context of the thread, including any manipulations.  */\n+  union\n+  {\n+    CONTEXT context;\n+#ifdef __x86_64__\n+    WOW64_CONTEXT wow64_context;\n+#endif\n+  };\n+\n+  /* Whether debug registers changed since we last set CONTEXT back to\n+     the thread.  */\n+  int debug_registers_changed;\n+\n+  /* Nonzero if CONTEXT is invalidated and must be re-read from the\n+     inferior thread.  */\n+  int reload_context;\n+\n+  /* The name of the thread, allocated by xmalloc.  */\n+  char *name;\n+};\n+\n+#endif"
    },
    {
      "sha": "9368396b0fcd61b77263c7543d210a020544caf7",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 19,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "patch": "@@ -70,6 +70,7 @@\n #include \"gdbsupport/gdb_tilde_expand.h\"\n #include \"gdbsupport/pathstuff.h\"\n #include \"gdbsupport/gdb_wait.h\"\n+#include \"nat/windows-nat.h\"\n \n #define STATUS_WX86_BREAKPOINT 0x4000001F\n #define STATUS_WX86_SINGLE_STEP 0x4000001E\n@@ -244,25 +245,6 @@ static unsigned long cygwin_get_dr7 (void);\n static enum gdb_signal last_sig = GDB_SIGNAL_0;\n /* Set if a signal was received from the debugged process.  */\n \n-/* Thread information structure used to track information that is\n-   not available in gdb's thread structure.  */\n-struct windows_thread_info\n-  {\n-    DWORD tid;\n-    HANDLE h;\n-    CORE_ADDR thread_local_base;\n-    char *name;\n-    int suspended;\n-    int reload_context;\n-    union\n-      {\n-\tCONTEXT context;\n-#ifdef __x86_64__\n-\tWOW64_CONTEXT wow64_context;\n-#endif\n-      };\n-  };\n-\n static std::vector<windows_thread_info *> thread_list;\n \n /* The process and thread handles for the above context.  */"
    },
    {
      "sha": "3923429cfc2071c006c72913226c55736bfcde17",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "patch": "@@ -1,3 +1,7 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* win32-low.h (struct windows_thread_info): Remove.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* win32-low.h (struct windows_thread_info): Rename from"
    },
    {
      "sha": "28ac2b082d9d45ba0b07f3836b9947dccfd7104a",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 1,
      "deletions": 29,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ae1f8880758d8087ad9fdb137d45c4abc1137b52/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=ae1f8880758d8087ad9fdb137d45c4abc1137b52",
      "patch": "@@ -20,42 +20,14 @@\n #define GDBSERVER_WIN32_LOW_H\n \n #include <windows.h>\n+#include \"nat/windows-nat.h\"\n \n struct target_desc;\n \n /* The inferior's target description.  This is a global because the\n    Windows ports support neither bi-arch nor multi-process.  */\n extern const struct target_desc *win32_tdesc;\n \n-/* Thread information structure used to track extra information about\n-   each thread.  */\n-struct windows_thread_info\n-{\n-  /* The Win32 thread identifier.  */\n-  DWORD tid;\n-\n-  /* The handle to the thread.  */\n-  HANDLE h;\n-\n-  /* Thread Information Block address.  */\n-  CORE_ADDR thread_local_base;\n-\n-  /* Non zero if SuspendThread was called on this thread.  */\n-  int suspended;\n-\n-#ifdef _WIN32_WCE\n-  /* The context as retrieved right after suspending the thread. */\n-  CONTEXT base_context;\n-#endif\n-\n-  /* The context of the thread, including any manipulations.  */\n-  CONTEXT context;\n-\n-  /* Whether debug registers changed since we last set CONTEXT back to\n-     the thread.  */\n-  int debug_registers_changed;\n-};\n-\n struct win32_target_ops\n {\n   /* Architecture-specific setup.  */"
    }
  ]
}