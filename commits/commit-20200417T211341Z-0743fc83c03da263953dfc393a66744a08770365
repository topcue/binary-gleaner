{
  "sha": "0743fc83c03da263953dfc393a66744a08770365",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDc0M2ZjODNjMDNkYTI2Mzk1M2RmYzM5M2E2Njc0NGEwODc3MDM2NQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-17T13:27:14Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-17T21:13:41Z"
    },
    "message": "Replace most calls to help_list and cmd_show_list\n\nCurrently there are many prefix commands that do nothing but call\neither help_list or cmd_show_list.  I happened to notice that one such\ncall, for \"set print type\", used the wrong command list parameter,\ncausing incorrect output.\n\nRather than fix this bug in isolation, I decided to eliminate this\npossibility by adding two new ways to add prefix commands, which\nsimply route the call to help_list or cmd_show_list, as appropriate.\nThis makes it impossible for a mismatch to occur.\n\nIn some cases, a bit of output was removed; however, I don't think\nthis output in general was very useful.  It seemed redundant with\nwhat's already printed by help_list.  A representative example is this\nhunk, removed from ada-lang.c:\n\n-  printf_unfiltered (_(\\\n-\"\\\"set ada\\\" must be followed by the name of a setting.\\n\"));\n\nThis simplified the CLI style set/show commands quite a bit, and\nallowed the deletion of a macro.\n\nThis also cleans up some unusual code in windows-tdep.c.\n\nTested on x86-64 Fedora 30.  Note that I have no way to build the\ngo32-nat.c change.\n\ngdb/ChangeLog\n2020-04-17  Tom Tromey  <tromey@adacore.com>\n\n\t* auto-load.c (show_auto_load_cmd): Remove.\n\t(auto_load_show_cmdlist_get): Use add_show_prefix_cmd.\n\t* arc-tdep.c (_initialize_arc_tdep): Use add_show_prefix_cmd.\n\t(maintenance_print_arc_command): Remove.\n\t* tui/tui-win.c (tui_command): Remove.\n\t(tui_get_cmd_list): Use add_basic_prefix_cmd.\n\t* tui/tui-layout.c (tui_layout_command): Remove.\n\t(_initialize_tui_layout): Use add_basic_prefix_cmd.\n\t* python/python.c (user_set_python, user_show_python): Remove.\n\t(_initialize_python): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* guile/guile.c (set_guile_command, show_guile_command): Remove.\n\t(install_gdb_commands): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t(info_guile_command): Remove.\n\t* dwarf2/read.c (set_dwarf_cmd, show_dwarf_cmd): Remove.\n\t(_initialize_dwarf2_read): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:\n\tRemove do_set and do_show parameters.\n\t* cli/cli-style.c (set_style, show_style): Remove.\n\t(_initialize_cli_style): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t(cli_style_option::add_setshow_commands): Remove do_set and\n\tdo_show parameters.\n\t(cli_style_option::add_setshow_commands): Use\n\tadd_basic_prefix_cmd, add_show_prefix_cmd.\n\t(STYLE_ADD_SETSHOW_COMMANDS): Remove macro.\n\t(set_style_name): Remove.\n\t* cli/cli-dump.c (dump_command, append_command): Remove.\n\t(srec_dump_command, ihex_dump_command, verilog_dump_command)\n\t(tekhex_dump_command, binary_dump_command)\n\t(binary_append_command): Remove.\n\t(_initialize_cli_dump): Use add_basic_prefix_cmd.\n\t* windows-tdep.c (w32_prefix_command_valid): Remove global.\n\t(init_w32_command_list): Remove; move into ...\n\t(_initialize_windows_tdep): ... here.  Use add_basic_prefix_cmd.\n\t* valprint.c (set_print, show_print, set_print_raw)\n\t(show_print_raw): Remove.\n\t(_initialize_valprint): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* typeprint.c (set_print_type, show_print_type): Remove.\n\t(_initialize_typeprint): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* record.c (set_record_command, show_record_command): Remove.\n\t(_initialize_record): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* cli/cli-cmds.c (_initialize_cli_cmds): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t(info_command, show_command, set_debug, show_debug): Remove.\n\t* top.h (set_history, show_history): Don't declare.\n\t* top.c (set_history, show_history): Remove.\n\t* target-descriptions.c (set_tdesc_cmd, show_tdesc_cmd)\n\t(unset_tdesc_cmd): Remove.\n\t(_initialize_target_descriptions): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* symtab.c (info_module_command): Remove.\n\t(_initialize_symtab): Use add_basic_prefix_cmd.\n\t* symfile.c (overlay_command): Remove.\n\t(_initialize_symfile): Use add_basic_prefix_cmd.\n\t* sparc64-tdep.c (info_adi_command): Remove.\n\t(_initialize_sparc64_adi_tdep): Use add_basic_prefix_cmd.\n\t* sh-tdep.c (show_sh_command, set_sh_command): Remove.\n\t(_initialize_sh_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* serial.c (serial_set_cmd, serial_show_cmd): Remove.\n\t(_initialize_serial): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* ser-tcp.c (set_tcp_cmd, show_tcp_cmd): Remove.\n\t(_initialize_ser_tcp): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* rs6000-tdep.c (set_powerpc_command, show_powerpc_command)\n\t(_initialize_rs6000_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* riscv-tdep.c (show_riscv_command, set_riscv_command)\n\t(show_debug_riscv_command, set_debug_riscv_command): Remove.\n\t(_initialize_riscv_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* remote.c (remote_command, set_remote_cmd): Remove.\n\t(_initialize_remote): Use add_basic_prefix_cmd.\n\t* record-full.c (set_record_full_command)\n\t(show_record_full_command): Remove.\n\t(_initialize_record_full): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* record-btrace.c (cmd_set_record_btrace)\n\t(cmd_show_record_btrace, cmd_set_record_btrace_bts)\n\t(cmd_show_record_btrace_bts, cmd_set_record_btrace_pt)\n\t(cmd_show_record_btrace_pt): Remove.\n\t(_initialize_record_btrace): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* ravenscar-thread.c (set_ravenscar_command)\n\t(show_ravenscar_command): Remove.\n\t(_initialize_ravenscar): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* mips-tdep.c (show_mips_command, set_mips_command)\n\t(_initialize_mips_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* maint.c (maintenance_command, maintenance_info_command)\n\t(maintenance_check_command, maintenance_print_command)\n\t(maintenance_set_cmd, maintenance_show_cmd): Remove.\n\t(_initialize_maint_cmds): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t(show_per_command_cmd): Remove.\n\t* maint-test-settings.c (maintenance_set_test_settings_cmd):\n\tRemove.\n\t(maintenance_show_test_settings_cmd): Remove.\n\t(_initialize_maint_test_settings): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* maint-test-options.c (maintenance_test_options_command):\n\tRemove.\n\t(_initialize_maint_test_options): Use add_basic_prefix_cmd.\n\t* macrocmd.c (macro_command): Remove\n\t(_initialize_macrocmd): Use add_basic_prefix_cmd.\n\t* language.c (set_check, show_check): Remove.\n\t(_initialize_language): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* infcmd.c (unset_command): Remove.\n\t(_initialize_infcmd): Use add_basic_prefix_cmd.\n\t* i386-tdep.c (set_mpx_cmd, show_mpx_cmd): Remove.\n\t(_initialize_i386_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* go32-nat.c (go32_info_dos_command): Remove.\n\t(_initialize_go32_nat): Use add_basic_prefix_cmd.\n\t* cli/cli-decode.c (do_prefix_cmd, add_basic_prefix_cmd)\n\t(do_show_prefix_cmd, add_show_prefix_cmd): New functions.\n\t* frame.c (set_backtrace_cmd, show_backtrace_cmd): Remove.\n\t(_initialize_frame): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* dcache.c (set_dcache_command, show_dcache_command): Remove.\n\t(_initialize_dcache): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* cp-support.c (maint_cplus_command): Remove.\n\t(_initialize_cp_support): Use add_basic_prefix_cmd.\n\t* btrace.c (maint_btrace_cmd, maint_btrace_set_cmd)\n\t(maint_btrace_show_cmd, maint_btrace_pt_set_cmd)\n\t(maint_btrace_pt_show_cmd, _initialize_btrace): Use\n\tadd_basic_prefix_cmd, add_show_prefix_cmd.\n\t* breakpoint.c (save_command): Remove.\n\t(_initialize_breakpoint): Use add_basic_prefix_cmd.\n\t* arm-tdep.c (set_arm_command, show_arm_command): Remove.\n\t(_initialize_arm_tdep): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* ada-lang.c (maint_set_ada_cmd, maint_show_ada_cmd)\n\t(set_ada_command, show_ada_command): Remove.\n\t(_initialize_ada_language): Use add_basic_prefix_cmd,\n\tadd_show_prefix_cmd.\n\t* command.h (add_basic_prefix_cmd, add_show_prefix_cmd): Declare.\n\ngdb/testsuite/ChangeLog\n2020-04-17  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.cp/maint.exp (test_help): Simplify multiple_help_body.\n\tUpdate tests.\n\t* gdb.btrace/cpu.exp: Update tests.\n\t* gdb.base/maint.exp: Update tests.\n\t* gdb.base/default.exp: Update tests.\n\t* gdb.base/completion.exp: Update tests.",
    "tree": {
      "sha": "d796bc15c865a74b85d1b2227ce982f25f8340ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d796bc15c865a74b85d1b2227ce982f25f8340ee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0743fc83c03da263953dfc393a66744a08770365",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0743fc83c03da263953dfc393a66744a08770365",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0743fc83c03da263953dfc393a66744a08770365",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0743fc83c03da263953dfc393a66744a08770365/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e409955ddcc33743044f217a3cc0541e0e6211b7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e409955ddcc33743044f217a3cc0541e0e6211b7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e409955ddcc33743044f217a3cc0541e0e6211b7"
    }
  ],
  "stats": {
    "total": 1955,
    "additions": 656,
    "deletions": 1299
  },
  "files": [
    {
      "sha": "57418b852fe97fde53cd3c2e50b42dee8ad253fb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 150,
      "deletions": 0,
      "changes": 150,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1,3 +1,153 @@\n+2020-04-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* auto-load.c (show_auto_load_cmd): Remove.\n+\t(auto_load_show_cmdlist_get): Use add_show_prefix_cmd.\n+\t* arc-tdep.c (_initialize_arc_tdep): Use add_show_prefix_cmd.\n+\t(maintenance_print_arc_command): Remove.\n+\t* tui/tui-win.c (tui_command): Remove.\n+\t(tui_get_cmd_list): Use add_basic_prefix_cmd.\n+\t* tui/tui-layout.c (tui_layout_command): Remove.\n+\t(_initialize_tui_layout): Use add_basic_prefix_cmd.\n+\t* python/python.c (user_set_python, user_show_python): Remove.\n+\t(_initialize_python): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* guile/guile.c (set_guile_command, show_guile_command): Remove.\n+\t(install_gdb_commands): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t(info_guile_command): Remove.\n+\t* dwarf2/read.c (set_dwarf_cmd, show_dwarf_cmd): Remove.\n+\t(_initialize_dwarf2_read): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* cli/cli-style.h (class cli_style_option) <add_setshow_commands>:\n+\tRemove do_set and do_show parameters.\n+\t* cli/cli-style.c (set_style, show_style): Remove.\n+\t(_initialize_cli_style): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t(cli_style_option::add_setshow_commands): Remove do_set and\n+\tdo_show parameters.\n+\t(cli_style_option::add_setshow_commands): Use\n+\tadd_basic_prefix_cmd, add_show_prefix_cmd.\n+\t(STYLE_ADD_SETSHOW_COMMANDS): Remove macro.\n+\t(set_style_name): Remove.\n+\t* cli/cli-dump.c (dump_command, append_command): Remove.\n+\t(srec_dump_command, ihex_dump_command, verilog_dump_command)\n+\t(tekhex_dump_command, binary_dump_command)\n+\t(binary_append_command): Remove.\n+\t(_initialize_cli_dump): Use add_basic_prefix_cmd.\n+\t* windows-tdep.c (w32_prefix_command_valid): Remove global.\n+\t(init_w32_command_list): Remove; move into ...\n+\t(_initialize_windows_tdep): ... here.  Use add_basic_prefix_cmd.\n+\t* valprint.c (set_print, show_print, set_print_raw)\n+\t(show_print_raw): Remove.\n+\t(_initialize_valprint): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* typeprint.c (set_print_type, show_print_type): Remove.\n+\t(_initialize_typeprint): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* record.c (set_record_command, show_record_command): Remove.\n+\t(_initialize_record): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* cli/cli-cmds.c (_initialize_cli_cmds): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t(info_command, show_command, set_debug, show_debug): Remove.\n+\t* top.h (set_history, show_history): Don't declare.\n+\t* top.c (set_history, show_history): Remove.\n+\t* target-descriptions.c (set_tdesc_cmd, show_tdesc_cmd)\n+\t(unset_tdesc_cmd): Remove.\n+\t(_initialize_target_descriptions): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* symtab.c (info_module_command): Remove.\n+\t(_initialize_symtab): Use add_basic_prefix_cmd.\n+\t* symfile.c (overlay_command): Remove.\n+\t(_initialize_symfile): Use add_basic_prefix_cmd.\n+\t* sparc64-tdep.c (info_adi_command): Remove.\n+\t(_initialize_sparc64_adi_tdep): Use add_basic_prefix_cmd.\n+\t* sh-tdep.c (show_sh_command, set_sh_command): Remove.\n+\t(_initialize_sh_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* serial.c (serial_set_cmd, serial_show_cmd): Remove.\n+\t(_initialize_serial): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* ser-tcp.c (set_tcp_cmd, show_tcp_cmd): Remove.\n+\t(_initialize_ser_tcp): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* rs6000-tdep.c (set_powerpc_command, show_powerpc_command)\n+\t(_initialize_rs6000_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* riscv-tdep.c (show_riscv_command, set_riscv_command)\n+\t(show_debug_riscv_command, set_debug_riscv_command): Remove.\n+\t(_initialize_riscv_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* remote.c (remote_command, set_remote_cmd): Remove.\n+\t(_initialize_remote): Use add_basic_prefix_cmd.\n+\t* record-full.c (set_record_full_command)\n+\t(show_record_full_command): Remove.\n+\t(_initialize_record_full): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* record-btrace.c (cmd_set_record_btrace)\n+\t(cmd_show_record_btrace, cmd_set_record_btrace_bts)\n+\t(cmd_show_record_btrace_bts, cmd_set_record_btrace_pt)\n+\t(cmd_show_record_btrace_pt): Remove.\n+\t(_initialize_record_btrace): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* ravenscar-thread.c (set_ravenscar_command)\n+\t(show_ravenscar_command): Remove.\n+\t(_initialize_ravenscar): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* mips-tdep.c (show_mips_command, set_mips_command)\n+\t(_initialize_mips_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* maint.c (maintenance_command, maintenance_info_command)\n+\t(maintenance_check_command, maintenance_print_command)\n+\t(maintenance_set_cmd, maintenance_show_cmd): Remove.\n+\t(_initialize_maint_cmds): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t(show_per_command_cmd): Remove.\n+\t* maint-test-settings.c (maintenance_set_test_settings_cmd):\n+\tRemove.\n+\t(maintenance_show_test_settings_cmd): Remove.\n+\t(_initialize_maint_test_settings): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* maint-test-options.c (maintenance_test_options_command):\n+\tRemove.\n+\t(_initialize_maint_test_options): Use add_basic_prefix_cmd.\n+\t* macrocmd.c (macro_command): Remove\n+\t(_initialize_macrocmd): Use add_basic_prefix_cmd.\n+\t* language.c (set_check, show_check): Remove.\n+\t(_initialize_language): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* infcmd.c (unset_command): Remove.\n+\t(_initialize_infcmd): Use add_basic_prefix_cmd.\n+\t* i386-tdep.c (set_mpx_cmd, show_mpx_cmd): Remove.\n+\t(_initialize_i386_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* go32-nat.c (go32_info_dos_command): Remove.\n+\t(_initialize_go32_nat): Use add_basic_prefix_cmd.\n+\t* cli/cli-decode.c (do_prefix_cmd, add_basic_prefix_cmd)\n+\t(do_show_prefix_cmd, add_show_prefix_cmd): New functions.\n+\t* frame.c (set_backtrace_cmd, show_backtrace_cmd): Remove.\n+\t(_initialize_frame): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* dcache.c (set_dcache_command, show_dcache_command): Remove.\n+\t(_initialize_dcache): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* cp-support.c (maint_cplus_command): Remove.\n+\t(_initialize_cp_support): Use add_basic_prefix_cmd.\n+\t* btrace.c (maint_btrace_cmd, maint_btrace_set_cmd)\n+\t(maint_btrace_show_cmd, maint_btrace_pt_set_cmd)\n+\t(maint_btrace_pt_show_cmd, _initialize_btrace): Use\n+\tadd_basic_prefix_cmd, add_show_prefix_cmd.\n+\t* breakpoint.c (save_command): Remove.\n+\t(_initialize_breakpoint): Use add_basic_prefix_cmd.\n+\t* arm-tdep.c (set_arm_command, show_arm_command): Remove.\n+\t(_initialize_arm_tdep): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* ada-lang.c (maint_set_ada_cmd, maint_show_ada_cmd)\n+\t(set_ada_command, show_ada_command): Remove.\n+\t(_initialize_ada_language): Use add_basic_prefix_cmd,\n+\tadd_show_prefix_cmd.\n+\t* command.h (add_basic_prefix_cmd, add_show_prefix_cmd): Declare.\n+\n 2020-04-16  Kamil Rytarowski  <n54@gmx.com>\n \n \t* nbsd-nat.c (inf_ptrace_target::auxv_parse): Remove."
    },
    {
      "sha": "49f2280198e1bf92a6987f0e24ff7f026962203c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 14,
      "deletions": 49,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -332,23 +332,6 @@ static const char *known_auxiliary_function_name_patterns[] = {\n static struct cmd_list_element *maint_set_ada_cmdlist;\n static struct cmd_list_element *maint_show_ada_cmdlist;\n \n-/* Implement the \"maintenance set ada\" (prefix) command.  */\n-\n-static void\n-maint_set_ada_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_set_ada_cmdlist, \"maintenance set ada \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* Implement the \"maintenance show ada\" (prefix) command.  */\n-\n-static void\n-maint_show_ada_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (maint_show_ada_cmdlist, from_tty, \"\");\n-}\n-\n /* The \"maintenance ada set/show ignore-descriptive-type\" value.  */\n \n static bool ada_ignore_descriptive_types_p = false;\n@@ -14139,24 +14122,6 @@ extern const struct language_defn ada_language_defn = {\n static struct cmd_list_element *set_ada_list;\n static struct cmd_list_element *show_ada_list;\n \n-/* Implement the \"set ada\" prefix command.  */\n-\n-static void\n-set_ada_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\\\n-\"\\\"set ada\\\" must be followed by the name of a setting.\\n\"));\n-  help_list (set_ada_list, \"set ada \", all_commands, gdb_stdout);\n-}\n-\n-/* Implement the \"show ada\" prefix command.  */\n-\n-static void\n-show_ada_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_ada_list, from_tty, \"\");\n-}\n-\n static void\n initialize_ada_catchpoint_ops (void)\n {\n@@ -14227,13 +14192,13 @@ _initialize_ada_language ()\n {\n   initialize_ada_catchpoint_ops ();\n \n-  add_prefix_cmd (\"ada\", no_class, set_ada_command,\n-                  _(\"Prefix command for changing Ada-specific settings.\"),\n-                  &set_ada_list, \"set ada \", 0, &setlist);\n+  add_basic_prefix_cmd (\"ada\", no_class,\n+\t\t\t_(\"Prefix command for changing Ada-specific settings.\"),\n+\t\t\t&set_ada_list, \"set ada \", 0, &setlist);\n \n-  add_prefix_cmd (\"ada\", no_class, show_ada_command,\n-                  _(\"Generic command for showing Ada-specific settings.\"),\n-                  &show_ada_list, \"show ada \", 0, &showlist);\n+  add_show_prefix_cmd (\"ada\", no_class,\n+\t\t       _(\"Generic command for showing Ada-specific settings.\"),\n+\t\t       &show_ada_list, \"show ada \", 0, &showlist);\n \n   add_setshow_boolean_cmd (\"trust-PAD-over-XVS\", class_obscure,\n                            &trust_pad_over_xvs, _(\"\\\n@@ -14310,15 +14275,15 @@ Usage: info exceptions [REGEXP]\\n\\\n If a regular expression is passed as an argument, only those matching\\n\\\n the regular expression are listed.\"));\n \n-  add_prefix_cmd (\"ada\", class_maintenance, maint_set_ada_cmd,\n-\t\t  _(\"Set Ada maintenance-related variables.\"),\n-                  &maint_set_ada_cmdlist, \"maintenance set ada \",\n-                  0/*allow-unknown*/, &maintenance_set_cmdlist);\n+  add_basic_prefix_cmd (\"ada\", class_maintenance,\n+\t\t\t_(\"Set Ada maintenance-related variables.\"),\n+\t\t\t&maint_set_ada_cmdlist, \"maintenance set ada \",\n+\t\t\t0/*allow-unknown*/, &maintenance_set_cmdlist);\n \n-  add_prefix_cmd (\"ada\", class_maintenance, maint_show_ada_cmd,\n-\t\t  _(\"Show Ada maintenance-related variables.\"),\n-                  &maint_show_ada_cmdlist, \"maintenance show ada \",\n-                  0/*allow-unknown*/, &maintenance_show_cmdlist);\n+  add_show_prefix_cmd (\"ada\", class_maintenance,\n+\t\t       _(\"Show Ada maintenance-related variables.\"),\n+\t\t       &maint_show_ada_cmdlist, \"maintenance show ada \",\n+\t\t       0/*allow-unknown*/, &maintenance_show_cmdlist);\n \n   add_setshow_boolean_cmd\n     (\"ignore-descriptive-types\", class_maintenance,"
    },
    {
      "sha": "b690e6e24b675b0e1a66bcd0158191cc4ffd851a",
      "filename": "gdb/arc-tdep.c",
      "status": "modified",
      "additions": 5,
      "deletions": 13,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/arc-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/arc-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arc-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2111,14 +2111,6 @@ arc_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   fprintf_unfiltered (file, \"arc_dump_tdep: jb_pc = %i\\n\", tdep->jb_pc);\n }\n \n-/* Wrapper for \"maintenance print arc\" list of commands.  */\n-\n-static void\n-maintenance_print_arc_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (maintenance_print_arc_list, from_tty, \"\");\n-}\n-\n /* This command accepts single argument - address of instruction to\n    disassemble.  */\n \n@@ -2180,11 +2172,11 @@ _initialize_arc_tdep ()\n   /* Register ARC-specific commands with gdb.  */\n \n   /* Add root prefix command for \"maintenance print arc\" commands.  */\n-  add_prefix_cmd (\"arc\", class_maintenance, maintenance_print_arc_command,\n-\t\t  _(\"ARC-specific maintenance commands for printing GDB \"\n-\t\t    \"internal state.\"),\n-\t\t  &maintenance_print_arc_list, \"maintenance print arc \", 0,\n-\t\t  &maintenanceprintlist);\n+  add_show_prefix_cmd (\"arc\", class_maintenance,\n+\t\t       _(\"ARC-specific maintenance commands for printing GDB \"\n+\t\t\t \"internal state.\"),\n+\t\t       &maintenance_print_arc_list, \"maintenance print arc \",\n+\t\t       0, &maintenanceprintlist);\n \n   add_cmd (\"arc-instruction\", class_maintenance,\n \t   dump_arc_instruction_command,"
    },
    {
      "sha": "d881791bf20c45e6b89c9ad0fd0b4e877ed91ccd",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 20,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -8325,20 +8325,6 @@ arm_skip_stub (struct frame_info *frame, CORE_ADDR pc)\n   return 0;\t\t\t/* not a stub */\n }\n \n-static void\n-set_arm_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\n-\\\"set arm\\\" must be followed by an apporpriate subcommand.\\n\"));\n-  help_list (setarmcmdlist, \"set arm \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_arm_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (showarmcmdlist, from_tty, \"\");\n-}\n-\n static void\n arm_update_current_architecture (void)\n {\n@@ -9517,13 +9503,13 @@ _initialize_arm_tdep ()\n \t\t\t\t  arm_elf_osabi_sniffer);\n \n   /* Add root prefix command for all \"set arm\"/\"show arm\" commands.  */\n-  add_prefix_cmd (\"arm\", no_class, set_arm_command,\n-\t\t  _(\"Various ARM-specific commands.\"),\n-\t\t  &setarmcmdlist, \"set arm \", 0, &setlist);\n+  add_basic_prefix_cmd (\"arm\", no_class,\n+\t\t\t_(\"Various ARM-specific commands.\"),\n+\t\t\t&setarmcmdlist, \"set arm \", 0, &setlist);\n \n-  add_prefix_cmd (\"arm\", no_class, show_arm_command,\n-\t\t  _(\"Various ARM-specific commands.\"),\n-\t\t  &showarmcmdlist, \"show arm \", 0, &showlist);\n+  add_show_prefix_cmd (\"arm\", no_class,\n+\t\t       _(\"Various ARM-specific commands.\"),\n+\t\t       &showarmcmdlist, \"show arm \", 0, &showlist);\n \n \n   arm_disassembler_options = xstrdup (\"reg-names-std\");"
    },
    {
      "sha": "99bd96b971af98d67f19893fcf13ea059cc9ece0",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1460,15 +1460,6 @@ automatic loading of Python scripts.\"),\n   return &retval;\n }\n \n-/* Command \"show auto-load\" displays summary of all the current\n-   \"show auto-load \" settings.  */\n-\n-static void\n-show_auto_load_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (*auto_load_show_cmdlist_get (), from_tty, \"\");\n-}\n-\n /* Initialize \"show auto-load \" commands prefix and return it.  */\n \n struct cmd_list_element **\n@@ -1477,12 +1468,12 @@ auto_load_show_cmdlist_get (void)\n   static struct cmd_list_element *retval;\n \n   if (retval == NULL)\n-    add_prefix_cmd (\"auto-load\", class_maintenance, show_auto_load_cmd, _(\"\\\n+    add_show_prefix_cmd (\"auto-load\", class_maintenance, _(\"\\\n Show auto-loading specific settings.\\n\\\n Show configuration of various auto-load-specific variables such as\\n\\\n automatic loading of Python scripts.\"),\n-\t\t    &retval, \"show auto-load \",\n-\t\t    0/*allow-unknown*/, &showlist);\n+\t\t\t &retval, \"show auto-load \",\n+\t\t\t 0/*allow-unknown*/, &showlist);\n \n   return &retval;\n }"
    },
    {
      "sha": "89eb29628b1efb63bc3c2941ca747e4254d1d534",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -15118,14 +15118,6 @@ add_catch_command (const char *name, const char *docstring,\n   set_cmd_completer (command, completer);\n }\n \n-static void\n-save_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"save\\\" must be followed by \"\n-\t\t       \"the name of a save subcommand.\\n\"));\n-  help_list (save_cmdlist, \"save \", all_commands, gdb_stdout);\n-}\n-\n struct breakpoint *\n iterate_over_breakpoints (gdb::function_view<bool (breakpoint *)> callback)\n {\n@@ -15785,10 +15777,10 @@ The trace will end when the tracepoint has been passed 'count' times.\\n\\\n Usage: passcount COUNT TPNUM, where TPNUM may also be \\\"all\\\";\\n\\\n if TPNUM is omitted, passcount refers to the last tracepoint defined.\"));\n \n-  add_prefix_cmd (\"save\", class_breakpoint, save_command,\n-\t\t  _(\"Save breakpoint definitions as a script.\"),\n-\t\t  &save_cmdlist, \"save \",\n-\t\t  0/*allow-unknown*/, &cmdlist);\n+  add_basic_prefix_cmd (\"save\", class_breakpoint,\n+\t\t\t_(\"Save breakpoint definitions as a script.\"),\n+\t\t\t&save_cmdlist, \"save \",\n+\t\t\t0/*allow-unknown*/, &cmdlist);\n \n   c = add_cmd (\"breakpoints\", class_breakpoint, save_breakpoints_command, _(\"\\\n Save current breakpoint definitions as a script.\\n\\"
    },
    {
      "sha": "9f90d59e2b587b214fe3704eb12cdb721d55a9f9",
      "filename": "gdb/btrace.c",
      "status": "modified",
      "additions": 18,
      "deletions": 61,
      "changes": 79,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/btrace.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -3358,51 +3358,6 @@ maint_btrace_clear_cmd (const char *args, int from_tty)\n   btrace_clear (tp);\n }\n \n-/* The \"maintenance btrace\" command.  */\n-\n-static void\n-maint_btrace_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_btrace_cmdlist, \"maintenance btrace \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* The \"maintenance set btrace\" command.  */\n-\n-static void\n-maint_btrace_set_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_btrace_set_cmdlist, \"maintenance set btrace \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* The \"maintenance show btrace\" command.  */\n-\n-static void\n-maint_btrace_show_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_btrace_show_cmdlist, \"maintenance show btrace \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"maintenance set btrace pt\" command.  */\n-\n-static void\n-maint_btrace_pt_set_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_btrace_pt_set_cmdlist, \"maintenance set btrace pt \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"maintenance show btrace pt\" command.  */\n-\n-static void\n-maint_btrace_pt_show_cmd (const char *args, int from_tty)\n-{\n-  help_list (maint_btrace_pt_show_cmdlist, \"maintenance show btrace pt \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n /* The \"maintenance info btrace\" command.  */\n \n static void\n@@ -3478,30 +3433,32 @@ _initialize_btrace ()\n   add_cmd (\"btrace\", class_maintenance, maint_info_btrace_cmd,\n \t   _(\"Info about branch tracing data.\"), &maintenanceinfolist);\n \n-  add_prefix_cmd (\"btrace\", class_maintenance, maint_btrace_cmd,\n-\t\t  _(\"Branch tracing maintenance commands.\"),\n-\t\t  &maint_btrace_cmdlist, \"maintenance btrace \",\n-\t\t  0, &maintenancelist);\n+  add_basic_prefix_cmd (\"btrace\", class_maintenance,\n+\t\t\t_(\"Branch tracing maintenance commands.\"),\n+\t\t\t&maint_btrace_cmdlist, \"maintenance btrace \",\n+\t\t\t0, &maintenancelist);\n \n-  add_prefix_cmd (\"btrace\", class_maintenance, maint_btrace_set_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"btrace\", class_maintenance, _(\"\\\n Set branch tracing specific variables.\"),\n-                  &maint_btrace_set_cmdlist, \"maintenance set btrace \",\n-                  0, &maintenance_set_cmdlist);\n+\t\t\t&maint_btrace_set_cmdlist, \"maintenance set btrace \",\n+\t\t\t0, &maintenance_set_cmdlist);\n \n-  add_prefix_cmd (\"pt\", class_maintenance, maint_btrace_pt_set_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"pt\", class_maintenance, _(\"\\\n Set Intel Processor Trace specific variables.\"),\n-                  &maint_btrace_pt_set_cmdlist, \"maintenance set btrace pt \",\n-                  0, &maint_btrace_set_cmdlist);\n+\t\t\t&maint_btrace_pt_set_cmdlist,\n+\t\t\t\"maintenance set btrace pt \",\n+\t\t\t0, &maint_btrace_set_cmdlist);\n \n-  add_prefix_cmd (\"btrace\", class_maintenance, maint_btrace_show_cmd, _(\"\\\n+  add_show_prefix_cmd (\"btrace\", class_maintenance, _(\"\\\n Show branch tracing specific variables.\"),\n-                  &maint_btrace_show_cmdlist, \"maintenance show btrace \",\n-                  0, &maintenance_show_cmdlist);\n+\t\t       &maint_btrace_show_cmdlist, \"maintenance show btrace \",\n+\t\t       0, &maintenance_show_cmdlist);\n \n-  add_prefix_cmd (\"pt\", class_maintenance, maint_btrace_pt_show_cmd, _(\"\\\n+  add_show_prefix_cmd (\"pt\", class_maintenance, _(\"\\\n Show Intel Processor Trace specific variables.\"),\n-                  &maint_btrace_pt_show_cmdlist, \"maintenance show btrace pt \",\n-                  0, &maint_btrace_show_cmdlist);\n+\t\t       &maint_btrace_pt_show_cmdlist,\n+\t\t       \"maintenance show btrace pt \",\n+\t\t       0, &maint_btrace_show_cmdlist);\n \n   add_setshow_boolean_cmd (\"skip-pad\", class_maintenance,\n \t\t\t   &maint_btrace_pt_skip_pad, _(\"\\"
    },
    {
      "sha": "f7178510878b2abb1894c15a1a2b745a89aa311a",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 18,
      "deletions": 51,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -191,26 +191,6 @@ error_no_arg (const char *why)\n   error (_(\"Argument required (%s).\"), why);\n }\n \n-/* The \"info\" command is defined as a prefix, with allow_unknown = 0.\n-   Therefore, its own definition is called only for \"info\" with no\n-   args.  */\n-\n-static void\n-info_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"info\\\" must be followed by \"\n-\t\t       \"the name of an info command.\\n\"));\n-  help_list (infolist, \"info \", all_commands, gdb_stdout);\n-}\n-\n-/* The \"show\" command with no arguments shows all the settings.  */\n-\n-static void\n-show_command (const char *arg, int from_tty)\n-{\n-  cmd_show_list (showlist, from_tty, \"\");\n-}\n-\n /* See cli/cli-cmds.h.  */\n \n void\n@@ -1852,20 +1832,6 @@ filter_sals (std::vector<symtab_and_line> &sals)\n   sals.erase (from, sals.end ());\n }\n \n-static void\n-set_debug (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set debug\\\" must be followed by \"\n-\t\t       \"the name of a debug subcommand.\\n\"));\n-  help_list (setdebuglist, \"set debug \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_debug (const char *args, int from_tty)\n-{\n-  cmd_show_list (showdebuglist, from_tty, \"\");\n-}\n-\n void\n init_cmd_lists (void)\n {\n@@ -2208,12 +2174,12 @@ Show verbosity.\"), NULL,\n \t\t\t   show_info_verbose,\n \t\t\t   &setlist, &showlist);\n \n-  add_prefix_cmd (\"history\", class_support, set_history,\n-\t\t  _(\"Generic command for setting command history parameters.\"),\n-\t\t  &sethistlist, \"set history \", 0, &setlist);\n-  add_prefix_cmd (\"history\", class_support, show_history,\n-\t\t  _(\"Generic command for showing command history parameters.\"),\n-\t\t  &showhistlist, \"show history \", 0, &showlist);\n+  add_basic_prefix_cmd (\"history\", class_support, _(\"\\\n+Generic command for setting command history parameters.\"),\n+\t\t\t&sethistlist, \"set history \", 0, &setlist);\n+  add_show_prefix_cmd (\"history\", class_support, _(\"\\\n+Generic command for showing command history parameters.\"),\n+\t\t       &showhistlist, \"show history \", 0, &showlist);\n \n   add_setshow_boolean_cmd (\"expansion\", no_class, &history_expansion_p, _(\"\\\n Set history expansion on command input.\"), _(\"\\\n@@ -2223,20 +2189,21 @@ Without an argument, history expansion is enabled.\"),\n \t\t\t   show_history_expansion_p,\n \t\t\t   &sethistlist, &showhistlist);\n \n-  add_prefix_cmd (\"info\", class_info, info_command, _(\"\\\n+  add_basic_prefix_cmd (\"info\", class_info, _(\"\\\n Generic command for showing things about the program being debugged.\"),\n-\t\t  &infolist, \"info \", 0, &cmdlist);\n+\t\t\t&infolist, \"info \", 0, &cmdlist);\n   add_com_alias (\"i\", \"info\", class_info, 1);\n   add_com_alias (\"inf\", \"info\", class_info, 1);\n \n   add_com (\"complete\", class_obscure, complete_command,\n \t   _(\"List the completions for the rest of the line as a command.\"));\n \n-  add_prefix_cmd (\"show\", class_info, show_command, _(\"\\\n+  add_show_prefix_cmd (\"show\", class_info, _(\"\\\n Generic command for showing things about the debugger.\"),\n-\t\t  &showlist, \"show \", 0, &cmdlist);\n+\t\t       &showlist, \"show \", 0, &cmdlist);\n   /* Another way to get at the same thing.  */\n-  add_info (\"set\", show_command, _(\"Show all GDB settings.\"));\n+  add_show_prefix_cmd (\"set\", class_info, _(\"Show all GDB settings.\"),\n+\t\t       &showlist, \"info set \", 0, &infolist);\n \n   c = add_com (\"with\", class_vars, with_command, _(\"\\\n Temporarily set SETTING to VALUE, run COMMAND, and restore SETTING.\\n\\\n@@ -2324,13 +2291,13 @@ from the target.\"),\n \t\t\t\t       show_remote_timeout,\n \t\t\t\t       &setlist, &showlist);\n \n-  add_prefix_cmd (\"debug\", no_class, set_debug,\n-\t\t  _(\"Generic command for setting gdb debugging flags.\"),\n-\t\t  &setdebuglist, \"set debug \", 0, &setlist);\n+  add_basic_prefix_cmd (\"debug\", no_class,\n+\t\t\t_(\"Generic command for setting gdb debugging flags.\"),\n+\t\t\t&setdebuglist, \"set debug \", 0, &setlist);\n \n-  add_prefix_cmd (\"debug\", no_class, show_debug,\n-\t\t  _(\"Generic command for showing gdb debugging flags.\"),\n-\t\t  &showdebuglist, \"show debug \", 0, &showlist);\n+  add_show_prefix_cmd (\"debug\", no_class,\n+\t\t       _(\"Generic command for showing gdb debugging flags.\"),\n+\t\t       &showdebuglist, \"show debug \", 0, &showlist);\n \n   c = add_com (\"shell\", class_support, shell_command, _(\"\\\n Execute the rest of the line as a shell command.\\n\\"
    },
    {
      "sha": "17f49ec80e49f368afd24a1f0ddb03f2bb28da9a",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -380,6 +380,58 @@ add_prefix_cmd (const char *name, enum command_class theclass,\n   return c;\n }\n \n+/* A helper function for add_basic_prefix_cmd.  This is a command\n+   function that just forwards to help_list.  */\n+\n+static void\n+do_prefix_cmd (const char *args, int from_tty, struct cmd_list_element *c)\n+{\n+  /* Look past all aliases.  */\n+  while (c->cmd_pointer != nullptr)\n+    c = c->cmd_pointer;\n+\n+  help_list (*c->prefixlist, c->prefixname, all_commands, gdb_stdout);\n+}\n+\n+/* See command.h.  */\n+\n+struct cmd_list_element *\n+add_basic_prefix_cmd (const char *name, enum command_class theclass,\n+\t\t      const char *doc, struct cmd_list_element **prefixlist,\n+\t\t      const char *prefixname, int allow_unknown,\n+\t\t      struct cmd_list_element **list)\n+{\n+  struct cmd_list_element *cmd = add_prefix_cmd (name, theclass, nullptr,\n+\t\t\t\t\t\t doc, prefixlist, prefixname,\n+\t\t\t\t\t\t allow_unknown, list);\n+  set_cmd_sfunc (cmd, do_prefix_cmd);\n+  return cmd;\n+}\n+\n+/* A helper function for add_show_prefix_cmd.  This is a command\n+   function that just forwards to cmd_show_list.  */\n+\n+static void\n+do_show_prefix_cmd (const char *args, int from_tty, struct cmd_list_element *c)\n+{\n+  cmd_show_list (*c->prefixlist, from_tty, \"\");\n+}\n+\n+/* See command.h.  */\n+\n+struct cmd_list_element *\n+add_show_prefix_cmd (const char *name, enum command_class theclass,\n+\t\t     const char *doc, struct cmd_list_element **prefixlist,\n+\t\t     const char *prefixname, int allow_unknown,\n+\t\t     struct cmd_list_element **list)\n+{\n+  struct cmd_list_element *cmd = add_prefix_cmd (name, theclass, nullptr,\n+\t\t\t\t\t\t doc, prefixlist, prefixname,\n+\t\t\t\t\t\t allow_unknown, list);\n+  set_cmd_sfunc (cmd, do_show_prefix_cmd);\n+  return cmd;\n+}\n+\n /* Like ADD_PREFIX_CMD but sets the suppress_notification pointer on the\n    new command list element.  */\n "
    },
    {
      "sha": "567ef2eeded00002a902221b38226a23e2364004",
      "filename": "gdb/cli/cli-dump.c",
      "status": "modified",
      "additions": 45,
      "deletions": 102,
      "changes": 147,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-dump.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -128,20 +128,6 @@ static struct cmd_list_element *tekhex_cmdlist;\n static struct cmd_list_element *binary_dump_cmdlist;\n static struct cmd_list_element *binary_append_cmdlist;\n \n-static void\n-dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump\\\" must be followed by a subcommand.\\n\\n\"));\n-  help_list (dump_cmdlist, \"dump \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-append_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"append\\\" must be followed by a subcommand.\\n\\n\"));\n-  help_list (dump_cmdlist, \"append \", all_commands, gdb_stdout);\n-}\n-\n static void\n dump_binary_file (const char *filename, const char *mode, \n \t\t  const bfd_byte *buf, ULONGEST len)\n@@ -579,65 +565,22 @@ restore_command (const char *args, int from_tty)\n     }\n }\n \n-static void\n-srec_dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump srec\\\" must be followed by a subcommand.\\n\"));\n-  help_list (srec_cmdlist, \"dump srec \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-ihex_dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump ihex\\\" must be followed by a subcommand.\\n\"));\n-  help_list (ihex_cmdlist, \"dump ihex \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-verilog_dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump verilog\\\" must be followed by a subcommand.\\n\"));\n-  help_list (verilog_cmdlist, \"dump verilog \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-tekhex_dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump tekhex\\\" must be followed by a subcommand.\\n\"));\n-  help_list (tekhex_cmdlist, \"dump tekhex \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-binary_dump_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"dump binary\\\" must be followed by a subcommand.\\n\"));\n-  help_list (binary_dump_cmdlist, \"dump binary \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-binary_append_command (const char *cmd, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"append binary\\\" must be followed by a subcommand.\\n\"));\n-  help_list (binary_append_cmdlist, \"append binary \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n void _initialize_cli_dump ();\n void\n _initialize_cli_dump ()\n {\n   struct cmd_list_element *c;\n \n-  add_prefix_cmd (\"dump\", class_vars, dump_command,\n-\t\t  _(\"Dump target code/data to a local file.\"),\n-\t\t  &dump_cmdlist, \"dump \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &cmdlist);\n-  add_prefix_cmd (\"append\", class_vars, append_command,\n-\t\t  _(\"Append target code/data to a local file.\"),\n-\t\t  &append_cmdlist, \"append \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &cmdlist);\n+  add_basic_prefix_cmd (\"dump\", class_vars,\n+\t\t\t_(\"Dump target code/data to a local file.\"),\n+\t\t\t&dump_cmdlist, \"dump \",\n+\t\t\t0/*allow-unknown*/,\n+\t\t\t&cmdlist);\n+  add_basic_prefix_cmd (\"append\", class_vars,\n+\t\t\t_(\"Append target code/data to a local file.\"),\n+\t\t\t&append_cmdlist, \"append \",\n+\t\t\t0/*allow-unknown*/,\n+\t\t\t&cmdlist);\n \n   add_dump_command (\"memory\", dump_memory_command, \"\\\n Write contents of memory to a raw binary file.\\n\\\n@@ -649,41 +592,41 @@ Write the value of an expression to a raw binary file.\\n\\\n Arguments are FILE EXPRESSION.  Writes the value of EXPRESSION to\\n\\\n the specified FILE in raw target ordered bytes.\");\n \n-  add_prefix_cmd (\"srec\", all_commands, srec_dump_command,\n-\t\t  _(\"Write target code/data to an srec file.\"),\n-\t\t  &srec_cmdlist, \"dump srec \", \n-\t\t  0 /*allow-unknown*/, \n-\t\t  &dump_cmdlist);\n-\n-  add_prefix_cmd (\"ihex\", all_commands, ihex_dump_command,\n-\t\t  _(\"Write target code/data to an intel hex file.\"),\n-\t\t  &ihex_cmdlist, \"dump ihex \", \n-\t\t  0 /*allow-unknown*/, \n-\t\t  &dump_cmdlist);\n-\n-  add_prefix_cmd (\"verilog\", all_commands, verilog_dump_command,\n-\t\t  _(\"Write target code/data to a verilog hex file.\"),\n-\t\t  &verilog_cmdlist, \"dump verilog \",\n-\t\t  0 /*allow-unknown*/,\n-\t\t  &dump_cmdlist);\n-\n-  add_prefix_cmd (\"tekhex\", all_commands, tekhex_dump_command,\n-\t\t  _(\"Write target code/data to a tekhex file.\"),\n-\t\t  &tekhex_cmdlist, \"dump tekhex \", \n-\t\t  0 /*allow-unknown*/, \n-\t\t  &dump_cmdlist);\n-\n-  add_prefix_cmd (\"binary\", all_commands, binary_dump_command,\n-\t\t  _(\"Write target code/data to a raw binary file.\"),\n-\t\t  &binary_dump_cmdlist, \"dump binary \", \n-\t\t  0 /*allow-unknown*/, \n-\t\t  &dump_cmdlist);\n-\n-  add_prefix_cmd (\"binary\", all_commands, binary_append_command,\n-\t\t  _(\"Append target code/data to a raw binary file.\"),\n-\t\t  &binary_append_cmdlist, \"append binary \", \n-\t\t  0 /*allow-unknown*/, \n-\t\t  &append_cmdlist);\n+  add_basic_prefix_cmd (\"srec\", all_commands,\n+\t\t\t_(\"Write target code/data to an srec file.\"),\n+\t\t\t&srec_cmdlist, \"dump srec \", \n+\t\t\t0 /*allow-unknown*/, \n+\t\t\t&dump_cmdlist);\n+\n+  add_basic_prefix_cmd (\"ihex\", all_commands,\n+\t\t\t_(\"Write target code/data to an intel hex file.\"),\n+\t\t\t&ihex_cmdlist, \"dump ihex \", \n+\t\t\t0 /*allow-unknown*/, \n+\t\t\t&dump_cmdlist);\n+\n+  add_basic_prefix_cmd (\"verilog\", all_commands,\n+\t\t\t_(\"Write target code/data to a verilog hex file.\"),\n+\t\t\t&verilog_cmdlist, \"dump verilog \",\n+\t\t\t0 /*allow-unknown*/,\n+\t\t\t&dump_cmdlist);\n+\n+  add_basic_prefix_cmd (\"tekhex\", all_commands,\n+\t\t\t_(\"Write target code/data to a tekhex file.\"),\n+\t\t\t&tekhex_cmdlist, \"dump tekhex \", \n+\t\t\t0 /*allow-unknown*/, \n+\t\t\t&dump_cmdlist);\n+\n+  add_basic_prefix_cmd (\"binary\", all_commands,\n+\t\t\t_(\"Write target code/data to a raw binary file.\"),\n+\t\t\t&binary_dump_cmdlist, \"dump binary \", \n+\t\t\t0 /*allow-unknown*/, \n+\t\t\t&dump_cmdlist);\n+\n+  add_basic_prefix_cmd (\"binary\", all_commands,\n+\t\t\t_(\"Append target code/data to a raw binary file.\"),\n+\t\t\t&binary_append_cmdlist, \"append binary \", \n+\t\t\t0 /*allow-unknown*/, \n+\t\t\t&append_cmdlist);\n \n   add_cmd (\"memory\", all_commands, dump_srec_memory, _(\"\\\n Write contents of memory to an srec file.\\n\\"
    },
    {
      "sha": "a0c3cc518015ae1dc18346819c68b281888bfa23",
      "filename": "gdb/cli/cli-style.c",
      "status": "modified",
      "additions": 43,
      "deletions": 83,
      "changes": 126,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-style.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-style.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-style.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -215,20 +215,16 @@ void\n cli_style_option::add_setshow_commands (enum command_class theclass,\n \t\t\t\t\tconst char *prefix_doc,\n \t\t\t\t\tstruct cmd_list_element **set_list,\n-\t\t\t\t\tvoid (*do_set) (const char *args,\n-\t\t\t\t\t\t\tint from_tty),\n \t\t\t\t\tstruct cmd_list_element **show_list,\n-\t\t\t\t\tvoid (*do_show) (const char *args,\n-\t\t\t\t\t\t\t int from_tty),\n \t\t\t\t\tbool skip_intensity)\n {\n   m_set_prefix = std::string (\"set style \") + m_name + \" \";\n   m_show_prefix = std::string (\"show style \") + m_name + \" \";\n \n-  add_prefix_cmd (m_name, no_class, do_set, prefix_doc, &m_set_list,\n-\t\t  m_set_prefix.c_str (), 0, set_list);\n-  add_prefix_cmd (m_name, no_class, do_show, prefix_doc, &m_show_list,\n-\t\t  m_show_prefix.c_str (), 0, show_list);\n+  add_basic_prefix_cmd (m_name, no_class, prefix_doc, &m_set_list,\n+\t\t\tm_set_prefix.c_str (), 0, set_list);\n+  add_show_prefix_cmd (m_name, no_class, prefix_doc, &m_show_list,\n+\t\t       m_show_prefix.c_str (), 0, show_list);\n \n   add_setshow_enum_cmd (\"foreground\", theclass, cli_colors,\n \t\t\t&m_foreground,\n@@ -260,20 +256,6 @@ cli_style_option::add_setshow_commands (enum command_class theclass,\n static cmd_list_element *style_set_list;\n static cmd_list_element *style_show_list;\n \n-static void\n-set_style (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set style\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (style_set_list, \"set style \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_style (const char *arg, int from_tty)\n-{\n-  cmd_show_list (style_show_list, from_tty, \"\");\n-}\n-\n static void\n set_style_enabled  (const char *args, int from_tty, struct cmd_list_element *c)\n {\n@@ -301,27 +283,15 @@ show_style_sources (struct ui_file *file, int from_tty,\n     fprintf_filtered (file, _(\"Source code styling is disabled.\\n\"));\n }\n \n-/* Builds the \"set style NAME \" prefix.  */\n-\n-static std::string\n-set_style_name (const char *name)\n-{\n-  std::string result (\"set style \");\n-\n-  result += name;\n-  result += \" \";\n-  return result;\n-}\n-\n void _initialize_cli_style ();\n void\n _initialize_cli_style ()\n {\n-  add_prefix_cmd (\"style\", no_class, set_style, _(\"\\\n+  add_basic_prefix_cmd (\"style\", no_class, _(\"\\\n Style-specific settings.\\n\\\n Configure various style-related variables, such as colors\"),\n \t\t  &style_set_list, \"set style \", 0, &setlist);\n-  add_prefix_cmd (\"style\", no_class, show_style, _(\"\\\n+  add_show_prefix_cmd (\"style\", no_class, _(\"\\\n Style-specific settings.\\n\\\n Configure various style-related variables, such as colors\"),\n \t\t  &style_show_list, \"show style \", 0, &showlist);\n@@ -348,78 +318,68 @@ available if the appropriate extension is available at runtime.\"\n \t\t\t   ), set_style_enabled, show_style_sources,\n \t\t\t   &style_set_list, &style_show_list);\n \n-#define STYLE_ADD_SETSHOW_COMMANDS(STYLE, PREFIX_DOC, SKIP)\t\t\\\n-  STYLE.add_setshow_commands (no_class, PREFIX_DOC,\t\t\\\n-\t\t\t      &style_set_list,\t\t\t\t\\\n-\t\t\t      [] (const char *args, int from_tty)\t\\\n-\t\t\t      {\t\t\t\t\t\t\\\n-\t\t\t\thelp_list\t\t\t\t\\\n-\t\t\t\t  (STYLE.set_list (),\t\t\t\\\n-\t\t\t\t   set_style_name (STYLE.name ()).c_str (), \\\n-\t\t\t\t   all_commands,\t\t\t\\\n-\t\t\t\t   gdb_stdout);\t\t\t\t\\\n-\t\t\t      },\t\t\t\t\t\\\n-\t\t\t      &style_show_list,\t\t\t\t\\\n-\t\t\t      [] (const char *args, int from_tty)\t\\\n-\t\t\t      {\t\t\t\t\t\t\\\n-\t\t\t\tcmd_show_list\t\t\t\t\\\n-\t\t\t\t  (STYLE.show_list (),\t\t\t\\\n-\t\t\t\t   from_tty,\t\t\t\t\\\n-\t\t\t\t   \"\");\t\t\t\t\t\\\n-\t\t\t      }, SKIP)\n-\n-  STYLE_ADD_SETSHOW_COMMANDS (file_name_style,\n-\t\t\t      _(\"\\\n+  file_name_style.add_setshow_commands (no_class, _(\"\\\n Filename display styling.\\n\\\n-Configure filename colors and display intensity.\"), false);\n+Configure filename colors and display intensity.\"),\n+\t\t\t\t\t&style_set_list, &style_show_list,\n+\t\t\t\t\tfalse);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (function_name_style,\n-\t\t\t      _(\"\\\n+  function_name_style.add_setshow_commands (no_class, _(\"\\\n Function name display styling.\\n\\\n-Configure function name colors and display intensity\"), false);\n+Configure function name colors and display intensity\"),\n+\t\t\t\t\t    &style_set_list, &style_show_list,\n+\t\t\t\t\t    false);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (variable_name_style,\n-\t\t\t      _(\"\\\n+  variable_name_style.add_setshow_commands (no_class, _(\"\\\n Variable name display styling.\\n\\\n-Configure variable name colors and display intensity\"), false);\n+Configure variable name colors and display intensity\"),\n+\t\t\t\t\t    &style_set_list, &style_show_list,\n+\t\t\t\t\t    false);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (address_style,\n-\t\t\t      _(\"\\\n+  address_style.add_setshow_commands (no_class, _(\"\\\n Address display styling.\\n\\\n-Configure address colors and display intensity\"), false);\n+Configure address colors and display intensity\"),\n+\t\t\t\t      &style_set_list, &style_show_list,\n+\t\t\t\t      false);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (title_style,\n-\t\t\t      _(\"\\\n+  title_style.add_setshow_commands (no_class, _(\"\\\n Title display styling.\\n\\\n Configure title colors and display intensity\\n\\\n Some commands (such as \\\"apropos -v REGEXP\\\") use the title style to improve\\n\\\n-readability.\"), false);\n+readability.\"),\n+\t\t\t\t    &style_set_list, &style_show_list,\n+\t\t\t\t    false);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (highlight_style,\n-\t\t\t      _(\"\\\n+  highlight_style.add_setshow_commands (no_class, _(\"\\\n Highlight display styling.\\n\\\n Configure highlight colors and display intensity\\n\\\n Some commands use the highlight style to draw the attention to a part\\n\\\n-of their output.\"), false);\n+of their output.\"),\n+\t\t\t\t\t&style_set_list, &style_show_list,\n+\t\t\t\t\tfalse);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (metadata_style,\n-\t\t\t      _(\"\\\n+  metadata_style.add_setshow_commands (no_class, _(\"\\\n Metadata display styling.\\n\\\n Configure metadata colors and display intensity\\n\\\n The \\\"metadata\\\" style is used when GDB displays information about\\n\\\n-your data, for example \\\"<unavailable>\\\"\"), false);\n+your data, for example \\\"<unavailable>\\\"\"),\n+\t\t\t\t       &style_set_list, &style_show_list,\n+\t\t\t\t       false);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (tui_border_style,\n-\t\t\t      _(\"\\\n+  tui_border_style.add_setshow_commands (no_class, _(\"\\\n TUI border display styling.\\n\\\n Configure TUI border colors\\n\\\n The \\\"tui-border\\\" style is used when GDB displays the border of a\\n\\\n-TUI window that does not have the focus.\"), true);\n+TUI window that does not have the focus.\"),\n+\t\t\t\t\t &style_set_list, &style_show_list,\n+\t\t\t\t\t true);\n \n-  STYLE_ADD_SETSHOW_COMMANDS (tui_active_border_style,\n-\t\t\t      _(\"\\\n+  tui_active_border_style.add_setshow_commands (no_class, _(\"\\\n TUI active border display styling.\\n\\\n Configure TUI active border colors\\n\\\n The \\\"tui-active-border\\\" style is used when GDB displays the border of a\\n\\\n-TUI window that does have the focus.\"), true);\n+TUI window that does have the focus.\"),\n+\t\t\t\t\t\t&style_set_list,\n+\t\t\t\t\t\t&style_show_list,\n+\t\t\t\t\t\ttrue);\n }"
    },
    {
      "sha": "6422e5296a3507289137bcc1a712cc22b903e204",
      "filename": "gdb/cli/cli-style.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-style.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cli/cli-style.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-style.h?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -46,9 +46,7 @@ class cli_style_option\n   void add_setshow_commands (enum command_class theclass,\n \t\t\t     const char *prefix_doc,\n \t\t\t     struct cmd_list_element **set_list,\n-\t\t\t     void (*do_set) (const char *args, int from_tty),\n \t\t\t     struct cmd_list_element **show_list,\n-\t\t\t     void (*do_show) (const char *args, int from_tty),\n \t\t\t     bool skip_intensity);\n \n   /* Return the 'set style NAME' command list, that can be used"
    },
    {
      "sha": "b9b94227b9fd325611523ce964833bfa4d035df1",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -179,6 +179,20 @@ extern struct cmd_list_element *add_prefix_cmd (const char *, enum command_class\n \t\t\t\t\t\tconst char *, int,\n \t\t\t\t\t\tstruct cmd_list_element **);\n \n+/* Like add_prefix_cmd, but sets the callback to a function that\n+   simply calls help_list.  */\n+\n+extern struct cmd_list_element *add_basic_prefix_cmd\n+  (const char *, enum command_class, const char *, struct cmd_list_element **,\n+   const char *, int, struct cmd_list_element **);\n+\n+/* Like add_prefix_cmd, but useful for \"show\" prefixes.  This sets the\n+   callback to a function that simply calls cmd_show_list.  */\n+\n+extern struct cmd_list_element *add_show_prefix_cmd\n+  (const char *, enum command_class, const char *, struct cmd_list_element **,\n+   const char *, int, struct cmd_list_element **);\n+\n extern struct cmd_list_element *add_prefix_cmd_suppress_notification\n \t\t\t(const char *name, enum command_class theclass,\n \t\t\t cmd_const_cfunc_ftype *fun,"
    },
    {
      "sha": "6601272e717ccfd53269c945543ad60ab0044a14",
      "filename": "gdb/cp-support.c",
      "status": "modified",
      "additions": 5,
      "deletions": 18,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/cp-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/cp-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-support.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2118,18 +2118,6 @@ test_cp_remove_params ()\n \n #endif /* GDB_SELF_CHECK */\n \n-/* Don't allow just \"maintenance cplus\".  */\n-\n-static  void\n-maint_cplus_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance cplus\\\" must be followed \"\n-\t\t       \"by the name of a command.\\n\"));\n-  help_list (maint_cplus_cmd_list,\n-\t     \"maintenance cplus \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n /* This is a front end for cp_find_first_component, for unit testing.\n    Be careful when using it: see the NOTE above\n    cp_find_first_component.  */\n@@ -2167,12 +2155,11 @@ void _initialize_cp_support ();\n void\n _initialize_cp_support ()\n {\n-  add_prefix_cmd (\"cplus\", class_maintenance,\n-\t\t  maint_cplus_command,\n-\t\t  _(\"C++ maintenance commands.\"),\n-\t\t  &maint_cplus_cmd_list,\n-\t\t  \"maintenance cplus \",\n-\t\t  0, &maintenancelist);\n+  add_basic_prefix_cmd (\"cplus\", class_maintenance,\n+\t\t\t_(\"C++ maintenance commands.\"),\n+\t\t\t&maint_cplus_cmd_list,\n+\t\t\t\"maintenance cplus \",\n+\t\t\t0, &maintenancelist);\n   add_alias_cmd (\"cp\", \"cplus\",\n \t\t class_maintenance, 1,\n \t\t &maintenancelist);"
    },
    {
      "sha": "c0c26998c9538ab95965a73b1ef6347e2af7fc70",
      "filename": "gdb/dcache.c",
      "status": "modified",
      "additions": 6,
      "deletions": 18,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/dcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/dcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dcache.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -670,20 +670,6 @@ set_dcache_line_size (const char *args, int from_tty,\n   target_dcache_invalidate ();\n }\n \n-static void\n-set_dcache_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (\n-     \"\\\"set dcache\\\" must be followed by the name of a subcommand.\\n\");\n-  help_list (dcache_set_list, \"set dcache \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_dcache_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (dcache_show_list, from_tty, \"\");\n-}\n-\n void _initialize_dcache ();\n void\n _initialize_dcache ()\n@@ -708,12 +694,14 @@ With no arguments, this command prints the cache configuration and a\\n\\\n summary of each line in the cache.  With an argument, dump\\\"\\n\\\n the contents of the given line.\"));\n \n-  add_prefix_cmd (\"dcache\", class_obscure, set_dcache_command, _(\"\\\n+  add_basic_prefix_cmd (\"dcache\", class_obscure, _(\"\\\n Use this command to set number of lines in dcache and line-size.\"),\n-\t\t  &dcache_set_list, \"set dcache \", /*allow_unknown*/0, &setlist);\n-  add_prefix_cmd (\"dcache\", class_obscure, show_dcache_command, _(\"\\\n+\t\t\t&dcache_set_list, \"set dcache \", /*allow_unknown*/0,\n+\t\t\t&setlist);\n+  add_show_prefix_cmd (\"dcache\", class_obscure, _(\"\\\n Show dcachesettings.\"),\n-\t\t  &dcache_show_list, \"show dcache \", /*allow_unknown*/0, &showlist);\n+\t\t       &dcache_show_list, \"show dcache \", /*allow_unknown*/0,\n+\t\t       &showlist);\n \n   add_setshow_zuinteger_cmd (\"line-size\", class_obscure,\n \t\t\t     &dcache_line_size, _(\"\\"
    },
    {
      "sha": "9cc0e1b59ed50f152abe18da9ecd9f033bf00e59",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 19,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -23481,19 +23481,6 @@ partial_die_eq (const void *item_lhs, const void *item_rhs)\n struct cmd_list_element *set_dwarf_cmdlist;\n struct cmd_list_element *show_dwarf_cmdlist;\n \n-static void\n-set_dwarf_cmd (const char *args, int from_tty)\n-{\n-  help_list (set_dwarf_cmdlist, \"maintenance set dwarf \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-static void\n-show_dwarf_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_dwarf_cmdlist, from_tty, \"\");\n-}\n-\n static void\n show_check_physname (struct ui_file *file, int from_tty,\n \t\t     struct cmd_list_element *c, const char *value)\n@@ -23507,17 +23494,17 @@ void _initialize_dwarf2_read ();\n void\n _initialize_dwarf2_read ()\n {\n-  add_prefix_cmd (\"dwarf\", class_maintenance, set_dwarf_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"dwarf\", class_maintenance, _(\"\\\n Set DWARF specific variables.\\n\\\n Configure DWARF variables such as the cache size.\"),\n-                  &set_dwarf_cmdlist, \"maintenance set dwarf \",\n-                  0/*allow-unknown*/, &maintenance_set_cmdlist);\n+\t\t\t&set_dwarf_cmdlist, \"maintenance set dwarf \",\n+\t\t\t0/*allow-unknown*/, &maintenance_set_cmdlist);\n \n-  add_prefix_cmd (\"dwarf\", class_maintenance, show_dwarf_cmd, _(\"\\\n+  add_show_prefix_cmd (\"dwarf\", class_maintenance, _(\"\\\n Show DWARF specific variables.\\n\\\n Show DWARF variables such as the cache size.\"),\n-                  &show_dwarf_cmdlist, \"maintenance show dwarf \",\n-                  0/*allow-unknown*/, &maintenance_show_cmdlist);\n+\t\t       &show_dwarf_cmdlist, \"maintenance show dwarf \",\n+\t\t       0/*allow-unknown*/, &maintenance_show_cmdlist);\n \n   add_setshow_zinteger_cmd (\"max-cache-age\", class_obscure,\n \t\t\t    &dwarf_max_cache_age, _(\"\\"
    },
    {
      "sha": "ac1016b083fc17a51373d51b875cb03bf5bc2b56",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 6,
      "deletions": 19,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2913,19 +2913,6 @@ frame_prepare_for_sniffer (struct frame_info *frame,\n static struct cmd_list_element *set_backtrace_cmdlist;\n static struct cmd_list_element *show_backtrace_cmdlist;\n \n-static void\n-set_backtrace_cmd (const char *args, int from_tty)\n-{\n-  help_list (set_backtrace_cmdlist, \"set backtrace \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-static void\n-show_backtrace_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_backtrace_cmdlist, from_tty, \"\");\n-}\n-\n /* Definition of the \"set backtrace\" settings that are exposed as\n    \"backtrace\" command options.  */\n \n@@ -2969,16 +2956,16 @@ _initialize_frame ()\n \n   gdb::observers::target_changed.attach (frame_observer_target_changed);\n \n-  add_prefix_cmd (\"backtrace\", class_maintenance, set_backtrace_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"backtrace\", class_maintenance, _(\"\\\n Set backtrace specific variables.\\n\\\n Configure backtrace variables such as the backtrace limit\"),\n-\t\t  &set_backtrace_cmdlist, \"set backtrace \",\n-\t\t  0/*allow-unknown*/, &setlist);\n-  add_prefix_cmd (\"backtrace\", class_maintenance, show_backtrace_cmd, _(\"\\\n+\t\t\t&set_backtrace_cmdlist, \"set backtrace \",\n+\t\t\t0/*allow-unknown*/, &setlist);\n+  add_show_prefix_cmd (\"backtrace\", class_maintenance, _(\"\\\n Show backtrace specific variables.\\n\\\n Show backtrace variables such as the backtrace limit.\"),\n-\t\t  &show_backtrace_cmdlist, \"show backtrace \",\n-\t\t  0/*allow-unknown*/, &showlist);\n+\t\t       &show_backtrace_cmdlist, \"show backtrace \",\n+\t\t       0/*allow-unknown*/, &showlist);\n \n   add_setshow_uinteger_cmd (\"limit\", class_obscure,\n \t\t\t    &user_set_backtrace_options.backtrace_limit, _(\"\\"
    },
    {
      "sha": "881decf078904c6eee60b180d455249159e573d4",
      "filename": "gdb/go32-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/go32-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/go32-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go32-nat.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2075,12 +2075,6 @@ go32_pte_for_address (const char *arg, int from_tty)\n \n static struct cmd_list_element *info_dos_cmdlist = NULL;\n \n-static void\n-go32_info_dos_command (const char *args, int from_tty)\n-{\n-  help_list (info_dos_cmdlist, \"info dos \", class_info, gdb_stdout);\n-}\n-\n void _initialize_go32_nat ();\n void\n _initialize_go32_nat ()\n@@ -2107,9 +2101,9 @@ _initialize_go32_nat ()\n   /* We are always processing GCC-compiled programs.  */\n   processing_gcc_compilation = 2;\n \n-  add_prefix_cmd (\"dos\", class_info, go32_info_dos_command, _(\"\\\n+  add_basic_prefix_cmd (\"dos\", class_info, _(\"\\\n Print information specific to DJGPP (aka MS-DOS) debugging.\"),\n-\t\t  &info_dos_cmdlist, \"info dos \", 0, &infolist);\n+\t\t\t&info_dos_cmdlist, \"info dos \", 0, &infolist);\n \n   add_cmd (\"sysinfo\", class_info, go32_sysinfo, _(\"\\\n Display information about the target system, including CPU, OS, DPMI, etc.\"),"
    },
    {
      "sha": "2b82f82820fe3612451214f1c1b5f6c625a55d56",
      "filename": "gdb/guile/guile.c",
      "status": "modified",
      "additions": 12,
      "deletions": 39,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/guile/guile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/guile/guile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/guile.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -396,33 +396,6 @@ static struct cmd_list_element *set_guile_list;\n static struct cmd_list_element *show_guile_list;\n static struct cmd_list_element *info_guile_list;\n \n-/* Function for use by 'set guile' prefix command.  */\n-\n-static void\n-set_guile_command (const char *args, int from_tty)\n-{\n-  help_list (set_guile_list, \"set guile \", all_commands, gdb_stdout);\n-}\n-\n-/* Function for use by 'show guile' prefix command.  */\n-\n-static void\n-show_guile_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_guile_list, from_tty, \"\");\n-}\n-\n-/* The \"info scheme\" command is defined as a prefix, with\n-   allow_unknown 0.  Therefore, its own definition is called only for\n-   \"info scheme\" with no args.  */\n-\n-static void\n-info_guile_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"info guile\\\" must be followed\"\n-\t\t       \" by the name of an info command.\\n\"));\n-  help_list (info_guile_list, \"info guile \", all_commands, gdb_stdout);\n-}\n \f\n /* Initialization.  */\n \n@@ -761,22 +734,22 @@ This command is only a placeholder.\")\n \t   );\n   add_com_alias (\"gu\", \"guile\", class_obscure, 1);\n \n-  add_prefix_cmd (\"guile\", class_obscure, set_guile_command,\n-\t\t  _(\"Prefix command for Guile preference settings.\"),\n-\t\t  &set_guile_list, \"set guile \", 0,\n-\t\t  &setlist);\n+  add_basic_prefix_cmd (\"guile\", class_obscure,\n+\t\t\t_(\"Prefix command for Guile preference settings.\"),\n+\t\t\t&set_guile_list, \"set guile \", 0,\n+\t\t\t&setlist);\n   add_alias_cmd (\"gu\", \"guile\", class_obscure, 1, &setlist);\n \n-  add_prefix_cmd (\"guile\", class_obscure, show_guile_command,\n-\t\t  _(\"Prefix command for Guile preference settings.\"),\n-\t\t  &show_guile_list, \"show guile \", 0,\n-\t\t  &showlist);\n+  add_show_prefix_cmd (\"guile\", class_obscure,\n+\t\t       _(\"Prefix command for Guile preference settings.\"),\n+\t\t       &show_guile_list, \"show guile \", 0,\n+\t\t       &showlist);\n   add_alias_cmd (\"gu\", \"guile\", class_obscure, 1, &showlist);\n \n-  add_prefix_cmd (\"guile\", class_obscure, info_guile_command,\n-\t\t  _(\"Prefix command for Guile info displays.\"),\n-\t\t  &info_guile_list, \"info guile \", 0,\n-\t\t  &infolist);\n+  add_basic_prefix_cmd (\"guile\", class_obscure,\n+\t\t\t_(\"Prefix command for Guile info displays.\"),\n+\t\t\t&info_guile_list, \"info guile \", 0,\n+\t\t\t&infolist);\n   add_info_alias (\"gu\", \"guile\", 1);\n \n   /* The name \"print-stack\" is carried over from Python."
    },
    {
      "sha": "84edb3649e90baa6bdbd0f810238e9f319f5cebe",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 22,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -9018,22 +9018,6 @@ i386_mpx_set_bounds (const char *args, int from_tty)\n \n static struct cmd_list_element *mpx_set_cmdlist, *mpx_show_cmdlist;\n \n-/* Helper function for the CLI commands.  */\n-\n-static void\n-set_mpx_cmd (const char *args, int from_tty)\n-{\n-  help_list (mpx_set_cmdlist, \"set mpx \", all_commands, gdb_stdout);\n-}\n-\n-/* Helper function for the CLI commands.  */\n-\n-static void\n-show_mpx_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (mpx_show_cmdlist, from_tty, \"\");\n-}\n-\n void _initialize_i386_tdep ();\n void\n _initialize_i386_tdep ()\n@@ -9064,17 +9048,17 @@ is \\\"default\\\".\"),\n \n   /* Add \"mpx\" prefix for the set commands.  */\n \n-  add_prefix_cmd (\"mpx\", class_support, set_mpx_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"mpx\", class_support, _(\"\\\n Set Intel Memory Protection Extensions specific variables.\"),\n-\t\t  &mpx_set_cmdlist, \"set mpx \",\n-\t\t  0 /* allow-unknown */, &setlist);\n+\t\t\t&mpx_set_cmdlist, \"set mpx \",\n+\t\t\t0 /* allow-unknown */, &setlist);\n \n   /* Add \"mpx\" prefix for the show commands.  */\n \n-  add_prefix_cmd (\"mpx\", class_support, show_mpx_cmd, _(\"\\\n+  add_show_prefix_cmd (\"mpx\", class_support, _(\"\\\n Show Intel Memory Protection Extensions specific variables.\"),\n-\t\t  &mpx_show_cmdlist, \"show mpx \",\n-\t\t  0 /* allow-unknown */, &showlist);\n+\t\t       &mpx_show_cmdlist, \"show mpx \",\n+\t\t       0 /* allow-unknown */, &showlist);\n \n   /* Add \"bound\" command for the show mpx commands list.  */\n "
    },
    {
      "sha": "9bbb413d4e494cf3b79040e27afde3607281a695",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -3041,14 +3041,6 @@ info_float_command (const char *args, int from_tty)\n   gdbarch_print_float_info (get_frame_arch (frame), gdb_stdout, frame, args);\n }\n \f\n-static void\n-unset_command (const char *args, int from_tty)\n-{\n-  printf_filtered (_(\"\\\"unset\\\" must be followed by the \"\n-\t\t     \"name of an unset subcommand.\\n\"));\n-  help_list (unsetlist, \"unset \", all_commands, gdb_stdout);\n-}\n-\n /* Implement `info proc' family of commands.  */\n \n static void\n@@ -3229,9 +3221,9 @@ give the program being debugged.  With no arguments, prints the entire\\n\\\n environment to be given to the program.\"), &showlist);\n   set_cmd_completer (c, noop_completer);\n \n-  add_prefix_cmd (\"unset\", no_class, unset_command,\n-\t\t  _(\"Complement to certain \\\"set\\\" commands.\"),\n-\t\t  &unsetlist, \"unset \", 0, &cmdlist);\n+  add_basic_prefix_cmd (\"unset\", no_class,\n+\t\t\t_(\"Complement to certain \\\"set\\\" commands.\"),\n+\t\t\t&unsetlist, \"unset \", 0, &cmdlist);\n \n   c = add_cmd (\"environment\", class_run, unset_environment_command, _(\"\\\n Cancel environment variable VAR for the program.\\n\\"
    },
    {
      "sha": "769b3299793d95fa2ec655a623416deb0805f755",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 6,
      "deletions": 19,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -500,19 +500,6 @@ language_str (enum language lang)\n   return languages[lang]->la_name;\n }\n \n-static void\n-set_check (const char *ignore, int from_tty)\n-{\n-  printf_unfiltered (\n-     \"\\\"set check\\\" must be followed by the name of a check subcommand.\\n\");\n-  help_list (setchecklist, \"set check \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_check (const char *ignore, int from_tty)\n-{\n-  cmd_show_list (showchecklist, from_tty, \"\");\n-}\n \f\n \n /* Build and install the \"set language LANG\" command.  */\n@@ -1149,15 +1136,15 @@ _initialize_language ()\n \n   /* GDB commands for language specific stuff.  */\n \n-  add_prefix_cmd (\"check\", no_class, set_check,\n-\t\t  _(\"Set the status of the type/range checker.\"),\n-\t\t  &setchecklist, \"set check \", 0, &setlist);\n+  add_basic_prefix_cmd (\"check\", no_class,\n+\t\t\t_(\"Set the status of the type/range checker.\"),\n+\t\t\t&setchecklist, \"set check \", 0, &setlist);\n   add_alias_cmd (\"c\", \"check\", no_class, 1, &setlist);\n   add_alias_cmd (\"ch\", \"check\", no_class, 1, &setlist);\n \n-  add_prefix_cmd (\"check\", no_class, show_check,\n-\t\t  _(\"Show the status of the type/range checker.\"),\n-\t\t  &showchecklist, \"show check \", 0, &showlist);\n+  add_show_prefix_cmd (\"check\", no_class,\n+\t\t       _(\"Show the status of the type/range checker.\"),\n+\t\t       &showchecklist, \"show check \", 0, &showlist);\n   add_alias_cmd (\"c\", \"check\", no_class, 1, &showlist);\n   add_alias_cmd (\"ch\", \"check\", no_class, 1, &showlist);\n "
    },
    {
      "sha": "42915db904423932cedbdceeb9412dabecb54537",
      "filename": "gdb/macrocmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/macrocmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/macrocmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrocmd.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -33,15 +33,6 @@\n \n static struct cmd_list_element *macrolist;\n \n-static void\n-macro_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered\n-    (\"\\\"macro\\\" must be followed by the name of a macro command.\\n\");\n-  help_list (macrolist, \"macro \", all_commands, gdb_stdout);\n-}\n-\n-\n \f\n /* Macro expansion commands.  */\n \n@@ -464,9 +455,9 @@ _initialize_macrocmd ()\n {\n   /* We introduce a new command prefix, `macro', under which we'll put\n      the various commands for working with preprocessor macros.  */\n-  add_prefix_cmd (\"macro\", class_info, macro_command,\n-\t\t  _(\"Prefix for commands dealing with C preprocessor macros.\"),\n-\t\t  &macrolist, \"macro \", 0, &cmdlist);\n+  add_basic_prefix_cmd (\"macro\", class_info,\n+\t\t\t_(\"Prefix for commands dealing with C preprocessor macros.\"),\n+\t\t\t&macrolist, \"macro \", 0, &cmdlist);\n \n   add_cmd (\"expand\", no_class, macro_expand_command, _(\"\\\n Fully expand any C/C++ preprocessor macro invocations in EXPRESSION.\\n\\"
    },
    {
      "sha": "df75e37361ff24e33ed6d977ccc8eeee96458fcd",
      "filename": "gdb/maint-test-options.c",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/maint-test-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/maint-test-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint-test-options.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -411,31 +411,19 @@ maintenance_test_options_unknown_is_operand_command_completer\n /* Command list for maint test-options.  */\n struct cmd_list_element *maintenance_test_options_list;\n \n-/* The \"maintenance test-options\" prefix command.  */\n-\n-static void\n-maintenance_test_options_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered\n-    (_(\"\\\"maintenance test-options\\\" must be followed \"\n-       \"by the name of a subcommand.\\n\"));\n-  help_list (maintenance_test_options_list, \"maintenance test-options \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n \f\n void _initialize_maint_test_options ();\n void\n _initialize_maint_test_options ()\n {\n   cmd_list_element *cmd;\n \n-  add_prefix_cmd (\"test-options\", no_class, maintenance_test_options_command,\n-\t\t  _(\"\\\n+  add_basic_prefix_cmd (\"test-options\", no_class,\n+\t\t\t_(\"\\\n Generic command for testing the options infrastructure.\"),\n-\t\t  &maintenance_test_options_list,\n-\t\t  \"maintenance test-options \", 0,\n-\t\t  &maintenancelist);\n+\t\t\t&maintenance_test_options_list,\n+\t\t\t\"maintenance test-options \", 0,\n+\t\t\t&maintenancelist);\n \n   const auto def_group = make_test_options_options_def_group (nullptr);\n "
    },
    {
      "sha": "48333e55c51b3640eeedfc77703419acfeffb916",
      "filename": "gdb/maint-test-settings.c",
      "status": "modified",
      "additions": 12,
      "deletions": 32,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/maint-test-settings.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/maint-test-settings.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint-test-settings.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -27,26 +27,6 @@ static cmd_list_element *maintenance_set_test_settings_list;\n /* Command list for \"maint show test-settings\".  */\n static cmd_list_element *maintenance_show_test_settings_list;\n \n-/* The \"maintenance set test-settings\" prefix command.  */\n-\n-static void\n-maintenance_set_test_settings_cmd (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance set test-settings\\\" must be followed \"\n-\t\t       \"by the name of a set command.\\n\"));\n-  help_list (maintenance_set_test_settings_list,\n-\t     \"maintenance set test-settings \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"maintenance show test-settings\" prefix command.  */\n-\n-static void\n-maintenance_show_test_settings_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (maintenance_show_test_settings_list, from_tty, \"\");\n-}\n-\n /* Control variables for all the \"maintenance set/show test-settings\n    xxx\" commands.  */\n \n@@ -105,21 +85,21 @@ _initialize_maint_test_settings ()\n {\n   maintenance_test_settings_filename = xstrdup (\"/foo/bar\");\n \n-  add_prefix_cmd (\"test-settings\", class_maintenance,\n-\t\t  maintenance_set_test_settings_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"test-settings\", class_maintenance,\n+\t\t\t_(\"\\\n Set GDB internal variables used for set/show command infrastructure testing.\"),\n-\t\t  &maintenance_set_test_settings_list,\n-\t\t  \"maintenance set test-settings \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &maintenance_set_cmdlist);\n+\t\t\t&maintenance_set_test_settings_list,\n+\t\t\t\"maintenance set test-settings \",\n+\t\t\t0/*allow-unknown*/,\n+\t\t\t&maintenance_set_cmdlist);\n \n-  add_prefix_cmd (\"test-settings\", class_maintenance,\n-\t\t  maintenance_show_test_settings_cmd, _(\"\\\n+  add_show_prefix_cmd (\"test-settings\", class_maintenance,\n+\t\t       _(\"\\\n Show GDB internal variables used for set/show command infrastructure testing.\"),\n-\t\t  &maintenance_show_test_settings_list,\n-\t\t  \"maintenance show test-settings \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &maintenance_show_cmdlist);\n+\t\t       &maintenance_show_test_settings_list,\n+\t\t       \"maintenance show test-settings \",\n+\t\t       0/*allow-unknown*/,\n+\t\t       &maintenance_show_cmdlist);\n \n   add_setshow_boolean_cmd (\"boolean\", class_maintenance,\n \t\t\t   &maintenance_test_settings_boolean, _(\"\\"
    },
    {
      "sha": "b4890c34cab9bc1694bf7a14e0d27547026116d8",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 24,
      "deletions": 96,
      "changes": 120,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -52,16 +52,6 @@\n \n static void maintenance_do_deprecate (const char *, int);\n \n-/* Access the maintenance subcommands.  */\n-\n-static void\n-maintenance_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance\\\" must be followed by \"\n-\t\t       \"the name of a maintenance command.\\n\"));\n-  help_list (maintenancelist, \"maintenance \", all_commands, gdb_stdout);\n-}\n-\n #ifndef _WIN32\n static void\n maintenance_dump_me (const char *args, int from_tty)\n@@ -139,32 +129,6 @@ maintenance_space_display (const char *args, int from_tty)\n     set_per_command_space (strtol (args, NULL, 10));\n }\n \n-/* The \"maintenance info\" command is defined as a prefix, with\n-   allow_unknown 0.  Therefore, its own definition is called only for\n-   \"maintenance info\" with no args.  */\n-\n-static void\n-maintenance_info_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance info\\\" must be followed \"\n-\t\t       \"by the name of an info command.\\n\"));\n-  help_list (maintenanceinfolist, \"maintenance info \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* The \"maintenance check\" command is defined as a prefix, with\n-   allow_unknown 0.  Therefore, its own definition is called only for\n-   \"maintenance check\" with no args.  */\n-\n-static void\n-maintenance_check_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance check\\\" must be followed \"\n-\t\t       \"by the name of a check command.\\n\"));\n-  help_list (maintenancechecklist, \"maintenance check \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n /* Mini tokenizing lexer for 'maint info sections' command.  */\n \n static int\n@@ -511,19 +475,6 @@ maintenance_print_architecture (const char *args, int from_tty)\n     }\n }\n \n-/* The \"maintenance print\" command is defined as a prefix, with\n-   allow_unknown 0.  Therefore, its own definition is called only for\n-   \"maintenance print\" with no args.  */\n-\n-static void\n-maintenance_print_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance print\\\" must be followed \"\n-\t\t       \"by the name of a print command.\\n\"));\n-  help_list (maintenanceprintlist, \"maintenance print \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n /* The \"maintenance translate-address\" command converts a section and address\n    to a symbol.  This can be called in two ways:\n    maintenance translate-address <secname> <addr>\n@@ -739,21 +690,6 @@ maintenance_do_deprecate (const char *text, int deprecate)\n struct cmd_list_element *maintenance_set_cmdlist;\n struct cmd_list_element *maintenance_show_cmdlist;\n \n-static void\n-maintenance_set_cmd (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"maintenance set\\\" must be followed \"\n-\t\t       \"by the name of a set command.\\n\"));\n-  help_list (maintenance_set_cmdlist, \"maintenance set \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-static void\n-maintenance_show_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (maintenance_show_cmdlist, from_tty, \"\");\n-}\n-\n /* \"maintenance with\" command.  */\n \n static void\n@@ -1097,14 +1033,6 @@ set_per_command_cmd (const char *args, int from_tty)\n       }\n }\n \n-/* Command \"show per-command\" displays summary of all the current\n-   \"show per-command \" settings.  */\n-\n-static void\n-show_per_command_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (per_command_showlist, from_tty, \"\");\n-}\n \f\n \n /* The \"maintenance selftest\" command.  */\n@@ -1141,19 +1069,19 @@ _initialize_maint_cmds ()\n {\n   struct cmd_list_element *cmd;\n \n-  add_prefix_cmd (\"maintenance\", class_maintenance, maintenance_command, _(\"\\\n+  add_basic_prefix_cmd (\"maintenance\", class_maintenance, _(\"\\\n Commands for use by GDB maintainers.\\n\\\n Includes commands to dump specific internal GDB structures in\\n\\\n a human readable form, to cause GDB to deliberately dump core, etc.\"),\n-\t\t  &maintenancelist, \"maintenance \", 0,\n-\t\t  &cmdlist);\n+\t\t\t&maintenancelist, \"maintenance \", 0,\n+\t\t\t&cmdlist);\n \n   add_com_alias (\"mt\", \"maintenance\", class_maintenance, 1);\n \n-  add_prefix_cmd (\"info\", class_maintenance, maintenance_info_command, _(\"\\\n+  add_basic_prefix_cmd (\"info\", class_maintenance, _(\"\\\n Commands for showing internal info about the program being debugged.\"),\n-\t\t  &maintenanceinfolist, \"maintenance info \", 0,\n-\t\t  &maintenancelist);\n+\t\t\t&maintenanceinfolist, \"maintenance info \", 0,\n+\t\t\t&maintenancelist);\n   add_alias_cmd (\"i\", \"info\", class_maintenance, 1, &maintenancelist);\n \n   add_cmd (\"sections\", class_maintenance, maintenance_info_sections, _(\"\\\n@@ -1168,24 +1096,24 @@ implies all sections).  In addition, the special argument\\n\\\n lists all sections from all object files, including shared libraries.\"),\n \t   &maintenanceinfolist);\n \n-  add_prefix_cmd (\"print\", class_maintenance, maintenance_print_command,\n-\t\t  _(\"Maintenance command for printing GDB internal state.\"),\n-\t\t  &maintenanceprintlist, \"maintenance print \", 0,\n-\t\t  &maintenancelist);\n+  add_basic_prefix_cmd (\"print\", class_maintenance,\n+\t\t\t_(\"Maintenance command for printing GDB internal state.\"),\n+\t\t\t&maintenanceprintlist, \"maintenance print \", 0,\n+\t\t\t&maintenancelist);\n \n-  add_prefix_cmd (\"set\", class_maintenance, maintenance_set_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"set\", class_maintenance, _(\"\\\n Set GDB internal variables used by the GDB maintainer.\\n\\\n Configure variables internal to GDB that aid in GDB's maintenance\"),\n-\t\t  &maintenance_set_cmdlist, \"maintenance set \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &maintenancelist);\n+\t\t\t&maintenance_set_cmdlist, \"maintenance set \",\n+\t\t\t0/*allow-unknown*/,\n+\t\t\t&maintenancelist);\n \n-  add_prefix_cmd (\"show\", class_maintenance, maintenance_show_cmd, _(\"\\\n+  add_show_prefix_cmd (\"show\", class_maintenance, _(\"\\\n Show GDB internal variables used by the GDB maintainer.\\n\\\n Configure variables internal to GDB that aid in GDB's maintenance\"),\n-\t\t  &maintenance_show_cmdlist, \"maintenance show \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &maintenancelist);\n+\t\t       &maintenance_show_cmdlist, \"maintenance show \",\n+\t\t       0/*allow-unknown*/,\n+\t\t       &maintenancelist);\n \n   cmd = add_cmd (\"with\", class_maintenance, maintenance_with_cmd, _(\"\\\n Like \\\"with\\\", but works with \\\"maintenance set\\\" variables.\\n\\\n@@ -1232,10 +1160,10 @@ Per-command statistics settings.\"),\n \t\t    &per_command_setlist, \"maintenance set per-command \",\n \t\t    1/*allow-unknown*/, &maintenance_set_cmdlist);\n \n-  add_prefix_cmd (\"per-command\", class_maintenance, show_per_command_cmd, _(\"\\\n+  add_show_prefix_cmd (\"per-command\", class_maintenance, _(\"\\\n Show per-command statistics settings.\"),\n-\t\t    &per_command_showlist, \"maintenance show per-command \",\n-\t\t    0/*allow-unknown*/, &maintenance_show_cmdlist);\n+\t\t       &per_command_showlist, \"maintenance show per-command \",\n+\t\t       0/*allow-unknown*/, &maintenance_show_cmdlist);\n \n   add_setshow_boolean_cmd (\"time\", class_maintenance,\n \t\t\t   &per_command_time, _(\"\\\n@@ -1299,10 +1227,10 @@ Print the internal architecture configuration.\\n\\\n Takes an optional file parameter.\"),\n \t   &maintenanceprintlist);\n \n-  add_prefix_cmd (\"check\", class_maintenance, maintenance_check_command, _(\"\\\n+  add_basic_prefix_cmd (\"check\", class_maintenance, _(\"\\\n Commands for checking internal gdb state.\"),\n-\t\t  &maintenancechecklist, \"maintenance check \", 0,\n-\t\t  &maintenancelist);\n+\t\t\t&maintenancechecklist, \"maintenance check \", 0,\n+\t\t\t&maintenancelist);\n \n   add_cmd (\"translate-address\", class_maintenance,\n \t   maintenance_translate_address,"
    },
    {
      "sha": "2e93f9e5fd3c096d76c131a26e9f570ec03e5839",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 23,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -6877,23 +6877,6 @@ mips_stack_frame_destroyed_p (struct gdbarch *gdbarch, CORE_ADDR pc)\n     return mips32_stack_frame_destroyed_p (gdbarch, pc);\n }\n \n-/* Root of all \"set mips \"/\"show mips \" commands.  This will eventually be\n-   used for all MIPS-specific commands.  */\n-\n-static void\n-show_mips_command (const char *args, int from_tty)\n-{\n-  help_list (showmipscmdlist, \"show mips \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-set_mips_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered\n-    (\"\\\"set mips\\\" must be followed by an appropriate subcommand.\\n\");\n-  help_list (setmipscmdlist, \"set mips \", all_commands, gdb_stdout);\n-}\n-\n /* Commands to show/set the MIPS FPU type.  */\n \n static void\n@@ -8990,13 +8973,13 @@ _initialize_mips_tdep ()\n   set_tdesc_property (mips_tdesc_gp64, PROPERTY_GP64, \"\");\n \n   /* Add root prefix command for all \"set mips\"/\"show mips\" commands.  */\n-  add_prefix_cmd (\"mips\", no_class, set_mips_command,\n-\t\t  _(\"Various MIPS specific commands.\"),\n-\t\t  &setmipscmdlist, \"set mips \", 0, &setlist);\n+  add_basic_prefix_cmd (\"mips\", no_class,\n+\t\t\t_(\"Various MIPS specific commands.\"),\n+\t\t\t&setmipscmdlist, \"set mips \", 0, &setlist);\n \n-  add_prefix_cmd (\"mips\", no_class, show_mips_command,\n-\t\t  _(\"Various MIPS specific commands.\"),\n-\t\t  &showmipscmdlist, \"show mips \", 0, &showlist);\n+  add_show_prefix_cmd (\"mips\", no_class,\n+\t\t       _(\"Various MIPS specific commands.\"),\n+\t\t       &showmipscmdlist, \"show mips \", 0, &showlist);\n \n   /* Allow the user to override the ABI.  */\n   add_setshow_enum_cmd (\"abi\", class_obscure, mips_abi_strings,"
    },
    {
      "sha": "d252646c02cfd4bde41582a7695402a8c7b49f5b",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 9,
      "deletions": 26,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1590,23 +1590,6 @@ python_command (const char *arg, int from_tty)\n static struct cmd_list_element *user_set_python_list;\n static struct cmd_list_element *user_show_python_list;\n \n-/* Function for use by 'set python' prefix command.  */\n-\n-static void\n-user_set_python (const char *args, int from_tty)\n-{\n-  help_list (user_set_python_list, \"set python \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* Function for use by 'show python' prefix command.  */\n-\n-static void\n-user_show_python (const char *args, int from_tty)\n-{\n-  cmd_show_list (user_show_python_list, from_tty, \"\");\n-}\n-\n /* Initialize the Python code.  */\n \n #ifdef HAVE_PYTHON\n@@ -1871,15 +1854,15 @@ This command is only a placeholder.\")\n   add_com_alias (\"py\", \"python\", class_obscure, 1);\n \n   /* Add set/show python print-stack.  */\n-  add_prefix_cmd (\"python\", no_class, user_show_python,\n-\t\t  _(\"Prefix command for python preference settings.\"),\n-\t\t  &user_show_python_list, \"show python \", 0,\n-\t\t  &showlist);\n-\n-  add_prefix_cmd (\"python\", no_class, user_set_python,\n-\t\t  _(\"Prefix command for python preference settings.\"),\n-\t\t  &user_set_python_list, \"set python \", 0,\n-\t\t  &setlist);\n+  add_basic_prefix_cmd (\"python\", no_class,\n+\t\t\t_(\"Prefix command for python preference settings.\"),\n+\t\t\t&user_show_python_list, \"show python \", 0,\n+\t\t\t&showlist);\n+\n+  add_show_prefix_cmd (\"python\", no_class,\n+\t\t       _(\"Prefix command for python preference settings.\"),\n+\t\t       &user_set_python_list, \"set python \", 0,\n+\t\t       &setlist);\n \n   add_setshow_enum_cmd (\"print-stack\", no_class, python_excp_enums,\n \t\t\t&gdbpy_should_print_stack, _(\"\\"
    },
    {
      "sha": "f3b4ecf8706ad84ce9b20272b755b0a2fbbf6ab1",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 6,
      "deletions": 24,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -563,24 +563,6 @@ ravenscar_thread_target::get_ada_task_ptid (long lwp, long thread)\n static struct cmd_list_element *set_ravenscar_list;\n static struct cmd_list_element *show_ravenscar_list;\n \n-/* Implement the \"set ravenscar\" prefix command.  */\n-\n-static void\n-set_ravenscar_command (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (_(\\\n-\"\\\"set ravenscar\\\" must be followed by the name of a setting.\\n\"));\n-  help_list (set_ravenscar_list, \"set ravenscar \", all_commands, gdb_stdout);\n-}\n-\n-/* Implement the \"show ravenscar\" prefix command.  */\n-\n-static void\n-show_ravenscar_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_ravenscar_list, from_tty, \"\");\n-}\n-\n /* Implement the \"show ravenscar task-switching\" command.  */\n \n static void\n@@ -607,13 +589,13 @@ _initialize_ravenscar ()\n      ravenscar ops if needed.  */\n   gdb::observers::inferior_created.attach (ravenscar_inferior_created);\n \n-  add_prefix_cmd (\"ravenscar\", no_class, set_ravenscar_command,\n-                  _(\"Prefix command for changing Ravenscar-specific settings.\"),\n-                  &set_ravenscar_list, \"set ravenscar \", 0, &setlist);\n+  add_basic_prefix_cmd (\"ravenscar\", no_class,\n+\t\t\t_(\"Prefix command for changing Ravenscar-specific settings.\"),\n+\t\t\t&set_ravenscar_list, \"set ravenscar \", 0, &setlist);\n \n-  add_prefix_cmd (\"ravenscar\", no_class, show_ravenscar_command,\n-                  _(\"Prefix command for showing Ravenscar-specific settings.\"),\n-                  &show_ravenscar_list, \"show ravenscar \", 0, &showlist);\n+  add_show_prefix_cmd (\"ravenscar\", no_class,\n+\t\t       _(\"Prefix command for showing Ravenscar-specific settings.\"),\n+\t\t       &show_ravenscar_list, \"show ravenscar \", 0, &showlist);\n \n   add_setshow_boolean_cmd (\"task-switching\", class_obscure,\n                            &ravenscar_task_support, _(\"\\"
    },
    {
      "sha": "fe2ab8ad9a9e2a7c71202b714d333454c0ab4a7d",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 27,
      "deletions": 80,
      "changes": 107,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2962,25 +2962,6 @@ cmd_record_btrace_start (const char *args, int from_tty)\n     }\n }\n \n-/* The \"set record btrace\" command.  */\n-\n-static void\n-cmd_set_record_btrace (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set record btrace\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (set_record_btrace_cmdlist, \"set record btrace \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"show record btrace\" command.  */\n-\n-static void\n-cmd_show_record_btrace (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_record_btrace_cmdlist, from_tty, \"\");\n-}\n-\n /* The \"show record btrace replay-memory-access\" command.  */\n \n static void\n@@ -3095,44 +3076,6 @@ cmd_show_record_btrace_cpu (const char *args, int from_tty)\n   error (_(\"Internal error: bad cpu state.\"));\n }\n \n-/* The \"s record btrace bts\" command.  */\n-\n-static void\n-cmd_set_record_btrace_bts (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set record btrace bts\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (set_record_btrace_bts_cmdlist, \"set record btrace bts \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"show record btrace bts\" command.  */\n-\n-static void\n-cmd_show_record_btrace_bts (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_record_btrace_bts_cmdlist, from_tty, \"\");\n-}\n-\n-/* The \"set record btrace pt\" command.  */\n-\n-static void\n-cmd_set_record_btrace_pt (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set record btrace pt\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (set_record_btrace_pt_cmdlist, \"set record btrace pt \",\n-\t     all_commands, gdb_stdout);\n-}\n-\n-/* The \"show record btrace pt\" command.  */\n-\n-static void\n-cmd_show_record_btrace_pt (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_record_btrace_pt_cmdlist, from_tty, \"\");\n-}\n-\n /* The \"record bts buffer-size\" show value function.  */\n \n static void\n@@ -3181,13 +3124,13 @@ This format may not be available on all processors.\"),\n \t   &record_btrace_cmdlist);\n   add_alias_cmd (\"pt\", \"btrace pt\", class_obscure, 1, &record_cmdlist);\n \n-  add_prefix_cmd (\"btrace\", class_support, cmd_set_record_btrace,\n-\t\t  _(\"Set record options.\"), &set_record_btrace_cmdlist,\n-\t\t  \"set record btrace \", 0, &set_record_cmdlist);\n+  add_basic_prefix_cmd (\"btrace\", class_support,\n+\t\t\t_(\"Set record options.\"), &set_record_btrace_cmdlist,\n+\t\t\t\"set record btrace \", 0, &set_record_cmdlist);\n \n-  add_prefix_cmd (\"btrace\", class_support, cmd_show_record_btrace,\n-\t\t  _(\"Show record options.\"), &show_record_btrace_cmdlist,\n-\t\t  \"show record btrace \", 0, &show_record_cmdlist);\n+  add_show_prefix_cmd (\"btrace\", class_support,\n+\t\t       _(\"Show record options.\"), &show_record_btrace_cmdlist,\n+\t\t       \"show record btrace \", 0, &show_record_cmdlist);\n \n   add_setshow_enum_cmd (\"replay-memory-access\", no_class,\n \t\t\treplay_memory_access_types, &replay_memory_access, _(\"\\\n@@ -3230,15 +3173,17 @@ Do not enable errata workarounds for trace decode.\"),\n Show the cpu to be used for trace decode.\"),\n \t   &show_record_btrace_cmdlist);\n \n-  add_prefix_cmd (\"bts\", class_support, cmd_set_record_btrace_bts,\n-\t\t  _(\"Set record btrace bts options.\"),\n-\t\t  &set_record_btrace_bts_cmdlist,\n-\t\t  \"set record btrace bts \", 0, &set_record_btrace_cmdlist);\n+  add_basic_prefix_cmd (\"bts\", class_support,\n+\t\t\t_(\"Set record btrace bts options.\"),\n+\t\t\t&set_record_btrace_bts_cmdlist,\n+\t\t\t\"set record btrace bts \", 0,\n+\t\t\t&set_record_btrace_cmdlist);\n \n-  add_prefix_cmd (\"bts\", class_support, cmd_show_record_btrace_bts,\n-\t\t  _(\"Show record btrace bts options.\"),\n-\t\t  &show_record_btrace_bts_cmdlist,\n-\t\t  \"show record btrace bts \", 0, &show_record_btrace_cmdlist);\n+  add_show_prefix_cmd (\"bts\", class_support,\n+\t\t       _(\"Show record btrace bts options.\"),\n+\t\t       &show_record_btrace_bts_cmdlist,\n+\t\t       \"show record btrace bts \", 0,\n+\t\t       &show_record_btrace_cmdlist);\n \n   add_setshow_uinteger_cmd (\"buffer-size\", no_class,\n \t\t\t    &record_btrace_conf.bts.size,\n@@ -3254,15 +3199,17 @@ The trace buffer size may not be changed while recording.\"), NULL,\n \t\t\t    &set_record_btrace_bts_cmdlist,\n \t\t\t    &show_record_btrace_bts_cmdlist);\n \n-  add_prefix_cmd (\"pt\", class_support, cmd_set_record_btrace_pt,\n-\t\t  _(\"Set record btrace pt options.\"),\n-\t\t  &set_record_btrace_pt_cmdlist,\n-\t\t  \"set record btrace pt \", 0, &set_record_btrace_cmdlist);\n-\n-  add_prefix_cmd (\"pt\", class_support, cmd_show_record_btrace_pt,\n-\t\t  _(\"Show record btrace pt options.\"),\n-\t\t  &show_record_btrace_pt_cmdlist,\n-\t\t  \"show record btrace pt \", 0, &show_record_btrace_cmdlist);\n+  add_basic_prefix_cmd (\"pt\", class_support,\n+\t\t\t_(\"Set record btrace pt options.\"),\n+\t\t\t&set_record_btrace_pt_cmdlist,\n+\t\t\t\"set record btrace pt \", 0,\n+\t\t\t&set_record_btrace_cmdlist);\n+\n+  add_show_prefix_cmd (\"pt\", class_support,\n+\t\t       _(\"Show record btrace pt options.\"),\n+\t\t       &show_record_btrace_pt_cmdlist,\n+\t\t       \"show record btrace pt \", 0,\n+\t\t       &show_record_btrace_cmdlist);\n \n   add_setshow_uinteger_cmd (\"buffer-size\", no_class,\n \t\t\t    &record_btrace_conf.pt.size,"
    },
    {
      "sha": "9d6e403e57611562a47419ffdcaa5d97d84d222e",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 6,
      "deletions": 25,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2794,25 +2794,6 @@ set_record_full_insn_max_num (const char *args, int from_tty,\n     }\n }\n \n-/* The \"set record full\" command.  */\n-\n-static void\n-set_record_full_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set record full\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (set_record_full_cmdlist, \"set record full \", all_commands,\n-\t     gdb_stdout);\n-}\n-\n-/* The \"show record full\" command.  */\n-\n-static void\n-show_record_full_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_record_full_cmdlist, from_tty, \"\");\n-}\n-\n void _initialize_record_full ();\n void\n _initialize_record_full ()\n@@ -2844,13 +2825,13 @@ Argument is filename.  File must be created with 'record save'.\"),\n   set_cmd_completer (c, filename_completer);\n   deprecate_cmd (c, \"record full restore\");\n \n-  add_prefix_cmd (\"full\", class_support, set_record_full_command,\n-\t\t  _(\"Set record options.\"), &set_record_full_cmdlist,\n-\t\t  \"set record full \", 0, &set_record_cmdlist);\n+  add_basic_prefix_cmd (\"full\", class_support,\n+\t\t\t_(\"Set record options.\"), &set_record_full_cmdlist,\n+\t\t\t\"set record full \", 0, &set_record_cmdlist);\n \n-  add_prefix_cmd (\"full\", class_support, show_record_full_command,\n-\t\t  _(\"Show record options.\"), &show_record_full_cmdlist,\n-\t\t  \"show record full \", 0, &show_record_cmdlist);\n+  add_show_prefix_cmd (\"full\", class_support,\n+\t\t       _(\"Show record options.\"), &show_record_full_cmdlist,\n+\t\t       \"show record full \", 0, &show_record_cmdlist);\n \n   /* Record instructions number limit command.  */\n   add_setshow_boolean_cmd (\"stop-at-limit\", no_class,"
    },
    {
      "sha": "759395d5bcd865e1a22654538c514e546835cb75",
      "filename": "gdb/record.c",
      "status": "modified",
      "additions": 6,
      "deletions": 23,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -314,23 +314,6 @@ cmd_record_stop (const char *args, int from_tty)\n   gdb::observers::record_changed.notify (current_inferior (), 0, NULL, NULL);\n }\n \n-/* The \"set record\" command.  */\n-\n-static void\n-set_record_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set record\\\" must be followed \"\n-\t\t       \"by an appropriate subcommand.\\n\"));\n-  help_list (set_record_cmdlist, \"set record \", all_commands, gdb_stdout);\n-}\n-\n-/* The \"show record\" command.  */\n-\n-static void\n-show_record_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (show_record_cmdlist, from_tty, \"\");\n-}\n \n /* The \"info record\" command.  */\n \n@@ -808,13 +791,13 @@ A size of \\\"unlimited\\\" means unlimited lines.  The default is 10.\"),\n   set_cmd_completer (c, filename_completer);\n \n   add_com_alias (\"rec\", \"record\", class_obscure, 1);\n-  add_prefix_cmd (\"record\", class_support, set_record_command,\n-\t\t  _(\"Set record options.\"), &set_record_cmdlist,\n-\t\t  \"set record \", 0, &setlist);\n+  add_basic_prefix_cmd (\"record\", class_support,\n+\t\t\t_(\"Set record options.\"), &set_record_cmdlist,\n+\t\t\t\"set record \", 0, &setlist);\n   add_alias_cmd (\"rec\", \"record\", class_obscure, 1, &setlist);\n-  add_prefix_cmd (\"record\", class_support, show_record_command,\n-\t\t  _(\"Show record options.\"), &show_record_cmdlist,\n-\t\t  \"show record \", 0, &showlist);\n+  add_show_prefix_cmd (\"record\", class_support,\n+\t\t       _(\"Show record options.\"), &show_record_cmdlist,\n+\t\t       \"show record \", 0, &showlist);\n   add_alias_cmd (\"rec\", \"record\", class_obscure, 1, &showlist);\n   add_prefix_cmd (\"record\", class_support, info_record_command,\n \t\t  _(\"Info record options.\"), &info_record_cmdlist,"
    },
    {
      "sha": "5db406e045c171abda255a38a654c864aeb21ca2",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 6,
      "deletions": 18,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -12700,12 +12700,6 @@ remote_delete_command (const char *args, int from_tty)\n   remote_file_delete (argv[0], from_tty);\n }\n \n-static void\n-remote_command (const char *args, int from_tty)\n-{\n-  help_list (remote_cmdlist, \"remote \", all_commands, gdb_stdout);\n-}\n-\n bool\n remote_target::can_execute_reverse ()\n {\n@@ -14224,12 +14218,6 @@ remote_target::thread_events (int enable)\n     }\n }\n \n-static void\n-set_remote_cmd (const char *args, int from_tty)\n-{\n-  help_list (remote_set_cmdlist, \"set remote \", all_commands, gdb_stdout);\n-}\n-\n static void\n show_remote_cmd (const char *args, int from_tty)\n {\n@@ -14382,12 +14370,12 @@ _initialize_remote ()\n \n   /* set/show remote ...  */\n \n-  add_prefix_cmd (\"remote\", class_maintenance, set_remote_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"remote\", class_maintenance, _(\"\\\n Remote protocol specific variables.\\n\\\n Configure various remote-protocol specific variables such as\\n\\\n the packets being used.\"),\n-\t\t  &remote_set_cmdlist, \"set remote \",\n-\t\t  0 /* allow-unknown */, &setlist);\n+\t\t\t&remote_set_cmdlist, \"set remote \",\n+\t\t\t0 /* allow-unknown */, &setlist);\n   add_prefix_cmd (\"remote\", class_maintenance, show_remote_cmd, _(\"\\\n Remote protocol specific variables.\\n\\\n Configure various remote-protocol specific variables such as\\n\\\n@@ -14808,11 +14796,11 @@ packets.\"),\n \t\t\t\t   `Z' packets is %s.  */\n \t\t\t\t&remote_set_cmdlist, &remote_show_cmdlist);\n \n-  add_prefix_cmd (\"remote\", class_files, remote_command, _(\"\\\n+  add_basic_prefix_cmd (\"remote\", class_files, _(\"\\\n Manipulate files on the remote system.\\n\\\n Transfer files to and from the remote target system.\"),\n-\t\t  &remote_cmdlist, \"remote \",\n-\t\t  0 /* allow-unknown */, &cmdlist);\n+\t\t\t&remote_cmdlist, \"remote \",\n+\t\t\t0 /* allow-unknown */, &cmdlist);\n \n   add_cmd (\"put\", class_files, remote_put_command,\n \t   _(\"Copy a local file to the remote system.\"),"
    },
    {
      "sha": "1bb824eef54716c4c5ea8ebe8d8a1133d6f3d5b4",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 14,
      "deletions": 50,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -284,47 +284,11 @@ show_use_compressed_breakpoints (struct ui_file *file, int from_tty,\n static struct cmd_list_element *setriscvcmdlist = NULL;\n static struct cmd_list_element *showriscvcmdlist = NULL;\n \n-/* The show callback for the 'show riscv' prefix command.  */\n-\n-static void\n-show_riscv_command (const char *args, int from_tty)\n-{\n-  help_list (showriscvcmdlist, \"show riscv \", all_commands, gdb_stdout);\n-}\n-\n-/* The set callback for the 'set riscv' prefix command.  */\n-\n-static void\n-set_riscv_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered\n-    (_(\"\\\"set riscv\\\" must be followed by an appropriate subcommand.\\n\"));\n-  help_list (setriscvcmdlist, \"set riscv \", all_commands, gdb_stdout);\n-}\n-\n /* The set and show lists for 'set riscv' and 'show riscv' prefixes.  */\n \n static struct cmd_list_element *setdebugriscvcmdlist = NULL;\n static struct cmd_list_element *showdebugriscvcmdlist = NULL;\n \n-/* The show callback for the 'show debug riscv' prefix command.  */\n-\n-static void\n-show_debug_riscv_command (const char *args, int from_tty)\n-{\n-  help_list (showdebugriscvcmdlist, \"show debug riscv \", all_commands, gdb_stdout);\n-}\n-\n-/* The set callback for the 'set debug riscv' prefix command.  */\n-\n-static void\n-set_debug_riscv_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered\n-    (_(\"\\\"set debug riscv\\\" must be followed by an appropriate subcommand.\\n\"));\n-  help_list (setdebugriscvcmdlist, \"set debug riscv \", all_commands, gdb_stdout);\n-}\n-\n /* The show callback for all 'show debug riscv VARNAME' variables.  */\n \n static void\n@@ -3527,15 +3491,15 @@ _initialize_riscv_tdep ()\n \n   /* Add root prefix command for all \"set debug riscv\" and \"show debug\n      riscv\" commands.  */\n-  add_prefix_cmd (\"riscv\", no_class, set_debug_riscv_command,\n-\t\t  _(\"RISC-V specific debug commands.\"),\n-\t\t  &setdebugriscvcmdlist, \"set debug riscv \", 0,\n-\t\t  &setdebuglist);\n+  add_basic_prefix_cmd (\"riscv\", no_class,\n+\t\t\t_(\"RISC-V specific debug commands.\"),\n+\t\t\t&setdebugriscvcmdlist, \"set debug riscv \", 0,\n+\t\t\t&setdebuglist);\n \n-  add_prefix_cmd (\"riscv\", no_class, show_debug_riscv_command,\n-\t\t  _(\"RISC-V specific debug commands.\"),\n-\t\t  &showdebugriscvcmdlist, \"show debug riscv \", 0,\n-\t\t  &showdebuglist);\n+  add_show_prefix_cmd (\"riscv\", no_class,\n+\t\t       _(\"RISC-V specific debug commands.\"),\n+\t\t       &showdebugriscvcmdlist, \"show debug riscv \", 0,\n+\t\t       &showdebuglist);\n \n   add_setshow_zuinteger_cmd (\"breakpoints\", class_maintenance,\n \t\t\t     &riscv_debug_breakpoints,  _(\"\\\n@@ -3578,13 +3542,13 @@ initialisation process.\"),\n \t\t\t     &setdebugriscvcmdlist, &showdebugriscvcmdlist);\n \n   /* Add root prefix command for all \"set riscv\" and \"show riscv\" commands.  */\n-  add_prefix_cmd (\"riscv\", no_class, set_riscv_command,\n-\t\t  _(\"RISC-V specific commands.\"),\n-\t\t  &setriscvcmdlist, \"set riscv \", 0, &setlist);\n+  add_basic_prefix_cmd (\"riscv\", no_class,\n+\t\t\t_(\"RISC-V specific commands.\"),\n+\t\t\t&setriscvcmdlist, \"set riscv \", 0, &setlist);\n \n-  add_prefix_cmd (\"riscv\", no_class, show_riscv_command,\n-\t\t  _(\"RISC-V specific commands.\"),\n-\t\t  &showriscvcmdlist, \"show riscv \", 0, &showlist);\n+  add_show_prefix_cmd (\"riscv\", no_class,\n+\t\t       _(\"RISC-V specific commands.\"),\n+\t\t       &showriscvcmdlist, \"show riscv \", 0, &showlist);\n \n \n   use_compressed_breakpoints = AUTO_BOOLEAN_AUTO;"
    },
    {
      "sha": "1e1fbc7022b4bf2b99609101ff80ce202baf4f59",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 22,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -7172,22 +7172,6 @@ rs6000_dump_tdep (struct gdbarch *gdbarch, struct ui_file *file)\n   /* FIXME: Dump gdbarch_tdep.  */\n }\n \n-/* PowerPC-specific commands.  */\n-\n-static void\n-set_powerpc_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\n-\\\"set powerpc\\\" must be followed by an appropriate subcommand.\\n\"));\n-  help_list (setpowerpccmdlist, \"set powerpc \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_powerpc_command (const char *args, int from_tty)\n-{\n-  cmd_show_list (showpowerpccmdlist, from_tty, \"\");\n-}\n-\n static void\n powerpc_set_soft_float (const char *args, int from_tty,\n \t\t\tstruct cmd_list_element *c)\n@@ -7338,13 +7322,13 @@ _initialize_rs6000_tdep ()\n \n   /* Add root prefix command for all \"set powerpc\"/\"show powerpc\"\n      commands.  */\n-  add_prefix_cmd (\"powerpc\", no_class, set_powerpc_command,\n-\t\t  _(\"Various PowerPC-specific commands.\"),\n-\t\t  &setpowerpccmdlist, \"set powerpc \", 0, &setlist);\n+  add_basic_prefix_cmd (\"powerpc\", no_class,\n+\t\t\t_(\"Various PowerPC-specific commands.\"),\n+\t\t\t&setpowerpccmdlist, \"set powerpc \", 0, &setlist);\n \n-  add_prefix_cmd (\"powerpc\", no_class, show_powerpc_command,\n-\t\t  _(\"Various PowerPC-specific commands.\"),\n-\t\t  &showpowerpccmdlist, \"show powerpc \", 0, &showlist);\n+  add_show_prefix_cmd (\"powerpc\", no_class,\n+\t\t       _(\"Various PowerPC-specific commands.\"),\n+\t\t       &showpowerpccmdlist, \"show powerpc \", 0, &showlist);\n \n   /* Add a command to allow the user to force the ABI.  */\n   add_setshow_auto_boolean_cmd (\"soft-float\", class_support,"
    },
    {
      "sha": "7dd903dfaad6bd9ecf06a20e31f021f32e3aff8c",
      "filename": "gdb/ser-tcp.c",
      "status": "modified",
      "additions": 6,
      "deletions": 20,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/ser-tcp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/ser-tcp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ser-tcp.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -424,20 +424,6 @@ ser_tcp_send_break (struct serial *scb)\n   return (serial_write (scb, \"\\377\\363\", 2));\n }\n \n-/* Support for \"set tcp\" and \"show tcp\" commands.  */\n-\n-static void\n-set_tcp_cmd (const char *args, int from_tty)\n-{\n-  help_list (tcp_set_cmdlist, \"set tcp \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_tcp_cmd (const char *args, int from_tty)\n-{\n-  help_list (tcp_show_cmdlist, \"show tcp \", all_commands, gdb_stdout);\n-}\n-\n #ifndef USE_WIN32API\n \n /* The TCP ops.  */\n@@ -480,16 +466,16 @@ _initialize_ser_tcp ()\n   serial_add_interface (&tcp_ops);\n #endif /* USE_WIN32API */\n \n-  add_prefix_cmd (\"tcp\", class_maintenance, set_tcp_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"tcp\", class_maintenance, _(\"\\\n TCP protocol specific variables.\\n\\\n Configure variables specific to remote TCP connections.\"),\n-\t\t  &tcp_set_cmdlist, \"set tcp \",\n-\t\t  0 /* allow-unknown */, &setlist);\n-  add_prefix_cmd (\"tcp\", class_maintenance, show_tcp_cmd, _(\"\\\n+\t\t\t&tcp_set_cmdlist, \"set tcp \",\n+\t\t\t0 /* allow-unknown */, &setlist);\n+  add_show_prefix_cmd (\"tcp\", class_maintenance, _(\"\\\n TCP protocol specific variables.\\n\\\n Configure variables specific to remote TCP connections.\"),\n-\t\t  &tcp_show_cmdlist, \"show tcp \",\n-\t\t  0 /* allow-unknown */, &showlist);\n+\t\t       &tcp_show_cmdlist, \"show tcp \",\n+\t\t       0 /* allow-unknown */, &showlist);\n \n   add_setshow_boolean_cmd (\"auto-retry\", class_obscure,\n \t\t\t   &tcp_auto_retry, _(\"\\"
    },
    {
      "sha": "e253c0ec44af0cc28e79ecee963f896b21ec223d",
      "filename": "gdb/serial.c",
      "status": "modified",
      "additions": 8,
      "deletions": 22,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/serial.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/serial.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/serial.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -623,20 +623,6 @@ serial_pipe (struct serial *scbs[2])\n static struct cmd_list_element *serial_set_cmdlist;\n static struct cmd_list_element *serial_show_cmdlist;\n \n-static void\n-serial_set_cmd (const char *args, int from_tty)\n-{\n-  printf_unfiltered (\"\\\"set serial\\\" must be followed \"\n-\t\t     \"by the name of a command.\\n\");\n-  help_list (serial_set_cmdlist, \"set serial \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-serial_show_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (serial_show_cmdlist, from_tty, \"\");\n-}\n-\n /* Baud rate specified for talking to serial target systems.  Default\n    is left as -1, so targets can choose their own defaults.  */\n /* FIXME: This means that \"show serial baud\" and gr_files_info can\n@@ -686,17 +672,17 @@ Connect the terminal directly up to the command monitor.\\n\\\n Use <CR>~. or <CR>~^D to break out.\"));\n #endif /* 0 */\n \n-  add_prefix_cmd (\"serial\", class_maintenance, serial_set_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"serial\", class_maintenance, _(\"\\\n Set default serial/parallel port configuration.\"),\n-\t\t  &serial_set_cmdlist, \"set serial \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &setlist);\n+\t\t\t&serial_set_cmdlist, \"set serial \",\n+\t\t\t0/*allow-unknown*/,\n+\t\t\t&setlist);\n \n-  add_prefix_cmd (\"serial\", class_maintenance, serial_show_cmd, _(\"\\\n+  add_show_prefix_cmd (\"serial\", class_maintenance, _(\"\\\n Show default serial/parallel port configuration.\"),\n-\t\t  &serial_show_cmdlist, \"show serial \",\n-\t\t  0/*allow-unknown*/,\n-\t\t  &showlist);\n+\t\t       &serial_show_cmdlist, \"show serial \",\n+\t\t       0/*allow-unknown*/,\n+\t\t       &showlist);\n \n   /* If target is open when baud changes, it doesn't take effect until\n      the next open (I think, not sure).  */"
    },
    {
      "sha": "5b322ea2d5af3a6364c625e80a6645ef9da7b4b8",
      "filename": "gdb/sh-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 18,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/sh-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/sh-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sh-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2408,30 +2408,16 @@ sh_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   return gdbarch;\n }\n \n-static void\n-show_sh_command (const char *args, int from_tty)\n-{\n-  help_list (showshcmdlist, \"show sh \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-set_sh_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered\n-    (\"\\\"set sh\\\" must be followed by an appropriate subcommand.\\n\");\n-  help_list (setshcmdlist, \"set sh \", all_commands, gdb_stdout);\n-}\n-\n void _initialize_sh_tdep ();\n void\n _initialize_sh_tdep ()\n {\n   gdbarch_register (bfd_arch_sh, sh_gdbarch_init, NULL);\n \n-  add_prefix_cmd (\"sh\", no_class, set_sh_command, \"SH specific commands.\",\n-                  &setshcmdlist, \"set sh \", 0, &setlist);\n-  add_prefix_cmd (\"sh\", no_class, show_sh_command, \"SH specific commands.\",\n-                  &showshcmdlist, \"show sh \", 0, &showlist);\n+  add_basic_prefix_cmd (\"sh\", no_class, \"SH specific commands.\",\n+\t\t\t&setshcmdlist, \"set sh \", 0, &setlist);\n+  add_show_prefix_cmd (\"sh\", no_class, \"SH specific commands.\",\n+\t\t       &showshcmdlist, \"show sh \", 0, &showlist);\n   \n   add_setshow_enum_cmd (\"calling-convention\", class_vars, sh_cc_enum,\n \t\t\t&sh_active_calling_convention,"
    },
    {
      "sha": "593db3640031a8659870dd034a6622a036e45a3b",
      "filename": "gdb/sparc64-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/sparc64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/sparc64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc64-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -186,14 +186,6 @@ sparc64_forget_process (pid_t pid)\n \n }\n \n-static void\n-info_adi_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (\"\\\"adi\\\" must be followed by \\\"examine\\\" \"\n-                     \"or \\\"assign\\\".\\n\");\n-  help_list (sparc64adilist, \"adi \", all_commands, gdb_stdout);\n-}\n-\n /* Read attributes of a maps entry in /proc/[pid]/adi/maps.  */\n \n static void\n@@ -538,10 +530,9 @@ void _initialize_sparc64_adi_tdep ();\n void\n _initialize_sparc64_adi_tdep ()\n {\n-\n-  add_prefix_cmd (\"adi\", class_support, info_adi_command,\n-                  _(\"ADI version related commands.\"),\n-                  &sparc64adilist, \"adi \", 0, &cmdlist);\n+  add_basic_prefix_cmd (\"adi\", class_support,\n+\t\t\t_(\"ADI version related commands.\"),\n+\t\t\t&sparc64adilist, \"adi \", 0, &cmdlist);\n   add_cmd (\"examine\", class_support, adi_examine_command,\n            _(\"Examine ADI versions.\"), &sparc64adilist);\n   add_alias_cmd (\"x\", \"examine\", no_class, 1, &sparc64adilist);"
    },
    {
      "sha": "407534445253b3467a6141855e5e44adc2a20372",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 14,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -3349,20 +3349,9 @@ overlay_load_command (const char *args, int from_tty)\n     error (_(\"This target does not know how to read its overlay state.\"));\n }\n \n-/* Function: overlay_command\n-   A place-holder for a mis-typed command.  */\n-\n /* Command list chain containing all defined \"overlay\" subcommands.  */\n static struct cmd_list_element *overlaylist;\n \n-static void\n-overlay_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered\n-    (\"\\\"overlay\\\" must be followed by the name of an overlay command.\\n\");\n-  help_list (overlaylist, \"overlay \", all_commands, gdb_stdout);\n-}\n-\n /* Target Overlays for the \"Simplest\" overlay manager:\n \n    This is GDB's default target overlay layer.  It works with the\n@@ -3913,9 +3902,9 @@ When OFFSET is provided, FILE must also be provided.  FILE can be provided\\n\\\n on its own.\"), &cmdlist);\n   set_cmd_completer (c, filename_completer);\n \n-  add_prefix_cmd (\"overlay\", class_support, overlay_command,\n-\t\t  _(\"Commands for debugging overlays.\"), &overlaylist,\n-\t\t  \"overlay \", 0, &cmdlist);\n+  add_basic_prefix_cmd (\"overlay\", class_support,\n+\t\t\t_(\"Commands for debugging overlays.\"), &overlaylist,\n+\t\t\t\"overlay \", 0, &cmdlist);\n \n   add_com_alias (\"ovly\", \"overlay\", class_alias, 1);\n   add_com_alias (\"ov\", \"overlay\", class_alias, 1);"
    },
    {
      "sha": "6354a8b0d20be06b711d247af064e01910d9d2bd",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 12,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -6479,15 +6479,6 @@ get_msymbol_address (struct objfile *objf, const struct minimal_symbol *minsym)\n \n static struct cmd_list_element *info_module_cmdlist = NULL;\n \n-/* Implement the 'info module' command, just displays some help text for\n-   the available sub-commands.  */\n-\n-static void\n-info_module_command (const char *args, int from_tty)\n-{\n-  help_list (info_module_cmdlist, \"info module \", class_info, gdb_stdout);\n-}\n-\n /* See symtab.h.  */\n \n std::vector<module_symbol_search>\n@@ -6846,10 +6837,10 @@ Options:\\n\\\n \t\t_(\"All module names, or those matching REGEXP.\"));\n   set_cmd_completer_handle_brkchars (c, info_types_command_completer);\n \n-  add_prefix_cmd (\"module\", class_info, info_module_command, _(\"\\\n+  add_basic_prefix_cmd (\"module\", class_info, _(\"\\\n Print information about modules.\"),\n-\t\t  &info_module_cmdlist, \"info module \",\n-\t\t  0, &infolist);\n+\t\t\t&info_module_cmdlist, \"info module \",\n+\t\t\t0, &infolist);\n \n   c = add_cmd (\"functions\", class_info, info_module_functions_command, _(\"\\\n Display functions arranged by modules.\\n\\"
    },
    {
      "sha": "2ec07a3e3bd62b0db01909cc00565067dffefef0",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 9,
      "deletions": 27,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1217,24 +1217,6 @@ static struct cmd_list_element *tdesc_unset_cmdlist;\n \n /* Helper functions for the CLI commands.  */\n \n-static void\n-set_tdesc_cmd (const char *args, int from_tty)\n-{\n-  help_list (tdesc_set_cmdlist, \"set tdesc \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_tdesc_cmd (const char *args, int from_tty)\n-{\n-  cmd_show_list (tdesc_show_cmdlist, from_tty, \"\");\n-}\n-\n-static void\n-unset_tdesc_cmd (const char *args, int from_tty)\n-{\n-  help_list (tdesc_unset_cmdlist, \"unset tdesc \", all_commands, gdb_stdout);\n-}\n-\n static void\n set_tdesc_filename_cmd (const char *args, int from_tty,\n \t\t\tstruct cmd_list_element *c)\n@@ -1831,18 +1813,18 @@ _initialize_target_descriptions ()\n {\n   tdesc_data = gdbarch_data_register_pre_init (tdesc_data_init);\n \n-  add_prefix_cmd (\"tdesc\", class_maintenance, set_tdesc_cmd, _(\"\\\n+  add_basic_prefix_cmd (\"tdesc\", class_maintenance, _(\"\\\n Set target description specific variables.\"),\n-\t\t  &tdesc_set_cmdlist, \"set tdesc \",\n-\t\t  0 /* allow-unknown */, &setlist);\n-  add_prefix_cmd (\"tdesc\", class_maintenance, show_tdesc_cmd, _(\"\\\n+\t\t\t&tdesc_set_cmdlist, \"set tdesc \",\n+\t\t\t0 /* allow-unknown */, &setlist);\n+  add_show_prefix_cmd (\"tdesc\", class_maintenance, _(\"\\\n Show target description specific variables.\"),\n-\t\t  &tdesc_show_cmdlist, \"show tdesc \",\n-\t\t  0 /* allow-unknown */, &showlist);\n-  add_prefix_cmd (\"tdesc\", class_maintenance, unset_tdesc_cmd, _(\"\\\n+\t\t       &tdesc_show_cmdlist, \"show tdesc \",\n+\t\t       0 /* allow-unknown */, &showlist);\n+  add_basic_prefix_cmd (\"tdesc\", class_maintenance, _(\"\\\n Unset target description specific variables.\"),\n-\t\t  &tdesc_unset_cmdlist, \"unset tdesc \",\n-\t\t  0 /* allow-unknown */, &unsetlist);\n+\t\t\t&tdesc_unset_cmdlist, \"unset tdesc \",\n+\t\t\t0 /* allow-unknown */, &unsetlist);\n \n   add_setshow_filename_cmd (\"filename\", class_obscure,\n \t\t\t    &tdesc_filename_cmd_string,"
    },
    {
      "sha": "f26bb4c4d0d0f37f06760d1a152fcbe93d016fe2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.cp/maint.exp (test_help): Simplify multiple_help_body.\n+\tUpdate tests.\n+\t* gdb.btrace/cpu.exp: Update tests.\n+\t* gdb.base/maint.exp: Update tests.\n+\t* gdb.base/default.exp: Update tests.\n+\t* gdb.base/completion.exp: Update tests.\n+\n 2020-04-16  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/25791"
    },
    {
      "sha": "ac7f61ddfbca131d0ee601cc266014de1e6e1a7e",
      "filename": "gdb/testsuite/gdb.base/completion.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/completion.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/completion.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/completion.exp?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -310,7 +310,7 @@ gdb_test_multiple \"\" \"$test\" {\n     -re \"^info $\" {\n \tsend_gdb \"\\n\"\n \tgdb_test_multiple \"\" \"$test\" {\n-\t    -re \"\\\"info\\\" must be followed by the name of an info command\\\\.\\r\\nList of info subcommands.*$gdb_prompt $\" {\n+\t    -re \"List of info subcommands.*$gdb_prompt $\" {\n \t\tpass \"$test\"\n \t    }\n \t}\n@@ -323,7 +323,7 @@ gdb_test_multiple \"\" \"$test\" {\n     -re \"^info \\\\\\x07$\" {\n \tsend_gdb \"\\n\"\n \tgdb_test_multiple \"\" \"$test\" {\n-\t    -re \"\\\"info\\\" must be followed by the name of an info command\\\\.\\r\\nList of info subcommands:\\r\\n\\r\\n.*$gdb_prompt $\" {\n+\t    -re \"List of info subcommands:\\r\\n\\r\\n.*$gdb_prompt $\" {\n \t\tpass \"$test\"\n \t    }\n \t}\n@@ -339,7 +339,7 @@ gdb_test_multiple \"\" \"$test\" {\n \t    -re \"address.*types.*$gdb_prompt \" {\n \t\tsend_gdb \"\\n\"\n \t\tgdb_test_multiple \"\" \"$test\" {\n-\t\t    -re \"\\\"info\\\".*unambiguous\\\\..*$gdb_prompt $\" {\n+\t\t    -re \"allowed if unambiguous\\\\..*$gdb_prompt $\" {\n \t\t\tpass \"$test\"\n \t\t    }\n \t\t}"
    },
    {
      "sha": "846c91af6bc5cc56436349b055f2a9fe427a5d5f",
      "filename": "gdb/testsuite/gdb.base/default.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/default.exp?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -28,8 +28,8 @@ set timeout 60\n gdb_test \"add-symbol-file\" \"add-symbol-file takes a file name and an address\"\n \n # test append\n-gdb_test \"append\" \"\\\"append\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of append subcommands:.*\" \n-gdb_test \"append binary\" \"\\\"append binary\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of append binary subcommands:.*\" \n+gdb_test \"append\" \"List of append subcommands:.*\" \n+gdb_test \"append binary\" \"List of append binary subcommands:.*\" \n gdb_test \"append memory\" \"Missing filename\\.\" \n gdb_test \"append value\"  \"Missing filename\\.\" \n gdb_test \"append binary memory\" \"Missing filename\\.\" \n@@ -147,12 +147,12 @@ gdb_test \"down\" \"No stack.*\"\n #test down-silently\n gdb_test \"down-silently\" \"No stack.\"\n # test dump\n-gdb_test \"dump\" \"\\\"dump\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump subcommands:.*\" \n-gdb_test \"dump binary\" \"\\\"dump binary\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump binary subcommands:.*\" \n-gdb_test \"dump ihex\" \"\\\"dump ihex\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump ihex subcommands:.*\" \n+gdb_test \"dump\" \"List of dump subcommands:.*\" \n+gdb_test \"dump binary\" \"List of dump binary subcommands:.*\" \n+gdb_test \"dump ihex\" \"List of dump ihex subcommands:.*\" \n gdb_test \"dump memory\" \"Missing filename\\.\" \n-gdb_test \"dump srec\" \"\\\"dump srec\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump srec subcommands:.*\" \n-gdb_test \"dump tekhex\" \"\\\"dump tekhex\\\" must be followed by a subcommand\\.\\[\\r\\n\\]+List of dump tekhex subcommands:.*\" \n+gdb_test \"dump srec\" \"List of dump srec subcommands:.*\" \n+gdb_test \"dump tekhex\" \"List of dump tekhex subcommands:.*\" \n gdb_test \"dump value\" \"Missing filename\\.\" \n gdb_test \"dump binary memory\" \"Missing filename\\.\" \n gdb_test \"dump binary value\"  \"Missing filename\\.\" \n@@ -253,9 +253,9 @@ gdb_test \"help\" \"List of classes of commands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+aliases -- Ali\n #test handle\n gdb_test \"handle\" \"Argument required .signal to handle.*\"\n #test info \"i\" abbreviation \n-gdb_test \"i\" \"\\\"info\\\" must be followed by the name of an info command.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"info \\\"i\\\" abbreviation\"\n+gdb_test \"i\" \"List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"info \\\"i\\\" abbreviation\"\n #test info\n-gdb_test \"info\" \"\\\"info\\\" must be followed by the name of an info command.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n+gdb_test \"info\" \"List of info subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help info\\\" followed by info subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test ignore\n gdb_test \"ignore\" \"Argument required .a breakpoint number.*\"\n #test info address\n@@ -378,7 +378,7 @@ gdb_test \"nexti\" \"The program is not being run.\"\n gdb_test \"output\" \"Argument required .expression to compute.*\"\n \n #test overlay\n-gdb_test \"overlay\" \"\\\"overlay\\\" must be followed by the name of .*\"\n+gdb_test \"overlay\" \"List of overlay subcommands:.*\"\n #test a non-existant overlay subcommand\n gdb_test \"overlay on\"     \"Undefined overlay command.* Try \\\"help overlay\\\".\"\n gdb_test_no_output \"overlay manual\" \"overlay manual #1\"\n@@ -475,7 +475,7 @@ gdb_test_no_output \"set args\" \"set args\"\n \n # Test set check abbreviations\n foreach x {\"c\" \"ch\" \"check\"} {\n-    gdb_test \"set $x\" \"\\\"set check\\\" must be followed by the name of a check subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set check subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set check range -- Set range checking(\\[^\\r\\n\\]*\\[\\r\\n\\])+set check type -- Set strict type checking(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set check\\\" followed by set check subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \\\n+    gdb_test \"set $x\" \"List of set check subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set check range -- Set range checking(\\[^\\r\\n\\]*\\[\\r\\n\\])+set check type -- Set strict type checking(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set check\\\" followed by set check subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \\\n \t\"set check \\\"$x\\\" abbreviation\"\n }\n \n@@ -505,17 +505,17 @@ gdb_test_no_output \"set history save\" \"set history save\"\n #test set history size\n gdb_test \"set history size\" \"Argument required .integer to set it to.*\"\n #test set history\n-gdb_test \"set history\" \"\\\"set history\\\" must be followed by the name of a history subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set history subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history expansion -- Set history expansion on command input(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history filename -- Set the filename in which to record the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history save -- Set saving of the history record on exit(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history size -- Set the size of the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set history\\\" followed by set history subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n+gdb_test \"set history\" \"List of set history subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history expansion -- Set history expansion on command input(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history filename -- Set the filename in which to record the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history save -- Set saving of the history record on exit(\\[^\\r\\n\\]*\\[\\r\\n\\])+set history size -- Set the size of the command history(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set history\\\" followed by set history subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test set language\n gdb_test \"set language\" \"Requires an argument. Valid arguments are auto, local, unknown, ada, asm, c, c.., d, fortran, go, minimal, modula-2, objective-c, opencl, pascal, rust.\"\n #test set listsize\n gdb_test \"set listsize\" \"Argument required .integer to set it to.*\"\n #test set print \"p\" abbreviation\n-gdb_test \"set p\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"p\\\" abbreviation\"\n+gdb_test \"set p\" \"List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"p\\\" abbreviation\"\n #test set print \"pr\" abbreviation\n-gdb_test \"set pr\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"pr\\\" abbreviation\"\n+gdb_test \"set pr\" \"List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\" \"set print \\\"pr\\\" abbreviation\"\n #test set print\n-gdb_test \"set print\" \"\\\"set print\\\" must be followed by the name of a print subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n+gdb_test \"set print\" \"List of set print subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help set print\\\" followed by set print subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test set print address\n gdb_test_no_output \"set print address\" \"set print address\"\n #test set print array\n@@ -827,7 +827,7 @@ gdb_test \"unset environment\" \\\n     \"y\"\n \n #test unset\n-gdb_test \"unset\" \"\\\"unset\\\" must be followed by the name of an unset subcommand.(\\[^\\r\\n\\]*\\[\\r\\n\\])+List of unset subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+unset environment -- Cancel environment variable VAR for the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help unset\\\" followed by unset subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n+gdb_test \"unset\" \"List of unset subcommands:(\\[^\\r\\n\\]*\\[\\r\\n\\])+unset environment -- Cancel environment variable VAR for the program(\\[^\\r\\n\\]*\\[\\r\\n\\])+Type \\\"help unset\\\" followed by unset subcommand name for full documentation.(\\[^\\r\\n\\]*\\[\\r\\n\\])+Command name abbreviations are allowed if unambiguous.\"\n #test up\n #test up-silently\n gdb_test \"up-silently\" \"No stack.\""
    },
    {
      "sha": "00fe8c296cdaadf894f8a2c346e453cab6344b6c",
      "filename": "gdb/testsuite/gdb.base/maint.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.base/maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint.exp?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -487,15 +487,15 @@ gdb_test_multiple \"maint info breakpoints\" \"maint info breakpoints\" {\n }\n \n gdb_test \"maint print\" \\\n-    \"\\\"maintenance print\\\" must be followed by the name of a print command\\\\.\\r\\nList.*unambiguous\\\\..*\" \\\n+    \"List.*unambiguous\\\\..*\" \\\n     \"maint print w/o args\" \n \n gdb_test \"maint info\" \\\n-    \"\\\"maintenance info\\\" must be followed by the name of an info command\\\\.\\r\\nList.*unambiguous\\\\..*\" \\\n+    \"List.*unambiguous\\\\..*\" \\\n     \"maint info w/o args\"\n \n gdb_test \"maint\" \\\n-    \"\\\"maintenance\\\" must be followed by the name of a maintenance command\\\\.\\r\\nList.*unambiguous\\\\..*\" \\\n+    \"List.*unambiguous\\\\..*\" \\\n     \"maint w/o args\"\n \n # Test that \"main info line-table\" w/o a file name shows the symtab for"
    },
    {
      "sha": "a3f7317915bf2261f5aeae1b707f016647e342fd",
      "filename": "gdb/testsuite/gdb.btrace/cpu.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.btrace/cpu.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.btrace/cpu.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/cpu.exp?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -42,9 +42,9 @@ proc test_junk { arg junk current } {\n gdb_test \"show record btrace cpu\" \"btrace cpu is 'auto'\\.\" \"default cpu\"\n \n gdb_test \"set record\" \\\n-    \"\\\"set record\\\" must be followed by an appropriate subcommand.*\"\n+    \"List of set record subcommands.*\"\n gdb_test \"set record btrace\" \\\n-    \"\\\"set record btrace\\\" must be followed by an appropriate subcommand.*\"\n+    \"List of set record btrace subcommands.*\"\n test_bad \"\" \"auto\"\n \n test_good \"intel: 0/0\""
    },
    {
      "sha": "5d0eabe42dcf18d75f10ac5056b38117449e5795",
      "filename": "gdb/testsuite/gdb.cp/maint.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.cp/maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/testsuite/gdb.cp/maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/maint.exp?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -32,9 +32,9 @@ proc test_help {} {\n         \"C\\\\+\\\\+ maintenance commands.\\r\\n\\r\\n\"\n     }\n \n-    set multiple_help_body \"List of maintenance cplus subcommands:\\r\\n\\r\\nmaintenance cplus first_component -- ${first_component_help}\\r\\nmaintenance cplus namespace -- ${namespace_help}\\r\\n\\r\\nType \\\"help maintenance cplus\\\" followed by maintenance cplus subcommand name for full documentation.\\r\\nCommand name abbreviations are allowed if unambiguous.\"\n+    set multiple_help_body \"List of maintenance cplus subcommands:.*Command name abbreviations are allowed if unambiguous.\"\n \n-    gdb_test \"maint cp\" \"\\\"maintenance cplus\\\" must be followed by the name of a command.\\r\\n.*\"\n+    gdb_test \"maint cp\" $multiple_help_body\n \n     gdb_test \"help maint cp first_component\" \"${first_component_help}.\"\n     gdb_test \"help maint cp namespace\" \"${namespace_help}.\""
    },
    {
      "sha": "9fb9d5cb5c7eeb3b9378b92291b34eef07230c88",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -1949,20 +1949,6 @@ set_history_size_command (const char *args,\n   set_readline_history_size (history_size_setshow_var);\n }\n \n-void\n-set_history (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"set history\\\" must be followed \"\n-\t\t       \"by the name of a history subcommand.\\n\"));\n-  help_list (sethistlist, \"set history \", all_commands, gdb_stdout);\n-}\n-\n-void\n-show_history (const char *args, int from_tty)\n-{\n-  cmd_show_list (showhistlist, from_tty, \"\");\n-}\n-\n bool info_verbose = false;\t/* Default verbose msgs off.  */\n \n /* Called by do_set_command.  An elaborate joke.  */"
    },
    {
      "sha": "0cbb244c5515c9bd4d2b09e8bf91c65f0a377a55",
      "filename": "gdb/top.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/top.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/top.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.h?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -288,10 +288,6 @@ extern void gdb_add_history (const char *);\n \n extern void show_commands (const char *args, int from_tty);\n \n-extern void set_history (const char *, int);\n-\n-extern void show_history (const char *, int);\n-\n extern void set_verbose (const char *, int, struct cmd_list_element *);\n \n extern char *handle_line_of_input (struct buffer *cmd_line_buffer,"
    },
    {
      "sha": "491ce275acbed2756e8fbeac341f607d42cef85e",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 2,
      "deletions": 11,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -45,7 +45,6 @@\n #include \"tui/tui-source.h\"\n #include \"gdb_curses.h\"\n \n-static void tui_layout_command (const char *, int);\n static void extract_display_start_addr (struct gdbarch **, CORE_ADDR *);\n \n /* The layouts.  */\n@@ -1023,25 +1022,17 @@ tui_new_layout_command (const char *spec, int from_tty)\n   new_layout.release ();\n }\n \n-/* Base command for \"layout\".  */\n-\n-static void\n-tui_layout_command (const char *layout_name, int from_tty)\n-{\n-  help_list (layout_list, \"layout \", all_commands, gdb_stdout);\n-}\n-\n /* Function to initialize gdb commands, for tui window layout\n    manipulation.  */\n \n void _initialize_tui_layout ();\n void\n _initialize_tui_layout ()\n {\n-  add_prefix_cmd (\"layout\", class_tui, tui_layout_command, _(\"\\\n+  add_basic_prefix_cmd (\"layout\", class_tui, _(\"\\\n Change the layout of windows.\\n\\\n Usage: layout prev | next | LAYOUT-NAME\"),\n-\t\t  &layout_list, \"layout \", 0, &cmdlist);\n+\t\t\t&layout_list, \"layout \", 0, &cmdlist);\n \n   add_cmd (\"next\", class_tui, tui_next_layout_command,\n \t   _(\"Apply the next TUI layout.\"),"
    },
    {
      "sha": "6546793d6bd87ab0585df2f1d23946163f459902",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -310,21 +310,13 @@ show_tui_cmd (const char *args, int from_tty)\n \n static struct cmd_list_element *tuilist;\n \n-static void\n-tui_command (const char *args, int from_tty)\n-{\n-  printf_unfiltered (_(\"\\\"tui\\\" must be followed by the name of a \"\n-                     \"tui command.\\n\"));\n-  help_list (tuilist, \"tui \", all_commands, gdb_stdout);\n-}\n-\n struct cmd_list_element **\n tui_get_cmd_list (void)\n {\n   if (tuilist == 0)\n-    add_prefix_cmd (\"tui\", class_tui, tui_command,\n-                    _(\"Text User Interface commands.\"),\n-                    &tuilist, \"tui \", 0, &cmdlist);\n+    add_basic_prefix_cmd (\"tui\", class_tui,\n+\t\t\t  _(\"Text User Interface commands.\"),\n+\t\t\t  &tuilist, \"tui \", 0, &cmdlist);\n   return &tuilist;\n }\n "
    },
    {
      "sha": "87da8e3e932ad297bfad9cf632802ea5d8d37b6b",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 8,
      "deletions": 20,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -715,20 +715,6 @@ struct cmd_list_element *setprinttypelist;\n \n struct cmd_list_element *showprinttypelist;\n \n-static void\n-set_print_type (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (\n-     \"\\\"set print type\\\" must be followed by the name of a subcommand.\\n\");\n-  help_list (setprintlist, \"set print type \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_print_type (const char *args, int from_tty)\n-{\n-  cmd_show_list (showprinttypelist, from_tty, \"\");\n-}\n-\n static bool print_methods = true;\n \n static void\n@@ -827,12 +813,14 @@ Available FLAGS are:\\n\\\n Only one level of typedefs is unrolled.  See also \\\"ptype\\\".\"));\n   set_cmd_completer (c, expression_completer);\n \n-  add_prefix_cmd (\"type\", no_class, show_print_type,\n-\t\t  _(\"Generic command for showing type-printing settings.\"),\n-\t\t  &showprinttypelist, \"show print type \", 0, &showprintlist);\n-  add_prefix_cmd (\"type\", no_class, set_print_type,\n-\t\t  _(\"Generic command for setting how types print.\"),\n-\t\t  &setprinttypelist, \"set print type \", 0, &setprintlist);\n+  add_show_prefix_cmd (\"type\", no_class,\n+\t\t       _(\"Generic command for showing type-printing settings.\"),\n+\t\t       &showprinttypelist, \"show print type \", 0,\n+\t\t       &showprintlist);\n+  add_basic_prefix_cmd (\"type\", no_class,\n+\t\t\t_(\"Generic command for setting how types print.\"),\n+\t\t\t&setprinttypelist, \"set print type \", 0,\n+\t\t\t&setprintlist);\n \n   add_setshow_boolean_cmd (\"methods\", no_class, &print_methods,\n \t\t\t   _(\"\\"
    },
    {
      "sha": "0be7c6071b7efad74600f93ffc7f6e99ec29dab8",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 14,
      "deletions": 42,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -2942,34 +2942,6 @@ show_radix (const char *arg, int from_tty)\n }\n \f\n \n-static void\n-set_print (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (\n-     \"\\\"set print\\\" must be followed by the name of a print subcommand.\\n\");\n-  help_list (setprintlist, \"set print \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_print (const char *args, int from_tty)\n-{\n-  cmd_show_list (showprintlist, from_tty, \"\");\n-}\n-\n-static void\n-set_print_raw (const char *arg, int from_tty)\n-{\n-  printf_unfiltered (\n-     \"\\\"set print raw\\\" must be followed by the name of a \\\"print raw\\\" subcommand.\\n\");\n-  help_list (setprintrawlist, \"set print raw \", all_commands, gdb_stdout);\n-}\n-\n-static void\n-show_print_raw (const char *args, int from_tty)\n-{\n-  cmd_show_list (showprintrawlist, from_tty, \"\");\n-}\n-\n /* Controls printing of vtbl's.  */\n static void\n show_vtblprint (struct ui_file *file, int from_tty,\n@@ -3161,30 +3133,30 @@ _initialize_valprint ()\n {\n   cmd_list_element *cmd;\n \n-  add_prefix_cmd (\"print\", no_class, set_print,\n-\t\t  _(\"Generic command for setting how things print.\"),\n-\t\t  &setprintlist, \"set print \", 0, &setlist);\n+  add_basic_prefix_cmd (\"print\", no_class,\n+\t\t\t_(\"Generic command for setting how things print.\"),\n+\t\t\t&setprintlist, \"set print \", 0, &setlist);\n   add_alias_cmd (\"p\", \"print\", no_class, 1, &setlist);\n   /* Prefer set print to set prompt.  */\n   add_alias_cmd (\"pr\", \"print\", no_class, 1, &setlist);\n \n-  add_prefix_cmd (\"print\", no_class, show_print,\n-\t\t  _(\"Generic command for showing print settings.\"),\n-\t\t  &showprintlist, \"show print \", 0, &showlist);\n+  add_show_prefix_cmd (\"print\", no_class,\n+\t\t       _(\"Generic command for showing print settings.\"),\n+\t\t       &showprintlist, \"show print \", 0, &showlist);\n   add_alias_cmd (\"p\", \"print\", no_class, 1, &showlist);\n   add_alias_cmd (\"pr\", \"print\", no_class, 1, &showlist);\n \n-  cmd = add_prefix_cmd (\"raw\", no_class, set_print_raw,\n-\t\t\t_(\"\\\n+  cmd = add_basic_prefix_cmd (\"raw\", no_class,\n+\t\t\t      _(\"\\\n Generic command for setting what things to print in \\\"raw\\\" mode.\"),\n-\t\t\t&setprintrawlist, \"set print raw \", 0,\n-\t\t\t&setprintlist);\n+\t\t\t      &setprintrawlist, \"set print raw \", 0,\n+\t\t\t      &setprintlist);\n   deprecate_cmd (cmd, nullptr);\n \n-  cmd = add_prefix_cmd (\"raw\", no_class, show_print_raw,\n-\t\t\t_(\"Generic command for showing \\\"print raw\\\" settings.\"),\n-\t\t\t&showprintrawlist, \"show print raw \", 0,\n-\t\t\t&showprintlist);\n+  cmd = add_show_prefix_cmd (\"raw\", no_class,\n+\t\t\t     _(\"Generic command for showing \\\"print raw\\\" settings.\"),\n+\t\t\t     &showprintrawlist, \"show print raw \", 0,\n+\t\t\t     &showprintlist);\n   deprecate_cmd (cmd, nullptr);\n \n   gdb::option::add_setshow_cmds_for_options"
    },
    {
      "sha": "4af797f946960c3ee9b793ca8af15cfffcecea60",
      "filename": "gdb/windows-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 20,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0743fc83c03da263953dfc393a66744a08770365/gdb/windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0743fc83c03da263953dfc393a66744a08770365/gdb/windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-tdep.c?ref=0743fc83c03da263953dfc393a66744a08770365",
      "patch": "@@ -602,25 +602,6 @@ show_maint_show_all_tib (struct ui_file *file, int from_tty,\n \t\t\t    \"Thread Information Block is %s.\\n\"), value);\n }\n \n-static void\n-info_w32_command (const char *args, int from_tty)\n-{\n-  help_list (info_w32_cmdlist, \"info w32 \", class_info, gdb_stdout);\n-}\n-\n-static int w32_prefix_command_valid = 0;\n-void\n-init_w32_command_list (void)\n-{\n-  if (!w32_prefix_command_valid)\n-    {\n-      add_prefix_cmd (\"w32\", class_info, info_w32_command,\n-\t\t      _(\"Print information specific to Win32 debugging.\"),\n-\t\t      &info_w32_cmdlist, \"info w32 \", 0, &infolist);\n-      w32_prefix_command_valid = 1;\n-    }\n-}\n-\n /* Implementation of `gdbarch_gdb_signal_to_target' for Windows.  */\n \n static int\n@@ -1096,7 +1077,10 @@ _initialize_windows_tdep ()\n   windows_gdbarch_data_handle\n     = gdbarch_data_register_post_init (init_windows_gdbarch_data);\n \n-  init_w32_command_list ();\n+  add_basic_prefix_cmd (\"w32\", class_info,\n+\t\t\t_(\"Print information specific to Win32 debugging.\"),\n+\t\t\t&info_w32_cmdlist, \"info w32 \", 0, &infolist);\n+\n   add_cmd (\"thread-information-block\", class_info, display_tib,\n \t   _(\"Display thread information block.\"),\n \t   &info_w32_cmdlist);"
    }
  ]
}