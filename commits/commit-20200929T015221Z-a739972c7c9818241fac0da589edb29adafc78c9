{
  "sha": "a739972c7c9818241fac0da589edb29adafc78c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTczOTk3MmM3Yzk4MTgyNDFmYWMwZGE1ODllZGIyOWFkYWZjNzhjOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:38:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-29T01:52:21Z"
    },
    "message": "Remove target_has_memory macro\n\nThis removes the target_has_memory object-like macro, replacing it\nwith the underlying function.\n\ngdb/ChangeLog\n2020-09-28  Tom Tromey  <tom@tromey.com>\n\n\t* target.c (target_has_memory): Rename from target_has_memory_1.\n\t* tui/tui-regs.c (tui_data_window::show_registers): Update.\n\t* thread.c (scoped_restore_current_thread::restore)\n\t(scoped_restore_current_thread::scoped_restore_current_thread):\n\tUpdate.\n\t* frame.c (get_current_frame, has_stack_frames): Update.\n\t* target.h (target_has_memory): Remove macro.\n\t(target_has_memory): Rename from target_has_memory_1.",
    "tree": {
      "sha": "ab19c4558884aa6ea0c852249622992365748b88",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ab19c4558884aa6ea0c852249622992365748b88"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a739972c7c9818241fac0da589edb29adafc78c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a739972c7c9818241fac0da589edb29adafc78c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a739972c7c9818241fac0da589edb29adafc78c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a739972c7c9818241fac0da589edb29adafc78c9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5b8a477608a972184e03b6950965757a0d057543",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b8a477608a972184e03b6950965757a0d057543",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5b8a477608a972184e03b6950965757a0d057543"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 18,
    "deletions": 8
  },
  "files": [
    {
      "sha": "1e2bee69b4ba9e31e47640191a2ac06d6662b2de",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -1,3 +1,14 @@\n+2020-09-28  Tom Tromey  <tom@tromey.com>\n+\n+\t* target.c (target_has_memory): Rename from target_has_memory_1.\n+\t* tui/tui-regs.c (tui_data_window::show_registers): Update.\n+\t* thread.c (scoped_restore_current_thread::restore)\n+\t(scoped_restore_current_thread::scoped_restore_current_thread):\n+\tUpdate.\n+\t* frame.c (get_current_frame, has_stack_frames): Update.\n+\t* target.h (target_has_memory): Remove macro.\n+\t(target_has_memory): Rename from target_has_memory_1.\n+\n 2020-09-28  Tom Tromey  <tom@tromey.com>\n \n \t* target.c (target_has_all_memory_1): Remove."
    },
    {
      "sha": "113fe8ace400c530d1937798550f228b86c467cd",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -1657,7 +1657,7 @@ get_current_frame (void)\n     error (_(\"No registers.\"));\n   if (!target_has_stack)\n     error (_(\"No stack.\"));\n-  if (!target_has_memory)\n+  if (!target_has_memory ())\n     error (_(\"No memory.\"));\n   /* Traceframes are effectively a substitute for the live inferior.  */\n   if (get_traceframe_number () < 0)\n@@ -1692,7 +1692,7 @@ static struct frame_info *selected_frame;\n bool\n has_stack_frames ()\n {\n-  if (!target_has_registers || !target_has_stack || !target_has_memory)\n+  if (!target_has_registers || !target_has_stack || !target_has_memory ())\n     return false;\n \n   /* Traceframes are effectively a substitute for the live inferior.  */"
    },
    {
      "sha": "3bcd6cbc91f895e7384de98dc652a323f3ef93da",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -170,7 +170,7 @@ show_targetdebug (struct ui_file *file, int from_tty,\n }\n \n int\n-target_has_memory_1 (void)\n+target_has_memory ()\n {\n   for (target_ops *t = current_top_target (); t != NULL; t = t->beneath ())\n     if (t->has_memory ())"
    },
    {
      "sha": "2024b1340be7e7d89945025148dec51587dc32ea",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -1812,8 +1812,7 @@ extern void default_target_pass_ctrlc (struct target_ops *ops);\n \n /* Does the target include memory?  (Dummy targets don't.)  */\n \n-extern int target_has_memory_1 (void);\n-#define target_has_memory target_has_memory_1 ()\n+extern int target_has_memory ();\n \n /* Does the target have a stack?  (Exec files don't, VxWorks doesn't, until\n    we start a process.)  */"
    },
    {
      "sha": "ba119b009b2caf83f372fe57cbf5b0ed4bf36f68",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -1407,7 +1407,7 @@ scoped_restore_current_thread::restore ()\n       && m_thread->state == THREAD_STOPPED\n       && target_has_registers\n       && target_has_stack\n-      && target_has_memory)\n+      && target_has_memory ())\n     restore_selected_frame (m_selected_frame_id, m_selected_frame_level);\n }\n \n@@ -1441,7 +1441,7 @@ scoped_restore_current_thread::scoped_restore_current_thread ()\n       if (m_was_stopped\n \t  && target_has_registers\n \t  && target_has_stack\n-\t  && target_has_memory)\n+\t  && target_has_memory ())\n \t{\n \t  /* When processing internal events, there might not be a\n \t     selected frame.  If we naively call get_selected_frame"
    },
    {
      "sha": "d7d13045d092ce7f61a0a0cf6a5e2510c31bbdd5",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a739972c7c9818241fac0da589edb29adafc78c9/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a739972c7c9818241fac0da589edb29adafc78c9/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=a739972c7c9818241fac0da589edb29adafc78c9",
      "patch": "@@ -182,7 +182,7 @@ tui_data_window::show_registers (struct reggroup *group)\n   if (group == 0)\n     group = general_reggroup;\n \n-  if (target_has_registers && target_has_stack && target_has_memory)\n+  if (target_has_registers && target_has_stack && target_has_memory ())\n     {\n       show_register_group (group, get_selected_frame (NULL),\n \t\t\t   group == m_current_group);"
    }
  ]
}