{
  "sha": "4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGYyMmMzZjQyZWE1ODI0MTM0YWFiYTU1NWU1YWQ1YmQ4MmEzNmIzNg==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-11-20T21:31:35Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-11-20T21:31:35Z"
    },
    "message": "Add missing parentheses on 'print' (gdb.python/py-progspace.exp)\n\nCommit 33d569b709886a1208145806da80b689d9cae9da (\"gdb/python: Return\nNone from Progspace.block_for_pc on error\") added a few tests on\ngdb.python/py-progspace.exp which use 'print', but forgot to use\nparentheses when passing the arguments to be printed.  This fails on\nPython 3.\n\nThis commit adds these missing parentheses.  Pushed as obvious.\n\ngdb/testsuite/ChangeLog:\n2019-11-20  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\t* gdb.python/py-progspace.exp: Add missing parentheses on some\n\t'print' commands.\n\nChange-Id: Iac0a7578855d128bbee3b98e7ea5888dae55fc00",
    "tree": {
      "sha": "89b4e3d12035df2ca46aef1c34187d180adec79d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89b4e3d12035df2ca46aef1c34187d180adec79d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f22c3f42ea5824134aaba555e5ad5bd82a36b36/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "6cdd651fda1315cb43a6a50223350da0da3f6dcf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6cdd651fda1315cb43a6a50223350da0da3f6dcf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6cdd651fda1315cb43a6a50223350da0da3f6dcf"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "f47ed172a640158d5bbf26ac7e543fe88e636eb4",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f22c3f42ea5824134aaba555e5ad5bd82a36b36/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f22c3f42ea5824134aaba555e5ad5bd82a36b36/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-20  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\t* gdb.python/py-progspace.exp: Add missing parentheses on some\n+\t'print' commands.\n+\n 2019-11-19  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.tui/winheight.exp: New file."
    },
    {
      "sha": "46194412fbc89d63630d648438f9f706145ab6b6",
      "filename": "gdb/testsuite/gdb.python/py-progspace.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f22c3f42ea5824134aaba555e5ad5bd82a36b36/gdb/testsuite/gdb.python/py-progspace.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f22c3f42ea5824134aaba555e5ad5bd82a36b36/gdb/testsuite/gdb.python/py-progspace.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-progspace.exp?ref=4f22c3f42ea5824134aaba555e5ad5bd82a36b36",
      "patch": "@@ -61,14 +61,14 @@ if {![runto_main]} {\n set pc_val [get_integer_valueof \"\\$pc\" 0]\n gdb_py_test_silent_cmd \"python blk = gdb.current_progspace ().block_for_pc (${pc_val})\" \\\n     \"get block for the current \\$pc\" 1\n-gdb_test \"python print blk.start <= ${pc_val}\" \"True\" \\\n+gdb_test \"python print (blk.start <= ${pc_val})\" \"True\" \\\n     \"block start is before \\$pc\"\n-gdb_test \"python print blk.end >= ${pc_val}\" \"True\" \\\n+gdb_test \"python print (blk.end >= ${pc_val})\" \"True\" \\\n     \"block end is after \\$pc\"\n \n # Check what happens when we ask for a block of an invalid address.\n if ![is_address_zero_readable] {\n-    gdb_test \"python print gdb.current_progspace ().block_for_pc (0)\" \"None\"\n+    gdb_test \"python print (gdb.current_progspace ().block_for_pc (0))\" \"None\"\n }\n \n # With a single inferior, progspace.objfiles () and gdb.objfiles () should"
    }
  ]
}