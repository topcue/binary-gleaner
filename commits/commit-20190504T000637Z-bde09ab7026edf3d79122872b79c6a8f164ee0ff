{
  "sha": "bde09ab7026edf3d79122872b79c6a8f164ee0ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmRlMDlhYjcwMjZlZGYzZDc5MTIyODcyYjc5YzZhOGYxNjRlZTBmZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-03T23:21:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-04T00:06:37Z"
    },
    "message": "Remove \"struct\" from foreach statements\n\nSome versions of gcc have a bug that causes\n\n    for (struct mumble : something)\n\n... to give a compiler error.  We routinely work around this bug in\ngdb, but apparently had not done so in a while.  This patch fixes the\nremaining known cases of this problem.\n\ngdb/ChangeLog\n2019-05-03  Sandra Loosemore  <sandra@codesourcery.com>\n\t    Tom Tromey  <tom@tromey.com>\n\n\t* dictionary.c (collate_pending_symbols_by_language): Remove\n\t\"struct\" from foreach.\n\t* symtab.c (lookup_global_symbol_from_objfile)\n\t(lookup_symbol_in_objfile_from_linkage_name): Remove \"struct\" from\n\tforeach.\n\t* ser-tcp.c (net_open): Remove \"struct\" from foreach.\n\t* objfiles.c (objfile_relocate, objfile_rebase)\n\t(objfile_has_symbols): Remove \"struct\" from foreach.\n\t* minsyms.c (lookup_minimal_symbol_by_pc_section): Remove \"struct\"\n\tfrom foreach.\n\t* dwarf2read.c (handle_struct_member_die): Remove \"struct\" from\n\tforeach.\n\t* darwin-nat.c (thread_info_from_private_thread_info): Remove\n\t\"struct\" from foreach.\n\t* ada-lang.c (create_excep_cond_exprs)\n\t(ada_exception_catchpoint_cond_string): Remove \"struct\" from\n\tforeach.",
    "tree": {
      "sha": "91a38f83fae1479191910c9ed6393c5c9076b6a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/91a38f83fae1479191910c9ed6393c5c9076b6a0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bde09ab7026edf3d79122872b79c6a8f164ee0ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bde09ab7026edf3d79122872b79c6a8f164ee0ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bde09ab7026edf3d79122872b79c6a8f164ee0ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bde09ab7026edf3d79122872b79c6a8f164ee0ff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b5d5eb444b6443855d65f73ea6b6623f5fbdaa0e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5d5eb444b6443855d65f73ea6b6623f5fbdaa0e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b5d5eb444b6443855d65f73ea6b6623f5fbdaa0e"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 33,
    "deletions": 12
  },
  "files": [
    {
      "sha": "b4e3a55fe58f0330a209e925fbf5c613ee5d5f8f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -1,3 +1,24 @@\n+2019-05-03  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Tom Tromey  <tom@tromey.com>\n+\n+\t* dictionary.c (collate_pending_symbols_by_language): Remove\n+\t\"struct\" from foreach.\n+\t* symtab.c (lookup_global_symbol_from_objfile)\n+\t(lookup_symbol_in_objfile_from_linkage_name): Remove \"struct\" from\n+\tforeach.\n+\t* ser-tcp.c (net_open): Remove \"struct\" from foreach.\n+\t* objfiles.c (objfile_relocate, objfile_rebase)\n+\t(objfile_has_symbols): Remove \"struct\" from foreach.\n+\t* minsyms.c (lookup_minimal_symbol_by_pc_section): Remove \"struct\"\n+\tfrom foreach.\n+\t* dwarf2read.c (handle_struct_member_die): Remove \"struct\" from\n+\tforeach.\n+\t* darwin-nat.c (thread_info_from_private_thread_info): Remove\n+\t\"struct\" from foreach.\n+\t* ada-lang.c (create_excep_cond_exprs)\n+\t(ada_exception_catchpoint_cond_string): Remove \"struct\" from\n+\tforeach.\n+\n 2019-05-03  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-exp.y (convert_char_literal): Check suffix of each"
    },
    {
      "sha": "20fb3497c034cacd34926b806736828f4ce991c6",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -12483,7 +12483,7 @@ create_excep_cond_exprs (struct ada_catchpoint *c,\n      because the expression may hold the addresses of multiple symbols\n      in some cases.  */\n   std::multimap<program_space *, struct bp_location *> loc_map;\n-  for (struct bp_location *bl = c->loc; bl != NULL; bl = bl->next)\n+  for (bp_location *bl = c->loc; bl != NULL; bl = bl->next)\n     loc_map.emplace (bl->pspace, bl);\n \n   scoped_restore_current_program_space save_pspace;\n@@ -13231,7 +13231,7 @@ ada_exception_catchpoint_cond_string (const char *excep_string,\n   excep_string = ada_encode (excep_string);\n   std::vector<struct bound_minimal_symbol> symbols\n     = ada_lookup_simple_minsyms (excep_string);\n-  for (const struct bound_minimal_symbol &msym : symbols)\n+  for (const bound_minimal_symbol &msym : symbols)\n     {\n       if (!result.empty ())\n \tresult += \" or \";"
    },
    {
      "sha": "e3368ce64716cd20c8acba408005b2ca454a9bfb",
      "filename": "gdb/darwin-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/darwin-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/darwin-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/darwin-nat.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -1706,7 +1706,7 @@ darwin_attach_pid (struct inferior *inf)\n static struct thread_info *\n thread_info_from_private_thread_info (darwin_thread_info *pti)\n {\n-  for (struct thread_info *it : all_threads ())\n+  for (thread_info *it : all_threads ())\n     {\n       darwin_thread_info *iter_pti = get_darwin_thread_info (it);\n "
    },
    {
      "sha": "4e38b2e23401d08a6359006396e66cd0bd24ffdc",
      "filename": "gdb/dictionary.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/dictionary.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/dictionary.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dictionary.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -932,7 +932,7 @@ collate_pending_symbols_by_language (const struct pending *symbol_list)\n {\n   std::unordered_map<enum language, std::vector<symbol *>> nsyms;\n \n-  for (const struct pending *list_counter = symbol_list;\n+  for (const pending *list_counter = symbol_list;\n        list_counter != nullptr; list_counter = list_counter->next)\n     {\n       for (int i = list_counter->nsyms - 1; i >= 0; --i)"
    },
    {
      "sha": "b5ea9e3cc0a7fffd1632b62751418bdb6f7469b8",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -15962,7 +15962,7 @@ handle_struct_member_die (struct die_info *child_die, struct type *type,\n \t field for our sole member child.  */\n       struct attribute *discr = dwarf2_attr (child_die, DW_AT_discr_value, cu);\n \n-      for (struct die_info *variant_child = child_die->child;\n+      for (die_info *variant_child = child_die->child;\n \t   variant_child != NULL;\n \t   variant_child = sibling_die (variant_child))\n \t{"
    },
    {
      "sha": "9d29d880aabe1848a33f8fc35c21d524be6fa5b1",
      "filename": "gdb/minsyms.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/minsyms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/minsyms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minsyms.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -721,7 +721,7 @@ lookup_minimal_symbol_by_pc_section (CORE_ADDR pc_in, struct obj_section *sectio\n \n   gdb_assert (section != NULL);\n \n-  for (struct objfile *objfile : section->objfile->separate_debug_objfiles ())\n+  for (objfile *objfile : section->objfile->separate_debug_objfiles ())\n     {\n       CORE_ADDR pc = pc_in;\n "
    },
    {
      "sha": "30823c2d8895ba55b4ff3757e41435091fd490ae",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -864,7 +864,7 @@ objfile_relocate (struct objfile *objfile,\n \n   changed |= objfile_relocate1 (objfile, new_offsets);\n \n-  for (struct objfile *debug_objfile : objfile->separate_debug_objfiles ())\n+  for (::objfile *debug_objfile : objfile->separate_debug_objfiles ())\n     {\n       if (debug_objfile == objfile)\n \tcontinue;\n@@ -919,7 +919,7 @@ objfile_rebase (struct objfile *objfile, CORE_ADDR slide)\n {\n   int changed = 0;\n \n-  for (struct objfile *debug_objfile : objfile->separate_debug_objfiles ())\n+  for (::objfile *debug_objfile : objfile->separate_debug_objfiles ())\n     changed |= objfile_rebase1 (debug_objfile, slide);\n \n   /* Relocate breakpoints as necessary, after things are relocated.  */\n@@ -960,7 +960,7 @@ objfile_has_full_symbols (struct objfile *objfile)\n int\n objfile_has_symbols (struct objfile *objfile)\n {\n-  for (struct objfile *o : objfile->separate_debug_objfiles ())\n+  for (::objfile *o : objfile->separate_debug_objfiles ())\n     if (objfile_has_partial_symbols (o) || objfile_has_full_symbols (o))\n       return 1;\n   return 0;"
    },
    {
      "sha": "5aa7105dc2cb4e8549f286994d918e3e7e4cd06a",
      "filename": "gdb/ser-tcp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ser-tcp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/ser-tcp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ser-tcp.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -319,7 +319,7 @@ net_open (struct serial *scb, const char *name)\n     {\n       got_connrefused = false;\n \n-      for (struct addrinfo *iter = ainfo; iter != NULL; iter = iter->ai_next)\n+      for (addrinfo *iter = ainfo; iter != NULL; iter = iter->ai_next)\n \t{\n \t  /* Iterate over the list of possible addresses to connect\n \t     to.  For each, we'll try to connect and see if it"
    },
    {
      "sha": "0e1f7ead2941f4b7577771084f473463bcf66785",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bde09ab7026edf3d79122872b79c6a8f164ee0ff/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=bde09ab7026edf3d79122872b79c6a8f164ee0ff",
      "patch": "@@ -2246,7 +2246,7 @@ lookup_global_symbol_from_objfile (struct objfile *main_objfile,\n \t\t\t\t   const char *name,\n \t\t\t\t   const domain_enum domain)\n {\n-  for (struct objfile *objfile : main_objfile->separate_debug_objfiles ())\n+  for (objfile *objfile : main_objfile->separate_debug_objfiles ())\n     {\n       struct block_symbol result\n         = lookup_symbol_in_objfile (objfile, GLOBAL_BLOCK, name, domain);\n@@ -2333,7 +2333,7 @@ lookup_symbol_in_objfile_from_linkage_name (struct objfile *objfile,\n   else\n     main_objfile = objfile;\n \n-  for (struct objfile *cur_objfile : main_objfile->separate_debug_objfiles ())\n+  for (::objfile *cur_objfile : main_objfile->separate_debug_objfiles ())\n     {\n       struct block_symbol result;\n "
    }
  ]
}