{
  "sha": "ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWYyMWRkM2JjZmZkMzUwZjBiZjI3Mzg2ZjFlYWZlODA5NWQ4ZmVlYw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-11-20T13:34:04Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-11-20T13:34:13Z"
    },
    "message": "libctf: do not crash when CTF symbol or variable linking fails\n\nWhen linking fails, we delete all the generated outputs, but we fail to\nremove them from the ctf_link_outputs hash we stuck them in before doing\nsymbol and variable section linking (which we had to do because that's\nwhere ctf_create_per_cu, used by both, looks for them).  This leaves\nstale pointers to freed memory behind, and crashes soon follow.\n\nFix obvious.\n\nlibctf/ChangeLog\n2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-link.c (ctf_link_deduplicating): Clean up the ctf_link_outputs\n\thash on error.",
    "tree": {
      "sha": "8c3b7fb17d3ac94f9d1bfc6df3ccfa440d39c606",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8c3b7fb17d3ac94f9d1bfc6df3ccfa440d39c606"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef21dd3bcffd350f0bf27386f1eafe8095d8feec/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8f235c90a287ee961153dd94f5ca28b033ebb668",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f235c90a287ee961153dd94f5ca28b033ebb668",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8f235c90a287ee961153dd94f5ca28b033ebb668"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "7fdb3558f3daa8c69c082d47322bbdf11dfff99f",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef21dd3bcffd350f0bf27386f1eafe8095d8feec/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef21dd3bcffd350f0bf27386f1eafe8095d8feec/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-link.c (ctf_link_deduplicating): Clean up the ctf_link_outputs\n+\thash on error.\n+\n 2020-11-20  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-create.c (ctf_dtd_insert): Set ENOMEM on the dict if out of memory."
    },
    {
      "sha": "cdf3db3a7c3f1d22ea80cae3135b72f394d501dc",
      "filename": "libctf/ctf-link.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ef21dd3bcffd350f0bf27386f1eafe8095d8feec/libctf/ctf-link.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ef21dd3bcffd350f0bf27386f1eafe8095d8feec/libctf/ctf-link.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-link.c?ref=ef21dd3bcffd350f0bf27386f1eafe8095d8feec",
      "patch": "@@ -1616,18 +1616,14 @@ ctf_link_deduplicating (ctf_dict_t *fp)\n     {\n       ctf_err_warn (fp, 0, 0, _(\"deduplicating link variable emission failed for \"\n \t\t\t\t\"%s\"), ctf_link_input_name (fp));\n-      for (i = 1; i < noutputs; i++)\n-\tctf_dict_close (outputs[i]);\n-      goto err;\n+      goto err_clean_outputs;\n     }\n \n   if (ctf_link_deduplicating_syms (fp, inputs, ninputs, 0) < 0)\n     {\n       ctf_err_warn (fp, 0, 0, _(\"deduplicating link symbol emission failed for \"\n \t\t\t\t\"%s\"), ctf_link_input_name (fp));\n-      for (i = 1; i < noutputs; i++)\n-\tctf_dict_close (outputs[i]);\n-      goto err;\n+      goto err_clean_outputs;\n     }\n \n   /* Now close all the inputs, including per-CU intermediates.  */\n@@ -1647,6 +1643,14 @@ ctf_link_deduplicating (ctf_dict_t *fp)\n   free (parents);\n   free (outputs);\n   return;\n+\n+ err_clean_outputs:\n+  for (i = 1; i < noutputs; i++)\n+    {\n+      ctf_dynhash_remove (fp->ctf_link_outputs, ctf_cuname (outputs[i]));\n+      ctf_dict_close (outputs[i]);\n+    }\n+  goto err;\n }\n \n /* Merge types and variable sections in all files added to the link"
    }
  ]
}