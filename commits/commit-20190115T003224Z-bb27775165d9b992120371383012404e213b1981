{
  "sha": "bb27775165d9b992120371383012404e213b1981",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmIyNzc3NTE2NWQ5Yjk5MjEyMDM3MTM4MzAxMjQwNGUyMTNiMTk4MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-06T20:30:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-15T00:32:24Z"
    },
    "message": "Constify some remote-notif functions\n\nThis constifies the \"buf\" arguments to various remote-notif functions\nand updates the users.\n\ngdb/ChangeLog\n2019-01-14  Tom Tromey  <tom@tromey.com>\n\n\t* remote-notif.c (handle_notification, remote_notif_ack)\n\t(remote_notif_parse): Make \"buf\" const.\n\t* remote-notif.h (struct notif_client) <parse, ack>: Make \"buf\"\n\tconst.\n\t(remote_notif_parse, remote_notif_ack, handle_notification):\n\tLikewise.\n\t* remote.c (remote_notif_stop_parse): Make \"buf\" const.\n\t(remote_target::remote_parse_stop_reply): Make \"buf\" const.\n\t(remote_notif_stop_ack): Make \"buf\" const.",
    "tree": {
      "sha": "61d3ff87dfb04c5ea6d43f20f7bda37987e9fd12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/61d3ff87dfb04c5ea6d43f20f7bda37987e9fd12"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb27775165d9b992120371383012404e213b1981",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb27775165d9b992120371383012404e213b1981",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb27775165d9b992120371383012404e213b1981",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb27775165d9b992120371383012404e213b1981/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05be00a884850c5fe314004c9b91609f480308f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05be00a884850c5fe314004c9b91609f480308f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05be00a884850c5fe314004c9b91609f480308f6"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 25,
    "deletions": 12
  },
  "files": [
    {
      "sha": "6ceb3f75a99670b13ed528ea4193dd37a7abc13a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb27775165d9b992120371383012404e213b1981/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb27775165d9b992120371383012404e213b1981/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bb27775165d9b992120371383012404e213b1981",
      "patch": "@@ -1,3 +1,15 @@\n+2019-01-14  Tom Tromey  <tom@tromey.com>\n+\n+\t* remote-notif.c (handle_notification, remote_notif_ack)\n+\t(remote_notif_parse): Make \"buf\" const.\n+\t* remote-notif.h (struct notif_client) <parse, ack>: Make \"buf\"\n+\tconst.\n+\t(remote_notif_parse, remote_notif_ack, handle_notification):\n+\tLikewise.\n+\t* remote.c (remote_notif_stop_parse): Make \"buf\" const.\n+\t(remote_target::remote_parse_stop_reply): Make \"buf\" const.\n+\t(remote_notif_stop_ack): Make \"buf\" const.\n+\n 2019-01-14  Tom Tromey  <tom@tromey.com>\n \n \t* remote.c (remote_console_output): Make parameter const."
    },
    {
      "sha": "ae9a94d9c944f68e271cd65c1ef3785d79ffa9fa",
      "filename": "gdb/remote-notif.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb27775165d9b992120371383012404e213b1981/gdb/remote-notif.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb27775165d9b992120371383012404e213b1981/gdb/remote-notif.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-notif.c?ref=bb27775165d9b992120371383012404e213b1981",
      "patch": "@@ -59,7 +59,7 @@ static void do_notif_event_xfree (void *arg);\n \n void\n remote_notif_ack (remote_target *remote,\n-\t\t  struct notif_client *nc, char *buf)\n+\t\t  struct notif_client *nc, const char *buf)\n {\n   struct notif_event *event = nc->alloc_event ();\n   struct cleanup *old_chain\n@@ -79,7 +79,7 @@ remote_notif_ack (remote_target *remote,\n \n struct notif_event *\n remote_notif_parse (remote_target *remote,\n-\t\t    struct notif_client *nc, char *buf)\n+\t\t    struct notif_client *nc, const char *buf)\n {\n   struct notif_event *event = nc->alloc_event ();\n   struct cleanup *old_chain\n@@ -126,7 +126,7 @@ remote_async_get_pending_events_handler (gdb_client_data data)\n    update STATE.  */\n \n void\n-handle_notification (struct remote_notif_state *state, char *buf)\n+handle_notification (struct remote_notif_state *state, const char *buf)\n {\n   struct notif_client *nc;\n   size_t i;"
    },
    {
      "sha": "7973ad7fa0aaa938d34c51ffbc6c6dd46be38d21",
      "filename": "gdb/remote-notif.h",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb27775165d9b992120371383012404e213b1981/gdb/remote-notif.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb27775165d9b992120371383012404e213b1981/gdb/remote-notif.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-notif.h?ref=bb27775165d9b992120371383012404e213b1981",
      "patch": "@@ -55,13 +55,13 @@ typedef struct notif_client\n      function may throw exception if contents in BUF is not the\n      expected event.  */\n   void (*parse) (remote_target *remote,\n-\t\t struct notif_client *self, char *buf,\n+\t\t struct notif_client *self, const char *buf,\n \t\t struct notif_event *event);\n \n   /* Send field <ack_command> to remote, and do some checking.  If\n      something wrong, throw an exception.  */\n   void (*ack) (remote_target *remote,\n-\t       struct notif_client *self, char *buf,\n+\t       struct notif_client *self, const char *buf,\n \t       struct notif_event *event);\n \n   /* Check this notification client can get pending events in\n@@ -106,15 +106,16 @@ struct remote_notif_state\n   struct notif_event *pending_event[REMOTE_NOTIF_LAST];\n };\n \n-void remote_notif_ack (remote_target *remote, notif_client *nc, char *buf);\n+void remote_notif_ack (remote_target *remote, notif_client *nc,\n+\t\t       const char *buf);\n struct notif_event *remote_notif_parse (remote_target *remote,\n \t\t\t\t\tnotif_client *nc,\n-\t\t\t\t\tchar *buf);\n+\t\t\t\t\tconst char *buf);\n \n void notif_event_xfree (struct notif_event *event);\n \n void handle_notification (struct remote_notif_state *notif_state,\n-\t\t\t  char *buf);\n+\t\t\t  const char *buf);\n \n void remote_notif_process (struct remote_notif_state *state,\n \t\t\t   struct notif_client *except);"
    },
    {
      "sha": "949c69c1ccc46a3643468e60c3ccea6f66dbc979",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb27775165d9b992120371383012404e213b1981/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb27775165d9b992120371383012404e213b1981/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=bb27775165d9b992120371383012404e213b1981",
      "patch": "@@ -768,7 +768,7 @@ class remote_target : public process_stratum_target\n   struct stop_reply *remote_notif_remove_queued_reply (ptid_t ptid);\n   struct stop_reply *queued_stop_reply (ptid_t ptid);\n   int peek_stop_reply (ptid_t ptid);\n-  void remote_parse_stop_reply (char *buf, stop_reply *event);\n+  void remote_parse_stop_reply (const char *buf, stop_reply *event);\n \n   void remote_stop_ns (ptid_t ptid);\n   void remote_interrupt_as ();\n@@ -6864,15 +6864,15 @@ remote_target::stop_reply_queue_length ()\n \n void\n remote_notif_stop_parse (remote_target *remote,\n-\t\t\t struct notif_client *self, char *buf,\n+\t\t\t struct notif_client *self, const char *buf,\n \t\t\t struct notif_event *event)\n {\n   remote->remote_parse_stop_reply (buf, (struct stop_reply *) event);\n }\n \n static void\n remote_notif_stop_ack (remote_target *remote,\n-\t\t       struct notif_client *self, char *buf,\n+\t\t       struct notif_client *self, const char *buf,\n \t\t       struct notif_event *event)\n {\n   struct stop_reply *stop_reply = (struct stop_reply *) event;\n@@ -7201,7 +7201,7 @@ strprefix (const char *p, const char *pend, const char *prefix)\n    result is stored in EVENT, or throws an error.  */\n \n void\n-remote_target::remote_parse_stop_reply (char *buf, stop_reply *event)\n+remote_target::remote_parse_stop_reply (const char *buf, stop_reply *event)\n {\n   remote_arch_state *rsa = NULL;\n   ULONGEST addr;"
    }
  ]
}