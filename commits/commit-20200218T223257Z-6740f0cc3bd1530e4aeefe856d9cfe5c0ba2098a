{
  "sha": "6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc0MGYwY2MzYmQxNTMwZTRhZWVmZTg1NmQ5Y2ZlNWMwYmEyMDk4YQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-02-18T22:29:23Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-02-18T22:32:57Z"
    },
    "message": "gdb: allow duplicate enumerators in flag enums\n\nI have come across some uses cases where it would be desirable to treat\nan enum that has duplicate values as a \"flag enum\".  For example, this\none here [1]:\n\n    enum membarrier_cmd {\n            MEMBARRIER_CMD_QUERY                                = 0,\n            MEMBARRIER_CMD_GLOBAL                               = (1 << 0),\n            MEMBARRIER_CMD_GLOBAL_EXPEDITED                     = (1 << 1),\n            MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED            = (1 << 2),\n            MEMBARRIER_CMD_PRIVATE_EXPEDITED                    = (1 << 3),\n            MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED           = (1 << 4),\n            MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE          = (1 << 5),\n            MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE = (1 << 6),\n\n            /* Alias for header backward compatibility. */\n            MEMBARRIER_CMD_SHARED = MEMBARRIER_CMD_GLOBAL,\n    };\n\nThe last enumerator is kept for backwards compatibility.  Without this\npatch, this enumeration wouldn't be considered a flag enum, because two\nenumerators collide.   With this patch, it would be considered a flag\nenum, and the value 3 would be printed as:\n\n  MEMBARRIER_CMD_GLOBAL | MEMBARRIER_CMD_GLOBAL_EXPEDITED\n\nAlthough if people prefer, we could display both MEMBARRIER_CMD_GLOBAL\nand MEMBARRIER_CMD_SHARED in the result.  It wouldn't be wrong, and\ncould perhaps be useful in case a bit may have multiple meanings\n(depending on some other bit value).\n\n[1] https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/uapi/linux/membarrier.h?id=0bf999f9c5e74c7ecf9dafb527146601e5c848b9#n125\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (update_enumeration_type_from_children): Allow\n\tflag enums to contain duplicate enumerators.\n\t* valprint.c (generic_val_print_enum_1): Update comment.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/printcmds.c (enum flag_enum): Add FE_TWO_LEGACY\n\tenumerator.",
    "tree": {
      "sha": "479be063e13d06ad978b4c29772debda946c2d49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/479be063e13d06ad978b4c29772debda946c2d49"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "edd45eb06bfc4683922c6877589004632e6e6d29",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edd45eb06bfc4683922c6877589004632e6e6d29",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/edd45eb06bfc4683922c6877589004632e6e6d29"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 19,
    "deletions": 11
  },
  "files": [
    {
      "sha": "6ea59592fac194329f6a67dfc8249db559f49d22",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
      "patch": "@@ -1,3 +1,9 @@\n+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (update_enumeration_type_from_children): Allow\n+\tflag enums to contain duplicate enumerators.\n+\t* valprint.c (generic_val_print_enum_1): Update comment.\n+\n 2020-02-18  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c: Include \"count-one-bits.h\"."
    },
    {
      "sha": "ee220ab70b33f371a206b4ee841026f26c9ea4e3",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
      "patch": "@@ -15495,7 +15495,6 @@ update_enumeration_type_from_children (struct die_info *die,\n   struct die_info *child_die;\n   int unsigned_enum = 1;\n   int flag_enum = 1;\n-  ULONGEST mask = 0;\n \n   auto_obstack obstack;\n \n@@ -15531,10 +15530,6 @@ update_enumeration_type_from_children (struct die_info *die,\n \t{\n \t  if (count_one_bits_ll (value) >= 2)\n \t    flag_enum = 0;\n-\t  else if ((mask & value) != 0)\n-\t    flag_enum = 0;\n-\t  else\n-\t    mask |= value;\n \t}\n \n       /* If we already know that the enum type is neither unsigned, nor"
    },
    {
      "sha": "4f63dde12a906c937631710acafd091e228a50a3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-18  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdb.base/printcmds.c (enum flag_enum): Add FE_TWO_LEGACY\n+\tenumerator.\n+\n 2020-02-18  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.base/printcmds.c (enum flag_enum): Prefix enumerators with"
    },
    {
      "sha": "ed1e26b12a9c8d3c925c8a334ca574bf1b7d02b3",
      "filename": "gdb/testsuite/gdb.base/printcmds.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/testsuite/gdb.base/printcmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/testsuite/gdb.base/printcmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/printcmds.c?ref=6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
      "patch": "@@ -99,9 +99,10 @@ volatile enum some_volatile_enum some_volatile_enum = enumvolval1;\n /* An enum considered as a \"flag enum\".  */\n enum flag_enum\n {\n-  FE_NONE = 0x00,\n-  FE_ONE  = 0x01,\n-  FE_TWO  = 0x02,\n+  FE_NONE       = 0x00,\n+  FE_ONE        = 0x01,\n+  FE_TWO        = 0x02,\n+  FE_TWO_LEGACY = 0x02,\n };\n \n enum flag_enum three = FE_ONE | FE_TWO;"
    },
    {
      "sha": "888c9cdb577820b124e58298ddc2978bdd5d0924",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=6740f0cc3bd1530e4aeefe856d9cfe5c0ba2098a",
      "patch": "@@ -631,9 +631,10 @@ generic_val_print_enum_1 (struct type *type, LONGEST val,\n     {\n       int first = 1;\n \n-      /* We have a \"flag\" enum, so we try to decompose it into\n-\t pieces as appropriate.  A flag enum has disjoint\n-\t constants by definition.  */\n+      /* We have a \"flag\" enum, so we try to decompose it into pieces as\n+\t appropriate.  The enum may have multiple enumerators representing\n+\t the same bit, in which case we choose to only print the first one\n+\t we find.  */\n       fputs_filtered (\"(\", stream);\n       for (i = 0; i < len; ++i)\n \t{"
    }
  ]
}