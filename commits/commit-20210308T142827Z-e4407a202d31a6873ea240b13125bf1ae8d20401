{
  "sha": "e4407a202d31a6873ea240b13125bf1ae8d20401",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTQ0MDdhMjAyZDMxYTY4NzNlYTI0MGIxMzEyNWJmMWFlOGQyMDQwMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:27Z"
    },
    "message": "Implement Rust field operations\n\nThis implements the field operations STRUCTOP_STRUCT and\nSTRUCTOP_ANONYMOUS, for Rust.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (eval_op_rust_struct_anon, eval_op_rust_structop):\n\tNo longer static.\n\t* rust-exp.h (class rust_struct_anon): New.\n\t(class rust_structop): New.",
    "tree": {
      "sha": "2e9e5c7209830771fda18563ea9a082084662e20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2e9e5c7209830771fda18563ea9a082084662e20"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e4407a202d31a6873ea240b13125bf1ae8d20401",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4407a202d31a6873ea240b13125bf1ae8d20401",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e4407a202d31a6873ea240b13125bf1ae8d20401",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4407a202d31a6873ea240b13125bf1ae8d20401/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9db6b6ddbd3a384d3a80bfee3e3a5c5a40fd43d0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9db6b6ddbd3a384d3a80bfee3e3a5c5a40fd43d0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9db6b6ddbd3a384d3a80bfee3e3a5c5a40fd43d0"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 62,
    "deletions": 2
  },
  "files": [
    {
      "sha": "69a514cf8bc19275f13bb13713ae32ca6fed4baf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e4407a202d31a6873ea240b13125bf1ae8d20401",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (eval_op_rust_struct_anon, eval_op_rust_structop):\n+\tNo longer static.\n+\t* rust-exp.h (class rust_struct_anon): New.\n+\t(class rust_structop): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (rust_range): No longer static."
    },
    {
      "sha": "19e945c806be9dc940325cedb18d13f1ad5c6608",
      "filename": "gdb/rust-exp.h",
      "status": "modified",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/rust-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/rust-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.h?ref=e4407a202d31a6873ea240b13125bf1ae8d20401",
      "patch": "@@ -46,6 +46,16 @@ extern struct value *rust_range (struct type *expect_type,\n \t\t\t\t struct expression *exp,\n \t\t\t\t enum noside noside, enum range_flag kind,\n \t\t\t\t struct value *low, struct value *high);\n+extern struct value *eval_op_rust_struct_anon (struct type *expect_type,\n+\t\t\t\t\t       struct expression *exp,\n+\t\t\t\t\t       enum noside noside,\n+\t\t\t\t\t       int field_number,\n+\t\t\t\t\t       struct value *lhs);\n+extern struct value *eval_op_rust_structop (struct type *expect_type,\n+\t\t\t\t\t    struct expression *exp,\n+\t\t\t\t\t    enum noside noside,\n+\t\t\t\t\t    struct value *lhs,\n+\t\t\t\t\t    const char *field_name);\n \n namespace expr\n {\n@@ -154,6 +164,49 @@ class rust_range_operation\n   { return OP_RANGE; }\n };\n \n+/* Tuple field reference (using an integer).  */\n+class rust_struct_anon\n+  : public tuple_holding_operation<int, operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *lhs = std::get<1> (m_storage)->evaluate (nullptr, exp, noside);\n+    return eval_op_rust_struct_anon (expect_type, exp, noside,\n+\t\t\t\t     std::get<0> (m_storage), lhs);\n+\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return STRUCTOP_ANONYMOUS; }\n+};\n+\n+/* Structure (or union or enum) field reference.  */\n+class rust_structop\n+  : public structop_base_operation\n+{\n+public:\n+\n+  using structop_base_operation::structop_base_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    value *lhs = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+    return eval_op_rust_structop (expect_type, exp, noside, lhs,\n+\t\t\t\t  std::get<1> (m_storage).c_str ());\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return STRUCTOP_STRUCT; }\n+};\n+\n } /* namespace expr */\n \n #endif /* RUST_EXP_H */"
    },
    {
      "sha": "1373de94035eeab1c19d10450967c2340bdb852f",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e4407a202d31a6873ea240b13125bf1ae8d20401/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=e4407a202d31a6873ea240b13125bf1ae8d20401",
      "patch": "@@ -1388,7 +1388,7 @@ eval_op_rust_array (struct type *expect_type, struct expression *exp,\n \n /* A helper function for STRUCTOP_ANONYMOUS.  */\n \n-static struct value *\n+struct value *\n eval_op_rust_struct_anon (struct type *expect_type, struct expression *exp,\n \t\t\t  enum noside noside,\n \t\t\t  int field_number, struct value *lhs)\n@@ -1455,7 +1455,7 @@ tuple structs, and tuple-like enum variants\"));\n \n /* A helper function for STRUCTOP_STRUCT.  */\n \n-static struct value *\n+struct value *\n eval_op_rust_structop (struct type *expect_type, struct expression *exp,\n \t\t       enum noside noside,\n \t\t       struct value *lhs, const char *field_name)"
    }
  ]
}