{
  "sha": "c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzUwNjVkZjA0Mzk3ODNkOWNlNzQzNmJjODU1ZDE4ZmQwYzllMGIwYg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-02T18:36:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-02T18:36:50Z"
    },
    "message": "gdb: remove maint_print_section_data\n\nSince the \"maintenance info sections\" helper functions are not used\nthrough a callback with a void* parameter anymore, the\nmaint_print_section_data is not needed anymore.  Remove it, replace it\nwith regular parameters.\n\nBreak out the index digits computation in its own function.\n\ngdb/ChangeLog:\n\n\t* maint.c (index_digits): New function.\n\t(struct maint_print_section_data): Remove.\n\t(print_bfd_section_info): Remove print_data parameter, add arg\n\tand index_digits.\n\t(print_objfile_section_info): Likewise.\n\t(print_bfd_section_info_maybe_relocated): Likewise (plus\n\tobjfile).\n\t(maintenance_info_sections): Adjust calls.\n\nChange-Id: Idfeca5e7e0a95e72fade15cb1488058865c0258e",
    "tree": {
      "sha": "ad7ebd5f6121a7aa22295b3364acb247fb7ea3bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ad7ebd5f6121a7aa22295b3364acb247fb7ea3bf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5065df0439783d9ce7436bc855d18fd0c9e0b0b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "02c6f3f1fc2af7ad02bc649f0adfb479bf163441",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02c6f3f1fc2af7ad02bc649f0adfb479bf163441",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/02c6f3f1fc2af7ad02bc649f0adfb479bf163441"
    }
  ],
  "stats": {
    "total": 112,
    "additions": 53,
    "deletions": 59
  },
  "files": [
    {
      "sha": "1ac74546c196c02b0a8b0964429ccfeb4ae28837",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5065df0439783d9ce7436bc855d18fd0c9e0b0b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5065df0439783d9ce7436bc855d18fd0c9e0b0b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
      "patch": "@@ -1,3 +1,14 @@\n+2020-09-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* maint.c (index_digits): New function.\n+\t(struct maint_print_section_data): Remove.\n+\t(print_bfd_section_info): Remove print_data parameter, add arg\n+\tand index_digits.\n+\t(print_objfile_section_info): Likewise.\n+\t(print_bfd_section_info_maybe_relocated): Likewise (plus\n+\tobjfile).\n+\t(maintenance_info_sections): Adjust calls.\n+\n 2020-09-02  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-varobj.c (ada_varobj_get_ptr_number_of_children): Return 0"
    },
    {
      "sha": "46dd99f6ccf6b7d33fc19331f5294138429a86db",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 42,
      "deletions": 59,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c5065df0439783d9ce7436bc855d18fd0c9e0b0b/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c5065df0439783d9ce7436bc855d18fd0c9e0b0b/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=c5065df0439783d9ce7436bc855d18fd0c9e0b0b",
      "patch": "@@ -245,37 +245,16 @@ maint_print_section_info (const char *name, flagword flags,\n   printf_filtered (\"\\n\");\n }\n \n-/* Information passed between the \"maintenance info sections\" command, and\n-   the worker function that prints each section.  */\n-struct maint_print_section_data\n+/* Return the number of digits required to display COUNT in decimal.\n+\n+   Used when pretty printing index numbers to ensure all of the indexes line\n+   up.*/\n+\n+static int\n+index_digits (int count)\n {\n-  /* The GDB objfile we're printing this section for.  */\n-  struct objfile *objfile;\n-\n-  /* The argument string passed by the user to the top level maintenance\n-     info sections command.  Used for filtering which sections are\n-     printed.  */\n-  const char *arg;\n-\n-  /* The number of digits in the highest section index for all sections\n-     from the bfd object associated with OBJFILE.  Used when pretty\n-     printing the index number to ensure all of the indexes line up.  */\n-  int index_digits;\n-\n-  /* Constructor.  */\n-  maint_print_section_data (struct objfile *objfile, const char *arg,\n-\t\t\t    bfd *abfd)\n-    : objfile (objfile),\n-      arg (arg)\n-  {\n-    int section_count = gdb_bfd_count_sections (abfd);\n-    index_digits = ((int) log10 ((float) section_count)) + 1;\n-  }\n-\n-private:\n-  maint_print_section_data () = delete;\n-  maint_print_section_data (const maint_print_section_data &) = delete;\n-};\n+  return ((int) log10 ((float) count)) + 1;\n+}\n \n /* Helper function to pretty-print the section index of ASECT from ABFD.\n    The INDEX_DIGITS is the number of digits in the largest index that will\n@@ -295,16 +274,17 @@ print_section_index (bfd *abfd,\n /* Print information about ASECT from ABFD.  The section will be printed using\n    the VMA's from the bfd, which will not be the relocated addresses for bfds\n    that should be relocated.  The information must be printed with the same\n-   layout as PRINT_OBJFILE_SECTION_INFO below.  */\n+   layout as PRINT_OBJFILE_SECTION_INFO below.\n+\n+   ARG is the argument string passed by the user to the top level maintenance\n+   info sections command.  Used for filtering which sections are printed.  */\n \n static void\n-print_bfd_section_info (bfd *abfd,\n-\t\t\tasection *asect,\n-\t\t\tconst maint_print_section_data &print_data)\n+print_bfd_section_info (bfd *abfd, asection *asect, const char *arg,\n+\t\t\tint index_digits)\n {\n   flagword flags = bfd_section_flags (asect);\n   const char *name = bfd_section_name (asect);\n-  const char *arg = print_data.arg;\n \n   if (arg == NULL || *arg == '\\0'\n       || match_substring (arg, name)\n@@ -316,7 +296,7 @@ print_bfd_section_info (bfd *abfd,\n \n       addr = bfd_section_vma (asect);\n       endaddr = addr + bfd_section_size (asect);\n-      print_section_index (abfd, asect, print_data.index_digits);\n+      print_section_index (abfd, asect, index_digits);\n       maint_print_section_info (name, flags, addr, endaddr,\n \t\t\t\tasect->filepos, addr_size);\n     }\n@@ -325,26 +305,26 @@ print_bfd_section_info (bfd *abfd,\n /* Print information about ASECT which is GDB's wrapper around a section\n    from ABFD.  The information must be printed with the same layout as\n    PRINT_BFD_SECTION_INFO above.  PRINT_DATA holds information used to\n-   filter which sections are printed, and for formatting the output.  */\n+   filter which sections are printed, and for formatting the output.\n+\n+   ARG is the argument string passed by the user to the top level maintenance\n+   info sections command.  Used for filtering which sections are printed.  */\n \n static void\n-print_objfile_section_info (bfd *abfd,\n-\t\t\t    struct obj_section *asect,\n-\t\t\t    const maint_print_section_data &print_data)\n+print_objfile_section_info (bfd *abfd, struct obj_section *asect,\n+\t\t\t    const char *arg, int index_digits)\n {\n   flagword flags = bfd_section_flags (asect->the_bfd_section);\n   const char *name = bfd_section_name (asect->the_bfd_section);\n-  const char *string = print_data.arg;\n \n-  if (string == NULL || *string == '\\0'\n-      || match_substring (string, name)\n-      || match_bfd_flags (string, flags))\n+  if (arg == NULL || *arg == '\\0'\n+      || match_substring (arg, name)\n+      || match_bfd_flags (arg, flags))\n     {\n       struct gdbarch *gdbarch = gdbarch_from_bfd (abfd);\n       int addr_size = gdbarch_addr_bit (gdbarch) / 8;\n \n-      print_section_index (abfd, asect->the_bfd_section,\n-\t\t\t   print_data.index_digits);\n+      print_section_index (abfd, asect->the_bfd_section, index_digits);\n       maint_print_section_info (name, flags,\n \t\t\t\tobj_section_addr (asect),\n \t\t\t\tobj_section_endaddr (asect),\n@@ -375,22 +355,24 @@ maint_obj_section_from_bfd_section (bfd *abfd,\n }\n \n /* Print information about ASECT from ABFD.  Where possible the information for\n-   ASECT will print the relocated addresses of the section.  */\n+   ASECT will print the relocated addresses of the section.\n+\n+   ARG is the argument string passed by the user to the top level maintenance\n+   info sections command.  Used for filtering which sections are printed.  */\n \n static void\n-print_bfd_section_info_maybe_relocated\n-  (bfd *abfd, asection *asect, const maint_print_section_data &print_data)\n+print_bfd_section_info_maybe_relocated (bfd *abfd, asection *asect,\n+\t\t\t\t\tobjfile *objfile, const char *arg,\n+\t\t\t\t\tint index_digits)\n {\n-  objfile *objfile = print_data.objfile;\n-\n   gdb_assert (objfile->sections != NULL);\n   obj_section *osect\n     = maint_obj_section_from_bfd_section (abfd, asect, objfile);\n \n   if (osect->the_bfd_section == NULL)\n-    print_bfd_section_info (abfd, asect, print_data);\n+    print_bfd_section_info (abfd, asect, arg, index_digits);\n   else\n-    print_objfile_section_info (abfd, osect, print_data);\n+    print_objfile_section_info (abfd, osect, arg, index_digits);\n }\n \n /* Implement the \"maintenance info sections\" command.  */\n@@ -425,25 +407,26 @@ maintenance_info_sections (const char *arg, int from_tty)\n \t  else if (ofile->obfd != exec_bfd)\n \t    continue;\n \n-\t  maint_print_section_data print_data (ofile, arg, ofile->obfd);\n+\t  int section_count = gdb_bfd_count_sections (ofile->obfd);\n \n \t  for (asection *sect : gdb_bfd_sections (ofile->obfd))\n-\t    print_bfd_section_info_maybe_relocated (ofile->obfd, sect,\n-\t\t\t\t\t\t    print_data);\n+\t    print_bfd_section_info_maybe_relocated\n+\t      (ofile->obfd, sect, ofile, arg, index_digits (section_count));\n \t}\n     }\n \n   if (core_bfd)\n     {\n-      maint_print_section_data print_data (nullptr, arg, core_bfd);\n-\n       printf_filtered (_(\"Core file:\\n\"));\n       printf_filtered (\"    `%s', \", bfd_get_filename (core_bfd));\n       wrap_here (\"        \");\n       printf_filtered (_(\"file type %s.\\n\"), bfd_get_target (core_bfd));\n \n+      int section_count = gdb_bfd_count_sections (core_bfd);\n+\n       for (asection *sect : gdb_bfd_sections (core_bfd))\n-\tprint_bfd_section_info (core_bfd, sect, print_data);\n+\tprint_bfd_section_info (core_bfd, sect, arg,\n+\t\t\t\tindex_digits (section_count));\n     }\n }\n "
    }
  ]
}