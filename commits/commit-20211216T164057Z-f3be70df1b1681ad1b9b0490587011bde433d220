{
  "sha": "f3be70df1b1681ad1b9b0490587011bde433d220",
  "node_id": "C_kwDOANOeidoAKGYzYmU3MGRmMWIxNjgxYWQxYjliMDQ5MDU4NzAxMWJkZTQzM2QyMjA",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-12-16T16:40:57Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-12-16T16:40:57Z"
    },
    "message": "Fix AVR assembler so that it creates relocs that will work with linker relaxation.\n\n\tPR 28686\ngas\t* config/tc-avr.h (tc_fix_adjustable): Define.\n\t* config/tc-avr.c (avr_fix_adjustable): New function.\n\t* testsuite/gas/all/gas.exp: Skip tests that need adjustable fixups.\n\t* testsuite/gas/elf/elf.exp: Likewise.\n\t* testsuite/gas/avr/diffreloc_withrelax.d: Adjust expected output.\n\t* testsuite/gas/avr/pc-relative-reloc.d: Adjust expected output.\n\nld\t* testsuite/ld-avr/avr-prop-7.d: Adjust expected output.\n\t* testsuite/ld-avr/avr-prop-8.d: Likewise.\n\t* testsuite/ld-avr/pr13402.d: Likewise.",
    "tree": {
      "sha": "1d1938d029b210dc78c70ce4fba57a254add490b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1d1938d029b210dc78c70ce4fba57a254add490b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f3be70df1b1681ad1b9b0490587011bde433d220",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3be70df1b1681ad1b9b0490587011bde433d220",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f3be70df1b1681ad1b9b0490587011bde433d220",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3be70df1b1681ad1b9b0490587011bde433d220/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "61ab1364c7efa3934e0ca62af444e6e6e34f219e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61ab1364c7efa3934e0ca62af444e6e6e34f219e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/61ab1364c7efa3934e0ca62af444e6e6e34f219e"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 60,
    "deletions": 11
  },
  "files": [
    {
      "sha": "77888663077f7ded905531adc6cdc5455c504b65",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -1,3 +1,13 @@\n+2021-12-16  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 28686\n+\t* config/tc-avr.h (tc_fix_adjustable): Define.\n+\t* config/tc-avr.c (avr_fix_adjustable): New function.\n+\t* testsuite/gas/all/gas.exp: Skip tests that need adjustable fixups.\n+\t* testsuite/gas/elf/elf.exp: Likewise.\n+\t* testsuite/gas/avr/diffreloc_withrelax.d: Adjust expected output.\n+\t* testsuite/gas/avr/pc-relative-reloc.d: Adjust expected output.\n+\n 2021-11-26  Tom de Vries  <tdevries@suse.de>\n \n \tPR 28629"
    },
    {
      "sha": "f5fe659130f8212ee33e14f487efc7e3ddd718d4",
      "filename": "gas/config/tc-avr.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/config/tc-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/config/tc-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-avr.c?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -2820,3 +2820,29 @@ avr_pre_output_hook (void)\n   if (avr_opt.have_gccisr)\n     bfd_map_over_sections (stdoutput, avr_check_gccisr_done, NULL);\n }\n+\n+/* Return false if the fixup in fixp should be left alone and not\n+   adjusted.  */\n+\n+bool\n+avr_fix_adjustable (struct fix *fixp)\n+{\n+  if (! linkrelax || fixp->fx_addsy == NULL)\n+    return true;\n+\n+  /* Do not adjust relocations involving symbols in code sections,\n+     because it breaks linker relaxations.  This could be fixed in the\n+     linker, but this fix is simpler, and it pretty much only affects\n+     object size a little bit.  */\n+  if (S_GET_SEGMENT (fixp->fx_addsy)->flags & SEC_CODE)\n+    return false;\n+\n+  /* Likewise, do not adjust symbols that won't be merged, or debug\n+     symbols, because they too break relaxation.  We do want to adjust\n+     other mergeable symbols, like .rodata, because code relaxations\n+     need section-relative symbols to properly relax them.  */\n+  if (! (S_GET_SEGMENT (fixp->fx_addsy)->flags & SEC_MERGE))\n+    return false;\n+\n+  return true;\n+}"
    },
    {
      "sha": "cb9e5bb3dfc71184677558880f8db399df9c7c30",
      "filename": "gas/config/tc-avr.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/config/tc-avr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/config/tc-avr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-avr.h?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -247,3 +247,6 @@ extern void avr_frag_init (fragS *);\n \n #define tc_line_separator_chars avr_line_separator_chars\n extern const char *avr_line_separator_chars;\n+\n+#define tc_fix_adjustable(FIX) avr_fix_adjustable (FIX)\n+extern bool avr_fix_adjustable (struct fix *);"
    },
    {
      "sha": "5a08027d4340fabab30f160be56e63fd61337459",
      "filename": "gas/testsuite/gas/all/gas.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/all/gas.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/all/gas.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/gas.exp?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -166,11 +166,11 @@ switch -glob $target_triplet {\n \t# symbols on relocs.\n \tsetup_xfail \"m68hc1*-*-*\" \"m6811-*-*\" \"m6812-*-*\" \"rl78-*-*\"\n \tsetup_xfail \"riscv*-*-*\" \"rx-*-*\" \"vax*-*-*\" \"xgate*-*-*\" \"z8k-*-*\"\n-\tsetup_xfail \"loongarch*-*-*\"\n+\tsetup_xfail \"loongarch*-*-*\" \"avr-*-*\"\n \trun_dump_test redef2\n \tsetup_xfail \"m68hc1*-*-*\" \"m6811-*-*\" \"m6812-*-*\" \"rl78-*-*\"\n \tsetup_xfail \"riscv*-*-*\" \"rx-*-*\" \"vax*-*-*\" \"xgate*-*-*\" \"z8k-*-*\"\n-\tsetup_xfail \"loongarch*-*-*\"\n+\tsetup_xfail \"loongarch*-*-*\" \"avr-*-*\"\n \t# rs6000-aix disallows redefinition via .comm.\n \tif [is_xcoff_format] {\n \t    setup_xfail *-*-*"
    },
    {
      "sha": "9d59e054ec46d205ff681fbfbea291e41ab22ef5",
      "filename": "gas/testsuite/gas/avr/diffreloc_withrelax.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/avr/diffreloc_withrelax.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/avr/diffreloc_withrelax.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/avr/diffreloc_withrelax.d?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -8,9 +8,9 @@\n \n RELOCATION RECORDS FOR \\[.text\\]:\n OFFSET   TYPE              VALUE \n-00000000 R_AVR_CALL        .text\n+00000000 R_AVR_CALL        L1\n \n \n RELOCATION RECORDS FOR \\[.data\\]:\n OFFSET   TYPE              VALUE \n-00000000 R_AVR_DIFF16      .text\\+0x00000004\n+00000000 R_AVR_DIFF16      L2"
    },
    {
      "sha": "30d0df6202a1e327d13c59a0e0d61465e6002cf3",
      "filename": "gas/testsuite/gas/avr/pc-relative-reloc.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/avr/pc-relative-reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/avr/pc-relative-reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/avr/pc-relative-reloc.d?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -12,7 +12,7 @@ RELOCATION RECORDS FOR \\[.text.main\\]:\n \n RELOCATION RECORDS FOR \\[.debug_line\\]:\n OFFSET   TYPE              VALUE \n-00000000 R_AVR_32_PCREL    .debug_line_end-0x00000004\n+00000000 R_AVR_32_PCREL    .Ldebug_line_end-0x00000004\n \n \n RELOCATION RECORDS FOR \\[.debug_line.text.main\\]:"
    },
    {
      "sha": "c172ba3d27a952e4d48511d541e502ff63c6ce10",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -184,7 +184,7 @@ if { [is_elf_format] } then {\n \t    # against ordinary symbols into relocations against section symbols.\n \t    # This is usually revealed by the error message:\n \t    #  symbol `sym' required but not present\n-\t    setup_xfail \"m681*-*-*\" \"m68hc*-*-*\" \"xgate-*-*\" \"vax-*-*\"\n+\t    setup_xfail \"m681*-*-*\" \"m68hc*-*-*\" \"xgate-*-*\" \"vax-*-*\" \"avr-*-*\"\n \t    run_dump_test redef\n \t    run_dump_test equ-reloc\n \t}"
    },
    {
      "sha": "a0ab861bb4adb24248bfcdeb2baded6aa5f93931",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -1,3 +1,10 @@\n+2021-12-16  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 28686\n+\t* testsuite/ld-avr/avr-prop-7.d: Adjust expected output.\n+\t* testsuite/ld-avr/avr-prop-8.d: Likewise.\n+\t* testsuite/ld-avr/pr13402.d: Likewise.\n+\n 2021-11-30  Nick Clifton  <nickc@redhat.com>\n \n \t* scripttempl/pru.sc (.pru_irq_map): Define output section."
    },
    {
      "sha": "ebcb9dc2455c5f81a88c8f44fcc7dd60463fe8d7",
      "filename": "ld/testsuite/ld-avr/avr-prop-7.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/avr-prop-7.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/avr-prop-7.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-avr/avr-prop-7.d?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -9,7 +9,7 @@\n 00000000 <__ctors_end>:\n    0:\t04 d0       \trcall\t.+8      \t; 0xa <foo>\n    2:\t00 00       \tnop\n-   4:\t00 00       \tnop\n+#...\n    6:\t86 e0       \tldi\tr24, 0x06\t; 6\n-   8:\tf0 f7       \tbrcc\t.-4      \t; 0x6 <__ctors_end\\+0x6>\n+   8:\tf0 f7       \tbrcc\t.-4      \t; 0x6 <.*>\n #..."
    },
    {
      "sha": "b0122be36083d031d17ec201b54570ee29170d5f",
      "filename": "ld/testsuite/ld-avr/avr-prop-8.d",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/avr-prop-8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/avr-prop-8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-avr/avr-prop-8.d?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -9,5 +9,6 @@\n 00000000 <__ctors_end>:\n    0:\tff cf       \trjmp\t.-2      \t; 0x0 <__ctors_end>\n    2:\tfe df       \trcall\t.-4      \t; 0x0 <__ctors_end>\n-   4:\tf8 f7       \tbrcc\t.-2      \t; 0x4 <__ctors_end\\+0x4>\n+#...\n+   4:\tf8 f7       \tbrcc\t.-2      \t; 0x4 <.*>\n #..."
    },
    {
      "sha": "a8fd63430ff68e212e075750c5d181ee05acace4",
      "filename": "ld/testsuite/ld-avr/pr13402.d",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/pr13402.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3be70df1b1681ad1b9b0490587011bde433d220/ld/testsuite/ld-avr/pr13402.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-avr/pr13402.d?ref=f3be70df1b1681ad1b9b0490587011bde433d220",
      "patch": "@@ -8,9 +8,11 @@\n #...\n main:\n call a\n-   0:\t02 d0       \trcall\t.+4      \t; 0x6 <_etext>\n call b\n-   2:\t01 d0       \trcall\t.+2      \t; 0x6 <_etext>\n+   0:\t02 d0       \trcall\t.+4      \t; 0x6 <_etext>\n+#...\n call c\n+   2:\t01 d0       \trcall\t.+2      \t; 0x6 <_etext>\n+#...\n    4:\t00 d0       \trcall\t.+0      \t; 0x6 <_etext>\n #..."
    }
  ]
}