{
  "sha": "55add51eef6b4f89d44e1a6753d4dd926cab70c7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTVhZGQ1MWVlZjZiNGY4OWQ0NGUxYTY3NTNkNGRkOTI2Y2FiNzBjNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-23T11:24:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-02-23T23:43:00Z"
    },
    "message": "PR23691, gas .y files vs. automatic make dependencies\n\nA number of targets, bfin, rl78, rx, can show odd failures when\nbfd/reloc.c changes BFD_RELOC_* enum values, if recompiling over a\nbuild dir with existing objects.  The problem is caused by\nbfin-parse.o and similar not being recompiled and so using stale\nBFD_RELOC_* values.  This isn't fixed by making bfin-parse.c depend on\nbfd/reloc.c, which isn't necessary anyway.  bfin-parse.o should have\nbeen recompiled due to bfd/bfd.h changing when extracted bfd/reloc.c\nBFD_RELOC_* values change, but that wasn't happening.  The problem is\nthat automake generates a makefile that loads gas/config/.deps/\ndependency file for objects with corresponding sources mentioned in\nEXTRA_as_new_SOURCES.  Unless we want to mess around generating\nexplicit dependencies, I think that mean moving some object files to\nthe build gas/config/.  This patch does that, removing some hacks for\nm68k-parse.c that should no longer be necessary, and removes some\nrules that catered to old bison producing code that triggers compiler\nwarnings.\n\n\tPR 23691\n\t* Makefile.am (TARGET_CPU_CFILES): Split off config/xtensa-relax.c..\n\t(TARGET_CPU_HFILES): ..and config/xtensa-relax.h..\n\t(TARGET_EXTRA_FILES): ..to here.  Add config/bfin-lex-wrapper.c,\n\tand use alongside TARGET_CPU_CFILES.\n\t(EXTRA_DIST): Update location of generated .c files.\n\t(config/m68k-parse.c): New rule replacing m68k-parse.c rule.\n\t(config/bfin-parse.c, config/rl78-parse.cm config/rx-parse.c),\n\t(config/bfin-lex.c, config/bfin-lex-wrapper.@OBJEXT@): Similarly.\n\t(itbl-lex-wrapper.@OBJEXT@): Simplify to just the needed\n\tdependencies.\n\t(itbl-parse.@OBJEXT@): Delete rule using NO_WERROR.\n\t(itbl-parse.c, itbl-parse.h): Tidy.\n\t* config/bfin-lex-wrapper.c: Include config/bfin-lex.c.\n\t* config/bfin-lex.l: Include config/bfin-parse.h.\n\t* configure.ac (extra_objects): Move object files corresponding\n\tto .y and .l files now in config/ to config/.\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* po/POTFILES.in: Regenerate.",
    "tree": {
      "sha": "ddd4d9c9242b7d4d9d7a6eb69bfb43a3fa5cb45b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ddd4d9c9242b7d4d9d7a6eb69bfb43a3fa5cb45b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/55add51eef6b4f89d44e1a6753d4dd926cab70c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/55add51eef6b4f89d44e1a6753d4dd926cab70c7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/55add51eef6b4f89d44e1a6753d4dd926cab70c7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/55add51eef6b4f89d44e1a6753d4dd926cab70c7/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c42c71a1527dd70417d3966dce7ba9edbcf4bdb4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c42c71a1527dd70417d3966dce7ba9edbcf4bdb4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c42c71a1527dd70417d3966dce7ba9edbcf4bdb4"
    }
  ],
  "stats": {
    "total": 341,
    "additions": 125,
    "deletions": 216
  },
  "files": [
    {
      "sha": "8086006ca162ed2dd44fe2be5ea2730c05070024",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -1,3 +1,26 @@\n+2021-02-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23691\n+\t* Makefile.am (TARGET_CPU_CFILES): Split off config/xtensa-relax.c..\n+\t(TARGET_CPU_HFILES): ..and config/xtensa-relax.h..\n+\t(TARGET_EXTRA_FILES): ..to here.  Add config/bfin-lex-wrapper.c,\n+\tand use alongside TARGET_CPU_CFILES.\n+\t(EXTRA_DIST): Update location of generated .c files.\n+\t(config/m68k-parse.c): New rule replacing m68k-parse.c rule.\n+\t(config/bfin-parse.c, config/rl78-parse.cm config/rx-parse.c),\n+\t(config/bfin-lex.c, config/bfin-lex-wrapper.@OBJEXT@): Similarly.\n+\t(itbl-lex-wrapper.@OBJEXT@): Simplify to just the needed\n+\tdependencies.\n+\t(itbl-parse.@OBJEXT@): Delete rule using NO_WERROR.\n+\t(itbl-parse.c, itbl-parse.h): Tidy.\n+\t* config/bfin-lex-wrapper.c: Include config/bfin-lex.c.\n+\t* config/bfin-lex.l: Include config/bfin-parse.h.\n+\t* configure.ac (extra_objects): Move object files corresponding\n+\tto .y and .l files now in config/ to config/.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n 2021-02-19  Nick Clifton  <nickc@redhat.com>\n \n \t* config/tc-riscv.c (riscv_ip): Fix compile time warnings about"
    },
    {
      "sha": "fdce608d64f58526f6fa1ceafa41c512f5394351",
      "filename": "gas/Makefile.am",
      "status": "modified",
      "additions": 40,
      "deletions": 110,
      "changes": 150,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/Makefile.am?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -200,8 +200,7 @@ TARGET_CPU_CFILES = \\\n \tconfig/tc-xgate.c \\\n \tconfig/tc-xtensa.c \\\n \tconfig/tc-z80.c \\\n-\tconfig/tc-z8k.c \\\n-\tconfig/xtensa-relax.c\n+\tconfig/tc-z8k.c\n \n TARGET_CPU_HFILES = \\\n \tconfig/tc-aarch64.h \\\n@@ -275,7 +274,11 @@ TARGET_CPU_HFILES = \\\n \tconfig/tc-xgate.h \\\n \tconfig/tc-xtensa.h \\\n \tconfig/tc-z80.h \\\n-\tconfig/tc-z8k.h \\\n+\tconfig/tc-z8k.h\n+\n+TARGET_EXTRA_FILES = \\\n+\tconfig/bfin-lex-wrapper.c \\\n+\tconfig/xtensa-relax.c \\\n \tconfig/xtensa-relax.h\n \n # OBJ files in config\n@@ -356,7 +359,7 @@ CONFIG_ATOF_CFILES = \\\n POTFILES = $(MULTI_CFILES) $(CONFIG_ATOF_CFILES) \\\n \t$(TARG_ENV_HFILES) $(TARG_ENV_CFILES) $(OBJ_FORMAT_HFILES) \\\n \t$(OBJ_FORMAT_CFILES) $(TARGET_CPU_HFILES) $(TARGET_CPU_CFILES) \\\n-\t$(HFILES) $(CFILES)\n+\t$(TARGET_EXTRA_FILES) $(HFILES) $(CFILES)\n po/POTFILES.in: @MAINT@ Makefile\n \tfor f in $(POTFILES); do echo $$f; done | LC_ALL=C sort > tmp \\\n \t  && mv tmp $(srcdir)/po/POTFILES.in\n@@ -367,10 +370,10 @@ noinst_PROGRAMS = as-new\n noinst_SCRIPTS = $(GDBINIT)\n EXTRA_SCRIPTS = .gdbinit\n \n-EXTRA_DIST = m68k-parse.c itbl-parse.c itbl-parse.h itbl-lex.c \\\n-\tbfin-parse.c bfin-parse.h bfin-lex.c \\\n-\trl78-parse.c rl78-parse.h \\\n-\trx-parse.c rx-parse.h\n+EXTRA_DIST = config/m68k-parse.c itbl-parse.c itbl-parse.h itbl-lex.c \\\n+\tconfig/bfin-parse.c config/bfin-parse.h config/bfin-lex.c \\\n+\tconfig/rl78-parse.c config/rl78-parse.h \\\n+\tconfig/rx-parse.c config/rx-parse.h\n \n diststuff: $(EXTRA_DIST) info\n \n@@ -405,8 +408,9 @@ as_new_LDADD = $(TARG_CPU_O) $(OBJ_FORMAT_O) $(ATOF_TARG_O) \\\n as_new_DEPENDENCIES = $(TARG_CPU_O) $(OBJ_FORMAT_O) $(ATOF_TARG_O) \\\n \t$(extra_objects) $(GASLIBS) $(LIBINTL_DEP)\n EXTRA_as_new_SOURCES = $(CFILES) $(HFILES) $(TARGET_CPU_CFILES) \\\n-\t$(TARGET_CPU_HFILES) $(OBJ_FORMAT_CFILES) $(OBJ_FORMAT_HFILES) \\\n-\t$(TARG_ENV_CFILES) $(CONFIG_ATOF_CFILES) $(MULTI_CFILES)\n+\t$(TARGET_CPU_HFILES) $(TARGET_EXTRA_FILES) $(TARG_ENV_CFILES) \\\n+\t$(OBJ_FORMAT_CFILES) $(OBJ_FORMAT_HFILES) \\\n+\t$(CONFIG_ATOF_CFILES) $(MULTI_CFILES)\n \n EXPECT = expect\n RUNTEST = runtest\n@@ -436,119 +440,45 @@ development.exp: $(BFDDIR)/development.sh\n \t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n \t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n \n-# The m68k operand parser.\n-\n EXTRA_as_new_SOURCES += config/m68k-parse.y\n+config/m68k-parse.c: $(srcdir)/config/m68k-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/m68k-parse.y y.tab.c $@ -- $(YACCCOMPILE)\n+config/m68k-parse.h: config/m68k-parse.c\n+\t@true\n \n-# If m68k-parse.y is in a different directory, then ylwrap will use an\n-# absolute path when it invokes yacc, which will cause yacc to put the\n-# absolute path into the generated file.  That's a pain when it comes\n-# to generating snapshots, because it introduces spurious diffs.\n-# Since when we make the snapshots $(srcdir) = \".\", we check for that\n-# case and handle it differently.  This means that anybody who\n-# configures with $(srcdir) = \".\" will have to set their path in the\n-# debugger if they want to debug m68k-parse.y.  This is bad, but on\n-# the other hand it's good that people who use the prebuilt\n-# m68k-parse.c don't get a spurious absolute path.\n-m68k-parse.c: $(srcdir)/config/m68k-parse.y\n-\tf=$(srcdir)/config/m68k-parse.y; \\\n-\tif [ $$f = \"./config/m68k-parse.y\" ]; then \\\n-\t  ln -s config/m68k-parse.y . > /dev/null 2>/dev/null || \\\n-\t   ln config/m68k-parse.y . > /dev/null 2>/dev/null || \\\n-\t   cp config/m68k-parse.y . >/dev/null 2>/dev/null; \\\n-\t  f=m68k-parse.y; \\\n-\telse true; fi; \\\n-\t$(SHELL) $(YLWRAP) $$f y.tab.c m68k-parse.c -- $(YACCCOMPILE); \\\n-\tif [ $$f = \"m68k-parse.y\" ]; then \\\n-\t  rm -f m68k-parse.y; \\\n-\telse true; fi\n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-m68k-parse.@OBJEXT@: m68k-parse.c\n-if am__fastdepCC\n-\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f m68k-parse.c || echo $(srcdir)/`m68k-parse.c $(NO_WERROR)\n-\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-else\n-if AMDEP\n-\tsource='m68k-parse.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-endif\n-\t$(COMPILE) -c `test -f m68k-parse.c || echo $(srcdir)/`m68k-parse.c $(NO_WERROR)\n-endif\n+EXTRA_as_new_SOURCES += config/bfin-parse.y\n+config/bfin-parse.c: $(srcdir)/config/bfin-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-parse.y y.tab.c $@ y.tab.h config/bfin-parse.h -- $(YACCCOMPILE) -d ;\n+config/bfin-parse.h: config/bfin-parse.c\n+\t@true\n \n-# Don't let the .y.h rule clobber m68k-parse.h.\n-m68k-parse.h: ; @true\n-$(srcdir)/config/m68k-parse.h: ; @true\n+EXTRA_as_new_SOURCES += config/bfin-lex.l\n+config/bfin-lex.c: $(srcdir)/config/bfin-lex.l\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-lex.l lex.yy.c $@ -- $(LEXCOMPILE)\n \n-EXTRA_as_new_SOURCES += config/bfin-parse.y\n-bfin-parse.c: $(srcdir)/config/bfin-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-parse.y y.tab.c bfin-parse.c y.tab.h bfin-parse.h -- $(YACCCOMPILE) -d ;\n-bfin-parse.h: bfin-parse.c\n-bfin-parse.h: ; @true\n-$(srcdir)/config/bfin-parse.h: ; @true\n-\n-bfin-lex.c: $(srcdir)/config/bfin-lex.l\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-lex.l lex.yy.c bfin-lex.c -- $(LEXCOMPILE)\n-bfin-lex-wrapper.@OBJEXT@: $(srcdir)/config/bfin-lex-wrapper.c bfin-lex.c bfin-parse.h $(srcdir)/config/bfin-defs.h\n-if am__fastdepCC\n-\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $(srcdir)/config/bfin-lex-wrapper.c\n-\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-else\n-if AMDEP\n-\tsource='bfin-lex-wrapper.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-endif\n-\t$(COMPILE) -c $(srcdir)/config/bfin-lex-wrapper.c\n-endif\n+config/bfin-lex-wrapper.@OBJEXT@: config/bfin-lex.c config/bfin-parse.h\n \n EXTRA_as_new_SOURCES += config/rl78-parse.y\n-rl78-parse.c: $(srcdir)/config/rl78-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/rl78-parse.y y.tab.c rl78-parse.c y.tab.h rl78-parse.h -- $(YACCCOMPILE) -d ;\n-rl78-parse.h: rl78-parse.c\n-rl78-defs.h: ; @true\n-$(srcdir)/config/rl78-defs.h: ; @true\n+config/rl78-parse.c: $(srcdir)/config/rl78-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/rl78-parse.y y.tab.c $@ y.tab.h config/rl78-parse.h -- $(YACCCOMPILE) -d ;\n+config/rl78-parse.h: config/rl78-parse.c\n+\t@true\n \n EXTRA_as_new_SOURCES += config/rx-parse.y\n-rx-parse.c: $(srcdir)/config/rx-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/rx-parse.y y.tab.c rx-parse.c y.tab.h rx-parse.h -- $(YACCCOMPILE) -d ;\n-rx-parse.h: rx-parse.c\n-rx-defs.h: ; @true\n-$(srcdir)/config/rx-defs.h: ; @true\n-\n-# The instruction table specification lexical analyzer and parser.\n+config/rx-parse.c: $(srcdir)/config/rx-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/rx-parse.y y.tab.c $@ y.tab.h config/rx-parse.h -- $(YACCCOMPILE) -d ;\n+config/rx-parse.h: config/rx-parse.c\n+\t@true\n \n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-itbl-lex-wrapper.@OBJEXT@: itbl-lex-wrapper.c itbl-lex.c itbl-parse.h\n-if am__fastdepCC\n-\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $(srcdir)/itbl-lex-wrapper.c $(NO_WERROR)\n-\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-else\n-if AMDEP\n-\tsource='itbl-lex-wrapper.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-endif\n-\t$(COMPILE) -c $(srcdir)/itbl-lex-wrapper.c $(NO_WERROR)\n-endif\n+# The mips instruction table specification lexical analyzer and parser.\n \n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-itbl-parse.@OBJEXT@: itbl-parse.c\n-if am__fastdepCC\n-\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f itbl-parse.c || echo $(srcdir)/`itbl-parse.c $(NO_WERROR)\n-\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-else\n-if AMDEP\n-\tsource='itbl-parse.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-endif\n-\t$(COMPILE) -c `test -f itbl-parse.c || echo $(srcdir)/`itbl-parse.c $(NO_WERROR)\n-endif\n+itbl-lex-wrapper.@OBJEXT@: itbl-lex.c itbl-parse.h\n \n itbl-parse.c: $(srcdir)/itbl-parse.y\n-\t$(SHELL) $(YLWRAP) $(srcdir)/itbl-parse.y y.tab.c itbl-parse.c y.tab.h itbl-parse.h -- $(YACCCOMPILE) -d\n+\t$(SHELL) $(YLWRAP) $(srcdir)/itbl-parse.y y.tab.c $@ y.tab.h itbl-parse.h -- $(YACCCOMPILE) -d\n \n-itbl-parse.h: itbl-parse.c ; @true\n+itbl-parse.h: itbl-parse.c\n+\t@true\n \n itbl-ops.@OBJEXT@: itbl-parse.h\n "
    },
    {
      "sha": "433f387431f404725143ca88c3d287e67155ddbd",
      "filename": "gas/Makefile.in",
      "status": "modified",
      "additions": 51,
      "deletions": 96,
      "changes": 147,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/Makefile.in?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -591,8 +591,7 @@ TARGET_CPU_CFILES = \\\n \tconfig/tc-xgate.c \\\n \tconfig/tc-xtensa.c \\\n \tconfig/tc-z80.c \\\n-\tconfig/tc-z8k.c \\\n-\tconfig/xtensa-relax.c\n+\tconfig/tc-z8k.c\n \n TARGET_CPU_HFILES = \\\n \tconfig/tc-aarch64.h \\\n@@ -666,7 +665,11 @@ TARGET_CPU_HFILES = \\\n \tconfig/tc-xgate.h \\\n \tconfig/tc-xtensa.h \\\n \tconfig/tc-z80.h \\\n-\tconfig/tc-z8k.h \\\n+\tconfig/tc-z8k.h\n+\n+TARGET_EXTRA_FILES = \\\n+\tconfig/bfin-lex-wrapper.c \\\n+\tconfig/xtensa-relax.c \\\n \tconfig/xtensa-relax.h\n \n \n@@ -747,14 +750,14 @@ CONFIG_ATOF_CFILES = \\\n POTFILES = $(MULTI_CFILES) $(CONFIG_ATOF_CFILES) \\\n \t$(TARG_ENV_HFILES) $(TARG_ENV_CFILES) $(OBJ_FORMAT_HFILES) \\\n \t$(OBJ_FORMAT_CFILES) $(TARGET_CPU_HFILES) $(TARGET_CPU_CFILES) \\\n-\t$(HFILES) $(CFILES)\n+\t$(TARGET_EXTRA_FILES) $(HFILES) $(CFILES)\n \n noinst_SCRIPTS = $(GDBINIT)\n EXTRA_SCRIPTS = .gdbinit\n-EXTRA_DIST = m68k-parse.c itbl-parse.c itbl-parse.h itbl-lex.c \\\n-\tbfin-parse.c bfin-parse.h bfin-lex.c \\\n-\trl78-parse.c rl78-parse.h \\\n-\trx-parse.c rx-parse.h\n+EXTRA_DIST = config/m68k-parse.c itbl-parse.c itbl-parse.h itbl-lex.c \\\n+\tconfig/bfin-parse.c config/bfin-parse.h config/bfin-lex.c \\\n+\tconfig/rl78-parse.c config/rl78-parse.h \\\n+\tconfig/rx-parse.c config/rx-parse.h\n \n DISTCLEANFILES = targ-cpu.h obj-format.h targ-env.h itbl-cpu.h cgen-desc.h\n \n@@ -786,12 +789,11 @@ as_new_LDADD = $(TARG_CPU_O) $(OBJ_FORMAT_O) $(ATOF_TARG_O) \\\n as_new_DEPENDENCIES = $(TARG_CPU_O) $(OBJ_FORMAT_O) $(ATOF_TARG_O) \\\n \t$(extra_objects) $(GASLIBS) $(LIBINTL_DEP)\n \n-\n-# The m68k operand parser.\n EXTRA_as_new_SOURCES = $(CFILES) $(HFILES) $(TARGET_CPU_CFILES) \\\n-\t$(TARGET_CPU_HFILES) $(OBJ_FORMAT_CFILES) $(OBJ_FORMAT_HFILES) \\\n-\t$(TARG_ENV_CFILES) $(CONFIG_ATOF_CFILES) $(MULTI_CFILES) \\\n-\tconfig/m68k-parse.y config/bfin-parse.y config/rl78-parse.y \\\n+\t$(TARGET_CPU_HFILES) $(TARGET_EXTRA_FILES) $(TARG_ENV_CFILES) \\\n+\t$(OBJ_FORMAT_CFILES) $(OBJ_FORMAT_HFILES) \\\n+\t$(CONFIG_ATOF_CFILES) $(MULTI_CFILES) config/m68k-parse.y \\\n+\tconfig/bfin-parse.y config/bfin-lex.l config/rl78-parse.y \\\n \tconfig/rx-parse.y\n EXPECT = expect\n RUNTEST = runtest\n@@ -1033,8 +1035,12 @@ config/tc-z80.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/tc-z8k.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n+config/bfin-lex-wrapper.$(OBJEXT): config/$(am__dirstamp) \\\n+\tconfig/$(DEPDIR)/$(am__dirstamp)\n config/xtensa-relax.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n+config/te-vms.$(OBJEXT): config/$(am__dirstamp) \\\n+\tconfig/$(DEPDIR)/$(am__dirstamp)\n config/obj-aout.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/obj-coff.$(OBJEXT): config/$(am__dirstamp) \\\n@@ -1053,8 +1059,6 @@ config/obj-multi.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/obj-som.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n-config/te-vms.$(OBJEXT): config/$(am__dirstamp) \\\n-\tconfig/$(DEPDIR)/$(am__dirstamp)\n config/atof-ieee.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/atof-vax.$(OBJEXT): config/$(am__dirstamp) \\\n@@ -1075,6 +1079,8 @@ config/m68k-parse.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/bfin-parse.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n+config/bfin-lex.$(OBJEXT): config/$(am__dirstamp) \\\n+\tconfig/$(DEPDIR)/$(am__dirstamp)\n config/rl78-parse.$(OBJEXT): config/$(am__dirstamp) \\\n \tconfig/$(DEPDIR)/$(am__dirstamp)\n config/rx-parse.$(OBJEXT): config/$(am__dirstamp) \\\n@@ -1131,6 +1137,8 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/write.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/atof-ieee.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/atof-vax.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/bfin-lex-wrapper.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/bfin-lex.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/bfin-parse.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/e-crisaout.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@config/$(DEPDIR)/e-criself.Po@am__quote@\n@@ -1442,6 +1450,7 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n+\t-rm -f config/bfin-lex.c\n \t-rm -f config/bfin-parse.c\n \t-rm -f config/m68k-parse.c\n \t-rm -f config/rl78-parse.c\n@@ -1572,90 +1581,36 @@ check-DEJAGNU: site.exp\n development.exp: $(BFDDIR)/development.sh\n \t$(EGREP) \"(development|experimental)=\" $(BFDDIR)/development.sh  \\\n \t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n-\n-# If m68k-parse.y is in a different directory, then ylwrap will use an\n-# absolute path when it invokes yacc, which will cause yacc to put the\n-# absolute path into the generated file.  That's a pain when it comes\n-# to generating snapshots, because it introduces spurious diffs.\n-# Since when we make the snapshots $(srcdir) = \".\", we check for that\n-# case and handle it differently.  This means that anybody who\n-# configures with $(srcdir) = \".\" will have to set their path in the\n-# debugger if they want to debug m68k-parse.y.  This is bad, but on\n-# the other hand it's good that people who use the prebuilt\n-# m68k-parse.c don't get a spurious absolute path.\n-m68k-parse.c: $(srcdir)/config/m68k-parse.y\n-\tf=$(srcdir)/config/m68k-parse.y; \\\n-\tif [ $$f = \"./config/m68k-parse.y\" ]; then \\\n-\t  ln -s config/m68k-parse.y . > /dev/null 2>/dev/null || \\\n-\t   ln config/m68k-parse.y . > /dev/null 2>/dev/null || \\\n-\t   cp config/m68k-parse.y . >/dev/null 2>/dev/null; \\\n-\t  f=m68k-parse.y; \\\n-\telse true; fi; \\\n-\t$(SHELL) $(YLWRAP) $$f y.tab.c m68k-parse.c -- $(YACCCOMPILE); \\\n-\tif [ $$f = \"m68k-parse.y\" ]; then \\\n-\t  rm -f m68k-parse.y; \\\n-\telse true; fi\n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-m68k-parse.@OBJEXT@: m68k-parse.c\n-@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f m68k-parse.c || echo $(srcdir)/`m68k-parse.c $(NO_WERROR)\n-@am__fastdepCC_TRUE@\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='m68k-parse.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(COMPILE) -c `test -f m68k-parse.c || echo $(srcdir)/`m68k-parse.c $(NO_WERROR)\n-\n-# Don't let the .y.h rule clobber m68k-parse.h.\n-m68k-parse.h: ; @true\n-$(srcdir)/config/m68k-parse.h: ; @true\n-bfin-parse.c: $(srcdir)/config/bfin-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-parse.y y.tab.c bfin-parse.c y.tab.h bfin-parse.h -- $(YACCCOMPILE) -d ;\n-bfin-parse.h: bfin-parse.c\n-bfin-parse.h: ; @true\n-$(srcdir)/config/bfin-parse.h: ; @true\n-\n-bfin-lex.c: $(srcdir)/config/bfin-lex.l\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-lex.l lex.yy.c bfin-lex.c -- $(LEXCOMPILE)\n-bfin-lex-wrapper.@OBJEXT@: $(srcdir)/config/bfin-lex-wrapper.c bfin-lex.c bfin-parse.h $(srcdir)/config/bfin-defs.h\n-@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $(srcdir)/config/bfin-lex-wrapper.c\n-@am__fastdepCC_TRUE@\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='bfin-lex-wrapper.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(COMPILE) -c $(srcdir)/config/bfin-lex-wrapper.c\n-rl78-parse.c: $(srcdir)/config/rl78-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/rl78-parse.y y.tab.c rl78-parse.c y.tab.h rl78-parse.h -- $(YACCCOMPILE) -d ;\n-rl78-parse.h: rl78-parse.c\n-rl78-defs.h: ; @true\n-$(srcdir)/config/rl78-defs.h: ; @true\n-rx-parse.c: $(srcdir)/config/rx-parse.y $(srcdir)/../bfd/reloc.c\n-\t$(SHELL) $(YLWRAP) $(srcdir)/config/rx-parse.y y.tab.c rx-parse.c y.tab.h rx-parse.h -- $(YACCCOMPILE) -d ;\n-rx-parse.h: rx-parse.c\n-rx-defs.h: ; @true\n-$(srcdir)/config/rx-defs.h: ; @true\n-\n-# The instruction table specification lexical analyzer and parser.\n-\n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-itbl-lex-wrapper.@OBJEXT@: itbl-lex-wrapper.c itbl-lex.c itbl-parse.h\n-@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $(srcdir)/itbl-lex-wrapper.c $(NO_WERROR)\n-@am__fastdepCC_TRUE@\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='itbl-lex-wrapper.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(COMPILE) -c $(srcdir)/itbl-lex-wrapper.c $(NO_WERROR)\n-\n-# Disable -Werror, if it has been enabled, since old versions of bison/\n-# yacc will produce working code which contain compile time warnings.\n-itbl-parse.@OBJEXT@: itbl-parse.c\n-@am__fastdepCC_TRUE@\t$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `test -f itbl-parse.c || echo $(srcdir)/`itbl-parse.c $(NO_WERROR)\n-@am__fastdepCC_TRUE@\tmv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='itbl-parse.c' object='$@' libtool=no @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(COMPILE) -c `test -f itbl-parse.c || echo $(srcdir)/`itbl-parse.c $(NO_WERROR)\n+config/m68k-parse.c: $(srcdir)/config/m68k-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/m68k-parse.y y.tab.c $@ -- $(YACCCOMPILE)\n+config/m68k-parse.h: config/m68k-parse.c\n+\t@true\n+config/bfin-parse.c: $(srcdir)/config/bfin-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-parse.y y.tab.c $@ y.tab.h config/bfin-parse.h -- $(YACCCOMPILE) -d ;\n+config/bfin-parse.h: config/bfin-parse.c\n+\t@true\n+config/bfin-lex.c: $(srcdir)/config/bfin-lex.l\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/bfin-lex.l lex.yy.c $@ -- $(LEXCOMPILE)\n+\n+config/bfin-lex-wrapper.@OBJEXT@: config/bfin-lex.c config/bfin-parse.h\n+config/rl78-parse.c: $(srcdir)/config/rl78-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/rl78-parse.y y.tab.c $@ y.tab.h config/rl78-parse.h -- $(YACCCOMPILE) -d ;\n+config/rl78-parse.h: config/rl78-parse.c\n+\t@true\n+config/rx-parse.c: $(srcdir)/config/rx-parse.y\n+\t$(SHELL) $(YLWRAP) $(srcdir)/config/rx-parse.y y.tab.c $@ y.tab.h config/rx-parse.h -- $(YACCCOMPILE) -d ;\n+config/rx-parse.h: config/rx-parse.c\n+\t@true\n+\n+# The mips instruction table specification lexical analyzer and parser.\n+\n+itbl-lex-wrapper.@OBJEXT@: itbl-lex.c itbl-parse.h\n \n itbl-parse.c: $(srcdir)/itbl-parse.y\n-\t$(SHELL) $(YLWRAP) $(srcdir)/itbl-parse.y y.tab.c itbl-parse.c y.tab.h itbl-parse.h -- $(YACCCOMPILE) -d\n+\t$(SHELL) $(YLWRAP) $(srcdir)/itbl-parse.y y.tab.c $@ y.tab.h itbl-parse.h -- $(YACCCOMPILE) -d\n \n-itbl-parse.h: itbl-parse.c ; @true\n+itbl-parse.h: itbl-parse.c\n+\t@true\n \n itbl-ops.@OBJEXT@: itbl-parse.h\n "
    },
    {
      "sha": "010c37cbba2a40d95944600afd0a1c645444a8e9",
      "filename": "gas/config/bfin-lex-wrapper.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/config/bfin-lex-wrapper.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/config/bfin-lex-wrapper.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/bfin-lex-wrapper.c?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -22,4 +22,4 @@\n    that config.h can set the correct values for various things.  */\n \n #include \"sysdep.h\"\n-#include \"bfin-lex.c\"\n+#include \"config/bfin-lex.c\""
    },
    {
      "sha": "be72a18e93461d3bcc799a09f00b99bd415966ba",
      "filename": "gas/config/bfin-lex.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/config/bfin-lex.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/config/bfin-lex.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/bfin-lex.l?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -23,7 +23,7 @@\n \n #include \"as.h\"\n #include \"bfin-defs.h\"\n-#include \"bfin-parse.h\"\n+#include \"config/bfin-parse.h\"\n \n static long parse_int (char **end);\n static int parse_halfreg (Register *r, int cl, char *hr);"
    },
    {
      "sha": "5965f2bc242d70b642d96952862c5b591b7c5d1a",
      "filename": "gas/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -12893,7 +12893,7 @@ _ACEOF\n     case ${cpu_type} in\n \n       bfin)\n-\tfor f in bfin-parse.o bfin-lex-wrapper.o; do\n+\tfor f in config/bfin-parse.o config/bfin-lex-wrapper.o; do\n \t  case \" $extra_objects \" in\n \t    *\" $f \"*) ;;\n \t    *) extra_objects=\"$extra_objects $f\" ;;\n@@ -12922,7 +12922,7 @@ _ACEOF\n \tusing_cgen=yes\n \t;;\n       m68k)\n-\tf=m68k-parse.o\n+\tf=config/m68k-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;\n@@ -13140,15 +13140,15 @@ $as_echo \"$with_priv_spec\" >&6; }\n         ;;\n \n       rl78)\n-\tf=rl78-parse.o\n+\tf=config/rl78-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;\n \tesac\n \t;;\n \n       rx)\n-\tf=rx-parse.o\n+\tf=config/rx-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;"
    },
    {
      "sha": "6a96bb70d7d5d0a5f153b6f067cd14544f74cff7",
      "filename": "gas/configure.ac",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/configure.ac?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -429,7 +429,7 @@ changequote([,])dnl\n     case ${cpu_type} in\n \n       bfin)\n-\tfor f in bfin-parse.o bfin-lex-wrapper.o; do\n+\tfor f in config/bfin-parse.o config/bfin-lex-wrapper.o; do\n \t  case \" $extra_objects \" in\n \t    *\" $f \"*) ;;\n \t    *) extra_objects=\"$extra_objects $f\" ;;\n@@ -454,7 +454,7 @@ changequote([,])dnl\n \tusing_cgen=yes\n \t;;\n       m68k)\n-\tf=m68k-parse.o\n+\tf=config/m68k-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;\n@@ -614,15 +614,15 @@ changequote([,])dnl\n         ;;\n \n       rl78)\n-\tf=rl78-parse.o\n+\tf=config/rl78-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;\n \tesac\n \t;;\n \n       rx)\n-\tf=rx-parse.o\n+\tf=config/rx-parse.o\n \tcase \" $extra_objects \" in\n \t  *\" $f \"*) ;;\n \t  *) extra_objects=\"$extra_objects $f\" ;;"
    },
    {
      "sha": "35b4a79472c023a17e874e57e2381012ef1aafdb",
      "filename": "gas/po/POTFILES.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/po/POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/55add51eef6b4f89d44e1a6753d4dd926cab70c7/gas/po/POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/po/POTFILES.in?ref=55add51eef6b4f89d44e1a6753d4dd926cab70c7",
      "patch": "@@ -12,6 +12,7 @@ compress-debug.h\n cond.c\n config/atof-ieee.c\n config/atof-vax.c\n+config/bfin-lex-wrapper.c\n config/e-crisaout.c\n config/e-criself.c\n config/e-i386aout.c"
    }
  ]
}