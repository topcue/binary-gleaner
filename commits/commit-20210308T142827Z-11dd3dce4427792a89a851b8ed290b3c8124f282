{
  "sha": "11dd3dce4427792a89a851b8ed290b3c8124f282",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTFkZDNkY2U0NDI3NzkyYTg5YTg1MWI4ZWQyOTBiM2M4MTI0ZjI4Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:27Z"
    },
    "message": "Introduce rust_unop_ind_operation\n\nThis adds class rust_unop_ind_operation, which implements UNOP_IND for\nRust.  Rust requires a special case here to handle trait objects.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (eval_op_rust_ind): No longer static.  Add \"opcode\"\n\tparameter.\n\t(rust_evaluate_subexp): Update.\n\t* rust-exp.h (class rust_unop_ind_operation): New.",
    "tree": {
      "sha": "0f1ad5bed3c9bb0d431254120da71bbb62608b6c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f1ad5bed3c9bb0d431254120da71bbb62608b6c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11dd3dce4427792a89a851b8ed290b3c8124f282",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11dd3dce4427792a89a851b8ed290b3c8124f282",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11dd3dce4427792a89a851b8ed290b3c8124f282",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11dd3dce4427792a89a851b8ed290b3c8124f282/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fab435953629ec50e2c367a0fbe305e4e5abf3f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fab435953629ec50e2c367a0fbe305e4e5abf3f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fab435953629ec50e2c367a0fbe305e4e5abf3f"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 35,
    "deletions": 2
  },
  "files": [
    {
      "sha": "397a6067bfcd09808092d07e9cecfe6258099597",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=11dd3dce4427792a89a851b8ed290b3c8124f282",
      "patch": "@@ -1,3 +1,10 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (eval_op_rust_ind): No longer static.  Add \"opcode\"\n+\tparameter.\n+\t(rust_evaluate_subexp): Update.\n+\t* rust-exp.h (class rust_unop_ind_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (eval_op_rust_complement, eval_op_rust_array): No"
    },
    {
      "sha": "d16f921ca0047151618b072073f4d4e914fc0dd4",
      "filename": "gdb/rust-exp.h",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/rust-exp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/rust-exp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.h?ref=11dd3dce4427792a89a851b8ed290b3c8124f282",
      "patch": "@@ -33,6 +33,11 @@ extern struct value *eval_op_rust_array (struct type *expect_type,\n \t\t\t\t\t enum exp_opcode opcode,\n \t\t\t\t\t struct value *ncopies,\n \t\t\t\t\t struct value *elt);\n+extern struct value *eval_op_rust_ind (struct type *expect_type,\n+\t\t\t\t       struct expression *exp,\n+\t\t\t\t       enum noside noside,\n+\t\t\t\t       enum exp_opcode opcode,\n+\t\t\t\t       struct value *value);\n \n namespace expr\n {\n@@ -42,6 +47,26 @@ using rust_unop_compl_operation = unop_operation<UNOP_COMPLEMENT,\n using rust_array_operation = binop_operation<OP_RUST_ARRAY,\n \t\t\t\t\t     eval_op_rust_array>;\n \n+/* The Rust indirection operation.  */\n+class rust_unop_ind_operation\n+  : public unop_ind_operation\n+{\n+public:\n+\n+  using unop_ind_operation::unop_ind_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    if (noside != EVAL_NORMAL)\n+      return unop_ind_operation::evaluate (expect_type, exp, noside);\n+\n+    value *arg1 = std::get<0> (m_storage)->evaluate (nullptr, exp, noside);\n+    return eval_op_rust_ind (expect_type, exp, noside, UNOP_IND, arg1);\n+  }\n+};\n+\n } /* namespace expr */\n \n #endif /* RUST_EXP_H */"
    },
    {
      "sha": "f1f4cd334010eb6cf16f876ee915560f46e93a3c",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11dd3dce4427792a89a851b8ed290b3c8124f282/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=11dd3dce4427792a89a851b8ed290b3c8124f282",
      "patch": "@@ -1325,9 +1325,10 @@ rust_subscript (struct type *expect_type, struct expression *exp,\n \n /* A helper function for UNOP_IND.  */\n \n-static struct value *\n+struct value *\n eval_op_rust_ind (struct type *expect_type, struct expression *exp,\n \t\t  enum noside noside,\n+\t\t  enum exp_opcode opcode,\n \t\t  struct value *value)\n {\n   gdb_assert (noside == EVAL_NORMAL);\n@@ -1521,7 +1522,7 @@ rust_evaluate_subexp (struct type *expect_type, struct expression *exp,\n \t    ++*pos;\n \t    struct value *value = evaluate_subexp (expect_type, exp, pos,\n \t\t\t\t\t\t   noside);\n-\t    result = eval_op_rust_ind (expect_type, exp, noside, value);\n+\t    result = eval_op_rust_ind (expect_type, exp, noside, op, value);\n \t  }\n       }\n       break;"
    }
  ]
}