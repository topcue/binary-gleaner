{
  "sha": "7772f16880afc636b43184f443d173ec93302242",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Nzc3MmYxNjg4MGFmYzYzNmI0MzE4NGY0NDNkMTczZWM5MzMwMjI0Mg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-10T10:39:08Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-06-10T10:39:08Z"
    },
    "message": "x86: suppress LEA optimization in a specific 16-bit case\n\nIn 16-bit mode a 16-bit address size LEA with a 16-bit displacement and\na 32-bit destination is shorter to encode than the corresponding MOV.\nCommit fe134c656991 (\"x86: optimize LEA\")'s promise was to only do the\ntransformation when the encoding size wouldn't grow, i.e. it did go a\nlittle too far. Restrict this specific case of the transformation to\n-O2.",
    "tree": {
      "sha": "df018a13c360d06797e72505d1acbb995b55c1dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df018a13c360d06797e72505d1acbb995b55c1dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7772f16880afc636b43184f443d173ec93302242",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7772f16880afc636b43184f443d173ec93302242",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7772f16880afc636b43184f443d173ec93302242",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7772f16880afc636b43184f443d173ec93302242/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4bdd1a062098b6ba5f59ce1fcd15ef654df648b2"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 69,
    "deletions": 3
  },
  "files": [
    {
      "sha": "7133c3742351fd479597f623c6e0fa880864f4ec",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7772f16880afc636b43184f443d173ec93302242/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7772f16880afc636b43184f443d173ec93302242/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7772f16880afc636b43184f443d173ec93302242",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (optimize_encoding): Suppress LEA conversion\n+\twhen it would grow code size in 16-bit mode.\n+\t* testsuite/gas/i386/lea16-optimize.d: Adjust expectations.\n+\t* testsuite/gas/i386/lea16-optimize2.d: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2021-06-08  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/quoted.d, testsuite/gas/i386/wrap32-text.d:"
    },
    {
      "sha": "47c12b97651d059a301c03b5503da75b1e368823",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7772f16880afc636b43184f443d173ec93302242/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7772f16880afc636b43184f443d173ec93302242/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=7772f16880afc636b43184f443d173ec93302242",
      "patch": "@@ -4140,6 +4140,13 @@ optimize_encoding (void)\n \t\t\t   ? i.op[1].regs->reg_type.bitfield.dword\n \t\t\t   : i.op[1].regs->reg_type.bitfield.word)))\n \t    return;\n+\t  /* In 16-bit mode converting LEA with 16-bit addressing and a 32-bit\n+\t     destination is going to grow encoding size.  */\n+\t  else if (flag_code == CODE_16BIT\n+\t\t   && (optimize <= 1 || optimize_for_space)\n+\t\t   && !i.prefix[ADDR_PREFIX]\n+\t\t   && i.op[1].regs->reg_type.bitfield.dword)\n+\t    return;\n \t  else\n \t    {\n \t      i.tm.base_opcode = 0xb8;"
    },
    {
      "sha": "cf215117cadb9b6ba16dd6b499f4b9fa264d49af",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=7772f16880afc636b43184f443d173ec93302242",
      "patch": "@@ -544,6 +544,7 @@ if [gas_32_check] then {\n     run_list_test \"optimize-7\" \"-I${srcdir}/$subdir -march=+noavx2 -al\"\n     run_dump_test \"lea-optimize\"\n     run_dump_test \"lea16-optimize\"\n+    run_dump_test \"lea16-optimize2\"\n     run_dump_test \"align-branch-1a\"\n     run_dump_test \"align-branch-1b\"\n     run_dump_test \"align-branch-1c\""
    },
    {
      "sha": "be3075886a8de9a452656f5ac66099fa58adf7fb",
      "filename": "gas/testsuite/gas/i386/lea16-optimize.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/lea16-optimize.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/lea16-optimize.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea16-optimize.d?ref=7772f16880afc636b43184f443d173ec93302242",
      "patch": "@@ -31,9 +31,9 @@ Disassembly of section .text:\n [ \t]*[0-9a-f]+:[ \t]+8b f6[ \t]+mov[ \t]+%si,%si\n [ \t]*[0-9a-f]+:[ \t]+66 8b c9[ \t]+mov[ \t]+%ecx,%ecx\n [ \t]*[0-9a-f]+:[ \t]+66 8b c1[ \t]+mov[ \t]+%ecx,%eax\n-[ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06 01 00[ \t]+lea[ \t]+0x1,%eax\n [ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n-[ \t]*[0-9a-f]+:[ \t]+66 b8 ff ff 00 00[ \t]+mov[ \t]+\\$0xffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06 ff ff[ \t]+lea[ \t]+-0x1,%eax\n [ \t]*[0-9a-f]+:[ \t]+b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n [ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n [ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n@@ -43,7 +43,7 @@ Disassembly of section .text:\n [ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n [ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n [ \t]*[0-9a-f]+:[ \t]+67 8d 05 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%ax\n-[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06 00 00[ \t]+lea[ \t]+0x0,%eax\n [ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n [ \t]*[0-9a-f]+:[ \t]+8d 47 ff[ \t]+lea[ \t]+-0x1\\(%bx\\),%ax\n [ \t]*[0-9a-f]+:[ \t]+8d 87 01 00[ \t]+lea[ \t]+0x1\\(%bx\\),%ax"
    },
    {
      "sha": "d95f9acc640bd8dab53918eaf0be0c3e8b10d7ff",
      "filename": "gas/testsuite/gas/i386/lea16-optimize2.d",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/lea16-optimize2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7772f16880afc636b43184f443d173ec93302242/gas/testsuite/gas/i386/lea16-optimize2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/lea16-optimize2.d?ref=7772f16880afc636b43184f443d173ec93302242",
      "patch": "@@ -0,0 +1,50 @@\n+#as: -O2 -q -I${srcdir}/$subdir\n+#objdump: -dw -Mi8086\n+#name: i386 16-bit LEA optimizations at -O2\n+#source: lea16.s\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <start>:\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 08[ \t]+lea[ \t]+\\(%eax,%ecx(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 48 01[ \t]+lea[ \t]+0x1\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 88 00 00 00 00[ \t]+lea[ \t]+0x0\\(%eax\\),%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 0c 25 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 00[ \t]+lea[ \t]+\\(%eax,%eax(,1)?\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 45 00 00 00 00[ \t]+lea[ \t]+0x0\\(,%eax,2\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 66 8d 04 25 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 00[ \t]+lea[ \t]+\\(%bx,%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c0[ \t]+mov[ \t]+%eax,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c8[ \t]+mov[ \t]+%eax,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 34[ \t]+lea[ \t]+\\(%si\\),%esi\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 04[ \t]+lea[ \t]+\\(%si\\),%eax\n+[ \t]*[0-9a-f]+:[ \t]+8b c0[ \t]+mov[ \t]+%ax,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+8b c8[ \t]+mov[ \t]+%ax,%cx\n+[ \t]*[0-9a-f]+:[ \t]+8b c6[ \t]+mov[ \t]+%si,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8b f6[ \t]+mov[ \t]+%si,%si\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c9[ \t]+mov[ \t]+%ecx,%ecx\n+[ \t]*[0-9a-f]+:[ \t]+66 8b c1[ \t]+mov[ \t]+%ecx,%eax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 ff ff 00 00[ \t]+mov[ \t]+\\$0xffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 01 00 00 00[ \t]+mov[ \t]+\\$0x1,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 02 00[ \t]+mov[ \t]+\\$0x2,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 ff ff ff ff[ \t]+mov[ \t]+\\$0xffffffff,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 fe ff[ \t]+mov[ \t]+\\$0xfffe,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 8d 06 00 00[ \t]+lea[ \t]+0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+67 8d 05 00 00 00 00[ \t]+addr32 lea[ \t]+0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+66 b8 00 00 00 00[ \t]+mov[ \t]+\\$0x0,%eax\n+[ \t]*[0-9a-f]+:[ \t]+b8 00 00[ \t]+mov[ \t]+\\$0x0,%ax\n+[ \t]*[0-9a-f]+:[ \t]+8d 47 ff[ \t]+lea[ \t]+-0x1\\(%bx\\),%ax\n+[ \t]*[0-9a-f]+:[ \t]+8d 87 01 00[ \t]+lea[ \t]+0x1\\(%bx\\),%ax\n+#pass"
    }
  ]
}