{
  "sha": "db22231044df03bbcb987496f3f29f0462b2e9ee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGIyMjIzMTA0NGRmMDNiYmNiOTg3NDk2ZjNmMjlmMDQ2MmIyZTllZQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-02-10T12:34:10Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-02-10T12:34:22Z"
    },
    "message": "gas: Pass max_bytes to TC_FRAG_INIT\n\nommit 3ae729d5a4f63740ed9a778960b17c2912b0bbdd\nAuthor: H.J. Lu <hjl.tools@gmail.com>\nDate:   Wed Mar 7 04:18:45 2018 -0800\n\n    x86: Rewrite NOP generation for fill and alignment\n\nincreased MAX_MEM_FOR_RS_ALIGN_CODE to 4095 which resulted in increase\nof assembler time and memory usage by 5 times for inputs with many\n.p2align directives, which is typical for LTO output.  This patch passes\nmax_bytes to TC_FRAG_INIT so that MAX_MEM_FOR_RS_ALIGN_CODE can be set\nas needed and tracked by backend it so that HANDLE_ALIGN can check the\nmaximum alignment for each rs_align_code frag.  Wall time to assemble\nthe same cc1plus.s:\n\nbefore:\n\n423.78user 0.89system 7:05.71elapsed 99%CPU\n\nafter:\n\n102.35user 0.27system 1:42.89elapsed 99%CPU\n\n\tPR gas/24165\n\t* frags.c (frag_var_init): Pass max_chars to TC_FRAG_INIT as\n\tmax_bytes.\n\t* config/tc-aarch64.h (TC_FRAG_INIT): Add and pass max_bytes to\n\taarch64_init_frag.\n\t* /config/tc-arm.h (TC_FRAG_INIT): And and pass max_bytes to\n\tarm_init_frag.\n\t* config/tc-avr.h (TC_FRAG_INIT): And and ignore max_bytes.\n\t* config/tc-ia64.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-mmix.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-nds32.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-ns32k.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-rl78.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-rx.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-score.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-tic54x.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-tic6x.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-xtensa.h (TC_FRAG_INIT): Likewise.\n\t* config/tc-i386.h (MAX_MEM_FOR_RS_ALIGN_CODE): Set to\n\t(alignment ? ((1 << alignment) - 1) : 1)\n\t(i386_tc_frag_data): Add max_bytes.\n\t(TC_FRAG_INIT): Add and track max_bytes.\n\t(HANDLE_ALIGN): Replace MAX_MEM_FOR_RS_ALIGN_CODE with\n\tfragP->tc_frag_data.max_bytes.\n\t* doc/internals.texi: Update TC_FRAG_TYPE with max_bytes.",
    "tree": {
      "sha": "192c026a57355102d8022e6600d95d916e9ff375",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/192c026a57355102d8022e6600d95d916e9ff375"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db22231044df03bbcb987496f3f29f0462b2e9ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db22231044df03bbcb987496f3f29f0462b2e9ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db22231044df03bbcb987496f3f29f0462b2e9ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db22231044df03bbcb987496f3f29f0462b2e9ee/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ab759ca8db37ffd3e32df5226e0b4ea16a81c849",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab759ca8db37ffd3e32df5226e0b4ea16a81c849",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ab759ca8db37ffd3e32df5226e0b4ea16a81c849"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 52,
    "deletions": 22
  },
  "files": [
    {
      "sha": "04ad383e89dcc44f78566fa9f43c119ac5be1733",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -1,3 +1,31 @@\n+2019-02-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/24165\n+\t* frags.c (frag_var_init): Pass max_chars to TC_FRAG_INIT as\n+\tmax_bytes.\n+\t* config/tc-aarch64.h (TC_FRAG_INIT): Add and pass max_bytes to\n+\taarch64_init_frag.\n+\t* /config/tc-arm.h (TC_FRAG_INIT): And and pass max_bytes to\n+\tarm_init_frag.\n+\t* config/tc-avr.h (TC_FRAG_INIT): And and ignore max_bytes.\n+\t* config/tc-ia64.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-mmix.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-nds32.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-ns32k.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-rl78.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-rx.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-score.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-tic54x.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-tic6x.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-xtensa.h (TC_FRAG_INIT): Likewise.\n+\t* config/tc-i386.h (MAX_MEM_FOR_RS_ALIGN_CODE): Set to\n+\t(alignment ? ((1 << alignment) - 1) : 1)\n+\t(i386_tc_frag_data): Add max_bytes.\n+\t(TC_FRAG_INIT): Add and track max_bytes.\n+\t(HANDLE_ALIGN): Replace MAX_MEM_FOR_RS_ALIGN_CODE with\n+\tfragP->tc_frag_data.max_bytes.\n+\t* doc/internals.texi: Update TC_FRAG_TYPE with max_bytes.\n+\n 2019-02-08  Jim Wilson  <jimw@sifive.com>\n \n \t* config/tc-riscv.c (validate_riscv_insn) <'C'>: Add 'z' support."
    },
    {
      "sha": "b54907218cf2cbe4ac72b875305d500fb4a46fbd",
      "filename": "gas/config/tc-aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -173,8 +173,7 @@ struct aarch64_frag_type\n };\n \n #define TC_FRAG_TYPE\t\tstruct aarch64_frag_type\n-/* NOTE: max_chars is a local variable from frag_var / frag_variant.  */\n-#define TC_FRAG_INIT(fragp)\taarch64_init_frag (fragp, max_chars)\n+#define TC_FRAG_INIT(fragp, max_bytes) aarch64_init_frag (fragp, max_bytes)\n #define HANDLE_ALIGN(fragp)\taarch64_handle_align (fragp)\n \n #define md_do_align(N, FILL, LEN, MAX, LABEL)\t\t\t\t\t\\"
    },
    {
      "sha": "0d5e79c7ad9fe9a8c416d6f95609a0e2596eba26",
      "filename": "gas/config/tc-arm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-arm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-arm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -229,8 +229,7 @@ arm_min (int am_p1, int am_p2)\n }\n \n #define TC_FRAG_TYPE\t\tstruct arm_frag_type\n-/* NOTE: max_chars is a local variable from frag_var / frag_variant.  */\n-#define TC_FRAG_INIT(fragp)\tarm_init_frag (fragp, max_chars)\n+#define TC_FRAG_INIT(fragp, max_bytes) arm_init_frag (fragp, max_bytes)\n #define TC_ALIGN_ZERO_IS_DEFAULT 1\n #define HANDLE_ALIGN(fragp)\tarm_handle_align (fragp)\n /* PR gas/19276: COFF/PE segment alignment is already handled in coff_frob_section().  */"
    },
    {
      "sha": "d58222ec7757b6e6c5fc14769e7f5b0c17c0609f",
      "filename": "gas/config/tc-avr.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-avr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-avr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-avr.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -243,5 +243,5 @@ struct avr_frag_data\n   unsigned int prev_opcode;\n };\n #define TC_FRAG_TYPE\t\t\tstruct avr_frag_data\n-#define TC_FRAG_INIT(frag)\t\tavr_frag_init (frag)\n+#define TC_FRAG_INIT(frag, max_bytes)\tavr_frag_init (frag)\n extern void avr_frag_init (fragS *);"
    },
    {
      "sha": "1f740e419ced068b4ff3467dabcf27e8f97d784a",
      "filename": "gas/config/tc-i386.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-i386.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-i386.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -206,7 +206,7 @@ if ((n)\t\t\t\t\t\t\t\t\t\\\n     goto around;\t\t\t\t\t\t\t\\\n   }\n \n-#define MAX_MEM_FOR_RS_ALIGN_CODE 4095\n+#define MAX_MEM_FOR_RS_ALIGN_CODE  (alignment ? ((1 << alignment) - 1) : 1)\n \n void i386_print_statistics (FILE *);\n #define tc_print_statistics i386_print_statistics\n@@ -251,19 +251,21 @@ struct i386_tc_frag_data\n   enum processor_type isa;\n   i386_cpu_flags isa_flags;\n   enum processor_type tune;\n+  unsigned int max_bytes;\n };\n \n /* We need to emit the right NOP pattern in .align frags.  This is\n    done after the text-to-bits assembly pass, so we need to mark it with\n    the isa/tune settings at the time the .align was assembled.  */\n #define TC_FRAG_TYPE struct i386_tc_frag_data\n \n-#define TC_FRAG_INIT(FRAGP)\t\t\t\t\t\\\n+#define TC_FRAG_INIT(FRAGP, MAX_BYTES)\t\t\t\t\\\n  do\t\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\\\n      (FRAGP)->tc_frag_data.isa = cpu_arch_isa;\t\t\t\\\n      (FRAGP)->tc_frag_data.isa_flags = cpu_arch_isa_flags;\t\\\n      (FRAGP)->tc_frag_data.tune = cpu_arch_tune;\t\t\\\n+     (FRAGP)->tc_frag_data.max_bytes = (MAX_BYTES);\t\t\\\n    }\t\t\t\t\t\t\t\t\\\n  while (0)\n \n@@ -280,7 +282,8 @@ if (fragP->fr_type == rs_align_code) \t\t\t\t\t\\\n     offsetT __count = (fragP->fr_next->fr_address\t\t\t\\\n \t\t       - fragP->fr_address\t\t\t\t\\\n \t\t       - fragP->fr_fix);\t\t\t\t\\\n-    if (__count > 0 && __count <= MAX_MEM_FOR_RS_ALIGN_CODE)\t\t\\\n+    if (__count > 0\t\t\t\t\t\t\t\\\n+\t&& (unsigned int) __count <= fragP->tc_frag_data.max_bytes)\t\\\n       md_generate_nops (fragP, fragP->fr_literal + fragP->fr_fix,\t\\\n \t\t\t__count, 0);\t\t\t\t\t\\\n   }"
    },
    {
      "sha": "b478532549a9b93586347880794829fefd290490",
      "filename": "gas/config/tc-ia64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-ia64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-ia64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ia64.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -166,7 +166,7 @@ void ia64_vms_note (void);\n \n /* Record if an alignment frag should end with a stop bit.  */\n #define TC_FRAG_TYPE\t\t\tint\n-#define TC_FRAG_INIT(FRAGP)\t\tdo {(FRAGP)->tc_frag_data = 0;}while (0)\n+#define TC_FRAG_INIT(FRAGP, MAX_BYTES)\tdo {(FRAGP)->tc_frag_data = 0;}while (0)\n \n /* Give an error if a frag containing code is not aligned to a 16 byte\n    boundary.  */"
    },
    {
      "sha": "c984f7ae080f8f38c32ed8806e99b3af7f849d82",
      "filename": "gas/config/tc-mmix.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-mmix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-mmix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mmix.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -179,7 +179,7 @@ extern long md_pcrel_from_section (struct fix *, segT);\n \n extern fragS *mmix_opcode_frag;\n #define TC_FRAG_TYPE fragS *\n-#define TC_FRAG_INIT(frag) (frag)->tc_frag_data = mmix_opcode_frag\n+#define TC_FRAG_INIT(frag, max_bytes) (frag)->tc_frag_data = mmix_opcode_frag\n \n /* We need to associate each section symbol with a list of GREGs defined\n    for that section/segment and sorted on offset, between the point where"
    },
    {
      "sha": "4d4da274d256119ed24d3f92e5bed95cd08499db",
      "filename": "gas/config/tc-nds32.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-nds32.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-nds32.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -191,7 +191,7 @@ struct nds32_frag_type\n extern void nds32_frag_init (fragS *);\n \n #define TC_FRAG_TYPE\t\t\t\tstruct nds32_frag_type\n-#define TC_FRAG_INIT(fragP)\t\t\tnds32_frag_init (fragP)\n+#define TC_FRAG_INIT(fragP, max_bytes)\t\tnds32_frag_init (fragP)\n \n /* CFI directive.  */\n extern void nds32_elf_frame_initial_instructions (void);"
    },
    {
      "sha": "a53ef976e44f8c71af0d64b9f7e8da787b7f007a",
      "filename": "gas/config/tc-ns32k.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-ns32k.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-ns32k.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ns32k.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -73,7 +73,7 @@ extern const struct relax_type md_relax_table[];\n       char         fr_bsr;\t\t\t\\\n     }\n \n-#define TC_FRAG_INIT(X)\t\t\t\t\\\n+#define TC_FRAG_INIT(X, MAX_BYTES)\t\t\\\n   do\t\t\t\t\t\t\\\n      {\t\t\t\t\t\t\\\n        frag_opcode_frag (X) = NULL;\t\t\\"
    },
    {
      "sha": "315bd7e7d367a6e05db81e56c0f7e3192481aebe",
      "filename": "gas/config/tc-rl78.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-rl78.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-rl78.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-rl78.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -53,7 +53,7 @@ extern void rl78_md_end (void);\n extern int rl78_relax_frag (segT, fragS *, long);\n \n #define TC_FRAG_TYPE struct rl78_bytesT *\n-#define TC_FRAG_INIT rl78_frag_init\n+#define TC_FRAG_INIT(fragp, max_bytes) rl78_frag_init (fragp)\n extern void rl78_frag_init (fragS *);\n \n /* Call md_pcrel_from_section(), not md_pcrel_from().  */"
    },
    {
      "sha": "09c50f94718195443cc44cca087d5c03963be6c0",
      "filename": "gas/config/tc-rx.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-rx.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-rx.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-rx.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -58,7 +58,7 @@ extern void rx_md_end (void);\n extern int rx_relax_frag (segT, fragS *, long);\n \n #define TC_FRAG_TYPE struct rx_bytesT *\n-#define TC_FRAG_INIT rx_frag_init\n+#define TC_FRAG_INIT(fragp, max_bytes) rx_frag_init (fragp)\n extern void rx_frag_init (fragS *);\n \n /* Call md_pcrel_from_section(), not md_pcrel_from().  */"
    },
    {
      "sha": "34cf5fdcd2aa1bddf92afe47de7c0b2954636f25",
      "filename": "gas/config/tc-score.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-score.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-score.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-score.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -62,7 +62,7 @@ struct score_tc_frag_data\n \n #define TC_FRAG_TYPE struct score_tc_frag_data\n \n-#define TC_FRAG_INIT(FRAGP) \\\n+#define TC_FRAG_INIT(FRAGP, MAX_BYTES) \\\n   do \\\n     { \\\n       (FRAGP)->tc_frag_data.is_insn = (((FRAGP)->fr_type == rs_machine_dependent) ? 1 : 0); \\"
    },
    {
      "sha": "0eda39603ebfd5c463019a3e23d344830e6baa1a",
      "filename": "gas/config/tc-tic54x.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-tic54x.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-tic54x.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic54x.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -62,7 +62,7 @@ struct bit_info\n \n /* We sometimes need to keep track of bit offsets within words */\n #define TC_FRAG_TYPE int\n-#define TC_FRAG_INIT(FRAGP) do {(FRAGP)->tc_frag_data = 0;}while (0)\n+#define TC_FRAG_INIT(FRAGP, MAX_BYTES) do {(FRAGP)->tc_frag_data = 0;}while (0)\n \n /* tell GAS whether the given token is indeed a code label */\n #define TC_START_LABEL_WITHOUT_COLON(NUL_CHAR, NEXT_CHAR) \\"
    },
    {
      "sha": "fbca6376c207cb6fcc6b71f8d7e67ca1281f16c4",
      "filename": "gas/config/tc-tic6x.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-tic6x.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-tic6x.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic6x.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -130,7 +130,7 @@ typedef struct\n   bfd_boolean can_cross_fp_boundary;\n } tic6x_frag_info;\n #define TC_FRAG_TYPE tic6x_frag_info\n-#define TC_FRAG_INIT(fragP) tic6x_frag_init (fragP)\n+#define TC_FRAG_INIT(fragP, max_bytes) tic6x_frag_init (fragP)\n extern void tic6x_frag_init (fragS *fragp);\n \n typedef struct"
    },
    {
      "sha": "6889d92a4fb668a35e14899aeb05ee5ba4c4eef2",
      "filename": "gas/config/tc-xtensa.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-xtensa.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/config/tc-xtensa.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-xtensa.h?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -356,7 +356,7 @@ extern void xtensa_init (int, char **);\n #define TC_FIX_TYPE\t\t\txtensa_fix_data\n #define TC_INIT_FIX_DATA(x)\t\txtensa_init_fix_data (x)\n #define TC_FRAG_TYPE\t\t\tstruct xtensa_frag_type\n-#define TC_FRAG_INIT(frag)\t\txtensa_frag_init (frag)\n+#define TC_FRAG_INIT(frag, max_bytes)\txtensa_frag_init (frag)\n #define TC_FORCE_RELOCATION(fix)\txtensa_force_relocation (fix)\n #define TC_FORCE_RELOCATION_SUB_SAME(fix, seg) \\\n   (GENERIC_FORCE_RELOCATION_SUB_SAME (fix, seg)\t\\"
    },
    {
      "sha": "a50880d635ff44293dfaedf908895c8b1b57a98f",
      "filename": "gas/doc/internals.texi",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/doc/internals.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/doc/internals.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/internals.texi?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -1118,10 +1118,11 @@ These fields are defined with the @code{TC_FIX_TYPE} macro.\n A C statement to output target specific debugging information for\n fixup @var{fixp} to @var{stream}.  This macro is called by @code{print_fixup}.\n \n-@item TC_FRAG_INIT (@var{fragp})\n+@item TC_FRAG_INIT (@var{fragp}, @var{max_bytes})\n @cindex TC_FRAG_INIT\n-A C statement to initialize the target specific fields of frag @var{fragp}.\n-These fields are defined with the @code{TC_FRAG_TYPE} macro.\n+A C statement to initialize the target specific fields of frag @var{fragp}\n+with maximum number of bytes @var{max_bytes}.  These fields are defined\n+with the @code{TC_FRAG_TYPE} macro.\n \n @item md_number_to_chars\n @cindex md_number_to_chars"
    },
    {
      "sha": "90096ff696d7b4809a487b3f4d73fc1a7d1fe6cb",
      "filename": "gas/frags.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/frags.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db22231044df03bbcb987496f3f29f0462b2e9ee/gas/frags.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/frags.c?ref=db22231044df03bbcb987496f3f29f0462b2e9ee",
      "patch": "@@ -238,7 +238,7 @@ frag_var_init (relax_stateT type, size_t max_chars, size_t var,\n   frag_now->fr_cgen.opinfo = 0;\n #endif\n #ifdef TC_FRAG_INIT\n-  TC_FRAG_INIT (frag_now);\n+  TC_FRAG_INIT (frag_now, max_chars);\n #endif\n   frag_now->fr_file = as_where (&frag_now->fr_line);\n "
    }
  ]
}