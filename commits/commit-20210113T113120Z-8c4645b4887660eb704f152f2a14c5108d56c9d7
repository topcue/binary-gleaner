{
  "sha": "8c4645b4887660eb704f152f2a14c5108d56c9d7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGM0NjQ1YjQ4ODc2NjBlYjcwNGYxNTJmMmExNGM1MTA4ZDU2YzlkNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-13T04:47:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-13T11:31:20Z"
    },
    "message": "Remove sflag_info param from wild callback functions\n\n\t* ldlang.h (callback_t): Remove flag_info function parameter.\n\t* ldlang.c (walk_wild_consider_section): Adjust to suit.\n\t(walk_wild_section_general): Likewise.\n\t(output_section_callback_fast, output_section_callback): Likewise.\n\t(check_section_callback, gc_section_callback): Likewise.\n\t(find_relro_section_callback): Likewise.",
    "tree": {
      "sha": "f5fb38cd1af37a883cf92962f7b2bd39f758cf3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f5fb38cd1af37a883cf92962f7b2bd39f758cf3b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c4645b4887660eb704f152f2a14c5108d56c9d7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c4645b4887660eb704f152f2a14c5108d56c9d7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c4645b4887660eb704f152f2a14c5108d56c9d7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c4645b4887660eb704f152f2a14c5108d56c9d7/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ce40d1a5184271aa01675b55be8c04dfc320eee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ce40d1a5184271aa01675b55be8c04dfc320eee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2ce40d1a5184271aa01675b55be8c04dfc320eee"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 14,
    "deletions": 11
  },
  "files": [
    {
      "sha": "0224aef5a32cf6a230d7b248464acd7218236dda",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8c4645b4887660eb704f152f2a14c5108d56c9d7",
      "patch": "@@ -1,3 +1,12 @@\n+2021-01-13  Alan Modra  <amodra@gmail.com>\n+\n+\t* ldlang.h (callback_t): Remove flag_info function parameter.\n+\t* ldlang.c (walk_wild_consider_section): Adjust to suit.\n+\t(walk_wild_section_general): Likewise.\n+\t(output_section_callback_fast, output_section_callback): Likewise.\n+\t(check_section_callback, gc_section_callback): Likewise.\n+\t(find_relro_section_callback): Likewise.\n+\n 2021-01-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/26792"
    },
    {
      "sha": "4d3560fb1d266454932f2a284b428b441d047ceb",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=8c4645b4887660eb704f152f2a14c5108d56c9d7",
      "patch": "@@ -320,7 +320,7 @@ walk_wild_consider_section (lang_wild_statement_type *ptr,\n   if (walk_wild_file_in_exclude_list (sec->spec.exclude_name_list, file))\n     return;\n \n-  (*callback) (ptr, sec, s, ptr->section_flag_list, file, data);\n+  (*callback) (ptr, sec, s, file, data);\n }\n \n /* Lowest common denominator routine that can handle everything correctly,\n@@ -339,7 +339,7 @@ walk_wild_section_general (lang_wild_statement_type *ptr,\n     {\n       sec = ptr->section_list;\n       if (sec == NULL)\n-\t(*callback) (ptr, sec, s, ptr->section_flag_list, file, data);\n+\t(*callback) (ptr, sec, s, file, data);\n \n       while (sec != NULL)\n \t{\n@@ -566,7 +566,6 @@ static void\n output_section_callback_fast (lang_wild_statement_type *ptr,\n \t\t\t      struct wildcard_list *sec,\n \t\t\t      asection *section,\n-\t\t\t      struct flag_info *sflag_list ATTRIBUTE_UNUSED,\n \t\t\t      lang_input_statement_type *file,\n \t\t\t      void *output)\n {\n@@ -2823,7 +2822,6 @@ static void\n output_section_callback (lang_wild_statement_type *ptr,\n \t\t\t struct wildcard_list *sec,\n \t\t\t asection *section,\n-\t\t\t struct flag_info *sflag_info,\n \t\t\t lang_input_statement_type *file,\n \t\t\t void *output)\n {\n@@ -2844,14 +2842,14 @@ output_section_callback (lang_wild_statement_type *ptr,\n      of the current list.  */\n \n   if (before == NULL)\n-    lang_add_section (&ptr->children, section, sflag_info, os);\n+    lang_add_section (&ptr->children, section, ptr->section_flag_list, os);\n   else\n     {\n       lang_statement_list_type list;\n       lang_statement_union_type **pp;\n \n       lang_list_init (&list);\n-      lang_add_section (&list, section, sflag_info, os);\n+      lang_add_section (&list, section, ptr->section_flag_list, os);\n \n       /* If we are discarding the section, LIST.HEAD will\n \t be NULL.  */\n@@ -2877,7 +2875,6 @@ static void\n check_section_callback (lang_wild_statement_type *ptr ATTRIBUTE_UNUSED,\n \t\t\tstruct wildcard_list *sec ATTRIBUTE_UNUSED,\n \t\t\tasection *section,\n-\t\t\tstruct flag_info *sflag_info ATTRIBUTE_UNUSED,\n \t\t\tlang_input_statement_type *file ATTRIBUTE_UNUSED,\n \t\t\tvoid *output)\n {\n@@ -7490,7 +7487,6 @@ static void\n gc_section_callback (lang_wild_statement_type *ptr,\n \t\t     struct wildcard_list *sec,\n \t\t     asection *section,\n-\t\t     struct flag_info *sflag_info ATTRIBUTE_UNUSED,\n \t\t     lang_input_statement_type *file ATTRIBUTE_UNUSED,\n \t\t     void *data ATTRIBUTE_UNUSED)\n {\n@@ -7563,7 +7559,6 @@ static void\n find_relro_section_callback (lang_wild_statement_type *ptr ATTRIBUTE_UNUSED,\n \t\t\t     struct wildcard_list *sec ATTRIBUTE_UNUSED,\n \t\t\t     asection *section,\n-\t\t\t     struct flag_info *sflag_info ATTRIBUTE_UNUSED,\n \t\t\t     lang_input_statement_type *file ATTRIBUTE_UNUSED,\n \t\t\t     void *data)\n {"
    },
    {
      "sha": "205c305cceaf8ed90038d5961c1f0e276b5d23f7",
      "filename": "ld/ldlang.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ldlang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c4645b4887660eb704f152f2a14c5108d56c9d7/ld/ldlang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.h?ref=8c4645b4887660eb704f152f2a14c5108d56c9d7",
      "patch": "@@ -349,8 +349,7 @@ bfd_input_just_syms (const bfd *abfd)\n typedef struct lang_wild_statement_struct lang_wild_statement_type;\n \n typedef void (*callback_t) (lang_wild_statement_type *, struct wildcard_list *,\n-\t\t\t    asection *, struct flag_info *,\n-\t\t\t    lang_input_statement_type *, void *);\n+\t\t\t    asection *, lang_input_statement_type *, void *);\n \n typedef void (*walk_wild_section_handler_t) (lang_wild_statement_type *,\n \t\t\t\t\t     lang_input_statement_type *,"
    }
  ]
}