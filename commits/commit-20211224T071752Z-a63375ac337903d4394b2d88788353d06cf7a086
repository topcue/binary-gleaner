{
  "sha": "a63375ac337903d4394b2d88788353d06cf7a086",
  "node_id": "C_kwDOANOeidoAKGE2MzM3NWFjMzM3OTAzZDQzOTRiMmQ4ODc4ODM1M2QwNmNmN2EwODY",
  "commit": {
    "author": {
      "name": "Vineet Gupta",
      "email": "vineetg@rivosinc.com",
      "date": "2021-12-21T02:34:13Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-12-24T07:17:52Z"
    },
    "message": "RISC-V: Hypervisor ext: support Privileged Spec 1.12\n\nThis is the Hypervisor Extension 1.0\n\n - Hypervisor Memory-Management Instructions\n   HFENCE.VVMA, HFENCE.GVMA,\n\n - Hypervisor Virtual Machine Load and Store Instructions\n   HLV.B, HLV.BU,          HSV.B,\n   HLV.H, HLV.HU, HLVX.HU, HSB.H,\n   HLV.W, HLV.WU, HLVX.WU, HSV.W,\n   HLV.D,                  HSV.D\n\n - Hypervisor CSRs (some new, some address changed)\n   hstatus, hedeleg, hideleg, hie, hcounteren, hgeie, htval, hip, hvip,\n   htinst, hgeip, henvcfg, henvcfgh, hgatp, hcontext, htimedelta, htimedeltah,\n   vsstatus, vsie, vstvec, vsscratch, vsepc, vscause, vstval, vsip, vsatp,\n\nNote that following were added already as part of svinval extension\nsupport:\n   HINVAL.GVMA, HINVAL.VVMA\n\nSigned-off-by: Vineet Gupta <vineetg@rivosinc.com>\nReviewed-by: Palmer Dabbelt <palmer@rivosinc.com>\nReviewed-by: Nelson Chu <nelson.chu@sifive.com>\n\nbfd/\n\t* cpu-riscv.c (riscv_priv_specs): Added entry for 1.12.\n\t* cpu-riscv.h (enum riscv_spec_class): Added PRIV_SPEC_CLASS_1P12.\ngas/\n\t* config/tc-riscv.c (abort_version): Updated comment.\n\t(validate_riscv_insn): Annotate switch-break.\n\t* testsuite/gas/riscv/h-ext-32.d: New testcase for hypervisor.\n\t* testsuite/gas/riscv/h-ext-32.s: Likewise.\n\t* testsuite/gas/riscv/h-ext-64.d: Likewise.\n\t* testsuite/gas/riscv/h-ext-64.s: Likewise.\ninclude/\n\t* opcode/riscv-opc.h: Added encodings for hypervisor csrs and\n\tinstrcutions.\nopcodes/\n\t* riscv-opc.c (riscv_opcodes): Added hypervisor instrcutions.",
    "tree": {
      "sha": "30b22f80ca8d3441085115169e27be536f8d63d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30b22f80ca8d3441085115169e27be536f8d63d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a63375ac337903d4394b2d88788353d06cf7a086",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a63375ac337903d4394b2d88788353d06cf7a086",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a63375ac337903d4394b2d88788353d06cf7a086",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a63375ac337903d4394b2d88788353d06cf7a086/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "5c3ffbc4dd9454c56598e28a25d8d0c0faf1e8bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c3ffbc4dd9454c56598e28a25d8d0c0faf1e8bc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5c3ffbc4dd9454c56598e28a25d8d0c0faf1e8bc"
    }
  ],
  "stats": {
    "total": 441,
    "additions": 436,
    "deletions": 5
  },
  "files": [
    {
      "sha": "5038029ce01406199d623a9a2e670f88b9a0dc2e",
      "filename": "bfd/cpu-riscv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/bfd/cpu-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/bfd/cpu-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-riscv.c?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -117,6 +117,7 @@ const struct riscv_spec riscv_priv_specs[] =\n   {\"1.9.1\", PRIV_SPEC_CLASS_1P9P1},\n   {\"1.10\",  PRIV_SPEC_CLASS_1P10},\n   {\"1.11\",  PRIV_SPEC_CLASS_1P11},\n+  {\"1.12\",  PRIV_SPEC_CLASS_1P12},\n };\n \n /* Get the corresponding CSR version class by giving privilege"
    },
    {
      "sha": "b251d6312b820c15532301e5e2b1b8f50055678b",
      "filename": "bfd/cpu-riscv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/bfd/cpu-riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/bfd/cpu-riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-riscv.h?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -32,6 +32,7 @@ enum riscv_spec_class\n   PRIV_SPEC_CLASS_1P9P1,\n   PRIV_SPEC_CLASS_1P10,\n   PRIV_SPEC_CLASS_1P11,\n+  PRIV_SPEC_CLASS_1P12,\n   PRIV_SPEC_CLASS_DRAFT,\n };\n "
    },
    {
      "sha": "dbf0e23c4563ba759975ea677b4380129fe3ea97",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -82,7 +82,7 @@ struct riscv_csr_extra\n   enum riscv_spec_class define_version;\n \n   /* Record the CSR is aborted/invalid from which versions.  If it isn't\n-     aborted in the current version, then it should be CSR_CLASS_VDRAFT.  */\n+     aborted in the current version, then it should be PRIV_SPEC_CLASS_DRAFT.  */\n   enum riscv_spec_class abort_version;\n \n   /* The CSR may have more than one setting.  */\n@@ -1104,7 +1104,7 @@ validate_riscv_insn (const struct riscv_opcode *opc, int length)\n \t    default:\n \t      goto unknown_validate_operand;\n \t    }\n-\t  break;\n+\t  break;  /* end RVC */\n \tcase 'V': /* RVV */\n \t  switch (*++oparg)\n \t    {\n@@ -1128,7 +1128,7 @@ validate_riscv_insn (const struct riscv_opcode *opc, int length)\n \t    default:\n \t      goto unknown_validate_operand;\n \t    }\n-\t  break;\n+\t  break; /* end RVV */\n \tcase ',': break;\n \tcase '(': break;\n \tcase ')': break;\n@@ -2605,7 +2605,7 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n \t\tdefault:\n \t\t  goto unknown_riscv_ip_operand;\n \t\t}\n-\t      break;\n+\t      break; /* end RVC */\n \n \t    case 'V': /* RVV */\n \t      switch (*++oparg)\n@@ -2771,7 +2771,7 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n \t\tdefault:\n \t\t  goto unknown_riscv_ip_operand;\n \t\t}\n-\t      break;\n+\t      break; /* end RVV */\n \n \t    case ',':\n \t      ++argnum;"
    },
    {
      "sha": "870b847adf9474606b517da4cc73be0ebf9d2f33",
      "filename": "gas/testsuite/gas/riscv/h-ext-32.d",
      "status": "added",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/h-ext-32.d?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -0,0 +1,82 @@\n+#as: -march=rv32i -mpriv-spec=1.12\n+#source: h-ext-32.s\n+#objdump: -d\n+\n+.*:[  \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+[0-9a-f]+:[ \t]+22000073[ \t]+hfence.vvma\n+[ \t]+[0-9a-f]+:[ \t]+22050073[ \t]+hfence.vvma[ \t]+a0\n+[ \t]+[0-9a-f]+:[ \t]+22b00073[ \t]+hfence.vvma[ \t]+zero,a1\n+[ \t]+[0-9a-f]+:[ \t]+22c58073[ \t]+hfence.vvma[ \t]+a1,a2\n+[ \t]+[0-9a-f]+:[ \t]+62000073[ \t]+hfence.gvma\n+[ \t]+[0-9a-f]+:[ \t]+62050073[ \t]+hfence.gvma[ \t]+a0\n+[ \t]+[0-9a-f]+:[ \t]+62b00073[ \t]+hfence.gvma[ \t]+zero,a1\n+[ \t]+[0-9a-f]+:[ \t]+62c58073[ \t]+hfence.gvma[ \t]+a1,a2\n+[     \t]+[0-9a-f]+:[  \t]+6005c573[    \t]+hlv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6005c573[    \t]+hlv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6015c573[    \t]+hlv.bu[     \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+640645f3[    \t]+hlv.h[      \t]+a1,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+6415c5f3[    \t]+hlv.hu[     \t]+a1,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+643645f3[    \t]+hlvx.hu[    \t]+a1,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+68064673[    \t]+hlv.w[      \t]+a2,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+6836c673[    \t]+hlvx.wu[    \t]+a2,\\(a3\\)\n+[     \t]+[0-9a-f]+:[  \t]+62a5c073[    \t]+hsv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+62a5c073[    \t]+hsv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+66a5c073[    \t]+hsv.h[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6aa5c073[    \t]+hsv.w[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+60002573[    \t]+csrr[       \t]+a0,hstatus\n+[     \t]+[0-9a-f]+:[  \t]+60059073[    \t]+csrw[       \t]+hstatus,a1\n+[     \t]+[0-9a-f]+:[  \t]+60202573[    \t]+csrr[       \t]+a0,hedeleg\n+[     \t]+[0-9a-f]+:[  \t]+60259073[    \t]+csrw[       \t]+hedeleg,a1\n+[     \t]+[0-9a-f]+:[  \t]+60302573[    \t]+csrr[       \t]+a0,hideleg\n+[     \t]+[0-9a-f]+:[  \t]+60359073[    \t]+csrw[       \t]+hideleg,a1\n+[     \t]+[0-9a-f]+:[  \t]+60402573[    \t]+csrr[       \t]+a0,hie\n+[     \t]+[0-9a-f]+:[  \t]+60459073[    \t]+csrw[       \t]+hie,a1\n+[     \t]+[0-9a-f]+:[  \t]+60602573[    \t]+csrr[       \t]+a0,hcounteren\n+[     \t]+[0-9a-f]+:[  \t]+60659073[    \t]+csrw[       \t]+hcounteren,a1\n+[     \t]+[0-9a-f]+:[  \t]+60702573[    \t]+csrr[       \t]+a0,hgeie\n+[     \t]+[0-9a-f]+:[  \t]+60759073[    \t]+csrw[       \t]+hgeie,a1\n+[     \t]+[0-9a-f]+:[  \t]+64302573[    \t]+csrr[       \t]+a0,htval\n+[     \t]+[0-9a-f]+:[  \t]+64359073[    \t]+csrw[       \t]+htval,a1\n+[     \t]+[0-9a-f]+:[  \t]+64402573[    \t]+csrr[       \t]+a0,hip\n+[     \t]+[0-9a-f]+:[  \t]+64459073[    \t]+csrw[       \t]+hip,a1\n+[     \t]+[0-9a-f]+:[  \t]+64502573[    \t]+csrr[       \t]+a0,hvip\n+[     \t]+[0-9a-f]+:[  \t]+64559073[    \t]+csrw[       \t]+hvip,a1\n+[     \t]+[0-9a-f]+:[  \t]+64a02573[    \t]+csrr[       \t]+a0,htinst\n+[     \t]+[0-9a-f]+:[  \t]+64a59073[    \t]+csrw[       \t]+htinst,a1\n+[     \t]+[0-9a-f]+:[  \t]+e1202573[    \t]+csrr[       \t]+a0,hgeip\n+[     \t]+[0-9a-f]+:[  \t]+e1259073[    \t]+csrw[       \t]+hgeip,a1\n+[     \t]+[0-9a-f]+:[  \t]+60a02573[    \t]+csrr[       \t]+a0,henvcfg\n+[     \t]+[0-9a-f]+:[  \t]+60a59073[    \t]+csrw[       \t]+henvcfg,a1\n+[     \t]+[0-9a-f]+:[  \t]+61a02573[    \t]+csrr[       \t]+a0,henvcfgh\n+[     \t]+[0-9a-f]+:[  \t]+61a59073[    \t]+csrw[       \t]+henvcfgh,a1\n+[     \t]+[0-9a-f]+:[  \t]+68002573[    \t]+csrr[       \t]+a0,hgatp\n+[     \t]+[0-9a-f]+:[  \t]+68059073[    \t]+csrw[       \t]+hgatp,a1\n+[     \t]+[0-9a-f]+:[  \t]+6a802573[    \t]+csrr[       \t]+a0,hcontext\n+[     \t]+[0-9a-f]+:[  \t]+6a859073[    \t]+csrw[       \t]+hcontext,a1\n+[     \t]+[0-9a-f]+:[  \t]+60502573[    \t]+csrr[       \t]+a0,htimedelta\n+[     \t]+[0-9a-f]+:[  \t]+60559073[    \t]+csrw[       \t]+htimedelta,a1\n+[     \t]+[0-9a-f]+:[  \t]+61502573[    \t]+csrr[       \t]+a0,htimedeltah\n+[     \t]+[0-9a-f]+:[  \t]+61559073[    \t]+csrw[       \t]+htimedeltah,a1\n+[     \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[       \t]+a0,vsstatus\n+[     \t]+[0-9a-f]+:[  \t]+20059073[    \t]+csrw[       \t]+vsstatus,a1\n+[     \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[       \t]+a0,vsie\n+[     \t]+[0-9a-f]+:[  \t]+20459073[    \t]+csrw[       \t]+vsie,a1\n+[     \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[       \t]+a0,vstvec\n+[     \t]+[0-9a-f]+:[  \t]+20559073[    \t]+csrw[       \t]+vstvec,a1\n+[     \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[       \t]+a0,vsscratch\n+[     \t]+[0-9a-f]+:[  \t]+24059073[    \t]+csrw[       \t]+vsscratch,a1\n+[     \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[       \t]+a0,vsepc\n+[     \t]+[0-9a-f]+:[  \t]+24159073[    \t]+csrw[       \t]+vsepc,a1\n+[     \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[       \t]+a0,vscause\n+[     \t]+[0-9a-f]+:[  \t]+24259073[    \t]+csrw[       \t]+vscause,a1\n+[     \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[       \t]+a0,vstval\n+[     \t]+[0-9a-f]+:[  \t]+24359073[    \t]+csrw[       \t]+vstval,a1\n+[     \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[       \t]+a0,vsip\n+[     \t]+[0-9a-f]+:[  \t]+24459073[    \t]+csrw[       \t]+vsip,a1\n+[     \t]+[0-9a-f]+:[  \t]+28002573[    \t]+csrr[       \t]+a0,vsatp\n+[     \t]+[0-9a-f]+:[  \t]+28059073[    \t]+csrw[       \t]+vsatp,a1"
    },
    {
      "sha": "63b0c9a22e04469e631307a3d4aa96bff7296d66",
      "filename": "gas/testsuite/gas/riscv/h-ext-32.s",
      "status": "added",
      "additions": 73,
      "deletions": 0,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/h-ext-32.s?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -0,0 +1,73 @@\n+\thfence.vvma\n+\thfence.vvma\ta0\n+\thfence.vvma\tx0, a1\n+\thfence.vvma\ta1, a2\n+\thfence.gvma\n+\thfence.gvma\ta0\n+\thfence.gvma\tx0, a1\n+\thfence.gvma\ta1, a2\n+\n+\thlv.b   a0, (a1)\n+\thlv.b   a0,0(a1)\n+\thlv.bu  a0, (a1)\n+\thlv.h   a1, (a2)\n+\thlv.hu  a1, (a1)\n+\thlvx.hu a1, (a2)\n+\thlv.w   a2, (a2)\n+\thlvx.wu a2, (a3)\n+\thsv.b   a0, (a1)\n+\thsv.b   a0,0(a1)\n+\thsv.h   a0, (a1)\n+\thsv.w   a0, (a1)\n+\tcsrr    a0, hstatus\n+\tcsrw    hstatus, a1\n+\tcsrr    a0, hedeleg\n+\tcsrw    hedeleg, a1\n+\tcsrr    a0, hideleg\n+\tcsrw    hideleg, a1\n+\tcsrr    a0, hie\n+\tcsrw    hie, a1\n+\tcsrr    a0, hcounteren\n+\tcsrw    hcounteren, a1\n+\tcsrr    a0, hgeie\n+\tcsrw    hgeie, a1\n+\tcsrr    a0, htval\n+\tcsrw    htval, a1\n+\tcsrr    a0, hip\n+\tcsrw    hip, a1\n+\tcsrr    a0, hvip\n+\tcsrw    hvip, a1\n+\tcsrr    a0, htinst\n+\tcsrw    htinst, a1\n+\tcsrr    a0, hgeip\n+\tcsrw    hgeip, a1\n+\tcsrr    a0, henvcfg\n+\tcsrw    henvcfg, a1\n+\tcsrr    a0, henvcfgh\n+\tcsrw    henvcfgh, a1\n+\tcsrr    a0, hgatp\n+\tcsrw    hgatp, a1\n+\tcsrr    a0, hcontext\n+\tcsrw    hcontext, a1\n+\tcsrr    a0, htimedelta\n+\tcsrw    htimedelta, a1\n+\tcsrr    a0, htimedeltah\n+\tcsrw    htimedeltah, a1\n+\tcsrr    a0, vsstatus\n+\tcsrw    vsstatus, a1\n+\tcsrr    a0, vsie\n+\tcsrw    vsie, a1\n+\tcsrr    a0, vstvec\n+\tcsrw    vstvec, a1\n+\tcsrr    a0, vsscratch\n+\tcsrw    vsscratch, a1\n+\tcsrr    a0, vsepc\n+\tcsrw    vsepc, a1\n+\tcsrr    a0, vscause\n+\tcsrw    vscause, a1\n+\tcsrr    a0, vstval\n+\tcsrw    vstval, a1\n+\tcsrr    a0, vsip\n+\tcsrw    vsip, a1\n+\tcsrr    a0, vsatp\n+\tcsrw    vsatp, a1"
    },
    {
      "sha": "f948c4dc3bd36a1d56548284c1c1e72bc8e617d4",
      "filename": "gas/testsuite/gas/riscv/h-ext-64.d",
      "status": "added",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/h-ext-64.d?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -0,0 +1,81 @@\n+#as: -march=rv64i -mpriv-spec=1.12\n+#source: h-ext-64.s\n+#objdump: -d\n+\n+.*:[  \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+[0-9a-f]+:[ \t]+22000073[ \t]+hfence.vvma\n+[ \t]+[0-9a-f]+:[ \t]+22050073[ \t]+hfence.vvma[ \t]+a0\n+[ \t]+[0-9a-f]+:[ \t]+22b00073[ \t]+hfence.vvma[ \t]+zero,a1\n+[ \t]+[0-9a-f]+:[ \t]+22c58073[ \t]+hfence.vvma[ \t]+a1,a2\n+[ \t]+[0-9a-f]+:[ \t]+62000073[ \t]+hfence.gvma\n+[ \t]+[0-9a-f]+:[ \t]+62050073[ \t]+hfence.gvma[ \t]+a0\n+[ \t]+[0-9a-f]+:[ \t]+62b00073[ \t]+hfence.gvma[ \t]+zero,a1\n+[ \t]+[0-9a-f]+:[ \t]+62c58073[ \t]+hfence.gvma[ \t]+a1,a2\n+[     \t]+[0-9a-f]+:[  \t]+6005c573[    \t]+hlv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6005c573[    \t]+hlv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6015c573[    \t]+hlv.bu[     \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+640645f3[    \t]+hlv.h[      \t]+a1,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+6415c5f3[    \t]+hlv.hu[     \t]+a1,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+643645f3[    \t]+hlvx.hu[    \t]+a1,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+68064673[    \t]+hlv.w[      \t]+a2,\\(a2\\)\n+[     \t]+[0-9a-f]+:[  \t]+6816c673[    \t]+hlv.wu[     \t]+a2,\\(a3\\)\n+[     \t]+[0-9a-f]+:[  \t]+6836c673[    \t]+hlvx.wu[    \t]+a2,\\(a3\\)\n+[     \t]+[0-9a-f]+:[  \t]+6c0746f3[    \t]+hlv.d[      \t]+a3,\\(a4\\)\n+[     \t]+[0-9a-f]+:[  \t]+62a5c073[    \t]+hsv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+62a5c073[    \t]+hsv.b[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+66a5c073[    \t]+hsv.h[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6aa5c073[    \t]+hsv.w[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+6ea5c073[    \t]+hsv.d[      \t]+a0,\\(a1\\)\n+[     \t]+[0-9a-f]+:[  \t]+60002573[    \t]+csrr[       \t]+a0,hstatus\n+[     \t]+[0-9a-f]+:[  \t]+60059073[    \t]+csrw[       \t]+hstatus,a1\n+[     \t]+[0-9a-f]+:[  \t]+60202573[    \t]+csrr[       \t]+a0,hedeleg\n+[     \t]+[0-9a-f]+:[  \t]+60259073[    \t]+csrw[       \t]+hedeleg,a1\n+[     \t]+[0-9a-f]+:[  \t]+60302573[    \t]+csrr[       \t]+a0,hideleg\n+[     \t]+[0-9a-f]+:[  \t]+60359073[    \t]+csrw[       \t]+hideleg,a1\n+[     \t]+[0-9a-f]+:[  \t]+60402573[    \t]+csrr[       \t]+a0,hie\n+[     \t]+[0-9a-f]+:[  \t]+60459073[    \t]+csrw[       \t]+hie,a1\n+[     \t]+[0-9a-f]+:[  \t]+60602573[    \t]+csrr[       \t]+a0,hcounteren\n+[     \t]+[0-9a-f]+:[  \t]+60659073[    \t]+csrw[       \t]+hcounteren,a1\n+[     \t]+[0-9a-f]+:[  \t]+60702573[    \t]+csrr[       \t]+a0,hgeie\n+[     \t]+[0-9a-f]+:[  \t]+60759073[    \t]+csrw[       \t]+hgeie,a1\n+[     \t]+[0-9a-f]+:[  \t]+64302573[    \t]+csrr[       \t]+a0,htval\n+[     \t]+[0-9a-f]+:[  \t]+64359073[    \t]+csrw[       \t]+htval,a1\n+[     \t]+[0-9a-f]+:[  \t]+64402573[    \t]+csrr[       \t]+a0,hip\n+[     \t]+[0-9a-f]+:[  \t]+64459073[    \t]+csrw[       \t]+hip,a1\n+[     \t]+[0-9a-f]+:[  \t]+64502573[    \t]+csrr[       \t]+a0,hvip\n+[     \t]+[0-9a-f]+:[  \t]+64559073[    \t]+csrw[       \t]+hvip,a1\n+[     \t]+[0-9a-f]+:[  \t]+64a02573[    \t]+csrr[       \t]+a0,htinst\n+[     \t]+[0-9a-f]+:[  \t]+64a59073[    \t]+csrw[       \t]+htinst,a1\n+[     \t]+[0-9a-f]+:[  \t]+e1202573[    \t]+csrr[       \t]+a0,hgeip\n+[     \t]+[0-9a-f]+:[  \t]+e1259073[    \t]+csrw[       \t]+hgeip,a1\n+[     \t]+[0-9a-f]+:[  \t]+60a02573[    \t]+csrr[       \t]+a0,henvcfg\n+[     \t]+[0-9a-f]+:[  \t]+60a59073[    \t]+csrw[       \t]+henvcfg,a1\n+[     \t]+[0-9a-f]+:[  \t]+68002573[    \t]+csrr[       \t]+a0,hgatp\n+[     \t]+[0-9a-f]+:[  \t]+68059073[    \t]+csrw[       \t]+hgatp,a1\n+[     \t]+[0-9a-f]+:[  \t]+6a802573[    \t]+csrr[       \t]+a0,hcontext\n+[     \t]+[0-9a-f]+:[  \t]+6a859073[    \t]+csrw[       \t]+hcontext,a1\n+[     \t]+[0-9a-f]+:[  \t]+60502573[    \t]+csrr[       \t]+a0,htimedelta\n+[     \t]+[0-9a-f]+:[  \t]+60559073[    \t]+csrw[       \t]+htimedelta,a1\n+[     \t]+[0-9a-f]+:[  \t]+20002573[    \t]+csrr[       \t]+a0,vsstatus\n+[     \t]+[0-9a-f]+:[  \t]+20059073[    \t]+csrw[       \t]+vsstatus,a1\n+[     \t]+[0-9a-f]+:[  \t]+20402573[    \t]+csrr[       \t]+a0,vsie\n+[     \t]+[0-9a-f]+:[  \t]+20459073[    \t]+csrw[       \t]+vsie,a1\n+[     \t]+[0-9a-f]+:[  \t]+20502573[    \t]+csrr[       \t]+a0,vstvec\n+[     \t]+[0-9a-f]+:[  \t]+20559073[    \t]+csrw[       \t]+vstvec,a1\n+[     \t]+[0-9a-f]+:[  \t]+24002573[    \t]+csrr[       \t]+a0,vsscratch\n+[     \t]+[0-9a-f]+:[  \t]+24059073[    \t]+csrw[       \t]+vsscratch,a1\n+[     \t]+[0-9a-f]+:[  \t]+24102573[    \t]+csrr[       \t]+a0,vsepc\n+[     \t]+[0-9a-f]+:[  \t]+24159073[    \t]+csrw[       \t]+vsepc,a1\n+[     \t]+[0-9a-f]+:[  \t]+24202573[    \t]+csrr[       \t]+a0,vscause\n+[     \t]+[0-9a-f]+:[  \t]+24259073[    \t]+csrw[       \t]+vscause,a1\n+[     \t]+[0-9a-f]+:[  \t]+24302573[    \t]+csrr[       \t]+a0,vstval\n+[     \t]+[0-9a-f]+:[  \t]+24359073[    \t]+csrw[       \t]+vstval,a1\n+[     \t]+[0-9a-f]+:[  \t]+24402573[    \t]+csrr[       \t]+a0,vsip\n+[     \t]+[0-9a-f]+:[  \t]+24459073[    \t]+csrw[       \t]+vsip,a1\n+[     \t]+[0-9a-f]+:[  \t]+28002573[    \t]+csrr[       \t]+a0,vsatp\n+[     \t]+[0-9a-f]+:[  \t]+28059073[    \t]+csrw[       \t]+vsatp,a1"
    },
    {
      "sha": "3f7a5b7667d3b5ed4fabd36a43062d044de1e34f",
      "filename": "gas/testsuite/gas/riscv/h-ext-64.s",
      "status": "added",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/gas/testsuite/gas/riscv/h-ext-64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/h-ext-64.s?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -0,0 +1,72 @@\n+\thfence.vvma\n+\thfence.vvma\ta0\n+\thfence.vvma\tx0, a1\n+\thfence.vvma\ta1, a2\n+\thfence.gvma\n+\thfence.gvma\ta0\n+\thfence.gvma\tx0, a1\n+\thfence.gvma\ta1, a2\n+\n+\thlv.b   a0, (a1)\n+\thlv.b   a0,0(a1)\n+\thlv.bu  a0, (a1)\n+\thlv.h   a1, (a2)\n+\thlv.hu  a1, (a1)\n+\thlvx.hu a1, (a2)\n+\thlv.w   a2, (a2)\n+\thlv.wu  a2, (a3)\n+\thlvx.wu a2, (a3)\n+\thlv.d   a3, (a4)\n+\thsv.b   a0, (a1)\n+\thsv.b   a0,0(a1)\n+\thsv.h   a0, (a1)\n+\thsv.w   a0, (a1)\n+\thsv.d   a0, (a1)\n+\tcsrr    a0, hstatus\n+\tcsrw    hstatus, a1\n+\tcsrr    a0, hedeleg\n+\tcsrw    hedeleg, a1\n+\tcsrr    a0, hideleg\n+\tcsrw    hideleg, a1\n+\tcsrr    a0, hie\n+\tcsrw    hie, a1\n+\tcsrr    a0, hcounteren\n+\tcsrw    hcounteren, a1\n+\tcsrr    a0, hgeie\n+\tcsrw    hgeie, a1\n+\tcsrr    a0, htval\n+\tcsrw    htval, a1\n+\tcsrr    a0, hip\n+\tcsrw    hip, a1\n+\tcsrr    a0, hvip\n+\tcsrw    hvip, a1\n+\tcsrr    a0, htinst\n+\tcsrw    htinst, a1\n+\tcsrr    a0, hgeip\n+\tcsrw    hgeip, a1\n+\tcsrr    a0, henvcfg\n+\tcsrw    henvcfg, a1\n+\tcsrr    a0, hgatp\n+\tcsrw    hgatp, a1\n+\tcsrr    a0, hcontext\n+\tcsrw    hcontext, a1\n+\tcsrr    a0, htimedelta\n+\tcsrw    htimedelta, a1\n+\tcsrr    a0, vsstatus\n+\tcsrw    vsstatus, a1\n+\tcsrr    a0, vsie\n+\tcsrw    vsie, a1\n+\tcsrr    a0, vstvec\n+\tcsrw    vstvec, a1\n+\tcsrr    a0, vsscratch\n+\tcsrw    vsscratch, a1\n+\tcsrr    a0, vsepc\n+\tcsrw    vsepc, a1\n+\tcsrr    a0, vscause\n+\tcsrw    vscause, a1\n+\tcsrr    a0, vstval\n+\tcsrw    vstval, a1\n+\tcsrr    a0, vsip\n+\tcsrw    vsip, a1\n+\tcsrr    a0, vsatp\n+\tcsrw    vsatp, a1"
    },
    {
      "sha": "6ca2f8d93093069066c7eb79ed6e01e0c88ee5d3",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 100,
      "deletions": 0,
      "changes": 100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -1998,6 +1998,37 @@\n #define MASK_HINVAL_VVMA 0xfe007fff\n #define MATCH_HINVAL_GVMA 0x66000073\n #define MASK_HINVAL_GVMA 0xfe007fff\n+/* Hypervisor instruction.  */\n+#define MATCH_HFENCE_VVMA 0x22000073\n+#define MASK_HFENCE_VVMA 0xfe007fff\n+#define MATCH_HFENCE_GVMA 0x62000073\n+#define MASK_HFENCE_GVMA 0xfe007fff\n+#define MATCH_HLV_B 0x60004073\n+#define MASK_HLV_B 0xfff0707f\n+#define MATCH_HLV_H 0x64004073\n+#define MASK_HLV_H 0xfff0707f\n+#define MATCH_HLV_W 0x68004073\n+#define MASK_HLV_W 0xfff0707f\n+#define MATCH_HLV_D 0x6c004073\n+#define MASK_HLV_D 0xfff0707f\n+#define MATCH_HLV_BU 0x60104073\n+#define MASK_HLV_BU 0xfff0707f\n+#define MATCH_HLV_HU 0x64104073\n+#define MASK_HLV_HU 0xfff0707f\n+#define MATCH_HLV_WU 0x68104073\n+#define MASK_HLV_WU 0xfff0707f\n+#define MATCH_HLVX_HU 0x64304073\n+#define MASK_HLVX_HU 0xfff0707f\n+#define MATCH_HLVX_WU 0x68304073\n+#define MASK_HLVX_WU 0xfff0707f\n+#define MATCH_HSV_B 0x62004073\n+#define MASK_HSV_B 0xfe007fff\n+#define MATCH_HSV_H 0x66004073\n+#define MASK_HSV_H 0xfe007fff\n+#define MATCH_HSV_W 0x6a004073\n+#define MASK_HSV_W 0xfe007fff\n+#define MATCH_HSV_D 0x6e004073\n+#define MASK_HSV_D 0xfe007fff\n /* Privileged CSR addresses.  */\n #define CSR_USTATUS 0x0\n #define CSR_UIE 0x4\n@@ -2211,6 +2242,33 @@\n #define CSR_MHPMEVENT29 0x33d\n #define CSR_MHPMEVENT30 0x33e\n #define CSR_MHPMEVENT31 0x33f\n+/* Hypervisor Extension v1.0 (Privileged spec 1.12). */\n+#define CSR_HSTATUS 0x600\n+#define CSR_HEDELEG 0x602\n+#define CSR_HIDELEG 0x603\n+#define CSR_HIE 0x604\n+#define CSR_HCOUNTEREN 0x606\n+#define CSR_HGEIE 0x607\n+#define CSR_HTVAL 0x643\n+#define CSR_HIP 0x644\n+#define CSR_HVIP 0x645\n+#define CSR_HTINST 0x64a\n+#define CSR_HGEIP 0xe12\n+#define CSR_HENVCFG 0x60a\n+#define CSR_HENVCFGH 0x61a\n+#define CSR_HGATP 0x680\n+#define CSR_HCONTEXT 0x6a8\n+#define CSR_HTIMEDELTA 0x605\n+#define CSR_HTIMEDELTAH 0x615\n+#define CSR_VSSTATUS 0x200\n+#define CSR_VSIE 0x204\n+#define CSR_VSTVEC 0x205\n+#define CSR_VSSCRATCH 0x240\n+#define CSR_VSEPC 0x241\n+#define CSR_VSCAUSE 0x242\n+#define CSR_VSTVAL 0x243\n+#define CSR_VSIP 0x244\n+#define CSR_VSATP 0x280\n #define CSR_MBASE 0x380\n #define CSR_MBOUND 0x381\n #define CSR_MIBASE 0x382\n@@ -2555,6 +2613,21 @@ DECLARE_INSN(sfence_w_inval, MATCH_SFENCE_W_INVAL, MASK_SFENCE_W_INVAL)\n DECLARE_INSN(sfence_inval_ir, MATCH_SFENCE_INVAL_IR, MASK_SFENCE_INVAL_IR)\n DECLARE_INSN(hinval_vvma, MATCH_HINVAL_VVMA, MASK_HINVAL_VVMA)\n DECLARE_INSN(hinval_gvma, MATCH_HINVAL_GVMA, MASK_HINVAL_GVMA)\n+DECLARE_INSN(hfence_vvma, MATCH_HFENCE_VVMA, MASK_HFENCE_VVMA)\n+DECLARE_INSN(hfence_gvma, MATCH_HFENCE_GVMA, MASK_HFENCE_GVMA)\n+DECLARE_INSN(hlv_b, MATCH_HLV_B, MASK_HLV_B)\n+DECLARE_INSN(hlv_h, MATCH_HLV_H, MASK_HLV_H)\n+DECLARE_INSN(hlv_w, MATCH_HLV_W, MASK_HLV_W)\n+DECLARE_INSN(hlv_d, MATCH_HLV_D, MASK_HLV_D)\n+DECLARE_INSN(hlv_bu, MATCH_HLV_BU, MASK_HLV_BU)\n+DECLARE_INSN(hlv_hu, MATCH_HLV_HU, MASK_HLV_HU)\n+DECLARE_INSN(hlv_wu, MATCH_HLV_WU, MASK_HLV_WU)\n+DECLARE_INSN(hlvx_hu, MATCH_HLVX_HU, MASK_HLVX_HU)\n+DECLARE_INSN(hlvx_wu, MATCH_HLVX_WU, MASK_HLVX_WU)\n+DECLARE_INSN(hsv_b, MATCH_HSV_B, MASK_HSV_B)\n+DECLARE_INSN(hsv_h, MATCH_HSV_H, MASK_HSV_H)\n+DECLARE_INSN(hsv_w, MATCH_HSV_W, MASK_HSV_W)\n+DECLARE_INSN(hsv_d, MATCH_HSV_D, MASK_HSV_D)\n #endif /* DECLARE_INSN */\n #ifdef DECLARE_CSR\n /* Privileged CSRs.  */\n@@ -2770,6 +2843,33 @@ DECLARE_CSR(mhpmevent28, CSR_MHPMEVENT28, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PR\n DECLARE_CSR(mhpmevent29, CSR_MHPMEVENT29, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_DRAFT)\n DECLARE_CSR(mhpmevent30, CSR_MHPMEVENT30, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_DRAFT)\n DECLARE_CSR(mhpmevent31, CSR_MHPMEVENT31, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_DRAFT)\n+/* Hypervisor Ext v1.0 (Privileged spec 1.12).  */\n+DECLARE_CSR(hstatus, CSR_HSTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hedeleg, CSR_HEDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hideleg, CSR_HIDELEG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hie, CSR_HIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hcounteren, CSR_HCOUNTEREN, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hgeie, CSR_HGEIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(htval, CSR_HTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hip, CSR_HIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hvip, CSR_HVIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(htinst, CSR_HTINST, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hgeip, CSR_HGEIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(henvcfg, CSR_HENVCFG, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(henvcfgh, CSR_HENVCFGH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hgatp, CSR_HGATP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(hcontext, CSR_HCONTEXT, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(htimedelta, CSR_HTIMEDELTA, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(htimedeltah, CSR_HTIMEDELTAH, CSR_CLASS_I_32, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsstatus, CSR_VSSTATUS, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsie, CSR_VSIE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vstvec, CSR_VSTVEC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsscratch, CSR_VSSCRATCH, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsepc, CSR_VSEPC, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vscause, CSR_VSCAUSE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vstval, CSR_VSTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsip, CSR_VSIP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n+DECLARE_CSR(vsatp, CSR_VSATP, CSR_CLASS_I, PRIV_SPEC_CLASS_1P12, PRIV_SPEC_CLASS_DRAFT)\n /* Dropped CSRs.  */\n DECLARE_CSR(mbase, CSR_MBASE, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_1P10)\n DECLARE_CSR(mbound, CSR_MBOUND, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_1P10)"
    },
    {
      "sha": "4735b90fccf6dcb38e187f0644dae15eb7cf9480",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a63375ac337903d4394b2d88788353d06cf7a086/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a63375ac337903d4394b2d88788353d06cf7a086/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=a63375ac337903d4394b2d88788353d06cf7a086",
      "patch": "@@ -1732,6 +1732,27 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"hinval.vvma\",     0, INSN_CLASS_SVINVAL, \"s,t\", MATCH_HINVAL_VVMA, MASK_HINVAL_VVMA, match_opcode, 0 },\n {\"hinval.gvma\",     0, INSN_CLASS_SVINVAL, \"s,t\", MATCH_HINVAL_GVMA, MASK_HINVAL_GVMA, match_opcode, 0 },\n \n+/* Hypervisor instructions.  */\n+{\"hfence.vvma\", 0, INSN_CLASS_I, \"\",       MATCH_HFENCE_VVMA, MASK_HFENCE_VVMA|MASK_RS1|MASK_RS2, match_opcode, INSN_ALIAS },\n+{\"hfence.vvma\", 0, INSN_CLASS_I, \"s\",      MATCH_HFENCE_VVMA, MASK_HFENCE_VVMA|MASK_RS2, match_opcode, INSN_ALIAS },\n+{\"hfence.vvma\", 0, INSN_CLASS_I, \"s,t\",    MATCH_HFENCE_VVMA, MASK_HFENCE_VVMA, match_opcode, 0 },\n+{\"hfence.gvma\", 0, INSN_CLASS_I, \"\",       MATCH_HFENCE_GVMA, MASK_HFENCE_GVMA|MASK_RS1|MASK_RS2, match_opcode, INSN_ALIAS },\n+{\"hfence.gvma\", 0, INSN_CLASS_I, \"s\",      MATCH_HFENCE_GVMA, MASK_HFENCE_GVMA|MASK_RS2, match_opcode, INSN_ALIAS },\n+{\"hfence.gvma\", 0, INSN_CLASS_I, \"s,t\",    MATCH_HFENCE_GVMA, MASK_HFENCE_GVMA, match_opcode, 0 },\n+{\"hlv.b\",       0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_B, MASK_HLV_B, match_opcode, INSN_DREF|INSN_1_BYTE },\n+{\"hlv.bu\",      0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_BU, MASK_HLV_BU, match_opcode, INSN_DREF|INSN_1_BYTE },\n+{\"hlv.h\",       0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_H, MASK_HLV_H, match_opcode, INSN_DREF|INSN_2_BYTE },\n+{\"hlv.hu\",      0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_HU, MASK_HLV_HU, match_opcode, INSN_DREF|INSN_2_BYTE },\n+{\"hlvx.hu\",     0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLVX_HU, MASK_HLVX_HU, match_opcode, INSN_DREF|INSN_2_BYTE },\n+{\"hlv.w\",       0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_W, MASK_HLV_W, match_opcode, INSN_DREF|INSN_4_BYTE },\n+{\"hlv.wu\",     64, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_WU, MASK_HLV_WU, match_opcode, INSN_DREF|INSN_4_BYTE },\n+{\"hlvx.wu\",     0, INSN_CLASS_I, \"d,0(s)\", MATCH_HLVX_WU, MASK_HLVX_WU, match_opcode, INSN_DREF|INSN_4_BYTE },\n+{\"hlv.d\",      64, INSN_CLASS_I, \"d,0(s)\", MATCH_HLV_D, MASK_HLV_D, match_opcode, INSN_DREF|INSN_8_BYTE },\n+{\"hsv.b\",       0, INSN_CLASS_I, \"t,0(s)\", MATCH_HSV_B, MASK_HSV_B, match_opcode, INSN_DREF|INSN_1_BYTE },\n+{\"hsv.h\",       0, INSN_CLASS_I, \"t,0(s)\", MATCH_HSV_H, MASK_HSV_H, match_opcode, INSN_DREF|INSN_2_BYTE },\n+{\"hsv.w\",       0, INSN_CLASS_I, \"t,0(s)\", MATCH_HSV_W, MASK_HSV_W, match_opcode, INSN_DREF|INSN_4_BYTE },\n+{\"hsv.d\",      64, INSN_CLASS_I, \"t,0(s)\", MATCH_HSV_D, MASK_HSV_D, match_opcode, INSN_DREF|INSN_8_BYTE },\n+\n /* Terminate the list.  */\n {0, 0, INSN_CLASS_NONE, 0, 0, 0, 0, 0}\n };"
    }
  ]
}