{
  "sha": "a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTc1Y2Q5YTJjMTI5ZGZjMDg2Y2JlNTcwZWY5Y2ZmOWI4NDU3MGJiZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-11-14T23:11:15Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-20T16:15:57Z"
    },
    "message": "Add observable to watch current source symtab\n\nThis patch adds an observable, so that a later patch can change the\nTUI to notice when the user has selected a new source symtab, say via\n\"list\".\n\ngdb/ChangeLog\n2019-12-20  Tom Tromey  <tom@tromey.com>\n\n\t* source.c (struct current_source_location) <set, symtab, line>:\n\tNew methods.\n\t<m_symtab, m_line>: Rename.  Now private.\n\t(get_current_source_symtab_and_line)\n\t(set_default_source_symtab_and_line)\n\t(set_current_source_symtab_and_line)\n\t(clear_current_source_symtab_and_line, select_source_symtab)\n\t(info_source_command, print_source_lines_base)\n\t(info_line_command, search_command_helper): Update.\n\t* observable.h (current_source_symtab_and_line_changed): Declare\n\tobservable.\n\t* observable.c (current_source_symtab_and_line_changed): Define\n\tobservable.\n\nChange-Id: I3c0f6b40f2df84b590bdf5b5ec5ccd8423bb7f22",
    "tree": {
      "sha": "41c25e54e16683cf7ace77fd26f6325c7f28190a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41c25e54e16683cf7ace77fd26f6325c7f28190a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2dfd3df48dc7edb551718b3944eca6b35a7058a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2dfd3df48dc7edb551718b3944eca6b35a7058a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2dfd3df48dc7edb551718b3944eca6b35a7058a5"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 89,
    "deletions": 37
  },
  "files": [
    {
      "sha": "3939ebac426288f956e1959e9da140558381ebc8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "patch": "@@ -1,3 +1,19 @@\n+2019-12-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* source.c (struct current_source_location) <set, symtab, line>:\n+\tNew methods.\n+\t<m_symtab, m_line>: Rename.  Now private.\n+\t(get_current_source_symtab_and_line)\n+\t(set_default_source_symtab_and_line)\n+\t(set_current_source_symtab_and_line)\n+\t(clear_current_source_symtab_and_line, select_source_symtab)\n+\t(info_source_command, print_source_lines_base)\n+\t(info_line_command, search_command_helper): Update.\n+\t* observable.h (current_source_symtab_and_line_changed): Declare\n+\tobservable.\n+\t* observable.c (current_source_symtab_and_line_changed): Define\n+\tobservable.\n+\n 2019-12-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-hooks.c (tui_before_prompt): Change parameter to bool."
    },
    {
      "sha": "4806e1040c088eafac60bd9cae26edea6a016beb",
      "filename": "gdb/observable.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/observable.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/observable.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/observable.c?ref=a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "patch": "@@ -75,6 +75,7 @@ DEFINE_OBSERVABLE (inferior_call_post);\n DEFINE_OBSERVABLE (register_changed);\n DEFINE_OBSERVABLE (user_selected_context_changed);\n DEFINE_OBSERVABLE (source_styling_changed);\n+DEFINE_OBSERVABLE (current_source_symtab_and_line_changed);\n \n } /* namespace observers */\n } /* namespace gdb */"
    },
    {
      "sha": "0c41aa3f727095dcf0c8451787a7dd533c872a88",
      "filename": "gdb/observable.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/observable.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/observable.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/observable.h?ref=a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "patch": "@@ -241,6 +241,12 @@ extern observable<user_selected_what /* selection */>\n    should be reconsulted.  */\n extern observable<> source_styling_changed;\n \n+/* The CLI's notion of the current source has changed.  This differs\n+   from user_selected_context_changed in that it is also set by the\n+   \"list\" command.  */\n+\n+extern observable<> current_source_symtab_and_line_changed;\n+\n } /* namespace observers */\n \n } /* namespace gdb */"
    },
    {
      "sha": "f5cd2a37e4aa37e6bd753b746453158f6e021b2a",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 66,
      "deletions": 37,
      "changes": 103,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a75cd9a2c129dfc086cbe570ef9cff9b84570bbd/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=a75cd9a2c129dfc086cbe570ef9cff9b84570bbd",
      "patch": "@@ -47,6 +47,7 @@\n #include \"gdbsupport/pathstuff.h\"\n #include \"source-cache.h\"\n #include \"cli/cli-style.h\"\n+#include \"observable.h\"\n \n #define OPEN_MODE (O_RDONLY | O_BINARY)\n #define FDOPEN_MODE FOPEN_RB\n@@ -71,13 +72,39 @@ static struct substitute_path_rule *substitute_path_rules = NULL;\n \n struct current_source_location\n {\n+public:\n+\n+  current_source_location () = default;\n+\n+  /* Set the value.  */\n+  void set (struct symtab *s, int l)\n+  {\n+    m_symtab = s;\n+    m_line = l;\n+    gdb::observers::current_source_symtab_and_line_changed.notify ();\n+  }\n+\n+  /* Get the symtab.  */\n+  struct symtab *symtab () const\n+  {\n+    return m_symtab;\n+  }\n+\n+  /* Get the line number.  */\n+  int line () const\n+  {\n+    return m_line;\n+  }\n+\n+private:\n+\n   /* Symtab of default file for listing lines of.  */\n \n-  struct symtab *symtab = nullptr;\n+  struct symtab *m_symtab = nullptr;\n \n   /* Default next line to list.  */\n \n-  int line = 0;\n+  int m_line = 0;\n };\n \n static program_space_key<current_source_location> current_source_key;\n@@ -191,8 +218,8 @@ get_current_source_symtab_and_line (void)\n   current_source_location *loc = get_source_location (current_program_space);\n \n   cursal.pspace = current_program_space;\n-  cursal.symtab = loc->symtab;\n-  cursal.line = loc->line;\n+  cursal.symtab = loc->symtab ();\n+  cursal.line = loc->line ();\n   cursal.pc = 0;\n   cursal.end = 0;\n   \n@@ -215,7 +242,7 @@ set_default_source_symtab_and_line (void)\n \n   /* Pull in a current source symtab if necessary.  */\n   current_source_location *loc = get_source_location (current_program_space);\n-  if (loc->symtab == nullptr)\n+  if (loc->symtab () == nullptr)\n     select_source_symtab (0);\n }\n \n@@ -232,13 +259,12 @@ set_current_source_symtab_and_line (const symtab_and_line &sal)\n   current_source_location *loc = get_source_location (sal.pspace);\n \n   cursal.pspace = sal.pspace;\n-  cursal.symtab = loc->symtab;\n-  cursal.line = loc->line;\n+  cursal.symtab = loc->symtab ();\n+  cursal.line = loc->line ();\n   cursal.pc = 0;\n   cursal.end = 0;\n \n-  loc->symtab = sal.symtab;\n-  loc->line = sal.line;\n+  loc->set (sal.symtab, sal.line);\n \n   /* Force the next \"list\" to center around the current line.  */\n   clear_lines_listed_range ();\n@@ -252,8 +278,7 @@ void\n clear_current_source_symtab_and_line (void)\n {\n   current_source_location *loc = get_source_location (current_program_space);\n-  loc->symtab = nullptr;\n-  loc->line = 0;\n+  loc->set (nullptr, 0);\n }\n \n /* See source.h.  */\n@@ -265,13 +290,12 @@ select_source_symtab (struct symtab *s)\n     {\n       current_source_location *loc\n \t= get_source_location (SYMTAB_PSPACE (s));\n-      loc->symtab = s;\n-      loc->line = 1;\n+      loc->set (s, 1);\n       return;\n     }\n \n   current_source_location *loc = get_source_location (current_program_space);\n-  if (loc->symtab != nullptr)\n+  if (loc->symtab () != nullptr)\n     return;\n \n   /* Make the default place to list be the function `main'\n@@ -280,15 +304,14 @@ select_source_symtab (struct symtab *s)\n   if (bsym.symbol != nullptr && SYMBOL_CLASS (bsym.symbol) == LOC_BLOCK)\n     {\n       symtab_and_line sal = find_function_start_sal (bsym.symbol, true);\n-      loc->symtab = sal.symtab;\n-      loc->line = std::max (sal.line - (lines_to_list - 1), 1);\n+      loc->set (sal.symtab, std::max (sal.line - (lines_to_list - 1), 1));\n       return;\n     }\n \n   /* Alright; find the last file in the symtab list (ignoring .h's\n      and namespace symtabs).  */\n \n-  loc->line = 1;\n+  struct symtab *new_symtab = nullptr;\n \n   for (objfile *ofp : current_program_space->objfiles ())\n     {\n@@ -301,23 +324,27 @@ select_source_symtab (struct symtab *s)\n \n \t      if (!(len > 2 && (strcmp (&name[len - 2], \".h\") == 0\n \t\t\t\t|| strcmp (name, \"<<C++-namespaces>>\") == 0)))\n-\t\tloc->symtab = symtab;\n+\t\tnew_symtab = symtab;\n \t    }\n \t}\n     }\n \n-  if (loc->symtab != nullptr)\n+  loc->set (new_symtab, 1);\n+  if (new_symtab != nullptr)\n     return;\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n       if (objfile->sf)\n \ts = objfile->sf->qf->find_last_source_symtab (objfile);\n       if (s)\n-\tloc->symtab = s;\n+\tnew_symtab = s;\n+    }\n+  if (new_symtab != nullptr)\n+    {\n+      loc->set (new_symtab,1);\n+      return;\n     }\n-  if (loc->symtab != nullptr)\n-    return;\n \n   error (_(\"Can't find a default source file\"));\n }\n@@ -641,7 +668,7 @@ info_source_command (const char *ignore, int from_tty)\n {\n   current_source_location *loc\n     = get_source_location (current_program_space);\n-  struct symtab *s = loc->symtab;\n+  struct symtab *s = loc->symtab ();\n   struct compunit_symtab *cust;\n \n   if (!s)\n@@ -1203,8 +1230,7 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n   current_source_location *loc\n     = get_source_location (current_program_space);\n \n-  loc->symtab = s;\n-  loc->line = line;\n+  loc->set (s, line);\n   first_line_listed = line;\n \n   /* If printing of source lines is disabled, just print file and line\n@@ -1294,17 +1320,18 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n     }\n \n   const char *iter = lines.c_str ();\n+  int new_lineno = loc->line ();\n   while (nlines-- > 0 && *iter != '\\0')\n     {\n       char buf[20];\n \n-      last_line_listed = loc->line;\n+      last_line_listed = loc->line ();\n       if (flags & PRINT_SOURCE_LINES_FILENAME)\n         {\n           uiout->text (symtab_to_filename_for_display (s));\n           uiout->text (\":\");\n         }\n-      xsnprintf (buf, sizeof (buf), \"%d\\t\", loc->line++);\n+      xsnprintf (buf, sizeof (buf), \"%d\\t\", new_lineno++);\n       uiout->text (buf);\n \n       while (*iter != '\\0')\n@@ -1359,6 +1386,8 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n \t}\n       uiout->text (\"\\n\");\n     }\n+\n+  loc->set (loc->symtab (), new_lineno);\n }\n \f\n \n@@ -1398,12 +1427,12 @@ info_line_command (const char *arg, int from_tty)\n     {\n       current_source_location *loc\n \t= get_source_location (current_program_space);\n-      curr_sal.symtab = loc->symtab;\n+      curr_sal.symtab = loc->symtab ();\n       curr_sal.pspace = current_program_space;\n       if (last_line_listed != 0)\n \tcurr_sal.line = last_line_listed;\n       else\n-\tcurr_sal.line = loc->line;\n+\tcurr_sal.line = loc->line ();\n \n       sals = curr_sal;\n     }\n@@ -1507,25 +1536,25 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n \n   current_source_location *loc\n     = get_source_location (current_program_space);\n-  if (loc->symtab == nullptr)\n+  if (loc->symtab () == nullptr)\n     select_source_symtab (0);\n \n-  scoped_fd desc (open_source_file (loc->symtab));\n+  scoped_fd desc (open_source_file (loc->symtab ()));\n   if (desc.get () < 0)\n-    perror_with_name (symtab_to_filename_for_display (loc->symtab));\n+    perror_with_name (symtab_to_filename_for_display (loc->symtab ()));\n \n   int line = (forward\n \t      ? last_line_listed + 1\n \t      : last_line_listed - 1);\n \n   const std::vector<off_t> *offsets;\n   if (line < 1\n-      || !g_source_cache.get_line_charpos (loc->symtab, &offsets)\n+      || !g_source_cache.get_line_charpos (loc->symtab (), &offsets)\n       || line > offsets->size ())\n     error (_(\"Expression not found\"));\n \n   if (lseek (desc.get (), (*offsets)[line - 1], 0) < 0)\n-    perror_with_name (symtab_to_filename_for_display (loc->symtab));\n+    perror_with_name (symtab_to_filename_for_display (loc->symtab ()));\n \n   gdb_file_up stream = desc.to_file (FDOPEN_MODE);\n   clearerr (stream.get ());\n@@ -1560,9 +1589,9 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n       if (re_exec (buf.data ()) > 0)\n \t{\n \t  /* Match!  */\n-\t  print_source_lines (loc->symtab, line, line + 1, 0);\n+\t  print_source_lines (loc->symtab (), line, line + 1, 0);\n \t  set_internalvar_integer (lookup_internalvar (\"_\"), line);\n-\t  loc->line = std::max (line - lines_to_list / 2, 1);\n+\t  loc->set (loc->symtab (), std::max (line - lines_to_list / 2, 1));\n \t  return;\n \t}\n \n@@ -1576,7 +1605,7 @@ search_command_helper (const char *regex, int from_tty, bool forward)\n \t  if (fseek (stream.get (), (*offsets)[line - 1], 0) < 0)\n \t    {\n \t      const char *filename\n-\t\t= symtab_to_filename_for_display (loc->symtab);\n+\t\t= symtab_to_filename_for_display (loc->symtab ());\n \t      perror_with_name (filename);\n \t    }\n \t}"
    }
  ]
}