{
  "sha": "c01660c625766e848195285cc20581b9ed7ecfe2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzAxNjYwYzYyNTc2NmU4NDgxOTUyODVjYzIwNTgxYjllZDdlY2ZlMg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-16T23:31:43Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-16T23:45:22Z"
    },
    "message": "gdb/riscv: Allow breakpoints to be created at invalid addresses\n\nSome testsuite cases (gdb.cp/nsalias.exp for example) construct dwarf2\ndebug info for fake functions to test that this debug info is handled\ncorrectly.\n\nWe currently get an error trying to read from an invalid address while\ncreating breakpoints for these fake functions.\n\nOther targets allow creating breakpoints on invalid addresses, and\nonly error when GDB actually tries to insert the breakpoints.\n\nIn order to make RISC-V behave in the same way as other targets, this\ncommit makes the failure to read memory during breakpoint creation\nnon-fatal, we then expect to see a failure when GDB tries to insert\nthe breakpoint, just like other targets.\n\nTested with a riscv64-linux native testsuite run.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (riscv_breakpoint_kind_from_pc): Hanndle case where\n\tcode read might fail, assume 4-byte breakpoint in that case.",
    "tree": {
      "sha": "22a3976de654cbb8e5e4e5d729ea7bde0dc95206",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/22a3976de654cbb8e5e4e5d729ea7bde0dc95206"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c01660c625766e848195285cc20581b9ed7ecfe2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c01660c625766e848195285cc20581b9ed7ecfe2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c01660c625766e848195285cc20581b9ed7ecfe2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c01660c625766e848195285cc20581b9ed7ecfe2/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe7e91e7764d8db4a45c9d7b3dd55cb635f44f5e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe7e91e7764d8db4a45c9d7b3dd55cb635f44f5e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe7e91e7764d8db4a45c9d7b3dd55cb635f44f5e"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "f8120db4c74b2d33916030e78671d162fd084468",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c01660c625766e848195285cc20581b9ed7ecfe2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c01660c625766e848195285cc20581b9ed7ecfe2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c01660c625766e848195285cc20581b9ed7ecfe2",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-17  Jim Wilson  <jimw@sifive.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* riscv-tdep.c (riscv_breakpoint_kind_from_pc): Hanndle case where\n+\tcode read might fail, assume 4-byte breakpoint in that case.\n+\n 2019-04-15  Leszek Swirski  <leszeks@google.com>\n \n \t* amd64-tdep.c (amd64_classify_aggregate): Use cp_pass_by_reference"
    },
    {
      "sha": "4fe07ef4375ae1d75dd1551366a1deaec6240d2c",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c01660c625766e848195285cc20581b9ed7ecfe2/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c01660c625766e848195285cc20581b9ed7ecfe2/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=c01660c625766e848195285cc20581b9ed7ecfe2",
      "patch": "@@ -430,7 +430,15 @@ riscv_breakpoint_kind_from_pc (struct gdbarch *gdbarch, CORE_ADDR *pcptr)\n \tunaligned_p = true;\n       else\n \t{\n-\t  /* Read the opcode byte to determine the instruction length.  */\n+\t  /* Read the opcode byte to determine the instruction length.  If\n+\t     the read fails this may be because we tried to set the\n+\t     breakpoint at an invalid address, in this case we provide a\n+\t     fake result which will give a breakpoint length of 4.\n+\t     Hopefully when we try to actually insert the breakpoint we\n+\t     will see a failure then too which will be reported to the\n+\t     user.  */\n+\t  if (target_read_code (*pcptr, buf, 1) == -1)\n+\t    buf[0] = 0;\n \t  read_code (*pcptr, buf, 1);\n \t}\n "
    }
  ]
}