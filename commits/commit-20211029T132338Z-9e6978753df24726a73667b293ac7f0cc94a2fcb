{
  "sha": "9e6978753df24726a73667b293ac7f0cc94a2fcb",
  "node_id": "C_kwDOANOeidoAKDllNjk3ODc1M2RmMjQ3MjZhNzM2NjdiMjkzYWM3ZjBjYzk0YTJmY2I",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-09-29T16:14:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-10-29T13:23:38Z"
    },
    "message": "Avoid self-test failures on x86-linux\n\nThe disassembly tests in \"maint selftest\" will fail on x86-linux.\nThis happens because opcodes rejects an attempt to disassemble for an\narch with a 64-bit address size when bfd_vma is 32-bit.\n\nThis patch avoids this problem by avoiding the test in this case.  I\nchose to do it this way because this seems to be the only situation\nwhere opcodes checks the size of bfd_vma.\n\nFor v2 of this patch, I've also updated memory_error_test to do the\nsame thing.  This is needed due to the \"improve error reporting from\nthe disassembler\" patch.",
    "tree": {
      "sha": "0c2979ffc3f7301481a1bf6b71b8c2cb95656b92",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c2979ffc3f7301481a1bf6b71b8c2cb95656b92"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9e6978753df24726a73667b293ac7f0cc94a2fcb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e6978753df24726a73667b293ac7f0cc94a2fcb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9e6978753df24726a73667b293ac7f0cc94a2fcb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e6978753df24726a73667b293ac7f0cc94a2fcb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b88e456f7e3e6d8c354da57d3e77a98575070ee8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b88e456f7e3e6d8c354da57d3e77a98575070ee8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b88e456f7e3e6d8c354da57d3e77a98575070ee8"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 21,
    "deletions": 0
  },
  "files": [
    {
      "sha": "59c09c983813a1ae025a264c60378f22a3f2e644",
      "filename": "gdb/disasm-selftests.c",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e6978753df24726a73667b293ac7f0cc94a2fcb/gdb/disasm-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e6978753df24726a73667b293ac7f0cc94a2fcb/gdb/disasm-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm-selftests.c?ref=9e6978753df24726a73667b293ac7f0cc94a2fcb",
      "patch": "@@ -85,8 +85,19 @@ print_one_insn_test (struct gdbarch *gdbarch)\n       /* PR 21003 */\n       if (gdbarch_bfd_arch_info (gdbarch)->mach == bfd_mach_arc_arc601)\n \treturn;\n+      goto generic_case;\n+    case bfd_arch_i386:\n+      {\n+\tconst struct bfd_arch_info *info = gdbarch_bfd_arch_info (gdbarch);\n+\t/* The disassembly tests will fail on x86-linux because\n+\t   opcodes rejects an attempt to disassemble for an arch with\n+\t   a 64-bit address size when bfd_vma is 32-bit.  */\n+\tif (info->bits_per_address > sizeof (bfd_vma) * CHAR_BIT)\n+\t  return;\n+      }\n       /* fall through */\n     default:\n+    generic_case:\n       {\n \t/* Test disassemble breakpoint instruction.  */\n \tCORE_ADDR pc = 0;\n@@ -187,6 +198,16 @@ memory_error_test (struct gdbarch *gdbarch)\n     }\n   };\n \n+  if (gdbarch_bfd_arch_info (gdbarch)->arch == bfd_arch_i386)\n+    {\n+      const struct bfd_arch_info *info = gdbarch_bfd_arch_info (gdbarch);\n+      /* This test will fail on x86-linux because opcodes rejects an\n+\t attempt to disassemble for an arch with a 64-bit address size\n+\t when bfd_vma is 32-bit.  */\n+      if (info->bits_per_address > sizeof (bfd_vma) * CHAR_BIT)\n+\treturn;\n+    }\n+\n   gdb_disassembler_test di (gdbarch);\n   bool saw_memory_error = false;\n "
    }
  ]
}