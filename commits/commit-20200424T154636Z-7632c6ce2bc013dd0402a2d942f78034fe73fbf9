{
  "sha": "7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzYzMmM2Y2UyYmMwMTNkZDA0MDJhMmQ5NDJmNzgwMzRmZTczZmJmOQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-16T15:36:32Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-24T15:46:36Z"
    },
    "message": "Move OpenBSD-only functions from inf-ptrace to obsd-nat\n\nAll major BSDs implement PT_GET_PROCESS_STATE, but they differ in\ndetails and want to implement follow-fork functionality differently.\n\ngdb/ChangeLog:\n\n\t* inf-ptrace.h (follow_fork, insert_fork_catchpoint)\n\t(remove_fork_catchpoint, post_startup_inferior)\n\t(post_attach): Move...\n\t* obsd-nat.h (follow_fork, insert_fork_catchpoint)\n\t(remove_fork_catchpoint, post_startup_inferior)\n\t(post_attach): ...here.\n\t* inf-ptrace.c (follow_fork, insert_fork_catchpoint)\n\t(remove_fork_catchpoint, post_startup_inferior)\n\t(post_attach): Move...\n\t* obsd-nat.c (follow_fork, insert_fork_catchpoint)\n\t(remove_fork_catchpoint, post_startup_inferior)\n\t(post_attach): ...here.",
    "tree": {
      "sha": "9d429b112e2c9185c30a985b7db17e60cb598fe5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d429b112e2c9185c30a985b7db17e60cb598fe5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "86e887ae1183ded1c4bfba8617e4e19c8dfc8271",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86e887ae1183ded1c4bfba8617e4e19c8dfc8271",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/86e887ae1183ded1c4bfba8617e4e19c8dfc8271"
    }
  ],
  "stats": {
    "total": 171,
    "additions": 90,
    "deletions": 81
  },
  "files": [
    {
      "sha": "7d34d43a57836c8c63a7aea130f0667d4f605c4a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
      "patch": "@@ -1,3 +1,18 @@\n+2020-04-24  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* inf-ptrace.h (follow_fork, insert_fork_catchpoint)\n+\t(remove_fork_catchpoint, post_startup_inferior)\n+\t(post_attach): Move...\n+\t* obsd-nat.h (follow_fork, insert_fork_catchpoint)\n+\t(remove_fork_catchpoint, post_startup_inferior)\n+\t(post_attach): ...here.\n+\t* inf-ptrace.c (follow_fork, insert_fork_catchpoint)\n+\t(remove_fork_catchpoint, post_startup_inferior)\n+\t(post_attach): Move...\n+\t* obsd-nat.c (follow_fork, insert_fork_catchpoint)\n+\t(remove_fork_catchpoint, post_startup_inferior)\n+\t(post_attach): ...here.\n+\n 2020-04-24  Tom Tromey  <tromey@adacore.com>\n \n \t* nat/windows-nat.h (struct windows_thread_info)"
    },
    {
      "sha": "4519a9ebef1ed725fdbb683e3fa5c209f8cc0e47",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 0,
      "deletions": 70,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
      "patch": "@@ -68,42 +68,6 @@ typedef std::unique_ptr<struct target_ops, target_unpusher> target_unpush_up;\n inf_ptrace_target::~inf_ptrace_target ()\n {}\n \n-#ifdef PT_GET_PROCESS_STATE\n-\n-/* Target hook for follow_fork.  On entry and at return inferior_ptid is\n-   the ptid of the followed inferior.  */\n-\n-bool\n-inf_ptrace_target::follow_fork (bool follow_child, bool detach_fork)\n-{\n-  if (!follow_child)\n-    {\n-      struct thread_info *tp = inferior_thread ();\n-      pid_t child_pid = tp->pending_follow.value.related_pid.pid ();\n-\n-      /* Breakpoints have already been detached from the child by\n-\t infrun.c.  */\n-\n-      if (ptrace (PT_DETACH, child_pid, (PTRACE_TYPE_ARG3)1, 0) == -1)\n-\tperror_with_name ((\"ptrace\"));\n-    }\n-\n-  return false;\n-}\n-\n-int\n-inf_ptrace_target::insert_fork_catchpoint (int pid)\n-{\n-  return 0;\n-}\n-\n-int\n-inf_ptrace_target::remove_fork_catchpoint (int pid)\n-{\n-  return 0;\n-}\n-\n-#endif /* PT_GET_PROCESS_STATE */\n \f\n \n /* Prepare to be traced.  */\n@@ -159,23 +123,6 @@ inf_ptrace_target::create_inferior (const char *exec_file,\n   target_post_startup_inferior (ptid);\n }\n \n-#ifdef PT_GET_PROCESS_STATE\n-\n-void\n-inf_ptrace_target::post_startup_inferior (ptid_t pid)\n-{\n-  ptrace_event_t pe;\n-\n-  /* Set the initial event mask.  */\n-  memset (&pe, 0, sizeof pe);\n-  pe.pe_set_event |= PTRACE_FORK;\n-  if (ptrace (PT_SET_EVENT_MASK, pid.pid (),\n-\t      (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n-    perror_with_name ((\"ptrace\"));\n-}\n-\n-#endif\n-\n /* Clean up a rotting corpse of an inferior after it died.  */\n \n void\n@@ -255,23 +202,6 @@ inf_ptrace_target::attach (const char *args, int from_tty)\n   unpusher.release ();\n }\n \n-#ifdef PT_GET_PROCESS_STATE\n-\n-void\n-inf_ptrace_target::post_attach (int pid)\n-{\n-  ptrace_event_t pe;\n-\n-  /* Set the initial event mask.  */\n-  memset (&pe, 0, sizeof pe);\n-  pe.pe_set_event |= PTRACE_FORK;\n-  if (ptrace (PT_SET_EVENT_MASK, pid,\n-\t      (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n-    perror_with_name ((\"ptrace\"));\n-}\n-\n-#endif\n-\n /* Detach from the inferior.  If FROM_TTY is non-zero, be chatty about it.  */\n \n void"
    },
    {
      "sha": "e2079faee3dc20c73d777f7935ad639f6a1bba81",
      "filename": "gdb/inf-ptrace.h",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/inf-ptrace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/inf-ptrace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.h?ref=7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
      "patch": "@@ -43,17 +43,6 @@ struct inf_ptrace_target : public inf_child_target\n \n   void create_inferior (const char *, const std::string &,\n \t\t\tchar **, int) override;\n-#ifdef PT_GET_PROCESS_STATE\n-  bool follow_fork (bool, bool) override;\n-\n-  int insert_fork_catchpoint (int) override;\n-\n-  int remove_fork_catchpoint (int) override;\n-\n-  void post_startup_inferior (ptid_t) override;\n-\n-  void post_attach (int) override;\n-#endif\n \n   void mourn_inferior () override;\n "
    },
    {
      "sha": "6667a0add7fed063c97ea28fd1c9a7581fc0ad41",
      "filename": "gdb/obsd-nat.c",
      "status": "modified",
      "additions": 63,
      "deletions": 0,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/obsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/obsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/obsd-nat.c?ref=7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
      "patch": "@@ -161,3 +161,66 @@ obsd_nat_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n }\n \n #endif /* PT_GET_THREAD_FIRST */\n+\n+#ifdef PT_GET_PROCESS_STATE\n+\n+void\n+obsd_nat_target::post_attach (int pid)\n+{\n+  ptrace_event_t pe;\n+\n+  /* Set the initial event mask.  */\n+  memset (&pe, 0, sizeof pe);\n+  pe.pe_set_event |= PTRACE_FORK;\n+  if (ptrace (PT_SET_EVENT_MASK, pid,\n+\t      (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n+    perror_with_name ((\"ptrace\"));\n+}\n+\n+void\n+obsd_nat_target::post_startup_inferior (ptid_t pid)\n+{\n+  ptrace_event_t pe;\n+\n+  /* Set the initial event mask.  */\n+  memset (&pe, 0, sizeof pe);\n+  pe.pe_set_event |= PTRACE_FORK;\n+  if (ptrace (PT_SET_EVENT_MASK, pid.pid (),\n+\t      (PTRACE_TYPE_ARG3)&pe, sizeof pe) == -1)\n+    perror_with_name ((\"ptrace\"));\n+}\n+\n+/* Target hook for follow_fork.  On entry and at return inferior_ptid is\n+   the ptid of the followed inferior.  */\n+\n+bool\n+obsd_nat_target::follow_fork (bool follow_child, bool detach_fork)\n+{\n+  if (!follow_child)\n+    {\n+      struct thread_info *tp = inferior_thread ();\n+      pid_t child_pid = tp->pending_follow.value.related_pid.pid ();\n+\n+      /* Breakpoints have already been detached from the child by\n+\t infrun.c.  */\n+\n+      if (ptrace (PT_DETACH, child_pid, (PTRACE_TYPE_ARG3)1, 0) == -1)\n+\tperror_with_name ((\"ptrace\"));\n+    }\n+\n+  return false;\n+}\n+\n+int\n+obsd_nat_target::insert_fork_catchpoint (int pid)\n+{\n+  return 0;\n+}\n+\n+int\n+obsd_nat_target::remove_fork_catchpoint (int pid)\n+{\n+  return 0;\n+}\n+\n+#endif /* PT_GET_PROCESS_STATE */"
    },
    {
      "sha": "e5962004d4c0e95a4f306695897cc162368de9be",
      "filename": "gdb/obsd-nat.h",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/obsd-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7632c6ce2bc013dd0402a2d942f78034fe73fbf9/gdb/obsd-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/obsd-nat.h?ref=7632c6ce2bc013dd0402a2d942f78034fe73fbf9",
      "patch": "@@ -28,6 +28,18 @@ class obsd_nat_target : public inf_ptrace_target\n   std::string pid_to_str (ptid_t) override;\n   void update_thread_list () override;\n   ptid_t wait (ptid_t, struct target_waitstatus *, int) override;\n+\n+#ifdef PT_GET_PROCESS_STATE\n+  bool follow_fork (bool, bool) override;\n+\n+  int insert_fork_catchpoint (int) override;\n+\n+  int remove_fork_catchpoint (int) override;\n+\n+  void post_startup_inferior (ptid_t) override;\n+\n+  void post_attach (int) override;\n+#endif\n };\n \n #endif /* obsd-nat.h */"
    }
  ]
}