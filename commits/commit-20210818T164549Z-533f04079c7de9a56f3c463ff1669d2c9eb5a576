{
  "sha": "533f04079c7de9a56f3c463ff1669d2c9eb5a576",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTMzZjA0MDc5YzdkZTlhNTZmM2M0NjNmZjE2NjlkMmM5ZWI1YTU3Ng==",
  "commit": {
    "author": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-08-18T16:45:49Z"
    },
    "committer": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-08-18T16:45:49Z"
    },
    "message": "[gdb] [rs6000] Add ppc64_linux_gcc_target_options method.\n\nAdd a method to set the gcc target options for the ppc64 targets.\nThis change sets an empty value, which allows the gcc\ndefault values (-mcmodel=medium) be used, instead of -mcmodel=large\nwhich is set by the default_gcc_target_options hook.",
    "tree": {
      "sha": "3ef3b41ff5c23dc666a13e458e18ffbe34b443e0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3ef3b41ff5c23dc666a13e458e18ffbe34b443e0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/533f04079c7de9a56f3c463ff1669d2c9eb5a576",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/533f04079c7de9a56f3c463ff1669d2c9eb5a576",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/533f04079c7de9a56f3c463ff1669d2c9eb5a576",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/533f04079c7de9a56f3c463ff1669d2c9eb5a576/comments",
  "author": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc0df0fa47561817ba263f4de13525d998bd5903",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc0df0fa47561817ba263f4de13525d998bd5903",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc0df0fa47561817ba263f4de13525d998bd5903"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 10,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ea8e3b98fa4cd69d28a881e392bdd55942e0561e",
      "filename": "gdb/ppc-linux-tdep.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533f04079c7de9a56f3c463ff1669d2c9eb5a576/gdb/ppc-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533f04079c7de9a56f3c463ff1669d2c9eb5a576/gdb/ppc-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-linux-tdep.c?ref=533f04079c7de9a56f3c463ff1669d2c9eb5a576",
      "patch": "@@ -1997,6 +1997,14 @@ ppc64_gnu_triplet_regexp (struct gdbarch *gdbarch)\n   return \"p(ower)?pc64\";\n }\n \n+/* Implement the linux_gcc_target_options method.  */\n+\n+static std::string\n+ppc64_linux_gcc_target_options (struct gdbarch *gdbarch)\n+{\n+  return \"\";\n+}\n+\n static void\n ppc_linux_init_abi (struct gdbarch_info info,\n \t\t    struct gdbarch *gdbarch)\n@@ -2132,6 +2140,8 @@ ppc_linux_init_abi (struct gdbarch_info info,\n \tset_gdbarch_gnu_triplet_regexp (gdbarch, ppc64le_gnu_triplet_regexp);\n       else\n \tset_gdbarch_gnu_triplet_regexp (gdbarch, ppc64_gnu_triplet_regexp);\n+      /* Set GCC target options.  */\n+      set_gdbarch_gcc_target_options (gdbarch, ppc64_linux_gcc_target_options);\n     }\n \n   set_gdbarch_core_read_description (gdbarch, ppc_linux_core_read_description);"
    }
  ]
}