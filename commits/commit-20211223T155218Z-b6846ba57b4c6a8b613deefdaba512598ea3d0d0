{
  "sha": "b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
  "node_id": "C_kwDOANOeidoAKGI2ODQ2YmE1N2I0YzZhOGI2MTNkZWVmZGFiYTUxMjU5OGVhM2QwZDA",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-12-23T15:48:47Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-12-23T15:52:18Z"
    },
    "message": "gdb/testsuite: resolve some duplicate testnames in gdb.mi\n\nSet of fixes to resolve some duplicate test names in the gdb.mi/\ndirectory.  There should be no real test changes after this set of\nfixes, they are all either:\n\n  - Adding with_test_prefix type constructs to make test names unique,\n    or\n\n  - Changing the test name to be more descriptive, or better reflect\n    the test being run.",
    "tree": {
      "sha": "d505595afbcd41b9880b0faae984ebc7b0bba028",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d505595afbcd41b9880b0faae984ebc7b0bba028"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "b622494ee378fd0a490c934c509364b4c7735273",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b622494ee378fd0a490c934c509364b4c7735273",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b622494ee378fd0a490c934c509364b4c7735273"
    }
  ],
  "stats": {
    "total": 318,
    "additions": 170,
    "deletions": 148
  },
  "files": [
    {
      "sha": "0d9a7101f187aafded73af313dcca990ffd3f0f2",
      "filename": "gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-syn-frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-syn-frame.exp?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -55,11 +55,12 @@ mi_gdb_test \"402-stack-list-frames\" \"402\\\\^done,stack=\\\\\\[frame=\\{level=\\\"0\\\",ad\n #\n mi_send_resuming_command \"exec-continue\" \"testing exec continue\"\n \n-mi_expect_stop \"really-no-reason\" \"\" \"\" \"\" \"\" \"\" \"finished exec continue\"\n+mi_expect_stop \"really-no-reason\" \"\" \"\" \"\" \"\" \"\" \\\n+    \"finished exec continue after calling foo\"\n \n mi_gdb_test \"404-stack-list-frames 0 0\" \\\n   \"404\\\\^done,stack=\\\\\\[frame=\\{level=\\\"0\\\",addr=\\\"$hex\\\",func=\\\"main\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\}.*\\\\\\]\" \\\n-  \"list stack frames\"\n+  \"list stack frames, back in main after calling foo\"\n \n \n #\n@@ -79,16 +80,17 @@ mi_gdb_test \"406-data-evaluate-expression have_a_very_merry_interrupt()\" \\\n \n mi_gdb_test \"407-stack-list-frames\" \\\n   \"407\\\\^done,stack=\\\\\\[frame=\\{level=\\\"0\\\",addr=\\\"$hex\\\",func=\\\"subroutine\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\},frame=\\{level=\\\"1\\\",addr=\\\"$hex\\\",func=\\\"handler\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\},frame=\\{level=\\\"2\\\",addr=\\\"$hex\\\",func=\\\"<signal handler called>\\\"\\},.*frame=\\{level=\\\"$decimal\\\",addr=\\\"$hex\\\",func=\\\"have_a_very_merry_interrupt\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\},frame=\\{level=\\\"$decimal\\\",addr=\\\"$hex\\\",func=\\\"<function called from gdb>\\\"\\},frame=\\{level=\\\"$decimal\\\",addr=\\\"$hex\\\",func=\\\"main\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\}.*\\\\\\]\" \\\n-  \"list stack frames\"\n+  \"list stack frames, with signal handler and dummy frame\"\n \n \n mi_send_resuming_command \"exec-continue\" \"testing exec continue\"\n \n-mi_expect_stop \"really-no-reason\" \"\" \"\" \"\" \"\" \"\" \"finished exec continue\"\n+mi_expect_stop \"really-no-reason\" \"\" \"\" \"\" \"\" \"\" \\\n+    \"finished exec continue after calling have_a_very_merry_interrupt\"\n \n mi_gdb_test \"409-stack-list-frames 0 0\" \\\n   \"409\\\\^done,stack=\\\\\\[frame=\\{level=\\\"0\\\",addr=\\\"$hex\\\",func=\\\"main\\\",file=\\\".*mi-syn-frame.c\\\",fullname=\\\"${fullname_syntax}${srcfile}\\\",line=\\\"$decimal\\\",arch=\\\"$any\\\"\\}.*\\\\\\]\" \\\n-  \"list stack frames\"\n+  \"list stack frames, back in main after calling have_a_very_merry_interrupt\"\n \n #\n # Call bar() by hand, which should get an exception while running."
    },
    {
      "sha": "28f8ec02421978d45b13eb38a1752b217935c02f",
      "filename": "gdb/testsuite/gdb.mi/mi-var-child.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-var-child.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-var-child.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-var-child.exp?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -899,7 +899,7 @@ mi_gdb_test \"-var-info-num-children psnp->char_ptr.*psnp->char_ptr.**psnp->char_\n mi_list_varobj_children \"psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr\" {\n     {{psnp->char_ptr.\\*psnp->char_ptr.\\*\\*psnp->char_ptr.\\*\\*\\*psnp->char_ptr.\\*\\*\\*\\*psnp->char_ptr} \\\n          {\\*\\*\\*\\*psnp->char_ptr} 0 char}\n-} \"get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr\"\n+} \"get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr after counting children\"\n \n # Test: c_variable-5.18\n # Desc: number of children of *(*(*(psnp->char_ptr)))\n@@ -1077,7 +1077,7 @@ mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr\" {\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\" {\n     {{psnp->ptrs.0.next.char_ptr.\\*char_ptr.\\*\\*char_ptr.\\*\\*\\*char_ptr.\\*\\*\\*\\*char_ptr} \\\n          {\\*\\*\\*\\*char_ptr} 0 char}\n-} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr\"\n+} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n \n # Test: c_variable-5.42\n # Desc: number of children of **psnp->ptrs[0]->next->char_ptr\n@@ -1090,7 +1090,7 @@ mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\" {\n     {{psnp->ptrs.0.next.char_ptr.\\*char_ptr.\\*\\*char_ptr.\\*\\*\\*char_ptr.\\*\\*\\*\\*char_ptr} \\\n          {\\*\\*\\*\\*char_ptr} 0 char}\n-} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr after counting children\"\n \n # Test: c_variable-5.44\n # Desc: number of children of ***psnp->ptrs[0]->next->char_ptr\n@@ -1101,13 +1101,13 @@ mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_\n # Test: c_variable-5.43B\n # Desc: children of ****psnp->ptrs[0]->next->char_ptr\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\" {} \\\n-\t\"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+\t\"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\"\n \n # Test: c_variable-5.44B\n # Desc: number of children of ****psnp->ptrs[0]->next->char_ptr\n mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\" \\\n \t\"\\\\^done,numchild=\\\"0\\\"\" \\\n-\t\"get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+\t\"get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\"\n \n # Test: c_variable-5.45\n # Desc: children of psnp->ptrs[0]->next->next"
    },
    {
      "sha": "6a78a26c20c26817790e22320a06eb9c664cc3c6",
      "filename": "gdb/testsuite/gdb.mi/mi-var-rtti.cc",
      "status": "modified",
      "additions": 27,
      "deletions": 21,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-var-rtti.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-var-rtti.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-var-rtti.cc?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -218,7 +218,7 @@ void use_rtti_with_multiple_inheritence_test ()\n \t} \"list children of ptr.First (with RTTI) in $testname\"\n \tmi_list_varobj_children \"VAR.First.public\" {\n \t    { VAR.First.public.F F 0 int }\n-\t} \"list children of ptr.Base.public (with RTTI) in $testname\"\n+\t} \"list children of ptr.First.public (with RTTI) in $testname\"\n \tmi_list_varobj_children \"VAR.Base\" {\n \t    { VAR.Base.public public 1 }\n \t} \"list children of ptr.Base (with RTTI) in $testname\"\n@@ -307,43 +307,49 @@ void skip_type_update_when_not_use_rtti_test ()\n   /*: \n \tset testname skip_type_update_when_not_use_rtti\n \n-\tset_print_object off $testname\n-\tmi_create_varobj_checked PTR ptr {Base \\*} \\\n+\twith_test_prefix \"ptr is nullptr\" {\n+\t  set_print_object off $testname\n+\t  mi_create_varobj_checked PTR ptr {Base \\*} \\\n \t\t\"create varobj for ptr in $testname\"\n-\tcheck_derived_children_without_rtti PTR ptr $testname\n-\n-\tmi_create_varobj S s \"create varobj for S in $testname\"\n-\tmi_list_varobj_children S {\n-\t    { S.public public 1 }\n-\t} \"list children of s in $testname\"\n-\tmi_list_varobj_children S.public {\n-\t    { S.public.ptr ptr 1 {Base \\*} }\n-\t} \"list children of s.public in $testname\"\n-\tcheck_derived_children_without_rtti S.public.ptr s.ptr $testname\n+\t  check_derived_children_without_rtti PTR ptr $testname\n+\n+\t  mi_create_varobj S s \"create varobj for S in $testname\"\n+\t  mi_list_varobj_children S {\n+\t      { S.public public 1 }\n+\t  } \"list children of s in $testname\"\n+\t  mi_list_varobj_children S.public {\n+\t      { S.public.ptr ptr 1 {Base \\*} }\n+\t  } \"list children of s.public in $testname\"\n+\t  check_derived_children_without_rtti S.public.ptr s.ptr $testname\n+\t}\n   :*/\n \n \tptr = &d;\n \ts.ptr = &d;\n   /*: \n-\tmi_varobj_update PTR {PTR PTR.public.A} \\\n+        with_test_prefix \"ptr points at d\" {\n+\t  mi_varobj_update PTR {PTR PTR.public.A} \\\n \t\t\"update ptr to derived type in $testname\"\n-\tcheck_derived_without_rtti PTR ptr $testname\n+\t  check_derived_without_rtti PTR ptr $testname\n \n-\tmi_varobj_update S {S.public.ptr S.public.ptr.public.A} \\\n+\t  mi_varobj_update S {S.public.ptr S.public.ptr.public.A} \\\n \t\t\"update s to derived type in $testname\"\n-\tcheck_derived_without_rtti S.public.ptr s.ptr $testname\n+\t  check_derived_without_rtti S.public.ptr s.ptr $testname\n+\t}\n   :*/\n \n \tptr = 0;\n \ts.ptr = 0;\n   /*:\n-\tmi_varobj_update PTR {PTR  PTR.public.A} \\\n+        with_test_prefix \"ptr is nullptr again\" {\n+\t  mi_varobj_update PTR {PTR  PTR.public.A} \\\n \t\t\"update ptr back to base type in $testname\"\n-\tmi_delete_varobj PTR \"delete varobj for ptr in $testname\"\n+\t  mi_delete_varobj PTR \"delete varobj for ptr in $testname\"\n \n-\tmi_varobj_update S {S.public.ptr S.public.ptr.public.A} \\\n+\t  mi_varobj_update S {S.public.ptr S.public.ptr.public.A} \\\n \t\t\"update s back to base type in $testname\"\n-\tmi_delete_varobj S \"delete varobj for s in $testname\"\n+\t  mi_delete_varobj S \"delete varobj for s in $testname\"\n+\t}\n   :*/\n \treturn;\n   /*: END: skip_type_update_when_not_use_rtti :*/"
    },
    {
      "sha": "f85072459a6fbc0ba49b6815d71c7e7427e026f2",
      "filename": "gdb/testsuite/gdb.mi/mi-watch.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-watch.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi-watch.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-watch.exp?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -131,7 +131,7 @@ proc test_watchpoint_triggering {} {\n     mi_execute_to \"exec-continue\" \"watchpoint-scope\" \"callee3\" \".*\" \\\n         \".*basics.c\" $line_callee3_close_brace \\\n         {\"\" \"wpnum=\\\"2\\\"\"} \\\n-        \"watchpoint trigger\"\n+        \"watchpoint scope\"\n }\n \n proc test_watchpoint_all {mi_mode type} {"
    },
    {
      "sha": "cf60242c346bb8b5b5946a63772200ca46f9b724",
      "filename": "gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp",
      "status": "modified",
      "additions": 125,
      "deletions": 111,
      "changes": 236,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -49,121 +49,135 @@ foreach name {different breakhere_different breakhere_validity breakhere_invalid\n \n # Test various kinds of `set print entry-values'.\n \n-if {[mi_runto_main] == -1} {\n-    return -1\n+with_test_prefix \"entry-values=no\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values no\" {\\^done} \"no: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"no: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"no: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"}\\]} \"no: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"no: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"}} .* .* {.* disp=\"keep\"} \"no: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"}\\]} \"no: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"no: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"no: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"no: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"no: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"no: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"no: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values no\" {\\^done} \"no: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"no: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"no: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"}\\]} \"no: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"no: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"}} .* .* {.* disp=\"keep\"} \"no: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"}\\]} \"no: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"no: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"no: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"no: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"no: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"no: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"no: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=only\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values only\" {\\^done} \"only: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"only: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"only: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"only: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"only: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"only: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"only: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"only: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"only: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"only: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"only: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"only: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"only: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values only\" {\\^done} \"only: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"only: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"only: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"only: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"only: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"only: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"only: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"only: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"only: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"only: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"only: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"only: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"only: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=preferred\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values preferred\" {\\^done} \"preferred: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"preferred: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"preferred: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"preferred: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"preferred: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"preferred: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"preferred: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"preferred: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"preferred: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"preferred: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"preferred: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"preferred: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"preferred: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values preferred\" {\\^done} \"preferred: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"preferred: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"preferred: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"preferred: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"preferred: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"preferred: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"preferred: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"preferred: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"preferred: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"preferred: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"preferred: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"preferred: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"preferred: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=if-needed\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values if-needed\" {\\^done} \"if-needed: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"if-needed: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"if-needed: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"}\\]} \"if-needed: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"if-needed: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"}} .* .* {.* disp=\"keep\"} \"if-needed: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"}\\]} \"if-needed: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"if-needed: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"if-needed: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"if-needed: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"if-needed: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"if-needed: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"if-needed: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values if-needed\" {\\^done} \"if-needed: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"if-needed: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"if-needed: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"}\\]} \"if-needed: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"if-needed: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"}} .* .* {.* disp=\"keep\"} \"if-needed: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"}\\]} \"if-needed: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"if-needed: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"if-needed: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"if-needed: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"if-needed: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"if-needed: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"if-needed: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=both\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values both\" {\\^done} \"both: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"both: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"both: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"both: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"both: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"both: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"both: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"both: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"},{name=\"born@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"both: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"},{name=\"born@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"both: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"both: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"},{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"both: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"},{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"both: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values both\" {\\^done} \"both: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"both: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"both: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"both: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"both: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"both: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"both: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"both: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"},{name=\"born@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"both: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"},{name=\"born@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"both: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"both: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"},{name=\"inv@entry\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"both: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"},{name=\"inv@entry\",arg=\"1\",value=\"<optimized out>\"}\\]} \"both: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=compact\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values compact\" {\\^done} \"compact: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"compact: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"compact: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"compact: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"compact: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"compact: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"compact: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"compact: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"compact: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"compact: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"compact: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"compact: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"compact: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values compact\" {\\^done} \"compact: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"compact: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"compact: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"compact: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"compact: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"compact: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"compact: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"compact: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"compact: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"compact: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"compact: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"compact: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"compact: invalid: -stack-list-variables\"\n-\n-if {[mi_runto_main] == -1} {\n-    return -1\n+\n+with_test_prefix \"entry-values=default\" {\n+    if {[mi_runto_main] == -1} {\n+\treturn -1\n+    }\n+    mi_gdb_test \"-gdb-set print entry-values default\" {\\^done} \"default: set print entry-values\"\n+    mi_send_resuming_command \"exec-continue\" \"default: entry_equal: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"default: entry_equal: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"default: entry_equal: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"default: entry_different: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"default: entry_different: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"default: entry_different: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"default: validity: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"default: validity: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"default: validity: -stack-list-variables\"\n+    mi_send_resuming_command \"exec-continue\" \"default: invalid: continue\"\n+    mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"default: invalid: stop\"\n+    mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"default: invalid: -stack-list-variables\"\n }\n-mi_gdb_test \"-gdb-set print entry-values default\" {\\^done} \"default: set print entry-values\"\n-mi_send_resuming_command \"exec-continue\" \"default: entry_equal: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"5\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"default: entry_equal: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"5\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"default: entry_equal: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"default: entry_different: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"val\",value=\"6\"},{name=\"val@entry\",value=\"5\"}} .* .* {.* disp=\"keep\"} \"default: entry_different: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"val\",arg=\"1\",value=\"6\"},{name=\"val@entry\",arg=\"1\",value=\"5\"}\\]} \"default: entry_different: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"default: validity: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"lost\",value=\"<optimized out>\"},{name=\"lost@entry\",value=\"5\"},{name=\"born\",value=\"10\"}} .* .* {.* disp=\"keep\"} \"default: validity: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"lost\",arg=\"1\",value=\"<optimized out>\"},{name=\"lost@entry\",arg=\"1\",value=\"5\"},{name=\"born\",arg=\"1\",value=\"10\"}\\]} \"default: validity: -stack-list-variables\"\n-mi_send_resuming_command \"exec-continue\" \"default: invalid: continue\"\n-mi_expect_stop \"breakpoint-hit\" .* {{name=\"inv\",value=\"<optimized out>\"}} .* .* {.* disp=\"keep\"} \"default: invalid: stop\"\n-mi_gdb_test \"-stack-list-variables --all-values\" {\\^done,variables=\\[{name=\"inv\",arg=\"1\",value=\"<optimized out>\"}\\]} \"default: invalid: -stack-list-variables\""
    },
    {
      "sha": "aa03ce5359c773fd8dec9a8e8a995c01aeb0db82",
      "filename": "gdb/testsuite/gdb.mi/mi2-var-child.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi2-var-child.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6846ba57b4c6a8b613deefdaba512598ea3d0d0/gdb/testsuite/gdb.mi/mi2-var-child.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi2-var-child.exp?ref=b6846ba57b4c6a8b613deefdaba512598ea3d0d0",
      "patch": "@@ -839,7 +839,7 @@ mi_gdb_test \"-var-info-num-children psnp->char_ptr.*psnp->char_ptr.**psnp->char_\n mi_list_varobj_children \"psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr\" {\n     {{psnp->char_ptr.\\*psnp->char_ptr.\\*\\*psnp->char_ptr.\\*\\*\\*psnp->char_ptr.\\*\\*\\*\\*psnp->char_ptr} \\\n          {\\*\\*\\*\\*psnp->char_ptr} 0 char}\n-} \"get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr\"\n+} \"get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr after counting children\"\n \n # Test: c_variable-5.18\n # Desc: number of children of *(*(*(psnp->char_ptr)))\n@@ -1018,7 +1018,7 @@ mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr\" {\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\" {\n     {{psnp->ptrs.0.next.char_ptr.\\*char_ptr.\\*\\*char_ptr.\\*\\*\\*char_ptr.\\*\\*\\*\\*char_ptr} \\\n          {\\*\\*\\*\\*char_ptr} 0 char}\n-} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr\"\n+} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n \n # Test: c_variable-5.42\n # Desc: number of children of **psnp->ptrs[0]->next->char_ptr\n@@ -1031,7 +1031,7 @@ mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\" {\n     {{psnp->ptrs.0.next.char_ptr.\\*char_ptr.\\*\\*char_ptr.\\*\\*\\*char_ptr.\\*\\*\\*\\*char_ptr} \\\n          {\\*\\*\\*\\*char_ptr} 0 char}\n-} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+} \"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr after counting children\"\n \n # Test: c_variable-5.44\n # Desc: number of children of ***psnp->ptrs[0]->next->char_ptr\n@@ -1042,13 +1042,13 @@ mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_\n # Test: c_variable-5.43B\n # Desc: children of ****psnp->ptrs[0]->next->char_ptr\n mi_list_varobj_children \"psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\" {} \\\n-\t\"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+\t\"get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\"\n \n # Test: c_variable-5.44B\n # Desc: number of children of ****psnp->ptrs[0]->next->char_ptr\n mi_gdb_test \"-var-info-num-children psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\" \\\n \t\"\\\\^done,numchild=\\\"0\\\"\" \\\n-\t\"get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr\"\n+\t\"get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr.****char_ptr\"\n \n # Test: c_variable-5.45\n # Desc: children of psnp->ptrs[0]->next->next"
    }
  ]
}