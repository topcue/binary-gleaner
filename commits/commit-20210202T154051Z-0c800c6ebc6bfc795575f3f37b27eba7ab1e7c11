{
  "sha": "0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGM4MDBjNmViYzZiZmM3OTU1NzVmM2YzN2IyN2ViYTdhYjFlN2MxMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:51Z"
    },
    "message": "gdb/dwarf: remove unnecessary check in read_{rng,loc}list_index\n\nIn read_rnglist_index and read_loclist_index, we check that both the\nstart and end of the offset that we read from the offset table are\nwithin the section.  I think it's unecessary to do both: if the end of\nthe offset is within the section, then surely the start of the offset is\nwithin it.\n\nRemove the check for the start of the offset in both functions.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (read_loclist_index): Remove bound check for\n\tstart of offset.\n\t(read_rnglist_index): Likewise.\n\nChange-Id: I7b57ddf4f8a8a28971738f0e3f3af62108f9e19a",
    "tree": {
      "sha": "877c5eb3551712fc2f869f0b77a67f479b611fb2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/877c5eb3551712fc2f869f0b77a67f479b611fb2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05787bad362024d1328c0d6f7c51244a7d6c1e75",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05787bad362024d1328c0d6f7c51244a7d6c1e75",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05787bad362024d1328c0d6f7c51244a7d6c1e75"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 6,
    "deletions": 11
  },
  "files": [
    {
      "sha": "b420a941184daf9d3a9fc19d65f6ffe1d123818b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (read_loclist_index): Remove bound check for\n+\tstart of offset.\n+\t(read_rnglist_index): Likewise.\n+\n 2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.c (read_loclist_index): Add bound check for the end"
    },
    {
      "sha": "ee0f8bec4465ce1b87994447c4ac73b5afc502ab",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=0c800c6ebc6bfc795575f3f37b27eba7ab1e7c11",
      "patch": "@@ -20233,11 +20233,6 @@ read_loclist_index (struct dwarf2_cu *cu, ULONGEST loclist_index)\n \t     \".debug_loclists offset array [in module %s]\"),\n \t   objfile_name (objfile));\n \n-  if (start_offset >= section->size)\n-    error (_(\"DW_FORM_loclistx pointing outside of \"\n-\t     \".debug_loclists section [in module %s]\"),\n-\t   objfile_name (objfile));\n-\n   /* Validate that reading won't go beyond the end of the section.  */\n   if (start_offset + cu->header.offset_size > section->size)\n     error (_(\"Reading DW_FORM_loclistx index beyond end of\"\n@@ -20289,12 +20284,6 @@ read_rnglist_index (struct dwarf2_cu *cu, ULONGEST rnglist_index,\n \t     \".debug_rnglists offset array [in module %s]\"),\n \t   objfile_name (objfile));\n \n-  /* Validate that the offset is within the section's range.  */\n-  if (start_offset >= section->size)\n-    error (_(\"DW_FORM_rnglistx pointing outside of \"\n-\t     \".debug_rnglists section [in module %s]\"),\n-\t   objfile_name (objfile));\n-\n   /* Validate that reading won't go beyond the end of the section.  */\n   if (start_offset + cu->header.offset_size > section->size)\n     error (_(\"Reading DW_FORM_rnglistx index beyond end of\""
    }
  ]
}