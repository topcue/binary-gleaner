{
  "sha": "4f7cc14110d67a180f5408a91ac53a91f88f776e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGY3Y2MxNDExMGQ2N2ExODBmNTQwOGE5MWFjNTNhOTFmODhmNzc2ZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T22:59:45Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-12T11:28:33Z"
    },
    "message": "gas signed overflow fixes\n\n\t* config/tc-aarch64.c (get_aarch64_insn): Avoid signed overflow.\n\t* config/tc-metag.c (parse_dalu): Likewise.\n\t* config/tc-tic4x.c (md_pcrel_from): Likewise.\n\t* config/tc-tic6x.c (tic6x_output_unwinding): Likewise.\n\t* config/tc-csky.c (parse_fexp): Use an unsigned char temp buffer.\n\tDon't use register keyword.  Avoid signed overflow and remove now\n\tunneccesary char masks.  Formatting.\n\t* config/tc-ia64.c (operand_match): Don't use shifts to sign extend.\n\t* config/tc-mep.c (mep_apply_fix): Likewise.\n\t* config/tc-pru.c (md_apply_fix): Likewise.\n\t* config/tc-riscv.c (load_const): Likewise.\n\t* config/tc-nios2.c (md_apply_fix): Likewise.  Don't potentially\n\ttruncate fixup before right shift.  Tidy BFD_RELOC_NIOS2_HIADJ16\n\tcalculation.",
    "tree": {
      "sha": "06f9b92f65556383e9d7cad287ce1b51882c7243",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06f9b92f65556383e9d7cad287ce1b51882c7243"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f7cc14110d67a180f5408a91ac53a91f88f776e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f7cc14110d67a180f5408a91ac53a91f88f776e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f7cc14110d67a180f5408a91ac53a91f88f776e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f7cc14110d67a180f5408a91ac53a91f88f776e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "84bc4ba8168154fae0da7d56dcd11df0d4bc44f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84bc4ba8168154fae0da7d56dcd11df0d4bc44f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/84bc4ba8168154fae0da7d56dcd11df0d4bc44f2"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 68,
    "deletions": 52
  },
  "files": [
    {
      "sha": "a65b7d37a2898e5864507e7fbc671ea72e7c9f73",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -1,3 +1,20 @@\n+2019-12-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-aarch64.c (get_aarch64_insn): Avoid signed overflow.\n+\t* config/tc-metag.c (parse_dalu): Likewise.\n+\t* config/tc-tic4x.c (md_pcrel_from): Likewise.\n+\t* config/tc-tic6x.c (tic6x_output_unwinding): Likewise.\n+\t* config/tc-csky.c (parse_fexp): Use an unsigned char temp buffer.\n+\tDon't use register keyword.  Avoid signed overflow and remove now\n+\tunneccesary char masks.  Formatting.\n+\t* config/tc-ia64.c (operand_match): Don't use shifts to sign extend.\n+\t* config/tc-mep.c (mep_apply_fix): Likewise.\n+\t* config/tc-pru.c (md_apply_fix): Likewise.\n+\t* config/tc-riscv.c (load_const): Likewise.\n+\t* config/tc-nios2.c (md_apply_fix): Likewise.  Don't potentially\n+\ttruncate fixup before right shift.  Tidy BFD_RELOC_NIOS2_HIADJ16\n+\tcalculation.\n+\n 2019-12-12  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-evax.c (crc32, encode_32, encode_16, decode_16):"
    },
    {
      "sha": "8879451440057396cc51a50742ed0beb378f7aca",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -5024,7 +5024,8 @@ get_aarch64_insn (char *buf)\n {\n   unsigned char *where = (unsigned char *) buf;\n   uint32_t result;\n-  result = (where[0] | (where[1] << 8) | (where[2] << 16) | (where[3] << 24));\n+  result = ((where[0] | (where[1] << 8) | (where[2] << 16)\n+\t     | ((uint32_t) where[3] << 24)));\n   return result;\n }\n "
    },
    {
      "sha": "6fa6ee5dd6a5f15bb557e13e67ea82380c0e2f9c",
      "filename": "gas/config/tc-csky.c",
      "status": "modified",
      "additions": 30,
      "deletions": 29,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-csky.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-csky.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-csky.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -1777,8 +1777,8 @@ static char *\n parse_fexp (char *s, expressionS *e, unsigned char isdouble, uint64_t *dbnum)\n {\n   int length;                       /* Number of chars in an object.  */\n-  register char const *err = NULL;  /* Error from scanning float literal.  */\n-  char temp[8];\n+  const char *err = NULL;           /* Error from scanning float literal.  */\n+  unsigned char temp[8];\n \n   /* input_line_pointer->1st char of a flonum (we hope!).  */\n   input_line_pointer = s;\n@@ -1788,9 +1788,9 @@ parse_fexp (char *s, expressionS *e, unsigned char isdouble, uint64_t *dbnum)\n     input_line_pointer += 2;\n \n   if (isdouble)\n-    err = md_atof ('d', temp, &length);\n+    err = md_atof ('d', (char *) temp, &length);\n   else\n-    err = md_atof ('f', temp, &length);\n+    err = md_atof ('f', (char *) temp, &length);\n   know (length <= 8);\n   know (err != NULL || length > 0);\n \n@@ -1818,41 +1818,42 @@ parse_fexp (char *s, expressionS *e, unsigned char isdouble, uint64_t *dbnum)\n     {\n       uint32_t fnum;\n       if (target_big_endian)\n-\tfnum = (((temp[0] << 24) & 0xffffffff)\n-\t\t| ((temp[1] << 16) & 0xffffff)\n-\t\t| ((temp[2] << 8) & 0xffff)\n-\t\t| (temp[3] & 0xff));\n+\tfnum = (((uint32_t) temp[0] << 24)\n+\t\t| (temp[1] << 16)\n+\t\t| (temp[2] << 8)\n+\t\t| temp[3]);\n       else\n-\tfnum = (((temp[3] << 24) & 0xffffffff)\n-\t\t\t   | ((temp[2] << 16) & 0xffffff)\n-\t\t\t   | ((temp[1] << 8) & 0xffff)\n-\t\t\t   | (temp[0] & 0xff));\n-      e->X_add_number = fnum;    }\n+\tfnum = (((uint32_t) temp[3] << 24)\n+\t\t| (temp[2] << 16)\n+\t\t| (temp[1] << 8)\n+\t\t| temp[0]);\n+      e->X_add_number = fnum;\n+    }\n   else\n     {\n       if (target_big_endian)\n \t{\n-\t  *dbnum = (((temp[0] << 24) & 0xffffffff)\n-\t\t    | ((temp[1] << 16) & 0xffffff)\n-\t\t    | ((temp[2] << 8) & 0xffff)\n-\t\t    | (temp[3] & 0xff));\n+\t  *dbnum = (((uint32_t) temp[0] << 24)\n+\t\t    | (temp[1] << 16)\n+\t\t    | (temp[2] << 8)\n+\t\t    | temp[3]);\n \t  *dbnum <<= 32;\n-\t  *dbnum |= (((temp[4] << 24) & 0xffffffff)\n-\t\t     | ((temp[5] << 16) & 0xffffff)\n-\t\t     | ((temp[6] << 8) & 0xffff)\n-\t\t     | (temp[7] & 0xff));\n+\t  *dbnum |= (((uint32_t) temp[4] << 24)\n+\t\t     | (temp[5] << 16)\n+\t\t     | (temp[6] << 8)\n+\t\t     | temp[7]);\n \t}\n       else\n \t{\n-\t  *dbnum = (((temp[7] << 24) & 0xffffffff)\n-\t\t    | ((temp[6] << 16) & 0xffffff)\n-\t\t    | ((temp[5] << 8) & 0xffff)\n-\t\t    | (temp[4] & 0xff));\n+\t  *dbnum = (((uint32_t) temp[7] << 24)\n+\t\t    | (temp[6] << 16)\n+\t\t    | (temp[5] << 8)\n+\t\t    | temp[4]);\n \t  *dbnum <<= 32;\n-\t  *dbnum |= (((temp[3] << 24) & 0xffffffff)\n-\t\t     | ((temp[2] << 16) & 0xffffff)\n-\t\t     | ((temp[1] << 8) & 0xffff)\n-\t\t     | (temp[0] & 0xff));\n+\t  *dbnum |= (((uint32_t) temp[3] << 24)\n+\t\t     | (temp[2] << 16)\n+\t\t     | (temp[1] << 8)\n+\t\t     | temp[0]);\n       }\n     }\n   return input_line_pointer;"
    },
    {
      "sha": "5eb024e92ba3128ed89da4bb5b739430da9149e3",
      "filename": "gas/config/tc-ia64.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-ia64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-ia64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ia64.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -5839,9 +5839,8 @@ operand_match (const struct ia64_opcode *idesc, int res_index, expressionS *e)\n \t  /* Sign-extend 32-bit unsigned numbers, so that the following range\n \t     checks will work.  */\n \t  val = e->X_add_number;\n-\t  if (((val & (~(bfd_vma) 0 << 32)) == 0)\n-\t      && ((val & ((bfd_vma) 1 << 31)) != 0))\n-\t    val = ((val << 32) >> 32);\n+\t  if ((val & (~(bfd_vma) 0 << 32)) == 0)\n+\t    val = (val ^ ((bfd_vma) 1 << 31)) - ((bfd_vma) 1 << 31);\n \n \t  /* Check for 0x100000000.  This is valid because\n \t     0x100000000-1 is the same as ((uint32_t) -1).  */\n@@ -5879,9 +5878,8 @@ operand_match (const struct ia64_opcode *idesc, int res_index, expressionS *e)\n \t  /* Sign-extend 32-bit unsigned numbers, so that the following range\n \t     checks will work.  */\n \t  val = e->X_add_number;\n-\t  if (((val & (~(bfd_vma) 0 << 32)) == 0)\n-\t      && ((val & ((bfd_vma) 1 << 31)) != 0))\n-\t    val = ((val << 32) >> 32);\n+\t  if ((val & (~(bfd_vma) 0 << 32)) == 0)\n+\t    val = (val ^ ((bfd_vma) 1 << 31)) - ((bfd_vma) 1 << 31);\n \t}\n       else\n \tval = e->X_add_number;"
    },
    {
      "sha": "18e96c80465d2c2a17e817edf2f3277b389c2a6c",
      "filename": "gas/config/tc-mep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-mep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-mep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mep.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -1790,7 +1790,7 @@ mep_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     switch (fixP->fx_cgen.opinfo)\n       {\n       case BFD_RELOC_MEP_LOW16:\n-\t*valP = ((long)(*valP & 0xffff)) << 16 >> 16;\n+\t*valP = ((*valP & 0xffff) ^ 0x8000) - 0x8000;\n \tbreak;\n       case BFD_RELOC_MEP_HI16U:\n \t*valP >>= 16;"
    },
    {
      "sha": "d056e9adf705445a265106f7a479144a4cd3b22c",
      "filename": "gas/config/tc-metag.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-metag.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-metag.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-metag.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -5340,7 +5340,7 @@ parse_dalu (const char *line, metag_insn *insn,\n \t      /* Only MOV instructions have a DSP register as a\n \t\t destination. Set the MOV DSPe.r opcode. The simple\n \t\t OR'ing is OK because the usual MOV opcode is 0x00.  */\n-\t      insn->bits = (0x91 << 24);\n+\t      insn->bits = 0x91u << 24;\n \t      du_shift = 0;\n \t      l1_shift = 2;\n \t      regs_shift[0] = 19;\n@@ -5455,7 +5455,7 @@ parse_dalu (const char *line, metag_insn *insn,\n \t\t\t  du_shift = 0;\n \t\t\t  l1_shift = 2;\n \t\t\t  regs_shift[1] = 14;\n-\t\t\t  insn->bits = (0x92 << 24); /* Set opcode.  */\n+\t\t\t  insn->bits = 0x92u << 24; /* Set opcode.  */\n \t\t\t}\n \t\t    }\n \t\t}"
    },
    {
      "sha": "f1a02001f8c59054621ac835ac23c4f0c3612511",
      "filename": "gas/config/tc-nios2.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-nios2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-nios2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nios2.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -1384,7 +1384,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t    nios2_diagnose_overflow (fixup, howto, fixP, value);\n \n \t  /* Apply the right shift.  */\n-\t  fixup = ((signed)fixup) >> howto->rightshift;\n+\t  fixup = (offsetT) fixup >> howto->rightshift;\n \n \t  /* Truncate the fixup to right size.  */\n \t  switch (fixP->fx_r_type)\n@@ -1396,13 +1396,11 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t      fixup = fixup & 0xFFFF;\n \t      break;\n \t    case BFD_RELOC_NIOS2_HIADJ16:\n-\t      fixup = ((((fixup >> 16) & 0xFFFF) + ((fixup >> 15) & 0x01))\n-\t\t       & 0xFFFF);\n+\t      fixup = ((fixup + 0x8000) >> 16) & 0xFFFF;\n \t      break;\n \t    default:\n \t      {\n-\t\tint n = sizeof (fixup) * 8 - howto->bitsize;\n-\t\tfixup = (fixup << n) >> n;\n+\t\tfixup &= ((valueT) 1 << howto->bitsize) - 1;\n \t\tbreak;\n \t      }\n \t    }"
    },
    {
      "sha": "6de9f3ce48225bced85851afb0d219e9da22999d",
      "filename": "gas/config/tc-pru.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-pru.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-pru.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-pru.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -642,7 +642,6 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n {\n   unsigned char *where;\n   valueT value = *valP;\n-  long n;\n \n   /* Assert that the fixup is one we can handle.  */\n   gas_assert (fixP != NULL && valP != NULL\n@@ -801,11 +800,13 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t    pru_diagnose_overflow (fixup, howto, fixP, insn);\n \n \t  /* Apply the right shift.  */\n-\t  fixup = ((offsetT)fixup) >> howto->rightshift;\n+\t  fixup = (offsetT) fixup >> howto->rightshift;\n \n \t  /* Truncate the fixup to right size.  */\n-\t  n = sizeof (fixup) * 8 - howto->bitsize;\n-\t  fixup = (fixup << n) >> n;\n+\t  if (howto->bitsize == 0)\n+\t    fixup = 0;\n+\t  else\n+\t    fixup &= ((valueT) 2 << (howto->bitsize - 1)) - 1;\n \n \t  /* Fix up the instruction.  Non-contiguous bitfields need\n \t     special handling.  */"
    },
    {
      "sha": "7ec1028b283657687c577e2325b6c5f7bfe90d0d",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -1043,9 +1043,9 @@ static void\n load_const (int reg, expressionS *ep)\n {\n   int shift = RISCV_IMM_BITS;\n-  bfd_vma upper_imm;\n+  bfd_vma upper_imm, sign = (bfd_vma) 1 << (RISCV_IMM_BITS - 1);\n   expressionS upper = *ep, lower = *ep;\n-  lower.X_add_number = (int32_t) ep->X_add_number << (32-shift) >> (32-shift);\n+  lower.X_add_number = ((ep->X_add_number & (sign + sign - 1)) ^ sign) - sign;\n   upper.X_add_number -= lower.X_add_number;\n \n   if (ep->X_op != O_constant)"
    },
    {
      "sha": "bbbd696e43e7dafefcb3e52c6f95151afcc84d9b",
      "filename": "gas/config/tc-tic4x.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-tic4x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-tic4x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic4x.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -2937,7 +2937,7 @@ md_pcrel_from (fixS *fixP)\n   unsigned int op;\n \n   buf = (unsigned char *) fixP->fx_frag->fr_literal + fixP->fx_where;\n-  op = (buf[3] << 24) | (buf[2] << 16) | (buf[1] << 8) | buf[0];\n+  op = ((unsigned) buf[3] << 24) | (buf[2] << 16) | (buf[1] << 8) | buf[0];\n \n   return ((fixP->fx_where + fixP->fx_frag->fr_address) >> 2) +\n     tic4x_pc_offset (op);"
    },
    {
      "sha": "6260ecb983319915e0a86e7b1be42eb4a24f0a08",
      "filename": "gas/config/tc-tic6x.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-tic6x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f7cc14110d67a180f5408a91ac53a91f88f776e/gas/config/tc-tic6x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic6x.c?ref=4f7cc14110d67a180f5408a91ac53a91f88f776e",
      "patch": "@@ -5060,7 +5060,7 @@ tic6x_output_unwinding (bfd_boolean need_extab)\n       if (unwind->personality_index == -1)\n \t{\n \t  tmp = md_chars_to_number (unwind->frag_start + 4, 4);\n-\t  tmp |= ((unwind->data_bytes - 8) >> 2) << 24;\n+\t  tmp |= (valueT) ((unwind->data_bytes - 8) >> 2) << 24;\n \t  md_number_to_chars (unwind->frag_start + 4, tmp, 4);\n \t}\n       else if (unwind->personality_index == 1 || unwind->personality_index == 2)"
    }
  ]
}