{
  "sha": "9abca70219e8e15991b9a4d3034672c9f720234f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWFiY2E3MDIxOWU4ZTE1OTkxYjlhNGQzMDM0NjcyYzlmNzIwMjM0Zg==",
  "commit": {
    "author": {
      "name": "Christos Zoulas",
      "email": "christos@zoulas.com",
      "date": "2019-06-12T13:51:17Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-12T13:51:17Z"
    },
    "message": "Add support for NetBSD PaX notes to readelf.\n\n\tPR 24663\n\t* readelf.c (process_netbsd_elf_note): Add support for\n\tNT_NETBSD_PAX.\n\t(process_note): Add support for PaX notes.",
    "tree": {
      "sha": "a0d12290463dbefe2735a4978475b09f893fa751",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a0d12290463dbefe2735a4978475b09f893fa751"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9abca70219e8e15991b9a4d3034672c9f720234f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9abca70219e8e15991b9a4d3034672c9f720234f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9abca70219e8e15991b9a4d3034672c9f720234f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9abca70219e8e15991b9a4d3034672c9f720234f/comments",
  "author": {
    "login": "zoulasc",
    "id": 579573,
    "node_id": "MDQ6VXNlcjU3OTU3Mw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/579573?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/zoulasc",
    "html_url": "https://github.com/zoulasc",
    "followers_url": "https://api.github.com/users/zoulasc/followers",
    "following_url": "https://api.github.com/users/zoulasc/following{/other_user}",
    "gists_url": "https://api.github.com/users/zoulasc/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/zoulasc/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/zoulasc/subscriptions",
    "organizations_url": "https://api.github.com/users/zoulasc/orgs",
    "repos_url": "https://api.github.com/users/zoulasc/repos",
    "events_url": "https://api.github.com/users/zoulasc/events{/privacy}",
    "received_events_url": "https://api.github.com/users/zoulasc/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c0d38b0ec6756de6a0b68477e47bb8619eef2262",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d38b0ec6756de6a0b68477e47bb8619eef2262",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c0d38b0ec6756de6a0b68477e47bb8619eef2262"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 39,
    "deletions": 15
  },
  "files": [
    {
      "sha": "762c9c19e4101b991f6f04e07451fcabddcbe185",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9abca70219e8e15991b9a4d3034672c9f720234f/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9abca70219e8e15991b9a4d3034672c9f720234f/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9abca70219e8e15991b9a4d3034672c9f720234f",
      "patch": "@@ -1,3 +1,10 @@\n+2019-06-12  Christos Zoulas  <christos@zoulas.com>\n+\n+\tPR 24663\n+\t* readelf.c (process_netbsd_elf_note): Add support for\n+\tNT_NETBSD_PAX.\n+\t(process_note): Add support for PaX notes.\n+\n 2019-06-12  Christos Zoulas  <christos@zoulas.com>\n \n \tPR 24665"
    },
    {
      "sha": "4ed948c651eaee865667ddfc360a4828ba028cce",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 32,
      "deletions": 15,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9abca70219e8e15991b9a4d3034672c9f720234f/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9abca70219e8e15991b9a4d3034672c9f720234f/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=9abca70219e8e15991b9a4d3034672c9f720234f",
      "patch": "@@ -2412,7 +2412,7 @@ get_machine_name (unsigned e_machine)\n     case EM_TPC:\t\treturn \"Tenor Network TPC processor\";\n     case EM_SNP1K:\t        return \"Trebia SNP 1000 processor\";\n       /* 100 */\n-    case EM_ST200:\t\treturn \"STMicroelectronics ST200 microcontroller\";  \n+    case EM_ST200:\t\treturn \"STMicroelectronics ST200 microcontroller\";\n     case EM_IP2K_OLD:\n     case EM_IP2K:\t\treturn \"Ubicom IP2xxx 8-bit microcontrollers\";\n     case EM_MAX:\t\treturn \"MAX Processor\";\n@@ -2528,7 +2528,7 @@ get_machine_name (unsigned e_machine)\n     case EM_MT:                 return \"Morpho Techologies MT processor\";\n     case EM_ALPHA:\t\treturn \"Alpha\";\n     case EM_WEBASSEMBLY:\treturn \"Web Assembly\";\n-    case EM_DLX:\t\treturn \"OpenDLX\";  \n+    case EM_DLX:\t\treturn \"OpenDLX\";\n     case EM_XSTORMY16:\t\treturn \"Sanyo XStormy16 CPU core\";\n     case EM_IQ2000:       \treturn \"Vitesse IQ2000\";\n     case EM_M32C_OLD:\n@@ -11136,15 +11136,15 @@ get_symbol_visibility (unsigned int visibility)\n \n static const char *\n get_alpha_symbol_other (unsigned int other)\n-{   \n+{\n   switch (other)\n     {\n     case STO_ALPHA_NOPV:       return \"NOPV\";\n     case STO_ALPHA_STD_GPLOAD: return \"STD GPLOAD\";\n     default:\n       error (_(\"Unrecognized alpah specific other value: %u\"), other);\n       return _(\"<unknown>\");\n-    } \n+    }\n }\n \n static const char *\n@@ -11549,7 +11549,7 @@ get_symbol_version_string (Filedata *                   filedata,\n \n       if (ivd.vd_ndx == (vers_data & VERSYM_VERSION))\n \t{\n-\t  if (ivd.vd_ndx == 1 && ivd.vd_flags == VER_FLG_BASE) \n+\t  if (ivd.vd_ndx == 1 && ivd.vd_flags == VER_FLG_BASE)\n \t    return NULL;\n \n \t  off -= ivd.vd_next;\n@@ -12598,7 +12598,7 @@ is_32bit_abs_reloc (Filedata * filedata, unsigned int reloc_type)\n     case EM_OR1K:\n       return reloc_type == 1; /* R_OR1K_32.  */\n     case EM_PARISC:\n-      return (reloc_type == 1 /* R_PARISC_DIR32.  */\t      \n+      return (reloc_type == 1 /* R_PARISC_DIR32.  */\n \t      || reloc_type == 2 /* R_PARISC_DIR21L.  */\n \t      || reloc_type == 41); /* R_PARISC_SECREL32.  */\n     case EM_PJ:\n@@ -13993,7 +13993,7 @@ load_specific_debug_section (enum dwarf_section_display_enum  debug,\n   struct dwarf_section * section = &debug_displays [debug].section;\n   char buf [64];\n   Filedata * filedata = (Filedata *) data;\n-  \n+\n   if (section->start != NULL)\n     {\n       /* If it is already loaded, do nothing.  */\n@@ -17955,7 +17955,7 @@ print_gnu_note (Filedata * filedata, Elf_Internal_Note *pnote)\n     case NT_GNU_PROPERTY_TYPE_0:\n       print_gnu_property_note (filedata, pnote);\n       break;\n-      \n+\n     default:\n       /* Handle unrecognised types.  An error message should have already been\n \t created by get_gnu_elf_note_type(), so all that we need to do is to\n@@ -18075,10 +18075,23 @@ process_netbsd_elf_note (Elf_Internal_Note * pnote)\n       return TRUE;\n \n     case NT_NETBSD_MARCH:\n-      printf (\"  NetBSD\\t0x%08lx\\tMARCH <%s>\\n\", pnote->descsz,\n+      printf (\"  NetBSD\\t\\t0x%08lx\\tMARCH <%s>\\n\", pnote->descsz,\n \t      pnote->descdata);\n       return TRUE;\n \n+#ifdef   NT_NETBSD_PAX\n+    case NT_NETBSD_PAX:\n+      version = byte_get ((unsigned char *) pnote->descdata, sizeof (version));\n+      printf (\"  NetBSD\\t\\t0x%08lx\\tPaX <%s%s%s%s%s%s>\\n\", pnote->descsz,\n+\t      ((version & NT_NETBSD_PAX_MPROTECT) ? \"+mprotect\" : \"\"),\n+\t      ((version & NT_NETBSD_PAX_NOMPROTECT) ? \"-mprotect\" : \"\"),\n+\t      ((version & NT_NETBSD_PAX_GUARD) ? \"+guard\" : \"\"),\n+\t      ((version & NT_NETBSD_PAX_NOGUARD) ? \"-guard\" : \"\"),\n+\t      ((version & NT_NETBSD_PAX_ASLR) ? \"+ASLR\" : \"\"),\n+\t      ((version & NT_NETBSD_PAX_NOASLR) ? \"-ASLR\" : \"\"));\n+      return TRUE;\n+#endif\n+\n     default:\n       printf (\"  NetBSD\\t0x%08lx\\tUnknown note type: (0x%08lx)\\n\", pnote->descsz,\n \t      pnote->type);\n@@ -18267,7 +18280,7 @@ print_stapsdt_note (Elf_Internal_Note *pnote)\n     }\n   else\n     goto stapdt_note_too_small;\n-  \n+\n   if (data >= data_end)\n     goto stapdt_note_too_small;\n   maxlen = data_end - data;\n@@ -18594,7 +18607,7 @@ same_section (Filedata * filedata, unsigned long addr1, unsigned long addr2)\n \n   a1 = find_section_by_address (filedata, addr1);\n   a2 = find_section_by_address (filedata, addr2);\n-  \n+\n   return a1 == a2 && a1 != NULL;\n }\n \n@@ -18658,7 +18671,7 @@ print_gnu_build_attribute_description (Elf_Internal_Note *  pnote,\n       start = byte_get ((unsigned char *) pnote->descdata, 8);\n       end = byte_get ((unsigned char *) pnote->descdata + 8, 8);\n       break;\n-      \n+\n     default:\n       error (_(\"    <invalid description size: %lx>\\n\"), pnote->descsz);\n       printf (_(\"    <invalid descsz>\"));\n@@ -18953,7 +18966,7 @@ print_gnu_build_attribute_name (Elf_Internal_Note * pnote)\n \n   if (do_wide && left > 0)\n     printf (\"%-*s\", left, \" \");\n-    \n+\n   return TRUE;\n }\n \n@@ -18991,6 +19004,10 @@ process_note (Elf_Internal_Note *  pnote,\n     /* NetBSD-specific core file notes.  */\n     return process_netbsd_elf_note (pnote);\n \n+  else if (const_strneq (pnote->namedata, \"PaX\"))\n+    /* NetBSD-specific core file notes.  */\n+    return process_netbsd_elf_note (pnote);\n+\n   else if (strneq (pnote->namedata, \"SPU/\", 4))\n     {\n       /* SPU-specific core file notes.  */\n@@ -19974,7 +19991,7 @@ process_archive (Filedata * filedata, bfd_boolean is_thin_archive)\n \t  /* PR 24049 - we cannot use filedata->file_name as this will\n \t     have already been freed.  */\n \t  error (_(\"%s: failed to read archive header\\n\"), arch.file_name);\n-\t    \n+\n           ret = FALSE;\n           break;\n         }\n@@ -20068,7 +20085,7 @@ process_archive (Filedata * filedata, bfd_boolean is_thin_archive)\n \n \t  thin_filedata.handle = nested_arch.file;\n \t  thin_filedata.file_name = qualified_name;\n-\t  \n+\n           if (! process_object (& thin_filedata))\n \t    ret = FALSE;\n         }"
    }
  ]
}