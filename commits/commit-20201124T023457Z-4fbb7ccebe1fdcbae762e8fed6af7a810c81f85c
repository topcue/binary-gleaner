{
  "sha": "4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGZiYjdjY2ViZTFmZGNiYWU3NjJlOGZlZDZhZjdhODEwYzgxZjg1Yw==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:34:57Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:34:57Z"
    },
    "message": "Fix stack smashing error during gdb_mpq_write_fixed_point selftest\n\nWhen building GDB using Ubuntu 20.04's system libgmp and compiler,\nrunning the \"maintenance selftest\" command triggers the following error:\n\n    | Running selftest gdb_mpq_write_fixed_point.\n    | *** stack smashing detected ***: terminated\n    | [1]    1092790 abort (core dumped)  ./gdb gdb\n\nThis happens while trying to construct an mpq_t object (a rational)\nfrom two integers representing the numerator and denominator.\nIn our test, the numerator is -8, and the denominator is 1.\nThe problem was that the rational was constructed using the wrong\nfunction. This is what we were doing prior to this patch:\n\n    mpq_set_ui (v.val, numerator, denominator);\n\nThe 'u' in \"ui\" stands for *unsigned*, which is wrong because\nnumerator and denominator's type is \"int\".\n\nAs a result of the above, instead of getting a rational value of -8,\nwe get a rational with a very large positive value (gmp_printf\nsays \"18446744073709551608\").\n\nFrom there, the test performs an operation which is expected to\nwrite this value into a buffer which was not dimensioned to fit\nsuch a number, thus leading GMP into a buffer overflow.\nThis was verified by applying the formula that GMP's documentation\ngives for the required memory buffer size needed during export:\n\n    | When an application is allocating space itself the required size can\n    | be determined with a calculation like the following. Since\n    | mpz_sizeinbase always returns at least 1, count here will be at\n    | least one, which avoids any portability problems with malloc(0),\n    | though if z is zero no space at all is actually needed (or written).\n    |\n    |     numb = 8*size - nail;\n    |     count = (mpz_sizeinbase (z, 2) + numb-1) / numb;\n    |     p = malloc (count * size);\n\nWith the very large number, mpz_sizeinbase returns 66 and thus\nthe malloc size becomes 16 bytes instead of the 8 we allocated.\n\nThis patch fixes the issue by using the correct \"set\" function.\n\ngdb/ChangeLog:\n\n        * unittests/gmp-utils-selftests.c (write_fp_test): Use mpq_set_si\n        instead of mpq_set_ui to initialize our GMP rational.",
    "tree": {
      "sha": "052ac508401935e3e1c185ea2136dac5f84630c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/052ac508401935e3e1c185ea2136dac5f84630c1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fc23d4728dcc8f88b822a6ecb8236067bd68cf97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc23d4728dcc8f88b822a6ecb8236067bd68cf97",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fc23d4728dcc8f88b822a6ecb8236067bd68cf97"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "bd74aa55e5b34c09afd4497f192392dce8b4d530",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-24  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* unittests/gmp-utils-selftests.c (write_fp_test): Use mpq_set_si\n+\tinstead of mpq_set_ui to initialize our GMP rational.\n+\n 2020-11-23  Tom de Vries  <tdevries@suse.de>\n \n \t* debuginfod-support.c (debuginfod_source_query)"
    },
    {
      "sha": "175ab3f98278f7eb89188d207cbb7703345c9c14",
      "filename": "gdb/unittests/gmp-utils-selftests.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c/gdb/unittests/gmp-utils-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c/gdb/unittests/gmp-utils-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/gmp-utils-selftests.c?ref=4fbb7ccebe1fdcbae762e8fed6af7a810c81f85c",
      "patch": "@@ -400,7 +400,7 @@ write_fp_test (int numerator, unsigned int denominator,\n   memset (buf, 0, len);\n \n   gdb_mpq v;\n-  mpq_set_ui (v.val, numerator, denominator);\n+  mpq_set_si (v.val, numerator, denominator);\n   mpq_canonicalize (v.val);\n   v.write_fixed_point (buf, len, byte_order, 0, scaling_factor);\n "
    }
  ]
}