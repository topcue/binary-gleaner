{
  "sha": "f4be677293a68a4d54f978bccbd703c3909b5149",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjRiZTY3NzI5M2E2OGE0ZDU0Zjk3OGJjY2JkNzAzYzM5MDliNTE0OQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-05T14:47:04Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-11T10:26:18Z"
    },
    "message": "gdb/testsuite: split 'maint info sections' tests to a new file\n\nThe next couple of patches are going to add more tests for the 'maint\ninfo sections' command.  Rather than try to jam these tests into the\nalready quite long gdb.base/maint.c, this commit moves all of the\ntests for 'maint info sections' into a new file.\n\nI've updated the tests to make use of some newer testsuite constructs,\nlike -wrap and $gdb_test_name for gdb_test_multiple, but otherwise the\ntests should not have changed with this commit.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/maint-info-sections.exp: New file, content is moved\n\tfrom gdb.base/maint.exp and cleaned up to use latest testsuite\n\ttechniques.\n\t* gdb.base/maint.exp: Tests moved out to\n\tgdb.base/maint-info-sections.exp.",
    "tree": {
      "sha": "99d521bc91afaf2dafda9d0ce9da961cbd934932",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99d521bc91afaf2dafda9d0ce9da961cbd934932"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f4be677293a68a4d54f978bccbd703c3909b5149",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4be677293a68a4d54f978bccbd703c3909b5149",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f4be677293a68a4d54f978bccbd703c3909b5149",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4be677293a68a4d54f978bccbd703c3909b5149/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1db66e348ac6fb5456dd76ddd700434e5cb5ba31",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1db66e348ac6fb5456dd76ddd700434e5cb5ba31",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1db66e348ac6fb5456dd76ddd700434e5cb5ba31"
    }
  ],
  "stats": {
    "total": 222,
    "additions": 135,
    "deletions": 87
  },
  "files": [
    {
      "sha": "c2cc22254c15143f763471cfb2452fef37c1c869",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f4be677293a68a4d54f978bccbd703c3909b5149",
      "patch": "@@ -1,3 +1,11 @@\n+2021-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/maint-info-sections.exp: New file, content is moved\n+\tfrom gdb.base/maint.exp and cleaned up to use latest testsuite\n+\ttechniques.\n+\t* gdb.base/maint.exp: Tests moved out to\n+\tgdb.base/maint-info-sections.exp.\n+\n 2021-02-10  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdb.multi/multi-target.exp.tcl (setup): Add \"set sysroot\" to"
    },
    {
      "sha": "6c41ff2bd90315b09c1ea615f89d4f0d8dbb65b9",
      "filename": "gdb/testsuite/gdb.base/maint-info-sections.exp",
      "status": "added",
      "additions": 127,
      "deletions": 0,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-info-sections.exp?ref=f4be677293a68a4d54f978bccbd703c3909b5149",
      "patch": "@@ -0,0 +1,127 @@\n+# Copyright 1998-2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test just for the 'maintenance info sections' command.\n+\n+standard_testfile break.c break1.c\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile \\\n+\t [list $srcfile $srcfile2] {debug nowarnings}]} {\n+    return -1\n+}\n+\n+if ![runto_main] then {\n+    untested \"maint info sections\"\n+    return -1\n+}\n+\n+# Check that 'maint info sections' output looks correct.  When\n+# checking the lines for each section we reject section names starting\n+# with a '*' character, the internal *COM*, *UND*, *ABS*, and *IND*\n+# sections should not be displayed in this output.\n+set seen_header false\n+set seen_a_section false\n+gdb_test_multiple \"maint info sections\" \"general output check\" {\n+    -re \"Exec file:\\r\\n\\[\\t ]+`\\[^'\\]+', file type \\[^.\\]+\\.\\r\\n\" {\n+\tset seen_header true\n+\texp_continue\n+    }\n+    -re \"^ \\\\\\[\\[0-9\\]+\\\\\\]\\[\\t \\]+$hex->$hex at $hex: \\[^*\\r\\]+\\r\\n\" {\n+\tset seen_a_section true\n+\texp_continue\n+    }\n+    -re \"^$gdb_prompt $\" {\n+\tgdb_assert { $seen_header && $seen_a_section }\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+# It'd be nice to check for every possible section.  However, that's\n+# problematic, since the relative ordering wanders from release to\n+# release of the compilers.  Instead, we'll just check for two\n+# sections which appear to always come out in the same relative\n+# order.  (If that changes, then we should just check for one\n+# section.)\n+#\n+# And by the way: This testpoint will break for PA64, where a.out's\n+# are ELF files.\n+\n+# Standard GNU names.\n+set text_section \".text\"\n+set data_section \".data\"\n+\n+gdb_test_multiple \"maint info sections\" \"\" {\n+    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*ER_RO.*\" {\n+\t# Looks like RealView which uses different section names.\n+\tset text_section ER_RO\n+\tset data_section ER_RW\n+\tpass \"maint info sections\"\n+    }\n+    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*neardata.*\" {\n+\t# c6x doesn't have .data section.  It has .neardata and .fardata section.\n+\tset data_section \".neardata\"\n+\tpass \"maint info sections\"\n+    }\n+    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*\" {\n+\tpass \"maint info sections\"\n+    }\n+}\n+\n+# Test for new option: maint info sections <section name>\n+# If you don't have a .text section, this will require tweaking.\n+\n+gdb_test_multiple \"maint info sections $text_section\" \"\" {\n+    -re -wrap \" \\\\.bss .*\" {\n+\tfail $gdb_test_name\n+    }\n+    -re -wrap \" $data_section .*\" {\n+\tfail $gdb_test_name\n+    }\n+    -re -wrap \" $text_section .*\" {\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+# Test for new option: CODE section flag\n+# If your data section is tagged CODE, xfail this test.\n+\n+gdb_test_multiple \"maint info sections CODE\" \"\" {\n+    -re -wrap \" $data_section .*\" {\n+\tfail $gdb_test_name\n+    }\n+    -re -wrap \" $text_section .*\" {\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+# Test for new option: DATA section flag\n+# If your text section is tagged DATA, xfail this test.\n+#\n+# The \"maint info sections DATA\" test is marked for XFAIL on Windows,\n+# because Windows has text sections marked DATA.\n+setup_xfail \"*-*-*cygwin*\"\n+setup_xfail \"*-*-*mingw*\"\n+\n+gdb_test_multiple \"maint info sections DATA\" \"\" {\n+    -re -wrap \" $text_section .*\" {\n+\tfail $gdb_test_name\n+    }\n+    -re -wrap \" $data_section .*\" {\n+\tpass $gdb_test_name\n+    }\n+    -re -wrap \" .rodata .*\" {\n+\tpass $gdb_test_name\n+    }\n+}"
    },
    {
      "sha": "b418c023d735f20b2100148660b267783583bb15",
      "filename": "gdb/testsuite/gdb.base/maint.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 87,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/gdb.base/maint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4be677293a68a4d54f978bccbd703c3909b5149/gdb/testsuite/gdb.base/maint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint.exp?ref=f4be677293a68a4d54f978bccbd703c3909b5149",
      "patch": "@@ -40,7 +40,6 @@\n #maintenance print unwind -- Print unwind table entry at given address\n #\n #\n-#maintenance info sections -- List the BFD sections of the exec and core files\n #maintenance info breakpoints -- Status of all breakpoints\n #\n \n@@ -118,23 +117,6 @@ if ![runto_main] then {\n         perror \"tests suppressed\"\n }\n \n-# Check that 'maint info sections' output looks correct.  When\n-# checking the lines for each section we reject section names starting\n-# with a '*' character, the internal *COM*, *UND*, *ABS*, and *IND*\n-# sections should not be displayed in this output.\n-set test \"check maint info sections output\"\n-gdb_test_multiple \"maint info sections\" $test {\n-    -re \"Exec file:\\r\\n\\[\\t ]+`\\[^'\\]+', file type \\[^.\\]+\\.\\r\\n\" {\n-\texp_continue\n-    }\n-    -re \"^ \\\\\\[\\[0-9\\]+\\\\\\]\\[\\t \\]+$hex->$hex at $hex: \\[^*\\r\\]+\\r\\n\" {\n-\texp_continue\n-    }\n-    -re \"^$gdb_prompt $\" {\n-\tpass $test\n-    }\n-}\n-\n # If we're using .gdb_index or .debug_names there will be no psymtabs.\n set have_gdb_index [ exec_has_index_section ${binfile} ]\n \n@@ -417,75 +399,6 @@ if [istarget \"hppa*-*-11*\"] {\n set oldtimeout $timeout\n set timeout [expr $timeout + 300]\n \n-# It'd be nice to check for every possible section.  However, that's\n-# problematic, since the relative ordering wanders from release to\n-# release of the compilers.  Instead, we'll just check for two\n-# sections which appear to always come out in the same relative\n-# order.  (If that changes, then we should just check for one\n-# section.)\n-#\n-# And by the way: This testpoint will break for PA64, where a.out's\n-# are ELF files.\n-\n-# Standard GNU names.\n-set text_section \".text\"\n-set data_section \".data\"\n-\n-gdb_test_multiple \"maint info sections\" \"maint info sections\" {\n-    -re \"Exec file:\\r\\n.*maint($EXEEXT)?., file type.*ER_RO.*$gdb_prompt $\" {\n-\t# Looks like RealView which uses different section names.\n-\tset text_section ER_RO\n-\tset data_section ER_RW\n-\tpass \"maint info sections\"\n-    }\n-    -re \"Exec file:\\r\\n.*maint($EXEEXT)?., file type.*neardata.*$gdb_prompt $\" {\n-\t# c6x doesn't have .data section.  It has .neardata and .fardata section.\n-\tset data_section \".neardata\"\n-\tpass \"maint info sections\"\n-    }\n-    -re \"Exec file:\\r\\n.*maint($EXEEXT)?., file type.*$gdb_prompt $\" {\n-\tpass \"maint info sections\"\n-    }\n-}\n-\n-# Test for new option: maint info sections <section name>\n-# If you don't have a .text section, this will require tweaking.\n-\n-gdb_test_multiple \"maint info sections $text_section\" \\\n-    \"maint info sections .text\" {\n-\t-re \".* \\\\.bss .*$gdb_prompt $\" {\n-\t    fail \"maint info sections .text\"\n-\t}\n-\t-re \".* $data_section .*$gdb_prompt $\" {\n-\t    fail \"maint info sections .text\"\n-\t}\n-\t-re \".* $text_section .*$gdb_prompt $\" {\n-\t    pass \"maint info sections .text\"\n-\t}\n-    }\n-\n-# Test for new option: CODE section flag\n-# If your data section is tagged CODE, xfail this test.\n-\n-gdb_test_multiple \"maint info sections CODE\" \"maint info sections CODE\" {\n-    -re \".* $data_section .*$gdb_prompt $\" { fail \"maint info sections CODE\" }\n-    -re \".* $text_section .*$gdb_prompt $\" { pass \"maint info sections CODE\" }\n-}\n-\n-# Test for new option: DATA section flag\n-# If your text section is tagged DATA, xfail this test.\n-#\n-# The \"maint info sections DATA\" test is marked for XFAIL on Windows,\n-# because Windows has text sections marked DATA.\n-setup_xfail \"*-*-*cygwin*\"\n-setup_xfail \"*-*-*mingw*\"\n-\n-gdb_test_multiple \"maint info sections DATA\" \"maint info sections DATA\" {\n-    -re \".* $text_section .*$gdb_prompt $\" { fail \"maint info sections DATA\" }\n-    -re \".* $data_section .*$gdb_prompt $\" { pass \"maint info sections DATA\" }\n-    -re \".* .rodata .*$gdb_prompt $\" { pass \"maint info sections DATA\" }\n-}\n-\n set bp_location6 [gdb_get_line_number \"set breakpoint 6 here\"]\n \n gdb_test_multiple \"maint info breakpoints\" \"maint info breakpoints\" {"
    }
  ]
}