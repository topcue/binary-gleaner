{
  "sha": "7f17b20d6020f2a40369ef0568501ebcda952243",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2YxN2IyMGQ2MDIwZjJhNDAzNjllZjA1Njg1MDFlYmNkYTk1MjI0Mw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-08T15:15:10Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-09T13:09:38Z"
    },
    "message": "Split rank_one_type_parm_float from rank_one_type\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (rank_one_type_parm_float): New function extracted\n\tfrom...\n\t(rank_one_type): ... this.",
    "tree": {
      "sha": "9aab9db62b4d8d520c69006dd6c248740a09611d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9aab9db62b4d8d520c69006dd6c248740a09611d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f17b20d6020f2a40369ef0568501ebcda952243",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f17b20d6020f2a40369ef0568501ebcda952243",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f17b20d6020f2a40369ef0568501ebcda952243",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f17b20d6020f2a40369ef0568501ebcda952243/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2c50903575cec09d1748612fd0355b766ec04a19",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c50903575cec09d1748612fd0355b766ec04a19",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2c50903575cec09d1748612fd0355b766ec04a19"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 32,
    "deletions": 19
  },
  "files": [
    {
      "sha": "7df74fc9738786aa00d16630d951330df0e44622",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f17b20d6020f2a40369ef0568501ebcda952243/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f17b20d6020f2a40369ef0568501ebcda952243/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7f17b20d6020f2a40369ef0568501ebcda952243",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.c (rank_one_type_parm_float): New function extracted\n+\tfrom...\n+\t(rank_one_type): ... this.\n+\n 2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.c (rank_one_type_parm_bool): New function extracted"
    },
    {
      "sha": "fba9abf7ced5a98bc90aea17a23bfadd3a177727",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 26,
      "deletions": 19,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f17b20d6020f2a40369ef0568501ebcda952243/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f17b20d6020f2a40369ef0568501ebcda952243/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=7f17b20d6020f2a40369ef0568501ebcda952243",
      "patch": "@@ -4096,6 +4096,31 @@ rank_one_type_parm_bool (struct type *parm, struct type *arg, struct value *valu\n     }\n }\n \n+/* rank_one_type helper for when PARM's type code is TYPE_CODE_FLOAT.  */\n+\n+static struct rank\n+rank_one_type_parm_float (struct type *parm, struct type *arg, struct value *value)\n+{\n+  switch (TYPE_CODE (arg))\n+    {\n+    case TYPE_CODE_FLT:\n+      if (TYPE_LENGTH (arg) < TYPE_LENGTH (parm))\n+\treturn FLOAT_PROMOTION_BADNESS;\n+      else if (TYPE_LENGTH (arg) == TYPE_LENGTH (parm))\n+\treturn EXACT_MATCH_BADNESS;\n+      else\n+\treturn FLOAT_CONVERSION_BADNESS;\n+    case TYPE_CODE_INT:\n+    case TYPE_CODE_BOOL:\n+    case TYPE_CODE_ENUM:\n+    case TYPE_CODE_RANGE:\n+    case TYPE_CODE_CHAR:\n+      return INT_FLOAT_CONVERSION_BADNESS;\n+    default:\n+      return INCOMPATIBLE_TYPE_BADNESS;\n+    }\n+}\n+\n /* Compare one type (PARM) for compatibility with another (ARG).\n  * PARM is intended to be the parameter type of a function; and\n  * ARG is the supplied argument's type.  This function tests if\n@@ -4202,25 +4227,7 @@ rank_one_type (struct type *parm, struct type *arg, struct value *value)\n     case TYPE_CODE_BOOL:\n       return rank_one_type_parm_bool (parm, arg, value);\n     case TYPE_CODE_FLT:\n-      switch (TYPE_CODE (arg))\n-\t{\n-\tcase TYPE_CODE_FLT:\n-\t  if (TYPE_LENGTH (arg) < TYPE_LENGTH (parm))\n-\t    return FLOAT_PROMOTION_BADNESS;\n-\t  else if (TYPE_LENGTH (arg) == TYPE_LENGTH (parm))\n-\t    return EXACT_MATCH_BADNESS;\n-\t  else\n-\t    return FLOAT_CONVERSION_BADNESS;\n-\tcase TYPE_CODE_INT:\n-\tcase TYPE_CODE_BOOL:\n-\tcase TYPE_CODE_ENUM:\n-\tcase TYPE_CODE_RANGE:\n-\tcase TYPE_CODE_CHAR:\n-\t  return INT_FLOAT_CONVERSION_BADNESS;\n-\tdefault:\n-\t  return INCOMPATIBLE_TYPE_BADNESS;\n-\t}\n-      break;\n+      return rank_one_type_parm_float (parm, arg, value);\n     case TYPE_CODE_COMPLEX:\n       switch (TYPE_CODE (arg))\n \t{\t\t/* Strictly not needed for C++, but...  */"
    }
  ]
}