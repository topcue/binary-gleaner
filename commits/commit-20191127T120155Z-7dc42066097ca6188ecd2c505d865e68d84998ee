{
  "sha": "7dc42066097ca6188ecd2c505d865e68d84998ee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2RjNDIwNjYwOTdjYTYxODhlY2QyYzUwNWQ4NjVlNjhkODQ5OThlZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-09-24T22:35:47Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-27T12:01:55Z"
    },
    "message": "gdb/mi: Add new commands -symbol-info-{functions,variables,types}\n\nAdd new MI commands -symbol-info-functions, -symbol-info-variables,\nand -symbol-info-types which correspond to the CLI commands 'info\nfunctions', 'info variables', and 'info types' respectively.\n\ngdb/ChangeLog:\n\n\t* mi/mi-cmds.c (mi_cmds): Add '-symbol-info-functions',\n\t'-symbol-info-types', and '-symbol-info-variables'.\n\t* mi/mi-cmds.h (mi_cmd_symbol_info_functions): Declare.\n\t(mi_cmd_symbol_info_types): Declare.\n\t(mi_cmd_symbol_info_variables): Declare.\n\t* mi/mi-symbol-cmds.c: Add 'source.h' and 'mi-getopt.h' includes.\n\t(output_debug_symbol): New function.\n\t(output_nondebug_symbol): New function.\n\t(mi_symbol_info): New function.\n\t(mi_info_functions_or_variables): New function.\n\t(mi_cmd_symbol_info_functions): New function.\n\t(mi_cmd_symbol_info_types): New function.\n\t(mi_cmd_symbol_info_variables): New function.\n\t* NEWS: Mention new commands.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.mi/mi-sym-info-1.c: New file.\n\t* gdb.mi/mi-sym-info-2.c: New file.\n\t* gdb.mi/mi-sym-info.exp: New file.\n\ngdb/doc/ChangeLog:\n\n\t* doc/gdb.texinfo (GDB/MI Symbol Query): Document new MI command\n\t-symbol-info-functions, -symbol-info-types, and\n\t-symbol-info-variables.\n\nChange-Id: Ic2fc6a6750bbce91cdde2344791014e5ef45642d",
    "tree": {
      "sha": "a91d0455a292e5ba87a480b7b4498c2a8b44a0bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a91d0455a292e5ba87a480b7b4498c2a8b44a0bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7dc42066097ca6188ecd2c505d865e68d84998ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7dc42066097ca6188ecd2c505d865e68d84998ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7dc42066097ca6188ecd2c505d865e68d84998ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7dc42066097ca6188ecd2c505d865e68d84998ee/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5f512a7dd0df1205630e9edfaa84f2e9a8fb8771",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f512a7dd0df1205630e9edfaa84f2e9a8fb8771",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5f512a7dd0df1205630e9edfaa84f2e9a8fb8771"
    }
  ],
  "stats": {
    "total": 736,
    "additions": 730,
    "deletions": 6
  },
  "files": [
    {
      "sha": "4f36f3db285f9ee9ef0f5a98f69856966e82253a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -1,3 +1,20 @@\n+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* mi/mi-cmds.c (mi_cmds): Add '-symbol-info-functions',\n+\t'-symbol-info-types', and '-symbol-info-variables'.\n+\t* mi/mi-cmds.h (mi_cmd_symbol_info_functions): Declare.\n+\t(mi_cmd_symbol_info_types): Declare.\n+\t(mi_cmd_symbol_info_variables): Declare.\n+\t* mi/mi-symbol-cmds.c: Add 'source.h' and 'mi-getopt.h' includes.\n+\t(output_debug_symbol): New function.\n+\t(output_nondebug_symbol): New function.\n+\t(mi_symbol_info): New function.\n+\t(mi_info_functions_or_variables): New function.\n+\t(mi_cmd_symbol_info_functions): New function.\n+\t(mi_cmd_symbol_info_types): New function.\n+\t(mi_cmd_symbol_info_variables): New function.\n+\t* NEWS: Mention new commands.\n+\n 2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* symtab.c (symbol_to_info_string): New function, most content"
    },
    {
      "sha": "4af940ce6761d29de7574842d456e4e19e92e778",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -366,6 +366,10 @@ focus, winheight, +, -, >, <\n   These can be used to catch C++ exceptions in a similar fashion to\n   the CLI commands 'catch throw', 'catch rethrow', and 'catch catch'.\n \n+-symbol-info-functions, -symbol-info-types, and -symbol-info-variables\n+  These commands are the MI equivalent of the CLI commands 'info\n+  functions', 'info types', and 'info variables' respectively.\n+\n * Other MI changes\n \n  ** The default version of the MI interpreter is now 3 (-i=mi3)."
    },
    {
      "sha": "adbb052f5b54e4031eaa5823d18c18752725fcd7",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* doc/gdb.texinfo (GDB/MI Symbol Query): Document new MI command\n+\t-symbol-info-functions, -symbol-info-types, and\n+\t-symbol-info-variables.\n+\n 2019-11-26  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.texinfo (Maintenance Commands): Document new maint"
    },
    {
      "sha": "6b879b732c5cd59598984c6a9b5725fa45257b6d",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 262,
      "deletions": 6,
      "changes": 268,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -33887,27 +33887,283 @@ There's no equivalent @value{GDBN} command.  @code{gdbtk} has\n \n @subsubheading Example\n N.A.\n+@end ignore\n+\n+@subheading The @code{-symbol-info-functions} Command\n+@findex -symbol-info-functions\n+@anchor{-symbol-info-functions}\n+\n+@subsubheading Synopsis\n+\n+@smallexample\n+ -symbol-info-functions [--include-nondebug]\n+                        [--type @var{type_regexp}]\n+                        [--name @var{name_regexp}]\n+@end smallexample\n+\n+@noindent\n+Return a list containing the names and types for all global functions\n+taken from the debug information.  The functions are grouped by source\n+file, and shown with the line number on which each function is\n+defined.\n \n+The @code{--include-nondebug} option causes the output to include\n+code symbols from the symbol table.\n+\n+The options @code{--type} and @code{--name} allow the symbols returned\n+to be filtered based on either the name of the function, or the type\n+signature of the function.\n+\n+@subsubheading @value{GDBN} Command\n+\n+The corresponding @value{GDBN} command is @samp{info functions}.\n+\n+@subsubheading Example\n+@smallexample\n+@group\n+(gdb)\n+-symbol-info-functions\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"36\", name=\"f4\", type=\"void (int *)\",\n+                description=\"void f4(int *);\"@},\n+               @{line=\"42\", name=\"main\", type=\"int ()\",\n+                description=\"int main();\"@},\n+               @{line=\"30\", name=\"f1\", type=\"my_int_t (int, int)\",\n+                description=\"static my_int_t f1(int, int);\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"33\", name=\"f2\", type=\"float (another_float_t)\",\n+                description=\"float f2(another_float_t);\"@},\n+               @{line=\"39\", name=\"f3\", type=\"int (another_int_t)\",\n+                description=\"int f3(another_int_t);\"@},\n+               @{line=\"27\", name=\"f1\", type=\"another_float_t (int)\",\n+                description=\"static another_float_t f1(int);\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-functions --name f1\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"30\", name=\"f1\", type=\"my_int_t (int, int)\",\n+                description=\"static my_int_t f1(int, int);\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"27\", name=\"f1\", type=\"another_float_t (int)\",\n+                description=\"static another_float_t f1(int);\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-functions --type void\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"36\", name=\"f4\", type=\"void (int *)\",\n+                description=\"void f4(int *);\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-functions --include-nondebug\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"36\", name=\"f4\", type=\"void (int *)\",\n+                description=\"void f4(int *);\"@},\n+               @{line=\"42\", name=\"main\", type=\"int ()\",\n+                description=\"int main();\"@},\n+               @{line=\"30\", name=\"f1\", type=\"my_int_t (int, int)\",\n+                description=\"static my_int_t f1(int, int);\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"33\", name=\"f2\", type=\"float (another_float_t)\",\n+                description=\"float f2(another_float_t);\"@},\n+               @{line=\"39\", name=\"f3\", type=\"int (another_int_t)\",\n+                description=\"int f3(another_int_t);\"@},\n+               @{line=\"27\", name=\"f1\", type=\"another_float_t (int)\",\n+                description=\"static another_float_t f1(int);\"@}]@}],\n+   nondebug=\n+    [@{address=\"0x0000000000400398\",name=\"_init\"@},\n+     @{address=\"0x00000000004003b0\",name=\"_start\"@},\n+      ...\n+    ]@}\n+@end group\n+@end smallexample\n \n-@subheading The @code{-symbol-info-function} Command\n-@findex -symbol-info-function\n+@subheading The @code{-symbol-info-types} Command\n+@findex -symbol-info-types\n+@anchor{-symbol-info-types}\n \n @subsubheading Synopsis\n \n @smallexample\n- -symbol-info-function\n+ -symbol-info-types [--name @var{name_regexp}]\n @end smallexample\n \n-Show which function the symbol lives in.\n+@noindent\n+Return a list of all defined types.  The types are grouped by source\n+file, and shown with the line number on which each user defined type\n+is defined.  Some base types are not defined in the source code but\n+are added to the debug information by the compiler, for example\n+@code{int}, @code{float}, etc.; these types do not have an associated\n+line number.\n+\n+The option @code{--name} allows the list of types returned to be\n+filtered by name.\n \n @subsubheading @value{GDBN} Command\n \n-@samp{gdb_get_function} in @code{gdbtk}.\n+The corresponding @value{GDBN} command is @samp{info types}.\n \n @subsubheading Example\n-N.A.\n+@smallexample\n+@group\n+(gdb)\n+-symbol-info-types\n+^done,symbols=\n+  @{debug=\n+     [@{filename=\"gdb.mi/mi-sym-info-1.c\",\n+       fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+       symbols=[@{name=\"float\"@},\n+                @{name=\"int\"@},\n+                @{line=\"27\",name=\"typedef int my_int_t;\"@}]@},\n+      @{filename=\"gdb.mi/mi-sym-info-2.c\",\n+       fullname=\"/project/gdb.mi/mi-sym-info-2.c\",\n+       symbols=[@{line=\"24\",name=\"typedef float another_float_t;\"@},\n+                @{line=\"23\",name=\"typedef int another_int_t;\"@},\n+                @{name=\"float\"@},\n+                @{name=\"int\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-types --name _int_\n+^done,symbols=\n+  @{debug=\n+     [@{filename=\"gdb.mi/mi-sym-info-1.c\",\n+       fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+       symbols=[@{line=\"27\",name=\"typedef int my_int_t;\"@}]@},\n+      @{filename=\"gdb.mi/mi-sym-info-2.c\",\n+       fullname=\"/project/gdb.mi/mi-sym-info-2.c\",\n+       symbols=[@{line=\"23\",name=\"typedef int another_int_t;\"@}]@}]@}\n+@end group\n+@end smallexample\n+\n+@subheading The @code{-symbol-info-variables} Command\n+@findex -symbol-info-variables\n+@anchor{-symbol-info-variables}\n+\n+@subsubheading Synopsis\n+\n+@smallexample\n+ -symbol-info-variables [--include-nondebug]\n+                        [--type @var{type_regexp}]\n+                        [--name @var{name_regexp}]\n+@end smallexample\n+\n+@noindent\n+Return a list containing the names and types for all global variables\n+taken from the debug information.  The variables are grouped by source\n+file, and shown with the line number on which each variable is\n+defined.\n+\n+The @code{--include-nondebug} option causes the output to include\n+data symbols from the symbol table.\n+\n+The options @code{--type} and @code{--name} allow the symbols returned\n+to be filtered based on either the name of the variable, or the type\n+of the variable.\n+\n+@subsubheading @value{GDBN} Command\n \n+The corresponding @value{GDBN} command is @samp{info variables}.\n \n+@subsubheading Example\n+@smallexample\n+@group\n+(gdb)\n+-symbol-info-variables\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"25\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@},\n+               @{line=\"24\",name=\"global_i1\",type=\"int\",\n+                description=\"static int global_i1;\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"21\",name=\"global_f2\",type=\"int\",\n+                description=\"int global_f2;\"@},\n+               @{line=\"20\",name=\"global_i2\",type=\"int\",\n+                description=\"int global_i2;\"@},\n+               @{line=\"19\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@},\n+               @{line=\"18\",name=\"global_i1\",type=\"int\",\n+                description=\"static int global_i1;\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-variables --name f1\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"25\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"19\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-variables --type float\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"25\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"19\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@}]@}]@}\n+@end group\n+@group\n+(gdb)\n+-symbol-info-variables --include-nondebug\n+^done,symbols=\n+  @{debug=\n+    [@{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-1.c\",\n+      symbols=[@{line=\"25\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@},\n+               @{line=\"24\",name=\"global_i1\",type=\"int\",\n+                description=\"static int global_i1;\"@}]@},\n+     @{filename=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      fullname=\"/project/gdb/testsuite/gdb.mi/mi-sym-info-2.c\",\n+      symbols=[@{line=\"21\",name=\"global_f2\",type=\"int\",\n+                description=\"int global_f2;\"@},\n+               @{line=\"20\",name=\"global_i2\",type=\"int\",\n+                description=\"int global_i2;\"@},\n+               @{line=\"19\",name=\"global_f1\",type=\"float\",\n+                description=\"static float global_f1;\"@},\n+               @{line=\"18\",name=\"global_i1\",type=\"int\",\n+                description=\"static int global_i1;\"@}]@}],\n+   nondebug=\n+    [@{address=\"0x00000000004005d0\",name=\"_IO_stdin_used\"@},\n+     @{address=\"0x00000000004005d8\",name=\"__dso_handle\"@}\n+      ...\n+    ]@}\n+@end group\n+@end smallexample\n+\n+@ignore\n @subheading The @code{-symbol-info-line} Command\n @findex -symbol-info-line\n "
    },
    {
      "sha": "df9f25fcbd0a5062e2f6b1f07058b76d9f1510b9",
      "filename": "gdb/mi/mi-cmds.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.c?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -151,6 +151,9 @@ static struct mi_cmd mi_cmds[] =\n   DEF_MI_CMD_MI_1 (\"stack-select-frame\", mi_cmd_stack_select_frame,\n \t\t   &mi_suppress_notification.user_selected_context),\n   DEF_MI_CMD_MI (\"symbol-list-lines\", mi_cmd_symbol_list_lines),\n+  DEF_MI_CMD_MI (\"symbol-info-functions\", mi_cmd_symbol_info_functions),\n+  DEF_MI_CMD_MI (\"symbol-info-variables\", mi_cmd_symbol_info_variables),\n+  DEF_MI_CMD_MI (\"symbol-info-types\", mi_cmd_symbol_info_types),\n   DEF_MI_CMD_CLI (\"target-attach\", \"attach\", 1),\n   DEF_MI_CMD_MI (\"target-detach\", mi_cmd_target_detach),\n   DEF_MI_CMD_CLI (\"target-disconnect\", \"disconnect\", 0),"
    },
    {
      "sha": "c2fd7d30d63268861183f20230d987d249a79802",
      "filename": "gdb/mi/mi-cmds.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-cmds.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-cmds.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.h?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -94,6 +94,9 @@ extern mi_cmd_argv_ftype mi_cmd_stack_list_locals;\n extern mi_cmd_argv_ftype mi_cmd_stack_list_variables;\n extern mi_cmd_argv_ftype mi_cmd_stack_select_frame;\n extern mi_cmd_argv_ftype mi_cmd_symbol_list_lines;\n+extern mi_cmd_argv_ftype mi_cmd_symbol_info_functions;\n+extern mi_cmd_argv_ftype mi_cmd_symbol_info_types;\n+extern mi_cmd_argv_ftype mi_cmd_symbol_info_variables;\n extern mi_cmd_argv_ftype mi_cmd_target_detach;\n extern mi_cmd_argv_ftype mi_cmd_target_file_get;\n extern mi_cmd_argv_ftype mi_cmd_target_file_put;"
    },
    {
      "sha": "f674dcf2bb581ef6102590340ef01fb0f6f92f3c",
      "filename": "gdb/mi/mi-symbol-cmds.c",
      "status": "modified",
      "additions": 209,
      "deletions": 0,
      "changes": 209,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-symbol-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/mi/mi-symbol-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-symbol-cmds.c?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -21,6 +21,8 @@\n #include \"symtab.h\"\n #include \"objfiles.h\"\n #include \"ui-out.h\"\n+#include \"source.h\"\n+#include \"mi-getopt.h\"\n \n /* Print the list of all pc addresses and lines of code for the\n    provided (full or base) source file name.  The entries are sorted\n@@ -59,3 +61,210 @@ mi_cmd_symbol_list_lines (const char *command, char **argv, int argc)\n       uiout->field_signed (\"line\", SYMTAB_LINETABLE (s)->item[i].line);\n     }\n }\n+\n+/* Used by the -symbol-info-* and -symbol-info-module-* commands to print\n+   information about the symbol SYM in a block of index BLOCK (either\n+   GLOBAL_BLOCK or STATIC_BLOCK).  KIND is the kind of symbol we searched\n+   for in order to find SYM, which impact which fields are displayed in the\n+   results.  */\n+\n+static void\n+output_debug_symbol (ui_out *uiout, enum search_domain kind,\n+\t\t     struct symbol *sym, int block)\n+{\n+  ui_out_emit_tuple tuple_emitter (uiout, NULL);\n+\n+  if (SYMBOL_LINE (sym) != 0)\n+    uiout->field_unsigned (\"line\", SYMBOL_LINE (sym));\n+  uiout->field_string (\"name\", sym->print_name ());\n+\n+  if (kind == FUNCTIONS_DOMAIN || kind == VARIABLES_DOMAIN)\n+    {\n+      string_file tmp_stream;\n+      type_print (SYMBOL_TYPE (sym), \"\", &tmp_stream, -1);\n+      uiout->field_string (\"type\", tmp_stream.string ());\n+\n+      std::string str = symbol_to_info_string (sym, block, kind);\n+      uiout->field_string (\"description\", str);\n+    }\n+}\n+\n+/* Actually output one nondebug symbol, puts a tuple emitter in place\n+   and then outputs the fields for this msymbol.  */\n+\n+static void\n+output_nondebug_symbol (ui_out *uiout,\n+\t\t\tconst struct bound_minimal_symbol &msymbol)\n+{\n+  struct gdbarch *gdbarch = get_objfile_arch (msymbol.objfile);\n+  ui_out_emit_tuple tuple_emitter (uiout, NULL);\n+\n+  uiout->field_core_addr (\"address\", gdbarch,\n+\t\t\t  BMSYMBOL_VALUE_ADDRESS (msymbol));\n+  uiout->field_string (\"name\", msymbol.minsym->print_name ());\n+}\n+\n+/* This is the guts of the commands '-symbol-info-functions',\n+   '-symbol-info-variables', and '-symbol-info-types'.  It searches for\n+   symbols matching KING, NAME_REGEXP, TYPE_REGEXP, and EXCLUDE_MINSYMS,\n+   and then prints the matching [m]symbols in an MI structured format.  */\n+\n+static void\n+mi_symbol_info (enum search_domain kind, const char *name_regexp,\n+\t\tconst char *type_regexp, bool exclude_minsyms)\n+{\n+  global_symbol_searcher sym_search (kind, name_regexp);\n+  sym_search.set_symbol_type_regexp (type_regexp);\n+  sym_search.set_exclude_minsyms (exclude_minsyms);\n+  std::vector<symbol_search> symbols = sym_search.search ();\n+  ui_out *uiout = current_uiout;\n+  int i = 0;\n+\n+  ui_out_emit_tuple outer_symbols_emitter (uiout, \"symbols\");\n+\n+  /* Debug symbols are placed first. */\n+  if (i < symbols.size () && symbols[i].msymbol.minsym == nullptr)\n+    {\n+      ui_out_emit_list debug_symbols_list_emitter (uiout, \"debug\");\n+\n+      /* As long as we have debug symbols...  */\n+      while (i < symbols.size () && symbols[i].msymbol.minsym == nullptr)\n+\t{\n+\t  symtab *symtab = symbol_symtab (symbols[i].symbol);\n+\t  ui_out_emit_tuple symtab_tuple_emitter (uiout, nullptr);\n+\n+\t  uiout->field_string (\"filename\",\n+\t\t\t       symtab_to_filename_for_display (symtab));\n+\t  uiout->field_string (\"fullname\", symtab_to_fullname (symtab));\n+\n+\t  ui_out_emit_list symbols_list_emitter (uiout, \"symbols\");\n+\n+\t  /* As long as we have debug symbols from this symtab...  */\n+\t  for (; (i < symbols.size ()\n+\t\t  && symbols[i].msymbol.minsym == nullptr\n+\t\t  && symbol_symtab (symbols[i].symbol) == symtab);\n+\t       ++i)\n+\t    {\n+\t      symbol_search &s = symbols[i];\n+\n+\t      output_debug_symbol (uiout, kind, s.symbol, s.block);\n+\t    }\n+\t}\n+    }\n+\n+  /* Non-debug symbols are placed after.  */\n+  if (i < symbols.size ())\n+    {\n+      ui_out_emit_list nondebug_symbols_list_emitter (uiout, \"nondebug\");\n+\n+      /* As long as we have nondebug symbols...  */\n+      for (; i < symbols.size (); i++)\n+\t{\n+\t  gdb_assert (symbols[i].msymbol.minsym != nullptr);\n+\t  output_nondebug_symbol (uiout, symbols[i].msymbol);\n+\t}\n+    }\n+}\n+\n+/* Helper for mi_cmd_symbol_info_{functions,variables} - depending on KIND.\n+   Processes command line options from ARGV and ARGC.  */\n+\n+static void\n+mi_info_functions_or_variables (enum search_domain kind, char **argv, int argc)\n+{\n+  const char *regexp = nullptr;\n+  const char *t_regexp = nullptr;\n+  bool exclude_minsyms = true;\n+\n+  enum opt\n+    {\n+     INCLUDE_NONDEBUG_OPT, TYPE_REGEXP_OPT, NAME_REGEXP_OPT\n+    };\n+  static const struct mi_opt opts[] =\n+  {\n+    {\"-include-nondebug\" , INCLUDE_NONDEBUG_OPT, 0},\n+    {\"-type\", TYPE_REGEXP_OPT, 1},\n+    {\"-name\", NAME_REGEXP_OPT, 1},\n+    { 0, 0, 0 }\n+  };\n+\n+  int oind = 0;\n+  char *oarg = nullptr;\n+\n+  while (1)\n+    {\n+      const char *cmd_string\n+\t= ((kind == FUNCTIONS_DOMAIN)\n+\t   ? \"-symbol-info-functions\" : \"-symbol-info-variables\");\n+      int opt = mi_getopt (cmd_string, argc, argv, opts, &oind, &oarg);\n+      if (opt < 0)\n+\tbreak;\n+      switch ((enum opt) opt)\n+\t{\n+\tcase INCLUDE_NONDEBUG_OPT:\n+\t  exclude_minsyms = false;\n+\t  break;\n+\tcase TYPE_REGEXP_OPT:\n+\t  t_regexp = oarg;\n+\t  break;\n+\tcase NAME_REGEXP_OPT:\n+\t  regexp = oarg;\n+\t  break;\n+\t}\n+    }\n+\n+  mi_symbol_info (kind, regexp, t_regexp, exclude_minsyms);\n+}\n+\n+/* Implement -symbol-info-functions command.  */\n+\n+void\n+mi_cmd_symbol_info_functions (const char *command, char **argv, int argc)\n+{\n+  mi_info_functions_or_variables (FUNCTIONS_DOMAIN, argv, argc);\n+}\n+\n+/* Implement -symbol-info-types command.  */\n+\n+void\n+mi_cmd_symbol_info_types (const char *command, char **argv, int argc)\n+{\n+  const char *regexp = nullptr;\n+\n+  enum opt\n+    {\n+     NAME_REGEXP_OPT\n+    };\n+  static const struct mi_opt opts[] =\n+  {\n+    {\"-name\", NAME_REGEXP_OPT, 1},\n+    { 0, 0, 0 }\n+  };\n+\n+  int oind = 0;\n+  char *oarg = nullptr;\n+\n+  while (true)\n+    {\n+      int opt = mi_getopt (\"-symbol-info-types\", argc, argv, opts,\n+\t\t\t   &oind, &oarg);\n+      if (opt < 0)\n+\tbreak;\n+      switch ((enum opt) opt)\n+\t{\n+\tcase NAME_REGEXP_OPT:\n+\t  regexp = oarg;\n+\t  break;\n+\t}\n+    }\n+\n+  mi_symbol_info (TYPES_DOMAIN, regexp, nullptr, true);\n+}\n+\n+/* Implement -symbol-info-variables command.  */\n+\n+void\n+mi_cmd_symbol_info_variables (const char *command, char **argv, int argc)\n+{\n+  mi_info_functions_or_variables (VARIABLES_DOMAIN, argv, argc);\n+}"
    },
    {
      "sha": "f8ce265eed81eeec06c5f0bb22d492704db58950",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.mi/mi-sym-info-1.c: New file.\n+\t* gdb.mi/mi-sym-info-2.c: New file.\n+\t* gdb.mi/mi-sym-info.exp: New file.\n+\n 2019-11-22  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/tasks.exp: Add -ada-task-info regression test."
    },
    {
      "sha": "9b6dc7396adb0e6e85c2839c64e33ba014a0d854",
      "filename": "gdb/testsuite/gdb.mi/mi-sym-info-1.c",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info-1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info-1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-sym-info-1.c?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -0,0 +1,48 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Function and variables declared in mi-sym-info-2.c.  */\n+extern float f2 (float arg);\n+extern int f3 (int arg);\n+extern int global_i2;\n+extern float global_f2;\n+\n+static int global_i1;\n+static float global_f1;\n+\n+typedef int my_int_t;\n+\n+static my_int_t\n+f1 (int arg1, int arg2)\n+{\n+  return arg1 + arg2;\n+}\n+\n+void\n+f4 (int *arg)\n+{\n+  (*arg)++;\n+}\n+\n+int\n+main ()\n+{\n+  int v = f3 (4);\n+  f4 (&v);\n+  float tmp = f2 (1.0);\n+  return f1 (3, v) + ((int) tmp);\n+}"
    },
    {
      "sha": "c80877d8e7be4a164c3150fe6aed61e984de396f",
      "filename": "gdb/testsuite/gdb.mi/mi-sym-info-2.c",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-sym-info-2.c?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -0,0 +1,43 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+static int global_i1;\n+static float global_f1;\n+int global_i2;\n+int global_f2;\n+\n+typedef int another_int_t;\n+typedef float another_float_t;\n+\n+static another_float_t\n+f1 (int arg)\n+{\n+  return (float) arg;\n+}\n+\n+float\n+f2 (another_float_t arg)\n+{\n+  return arg + f1 (1);\n+}\n+\n+int\n+f3 (another_int_t arg)\n+{\n+  return arg + 2;\n+}\n+"
    },
    {
      "sha": "33fe865781114821a6d7216bc276468ed4076866",
      "filename": "gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "status": "added",
      "additions": 129,
      "deletions": 0,
      "changes": 129,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7dc42066097ca6188ecd2c505d865e68d84998ee/gdb/testsuite/gdb.mi/mi-sym-info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-sym-info.exp?ref=7dc42066097ca6188ecd2c505d865e68d84998ee",
      "patch": "@@ -0,0 +1,129 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test -symbol-info-functions, -symbol-info-variables, and\n+# -symbol-info-types.\n+\n+load_lib mi-support.exp\n+set MIFLAGS \"-i=mi\"\n+\n+standard_testfile mi-sym-info-1.c mi-sym-info-2.c\n+\n+if {[prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t [list $srcfile $srcfile2] {debug}]} {\n+    return -1\n+}\n+\n+gdb_exit\n+if {[mi_gdb_start]} {\n+    continue\n+}\n+\n+mi_run_to_main\n+\n+set qstr \"\\\"\\[^\\\"\\]+\\\"\"\n+set fun_re \"\\{line=\\\"$decimal\\\",name=${qstr},type=${qstr},description=${qstr}\\}\"\n+set type_re \"\\{(?:line=\\\"$decimal\\\",)*name=${qstr}\\}\"\n+set sym_list \"\\\\\\[${fun_re}(?:,$fun_re)*\\\\\\]\"\n+set type_sym_list \"\\\\\\[${type_re}(?:,$type_re)*\\\\\\]\"\n+set symtab_re \\\n+    \"\\{filename=${qstr},fullname=${qstr},symbols=${sym_list}\\}\"\n+set symtab_type_re \\\n+    \"\\{filename=${qstr},fullname=${qstr},symbols=${type_sym_list}\\}\"\n+set debug_only_syms \\\n+    \"symbols=\\{debug=\\\\\\[${symtab_re}(?:,${symtab_re})*\\\\\\]\\}\"\n+set all_syms \\\n+    \"symbols=\\{debug=\\\\\\[${symtab_re}(?:,${symtab_re})*\\\\\\],nondebug=\\\\\\[.*\\\\\\]\\}\"\n+set type_syms \\\n+    \"symbols=\\{debug=\\\\\\[${symtab_type_re}(?:,${symtab_type_re})*\\\\\\]\\}\"\n+\n+# Fetch all functions, variables and types without any non-debug\n+# symbols.\n+mi_gdb_test \"111-symbol-info-functions\" \\\n+    \"111\\\\^done,${debug_only_syms}\" \\\n+    \"List all functions from debug information only\"\n+\n+mi_gdb_test \"112-symbol-info-variables\" \\\n+    \"112\\\\^done,${debug_only_syms}\" \\\n+    \"List all variables from debug information only\"\n+\n+mi_gdb_test \"113-symbol-info-types\" \\\n+    \"113\\\\^done,${type_syms}\" \\\n+    \"List all types\"\n+\n+# Fetch functions and variables but also grab the non-debug symbols\n+# (from the symbol table).  There's often so much output output from\n+# this command that we overflow expect's buffers, avoid this by\n+# fetching the output piece by piece.\n+set testname \"List all functions\"\n+gdb_test_multiple \"114-symbol-info-functions --include-nondebug\" ${testname} {\n+    -re \"114\\\\^done,symbols=\\{debug=\\\\\\[${symtab_re}(?:,${symtab_re})*\\\\\\],nondebug=\\\\\\[\" {\n+\texp_continue\n+    }\n+\n+    -re \"\\{address=${qstr},name=${qstr}\\},\" {\n+\texp_continue\n+    }\n+\n+    -re \"\\{address=${qstr},name=${qstr}\\}\\\\\\]\\}\\r\\n${mi_gdb_prompt}$\" {\n+\tpass ${testname}\n+    }\n+}\n+\n+set testname \"List all variables\"\n+gdb_test_multiple \"115-symbol-info-variables --include-nondebug\" ${testname} {\n+    -re \"115\\\\^done,symbols=\\{debug=\\\\\\[${symtab_re}(?:,${symtab_re})*\\\\\\],nondebug=\\\\\\[\" {\n+\tverbose -log \"Got the first part of the input\"\n+\texp_continue\n+    }\n+\n+    -re \"\\{address=${qstr},name=${qstr}\\},\" {\n+\texp_continue\n+    }\n+\n+    -re \"\\{address=${qstr},name=${qstr}\\}\\\\\\]\\}\\r\\n${mi_gdb_prompt}$\" {\n+\tpass ${testname}\n+    }\n+}\n+\n+# Filter functions by name and type.\n+set lineno [gdb_get_line_number \"f3 (another_int_t arg)\" ${srcfile2}]\n+mi_gdb_test \"116-symbol-info-functions --name f3\" \\\n+    \"116\\\\^done,symbols=\\{debug=\\\\\\[\\{filename=\\\"\\[^\\\"\\]+$srcfile2\\\",fullname=\\\"\\[^\\\"\\]+$srcfile2\\\",symbols=\\\\\\[\\{line=\\\"39\\\",name=\\\"f3\\\",type=\\\"int \\\\(another_int_t\\\\)\\\",description=\\\"int f3\\\\(another_int_t\\\\);\\\"\\}\\\\\\]\\}\\\\\\]\\}\" \\\n+    \"List all functions matching pattern f3\"\n+\n+set lineno [gdb_get_line_number \"f4 (int *arg)\" ${srcfile}]\n+mi_gdb_test \"117-symbol-info-functions --type void\" \\\n+    \"117\\\\^done,symbols=\\{debug=\\\\\\[\\{filename=\\\"\\[^\\\"\\]+$srcfile\\\",fullname=\\\"\\[^\\\"\\]+$srcfile\\\",symbols=\\\\\\[\\{line=\\\"36\\\",name=\\\"f4\\\",type=\\\"void \\\\(int \\\\*\\\\)\\\",description=\\\"void f4\\\\(int \\\\*\\\\);\\\"\\}\\\\\\]\\}\\\\\\]\\}\" \\\n+    \"List all functions matching type void\"\n+\n+# Filter variables by name and type.\n+set lineno [gdb_get_line_number \"int global_f2;\" ${srcfile2}]\n+mi_gdb_test \"118-symbol-info-variables --name global_f2\" \\\n+    \"118\\\\^done,symbols=\\{debug=\\\\\\[\\{filename=\\\"\\[^\\\"\\]+$srcfile2\\\",fullname=\\\"\\[^\\\"\\]+$srcfile2\\\",symbols=\\\\\\[\\{line=\\\"21\\\",name=\\\"global_f2\\\",type=\\\"int\\\",description=\\\"int global_f2;\\\"\\}\\\\\\]\\}\\\\\\]\\}\" \\\n+    \"List all variables matching pattern global_f2\"\n+\n+set lineno1 [gdb_get_line_number \"static float global_f1;\" ${srcfile}]\n+set lineno2 [gdb_get_line_number \"static float global_f1;\" ${srcfile2}]\n+mi_gdb_test \"119-symbol-info-variables --type float\" \\\n+    \"119\\\\^done,symbols=\\{debug=\\\\\\[\\{filename=\\\"\\[^\\\"\\]+$srcfile\\\",fullname=\\\"\\[^\\\"\\]+$srcfile\\\",symbols=\\\\\\[\\{line=\\\"25\\\",name=\\\"global_f1\\\",type=\\\"float\\\",description=\\\"static float global_f1;\\\"\\}\\\\\\]\\},\\{filename=\\\"\\[^\\\"\\]+$srcfile2\\\",fullname=\\\"\\[^\\\"\\]+$srcfile2\\\",symbols=\\\\\\[\\{line=\\\"19\\\",name=\\\"global_f1\\\",type=\\\"float\\\",description=\\\"static float global_f1;\\\"\\}\\\\\\]\\}\\\\\\]\\}\" \\\n+    \"List all variables matching type float\"\n+\n+# Fetch types, filtering by name.\n+set lineno1 [gdb_get_line_number \"typedef int my_int_t;\" ${srcfile}]\n+set lineno2 [gdb_get_line_number \"typedef int another_int_t;\" ${srcfile2}]\n+mi_gdb_test \"120-symbol-info-types --name _int_\" \\\n+    \"120\\\\^done,symbols=\\{debug=\\\\\\[\\{filename=\\\"\\[^\\\"\\]+$srcfile\\\",fullname=\\\"\\[^\\\"\\]+$srcfile\\\",symbols=\\\\\\[\\{line=\\\"27\\\",name=\\\"my_int_t\\\"\\}\\\\\\]\\},\\{filename=\\\"\\[^\\\"\\]+$srcfile2\\\",fullname=\\\"\\[^\\\"\\]+$srcfile2\\\",symbols=\\\\\\[\\{line=\\\"23\\\",name=\\\"another_int_t\\\"\\}\\\\\\]\\}\\\\\\]\\}\" \\\n+    \"List all types matching _int_\""
    }
  ]
}