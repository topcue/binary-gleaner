{
  "sha": "e12dcc50da18ef4382c02d1f2bb1541251cce45e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTEyZGNjNTBkYTE4ZWY0MzgyYzAyZDFmMmJiMTU0MTI1MWNjZTQ1ZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-30T15:47:37Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-07-30T15:47:37Z"
    },
    "message": "[gdb/testsuite] Fix gdb.fortran/info-modules.exp with gcc-4.8\n\nWhen running test-case gdb.fortran/info-modules.exp with gfortran 4.8.5, I\nget:\n...\nFAIL: gdb.fortran/info-modules.exp: info module functions: \\\n  check for entry 'info-types.f90', '35', \\\n  'void mod1::__copy_mod1_M1t1\\(Type m1t1, Type m1t1\\);'\nFAIL: gdb.fortran/info-modules.exp: info module functions -m mod1: \\\n  check for entry 'info-types.f90', '35', \\\n  'void mod1::__copy_mod1_M1t1\\(Type m1t1, Type m1t1\\);'\nFAIL: gdb.fortran/info-modules.exp: info module variables: \\\n  check for entry 'info-types.f90', '(35)?', \\\n  'Type m1t1 mod1::__def_init_mod1_M1t1;'\nFAIL: gdb.fortran/info-modules.exp: info module variables: \\\n  check for entry 'info-types.f90', '(35)?', \\\n  'Type __vtype_mod1_M1t1 mod1::__vtab_mod1_M1t1;'\n...\n\nWith gfortran 7.5.0, we have:\n...\n$ readelf -wi info-modules | egrep \"DW_AT_name.*(copy|def_init|vtype)_mod1\"\n    <286>   DW_AT_name        : __def_init_mod1_M1t1\n    <29f>   DW_AT_name        : __vtype_mod1_M1t1\n    <3de>   DW_AT_name        : __copy_mod1_M1t1\n$\n...\nbut with gfortran 4.8.5:\n...\n$ readelf -wi info-modules | egrep \"DW_AT_name.*(copy|def_init|vtype)_mod1\"\n$\n...\n\nFix this by allowing these module functions and variables to be missing.\n\nTested on x86_64-linux with gcc 4.8.5 and gcc 7.5.0.\n\ngdb/testsuite/ChangeLog:\n\n2020-07-30  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/sym-info-cmds.exp (GDBInfoModuleSymbols::check_entry_1): Factor\n\tout of ...\n\t(GDBInfoModuleSymbols::check_entry): ... here.\n\t(GDBInfoModuleSymbols::check_optional_entry): New proc.\n\t* gdb.fortran/info-modules.exp: Use check_optional_entry for entries\n\trelated to __def_init_mod1_M1t1 / __vtype_mod1_M1t1 / __copy_mod1_M1t1.",
    "tree": {
      "sha": "e5489802066f8d512ed98a1a3bb644ffda03001e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5489802066f8d512ed98a1a3bb644ffda03001e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e12dcc50da18ef4382c02d1f2bb1541251cce45e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e12dcc50da18ef4382c02d1f2bb1541251cce45e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e12dcc50da18ef4382c02d1f2bb1541251cce45e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e12dcc50da18ef4382c02d1f2bb1541251cce45e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f853ba38317e5204b8c0465233e4bf5f1f46fba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f853ba38317e5204b8c0465233e4bf5f1f46fba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f853ba38317e5204b8c0465233e4bf5f1f46fba"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 32,
    "deletions": 6
  },
  "files": [
    {
      "sha": "198eefeee613785d06489771782a77dffb3ade26",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e12dcc50da18ef4382c02d1f2bb1541251cce45e",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/sym-info-cmds.exp (GDBInfoModuleSymbols::check_entry_1): Factor\n+\tout of ...\n+\t(GDBInfoModuleSymbols::check_entry): ... here.\n+\t(GDBInfoModuleSymbols::check_optional_entry): New proc.\n+\t* gdb.fortran/info-modules.exp: Use check_optional_entry for entries\n+\trelated to __def_init_mod1_M1t1 / __vtype_mod1_M1t1 / __copy_mod1_M1t1.\n+\n 2020-07-30  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.fortran/ptype-on-functions.exp: Make \"_t\" suffix on"
    },
    {
      "sha": "3af3d55e772a19f16f63e99c76ba7d5e30c749aa",
      "filename": "gdb/testsuite/gdb.fortran/info-modules.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/gdb.fortran/info-modules.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/gdb.fortran/info-modules.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/info-modules.exp?ref=e12dcc50da18ef4382c02d1f2bb1541251cce45e",
      "patch": "@@ -76,7 +76,7 @@ GDBInfoModuleSymbols::check_entry \"${srcfile2}\" \"mod2\" \"22\" \\\n     \"void mod2::sub_m2_a\\\\(${integer4}, ${logical4}\\\\);\"\n GDBInfoModuleSymbols::check_entry \"${srcfile2}\" \"mod2\" \"30\" \\\n     \"${logical4} mod2::sub_m2_b\\\\(${real4}\\\\);\"\n-GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"35\" \\\n+GDBInfoModuleSymbols::check_optional_entry \"${srcfile}\" \"mod1\" \"35\" \\\n     \"void mod1::__copy_mod1_M1t1\\\\(Type m1t1, Type m1t1\\\\);\"\n GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"25\" \\\n     \"void mod1::sub_m1_a\\\\(${integer4}\\\\);\"\n@@ -88,7 +88,7 @@ GDBInfoModuleSymbols::check_no_entry \"${srcfile2}\" \".*\"\n GDBInfoModuleSymbols::run_command \"info module functions -m mod1\"\n GDBInfoModuleSymbols::check_header \\\n     \"All functions in all modules matching regular expression \\\"mod1\\\":\"\n-GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"35\" \\\n+GDBInfoModuleSymbols::check_optional_entry \"${srcfile}\" \"mod1\" \"35\" \\\n     \"void mod1::__copy_mod1_M1t1\\\\(Type m1t1, Type m1t1\\\\);\"\n GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"25\" \\\n     \"void mod1::sub_m1_a\\\\(${integer4}\\\\);\"\n@@ -117,9 +117,9 @@ GDBInfoModuleSymbols::check_entry \"${srcfile2}\" \"mod2\" \"19\" \\\n     \"${integer4} mod2::mod2_var_1;\"\n GDBInfoModuleSymbols::check_entry \"${srcfile2}\" \"mod2\" \"20\" \\\n     \"${real4} mod2::mod2_var_2;\"\n-GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"(35)?\" \\\n+GDBInfoModuleSymbols::check_optional_entry \"${srcfile}\" \"mod1\" \"(35)?\" \\\n     \"Type m1t1 mod1::__def_init_mod1_M1t1;\"\n-GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"(35)?\" \\\n+GDBInfoModuleSymbols::check_optional_entry \"${srcfile}\" \"mod1\" \"(35)?\" \\\n     \"Type __vtype_mod1_M1t1 mod1::__vtab_mod1_M1t1;\"\n GDBInfoModuleSymbols::check_entry \"${srcfile}\" \"mod1\" \"21\" \\\n     \"${real4} mod1::mod1_var_1;\""
    },
    {
      "sha": "dd769ef1312169e5550fc24d0a0ce857af622f99",
      "filename": "gdb/testsuite/lib/sym-info-cmds.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/lib/sym-info-cmds.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e12dcc50da18ef4382c02d1f2bb1541251cce45e/gdb/testsuite/lib/sym-info-cmds.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/sym-info-cmds.exp?ref=e12dcc50da18ef4382c02d1f2bb1541251cce45e",
      "patch": "@@ -421,7 +421,10 @@ namespace eval GDBInfoModuleSymbols {\n     # If a matching entry is found then it is removed from the\n     # _entries list, this allows us to check for duplicates using the\n     # check_no_entry call.\n-    proc check_entry { filename module lineno text { testname \"\" } } {\n+    #\n+    # If OPTIONAL, don't generate a FAIL for a mismatch, but use UNSUPPORTED\n+    # instead.\n+    proc check_entry_1 { filename module lineno text optional testname } {\n \tvariable _entries\n \tvariable _last_command\n \n@@ -458,7 +461,21 @@ namespace eval GDBInfoModuleSymbols {\n \t}\n \n \tset _entries $new_entries\n-\tgdb_assert { $found_match } $testname\n+\tif { $optional && ! $found_match } {\n+\t    unsupported $testname\n+\t} else {\n+\t    gdb_assert { $found_match } $testname\n+\t}\n+    }\n+\n+    # Call check_entry_1 with OPTIONAL == 0.\n+    proc check_entry { filename module lineno text { testname \"\" } } {\n+\tcheck_entry_1 $filename $module $lineno $text 0 $testname\n+    }\n+\n+    # Call check_entry_1 with OPTIONAL == 1.\n+    proc check_optional_entry { filename module lineno text { testname \"\" } } {\n+\tcheck_entry_1 $filename $module $lineno $text 1 $testname\n     }\n \n     # Check that there is no entry in the _entries list matching"
    }
  ]
}