{
  "sha": "f4950f76fa56bd60314f05620c39fb31e96bb088",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQ5NTBmNzZmYTU2YmQ2MDMxNGYwNTYyMGMzOWZiMzFlOTZiYjA4OA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-03T09:12:49Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-03T09:12:49Z"
    },
    "message": "Arm64: correct 64-bit element fmmla encoding\n\nThere's just one bit of difference to the 32-bit element form, as\nper the documentation.",
    "tree": {
      "sha": "cbf63ab1f340a2528f40b48b590b3a38f92ab264",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cbf63ab1f340a2528f40b48b590b3a38f92ab264"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f4950f76fa56bd60314f05620c39fb31e96bb088",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4950f76fa56bd60314f05620c39fb31e96bb088",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f4950f76fa56bd60314f05620c39fb31e96bb088",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4950f76fa56bd60314f05620c39fb31e96bb088/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4bb7a87e74e66a7d32cbd39e6fc8e54f25a5ad0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4bb7a87e74e66a7d32cbd39e6fc8e54f25a5ad0d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4bb7a87e74e66a7d32cbd39e6fc8e54f25a5ad0d"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 60,
    "deletions": 49
  },
  "files": [
    {
      "sha": "933c17e60366768ae7ed703adcfdb32a7d61f75b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* testsuite/gas/aarch64/f64mm.d,\n+\ttestsuite/gas/aarch64/sve-movprfx-mm.d: Adjust expectations.\n+\n 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \t* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add"
    },
    {
      "sha": "b2aa86132ac0db62259190ee4f0b4af56cce19f5",
      "filename": "gas/testsuite/gas/aarch64/f64mm.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/testsuite/gas/aarch64/f64mm.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/testsuite/gas/aarch64/f64mm.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/f64mm.d?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -6,8 +6,8 @@\n Disassembly of section \\.text:\n \n 0+ <\\.text>:\n- *[0-9a-f]+:\t64dbe6b1 \tfmmla\tz17\\.d, z21\\.d, z27\\.d\n- *[0-9a-f]+:\t64c0e400 \tfmmla\tz0\\.d, z0\\.d, z0\\.d\n+ *[0-9a-f]+:\t64fbe6b1 \tfmmla\tz17\\.d, z21\\.d, z27\\.d\n+ *[0-9a-f]+:\t64e0e400 \tfmmla\tz0\\.d, z0\\.d, z0\\.d\n  *[0-9a-f]+:\ta43b17f1 \tld1rob\t{z17\\.b}, p5/z, \\[sp, x27\\]\n  *[0-9a-f]+:\ta42003e0 \tld1rob\t{z0\\.b}, p0/z, \\[sp, x0\\]\n  *[0-9a-f]+:\ta4bb17f1 \tld1roh\t{z17\\.h}, p5/z, \\[sp, x27\\]"
    },
    {
      "sha": "f2b480dfe48e41bbaa411d2d974b3788da5c7add",
      "filename": "gas/testsuite/gas/aarch64/sve-movprfx-mm.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/testsuite/gas/aarch64/sve-movprfx-mm.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/gas/testsuite/gas/aarch64/sve-movprfx-mm.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/sve-movprfx-mm.d?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -21,4 +21,4 @@ Disassembly of section \\.text:\n  *[0-9a-f]+:\t0420bc11 \tmovprfx\tz17, z0\n  *[0-9a-f]+:\t64bbe6b1 \tfmmla\tz17\\.s, z21\\.s, z27\\.s\n  *[0-9a-f]+:\t0420bc11 \tmovprfx\tz17, z0\n- *[0-9a-f]+:\t64dbe6b1 \tfmmla\tz17\\.d, z21\\.d, z27\\.d\n+ *[0-9a-f]+:\t64fbe6b1 \tfmmla\tz17\\.d, z21\\.d, z27\\.d"
    },
    {
      "sha": "bf031a76d8085072d9a1ed3711fc10239cdd2401",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcodes/aarch64-tbl.h (aarch64_opcode_table): Correct 64-bit\n+\tFMMLA encoding.\n+\t* opcodes/aarch64-dis-2.c: Re-generate.\n+\n 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \t* z80-dis.c: Add support for eZ80 and Z80 instructions."
    },
    {
      "sha": "950a5f2e99b067db985b0701a999edbf8eed402e",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 45,
      "deletions": 45,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -8839,9 +8839,9 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                         }\n                                       else\n                                         {\n-                                          if (((word >> 22) & 0x1) == 0)\n+                                          if (((word >> 20) & 0x1) == 0)\n                                             {\n-                                              if (((word >> 20) & 0x1) == 0)\n+                                              if (((word >> 22) & 0x1) == 0)\n                                                 {\n                                                   /* 33222222222211111111110000000000\n                                                      10987654321098765432109876543210\n@@ -8855,69 +8855,58 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         x11001x00001xxxx111xxxxxxxxxxxxx\n-                                                         stnt1b.  */\n-                                                      return 1933;\n+                                                         x11001x00100xxxx111xxxxxxxxxxxxx\n+                                                         st1b.  */\n+                                                      return 1872;\n                                                     }\n                                                   else\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         x11001x01001xxxx111xxxxxxxxxxxxx\n-                                                         stnt1h.  */\n-                                                      return 1937;\n+                                                         x11001x01100xxxx111xxxxxxxxxxxxx\n+                                                         st1h.  */\n+                                                      return 1893;\n                                                     }\n                                                 }\n                                             }\n                                           else\n                                             {\n-                                              if (((word >> 23) & 0x1) == 0)\n+                                              if (((word >> 22) & 0x1) == 0)\n                                                 {\n-                                                  if (((word >> 20) & 0x1) == 0)\n+                                                  if (((word >> 23) & 0x1) == 0)\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         x11001x00100xxxx111xxxxxxxxxxxxx\n-                                                         st1b.  */\n-                                                      return 1872;\n+                                                         x11001x00001xxxx111xxxxxxxxxxxxx\n+                                                         stnt1b.  */\n+                                                      return 1933;\n                                                     }\n                                                   else\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         x11001x00101xxxx111xxxxxxxxxxxxx\n-                                                         st3b.  */\n-                                                      return 1917;\n+                                                         x11001x01001xxxx111xxxxxxxxxxxxx\n+                                                         stnt1h.  */\n+                                                      return 1937;\n                                                     }\n                                                 }\n                                               else\n                                                 {\n-                                                  if (((word >> 31) & 0x1) == 0)\n+                                                  if (((word >> 23) & 0x1) == 0)\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         011001x0110xxxxx111xxxxxxxxxxxxx\n-                                                         fmmla.  */\n-                                                      return 2398;\n+                                                         x11001x00101xxxx111xxxxxxxxxxxxx\n+                                                         st3b.  */\n+                                                      return 1917;\n                                                     }\n                                                   else\n                                                     {\n-                                                      if (((word >> 20) & 0x1) == 0)\n-                                                        {\n-                                                          /* 33222222222211111111110000000000\n-                                                             10987654321098765432109876543210\n-                                                             111001x01100xxxx111xxxxxxxxxxxxx\n-                                                             st1h.  */\n-                                                          return 1893;\n-                                                        }\n-                                                      else\n-                                                        {\n-                                                          /* 33222222222211111111110000000000\n-                                                             10987654321098765432109876543210\n-                                                             111001x01101xxxx111xxxxxxxxxxxxx\n-                                                             st3h.  */\n-                                                          return 1921;\n-                                                        }\n+                                                      /* 33222222222211111111110000000000\n+                                                         10987654321098765432109876543210\n+                                                         x11001x01101xxxx111xxxxxxxxxxxxx\n+                                                         st3h.  */\n+                                                      return 1921;\n                                                     }\n                                                 }\n                                             }\n@@ -9780,21 +9769,32 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                 }\n                                               else\n                                                 {\n-                                                  if (((word >> 20) & 0x1) == 0)\n+                                                  if (((word >> 31) & 0x1) == 0)\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n-                                                         x11001x01110xxxx111xxxxxxxxxxxxx\n-                                                         st1h.  */\n-                                                      return 1895;\n+                                                         011001x0111xxxxx111xxxxxxxxxxxxx\n+                                                         fmmla.  */\n+                                                      return 2398;\n                                                     }\n                                                   else\n                                                     {\n-                                                      /* 33222222222211111111110000000000\n-                                                         10987654321098765432109876543210\n-                                                         x11001x01111xxxx111xxxxxxxxxxxxx\n-                                                         st4h.  */\n-                                                      return 1929;\n+                                                      if (((word >> 20) & 0x1) == 0)\n+                                                        {\n+                                                          /* 33222222222211111111110000000000\n+                                                             10987654321098765432109876543210\n+                                                             111001x01110xxxx111xxxxxxxxxxxxx\n+                                                             st1h.  */\n+                                                          return 1895;\n+                                                        }\n+                                                      else\n+                                                        {\n+                                                          /* 33222222222211111111110000000000\n+                                                             10987654321098765432109876543210\n+                                                             111001x01111xxxx111xxxxxxxxxxxxx\n+                                                             st4h.  */\n+                                                          return 1929;\n+                                                        }\n                                                     }\n                                                 }\n                                             }"
    },
    {
      "sha": "8a74777eedbbd7c34eae85af520ef6288f4566a4",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f4950f76fa56bd60314f05620c39fb31e96bb088/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=f4950f76fa56bd60314f05620c39fb31e96bb088",
      "patch": "@@ -5073,7 +5073,7 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   INT8MATMUL_SVE_INSNC (\"usdot\",  0x44a01800, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm3_INDEX), OP_SVE_SBB, 0, C_SCAN_MOVPRFX, 0),\n   INT8MATMUL_SVE_INSNC (\"sudot\",  0x44a01c00, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm3_INDEX), OP_SVE_SBB, 0, C_SCAN_MOVPRFX, 0),\n   F32MATMUL_SVE_INSNC (\"fmmla\",   0x64a0e400, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_S, 0, C_SCAN_MOVPRFX, 0),\n-  F64MATMUL_SVE_INSNC (\"fmmla\",   0x64c0e400, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_D, 0, C_SCAN_MOVPRFX, 0),\n+  F64MATMUL_SVE_INSNC (\"fmmla\",   0x64e0e400, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_VVV_D, 0, C_SCAN_MOVPRFX, 0),\n   F64MATMUL_SVE_INSN (\"ld1rob\",  0xa4200000, 0xffe0e000, sve_misc, OP3 (SVE_ZtxN, SVE_Pg3, SVE_ADDR_RX),  OP_SVE_BZU, F_OD(1), 0),\n   F64MATMUL_SVE_INSN (\"ld1roh\",  0xa4a00000, 0xffe0e000, sve_misc, OP3 (SVE_ZtxN, SVE_Pg3, SVE_ADDR_RX),  OP_SVE_HZU, F_OD(1), 0),\n   F64MATMUL_SVE_INSN (\"ld1row\",  0xa5200000, 0xffe0e000, sve_misc, OP3 (SVE_ZtxN, SVE_Pg3, SVE_ADDR_RX),  OP_SVE_SZU, F_OD(1), 0),"
    }
  ]
}