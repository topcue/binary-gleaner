{
  "sha": "de82891ce5b6d2c8109f512cd0732325f4cd0557",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGU4Mjg5MWNlNWI2ZDJjODEwOWY1MTJjZDA3MzIzMjVmNGNkMDU1Nw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-23T13:42:47Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-04-23T13:42:47Z"
    },
    "message": "[gdb/symtab] Prefer def over decl (inter-CU case)\n\nWhen running test-case gdb.threads/tls.exp with target board -readnow, we\nhave:\n...\n(gdb) print a_thread_local^M\nCannot find thread-local storage for process 0, executable file tls/tls:^M\nCannot find thread-local variables on this target^M\n(gdb) FAIL: gdb.threads/tls.exp: print a_thread_local\n...\nwhile with native we have:\n...\n(gdb) print a_thread_local^M\nCannot read `a_thread_local' without registers^M\n(gdb) PASS: gdb.threads/tls.exp: print a_thread_local\n...\n\nThe difference in behaviour can be explained as follows.  Without -readnow, we\nhave two a_thread_locals, the def and the decl, each in a different CU:\n...\n$ gdb -batch outputs/gdb.threads/tls/tls \\\n    -ex \"maint expand-symtabs\" \\\n    -ex \"print a_thread_local\" \\\n    -ex \"maint print symbols\" \\\n    | grep \"a_thread_local;\"\nCannot read `a_thread_local' without registers\n int a_thread_local; computed at runtime\n int a_thread_local; unresolved\n...\nand with -readnow, we have the opposite order:\n...\n$ gdb -readnow -batch outputs/gdb.threads/tls/tls  \\\n    -ex \"maint expand-symtabs\" \\\n    -ex \"print a_thread_local\" \\\n    -ex \"maint print symbols\" \\\n    | grep \"a_thread_local;\"\nCannot find thread-local storage for process 0, executable file tls/tls:\nCannot find thread-local variables on this target\n int a_thread_local; unresolved\n int a_thread_local; computed at runtime\n...\n\nFix the FAIL by preferring the def over the decl (something we already do\nintra-CU since the fix for PR24971, commit 93e55f0a03 \"[gdb/symtab] Prefer var\ndef over decl\").\n\nBuild and reg-tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-04-23  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/25807\n\t* block.c (best_symbol, better_symbol): Promote to external.\n\t* block.h (best_symbol, better_symbol): Declare.\n\t* symtab.c (lookup_symbol_in_objfile_symtabs): Prefer def over\n\tdecl.\n\ngdb/testsuite/ChangeLog:\n\n2020-04-23  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/decl-before-def-decl.c: New test.\n\t* gdb.base/decl-before-def-def.c: New test.\n\t* gdb.base/decl-before-def.exp: New file.",
    "tree": {
      "sha": "fc6456d024f830a8cd7d5303c8dd00ad3c1bbf23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fc6456d024f830a8cd7d5303c8dd00ad3c1bbf23"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/de82891ce5b6d2c8109f512cd0732325f4cd0557",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de82891ce5b6d2c8109f512cd0732325f4cd0557",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/de82891ce5b6d2c8109f512cd0732325f4cd0557",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de82891ce5b6d2c8109f512cd0732325f4cd0557/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ecc6c6066b5cdd4663413e0bd6ef8deea1a8c889",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecc6c6066b5cdd4663413e0bd6ef8deea1a8c889",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ecc6c6066b5cdd4663413e0bd6ef8deea1a8c889"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 124,
    "deletions": 12
  },
  "files": [
    {
      "sha": "f1ebf09ff468067947f29585198f85d6590bd32e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-23  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/25807\n+\t* block.c (best_symbol, better_symbol): Promote to external.\n+\t* block.h (best_symbol, better_symbol): Declare.\n+\t* symtab.c (lookup_symbol_in_objfile_symtabs): Prefer def over\n+\tdecl.\n+\n 2020-04-23  Tom Tromey  <tromey@adacore.com>\n \n \tPR ada/25837:"
    },
    {
      "sha": "597d6d5d875a9b7a12af20d9e9780b42deef4ef3",
      "filename": "gdb/block.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/block.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/block.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/block.c?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -657,19 +657,18 @@ block_iter_match_next (const lookup_name_info &name,\n   return block_iter_match_step (iterator, name, 0);\n }\n \n-/* Return true if symbol A is the best match possible for DOMAIN.  */\n+/* See block.h.  */\n \n-static bool\n+bool\n best_symbol (struct symbol *a, const domain_enum domain)\n {\n   return (SYMBOL_DOMAIN (a) == domain\n \t  && SYMBOL_CLASS (a) != LOC_UNRESOLVED);\n }\n \n-/* Return symbol B if it is a better match than symbol A for DOMAIN.\n-   Otherwise return A.  */\n+/* See block.h.  */\n \n-static struct symbol *\n+struct symbol *\n better_symbol (struct symbol *a, struct symbol *b, const domain_enum domain)\n {\n   if (a == NULL)"
    },
    {
      "sha": "50ab049f8e61b171c93048bc08a5f62ca640ef64",
      "filename": "gdb/block.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/block.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/block.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/block.h?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -342,6 +342,16 @@ extern struct symbol *block_iter_match_first (const struct block *block,\n extern struct symbol *block_iter_match_next\n   (const lookup_name_info &name, struct block_iterator *iterator);\n \n+/* Return true if symbol A is the best match possible for DOMAIN.  */\n+\n+extern bool best_symbol (struct symbol *a, const domain_enum domain);\n+\n+/* Return symbol B if it is a better match than symbol A for DOMAIN.\n+   Otherwise return A.  */\n+\n+extern struct symbol *better_symbol (struct symbol *a, struct symbol *b,\n+\t\t\t\t     const domain_enum domain);\n+\n /* Search BLOCK for symbol NAME in DOMAIN.  */\n \n extern struct symbol *block_lookup_symbol (const struct block *block,"
    },
    {
      "sha": "1eef97837e8b0f71a47e7d9c4a2dc9bcea0745ad",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 27,
      "deletions": 7,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -2285,6 +2285,8 @@ lookup_symbol_in_objfile_symtabs (struct objfile *objfile,\n \t\t\t  name, domain_name (domain));\n     }\n \n+  struct block_symbol other;\n+  other.symbol = NULL;\n   for (compunit_symtab *cust : objfile->compunits ())\n     {\n       const struct blockvector *bv;\n@@ -2295,18 +2297,36 @@ lookup_symbol_in_objfile_symtabs (struct objfile *objfile,\n       block = BLOCKVECTOR_BLOCK (bv, block_index);\n       result.symbol = block_lookup_symbol_primary (block, name, domain);\n       result.block = block;\n-      if (result.symbol != NULL)\n+      if (result.symbol == NULL)\n+\tcontinue;\n+      if (best_symbol (result.symbol, domain))\n \t{\n-\t  if (symbol_lookup_debug > 1)\n+\t  other = result;\n+\t  break;\n+\t}\n+      if (symbol_matches_domain (result.symbol->language (),\n+\t\t\t\t SYMBOL_DOMAIN (result.symbol), domain))\n+\t{\n+\t  struct symbol *better\n+\t    = better_symbol (other.symbol, result.symbol, domain);\n+\t  if (better != other.symbol)\n \t    {\n-\t      fprintf_unfiltered (gdb_stdlog, \" = %s (block %s)\\n\",\n-\t\t\t\t  host_address_to_string (result.symbol),\n-\t\t\t\t  host_address_to_string (block));\n+\t      other.symbol = better;\n+\t      other.block = block;\n \t    }\n-\t  result.symbol = fixup_symbol_section (result.symbol, objfile);\n-\t  return result;\n+\t}\n+    }\n \n+  if (other.symbol != NULL)\n+    {\n+      if (symbol_lookup_debug > 1)\n+\t{\n+\t  fprintf_unfiltered (gdb_stdlog, \" = %s (block %s)\\n\",\n+\t\t\t      host_address_to_string (other.symbol),\n+\t\t\t      host_address_to_string (other.block));\n \t}\n+      other.symbol = fixup_symbol_section (other.symbol, objfile);\n+      return other;\n     }\n \n   if (symbol_lookup_debug > 1)"
    },
    {
      "sha": "e37aca2b5af2e92bf3a2293aa50b7e1aa0aecac5",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-23  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/decl-before-def-decl.c: New test.\n+\t* gdb.base/decl-before-def-def.c: New test.\n+\t* gdb.base/decl-before-def.exp: New file.\n+\n 2020-04-23  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/readnever.exp: Skip if GDBFLAGS contain -readnow/--readnow."
    },
    {
      "sha": "3e4e6d777d9a87b65304c51c0aa50004a346128a",
      "filename": "gdb/testsuite/gdb.base/decl-before-def-decl.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def-decl.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def-decl.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/decl-before-def-decl.c?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -0,0 +1,25 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern int a[];\n+\n+int\n+main (void)\n+{\n+  a[0] = 1;\n+  return 0;\n+}"
    },
    {
      "sha": "4d25248bc27f7b3d20e489526f6b094aa2ea7960",
      "filename": "gdb/testsuite/gdb.base/decl-before-def-def.c",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def-def.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def-def.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/decl-before-def-def.c?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -0,0 +1,18 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int a[2] = { 1, 2 };"
    },
    {
      "sha": "feb2084a82f293cd11301b8c483d174e226f9d81",
      "filename": "gdb/testsuite/gdb.base/decl-before-def.exp",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/de82891ce5b6d2c8109f512cd0732325f4cd0557/gdb/testsuite/gdb.base/decl-before-def.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/decl-before-def.exp?ref=de82891ce5b6d2c8109f512cd0732325f4cd0557",
      "patch": "@@ -0,0 +1,26 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+standard_testfile decl-before-def-decl.c decl-before-def-def.c\n+set sources [list $srcfile $srcfile2]\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $sources]} {\n+    return -1\n+}\n+\n+# This is required due to PR25764.\n+gdb_test \"maint expand-symtabs\"\n+\n+gdb_test \"p a\" { = \\{1, 2\\}}"
    }
  ]
}