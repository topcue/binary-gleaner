{
  "sha": "cc40b4f2a3c66db1219e851c837c9e5481124aab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2M0MGI0ZjJhM2M2NmRiMTIxOWU4NTFjODM3YzllNTQ4MTEyNGFhYg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-21T02:55:44Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-22T23:38:09Z"
    },
    "message": "sim: callback: generate signal map\n\nWe've been generating the syscall/errno/open maps, but not the signal\nmap, even though we've been including them in the source constants.",
    "tree": {
      "sha": "e2f52273d8d885c995ad7ceef8ece22d3d9861a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e2f52273d8d885c995ad7ceef8ece22d3d9861a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc40b4f2a3c66db1219e851c837c9e5481124aab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc40b4f2a3c66db1219e851c837c9e5481124aab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc40b4f2a3c66db1219e851c837c9e5481124aab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc40b4f2a3c66db1219e851c837c9e5481124aab/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c45cffdbe1a1b816fd9a88f88bb83bd7078a1e4e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c45cffdbe1a1b816fd9a88f88bb83bd7078a1e4e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c45cffdbe1a1b816fd9a88f88bb83bd7078a1e4e"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 36,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5ce1a66dd0e0d3fc816797910965b5672f5519fd",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=cc40b4f2a3c66db1219e851c837c9e5481124aab",
      "patch": "@@ -1,3 +1,12 @@\n+2021-06-22  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* callback.c: Include signal.h.\n+\t(cb_init_signal_map): New prototype.\n+\t(os_init): Assign signal_map.\n+\t* gentmap.c (signal_tdefs): New array.\n+\t(gen_targ_vals_h): Output signal_tdefs.\n+\t(gen_targ_map_c): Likewise.\n+\n 2021-06-22  Mike Frysinger  <vapier@gentoo.org>\n \n \t* callback.c (os_getpid): New function."
    },
    {
      "sha": "aca0112853c46da3a9b8b88ea68b48256aa7c523",
      "filename": "sim/common/callback.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/callback.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/callback.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/callback.c?ref=cc40b4f2a3c66db1219e851c837c9e5481124aab",
      "patch": "@@ -32,6 +32,7 @@\n #include <limits.h>\n #include <errno.h>\n #include <fcntl.h>\n+#include <signal.h>\n #include <time.h>\n #include <sys/types.h>\n #include <sys/stat.h>\n@@ -56,6 +57,7 @@ void sim_cb_eprintf (host_callback *, const char *, ...);\n \n extern CB_TARGET_DEFS_MAP cb_init_syscall_map[];\n extern CB_TARGET_DEFS_MAP cb_init_errno_map[];\n+extern CB_TARGET_DEFS_MAP cb_init_signal_map[];\n extern CB_TARGET_DEFS_MAP cb_init_open_map[];\n \n /* Make sure the FD provided is ok.  If not, return non-zero\n@@ -676,6 +678,7 @@ os_init (host_callback *p)\n \n   p->syscall_map = cb_init_syscall_map;\n   p->errno_map = cb_init_errno_map;\n+  p->signal_map = cb_init_signal_map;\n   p->open_map = cb_init_open_map;\n \n   return 1;"
    },
    {
      "sha": "f1f1bc2c03f3bb1c6d25a86638589d8cf3037589",
      "filename": "sim/common/gentmap.c",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/gentmap.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc40b4f2a3c66db1219e851c837c9e5481124aab/sim/common/gentmap.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gentmap.c?ref=cc40b4f2a3c66db1219e851c837c9e5481124aab",
      "patch": "@@ -23,6 +23,13 @@ static struct tdefs errno_tdefs[] =  {\n   { 0, 0 }\n };\n \n+static struct tdefs signal_tdefs[] = {\n+#define signal_defs\n+#include \"nltvals.def\"\n+#undef signal_defs\n+  { 0, 0 }\n+};\n+\n static struct tdefs open_tdefs[] = {\n #define open_defs\n #include \"nltvals.def\"\n@@ -51,6 +58,11 @@ gen_targ_vals_h (void)\n     printf (\"#define TARGET_%s %d\\n\", t->symbol, t->value);\n   printf (\"\\n\");\n \n+  printf (\"/* signal values */\\n\");\n+  for (t = &signal_tdefs[0]; t->symbol; ++t)\n+    printf (\"#define TARGET_%s %d\\n\", t->symbol, t->value);\n+  printf (\"\\n\");\n+\n   printf (\"/* open flag values */\\n\");\n   for (t = &open_tdefs[0]; t->symbol; ++t)\n     printf (\"#define TARGET_%s 0x%x\\n\", t->symbol, t->value);\n@@ -70,6 +82,7 @@ gen_targ_map_c (void)\n   printf (\"#include \\\"defs.h\\\"\\n\");\n   printf (\"#include <errno.h>\\n\");\n   printf (\"#include <fcntl.h>\\n\");\n+  printf (\"#include <signal.h>\\n\");\n   printf (\"#include \\\"ansidecl.h\\\"\\n\");\n   printf (\"#include \\\"sim/callback.h\\\"\\n\");\n   printf (\"#include \\\"targ-vals.h\\\"\\n\");\n@@ -98,6 +111,17 @@ gen_targ_map_c (void)\n   printf (\"  { 0, 0, 0 }\\n\");\n   printf (\"};\\n\\n\");\n \n+  printf (\"/* signals mapping table */\\n\");\n+  printf (\"CB_TARGET_DEFS_MAP cb_init_signal_map[] = {\\n\");\n+  for (t = &signal_tdefs[0]; t->symbol; ++t)\n+    {\n+      printf (\"#ifdef %s\\n\", t->symbol);\n+      printf (\"  { \\\"%s\\\", %s, TARGET_%s },\\n\", t->symbol, t->symbol, t->symbol);\n+      printf (\"#endif\\n\");\n+    }\n+  printf (\"  { 0, -1, -1 }\\n\");\n+  printf (\"};\\n\\n\");\n+\n   printf (\"/* open flags mapping table */\\n\");\n   printf (\"CB_TARGET_DEFS_MAP cb_init_open_map[] = {\\n\");\n   for (t = &open_tdefs[0]; t->symbol; ++t)"
    }
  ]
}