{
  "sha": "c22b42ce308eb538050b4b5789e406b63102b35a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzIyYjQyY2UzMDhlYjUzODA1MGI0YjU3ODllNDA2YjYzMTAyYjM1YQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-02-20T07:52:50Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-02-20T07:52:50Z"
    },
    "message": "Unsigned integer overflows in readelf checks\n\n\tPR 24132\n\tPR 24138\n\t* readelf.c (get_data): Avoid possibility of overflow when\n\tchecking for a read that may extend past end of file.\n\t(process_program_headers): Likewise.",
    "tree": {
      "sha": "097dc6ca803567ca3176c58cd647dee1b4e7fe97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/097dc6ca803567ca3176c58cd647dee1b4e7fe97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c22b42ce308eb538050b4b5789e406b63102b35a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c22b42ce308eb538050b4b5789e406b63102b35a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c22b42ce308eb538050b4b5789e406b63102b35a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c22b42ce308eb538050b4b5789e406b63102b35a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "edd01d077c5f7a0f76ec4fb77b5b9f5b151fa50a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/edd01d077c5f7a0f76ec4fb77b5b9f5b151fa50a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/edd01d077c5f7a0f76ec4fb77b5b9f5b151fa50a"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 14,
    "deletions": 4
  },
  "files": [
    {
      "sha": "ff67363169f479e35034f58e41ee5350fdec136b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c22b42ce308eb538050b4b5789e406b63102b35a/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c22b42ce308eb538050b4b5789e406b63102b35a/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c22b42ce308eb538050b4b5789e406b63102b35a",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24132\n+\tPR 24138\n+\t* readelf.c (get_data): Avoid possibility of overflow when\n+\tchecking for a read that may extend past end of file.\n+\t(process_program_headers): Likewise.\n+\n 2019-02-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 24233"
    },
    {
      "sha": "3f424c4e63d6779c27c83a2ad8a0d02217fb696b",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c22b42ce308eb538050b4b5789e406b63102b35a/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c22b42ce308eb538050b4b5789e406b63102b35a/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=c22b42ce308eb538050b4b5789e406b63102b35a",
      "patch": "@@ -398,10 +398,11 @@ get_data (void *         var,\n       return NULL;\n     }\n \n-  /* Be kind to memory chekers (eg valgrind, address sanitizer) by not\n+  /* Be kind to memory checkers (eg valgrind, address sanitizer) by not\n      attempting to allocate memory when the read is bound to fail.  */\n-  if (amt > filedata->file_size\n-      || offset + archive_file_offset + amt > filedata->file_size)\n+  if (archive_file_offset > filedata->file_size\n+      || offset > filedata->file_size - archive_file_offset\n+      || amt > filedata->file_size - archive_file_offset - offset)\n     {\n       if (reason)\n \terror (_(\"Reading %s bytes extends past end of file for %s\\n\"),\n@@ -5235,7 +5236,8 @@ process_program_headers (Filedata * filedata)\n \t     segment.  Check this after matching against the section headers\n \t     so we don't warn on debuginfo file (which have NOBITS .dynamic\n \t     sections).  */\n-\t  if (dynamic_addr + dynamic_size >= filedata->file_size)\n+\t  if (dynamic_addr > filedata->file_size\n+\t      || dynamic_size > filedata->file_size - dynamic_addr)\n \t    {\n \t      error (_(\"the dynamic segment offset + size exceeds the size of the file\\n\"));\n \t      dynamic_addr = dynamic_size = 0;"
    }
  ]
}