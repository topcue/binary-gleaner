{
  "sha": "8247b8236bc5528993d9b2938bc0544a5acea21d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODI0N2I4MjM2YmM1NTI4OTkzZDliMjkzOGJjMDU0NGE1YWNlYTIxZA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:12:02Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:17Z"
    },
    "message": "gdbserver: turn target op 'pid_to_exec_file' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's pid_to_exec_file op into a method\n\tof process_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.  Also add\n\t'supports_pid_to_exec_file'.\n\t* target.cc (process_target::pid_to_exec_file): Define.\n\t(process_target::supports_pid_to_exec_file): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (handle_qxfer_exec_file): Update.\n\t(handle_query): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_process_target::supports_pid_to_exec_file): Define.\n\t(linux_process_target::pid_to_exec_file): Define.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "41b803fd9fe2887a0757b84d5970a83ae01376e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41b803fd9fe2887a0757b84d5970a83ae01376e5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8247b8236bc5528993d9b2938bc0544a5acea21d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8247b8236bc5528993d9b2938bc0544a5acea21d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8247b8236bc5528993d9b2938bc0544a5acea21d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8247b8236bc5528993d9b2938bc0544a5acea21d/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2526e0cd95c9395bf8edee662fa1f4ea1ecd6023",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2526e0cd95c9395bf8edee662fa1f4ea1ecd6023",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2526e0cd95c9395bf8edee662fa1f4ea1ecd6023"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 65,
    "deletions": 15
  },
  "files": [
    {
      "sha": "fcf487142f560572ebcd519cf5e63d7b24f180e4",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -1,3 +1,26 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's pid_to_exec_file op into a method\n+\tof process_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.  Also add\n+\t'supports_pid_to_exec_file'.\n+\t* target.cc (process_target::pid_to_exec_file): Define.\n+\t(process_target::supports_pid_to_exec_file): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (handle_qxfer_exec_file): Update.\n+\t(handle_query): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_process_target::supports_pid_to_exec_file): Define.\n+\t(linux_process_target::pid_to_exec_file): Define.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's supports_range_stepping op into a"
    },
    {
      "sha": "118aee9a15dde934cfa5e165935c336494813e05",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -6441,6 +6441,18 @@ linux_process_target::supports_range_stepping ()\n   return (*the_low_target.supports_range_stepping) ();\n }\n \n+bool\n+linux_process_target::supports_pid_to_exec_file ()\n+{\n+  return true;\n+}\n+\n+char *\n+linux_process_target::pid_to_exec_file (int pid)\n+{\n+  return linux_proc_pid_to_exec_file (pid);\n+}\n+\n #if defined PT_GETDSBT || defined PTRACE_GETFDPIC\n struct target_loadseg\n {\n@@ -7471,7 +7483,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_proc_pid_to_exec_file,\n   linux_mntns_open_cloexec,\n   linux_mntns_unlink,\n   linux_mntns_readlink,"
    },
    {
      "sha": "af5892e767a9c397b04cf3ed6de5ff16807090b8",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -448,6 +448,10 @@ class linux_process_target : public process_target\n #endif\n \n   bool supports_range_stepping () override;\n+\n+  bool supports_pid_to_exec_file () override;\n+\n+  char *pid_to_exec_file (int pid) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "5e23713cfaf7015831da4dc5b75736db5959e6fd",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -735,7 +735,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* pid_to_exec_file */\n   NULL,  /* multifs_open */\n   NULL,  /* multifs_unlink */\n   NULL,  /* multifs_readlink */"
    },
    {
      "sha": "9a798bf6ec1ae822e47da8ec1e5e1bb2d5e06678",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -947,7 +947,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* pid_to_exec_file */\n   NULL, /* multifs_open */\n   NULL, /* multifs_unlink */\n   NULL, /* multifs_readlink */"
    },
    {
      "sha": "00456d8d7ed891469aee612a5d653936aaad2cd1",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -1462,7 +1462,7 @@ handle_qxfer_exec_file (const char *annex,\n   ULONGEST pid;\n   int total_len;\n \n-  if (the_target->pid_to_exec_file == NULL || writebuf != NULL)\n+  if (!the_target->pt->supports_pid_to_exec_file () || writebuf != NULL)\n     return -2;\n \n   if (annex[0] == '\\0')\n@@ -1482,7 +1482,7 @@ handle_qxfer_exec_file (const char *annex,\n   if (pid <= 0)\n     return -1;\n \n-  file = (*the_target->pid_to_exec_file) (pid);\n+  file = the_target->pt->pid_to_exec_file (pid);\n   if (file == NULL)\n     return -1;\n \n@@ -2452,7 +2452,7 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n       if (target_supports_stopped_by_hw_breakpoint ())\n \tstrcat (own_buf, \";hwbreak+\");\n \n-      if (the_target->pid_to_exec_file != NULL)\n+      if (the_target->pt->supports_pid_to_exec_file ())\n \tstrcat (own_buf, \";qXfer:exec-file:read+\");\n \n       strcat (own_buf, \";vContSupported+\");"
    },
    {
      "sha": "3787e94ad558be299fdeafdc8168c2e5bf31c6ba",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -759,3 +759,15 @@ process_target::supports_range_stepping ()\n {\n   return false;\n }\n+\n+bool\n+process_target::supports_pid_to_exec_file ()\n+{\n+  return false;\n+}\n+\n+char *\n+process_target::pid_to_exec_file (int pid)\n+{\n+  gdb_assert_not_reached (\"target op pid_to_exec_file not supported\");\n+}"
    },
    {
      "sha": "d728646d274c5b6a221cb17efab22fa2ce1d8390",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -70,14 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Return the full absolute name of the executable file that was\n-     run to create the process PID.  If the executable file cannot\n-     be determined, NULL is returned.  Otherwise, a pointer to a\n-     character string containing the pathname is returned.  This\n-     string should be copied into a buffer by the client if the string\n-     will not be immediately used, or if it must persist.  */\n-  char *(*pid_to_exec_file) (int pid);\n-\n   /* Multiple-filesystem-aware open.  Like open(2), but operating in\n      the filesystem as it appears to process PID.  Systems where all\n      processes share a common filesystem should set this to NULL.\n@@ -498,6 +490,17 @@ class process_target\n \n   /* Return true if target supports range stepping.  */\n   virtual bool supports_range_stepping ();\n+\n+  /* Return true if the pid_to_exec_file op is supported.  */\n+  virtual bool supports_pid_to_exec_file ();\n+\n+  /* Return the full absolute name of the executable file that was\n+     run to create the process PID.  If the executable file cannot\n+     be determined, NULL is returned.  Otherwise, a pointer to a\n+     character string containing the pathname is returned.  This\n+     string should be copied into a buffer by the client if the string\n+     will not be immediately used, or if it must persist.  */\n+  virtual char *pid_to_exec_file (int pid);\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "3b1f7d33f40ddbf79a534120caf57a41d4152c7d",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8247b8236bc5528993d9b2938bc0544a5acea21d/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=8247b8236bc5528993d9b2938bc0544a5acea21d",
      "patch": "@@ -1858,7 +1858,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* pid_to_exec_file */\n   NULL, /* multifs_open */\n   NULL, /* multifs_unlink */\n   NULL, /* multifs_readlink */"
    }
  ]
}