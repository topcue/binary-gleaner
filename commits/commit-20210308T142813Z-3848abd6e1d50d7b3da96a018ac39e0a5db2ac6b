{
  "sha": "3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mzg0OGFiZDZlMWQ1MGQ3YjNkYTk2YTAxOGFjMzllMGE1ZGIyYWM2Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:13Z"
    },
    "message": "Change value_val_atr to ada_val_atr\n\nThis renames value_val_atr to ada_val_atr, changing its parameters to\nmore closely mirror other expression helpers.  The\nEVAL_AVOID_SIDE_EFFECTS case is moved into this function as well.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_val_atr): Rename from value_val_atr.  Change\n\tparameters.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "693f0ce2a2a118ae3c4c6d5731af0f023f566ad2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/693f0ce2a2a118ae3c4c6d5731af0f023f566ad2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "38dc70cfeea6bf0cc97ac08dc61878726cb60204",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/38dc70cfeea6bf0cc97ac08dc61878726cb60204",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/38dc70cfeea6bf0cc97ac08dc61878726cb60204"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 11,
    "deletions": 7
  },
  "files": [
    {
      "sha": "924497ea9e59144f3c6b5a7f85a9ad74934c027f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_val_atr): Rename from value_val_atr.  Change\n+\tparameters.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_binop_minmax): New function."
    },
    {
      "sha": "910eec87a6a49aa79ee7a96c9549a2fad0fd25f4",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
      "patch": "@@ -192,8 +192,6 @@ static struct value *value_pos_atr (struct type *, struct value *);\n \n static struct value *val_atr (struct type *, LONGEST);\n \n-static struct value *value_val_atr (struct type *, struct value *);\n-\n static struct symbol *standard_lookup (const char *, const struct block *,\n \t\t\t\t       domain_enum);\n \n@@ -8845,8 +8843,11 @@ val_atr (struct type *type, LONGEST val)\n }\n \n static struct value *\n-value_val_atr (struct type *type, struct value *arg)\n+ada_val_atr (enum noside noside, struct type *type, struct value *arg)\n {\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (type, not_lval);\n+\n   if (!discrete_type_p (type))\n     error (_(\"'VAL only defined on discrete types\"));\n   if (!integer_type_p (value_type (arg)))\n@@ -10918,10 +10919,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       type = exp->elts[pc + 2].type;\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n-      else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn value_zero (type, not_lval);\n-      else\n-\treturn value_val_atr (type, arg1);\n+      return ada_val_atr (noside, type, arg1);\n \n     case BINOP_EXP:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}