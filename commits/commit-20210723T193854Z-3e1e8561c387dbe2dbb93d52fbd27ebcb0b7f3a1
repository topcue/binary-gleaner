{
  "sha": "3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2UxZTg1NjFjMzg3ZGJlMmRiYjkzZDUyZmJkMjdlYmNiMGI3ZjNhMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-14T01:07:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-07-23T19:38:54Z"
    },
    "message": "gdb/testsuite: test get/set value of unregistered Guile parameter\n\nWhen creating a parameter in Guile, you have to create it using\nmake-parameter and then register it with GDB with register-parameter!.\nIn between, it's still possible (though not documented) to set the\nparameter's value.  I broke this use case by mistake while writing this\nseries, so thought it would be good to have a test for it.\n\nI suppose that people could use this \"feature\" to give their parameter\nan initial value, even though make-parameter has an initial-value\nparameter for this.  Nevertheless, changing this behavior could break\nsome scripts, which is why I think it's important for it to be tested.\n\nChange-Id: I5b2103e3cec0cfdcccf7ffb00eb05fed8626e66d",
    "tree": {
      "sha": "1a3b4c168febb86029497af34429340c7f37f59c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1a3b4c168febb86029497af34429340c7f37f59c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5538b03c98e77756b1e1d3e3be86f997a78e6d11",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5538b03c98e77756b1e1d3e3be86f997a78e6d11",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5538b03c98e77756b1e1d3e3be86f997a78e6d11"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "5a2fb42503d0cc37a3a38777585c396738eb1e8d",
      "filename": "gdb/testsuite/gdb.guile/scm-parameter.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1/gdb/testsuite/gdb.guile/scm-parameter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1/gdb/testsuite/gdb.guile/scm-parameter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-parameter.exp?ref=3e1e8561c387dbe2dbb93d52fbd27ebcb0b7f3a1",
      "patch": "@@ -176,6 +176,14 @@ with_test_prefix \"test-restricted-param\" {\n gdb_test \"guile (register-parameter! (make-parameter \\\"height\\\"))\" \\\n     \"ERROR.*is already defined.*\" \"error registering existing parameter\"\n \n+# Test printing and setting the value of an unregistered parameter.\n+gdb_test \"guile (print (parameter-value (make-parameter \\\"foo\\\")))\" \\\n+    \"= #f\"\n+gdb_test \"guile (define myparam (make-parameter \\\"foo\\\"))\"\n+gdb_test_no_output \"guile (set-parameter-value! myparam #t)\"\n+gdb_test \"guile (print (parameter-value myparam))\" \\\n+    \"= #t\"\n+\n # Test registering a parameter named with what was an ambiguous spelling\n # of existing parameters.\n "
    }
  ]
}