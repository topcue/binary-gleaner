{
  "sha": "23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
  "node_id": "C_kwDOANOeidoAKDIzZmY1NGMyN2Q1MzU3MjdjMWM0NjdhYmRkNGJlZDhmYmQ0NmQ0YTY",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-07-22T05:47:07Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-12-16T08:04:53Z"
    },
    "message": "RISC-V: Support svinval extension with frozen version 1.0.\n\nAccording to the privileged spec, there are five new instructions for\nsvinval extension.  Two of them (HINVAL.VVMA and HINVAL.GVMA) need to\nenable the hypervisor extension.  But there is no implementation of\nhypervisor extension in mainline for now, so let's consider the related\nissues later.\n\n                31..25  24..20 19..15 14..12 11...7 6..2  1..0\nsinval.vma      0001011 rs2    rs1    000    00000  11100 11\nsfence.w.inval  0001100 00000  00000  000    00000  11100 11\nsfence.inval.ir 0001100 00001  00000  000    00000  11100 11\nhinval.vvma     0010011 rs2    rs1    000    00000  11100 11\nhinval.gvma     0110011 rs2    rs1    000    00000  11100 11\n\nThis patch is cherry-picked from the riscv integration branch since the\nsvinval extension is frozen for now.  Besides, we fix the funct7 encodings\nof hinval.vvma and hinval.gvma, from 0x0011011 and 0x0111011 to 0x0010011\nand 0x0110011.\n\nbfd/\n\t* elfxx-riscv.c (riscv_supported_std_s_ext): Added svinval.\n\t(riscv_multi_subset_supports): Handle INSN_CLASS_SVINVAL.\ngas/\n\t* testsuite/gas/riscv/svinval.d: New testcase.\n\t* testsuite/gas/riscv/svinval.s: Likewise.\ninclude/\n\t* opcode/riscv-opc.h: Added encodings for svinval.\n\t* opcode/riscv.h (enum riscv_insn_class): Added INSN_CLASS_SVINVAL.\nopcodes/\n\t* riscv-opc.c (riscv_opcodes): Added svinval instructions.",
    "tree": {
      "sha": "da2e9d4b80b472a0fc4d8c1829859f30d2f720b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da2e9d4b80b472a0fc4d8c1829859f30d2f720b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7d554943ba2f60d7562a7f7360b683885313dec8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d554943ba2f60d7562a7f7360b683885313dec8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d554943ba2f60d7562a7f7360b683885313dec8"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 47,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c575ab093f962e92a1174c3ca257ca2e4279a8f5",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -1227,6 +1227,7 @@ static struct riscv_supported_ext riscv_supported_std_z_ext[] =\n \n static struct riscv_supported_ext riscv_supported_std_s_ext[] =\n {\n+  {\"svinval\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0, 0 },\n   {NULL, 0, 0, 0, 0}\n };\n \n@@ -2403,6 +2404,8 @@ riscv_multi_subset_supports (riscv_parse_subset_t *rps,\n \t      || riscv_subset_supports (rps, \"zve64d\")\n \t      || riscv_subset_supports (rps, \"zve64f\")\n \t      || riscv_subset_supports (rps, \"zve32f\"));\n+    case INSN_CLASS_SVINVAL:\n+      return riscv_subset_supports (rps, \"svinval\");\n     default:\n       rps->error_handler\n         (_(\"internal: unreachable INSN_CLASS_*\"));"
    },
    {
      "sha": "e159f16d5982a6c443d75899cdf6d7818ee2705e",
      "filename": "gas/testsuite/gas/riscv/svinval.d",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/gas/testsuite/gas/riscv/svinval.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/gas/testsuite/gas/riscv/svinval.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/svinval.d?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -0,0 +1,15 @@\n+#as: -march=rv32i_svinval\n+#source: svinval.s\n+#objdump: -d\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+0:[ \t]+16b50073[ \t]+sinval.vma[ \t]+a0,a1\n+[ \t]+4:[ \t]+18000073[ \t]+sfence.w.inval\n+[ \t]+8:[ \t]+18100073[ \t]+sfence.inval.ir\n+[ \t]+c:[ \t]+26b50073[ \t]+hinval.vvma[ \t]+a0,a1\n+[ \t]+10:[ \t]+66b50073[ \t]+hinval.gvma[ \t]+a0,a1"
    },
    {
      "sha": "629d5ef51b48062c0229c8dcad2a9e9b0db92f0a",
      "filename": "gas/testsuite/gas/riscv/svinval.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/gas/testsuite/gas/riscv/svinval.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/gas/testsuite/gas/riscv/svinval.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/svinval.s?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -0,0 +1,5 @@\n+\tsinval.vma\ta0, a1\n+\tsfence.w.inval\n+\tsfence.inval.ir\n+\thinval.vvma\ta0, a1\n+\thinval.gvma\ta0, a1"
    },
    {
      "sha": "a6ece366fa4892fa66f65d67dd04b1e6c5602f3b",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -1987,6 +1987,17 @@\n #define MASK_VDOTUVV  0xfc00707f\n #define MATCH_VFDOTVV  0xe4001057\n #define MASK_VFDOTVV  0xfc00707f\n+/* Svinval instruction.  */\n+#define MATCH_SINVAL_VMA 0x16000073\n+#define MASK_SINVAL_VMA 0xfe007fff\n+#define MATCH_SFENCE_W_INVAL 0x18000073\n+#define MASK_SFENCE_W_INVAL 0xffffffff\n+#define MATCH_SFENCE_INVAL_IR 0x18100073\n+#define MASK_SFENCE_INVAL_IR 0xffffffff\n+#define MATCH_HINVAL_VVMA 0x26000073\n+#define MASK_HINVAL_VVMA 0xfe007fff\n+#define MATCH_HINVAL_GVMA 0x66000073\n+#define MASK_HINVAL_GVMA 0xfe007fff\n /* Privileged CSR addresses.  */\n #define CSR_USTATUS 0x0\n #define CSR_UIE 0x4\n@@ -2549,6 +2560,11 @@ DECLARE_INSN(c_sd, MATCH_C_SD, MASK_C_SD)\n DECLARE_INSN(c_addiw, MATCH_C_ADDIW, MASK_C_ADDIW)\n DECLARE_INSN(c_ldsp, MATCH_C_LDSP, MASK_C_LDSP)\n DECLARE_INSN(c_sdsp, MATCH_C_SDSP, MASK_C_SDSP)\n+DECLARE_INSN(sinval_vma, MATCH_SINVAL_VMA, MASK_SINVAL_VMA)\n+DECLARE_INSN(sfence_w_inval, MATCH_SFENCE_W_INVAL, MASK_SFENCE_W_INVAL)\n+DECLARE_INSN(sfence_inval_ir, MATCH_SFENCE_INVAL_IR, MASK_SFENCE_INVAL_IR)\n+DECLARE_INSN(hinval_vvma, MATCH_HINVAL_VVMA, MASK_HINVAL_VVMA)\n+DECLARE_INSN(hinval_gvma, MATCH_HINVAL_GVMA, MASK_HINVAL_GVMA)\n #endif /* DECLARE_INSN */\n #ifdef DECLARE_CSR\n /* Privileged CSRs.  */"
    },
    {
      "sha": "cbc90b00008f61cad6e5b0126c776dd465dae55e",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -387,6 +387,7 @@ enum riscv_insn_class\n   INSN_CLASS_ZKND_OR_ZKNE,\n   INSN_CLASS_V,\n   INSN_CLASS_ZVEF,\n+  INSN_CLASS_SVINVAL,\n };\n \n /* This structure holds information for a particular instruction.  */"
    },
    {
      "sha": "f220006fc93f35fd61b2663d7accc70b27c674c2",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23ff54c27d535727c1c467abdd4bed8fbd46d4a6/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=23ff54c27d535727c1c467abdd4bed8fbd46d4a6",
      "patch": "@@ -1725,6 +1725,13 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"vmv4r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV4RV, MASK_VMV4RV, match_opcode, 0},\n {\"vmv8r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV8RV, MASK_VMV8RV, match_opcode, 0},\n \n+/* Svinval instructions.  */\n+{\"sinval.vma\",      0, INSN_CLASS_SVINVAL, \"s,t\", MATCH_SINVAL_VMA, MASK_SINVAL_VMA, match_opcode, 0 },\n+{\"sfence.w.inval\",  0, INSN_CLASS_SVINVAL, \"\",    MATCH_SFENCE_W_INVAL, MASK_SFENCE_W_INVAL, match_opcode, 0 },\n+{\"sfence.inval.ir\", 0, INSN_CLASS_SVINVAL, \"\",    MATCH_SFENCE_INVAL_IR, MASK_SFENCE_INVAL_IR, match_opcode, 0 },\n+{\"hinval.vvma\",     0, INSN_CLASS_SVINVAL, \"s,t\", MATCH_HINVAL_VVMA, MASK_HINVAL_VVMA, match_opcode, 0 },\n+{\"hinval.gvma\",     0, INSN_CLASS_SVINVAL, \"s,t\", MATCH_HINVAL_GVMA, MASK_HINVAL_GVMA, match_opcode, 0 },\n+\n /* Terminate the list.  */\n {0, 0, INSN_CLASS_NONE, 0, 0, 0, 0, 0}\n };"
    }
  ]
}