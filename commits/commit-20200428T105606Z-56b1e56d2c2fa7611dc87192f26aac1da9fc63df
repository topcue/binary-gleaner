{
  "sha": "56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTZiMWU1NmQyYzJmYTc2MTFkYzg3MTkyZjI2YWFjMWRhOWZjNjNkZg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-28T10:56:06Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-28T10:56:06Z"
    },
    "message": "Rebase libiberty source with latest changes from gcc.\n\n\tPR 25876\n\tPR demangler/94797\n\t* cp-demangle.c (cplus_demangle_operators): Add ss <=> operator.\n\t* testsuite/demangle-expected: Add operator<=> test.",
    "tree": {
      "sha": "58baa847df9decbfc2ba7034ae96f7ebb0b4e761",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/58baa847df9decbfc2ba7034ae96f7ebb0b4e761"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "32d1f47a126567f24be18e7cadf5d2490968c986",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/32d1f47a126567f24be18e7cadf5d2490968c986",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/32d1f47a126567f24be18e7cadf5d2490968c986"
    }
  ],
  "stats": {
    "total": 217,
    "additions": 196,
    "deletions": 21
  },
  "files": [
    {
      "sha": "3b61aaca93c466bfc544a67633030d64889764aa",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 35,
      "deletions": 20,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -1,38 +1,53 @@\n+2020-04-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR demangler/94797\n+\t* cp-demangle.c (cplus_demangle_operators): Add ss <=> operator.\n+\t* testsuite/demangle-expected: Add operator<=> test.\n+\n+2020-04-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/94739\n+\t* Makefile.in (COMPILE.c): Add @CET_HOST_FLAGS@.\n+\t(configure_deps): Add $(srcdir)/../config/cet.m4 and\n+\t$(srcdir)/../config/enable.m4.\n+\t* aclocal.m4: Include ../config/cet.m4 and ../config/enable.m4.\n+\t* configure.ac: Add GCC_CET_HOST_FLAGS(CET_HOST_FLAGS) and\n+\tAC_SUBST(CET_HOST_FLAGS).\n+\t* configure: Regenerated.\n+\n+2020-03-05  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n+\n+\t* simple-object.c (handle_lto_debug_sections): Name\n+\t\".GCC.command.line\" among debug sections to be copied over\n+\tfrom lto objects.\n+\n+2020-03-02  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/demangle-expected: Update expected demangling of\n+\tenable_if pattern.\n+\n 2020-03-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/93966\n \t* simple-object.c (handle_lto_debug_sections): Also copy\n \t.note.gnu.property section.\n \n-2020-02-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+2020-02-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n-\t* rust-demangle.h: Removed.\n+\tPR libstdc++/79193\n+\tPR libstdc++/88999\n \n-\tImport from gcc mainline:\n-\t2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t* configure: Regenerated.\n+\n+2020-02-05  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* hashtab.c (htab_remove_elt): Make a parameter const.\n \t(htab_remove_elt_with_hash): Likewise.\n \n-\t2020-01-23  Alexandre Oliva <oliva@adacore.com>\n+2020-01-23  Alexandre Oliva <oliva@adacore.com>\n \n \t* argv.c (writeargv): Output empty args as \"\".\n \n-\t2020-01-18  Iain Sandoe  <iain@sandoe.co.uk>\n-\n-\t* cp-demangle.c (cplus_demangle_operators): Add the co_await\n-\toperator.\n-\t* testsuite/demangle-expected: Test co_await operator mangling.\n-\n-2020-02-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* configure: Regenerate.\n-\n-2020-01-17  Nick Clifton  <nickc@redhat.com>\n-\n-\t* testsuite/demangle-expected: Update expected demangling of\n-\tenable_if pattern.\n-\n 2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."
    },
    {
      "sha": "d6b302e02fd907ecf042ae309d5ed0b7922937f0",
      "filename": "libiberty/Makefile.in",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/Makefile.in?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -112,7 +112,8 @@ installcheck: installcheck-subdir\n INCDIR=$(srcdir)/$(MULTISRCTOP)../include\n \n COMPILE.c = $(CC) -c @DEFS@ $(CFLAGS) $(CPPFLAGS) -I. -I$(INCDIR) \\\n-               $(HDEFINES) @ac_libiberty_warn_cflags@ -D_GNU_SOURCE\n+               $(HDEFINES) @ac_libiberty_warn_cflags@ -D_GNU_SOURCE \\\n+               @CET_HOST_FLAGS@\n \n # Just to make sure we don't use a built-in rule with VPATH\n .c.$(objext):\n@@ -481,6 +482,8 @@ config.status: $(srcdir)/configure\n AUTOCONF = autoconf\n configure_deps = $(srcdir)/aclocal.m4 \\\n \t$(srcdir)/../config/acx.m4 \\\n+\t$(srcdir)/../config/cet.m4 \\\n+\t$(srcdir)/../config/enable.m4 \\\n \t$(srcdir)/../config/no-executables.m4 \\\n \t$(srcdir)/../config/override.m4 \\\n \t$(srcdir)/../config/picflag.m4 \\"
    },
    {
      "sha": "34c0a5bab627b1503318a5091dda8291040280e4",
      "filename": "libiberty/aclocal.m4",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/aclocal.m4?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -1,4 +1,6 @@\n sinclude(../config/acx.m4)\n+sinclude(../config/cet.m4)\n+sinclude(../config/enable.m4)\n sinclude(../config/no-executables.m4)\n sinclude(../config/override.m4)\n sinclude(../config/picflag.m4)"
    },
    {
      "sha": "2b52ce86c89dabdfad9c0da8612e53c5fbb5da02",
      "filename": "libiberty/configure",
      "status": "modified",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -626,6 +626,7 @@ pexecute\n target_header_dir\n CHECK\n LIBOBJS\n+CET_HOST_FLAGS\n NOASANFLAG\n PICFLAG\n INSTALL_DATA\n@@ -710,6 +711,7 @@ enable_maintainer_mode\n enable_multilib\n enable_install_libiberty\n enable_largefile\n+enable_cet\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1337,6 +1339,7 @@ Optional Features:\n   --enable-multilib       build many library versions (default)\n   --enable-install-libiberty       Install headers and library for end users\n   --disable-largefile     omit support for large files\n+  --enable-cet            enable Intel CET in host libraries [default=auto]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -5264,6 +5267,148 @@ case \" ${CFLAGS} \" in\n esac\n \n \n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|auto) ;;\n+       *) as_fn_error $? \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=auto\n+fi\n+\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for CET support\" >&5\n+$as_echo_n \"checking for CET support... \" >&6; }\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    may_have_cet=yes\n+    save_CFLAGS=\"$CFLAGS\"\n+    CFLAGS=\"$CFLAGS -fcf-protection\"\n+    case \"$enable_cet\" in\n+      auto)\n+\t# Check if target supports multi-byte NOPs\n+\t# and if assembler supports CET insn.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+#if !defined(__SSE2__)\n+#error target does not support multi-byte NOPs\n+#else\n+asm (\"setssbsy\");\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error $? \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    CFLAGS=\"$save_CFLAGS\"\n+    ;;\n+  *)\n+    may_have_cet=no\n+    enable_cet=no\n+    ;;\n+esac\n+\n+if test x$may_have_cet = xyes; then\n+  save_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$LDFLAGS -Wl,-z,ibt,-z,shstk\"\n+  if test \"$cross_compiling\" = yes; then :\n+  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n+$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n+as_fn_error $? \"cannot run test program while cross compiling\n+See \\`config.log' for more details\" \"$LINENO\" 5; }\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+static void\n+foo (void)\n+{\n+}\n+\n+static void\n+__attribute__ ((noinline, noclone))\n+xxx (void (*f) (void))\n+{\n+  f ();\n+}\n+\n+static void\n+__attribute__ ((noinline, noclone))\n+bar (void)\n+{\n+  xxx (foo);\n+}\n+\n+int\n+main ()\n+{\n+  bar ();\n+  return 0;\n+}\n+\n+_ACEOF\n+if ac_fn_c_try_run \"$LINENO\"; then :\n+  have_cet=no\n+else\n+  have_cet=yes\n+fi\n+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n+  conftest.$ac_objext conftest.beam conftest.$ac_ext\n+fi\n+\n+  LDFLAGS=\"$save_LDFLAGS\"\n+  if test x$enable_cet = xno -a x$have_cet = xyes; then\n+    as_fn_error $? \"Intel CET must be enabled on Intel CET enabled host\" \"$LINENO\" 5\n+  fi\n+fi\n+if test x$enable_cet = xyes; then\n+  CET_HOST_FLAGS=\"-fcf-protection\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+\n echo \"# Warning: this fragment is automatically generated\" > temp-frag\n \n if [ -n \"${frag}\" ] && [ -f \"${frag}\" ]; then"
    },
    {
      "sha": "4e2599c14a89bafcb8c7e523b9ce5b3d60b8c0f6",
      "filename": "libiberty/configure.ac",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure.ac?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -243,6 +243,9 @@ case \" ${CFLAGS} \" in\n esac\n AC_SUBST(NOASANFLAG)\n \n+GCC_CET_HOST_FLAGS(CET_HOST_FLAGS)\n+AC_SUBST(CET_HOST_FLAGS)\n+\n echo \"# Warning: this fragment is automatically generated\" > temp-frag\n \n if [[ -n \"${frag}\" ]] && [[ -f \"${frag}\" ]]; then"
    },
    {
      "sha": "cbfb2f937ca970bb57bf7983a466ac7fcf1cb478",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -1860,6 +1860,7 @@ const struct demangle_operator_info cplus_demangle_operators[] =\n   { \"sP\", NL (\"sizeof...\"), 1 },\n   { \"sZ\", NL (\"sizeof...\"), 1 },\n   { \"sc\", NL (\"static_cast\"), 2 },\n+  { \"ss\", NL (\"<=>\"),       2 },\n   { \"st\", NL (\"sizeof \"),   1 },\n   { \"sz\", NL (\"sizeof \"),   1 },\n   { \"tr\", NL (\"throw\"),     0 },"
    },
    {
      "sha": "92f5698d0a6490bc1364812af61c1a402523eab9",
      "filename": "libiberty/simple-object.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/simple-object.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/simple-object.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object.c?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -301,6 +301,9 @@ handle_lto_debug_sections (const char *name, int rename)\n      COMDAT sections in objects produced by GCC.  */\n   else if (strcmp (name, \".comment\") == 0)\n     return strcpy (newname, name);\n+  /* Copy over .GCC.command.line section under the same name if present.  */\n+  else if (strcmp (name, \".GCC.command.line\") == 0)\n+    return strcpy (newname, name);\n   free (newname);\n   return NULL;\n }"
    },
    {
      "sha": "d8e50951f844fc8da64ef597e6dd1e20b7809984",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/56b1e56d2c2fa7611dc87192f26aac1da9fc63df/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=56b1e56d2c2fa7611dc87192f26aac1da9fc63df",
      "patch": "@@ -1453,3 +1453,6 @@ void foo<(void*)0>(enable_if<((void*)0)==(decltype(nullptr)), void>::type*)\n \n _ZNK5coro15emptyawEv\n coro1::empty::operator co_await() const\n+\n+_ZNK3FoossERKS_\n+Foo::operator<=>(Foo const&) const"
    }
  ]
}