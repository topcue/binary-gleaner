{
  "sha": "eb09df162bafa67abee713be594a99bd20bd6825",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWIwOWRmMTYyYmFmYTY3YWJlZTcxM2JlNTk0YTk5YmQyMGJkNjgyNQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-08-16T13:46:44Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-08-16T13:46:44Z"
    },
    "message": "as: Replace the removed symbol with the versioned symbol\n\nWhen a symbol removed by .symver is used in relocation and there is one\nand only one versioned symbol, don't remove the symbol.  Instead, mark\nit to be removed and replace the removed symbol used in relocation with\nthe versioned symbol before generating relocation.\n\n\tPR gas/28157\n\t* symbols.c (symbol_flags): Add removed.\n\t(symbol_entry_find): Updated.\n\t(symbol_mark_removed): New function.\n\t(symbol_removed_p): Likewise.\n\t* symbols.h (symbol_mark_removed): New prototype.\n\t(symbol_removed_p): Likewise.\n\t* write.c (write_relocs): Call obj_fixup_removed_symbol on\n\tremoved fixp->fx_addsy and fixp->fx_subsy if defined.\n\t(set_symtab): Don't add a symbol if symbol_removed_p returns true.\n\t* config/obj-elf.c (elf_frob_symbol):  Don't remove the symbol\n\tif it is used on relocation.  Instead, mark it as to be removed\n\tand issue an error if the symbol has more than one versioned name.\n\t(elf_fixup_removed_symbol): New function.\n\t* config/obj-elf.h (elf_fixup_removed_symbol): New prototype.\n\t(obj_fixup_removed_symbol): New.\n\t* testsuite/gas/symver/symver11.d: Updated expected error\n\tmessage.\n\t* testsuite/gas/symver/symver16.d: New file.\n\t* testsuite/gas/symver/symver16.s: Likewise.",
    "tree": {
      "sha": "8cea62798489a53661cacaa7eab76421d8340463",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8cea62798489a53661cacaa7eab76421d8340463"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb09df162bafa67abee713be594a99bd20bd6825",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb09df162bafa67abee713be594a99bd20bd6825",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb09df162bafa67abee713be594a99bd20bd6825",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb09df162bafa67abee713be594a99bd20bd6825/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "70069e7823d412a01d983379504222c557319cbd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70069e7823d412a01d983379504222c557319cbd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/70069e7823d412a01d983379504222c557319cbd"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 103,
    "deletions": 10
  },
  "files": [
    {
      "sha": "a6087a21eb39d899a484a372d980945992740704",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 26,
      "deletions": 2,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -2705,7 +2705,7 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n \t\tS_SET_EXTERNAL (symp2);\n \t    }\n \n-\t  switch (symbol_get_obj (symp)->visibility)\n+\t  switch (sy_obj->visibility)\n \t    {\n \t    case visibility_unchanged:\n \t      break;\n@@ -2716,7 +2716,18 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n \t      elfsym->internal_elf_sym.st_other |= STV_HIDDEN;\n \t      break;\n \t    case visibility_remove:\n-\t      symbol_remove (symp, &symbol_rootP, &symbol_lastP);\n+\t      /* Don't remove the symbol if it is used in relocation.\n+\t\t Instead, mark it as to be removed and issue an error\n+\t\t if the symbol has more than one versioned name.  */\n+\t      if (symbol_used_in_reloc_p (symp))\n+\t\t{\n+\t\t  if (sy_obj->versioned_name->next != NULL)\n+\t\t    as_bad (_(\"symbol '%s' with multiple versions cannot be used in relocation\"),\n+\t\t\t    S_GET_NAME (symp));\n+\t\t  symbol_mark_removed (symp);\n+\t\t}\n+\t      else\n+\t\tsymbol_remove (symp, &symbol_rootP, &symbol_lastP);\n \t      break;\n \t    case visibility_local:\n \t      S_CLEAR_EXTERNAL (symp);\n@@ -2734,6 +2745,19 @@ elf_frob_symbol (symbolS *symp, int *puntp)\n     }\n }\n \n+/* Fix up SYMPP which has been marked to be removed by .symver.  */\n+\n+void\n+elf_fixup_removed_symbol (symbolS **sympp)\n+{\n+  symbolS *symp = *sympp;\n+  struct elf_obj_sy *sy_obj = symbol_get_obj (symp);\n+\n+  /* Replace the removed symbol with the versioned symbol.  */\n+  symp = symbol_find (sy_obj->versioned_name->name);\n+  *sympp = symp;\n+}\n+\n struct group_list\n {\n   asection **head;\t\t/* Section lists.  */"
    },
    {
      "sha": "763c58dfcad6c88820ae7c7a95fec0726860a16f",
      "filename": "gas/config/obj-elf.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/config/obj-elf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/config/obj-elf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.h?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -273,6 +273,11 @@ extern void elf_frob_symbol (symbolS *, int *);\n #define obj_frob_symbol(symp, punt) elf_frob_symbol (symp, &punt)\n #endif\n \n+extern void elf_fixup_removed_symbol (symbolS **);\n+#ifndef obj_fixup_removed_symbol\n+#define obj_fixup_removed_symbol(sympp) elf_fixup_removed_symbol (sympp)\n+#endif\n+\n extern void elf_pop_insert (void);\n #ifndef obj_pop_insert\n #define obj_pop_insert()\telf_pop_insert()"
    },
    {
      "sha": "3cb9425c4ce3d71530bc5a4f90b3a1c32873b7d3",
      "filename": "gas/symbols.c",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.c?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -78,6 +78,10 @@ struct symbol_flags\n      before.  It is cleared as soon as any direct reference to the\n      symbol is present.  */\n   unsigned int weakrefd : 1;\n+\n+  /* Whether the symbol has been marked to be removed by a .symver\n+     directive.  */\n+  unsigned int removed : 1;\n };\n \n /* A pointer in the symbol may point to either a complete symbol\n@@ -194,7 +198,7 @@ static void *\n symbol_entry_find (htab_t table, const char *name)\n {\n   hashval_t hash = htab_hash_string (name);\n-  symbol_entry_t needle = { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+  symbol_entry_t needle = { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n \t\t\t      hash, name, 0, 0, 0 } };\n   return htab_find_with_hash (table, &needle, hash);\n }\n@@ -2807,6 +2811,26 @@ symbol_written_p (symbolS *s)\n   return s->flags.written;\n }\n \n+/* Mark a symbol as to be removed.  */\n+\n+void\n+symbol_mark_removed (symbolS *s)\n+{\n+  if (s->flags.local_symbol)\n+    return;\n+  s->flags.removed = 1;\n+}\n+\n+/* Return whether a symbol has been marked to be removed.  */\n+\n+int\n+symbol_removed_p (symbolS *s)\n+{\n+  if (s->flags.local_symbol)\n+    return 0;\n+  return s->flags.removed;\n+}\n+\n /* Mark a symbol has having been resolved.  */\n \n void"
    },
    {
      "sha": "317252c7fa198e100a5a7ff9f5d37b0a1ceded08",
      "filename": "gas/symbols.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/symbols.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/symbols.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.h?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -193,6 +193,8 @@ extern int symbol_mri_common_p (symbolS *);\n extern void symbol_mark_written (symbolS *);\n extern void symbol_clear_written (symbolS *);\n extern int symbol_written_p (symbolS *);\n+extern void symbol_mark_removed (symbolS *);\n+extern int symbol_removed_p (symbolS *);\n extern void symbol_mark_resolved (symbolS *);\n extern int symbol_resolved_p (symbolS *);\n extern int symbol_section_p (symbolS *);"
    },
    {
      "sha": "10f8ef810b2a083983db1f943d2105ef72d57d35",
      "filename": "gas/testsuite/gas/symver/symver11.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver11.d?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -1,2 +1,2 @@\n #name: symver symver11\n-#error: .*symbol cannot be used on reloc\n+#error: .*: symbol 'foo' with multiple versions cannot be used in relocation"
    },
    {
      "sha": "cdf0ddde57dee58b76c80f6f2c2e1aaa8e70186e",
      "filename": "gas/testsuite/gas/symver/symver16.d",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver16.d?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -0,0 +1,13 @@\n+#name: symver symver16\n+#readelf: -srW\n+\n+#...\n+Relocation section .*\n+#...\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0-9a-f]+[ \\t]+foo@@VERS_1.*\n+#...\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0-9a-f]+[ \\t]+bar@VERS_1.*\n+#...\n+ +[0-9]+: 0+ +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +foo@@VERS_1\n+ +[0-9]+: 0+1 +1 +OBJECT +GLOBAL +DEFAULT +[0-9]+ +bar@VERS_1\n+#pass"
    },
    {
      "sha": "df330fd4f25ea3ebc4d249edc8a7f1d8129b1d77",
      "filename": "gas/testsuite/gas/symver/symver16.s",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/testsuite/gas/symver/symver16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/symver/symver16.s?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -0,0 +1,16 @@\n+\t.data\n+\t.type foo,%object\n+foo:\n+\t.byte 0\n+\t.size foo,.-foo\n+\t.globl foo\n+\t.symver foo,foo@@VERS_1,remove\n+\t.globl bar\n+\t.symver bar,bar@VERS_1,remove\n+\t.type bar,%object\n+bar:\n+\t.byte 0\n+\t.size bar,.-bar\n+\t.balign 8\n+\t.dc.a foo\n+\t.dc.a bar"
    },
    {
      "sha": "e2c7bf2924976ef886e54cb2669b02bd234e1a86",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb09df162bafa67abee713be594a99bd20bd6825/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb09df162bafa67abee713be594a99bd20bd6825/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=eb09df162bafa67abee713be594a99bd20bd6825",
      "patch": "@@ -1289,6 +1289,13 @@ write_relocs (bfd *abfd ATTRIBUTE_UNUSED, asection *sec,\n \tas_bad_where (fixp->fx_file, fixp->fx_line,\n \t\t      _(\"internal error: fixup not contained within frag\"));\n \n+#ifdef obj_fixup_removed_symbol\n+      if (fixp->fx_addsy && symbol_removed_p (fixp->fx_addsy))\n+\tobj_fixup_removed_symbol (&fixp->fx_addsy);\n+      if (fixp->fx_subsy && symbol_removed_p (fixp->fx_subsy))\n+\tobj_fixup_removed_symbol (&fixp->fx_subsy);\n+#endif\n+\n #ifndef RELOC_EXPANSION_POSSIBLE\n       *reloc = tc_gen_reloc (sec, fixp);\n #else\n@@ -1755,9 +1762,10 @@ set_symtab (void)\n      two.  Generate unused section symbols only if needed.  */\n   nsyms = 0;\n   for (symp = symbol_rootP; symp; symp = symbol_next (symp))\n-    if (bfd_keep_unused_section_symbols (stdoutput)\n-\t|| !symbol_section_p (symp)\n-\t|| symbol_used_in_reloc_p (symp))\n+    if (!symbol_removed_p (symp)\n+\t&& (bfd_keep_unused_section_symbols (stdoutput)\n+\t    || !symbol_section_p (symp)\n+\t    || symbol_used_in_reloc_p (symp)))\n       nsyms++;\n \n   if (nsyms)\n@@ -1768,9 +1776,10 @@ set_symtab (void)\n       asympp = (asymbol **) bfd_alloc (stdoutput, amt);\n       symp = symbol_rootP;\n       for (i = 0; i < nsyms; symp = symbol_next (symp))\n-\tif (bfd_keep_unused_section_symbols (stdoutput)\n-\t    || !symbol_section_p (symp)\n-\t    || symbol_used_in_reloc_p (symp))\n+\tif (!symbol_removed_p (symp)\n+\t    && (bfd_keep_unused_section_symbols (stdoutput)\n+\t\t|| !symbol_section_p (symp)\n+\t\t|| symbol_used_in_reloc_p (symp)))\n \t  {\n \t    asympp[i] = symbol_get_bfdsym (symp);\n \t    if (asympp[i]->flags != BSF_SECTION_SYM"
    }
  ]
}