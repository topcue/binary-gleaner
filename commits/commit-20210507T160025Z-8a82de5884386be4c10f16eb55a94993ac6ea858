{
  "sha": "8a82de5884386be4c10f16eb55a94993ac6ea858",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGE4MmRlNTg4NDM4NmJlNGMxMGYxNmViNTVhOTQ5OTNhYzZlYTg1OA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-07T15:49:24Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-07T16:00:25Z"
    },
    "message": "gdb: some int to bool conversion\n\nChange int parameter to bool in remote_notice_new_inferior (remote.c)\nand notice_new_inferior (infcmd.c), and update the callers.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* infcmd.c (notice_new_inferior): Change parameter type.\n\t* inferior.h (notice_new_inferior): Change parameter type.\n\t* remote.c (remote_notice_new_inferior): Change parameter type to\n\tbool.  Also update type of local variable to bool.\n\t(remote_target::update_thread_list): Change type of local variable\n\tto bool.\n\t(remote_target::process_stop_reply): Pass bool instead of int to\n\tremote_notice_new_inferior.",
    "tree": {
      "sha": "692aff8cc94682dff2d233f0160ad628ed4b929d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/692aff8cc94682dff2d233f0160ad628ed4b929d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8a82de5884386be4c10f16eb55a94993ac6ea858",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a82de5884386be4c10f16eb55a94993ac6ea858",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8a82de5884386be4c10f16eb55a94993ac6ea858",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a82de5884386be4c10f16eb55a94993ac6ea858/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bedc473418aa3b595a985e4adbbeb7864c5891e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bedc473418aa3b595a985e4adbbeb7864c5891e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bedc473418aa3b595a985e4adbbeb7864c5891e3"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 18,
    "deletions": 7
  },
  "files": [
    {
      "sha": "9c7fdc3abcf1bbd10a0d82fff9302e9111882d4d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8a82de5884386be4c10f16eb55a94993ac6ea858",
      "patch": "@@ -1,3 +1,14 @@\n+2021-05-07  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* infcmd.c (notice_new_inferior): Change parameter type.\n+\t* inferior.h (notice_new_inferior): Change parameter type.\n+\t* remote.c (remote_notice_new_inferior): Change parameter type to\n+\tbool.  Also update type of local variable to bool.\n+\t(remote_target::update_thread_list): Change type of local variable\n+\tto bool.\n+\t(remote_target::process_stop_reply): Pass bool instead of int to\n+\tremote_notice_new_inferior.\n+\n 2021-05-07  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* target.c (target_stack::unpush): Call target_ops::find_beneath"
    },
    {
      "sha": "f0b044d62b946e28403c781ac25419632e656bf6",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=8a82de5884386be4c10f16eb55a94993ac6ea858",
      "patch": "@@ -2675,7 +2675,7 @@ attach_command (const char *args, int from_tty)\n    as stopped.  */\n \n void\n-notice_new_inferior (thread_info *thr, int leave_running, int from_tty)\n+notice_new_inferior (thread_info *thr, bool leave_running, int from_tty)\n {\n   enum attach_post_wait_mode mode\n     = leave_running ? ATTACH_POST_WAIT_RESUME : ATTACH_POST_WAIT_NOTHING;"
    },
    {
      "sha": "f4b8b025e35362d6c6aae9fcaff0b3243402d2f8",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=8a82de5884386be4c10f16eb55a94993ac6ea858",
      "patch": "@@ -218,7 +218,7 @@ using delete_longjmp_breakpoint_cleanup\n \n extern void detach_command (const char *, int);\n \n-extern void notice_new_inferior (struct thread_info *, int, int);\n+extern void notice_new_inferior (struct thread_info *, bool, int);\n \n extern struct value *get_return_value (struct value *function,\n \t\t\t\t       struct type *value_type);"
    },
    {
      "sha": "d3a66599122c105a4ca9a8d2853a03255558de95",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8a82de5884386be4c10f16eb55a94993ac6ea858/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=8a82de5884386be4c10f16eb55a94993ac6ea858",
      "patch": "@@ -764,7 +764,7 @@ class remote_target : public process_stratum_target\n   ptid_t select_thread_for_ambiguous_stop_reply\n     (const struct target_waitstatus *status);\n \n-  void remote_notice_new_inferior (ptid_t currthread, int executing);\n+  void remote_notice_new_inferior (ptid_t currthread, bool executing);\n \n   void process_initial_stop_replies (int from_tty);\n \n@@ -2556,12 +2556,12 @@ remote_target::remote_add_thread (ptid_t ptid, bool running, bool executing)\n    thread is (internally) executing or stopped.  */\n \n void\n-remote_target::remote_notice_new_inferior (ptid_t currthread, int executing)\n+remote_target::remote_notice_new_inferior (ptid_t currthread, bool executing)\n {\n   /* In non-stop mode, we assume new found threads are (externally)\n      running until proven otherwise with a stop reply.  In all-stop,\n      we can only get here if all threads are stopped.  */\n-  int running = target_is_non_stop_p () ? 1 : 0;\n+  bool running = target_is_non_stop_p ();\n \n   /* If this is a new thread, add it to GDB's thread list.\n      If we leave it up to WFI to do this, bad things will happen.  */\n@@ -3955,7 +3955,7 @@ remote_target::update_thread_list ()\n \t\t executing until proven otherwise with a stop reply.\n \t\t In all-stop, we can only get here if all threads are\n \t\t stopped.  */\n-\t      int executing = target_is_non_stop_p () ? 1 : 0;\n+\t      bool executing = target_is_non_stop_p ();\n \n \t      remote_notice_new_inferior (item.ptid, executing);\n \n@@ -8036,7 +8036,7 @@ remote_target::process_stop_reply (struct stop_reply *stop_reply,\n \t  stop_reply->regcache.clear ();\n \t}\n \n-      remote_notice_new_inferior (ptid, 0);\n+      remote_notice_new_inferior (ptid, false);\n       remote_thread_info *remote_thr = get_remote_thread_info (this, ptid);\n       remote_thr->core = stop_reply->core;\n       remote_thr->stop_reason = stop_reply->stop_reason;"
    }
  ]
}