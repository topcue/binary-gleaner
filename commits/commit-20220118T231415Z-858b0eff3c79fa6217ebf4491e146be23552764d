{
  "sha": "858b0eff3c79fa6217ebf4491e146be23552764d",
  "node_id": "C_kwDOANOeidoAKDg1OGIwZWZmM2M3OWZhNjIxN2ViZjQ0OTFlMTQ2YmUyMzU1Mjc2NGQ",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-18T23:05:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2022-01-18T23:14:15Z"
    },
    "message": "Re: PowerPC64 DT_RELR\n\nHJ: \"There are 238 R_PPC64_NONEs in libc.so.6 alone.\"\nIndeed, let's make them go away.  I had the SYMBOL_REFERENCES_LOCAL\ntest in the wrong place.  check_relocs is too early to know whether a\nsymbol is dynamic in a shared library.  Lots of glibc symbols are made\nlocal by version script, but that doesn't happen until\nsize_dynamic_sections.\n\n\t* elf64-ppc.c (ppc64_elf_check_relocs): Don't count relative relocs\n\there depending on SYMBOL_REFERENCES_LOCAL.\n\t(dec_dynrel_count): Likewise.\n\t(allocate_dynrelocs): Do so here instead.",
    "tree": {
      "sha": "c416582a0a0d282709b3d8d9dc6feec90972c68e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c416582a0a0d282709b3d8d9dc6feec90972c68e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/858b0eff3c79fa6217ebf4491e146be23552764d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/858b0eff3c79fa6217ebf4491e146be23552764d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/858b0eff3c79fa6217ebf4491e146be23552764d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/858b0eff3c79fa6217ebf4491e146be23552764d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "72a52f2a86f33434a511da11fae0471253df068d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/72a52f2a86f33434a511da11fae0471253df068d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/72a52f2a86f33434a511da11fae0471253df068d"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 3,
    "deletions": 5
  },
  "files": [
    {
      "sha": "aeae3b7e640556b9f943eecd45da2be704ac0e76",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/858b0eff3c79fa6217ebf4491e146be23552764d/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/858b0eff3c79fa6217ebf4491e146be23552764d/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=858b0eff3c79fa6217ebf4491e146be23552764d",
      "patch": "@@ -5390,8 +5390,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t\t  if ((r_type == R_PPC64_ADDR64 || r_type == R_PPC64_TOC)\n \t\t      && rel->r_offset % 2 == 0\n \t\t      && sec->alignment_power != 0\n-\t\t      && ((!NO_OPD_RELOCS && is_opd)\n-\t\t\t  || (!ifunc && SYMBOL_REFERENCES_LOCAL (info, h))))\n+\t\t      && ((!NO_OPD_RELOCS && is_opd) || !ifunc))\n \t\t    p->rel_count += 1;\n \t\t}\n \t      else\n@@ -7287,8 +7286,7 @@ dec_dynrel_count (const Elf_Internal_Rela *rel,\n \t\t  && sec->alignment_power != 0\n \t\t  && ((!NO_OPD_RELOCS\n \t\t       && ppc64_elf_section_data (sec)->sec_type == sec_opd)\n-\t\t      || (h->type != STT_GNU_IFUNC\n-\t\t\t  && SYMBOL_REFERENCES_LOCAL (info, h))))\n+\t\t      || h->type != STT_GNU_IFUNC))\n \t\tp->rel_count -= 1;\n \t      p->count -= 1;\n \t      if (p->count == 0)\n@@ -10016,7 +10014,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)\n \t  if (eh->elf.type == STT_GNU_IFUNC)\n \t    sreloc = htab->elf.irelplt;\n \t  count = p->count;\n-\t  if (info->enable_dt_relr)\n+\t  if (info->enable_dt_relr && SYMBOL_REFERENCES_LOCAL (info, h))\n \t    count -= p->rel_count;\n \t  sreloc->size += count * sizeof (Elf64_External_Rela);\n \t}"
    }
  ]
}