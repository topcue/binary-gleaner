{
  "sha": "44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDRmNDFiYjdhMTU2OGRiZTJlNGU2NDJlNmMzYzJlOWJhM2Q0N2Q5Mg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-11T12:03:28Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-11T12:03:28Z"
    },
    "message": "[gdb/testsuite] Fix missing uint8_t in gdb.fortran/logical.exp\n\nWith test-case gdb.fortran/logical.exp, I run into:\n...\n(gdb) PASS: gdb.fortran/logical.exp: var=l: get hexadecimal valueof \"&l\"\nset *((uint8_t *) 0x7fffffffd2bc) = 0xff^M\nNo symbol \"uint8_t\" in current context.^M\n(gdb) FAIL: gdb.fortran/logical.exp: var=l: byte 0: set contents of byte at offset 0\n...\n\nFix this by using the fortran-native type character instead.\n\nTested on x86_64-linux, with gcc 7.5.0.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-11  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.fortran/logical.f90: Define variable with character type.\n\t* gdb.fortran/logical.exp: Use character type instead of uint8_t.",
    "tree": {
      "sha": "d086e27e02eb95653649480d8e88867b382c9bae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d086e27e02eb95653649480d8e88867b382c9bae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dcc050c86c3e5160497da7aab480adae9ba284aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcc050c86c3e5160497da7aab480adae9ba284aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dcc050c86c3e5160497da7aab480adae9ba284aa"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 8,
    "deletions": 1
  },
  "files": [
    {
      "sha": "fce29b64375534567d867fffbf86293816814213",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-11  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.fortran/logical.f90: Define variable with character type.\n+\t* gdb.fortran/logical.exp: Use character type instead of uint8_t.\n+\n 2020-03-11  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/list-ambiguous.exp: Set EDITOR to true."
    },
    {
      "sha": "324714fa49e3ada281f1f4d5c10db59973df4e96",
      "filename": "gdb/testsuite/gdb.fortran/logical.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/gdb.fortran/logical.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/gdb.fortran/logical.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/logical.exp?ref=44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
      "patch": "@@ -43,7 +43,7 @@ foreach_with_prefix var { l l1 l2 l4 l8 } {\n \n     for { set i 0 } { $i < $len } { incr i } {\n \twith_test_prefix \"byte $i\" {\n-\t    gdb_test_no_output \"set *((uint8_t *) ${addr}) = 0xff\" \\\n+\t    gdb_test_no_output \"set *((character *) ${addr}) = 0xff\" \\\n \t\t\"set contents of byte at offset $i\"\n \t    gdb_test \"p l\" \" = \\\\.TRUE\\\\.\"\n \t    incr addr"
    },
    {
      "sha": "175dfd1fc5e2f2b0e711a212635c9ed46cf80485",
      "filename": "gdb/testsuite/gdb.fortran/logical.f90",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/gdb.fortran/logical.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92/gdb/testsuite/gdb.fortran/logical.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/logical.f90?ref=44f41bb7a1568dbe2e4e642e6c3c2e9ba3d47d92",
      "patch": "@@ -21,10 +21,12 @@ program test\n   logical (kind=2) :: l2\n   logical (kind=4) :: l4\n   logical (kind=8) :: l8\n+  character :: c\n   l = .TRUE.\n   l1 = .TRUE.\n   l2 = .TRUE.\n   l4 = .TRUE.\n   l8 = .TRUE.\n   l = .FALSE.\t\t\t\t\t! stop-here\n+  c = 'a'\n end"
    }
  ]
}