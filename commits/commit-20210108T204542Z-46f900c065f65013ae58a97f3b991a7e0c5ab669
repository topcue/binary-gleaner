{
  "sha": "46f900c065f65013ae58a97f3b991a7e0c5ab669",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDZmOTAwYzA2NWY2NTAxM2FlNThhOTdmM2I5OTFhN2UwYzVhYjY2OQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-08T07:24:51Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-08T20:45:42Z"
    },
    "message": "sim: require a C11 compiler\n\nWith GDB requiring a C++11 compiler now, this hopefully shouldn't\nbe a big deal.  It's been 10 years since C11 came out, so should\nbe plenty of time to upgrade.\n\nThis will allow us to start cleaning up random header logic and\nmany of our non-standard custom types.",
    "tree": {
      "sha": "bfa940b2425bdeb5444cec377eb84ebd15109ba4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bfa940b2425bdeb5444cec377eb84ebd15109ba4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46f900c065f65013ae58a97f3b991a7e0c5ab669",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46f900c065f65013ae58a97f3b991a7e0c5ab669",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46f900c065f65013ae58a97f3b991a7e0c5ab669",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46f900c065f65013ae58a97f3b991a7e0c5ab669/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8fc48b79618af335d6cea1d1d149668340298b81",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8fc48b79618af335d6cea1d1d149668340298b81",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8fc48b79618af335d6cea1d1d149668340298b81"
    }
  ],
  "stats": {
    "total": 2169,
    "additions": 1750,
    "deletions": 419
  },
  "files": [
    {
      "sha": "515e941bbdd44ce8f44ba98ece53ce730d8573b1",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* README-HACKING (C Language Assumptions): Require C11 compiler.\n+\n 2020-09-03  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* configure.ac: Do not configure sim/testsuite nor sim/igen if the"
    },
    {
      "sha": "78e60fa5af995a9948d6b9e069dbe8904dfbb112",
      "filename": "sim/README-HACKING",
      "status": "modified",
      "additions": 1,
      "deletions": 27,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/README-HACKING",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/README-HACKING",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/README-HACKING?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -161,33 +161,7 @@ To add the entries to an alternative ChangeLog file, use:\n C Language Assumptions\n ======================\n \n-The programmer may assume that the simulator is being built using an\n-ANSI C compiler that supports a 64 bit data type.  Consequently:\n-\n-\to\tprototypes can be used\n-\n-\to\tIf sim-types.h is included, the two\n-\t\ttypes signed64 and unsigned64 are\n-\t\tavailable.\n-\n-\to\tThe type `unsigned' is valid.\n-\n-However, the user should be aware of the following:\n-\n-\to\tGCC's `<number>LL' is NOT acceptable.\n-\t\tMicrosoft-C doesn't reconize it.\n-\n-\to\tMSC's `<number>i64' is NOT acceptable.\n-\t\tGCC doesn't reconize it.\n-\n-\to\tGCC's `long long' MSC's `_int64' can\n-\t\tNOT be used to define 64 bit integer data\n-\t\ttypes.\n-\n-\to\tAn empty array (eg int a[0]) is not valid.\n-\n-When building with GCC it is effectivly a requirement that\n---enable-build-warnings=,-Werror be specified during configuration.\n+An ISO C11 compiler is required, as is an ISO C standard library.\n \f\n \"dump\" commands under gdb\n ========================="
    },
    {
      "sha": "97e33401afc9bf8433284c6137aee0dd940c011a",
      "filename": "sim/aarch64/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/aarch64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/aarch64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "a5ed5c95da924f724102cbf4a392bf8668bb29c1",
      "filename": "sim/aarch64/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/aarch64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/aarch64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "560632a0a87a8e4d104738d077f16b54996f3bb9",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* wrapper.c: Include stdlib.h."
    },
    {
      "sha": "692cd9004d740f376380e2971993157b1645e2a3",
      "filename": "sim/arm/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/arm/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/arm/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "810bd5864ade16b1a55a8103012892a2b3be7c05",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "7cc3478c42de28b4117c9e79c7743df9b2009948",
      "filename": "sim/avr/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/avr/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/avr/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "12127ecbf7c185b06eda1848f9b464195e9313e0",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* machs.c: Include stdlib.h."
    },
    {
      "sha": "0492d3893c1c1b2f2c279f7b1d8947d108f1d06e",
      "filename": "sim/bfin/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bfin/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bfin/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -683,6 +683,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8691,6 +8692,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12107,16 +12157,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12233,7 +12273,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12922,7 +12962,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12925 \"configure\"\n+#line 12965 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13028,7 +13068,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13031 \"configure\"\n+#line 13071 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "75e115f76e7c8302fd54e664ea69fe565daa911c",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2020-11-01  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* configure: Re-generate."
    },
    {
      "sha": "b54002d0da35e0d423c2b8b5c5106c4186d0f05a",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8653,6 +8654,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12069,16 +12119,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12195,7 +12235,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12884,7 +12924,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12887 \"configure\"\n+#line 12927 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12990,7 +13030,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12993 \"configure\"\n+#line 13033 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "df78108370d6f4da4c3ca8fb75eba1062d344715",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Make-common.in (C_DIALECT): Define.\n+\t(COMPILE.pre): Append $(C_DIALECT).\n+\t* acinclude.m4 (SIM_AC_COMMON): Probe C11 to define C_DIALECT.\n+\n 2021-01-07  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-core.c (sim_memory_map): Define."
    },
    {
      "sha": "6e7193044305c133ca0f0ee7541a85738123e928",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -70,6 +70,7 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_DATA = @INSTALL_DATA@\n \n CC = @CC@\n+C_DIALECT = @C_DIALECT@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS = @CFLAGS@\n CPPFLAGS = @CPPFLAGS@\n@@ -107,7 +108,7 @@ depcomp = $(SHELL) $(srcroot)/depcomp\n \n # Note that these are overridden by GNU make-specific code below if\n # GNU make is used.  The overrides implement dependency tracking.\n-COMPILE.pre = $(CC)\n+COMPILE.pre = $(CC) $(C_DIALECT)\n COMPILE.post = -c -o $@\n COMPILE = $(COMPILE.pre) $(ALL_CFLAGS) $(COMPILE.post)\n POSTCOMPILE = @true"
    },
    {
      "sha": "49d56b97f9bd5f7a95717531a2dbf67f879b7366",
      "filename": "sim/common/acinclude.m4",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/acinclude.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/common/acinclude.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/acinclude.m4?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -56,6 +56,32 @@ AR=${AR-ar}\n AC_SUBST(AR)\n AC_PROG_RANLIB\n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+m4_version_prereq([2.70], [AC_MSG_ERROR([clean this up!])], [:])\n+C_DIALECT=\n+AC_MSG_CHECKING([whether C11 is supported by default])\n+AC_COMPILE_IFELSE([AC_LANG_SOURCE([\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+])], [AC_MSG_RESULT([yes])], [\n+  AC_MSG_RESULT([no])\n+  AC_MSG_CHECKING([for -std=c11 support])\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+])], [\n+  AC_MSG_RESULT([yes])\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+], [AC_MSG_ERROR([C11 is required])])])\n+AC_SUBST(C_DIALECT)\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined."
    },
    {
      "sha": "1de8e15b55ea170d699b8478f27952bdd8c554a0",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "ff93efd92db375e19e39c7b71b5daea12c0a0d79",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "1c4bda1f0c2af105c4d01189ef521dd0cd223098",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "96f545df4b0c4dafff8d0bc498e89d804b15accc",
      "filename": "sim/cris/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cris/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/cris/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8662,6 +8663,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12078,16 +12128,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12204,7 +12244,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12893,7 +12933,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12896 \"configure\"\n+#line 12936 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12999,7 +13039,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13002 \"configure\"\n+#line 13042 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "a53becd6558010d4118ec29f4492ef242166b892",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "692cd9004d740f376380e2971993157b1645e2a3",
      "filename": "sim/d10v/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/d10v/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/d10v/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "cab1717c5be36c9c2d82179a036e7ba73ebf1c5d",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "3e5eb6cd1954c313ed1691a4f1e6a419285bc081",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -680,6 +680,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8635,6 +8636,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12051,16 +12101,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12177,7 +12217,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12866,7 +12906,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12869 \"configure\"\n+#line 12909 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12972,7 +13012,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12975 \"configure\"\n+#line 13015 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "4a9264be6e3877e109506e06a929a015e36832a6",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2ae6c7d4053eafe53812d46fc281464992a3d524",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -682,6 +682,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8657,6 +8658,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12073,16 +12123,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12199,7 +12239,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12888,7 +12928,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12891 \"configure\"\n+#line 12931 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12994,7 +13034,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12997 \"configure\"\n+#line 13037 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "48235fb69165a1ac1b71ba8e766a6280fe2b3917",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "94c3a43b3027f5c9024aa29924ed55f1bec946a9",
      "filename": "sim/ft32/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ft32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/ft32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "d01ab03284d6de206e5c58646e73f360f41426f8",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-07  Mike Frysinger  <vapier@gentoo.org>\n \n \t* compile.c (set_simcache_size, h8_get_cache_top, h8_set_cache_top,"
    },
    {
      "sha": "a4ce368d68364e2f8b3b9a632b56d1a4970ab076",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8640,6 +8641,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12056,16 +12106,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12182,7 +12222,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12871,7 +12911,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12874 \"configure\"\n+#line 12914 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12977,7 +13017,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12980 \"configure\"\n+#line 13020 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "ba5bac6736cbf975ed6d261df087f70871ecd09d",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "bb78dda1c99ea976e2b8571c7260954f8714a9f5",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8654,6 +8655,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12070,16 +12120,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12196,7 +12236,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12885,7 +12925,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12888 \"configure\"\n+#line 12928 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12991,7 +13031,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12994 \"configure\"\n+#line 13034 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "32052351ef83a4b199f1f979776b25ba06f788ab",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2f24adf0b2323d183a6267c87ba917178db65fd2",
      "filename": "sim/lm32/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/lm32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/lm32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8654,6 +8655,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12070,16 +12120,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12196,7 +12236,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12885,7 +12925,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12888 \"configure\"\n+#line 12928 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12991,7 +13031,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12994 \"configure\"\n+#line 13034 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "1179044b5f44abe8d241faa5f471642cca06930e",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "29df076e598bedc3fd04aeed516b3e218a03a1ab",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8641,6 +8642,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12057,16 +12107,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12183,7 +12223,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12872,7 +12912,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12875 \"configure\"\n+#line 12915 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12978,7 +13018,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12981 \"configure\"\n+#line 13021 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "4529ec1c25c58bc47d1aac16f8b0fc9d3cdb4142",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "14c71bbfb62b8af73d879576b3cf2b1b5749b7a0",
      "filename": "sim/m32r/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32r/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m32r/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -683,6 +683,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8656,6 +8657,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12072,16 +12122,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12198,7 +12238,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12887,7 +12927,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12890 \"configure\"\n+#line 12930 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12993,7 +13033,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12996 \"configure\"\n+#line 13036 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "5f57a70710aac9d6b683ee2bcbc8662c09d6d040",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2d8ff6b8e4b8daf0f745af8de57d91fc9c8af6ec",
      "filename": "sim/m68hc11/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m68hc11/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/m68hc11/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8651,6 +8652,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12067,16 +12117,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12193,7 +12233,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12882,7 +12922,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12885 \"configure\"\n+#line 12925 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12988,7 +13028,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12991 \"configure\"\n+#line 13031 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "b0b065455f769613af3dc65cc12ed17b1357f707",
      "filename": "sim/mcore/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mcore/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mcore/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "692cd9004d740f376380e2971993157b1645e2a3",
      "filename": "sim/mcore/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mcore/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mcore/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "793e46c313b99666e73acb6dd70417819762d4f5",
      "filename": "sim/microblaze/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/microblaze/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/microblaze/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "692cd9004d740f376380e2971993157b1645e2a3",
      "filename": "sim/microblaze/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/microblaze/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/microblaze/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "17d5ab7d91a8055749c6e1ba8fde2f2a07f5602d",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "7180ced00e165bd2a3d8ef28e0e6d6810a3313c4",
      "filename": "sim/mips/configure",
      "status": "modified",
      "additions": 54,
      "deletions": 14,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mips/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mips/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -691,6 +691,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8681,6 +8682,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12097,16 +12147,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12223,7 +12263,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12912,7 +12952,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12915 \"configure\"\n+#line 12955 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13018,7 +13058,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13021 \"configure\"\n+#line 13061 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14074,7 +14114,7 @@ if test ${sim_gen} = MULTI; then\n \n   cat << __EOF__ > multi-run.c\n /* Main entry point for MULTI simulators.\n-   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2021 Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by"
    },
    {
      "sha": "8f3c1111795451ca8ffff00bd8798e3b3ff88181",
      "filename": "sim/mn10300/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mn10300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mn10300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "b8d356604bab0cac89ef929c7d9261f6a90fe589",
      "filename": "sim/mn10300/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mn10300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/mn10300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8657,6 +8658,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12073,16 +12123,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12199,7 +12239,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12888,7 +12928,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12891 \"configure\"\n+#line 12931 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12994,7 +13034,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12997 \"configure\"\n+#line 13037 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "8e1b1abe0084d1377e29cdadf12c385d84b095ca",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "598d6547c6fc465ad387155015cbf8c5f52257a9",
      "filename": "sim/moxie/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/moxie/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/moxie/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -679,6 +679,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8649,6 +8650,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12065,16 +12115,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12191,7 +12231,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12880,7 +12920,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12883 \"configure\"\n+#line 12923 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12986,7 +13026,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12989 \"configure\"\n+#line 13029 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "bc5a1e8ae5b17f8441737f59d14f529ba501b84b",
      "filename": "sim/msp430/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/msp430/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/msp430/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "e6f51281d4e927bbe8d12a1a515090021d75bca9",
      "filename": "sim/msp430/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/msp430/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/msp430/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "7c62b642792cd6e7d5e84d0081e2355f829780e3",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2019-06-13  Stafford Horne  <shorne@gmail.com>\n \n \t* cpu.c: Regenerate."
    },
    {
      "sha": "7f0e1c767a78c4b4323402902d7162ed54e288f5",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8653,6 +8654,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12069,16 +12119,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12195,7 +12235,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12884,7 +12924,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12887 \"configure\"\n+#line 12927 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12990,7 +13030,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12993 \"configure\"\n+#line 13033 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "4bcb118f8ef19127a2e867f4da1c8357f9dab73e",
      "filename": "sim/pru/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/pru/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/pru/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "7cc3478c42de28b4117c9e79c7743df9b2009948",
      "filename": "sim/pru/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/pru/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/pru/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "38ec393d27ff307676d11e5da616109255cbf847",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "b351822716136ba8d56bed3cec0c87695301cd58",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8633,6 +8634,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12049,16 +12099,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12175,7 +12215,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12864,7 +12904,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12867 \"configure\"\n+#line 12907 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12970,7 +13010,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12973 \"configure\"\n+#line 13013 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "9aa0a9661bbfd10146f646516a20ccea9053e6ac",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2df943412106106894febfdcaa74b2515f775d57",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8638,6 +8639,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12054,16 +12104,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12180,7 +12220,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12869,7 +12909,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12872 \"configure\"\n+#line 12912 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12975,7 +13015,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12978 \"configure\"\n+#line 13018 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "124a216fd066ba03f9a8feacb235b4336744a8a2",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "692cd9004d740f376380e2971993157b1645e2a3",
      "filename": "sim/sh/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8648,6 +8649,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12064,16 +12114,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12190,7 +12230,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12879,7 +12919,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12882 \"configure\"\n+#line 12922 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12985,7 +13025,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12988 \"configure\"\n+#line 13028 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "d519292559c049c2f580113aac80de3e9d1c5e9c",
      "filename": "sim/sh64/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "9ce6dbd4ffa13579e994d9819eb367ef700c6ce2",
      "filename": "sim/sh64/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/sh64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh64/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -681,6 +681,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8654,6 +8655,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12070,16 +12120,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12196,7 +12236,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12885,7 +12925,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12888 \"configure\"\n+#line 12928 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12991,7 +13031,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12994 \"configure\"\n+#line 13034 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    },
    {
      "sha": "fe9bed958fbd05f938d169a179023d0647d743f4",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-01-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "1067b56e0e8b15fe0191d4e374ba07a30ac7e4bc",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 53,
      "deletions": 13,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46f900c065f65013ae58a97f3b991a7e0c5ab669/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=46f900c065f65013ae58a97f3b991a7e0c5ab669",
      "patch": "@@ -678,6 +678,7 @@ CCDEPMODE\n DEPDIR\n am__leading_dot\n PACKAGE\n+C_DIALECT\n RANLIB\n AR\n HDEFINES\n@@ -8654,6 +8655,55 @@ else\n fi\n \n \n+# Require C11 or newer.  Autoconf-2.70 provides ac_cv_prog_cc_c11 when using\n+# AC_PROG_CC, but we're still using Autoconf-2.69, and the newest it understands\n+# is C99.  So handle it ourselves.\n+:\n+C_DIALECT=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether C11 is supported by default\" >&5\n+$as_echo_n \"checking whether C11 is supported by default... \" >&6; }\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+else\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for -std=c11 support\" >&5\n+$as_echo_n \"checking for -std=c11 support... \" >&6; }\n+  ac_save_CC=\"$CC\"\n+  CC=\"$CC -std=c11\"\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n+# error \"C11 support not found\"\n+#endif\n+\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+  CC=\"$ac_save_CC\"\n+  C_DIALECT=\"-std=c11\"\n+\n+else\n+  as_fn_error $? \"C11 is required\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+\n # Some of the common include files depend on bfd.h, and bfd.h checks\n # that config.h is included first by testing that the PACKAGE macro\n # is defined.\n@@ -12070,16 +12120,6 @@ freebsd* | dragonfly*)\n   esac\n   ;;\n \n-gnu*)\n-  version_type=linux\n-  need_lib_prefix=no\n-  need_version=no\n-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'\n-  soname_spec='${libname}${release}${shared_ext}$major'\n-  shlibpath_var=LD_LIBRARY_PATH\n-  hardcode_into_libs=yes\n-  ;;\n-\n haiku*)\n   version_type=linux\n   need_lib_prefix=no\n@@ -12196,7 +12236,7 @@ linux*oldld* | linux*aout* | linux*coff*)\n   ;;\n \n # This must be Linux ELF.\n-linux* | k*bsd*-gnu | kopensolaris*-gnu)\n+linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)\n   version_type=linux\n   need_lib_prefix=no\n   need_version=no\n@@ -12885,7 +12925,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12888 \"configure\"\n+#line 12928 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12991,7 +13031,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12994 \"configure\"\n+#line 13034 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"
    }
  ]
}