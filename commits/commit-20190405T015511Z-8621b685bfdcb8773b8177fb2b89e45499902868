{
  "sha": "8621b685bfdcb8773b8177fb2b89e45499902868",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODYyMWI2ODViZmRjYjg3NzNiODE3N2ZiMmI4OWU0NTQ5OTkwMjg2OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-25T00:07:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-05T01:55:11Z"
    },
    "message": "Move comma_terminates global to parser_state\n\nThis moves the comma_terminates global to parser_state.\n\ngdb/ChangeLog\n2019-04-04  Tom Tromey  <tom@tromey.com>\n\n\t* rust-exp.y (rustyylex, rust_lex_tests): Update.\n\t* parser-defs.h (struct parser_state) <parser_state>: Add new\n\tparameter.\n\t<comma_terminates>: New member.\n\t(comma_terminates): Don't declare global.\n\t* parse.c (comma_terminates): Remove global.\n\t(parse_exp_in_context): Update.\n\t* p-exp.y (yylex): Update.\n\t* m2-exp.y (yylex): Update.\n\t* go-exp.y (lex_one_token): Update.\n\t* f-exp.y (yylex): Update.\n\t* d-exp.y (lex_one_token): Update.\n\t* c-exp.y (lex_one_token): Update.\n\t* ada-lex.l: Update.",
    "tree": {
      "sha": "843765b0588efca85780159f17fa8e71eb7311ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/843765b0588efca85780159f17fa8e71eb7311ff"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8621b685bfdcb8773b8177fb2b89e45499902868",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8621b685bfdcb8773b8177fb2b89e45499902868",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8621b685bfdcb8773b8177fb2b89e45499902868",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8621b685bfdcb8773b8177fb2b89e45499902868/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "28aaf3fdf9562c018dcf6ab4d0a4c644fff8d696",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/28aaf3fdf9562c018dcf6ab4d0a4c644fff8d696",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/28aaf3fdf9562c018dcf6ab4d0a4c644fff8d696"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 36,
    "deletions": 19
  },
  "files": [
    {
      "sha": "8217a763259c4c8b0d2e5fa49f5c31dcaa410250",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1,3 +1,20 @@\n+2019-04-04  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-exp.y (rustyylex, rust_lex_tests): Update.\n+\t* parser-defs.h (struct parser_state) <parser_state>: Add new\n+\tparameter.\n+\t<comma_terminates>: New member.\n+\t(comma_terminates): Don't declare global.\n+\t* parse.c (comma_terminates): Remove global.\n+\t(parse_exp_in_context): Update.\n+\t* p-exp.y (yylex): Update.\n+\t* m2-exp.y (yylex): Update.\n+\t* go-exp.y (lex_one_token): Update.\n+\t* f-exp.y (yylex): Update.\n+\t* d-exp.y (lex_one_token): Update.\n+\t* c-exp.y (lex_one_token): Update.\n+\t* ada-lex.l: Update.\n+\n 2019-04-04  Tom Tromey  <tom@tromey.com>\n \n \t* rust-exp.y (struct rust_parser) <paren_depth>: New member."
    },
    {
      "sha": "43bd25c1e2ff2de91cc3d04dc5ea0e0da95ac648",
      "filename": "gdb/ada-lex.l",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/ada-lex.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/ada-lex.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lex.l?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -232,7 +232,7 @@ false\t\t{ return FALSEKEYWORD; }\n \n [-&*+./:<>=|;\\[\\]] { return yytext[0]; }\n \n-\",\"\t\t{ if (paren_depth == 0 && comma_terminates)\n+\",\"\t\t{ if (paren_depth == 0 && pstate->comma_terminates)\n \t\t    {\n \t\t      rewind_to_char (',');\n \t\t      return 0;"
    },
    {
      "sha": "16b291f9c700ff9c8453a5d51357be9cad038bee",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -2637,7 +2637,7 @@ lex_one_token (struct parser_state *par_state, bool *is_quoted_name)\n       return c;\n \n     case ',':\n-      if (comma_terminates\n+      if (pstate->comma_terminates\n           && paren_depth == 0\n           && ! scanning_macro_expansion ())\n \treturn 0;"
    },
    {
      "sha": "06e12e3201104a8b23c79d25264c4f512c0a6492",
      "filename": "gdb/d-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/d-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/d-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1098,7 +1098,7 @@ lex_one_token (struct parser_state *par_state)\n       return c;\n \n     case ',':\n-      if (comma_terminates && paren_depth == 0)\n+      if (pstate->comma_terminates && paren_depth == 0)\n \treturn 0;\n       lexptr++;\n       return c;"
    },
    {
      "sha": "522751d2263ae74366740347ff902000e349dfbd",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1115,7 +1115,7 @@ yylex (void)\n       return c;\n       \n     case ',':\n-      if (comma_terminates && paren_depth == 0)\n+      if (pstate->comma_terminates && paren_depth == 0)\n \treturn 0;\n       lexptr++;\n       return c;"
    },
    {
      "sha": "ea1487cb0082439a80a5aa2825207cb8ab84850a",
      "filename": "gdb/go-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/go-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/go-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1077,7 +1077,7 @@ lex_one_token (struct parser_state *par_state)\n       return c;\n \n     case ',':\n-      if (comma_terminates\n+      if (pstate->comma_terminates\n           && paren_depth == 0)\n \treturn 0;\n       lexptr++;"
    },
    {
      "sha": "2174014e79ae3afd16d3e05d74b7e556e4cf4104",
      "filename": "gdb/m2-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/m2-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/m2-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -819,7 +819,7 @@ yylex (void)\n       return c;\n \n     case ',':\n-      if (comma_terminates && paren_depth == 0)\n+      if (pstate->comma_terminates && paren_depth == 0)\n \treturn 0;\n       lexptr++;\n       return c;"
    },
    {
      "sha": "65874c6327d084945fab51440577988cb50c9a61",
      "filename": "gdb/p-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/p-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/p-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1218,7 +1218,7 @@ yylex (void)\n       return c;\n \n     case ',':\n-      if (comma_terminates && paren_depth == 0)\n+      if (pstate->comma_terminates && paren_depth == 0)\n \treturn 0;\n       lexptr++;\n       return c;"
    },
    {
      "sha": "617ff70d67ea77efb73fc92b90153b6f42e137a8",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -71,7 +71,6 @@ int arglist_len;\n static struct type_stack type_stack;\n const char *lexptr;\n const char *prev_lexptr;\n-int comma_terminates;\n \n /* True if parsing an expression to attempt completion.  */\n int parse_completion;\n@@ -1122,8 +1121,6 @@ parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n   expout_completion_name.reset ();\n   innermost_block.reset (tracker_types);\n \n-  comma_terminates = comma;\n-\n   if (lexptr == 0 || *lexptr == 0)\n     error_no_arg (_(\"expression to compute\"));\n \n@@ -1187,7 +1184,7 @@ parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n      to the value matching SELECTED_FRAME as set by get_current_arch.  */\n \n   parser_state ps (lang, get_current_arch (), expression_context_block,\n-\t\t   expression_context_pc);\n+\t\t   expression_context_pc, comma);\n \n   scoped_restore_current_language lang_saver;\n   set_language (lang->la_language);"
    },
    {
      "sha": "f2bb18fd9c74ab8a2bf9a87c2232d633721a72da",
      "filename": "gdb/parser-defs.h",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/parser-defs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/parser-defs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parser-defs.h?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -88,10 +88,12 @@ struct parser_state : public expr_builder\n   parser_state (const struct language_defn *lang,\n \t\tstruct gdbarch *gdbarch,\n \t\tconst struct block *context_block,\n-\t\tCORE_ADDR context_pc)\n+\t\tCORE_ADDR context_pc,\n+\t\tint comma)\n     : expr_builder (lang, gdbarch),\n       expression_context_block (context_block),\n-      expression_context_pc (context_pc)\n+      expression_context_pc (context_pc),\n+      comma_terminates (comma)\n   {\n   }\n \n@@ -108,6 +110,10 @@ struct parser_state : public expr_builder\n      at, and then look up the macro definitions active at that\n      point.  */\n   const CORE_ADDR expression_context_pc;\n+\n+  /* Nonzero means stop parsing on first comma (if not within parentheses).  */\n+\n+  int comma_terminates;\n };\n \n /* When parsing expressions we track the innermost block that was\n@@ -355,10 +361,6 @@ extern const char *lexptr;\n /* After a token has been recognized, this variable points to it.\n    Currently used only for error reporting.  */\n extern const char *prev_lexptr;\n-\n-/* Nonzero means stop parsing on first comma (if not within parentheses).  */\n-\n-extern int comma_terminates;\n \f\n /* These codes indicate operator precedences for expression printing,\n    least tightly binding first.  */"
    },
    {
      "sha": "2f2cc8f31fe29241b8afa5f33bef2eff0a885706",
      "filename": "gdb/rust-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/rust-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8621b685bfdcb8773b8177fb2b89e45499902868/gdb/rust-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.y?ref=8621b685bfdcb8773b8177fb2b89e45499902868",
      "patch": "@@ -1674,7 +1674,8 @@ rustyylex (YYSTYPE *lvalp, rust_parser *parser)\n       /* Falls through to lex_operator.  */\n       ++parser->paren_depth;\n     }\n-  else if (lexptr[0] == ',' && comma_terminates && parser->paren_depth == 0)\n+  else if (lexptr[0] == ',' && parser->pstate->comma_terminates\n+\t   && parser->paren_depth == 0)\n     return 0;\n \n   return lex_operator (lvalp);\n@@ -2713,7 +2714,7 @@ rust_lex_tests (void)\n \n   // Set up dummy \"parser\", so that rust_type works.\n   struct parser_state ps (&rust_language_defn, target_gdbarch (),\n-\t\t\t  nullptr, 0);\n+\t\t\t  nullptr, 0, 0);\n   rust_parser parser (&ps);\n \n   rust_lex_test_one (&parser, \"\", 0);"
    }
  ]
}