{
  "sha": "a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTRhMzhlYjQzNzM4MmZiZjJiMmM2Nzg4ZmUzNWRkMzM0MGY5NjY0YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-14T21:16:23Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-14T21:16:24Z"
    },
    "message": "Cache .gnu_debugdata BFD\n\nWhile looking at the output of \"maint info bfd\" with multiple\ninferiors, I noticed that there were duplicate entries for\n.gnu_debugdata.\n\nThere is no reason to re-create this BFD each time it is needed.  This\npatch arranges to share the data.\n\ngdb/ChangeLog\n2020-02-14  Tom Tromey  <tom@tromey.com>\n\n\t* minidebug.c (gnu_debug_key): New global.\n\t(find_separate_debug_file_in_section): Use it.\n\nChange-Id: If139f89f0f07db33f399afdbcfbf5aaeffe4de46",
    "tree": {
      "sha": "ac18d982d4265f3cef76ab880280a91a1c45cec1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ac18d982d4265f3cef76ab880280a91a1c45cec1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a4a38eb437382fbf2b2c6788fe35dd3340f9664a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f251f50533110132ce83678d644d53b1d1110b05",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f251f50533110132ce83678d644d53b1d1110b05",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f251f50533110132ce83678d644d53b1d1110b05"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 16,
    "deletions": 0
  },
  "files": [
    {
      "sha": "fd9b6a85ea14856211a33029e51c45b392791fe9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4a38eb437382fbf2b2c6788fe35dd3340f9664a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4a38eb437382fbf2b2c6788fe35dd3340f9664a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-14  Tom Tromey  <tom@tromey.com>\n+\n+\t* minidebug.c (gnu_debug_key): New global.\n+\t(find_separate_debug_file_in_section): Use it.\n+\n 2020-02-14  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbarch.sh (displaced_step_copy_insn): Change return type to an"
    },
    {
      "sha": "dbf14c79fb958f4357f06bdef617a2652c74184b",
      "filename": "gdb/minidebug.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a4a38eb437382fbf2b2c6788fe35dd3340f9664a/gdb/minidebug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a4a38eb437382fbf2b2c6788fe35dd3340f9664a/gdb/minidebug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minidebug.c?ref=a4a38eb437382fbf2b2c6788fe35dd3340f9664a",
      "patch": "@@ -26,6 +26,10 @@\n \n #ifdef HAVE_LIBLZMA\n \n+/* We stash a reference to the .gnu_debugdata BFD on the enclosing\n+   BFD.  */\n+static const bfd_key<gdb_bfd_ref_ptr> gnu_debug_key;\n+\n #include <lzma.h>\n \n /* Allocator function for LZMA.  */\n@@ -269,6 +273,10 @@ find_separate_debug_file_in_section (struct objfile *objfile)\n     return NULL;\n \n #ifdef HAVE_LIBLZMA\n+  gdb_bfd_ref_ptr *shared = gnu_debug_key.get (objfile->obfd);\n+  if (shared != nullptr)\n+    return *shared;\n+\n   std::string filename = string_printf (_(\".gnu_debugdata for %s\"),\n \t\t\t\t\tobjfile_name (objfile));\n \n@@ -282,6 +290,9 @@ find_separate_debug_file_in_section (struct objfile *objfile)\n       warning (_(\"Cannot parse .gnu_debugdata section; not a BFD object\"));\n       return NULL;\n     }\n+\n+  gnu_debug_key.emplace (objfile->obfd, abfd);\n+\n #else\n   warning (_(\"Cannot parse .gnu_debugdata section; LZMA support was \"\n \t     \"disabled at compile time\"));"
    }
  ]
}