{
  "sha": "976862ed563047be58effc4b02fe75ed064f77b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTc2ODYyZWQ1NjMwNDdiZTU4ZWZmYzRiMDJmZTc1ZWQwNjRmNzdiNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-03-11T13:59:14Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-03-11T13:59:37Z"
    },
    "message": "Mark discriminants as artificial in gdb.dwarf2/variant.exp\n\nWhile working on a variant part patch, I notcied that\ngdb.dwarf2/variant.exp does not mark the discriminant members as\nDW_AT_artificial.  However, it should, as this is what the real Rust\ncompiler does, and how the Rust language support is supposed to work.\n\ngdb/testsuite/ChangeLog\n2020-03-11  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.dwarf2/variant.exp: Mark discriminants as artificial.",
    "tree": {
      "sha": "2a58c83c9a6716e1dfa2b90d37f619c9827848df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2a58c83c9a6716e1dfa2b90d37f619c9827848df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/976862ed563047be58effc4b02fe75ed064f77b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/976862ed563047be58effc4b02fe75ed064f77b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/976862ed563047be58effc4b02fe75ed064f77b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/976862ed563047be58effc4b02fe75ed064f77b7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7462c383f9849aab40f156854a72f0a93305124a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7462c383f9849aab40f156854a72f0a93305124a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7462c383f9849aab40f156854a72f0a93305124a"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 7,
    "deletions": 0
  },
  "files": [
    {
      "sha": "78505f1169d036f5c456aa0550102ff5f2c2a83a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/976862ed563047be58effc4b02fe75ed064f77b7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/976862ed563047be58effc4b02fe75ed064f77b7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=976862ed563047be58effc4b02fe75ed064f77b7",
      "patch": "@@ -1,3 +1,7 @@\n+2020-03-11  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.dwarf2/variant.exp: Mark discriminants as artificial.\n+\n 2020-03-11  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/foll-fork.exp: Allow \"Reading in symbols\" messages."
    },
    {
      "sha": "0250fafc7f8eac61c2f53e5af34da060031b0ae6",
      "filename": "gdb/testsuite/gdb.dwarf2/variant.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/976862ed563047be58effc4b02fe75ed064f77b7/gdb/testsuite/gdb.dwarf2/variant.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/976862ed563047be58effc4b02fe75ed064f77b7/gdb/testsuite/gdb.dwarf2/variant.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/variant.exp?ref=976862ed563047be58effc4b02fe75ed064f77b7",
      "patch": "@@ -91,6 +91,7 @@ Dwarf::assemble $asm_file {\n \t\t    discr_1_label: member {\n \t\t\t{type :$uinteger_label}\n \t\t\t{data_member_location 0 data1}\n+\t\t\t{artificial 1 DW_FORM_flag_present}\n \t\t    }\n \n \t\t    variant {\n@@ -123,6 +124,7 @@ Dwarf::assemble $asm_file {\n \t\t    discr_2_label: member {\n \t\t\t{type :$uinteger_label}\n \t\t\t{data_member_location 0 data1}\n+\t\t\t{artificial 1 DW_FORM_flag_present}\n \t\t    }\n \n \t\t    variant {\n@@ -172,6 +174,7 @@ Dwarf::assemble $asm_file {\n \t\t    discr_3_label: member {\n \t\t\t{type :$int8_label}\n \t\t\t{data_member_location 0 data1}\n+\t\t\t{artificial 1 DW_FORM_flag_present}\n \t\t    }\n \n \t\t    variant {"
    }
  ]
}