{
  "sha": "a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTI3MTRkNmNjYTFmMWM3Njk1ZjhkYzg0YjQ5YTRhNTFkMWRiODZjOA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-01T06:02:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-05-01T06:02:36Z"
    },
    "message": "PR25900, RISC-V: null pointer dereference\n\n\tPR 25900\n\t* elfnn-riscv.c (_bfd_riscv_relax_section): Check root.type before\n\taccessing root.u.def of symbols.  Also check root.u.def.section\n\tis non-NULL.  Reverse tests so as to make the logic positive.",
    "tree": {
      "sha": "5f20f779745c44575c90b238e06395a601963a96",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5f20f779745c44575c90b238e06395a601963a96"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "60832332244aae2835851aba83f4b705cf29f8a3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60832332244aae2835851aba83f4b705cf29f8a3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/60832332244aae2835851aba83f4b705cf29f8a3"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 13,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a2b0771db27d8db4bae12d73eeca8f6404e3bc91",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
      "patch": "@@ -1,3 +1,10 @@\n+2020-05-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25900\n+\t* elfnn-riscv.c (_bfd_riscv_relax_section): Check root.type before\n+\taccessing root.u.def of symbols.  Also check root.u.def.section\n+\tis non-NULL.  Reverse tests so as to make the logic positive.\n+\n 2020-05-01  Alan Modra  <amodra@gmail.com>\n \n \tPR 25882"
    },
    {
      "sha": "473bf50f2de75272215e1f189c5aa0286f78ea3c",
      "filename": "bfd/elfnn-riscv.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8/bfd/elfnn-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8/bfd/elfnn-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-riscv.c?ref=a2714d6cca1f1c7695f8dc84b49a4a51d1db86c8",
      "patch": "@@ -4161,15 +4161,16 @@ _bfd_riscv_relax_section (bfd *abfd, asection *sec,\n \t      symval = 0;\n \t      sym_sec = bfd_und_section_ptr;\n \t    }\n-\t  else if (h->root.u.def.section->output_section == NULL\n-\t\t   || (h->root.type != bfd_link_hash_defined\n-\t\t       && h->root.type != bfd_link_hash_defweak))\n-\t    continue;\n-\t  else\n+\t  else if ((h->root.type == bfd_link_hash_defined\n+\t\t    || h->root.type == bfd_link_hash_defweak)\n+\t\t   && h->root.u.def.section != NULL\n+\t\t   && h->root.u.def.section->output_section != NULL)\n \t    {\n \t      symval = h->root.u.def.value;\n \t      sym_sec = h->root.u.def.section;\n \t    }\n+\t  else\n+\t    continue;\n \n \t  if (h->type != STT_FUNC)\n \t    reserve_size ="
    }
  ]
}