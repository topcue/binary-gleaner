{
  "sha": "2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmY4OTEwMWZlOGI2YTI0MjMxMTZhMWFkMTg5MWY1NmJmNmZjOTUxMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-16T13:39:07Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-16T13:39:07Z"
    },
    "message": "[gdb/testsuite] Add cache_verify option for gdb_caching_procs\n\nTest-case gdb.base/gdb-caching-proc.exp tests whether procs declared using\ngdb_caching_proc give the same results when called more than once.\n\nWhile this tests consistency of the procs in the context of that test-case, it\ndoesn't test consistency across the call sites.\n\nAdd a local variable cache_verify to proc gdb_do_cache, that can be set to 1\nto verify gdb_caching_proc consistency across the call sites.\n\nLikewise, add a local variable cache_verify_proc to set to the name of the\ngdb_caching_proc to verify.  This can f.i. be used when changing an existing\nproc into a gdb_caching_proc.\n\nTested on x86_64-linux, with cache_verify set to both 0 and 1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-16  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/cache.exp (gdb_do_cache): Add and handle local variables\n\tcache_verify and cache_verify_proc.",
    "tree": {
      "sha": "be88c804e6601101690bfc3f117bb1fbbd14c202",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/be88c804e6601101690bfc3f117bb1fbbd14c202"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2f89101fe8b6a2423116a1ad1891f56bf6fc9510/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b3ecb3b91b1b6154a6444efdcbadb90854a6654",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b3ecb3b91b1b6154a6444efdcbadb90854a6654"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 37,
    "deletions": 5
  },
  "files": [
    {
      "sha": "c0b5a3aba859be328233d38e1e33ebdaecff7c88",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f89101fe8b6a2423116a1ad1891f56bf6fc9510/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f89101fe8b6a2423116a1ad1891f56bf6fc9510/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-16  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/cache.exp (gdb_do_cache): Add and handle local variables\n+\tcache_verify and cache_verify_proc.\n+\n 2020-03-15  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.server/solib-list.exp: Handle"
    },
    {
      "sha": "71a385e83614b8757840714fc86f1d00df4fa9ab",
      "filename": "gdb/testsuite/lib/cache.exp",
      "status": "modified",
      "additions": 32,
      "deletions": 5,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2f89101fe8b6a2423116a1ad1891f56bf6fc9510/gdb/testsuite/lib/cache.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2f89101fe8b6a2423116a1ad1891f56bf6fc9510/gdb/testsuite/lib/cache.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/cache.exp?ref=2f89101fe8b6a2423116a1ad1891f56bf6fc9510",
      "patch": "@@ -52,30 +52,57 @@ proc gdb_do_cache {name} {\n     global gdb_data_cache objdir\n     global GDB_PARALLEL\n \n+    # Normally, if we have a cached value, we skip computation and return\n+    # the cached value.  If set to 1, instead don't skip computation and\n+    # verify against the cached value.\n+    set cache_verify 0\n+\n+    # Alternatively, set this to do cache_verify only for one proc.\n+    set cache_verify_proc \"\"\n+    if { $name == $cache_verify_proc } {\n+\tset cache_verify 1\n+    }\n+\n     # See if some other process wrote the cache file.  Cache value per\n     # \"board\" to handle runs with multiple options\n     # (e.g. unix/{-m32,-64}) correctly.  We use \"file join\" here\n     # because we later use this in a real filename.\n     set cache_name [file join [target_info name] $name]\n \n+    set is_cached 0\n     if {[info exists gdb_data_cache($cache_name)]} {\n-\tverbose \"$name: returning '$gdb_data_cache($cache_name)' from cache\" 2\n-\treturn $gdb_data_cache($cache_name)\n+\tset cached $gdb_data_cache($cache_name)\n+\tverbose \"$name: returning '$cached' from cache\" 2\n+\tif { $cache_verify == 0 } {\n+\t    return $cached\n+\t}\n+\tset is_cached 1\n     }\n \n-    if {[info exists GDB_PARALLEL]} {\n+    if { $is_cached == 0 && [info exists GDB_PARALLEL] } {\n \tset cache_filename [make_gdb_parallel_path cache $cache_name]\n \tif {[file exists $cache_filename]} {\n \t    set fd [open $cache_filename]\n \t    set gdb_data_cache($cache_name) [read -nonewline $fd]\n \t    close $fd\n-\t    verbose \"$name: returning '$gdb_data_cache($cache_name)' from file cache\" 2\n-\t    return $gdb_data_cache($cache_name)\n+\t    set cached $gdb_data_cache($cache_name)\n+\t    verbose \"$name: returning '$cached' from file cache\" 2\n+\t    if { $cache_verify == 0 } {\n+\t\treturn $cached\n+\t    }\n+\t    set is_cached 1\n \t}\n     }\n \n     set real_name gdb_real__$name\n     set gdb_data_cache($cache_name) [gdb_do_cache_wrap $real_name]\n+    if { $cache_verify == 1 && $is_cached == 1 } {\n+\tset computed $gdb_data_cache($cache_name)\n+\tif { $cached != $computed } {\n+\t    error [join [list \"Inconsistent results for $cache_name:\"\n+\t\t\t \"cached: $cached vs. computed: $computed\"]]\n+\t}\n+    }\n \n     if {[info exists GDB_PARALLEL]} {\n \tverbose \"$name: returning '$gdb_data_cache($cache_name)' and writing file\" 2"
    }
  ]
}