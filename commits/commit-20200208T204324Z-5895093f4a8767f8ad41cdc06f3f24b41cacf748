{
  "sha": "5895093f4a8767f8ad41cdc06f3f24b41cacf748",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTg5NTA5M2Y0YTg3NjdmOGFkNDFjZGMwNmYzZjI0YjQxY2FjZjc0OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Change dwarf2_per_objfile::quick_file_names_table to htab_up\n\nThis changes dwarf2_per_objfile::quick_file_names_table to be an\nhtab_up.  This just removes a bit of manual management.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (~dwarf2_per_objfile): Update.\n\t(create_quick_file_names_table): Return htab_up.\n\t(dw2_get_file_names_reader, dw2_forget_cached_source_info):\n\tUpdate.\n\t* dwarf2/read.h (struct dwarf2_per_objfile)\n\t<quick_file_names_table>: Now htab_up.\n\nChange-Id: I4ff2fce8b8af27f4bfe01a11b97a889edfd23151",
    "tree": {
      "sha": "4e81e7524272acc1a69d5a7d9f1576d8042874e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e81e7524272acc1a69d5a7d9f1576d8042874e8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5895093f4a8767f8ad41cdc06f3f24b41cacf748",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5895093f4a8767f8ad41cdc06f3f24b41cacf748",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5895093f4a8767f8ad41cdc06f3f24b41cacf748",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5895093f4a8767f8ad41cdc06f3f24b41cacf748/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b3b3227982613ac926b58b84e16867624ae0ed04",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b3b3227982613ac926b58b84e16867624ae0ed04",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b3b3227982613ac926b58b84e16867624ae0ed04"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 16,
    "deletions": 10
  },
  "files": [
    {
      "sha": "5f51d56960d871ce0e081d5cf3a098c6783b0eea",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5895093f4a8767f8ad41cdc06f3f24b41cacf748",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (~dwarf2_per_objfile): Update.\n+\t(create_quick_file_names_table): Return htab_up.\n+\t(dw2_get_file_names_reader, dw2_forget_cached_source_info):\n+\tUpdate.\n+\t* dwarf2/read.h (struct dwarf2_per_objfile)\n+\t<quick_file_names_table>: Now htab_up.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/abbrev.c (abbrev_table::read): Simplify."
    },
    {
      "sha": "6e893ba9fec31c8663873e0019706570340ed112",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=5895093f4a8767f8ad41cdc06f3f24b41cacf748",
      "patch": "@@ -2011,9 +2011,6 @@ dwarf2_per_objfile::~dwarf2_per_objfile ()\n   /* Cached DIE trees use xmalloc and the comp_unit_obstack.  */\n   free_cached_comp_units ();\n \n-  if (quick_file_names_table)\n-    htab_delete (quick_file_names_table);\n-\n   for (dwarf2_per_cu_data *per_cu : all_comp_units)\n     per_cu->imported_symtabs_free ();\n \n@@ -2524,12 +2521,12 @@ delete_file_name_entry (void *e)\n \n /* Create a quick_file_names hash table.  */\n \n-static htab_t\n+static htab_up\n create_quick_file_names_table (unsigned int nr_initial_entries)\n {\n-  return htab_create_alloc (nr_initial_entries,\n-\t\t\t    hash_file_name_entry, eq_file_name_entry,\n-\t\t\t    delete_file_name_entry, xcalloc, xfree);\n+  return htab_up (htab_create_alloc (nr_initial_entries,\n+\t\t\t\t     hash_file_name_entry, eq_file_name_entry,\n+\t\t\t\t     delete_file_name_entry, xcalloc, xfree));\n }\n \n /* Read in PER_CU->CU.  This function is unrelated to symtabs, symtab would\n@@ -3365,7 +3362,7 @@ dw2_get_file_names_reader (const struct die_reader_specs *reader,\n \t If we have we're done.  */\n       find_entry.hash.dwo_unit = cu->dwo_unit;\n       find_entry.hash.line_sect_off = line_offset;\n-      slot = htab_find_slot (dwarf2_per_objfile->quick_file_names_table,\n+      slot = htab_find_slot (dwarf2_per_objfile->quick_file_names_table.get (),\n \t\t\t     &find_entry, INSERT);\n       if (*slot != NULL)\n \t{\n@@ -3489,7 +3486,7 @@ dw2_forget_cached_source_info (struct objfile *objfile)\n   struct dwarf2_per_objfile *dwarf2_per_objfile\n     = get_dwarf2_per_objfile (objfile);\n \n-  htab_traverse_noresize (dwarf2_per_objfile->quick_file_names_table,\n+  htab_traverse_noresize (dwarf2_per_objfile->quick_file_names_table.get (),\n \t\t\t  dw2_free_cached_file_names, NULL);\n }\n "
    },
    {
      "sha": "138a929011a2a30b83c7d76f8936faac1e493a6d",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5895093f4a8767f8ad41cdc06f3f24b41cacf748/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=5895093f4a8767f8ad41cdc06f3f24b41cacf748",
      "patch": "@@ -205,7 +205,7 @@ struct dwarf2_per_objfile\n      sorted all the TUs into \"type unit groups\", grouped by their\n      DW_AT_stmt_list value.  Therefore the only sharing done here is with a\n      CU and its associated TU group if there is one.  */\n-  htab_t quick_file_names_table {};\n+  htab_up quick_file_names_table;\n \n   /* Set during partial symbol reading, to prevent queueing of full\n      symbols.  */"
    }
  ]
}