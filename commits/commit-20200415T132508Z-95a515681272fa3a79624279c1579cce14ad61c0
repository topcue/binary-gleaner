{
  "sha": "95a515681272fa3a79624279c1579cce14ad61c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTVhNTE1NjgxMjcyZmEzYTc5NjI0Mjc5YzE1NzljY2UxNGFkNjFjMA==",
  "commit": {
    "author": {
      "name": "Fangrui Song",
      "email": "maskray@google.com",
      "date": "2020-04-15T13:25:08Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-15T13:25:08Z"
    },
    "message": "Unify the behaviour of ld.bfd and ld.gold with respect to warning about unresolved symbol references.  (PR 24613)\n\n\tPR binutils/24613\ninclude\t* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and\n\tRM_GENERATE_ERROR. Add RM_DIAGNOSE.\n\t(struct bfd_link_info): Add warn_unresolved_syms.\n\nld\t* lexsup.c (parse_args): Change RM_GENERATE_WARNING and\n\tRM_GENERATE_ERROR to RM_DIAGNOSE.\n\t* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Change\n\tRM_GENERATE_ERROR to RM_DIAGNOSE.\n\t* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Likewise.\n\nbfd\t* coff-rs6000.c (xcoff_ppc_relocate_section): Change RM_GENERATE_ERROR\n\tto RM_DIAGNOSE plus a check of warn_unresolved_syms.\n\t* coff64-rs6000.c (xcoff_ppc_relocate_section): Likewise.\n\t* elf-bfd.h (_bfd_elf_large_com_section): Likewise.\n\t* elf32-m32r.c (m32r_elf_relocate_section): Likewise.\n\t* elf32-score.c (s3_bfd_score_elf_relocate_section): Likewise.\n\t* elf32-score7.c (s7_bfd_score_elf_relocate_section): Likewise.\n\t* elf32-sh.c (sh_elf_relocate_section): Likewise.\n\t* elf32-spu.c (spu_elf_relocate_section): Likewise.\n\t* elf64-hppa.c (elf64_hppa_relocate_section): Likewise.\n\t* elflink.c (elf_link_output_extsym): Likewise.\n\t* elfxx-mips.c (mips_elf_calculate_relocation): Likewise.",
    "tree": {
      "sha": "21c4c3be88223c9b38116c46614fc87ac9e7f3d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/21c4c3be88223c9b38116c46614fc87ac9e7f3d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/95a515681272fa3a79624279c1579cce14ad61c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95a515681272fa3a79624279c1579cce14ad61c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/95a515681272fa3a79624279c1579cce14ad61c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/95a515681272fa3a79624279c1579cce14ad61c0/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b1bc1394df596eaaecca0c2ae89eb4fb2c204927",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1bc1394df596eaaecca0c2ae89eb4fb2c204927",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1bc1394df596eaaecca0c2ae89eb4fb2c204927"
    }
  ],
  "stats": {
    "total": 201,
    "additions": 115,
    "deletions": 86
  },
  "files": [
    {
      "sha": "2cf36f4c3e0a669e4fbf9112bf74c89f9146f7ec",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -1,3 +1,19 @@\n+2020-04-15  Fangrui Song <maskray@google.com>\n+\n+\tPR binutils/24613\n+\t* coff-rs6000.c (xcoff_ppc_relocate_section): Change RM_GENERATE_ERROR\n+\tto RM_DIAGNOSE plus a check of warn_unresolved_syms.\n+\t* coff64-rs6000.c (xcoff_ppc_relocate_section): Likewise.\n+\t* elf-bfd.h (_bfd_elf_large_com_section): Likewise.\n+\t* elf32-m32r.c (m32r_elf_relocate_section): Likewise.\n+\t* elf32-score.c (s3_bfd_score_elf_relocate_section): Likewise.\n+\t* elf32-score7.c (s7_bfd_score_elf_relocate_section): Likewise.\n+\t* elf32-sh.c (sh_elf_relocate_section): Likewise.\n+\t* elf32-spu.c (spu_elf_relocate_section): Likewise.\n+\t* elf64-hppa.c (elf64_hppa_relocate_section): Likewise.\n+\t* elflink.c (elf_link_output_extsym): Likewise.\n+\t* elfxx-mips.c (mips_elf_calculate_relocation): Likewise.\n+\n 2020-04-15  Alan Modra  <amodra@gmail.com>\n \n \tPR 25823"
    },
    {
      "sha": "51fab9f0536309bcc8b952e6e0b5d9eabd4f5d57",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -3389,7 +3389,8 @@ xcoff_ppc_relocate_section (bfd *output_bfd,\n \t\t  (info, h->root.root.string,\n \t\t   input_bfd, input_section,\n \t\t   rel->r_vaddr - input_section->vma,\n-\t\t   info->unresolved_syms_in_objects == RM_GENERATE_ERROR);\n+\t\t   info->unresolved_syms_in_objects == RM_DIAGNOSE &&\n+\t\t       !info->warn_unresolved_syms);\n \n \t      if (h->root.type == bfd_link_hash_defined\n \t\t  || h->root.type == bfd_link_hash_defweak)"
    },
    {
      "sha": "7185232ce14b6d140354cdf095efb0a8b0b9cd02",
      "filename": "bfd/coff64-rs6000.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/coff64-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/coff64-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff64-rs6000.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -1249,10 +1249,11 @@ xcoff64_ppc_relocate_section (bfd *output_bfd,\n \t    {\n \t      if (info->unresolved_syms_in_objects != RM_IGNORE\n \t\t  && (h->flags & XCOFF_WAS_UNDEFINED) != 0)\n-\t\t(*info->callbacks->undefined_symbol)\n+                info->callbacks->undefined_symbol\n \t\t  (info, h->root.root.string, input_bfd, input_section,\n \t\t   rel->r_vaddr - input_section->vma,\n-\t\t   info->unresolved_syms_in_objects == RM_GENERATE_ERROR);\n+\t\t   info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t   && !info->warn_unresolved_syms);\n \n \t      if (h->root.type == bfd_link_hash_defined\n \t\t  || h->root.type == bfd_link_hash_defweak)"
    },
    {
      "sha": "b08502cd1c4e5b6ac0ff9c9a6b686204e0969fad",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -2930,8 +2930,9 @@ extern asection _bfd_elf_large_com_section;\n       else if (!bfd_link_relocatable (info))\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  bfd_boolean err;\t\t\t\t\t\t\\\n-\t  err = (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\t\\\n-\t\t || ELF_ST_VISIBILITY (h->other) != STV_DEFAULT);\t\\\n+\t  err = (info->unresolved_syms_in_objects == RM_DIAGNOSE &&\t\\\n+\t\t !info->warn_unresolved_syms)\t\t\t\t\\\n+\t\t || ELF_ST_VISIBILITY (h->other) != STV_DEFAULT;\t\\\n \t  (*info->callbacks->undefined_symbol) (info,\t\t\t\\\n \t\t\t\t\t\th->root.root.string,\t\\\n \t\t\t\t\t\tinput_bfd,\t\t\\"
    },
    {
      "sha": "598fbe5633b648f74962a93dfc936d08bb291536",
      "filename": "bfd/elf32-m32r.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-m32r.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-m32r.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-m32r.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -2551,12 +2551,12 @@ m32r_elf_relocate_section (bfd *output_bfd ATTRIBUTE_UNUSED,\n \t\t   && ELF_ST_VISIBILITY (h->other) == STV_DEFAULT)\n \t    ;\n \t  else if (!bfd_link_relocatable (info))\n-\t    (*info->callbacks->undefined_symbol)\n-\t      (info, h->root.root.string, input_bfd,\n-\t       input_section, offset,\n-\t       (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\n-\t\t|| ELF_ST_VISIBILITY (h->other)));\n-\t}\n+            info->callbacks->undefined_symbol\n+\t      (info, h->root.root.string, input_bfd, input_section, offset,\n+\t       (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t&& !info->warn_unresolved_syms)\n+\t       || ELF_ST_VISIBILITY (h->other));\n+        }\n \n       if (sec != NULL && discarded_section (sec))\n \tRELOC_AGAINST_DISCARDED_SECTION (info, input_bfd, input_section,"
    },
    {
      "sha": "c5e6346e93ffd23e3f6c768586b44009b962be78",
      "filename": "bfd/elf32-score.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-score.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-score.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-score.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -2669,13 +2669,14 @@ s3_bfd_score_elf_relocate_section (bfd *output_bfd,\n \t    }\n \t  else if (!bfd_link_relocatable (info))\n \t    {\n-\t      (*info->callbacks->undefined_symbol)\n-\t\t(info, h->root.root.root.string, input_bfd,\n-\t\t input_section, rel->r_offset,\n-\t\t (info->unresolved_syms_in_objects == RM_GENERATE_ERROR)\n+              info->callbacks->undefined_symbol\n+\t\t(info, h->root.root.root.string, input_bfd, input_section,\n+\t\t rel->r_offset,\n+\t\t (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t  && !info->warn_unresolved_syms)\n \t\t || ELF_ST_VISIBILITY (h->root.other));\n-\t      relocation = 0;\n-\t    }\n+              relocation = 0;\n+            }\n \t}\n \n       if (sec != NULL && discarded_section (sec))"
    },
    {
      "sha": "0f647feaeb8f0c8ca60da534ad71cc9ae16fe001",
      "filename": "bfd/elf32-score7.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-score7.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-score7.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-score7.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -2443,12 +2443,13 @@ s7_bfd_score_elf_relocate_section (bfd *output_bfd,\n \t    }\n \t  else if (!bfd_link_relocatable (info))\n \t    {\n-\t      (*info->callbacks->undefined_symbol)\n-\t\t(info, h->root.root.root.string, input_bfd,\n-\t\t input_section, rel->r_offset,\n-\t\t (info->unresolved_syms_in_objects == RM_GENERATE_ERROR)\n+              info->callbacks->undefined_symbol\n+\t\t(info, h->root.root.root.string, input_bfd, input_section,\n+\t\t rel->r_offset,\n+\t\t (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t  && !info->warn_unresolved_syms)\n \t\t || ELF_ST_VISIBILITY (h->root.other));\n-\t      relocation = 0;\n+              relocation = 0;\n \t    }\n \t}\n "
    },
    {
      "sha": "db07f8f889d924873a7cfbb16b22641b1cfc0f9e",
      "filename": "bfd/elf32-sh.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-sh.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-sh.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-sh.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -3815,12 +3815,13 @@ sh_elf_relocate_section (bfd *output_bfd, struct bfd_link_info *info,\n \t\t   && ELF_ST_VISIBILITY (h->other) == STV_DEFAULT)\n \t    ;\n \t  else if (!bfd_link_relocatable (info))\n-\t    (*info->callbacks->undefined_symbol)\n-\t      (info, h->root.root.string, input_bfd,\n-\t       input_section, rel->r_offset,\n-\t       (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\n-\t\t|| ELF_ST_VISIBILITY (h->other)));\n-\t}\n+            info->callbacks->undefined_symbol\n+\t      (info, h->root.root.string, input_bfd, input_section,\n+\t       rel->r_offset,\n+\t       (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t&& !info->warn_unresolved_syms)\n+\t       || ELF_ST_VISIBILITY (h->other));\n+        }\n \n       if (sec != NULL && discarded_section (sec))\n \tRELOC_AGAINST_DISCARDED_SECTION (info, input_bfd, input_section,"
    },
    {
      "sha": "983989081aeb755edaead2456cfc1a93f561af91",
      "filename": "bfd/elf32-spu.c",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-spu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf32-spu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-spu.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -4927,13 +4927,14 @@ spu_elf_relocate_section (bfd *output_bfd,\n \t\t   && !(r_type == R_SPU_PPU32 || r_type == R_SPU_PPU64))\n \t    {\n \t      bfd_boolean err;\n-\t      err = (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\n-\t\t     || ELF_ST_VISIBILITY (h->other) != STV_DEFAULT);\n-\t      (*info->callbacks->undefined_symbol) (info,\n-\t\t\t\t\t\t    h->root.root.string,\n-\t\t\t\t\t\t    input_bfd,\n-\t\t\t\t\t\t    input_section,\n-\t\t\t\t\t\t    rel->r_offset, err);\n+\n+\t      err = (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t     && !info->warn_unresolved_syms)\n+\t\t|| ELF_ST_VISIBILITY (h->other) != STV_DEFAULT;\n+\n+\t      info->callbacks->undefined_symbol\n+\t\t(info, h->root.root.string, input_bfd,\n+\t\t input_section, rel->r_offset, err);\n \t    }\n \t  sym_name = h->root.root.string;\n \t}"
    },
    {
      "sha": "ae50b2cd4786b030d91d7b5872c6522eb002def1",
      "filename": "bfd/elf64-hppa.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf64-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elf64-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-hppa.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -3882,13 +3882,14 @@ elf64_hppa_relocate_section (bfd *output_bfd,\n \t  else if (!bfd_link_relocatable (info))\n \t    {\n \t      bfd_boolean err;\n-\t      err = (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\n-\t\t     || ELF_ST_VISIBILITY (eh->other) != STV_DEFAULT);\n-\t      (*info->callbacks->undefined_symbol) (info,\n-\t\t\t\t\t\t    eh->root.root.string,\n-\t\t\t\t\t\t    input_bfd,\n-\t\t\t\t\t\t    input_section,\n-\t\t\t\t\t\t    rel->r_offset, err);\n+\n+\t      err = (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t\t     && !info->warn_unresolved_syms)\n+\t\t|| ELF_ST_VISIBILITY (eh->other) != STV_DEFAULT;\n+\n+\t      info->callbacks->undefined_symbol\n+\t\t(info, eh->root.root.string, input_bfd,\n+\t\t input_section, rel->r_offset, err);\n \t    }\n \n \t  if (!bfd_link_relocatable (info)\n@@ -3900,7 +3901,7 @@ elf64_hppa_relocate_section (bfd *output_bfd,\n \t      if (info->unresolved_syms_in_objects == RM_IGNORE\n \t\t  && ELF_ST_VISIBILITY (eh->other) == STV_DEFAULT\n \t\t  && eh->type == STT_PARISC_MILLI)\n-\t\t(*info->callbacks->undefined_symbol)\n+\t\tinfo->callbacks->undefined_symbol\n \t\t  (info, eh_name (eh), input_bfd,\n \t\t   input_section, rel->r_offset, FALSE);\n \t    }"
    },
    {
      "sha": "eb6b3eeca50e986e8e6accb17de7031c9923c6cb",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -9886,11 +9886,13 @@ elf_link_output_extsym (struct bfd_hash_entry *bh, void *data)\n \t  && (!h->ref_regular || flinfo->info->gc_sections)\n \t  && !elf_link_check_versioned_symbol (flinfo->info, bed, h)\n \t  && flinfo->info->unresolved_syms_in_shared_libs != RM_IGNORE)\n-\t(*flinfo->info->callbacks->undefined_symbol)\n-\t  (flinfo->info, h->root.root.string,\n-\t   h->ref_regular ? NULL : h->root.u.undef.abfd,\n-\t   NULL, 0,\n-\t   flinfo->info->unresolved_syms_in_shared_libs == RM_GENERATE_ERROR);\n+\t{\n+\t  flinfo->info->callbacks->undefined_symbol\n+\t    (flinfo->info, h->root.root.string,\n+\t     h->ref_regular ? NULL : h->root.u.undef.abfd, NULL, 0,\n+\t     flinfo->info->unresolved_syms_in_shared_libs == RM_DIAGNOSE\n+\t     && !flinfo->info->warn_unresolved_syms);\n+\t}\n \n       /* Strip a global symbol defined in a discarded section.  */\n       if (h->indx == -3)"
    },
    {
      "sha": "ae8478270efc37b0227e81f5e8bceb53e28d953d",
      "filename": "bfd/elfxx-mips.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elfxx-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/bfd/elfxx-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-mips.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -5649,11 +5649,12 @@ mips_elf_calculate_relocation (bfd *abfd, bfd *input_bfd,\n \t}\n       else\n \t{\n-\t  bfd_boolean reject_undefined\n-\t    = (info->unresolved_syms_in_objects == RM_GENERATE_ERROR\n-\t       || ELF_ST_VISIBILITY (h->root.other) != STV_DEFAULT);\n+          bfd_boolean reject_undefined\n+\t    = (info->unresolved_syms_in_objects == RM_DIAGNOSE\n+\t       && !info->warn_unresolved_syms)\n+\t    || ELF_ST_VISIBILITY (h->root.other) != STV_DEFAULT;\n \n-\t  (*info->callbacks->undefined_symbol)\n+\t  info->callbacks->undefined_symbol\n \t    (info, h->root.root.root.string, input_bfd,\n \t     input_section, relocation->r_offset, reject_undefined);\n "
    },
    {
      "sha": "42698b2dbcd9306ff2415698b12363a9af25899e",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-10  Fangrui Song <maskray@google.com>\n+\n+\tPR binutils/24613\n+\t* bfdlink.h (enum report_method): Delete RM_GENERATE_WARNING and\n+\tRM_GENERATE_ERROR. Add RM_DIAGNOSE.\n+\t(struct bfd_link_info): Add warn_unresolved_syms.\n+\n 2020-04-14  Stephen Casner  <casner@acm.org>\n \n \tPR ld/25677"
    },
    {
      "sha": "ec97679e6f1de2a15202f33b3e153d02813b79ea",
      "filename": "include/bfdlink.h",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/include/bfdlink.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/include/bfdlink.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/bfdlink.h?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -270,8 +270,7 @@ enum report_method\n      allowed to set the value.  */\n   RM_NOT_YET_SET = 0,\n   RM_IGNORE,\n-  RM_GENERATE_WARNING,\n-  RM_GENERATE_ERROR\n+  RM_DIAGNOSE,\n };\n \n typedef enum {with_flags, without_flags} flag_type;\n@@ -373,7 +372,7 @@ struct bfd_link_info\n   ENUM_BITFIELD (bfd_link_elf_stt_common) elf_stt_common : 2;\n \n   /* Criteria for skipping symbols when determining\n-     whether to include an object from an archive. */\n+     whether to include an object from an archive.  */\n   ENUM_BITFIELD (bfd_link_common_skip_ar_symbols) common_skip_ar_symbols : 2;\n \n   /* What to do with unresolved symbols in an object file.\n@@ -387,6 +386,9 @@ struct bfd_link_info\n      The same defaults apply.  */\n   ENUM_BITFIELD (report_method) unresolved_syms_in_shared_libs : 2;\n \n+  /* TRUE if unresolved symbols are to be warned, rather than errored.  */\n+  unsigned int warn_unresolved_syms: 1;\n+\n   /* TRUE if shared objects should be linked directly, not shared.  */\n   unsigned int static_link: 1;\n "
    },
    {
      "sha": "53a3c9d5dcd6ec93fdd4936f0054fa46220036ec",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-15  Fangrui Song <maskray@google.com>\n+\n+\tPR binutils/24613\n+\t* lexsup.c (parse_args): Change RM_GENERATE_WARNING and\n+\tRM_GENERATE_ERROR to RM_DIAGNOSE.\n+\t* emultempl/aix.em (ld_${EMULATION_NAME}_emulation): Change\n+\tRM_GENERATE_ERROR to RM_DIAGNOSE.\n+\t* emultempl/elf.em (ld_${EMULATION_NAME}_emulation): Likewise.\n+\n 2020-04-14  Stephen Casner  <casner@acm.org>\n \n \tPR ld/25677"
    },
    {
      "sha": "5b73c3e7e59aacc02d62dab7bda4941b2592002a",
      "filename": "ld/emultempl/aix.em",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/ld/emultempl/aix.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/ld/emultempl/aix.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/aix.em?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -472,8 +472,8 @@ gld${EMULATION_NAME}_handle_option (int optc)\n       break;\n \n     case OPTION_ERNOTOK:\n-      link_info.unresolved_syms_in_objects = RM_GENERATE_ERROR;\n-      link_info.unresolved_syms_in_shared_libs = RM_GENERATE_ERROR;\n+      link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n+      link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n       break;\n \n     case OPTION_EROK:"
    },
    {
      "sha": "899030016c0d8519f6edd4c5232ef338f60e4ff6",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -675,8 +675,8 @@ fragment <<EOF\n     case OPTION_GROUP:\n       link_info.flags_1 |= (bfd_vma) DF_1_GROUP;\n       /* Groups must be self-contained.  */\n-      link_info.unresolved_syms_in_objects = RM_GENERATE_ERROR;\n-      link_info.unresolved_syms_in_shared_libs = RM_GENERATE_ERROR;\n+      link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n+      link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n       break;\n \n     case OPTION_EXCLUDE_LIBS:\n@@ -704,7 +704,7 @@ fi\n fragment <<EOF\n     case 'z':\n       if (strcmp (optarg, \"defs\") == 0)\n-\tlink_info.unresolved_syms_in_objects = RM_GENERATE_ERROR;\n+\tlink_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n       else if (strcmp (optarg, \"undefs\") == 0)\n \tlink_info.unresolved_syms_in_objects = RM_IGNORE;\n       else if (strcmp (optarg, \"muldefs\") == 0)"
    },
    {
      "sha": "d1955b9afaba8c94055617e741ff798cf24792ba",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 10,
      "deletions": 26,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/95a515681272fa3a79624279c1579cce14ad61c0/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/95a515681272fa3a79624279c1579cce14ad61c0/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=95a515681272fa3a79624279c1579cce14ad61c0",
      "patch": "@@ -569,7 +569,6 @@ parse_args (unsigned argc, char **argv)\n   struct option *longopts;\n   struct option *really_longopts;\n   int last_optind;\n-  enum report_method how_to_report_unresolved_symbols = RM_GENERATE_ERROR;\n   enum symbolic_enum\n   {\n     symbolic_unset = 0,\n@@ -958,15 +957,13 @@ parse_args (unsigned argc, char **argv)\n \t  link_info.keep_memory = FALSE;\n \t  break;\n \tcase OPTION_NO_UNDEFINED:\n-\t  link_info.unresolved_syms_in_objects\n-\t    = how_to_report_unresolved_symbols;\n+\t  link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n \t  break;\n \tcase OPTION_ALLOW_SHLIB_UNDEFINED:\n \t  link_info.unresolved_syms_in_shared_libs = RM_IGNORE;\n \t  break;\n \tcase OPTION_NO_ALLOW_SHLIB_UNDEFINED:\n-\t  link_info.unresolved_syms_in_shared_libs\n-\t    = how_to_report_unresolved_symbols;\n+\t  link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n \t  break;\n \tcase OPTION_UNRESOLVED_SYMBOLS:\n \t  if (strcmp (optarg, \"ignore-all\") == 0)\n@@ -976,40 +973,27 @@ parse_args (unsigned argc, char **argv)\n \t    }\n \t  else if (strcmp (optarg, \"report-all\") == 0)\n \t    {\n-\t      link_info.unresolved_syms_in_objects\n-\t\t= how_to_report_unresolved_symbols;\n-\t      link_info.unresolved_syms_in_shared_libs\n-\t\t= how_to_report_unresolved_symbols;\n+\t      link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n+\t      link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n \t    }\n \t  else if (strcmp (optarg, \"ignore-in-object-files\") == 0)\n \t    {\n \t      link_info.unresolved_syms_in_objects = RM_IGNORE;\n-\t      link_info.unresolved_syms_in_shared_libs\n-\t\t= how_to_report_unresolved_symbols;\n+\t      link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n \t    }\n \t  else if (strcmp (optarg, \"ignore-in-shared-libs\") == 0)\n \t    {\n-\t      link_info.unresolved_syms_in_objects\n-\t\t= how_to_report_unresolved_symbols;\n+\t      link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n \t      link_info.unresolved_syms_in_shared_libs = RM_IGNORE;\n \t    }\n \t  else\n \t    einfo (_(\"%F%P: bad --unresolved-symbols option: %s\\n\"), optarg);\n \t  break;\n \tcase OPTION_WARN_UNRESOLVED_SYMBOLS:\n-\t  how_to_report_unresolved_symbols = RM_GENERATE_WARNING;\n-\t  if (link_info.unresolved_syms_in_objects == RM_GENERATE_ERROR)\n-\t    link_info.unresolved_syms_in_objects = RM_GENERATE_WARNING;\n-\t  if (link_info.unresolved_syms_in_shared_libs == RM_GENERATE_ERROR)\n-\t    link_info.unresolved_syms_in_shared_libs = RM_GENERATE_WARNING;\n+\t  link_info.warn_unresolved_syms = TRUE;\n \t  break;\n-\n \tcase OPTION_ERROR_UNRESOLVED_SYMBOLS:\n-\t  how_to_report_unresolved_symbols = RM_GENERATE_ERROR;\n-\t  if (link_info.unresolved_syms_in_objects == RM_GENERATE_WARNING)\n-\t    link_info.unresolved_syms_in_objects = RM_GENERATE_ERROR;\n-\t  if (link_info.unresolved_syms_in_shared_libs == RM_GENERATE_WARNING)\n-\t    link_info.unresolved_syms_in_shared_libs = RM_GENERATE_ERROR;\n+\t  link_info.warn_unresolved_syms = FALSE;\n \t  break;\n \tcase OPTION_ALLOW_MULTIPLE_DEFINITION:\n \t  link_info.allow_multiple_definition = TRUE;\n@@ -1639,11 +1623,11 @@ parse_args (unsigned argc, char **argv)\n \n   if (link_info.unresolved_syms_in_objects == RM_NOT_YET_SET)\n     /* FIXME: Should we allow emulations a chance to set this ?  */\n-    link_info.unresolved_syms_in_objects = how_to_report_unresolved_symbols;\n+    link_info.unresolved_syms_in_objects = RM_DIAGNOSE;\n \n   if (link_info.unresolved_syms_in_shared_libs == RM_NOT_YET_SET)\n     /* FIXME: Should we allow emulations a chance to set this ?  */\n-    link_info.unresolved_syms_in_shared_libs = how_to_report_unresolved_symbols;\n+    link_info.unresolved_syms_in_shared_libs = RM_DIAGNOSE;\n \n   if (bfd_link_relocatable (&link_info)\n       && command_line.check_section_addresses < 0)"
    }
  ]
}