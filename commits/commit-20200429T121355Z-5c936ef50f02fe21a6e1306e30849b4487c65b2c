{
  "sha": "5c936ef50f02fe21a6e1306e30849b4487c65b2c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWM5MzZlZjUwZjAyZmUyMWE2ZTEzMDZlMzA4NDliNDQ4N2M2NWIyYw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-29T12:13:55Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-29T12:13:55Z"
    },
    "message": "Fix the disassmbly of SH instructions which have an unsigned 8-bit immediate operand.\n\n\tPR 22699\nopcodes\t* sh-opc.h (IMM0_8): Replace with IMM0_8S and IMM0_8U.  Use\n\tIMM0_8S for arithmetic insns and IMM0_8U for logical insns.\n\t* sh-dis.c (print_insn_sh): Change IMM0_8 case to IMM0_8S and add\n\tIMM0_8U case.\n\ngas\t* config/tc-sh.c (build_Mytes): Change operand type IMM0_8 to\n\tIMM0_8S and add support for IMM0_8U.\n\t* testsuite/gas/sh/sh4a.s: Add test of a logical insn using an\n\tunsigned 8-bit immediate.\n\t* testsuite/gas/sh/sh4a.d: Extended expected disassembly.",
    "tree": {
      "sha": "5a9e05736ce354bf06a4221c3cb18e2a314e42ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5a9e05736ce354bf06a4221c3cb18e2a314e42ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5c936ef50f02fe21a6e1306e30849b4487c65b2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c936ef50f02fe21a6e1306e30849b4487c65b2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5c936ef50f02fe21a6e1306e30849b4487c65b2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c936ef50f02fe21a6e1306e30849b4487c65b2c/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4849fabc7c4c47d770b61adc025e34bc2a23fe23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4849fabc7c4c47d770b61adc025e34bc2a23fe23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4849fabc7c4c47d770b61adc025e34bc2a23fe23"
    }
  ],
  "stats": {
    "total": 65,
    "additions": 46,
    "deletions": 19
  },
  "files": [
    {
      "sha": "8df687bbb7018aeb8da1bd3811151e32d21eec03",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -1,3 +1,12 @@\n+2020-04-29  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22699\n+\t* config/tc-sh.c (build_Mytes): Change operand type IMM0_8 to\n+\tIMM0_8S and add support for IMM0_8U.\n+\t* testsuite/gas/sh/sh4a.s: Add test of a logical insn using an\n+\tunsigned 8-bit immediate.\n+\t* testsuite/gas/sh/sh4a.d: Extended expected disassembly.\n+\n 2020-04-27  Tamar Christina  <tamar.christina@arm.com>\n \n \t* NEWS: Add news entry for big-obj."
    },
    {
      "sha": "d06cc5e9b8bc70cf51ea6318b64a9c7d2df6d1f8",
      "filename": "gas/config/tc-sh.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/config/tc-sh.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/config/tc-sh.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-sh.c?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -2091,7 +2091,8 @@ build_Mytes (sh_opcode_info *opcode, sh_operand_info *operand)\n \t    case IMM0_8BY2:\n \t      insert (output + low_byte, BFD_RELOC_SH_IMM8BY2, 0, operand);\n \t      break;\n-\t    case IMM0_8:\n+\t    case IMM0_8U:\n+\t    case IMM0_8S:\n \t      insert (output + low_byte, BFD_RELOC_SH_IMM8, 0, operand);\n \t      break;\n \t    case IMM1_8BY4:"
    },
    {
      "sha": "45fade6a7e78762d4db1ef1a21879cd1f53d7c6a",
      "filename": "gas/testsuite/gas/sh/sh4a.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/testsuite/gas/sh/sh4a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/testsuite/gas/sh/sh4a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/sh/sh4a.d?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -25,3 +25,5 @@ Disassembly of section \\.text:\n 0x0000001e 05 d3       \tprefi\t@r5\n 0x00000020 0a d3       \tprefi\t@r10\n 0x00000022 00 ab       \tsynco\t\n+0x00000024 c8 80[ \t]+tst[ \t]+#128,r0\n+#pass"
    },
    {
      "sha": "6b68ec2a3d8d0d83141265618b30c9d7a2e99a6f",
      "filename": "gas/testsuite/gas/sh/sh4a.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/testsuite/gas/sh/sh4a.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/gas/testsuite/gas/sh/sh4a.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/sh/sh4a.s?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -26,3 +26,5 @@\n \tprefi\t@r10\n \n \tsynco\n+\n+\ttst #128,r0"
    },
    {
      "sha": "94b8a03a8d384df9723214071a0532a23ff9343c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-29  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22699\n+\t* sh-opc.h (IMM0_8): Replace with IMM0_8S and IMM0_8U.  Use\n+\tIMM0_8S for arithmetic insns and IMM0_8U for logical insns.\n+\t* sh-dis.c (print_insn_sh): Change IMM0_8 case to IMM0_8S and add\n+\tIMM0_8U case.\n+\n 2020-04-21  Andreas Schwab  <schwab@linux-m68k.org>\n \n \tPR 25848"
    },
    {
      "sha": "00bcffa7c712be4573470e94f1b11969738622b6",
      "filename": "opcodes/sh-dis.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/sh-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/sh-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/sh-dis.c?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -597,14 +597,18 @@ print_insn_sh (bfd_vma memaddr, struct disassemble_info *info)\n \t    case IMM1_4BY4:\n \t      imm = nibs[3] << 2;\n \t      goto ok;\n-\t    case IMM0_8:\n+\t    case IMM0_8S:\n \t    case IMM1_8:\n \t      imm = (nibs[2] << 4) | nibs[3];\n \t      disp = imm;\n \t      has_disp = 1;\n \t      if (imm & 0x80)\n \t\timm -= 0x100;\n \t      goto ok;\n+\t    case IMM0_8U:\n+\t      disp = imm = (nibs[2] << 4) | nibs[3];\n+\t      has_disp = 1;\n+\t      goto ok;\n \t    case PCRELIMM_8BY2:\n \t      imm = ((nibs[2] << 4) | nibs[3]) << 1;\n \t      relmask = ~(bfd_vma) 1;"
    },
    {
      "sha": "cd9d2c27a36c88200c1dfb5807643d812ea35eb4",
      "filename": "opcodes/sh-opc.h",
      "status": "modified",
      "additions": 18,
      "deletions": 17,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/sh-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5c936ef50f02fe21a6e1306e30849b4487c65b2c/opcodes/sh-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/sh-opc.h?ref=5c936ef50f02fe21a6e1306e30849b4487c65b2c",
      "patch": "@@ -61,7 +61,8 @@ typedef enum\n     IMM1_4BY4,\n     PCRELIMM_8BY2,\n     PCRELIMM_8BY4,\n-    IMM0_8,\n+    IMM0_8S,\n+    IMM0_8U,\n     IMM0_8BY2,\n     IMM0_8BY4,\n     IMM1_8,\n@@ -381,19 +382,19 @@ typedef struct\n \n const sh_opcode_info sh_table[] =\n   {\n-/* 0111nnnni8*1.... add #<imm>,<REG_N>  */{\"add\",{A_IMM,A_REG_N},{HEX_7,REG_N,IMM0_8}, arch_sh_up},\n+/* 0111nnnni8*1.... add #<imm>,<REG_N>  */{\"add\",{A_IMM,A_REG_N},{HEX_7,REG_N,IMM0_8S}, arch_sh_up},\n \n /* 0011nnnnmmmm1100 add <REG_M>,<REG_N> */{\"add\",{ A_REG_M,A_REG_N},{HEX_3,REG_N,REG_M,HEX_C}, arch_sh_up},\n \n /* 0011nnnnmmmm1110 addc <REG_M>,<REG_N>*/{\"addc\",{ A_REG_M,A_REG_N},{HEX_3,REG_N,REG_M,HEX_E}, arch_sh_up},\n \n /* 0011nnnnmmmm1111 addv <REG_M>,<REG_N>*/{\"addv\",{ A_REG_M,A_REG_N},{HEX_3,REG_N,REG_M,HEX_F}, arch_sh_up},\n \n-/* 11001001i8*1.... and #<imm>,R0       */{\"and\",{A_IMM,A_R0},{HEX_C,HEX_9,IMM0_8}, arch_sh_up},\n+/* 11001001i8*1.... and #<imm>,R0       */{\"and\",{A_IMM,A_R0},{HEX_C,HEX_9,IMM0_8U}, arch_sh_up},\n \n /* 0010nnnnmmmm1001 and <REG_M>,<REG_N> */{\"and\",{ A_REG_M,A_REG_N},{HEX_2,REG_N,REG_M,HEX_9}, arch_sh_up},\n \n-/* 11001101i8*1.... and.b #<imm>,@(R0,GBR)*/{\"and.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_D,IMM0_8}, arch_sh_up},\n+/* 11001101i8*1.... and.b #<imm>,@(R0,GBR)*/{\"and.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_D,IMM0_8U}, arch_sh_up},\n \n /* 1010i12......... bra <bdisp12>       */{\"bra\",{A_BDISP12},{HEX_A,BRANCH_12}, arch_sh_up},\n \n@@ -419,7 +420,7 @@ const sh_opcode_info sh_table[] =\n \n /* 0000000000001000 clrt                */{\"clrt\",{0},{HEX_0,HEX_0,HEX_0,HEX_8}, arch_sh_up},\n \n-/* 10001000i8*1.... cmp/eq #<imm>,R0    */{\"cmp/eq\",{A_IMM,A_R0},{HEX_8,HEX_8,IMM0_8}, arch_sh_up},\n+/* 10001000i8*1.... cmp/eq #<imm>,R0    */{\"cmp/eq\",{A_IMM,A_R0},{HEX_8,HEX_8,IMM0_8S}, arch_sh_up},\n \n /* 0011nnnnmmmm0000 cmp/eq <REG_M>,<REG_N>*/{\"cmp/eq\",{ A_REG_M,A_REG_N},{HEX_3,REG_N,REG_M,HEX_0}, arch_sh_up},\n \n@@ -504,7 +505,7 @@ const sh_opcode_info sh_table[] =\n /* 0100nnnn1xxx0111 ldc.l @<REG_N>+,Rn_BANK */{\"ldc.l\",{A_INC_N,A_REG_B},{HEX_4,REG_N,REG_B,HEX_7}, arch_sh3_nommu_up},\n \n /* 0100mmmm00110100 ldrc <REG_M>        */{\"ldrc\",{A_REG_M},{HEX_4,REG_M,HEX_3,HEX_4}, arch_sh4al_dsp_up},\n-/* 10001010i8*1.... ldrc #<imm>         */{\"ldrc\",{A_IMM},{HEX_8,HEX_A,IMM0_8}, arch_sh4al_dsp_up},\n+/* 10001010i8*1.... ldrc #<imm>         */{\"ldrc\",{A_IMM},{HEX_8,HEX_A,IMM0_8S}, arch_sh4al_dsp_up},\n \n /* 10001110i8p2.... ldre @(<disp>,PC)\t*/{\"ldre\",{A_DISP_PC},{HEX_8,HEX_E,PCRELIMM_8BY2}, arch_sh_dsp_up},\n \n@@ -558,7 +559,7 @@ const sh_opcode_info sh_table[] =\n \n /* 0100nnnnmmmm1111 mac.w @<REG_M>+,@<REG_N>+*/{\"mac.w\",{A_INC_M,A_INC_N},{HEX_4,REG_N,REG_M,HEX_F}, arch_sh_up},\n \n-/* 1110nnnni8*1.... mov #<imm>,<REG_N>  */{\"mov\",{A_IMM,A_REG_N},{HEX_E,REG_N,IMM0_8}, arch_sh_up},\n+/* 1110nnnni8*1.... mov #<imm>,<REG_N>  */{\"mov\",{A_IMM,A_REG_N},{HEX_E,REG_N,IMM0_8S}, arch_sh_up},\n \n /* 0110nnnnmmmm0011 mov <REG_M>,<REG_N> */{\"mov\",{ A_REG_M,A_REG_N},{HEX_6,REG_N,REG_M,HEX_3}, arch_sh_up},\n \n@@ -570,7 +571,7 @@ const sh_opcode_info sh_table[] =\n \n /* 10000100mmmmi4*1 mov.b @(<disp>,<REG_M>),R0*/{\"mov.b\",{A_DISP_REG_M,A_R0},{HEX_8,HEX_4,REG_M,IMM0_4}, arch_sh_up},\n \n-/* 11000100i8*1.... mov.b @(<disp>,GBR),R0*/{\"mov.b\",{A_DISP_GBR,A_R0},{HEX_C,HEX_4,IMM0_8}, arch_sh_up},\n+/* 11000100i8*1.... mov.b @(<disp>,GBR),R0*/{\"mov.b\",{A_DISP_GBR,A_R0},{HEX_C,HEX_4,IMM0_8S}, arch_sh_up},\n \n /* 0000nnnnmmmm1100 mov.b @(R0,<REG_M>),<REG_N>*/{\"mov.b\",{A_IND_R0_REG_M,A_REG_N},{HEX_0,REG_N,REG_M,HEX_C}, arch_sh_up},\n \n@@ -677,11 +678,11 @@ const sh_opcode_info sh_table[] =\n /* 0000nnnn10110011 ocbwb @<REG_N>      */{\"ocbwb\",{A_IND_N},{HEX_0,REG_N,HEX_B,HEX_3}, arch_sh4_nommu_nofpu_up},\n \n \n-/* 11001011i8*1.... or #<imm>,R0        */{\"or\",{A_IMM,A_R0},{HEX_C,HEX_B,IMM0_8}, arch_sh_up},\n+/* 11001011i8*1.... or #<imm>,R0        */{\"or\",{A_IMM,A_R0},{HEX_C,HEX_B,IMM0_8U}, arch_sh_up},\n \n /* 0010nnnnmmmm1011 or <REG_M>,<REG_N>  */{\"or\",{ A_REG_M,A_REG_N},{HEX_2,REG_N,REG_M,HEX_B}, arch_sh_up},\n \n-/* 11001111i8*1.... or.b #<imm>,@(R0,GBR)*/{\"or.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_F,IMM0_8}, arch_sh_up},\n+/* 11001111i8*1.... or.b #<imm>,@(R0,GBR)*/{\"or.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_F,IMM0_8U}, arch_sh_up},\n \n /* 0000nnnn10000011 pref @<REG_N>       */{\"pref\",{A_IND_N},{HEX_0,REG_N,HEX_8,HEX_3}, arch_sh2a_nofpu_or_sh3_nommu_up},\n \n@@ -707,11 +708,11 @@ const sh_opcode_info sh_table[] =\n \n /* 0100nnnn00010100 setrc <REG_N>       */{\"setrc\",{A_REG_N},{HEX_4,REG_N,HEX_1,HEX_4}, arch_sh_dsp_up},\n \n-/* 10000010i8*1.... setrc #<imm>        */{\"setrc\",{A_IMM},{HEX_8,HEX_2,IMM0_8}, arch_sh_dsp_up},\n+/* 10000010i8*1.... setrc #<imm>        */{\"setrc\",{A_IMM},{HEX_8,HEX_2,IMM0_8S}, arch_sh_dsp_up},\n \n /* repeat start end <REG_N>       \t*/{\"repeat\",{A_DISP_PC,A_DISP_PC,A_REG_N},{REPEAT,REG_N,HEX_1,HEX_4}, arch_sh_dsp_up},\n \n-/* repeat start end #<imm>        \t*/{\"repeat\",{A_DISP_PC,A_DISP_PC,A_IMM},{REPEAT,HEX_2,IMM0_8,HEX_8}, arch_sh_dsp_up},\n+/* repeat start end #<imm>        \t*/{\"repeat\",{A_DISP_PC,A_DISP_PC,A_IMM},{REPEAT,HEX_2,IMM0_8S,HEX_8}, arch_sh_dsp_up},\n \n /* 0100nnnnmmmm1100 shad <REG_M>,<REG_N>*/{\"shad\",{ A_REG_M,A_REG_N},{HEX_4,REG_N,REG_M,HEX_C}, arch_sh2a_nofpu_or_sh3_nommu_up},\n \n@@ -843,19 +844,19 @@ const sh_opcode_info sh_table[] =\n \n /* 0100nnnn00011011 tas.b @<REG_N>      */{\"tas.b\",{A_IND_N},{HEX_4,REG_N,HEX_1,HEX_B}, arch_sh_up},\n \n-/* 11000011i8*1.... trapa #<imm>        */{\"trapa\",{A_IMM},{HEX_C,HEX_3,IMM0_8}, arch_sh_up},\n+/* 11000011i8*1.... trapa #<imm>        */{\"trapa\",{A_IMM},{HEX_C,HEX_3,IMM0_8U}, arch_sh_up},\n \n-/* 11001000i8*1.... tst #<imm>,R0       */{\"tst\",{A_IMM,A_R0},{HEX_C,HEX_8,IMM0_8}, arch_sh_up},\n+/* 11001000i8*1.... tst #<imm>,R0       */{\"tst\",{A_IMM,A_R0},{HEX_C,HEX_8,IMM0_8U}, arch_sh_up},\n \n /* 0010nnnnmmmm1000 tst <REG_M>,<REG_N> */{\"tst\",{ A_REG_M,A_REG_N},{HEX_2,REG_N,REG_M,HEX_8}, arch_sh_up},\n \n-/* 11001100i8*1.... tst.b #<imm>,@(R0,GBR)*/{\"tst.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_C,IMM0_8}, arch_sh_up},\n+/* 11001100i8*1.... tst.b #<imm>,@(R0,GBR)*/{\"tst.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_C,IMM0_8U}, arch_sh_up},\n \n-/* 11001010i8*1.... xor #<imm>,R0       */{\"xor\",{A_IMM,A_R0},{HEX_C,HEX_A,IMM0_8}, arch_sh_up},\n+/* 11001010i8*1.... xor #<imm>,R0       */{\"xor\",{A_IMM,A_R0},{HEX_C,HEX_A,IMM0_8U}, arch_sh_up},\n \n /* 0010nnnnmmmm1010 xor <REG_M>,<REG_N> */{\"xor\",{ A_REG_M,A_REG_N},{HEX_2,REG_N,REG_M,HEX_A}, arch_sh_up},\n \n-/* 11001110i8*1.... xor.b #<imm>,@(R0,GBR)*/{\"xor.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_E,IMM0_8}, arch_sh_up},\n+/* 11001110i8*1.... xor.b #<imm>,@(R0,GBR)*/{\"xor.b\",{A_IMM,A_R0_GBR},{HEX_C,HEX_E,IMM0_8U}, arch_sh_up},\n \n /* 0010nnnnmmmm1101 xtrct <REG_M>,<REG_N>*/{\"xtrct\",{ A_REG_M,A_REG_N},{HEX_2,REG_N,REG_M,HEX_D}, arch_sh_up},\n "
    }
  ]
}