{
  "sha": "216f6fcbefa770589def331a4bcd1d244fbaf858",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjE2ZjZmY2JlZmE3NzA1ODlkZWYzMzFhNGJjZDFkMjQ0ZmJhZjg1OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:06Z"
    },
    "message": "Split out eval_op_f_kind\n\nThis splits UNOP_FORTRAN_KIND into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* f-lang.c (eval_op_f_kind): New function.\n\t(evaluate_subexp_f): Use it.",
    "tree": {
      "sha": "76c28baec75743bb1f623380dcdfd009f0d255fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/76c28baec75743bb1f623380dcdfd009f0d255fe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/216f6fcbefa770589def331a4bcd1d244fbaf858",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/216f6fcbefa770589def331a4bcd1d244fbaf858",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/216f6fcbefa770589def331a4bcd1d244fbaf858",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/216f6fcbefa770589def331a4bcd1d244fbaf858/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00f2db6f7d52b718d5436e76184c92006713f531",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00f2db6f7d52b718d5436e76184c92006713f531",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00f2db6f7d52b718d5436e76184c92006713f531"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 31,
    "deletions": 17
  },
  "files": [
    {
      "sha": "0958f593c91ff44e0c6dba965d8e2617776ce33e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/216f6fcbefa770589def331a4bcd1d244fbaf858/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/216f6fcbefa770589def331a4bcd1d244fbaf858/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=216f6fcbefa770589def331a4bcd1d244fbaf858",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-lang.c (eval_op_f_kind): New function.\n+\t(evaluate_subexp_f): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* f-lang.c (eval_op_f_cmplx): New function."
    },
    {
      "sha": "659b0c84fa88550799e9b6103f0f03eb696cd558",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 26,
      "deletions": 17,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/216f6fcbefa770589def331a4bcd1d244fbaf858/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/216f6fcbefa770589def331a4bcd1d244fbaf858/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=216f6fcbefa770589def331a4bcd1d244fbaf858",
      "patch": "@@ -1133,6 +1133,31 @@ eval_op_f_cmplx (struct type *expect_type, struct expression *exp,\n   return value_literal_complex (arg1, arg2, type);\n }\n \n+/* A helper function for UNOP_FORTRAN_KIND.  */\n+\n+static struct value *\n+eval_op_f_kind (struct type *expect_type, struct expression *exp,\n+\t\tenum noside noside,\n+\t\tstruct value *arg1)\n+{\n+  struct type *type = value_type (arg1);\n+\n+  switch (type->code ())\n+    {\n+    case TYPE_CODE_STRUCT:\n+    case TYPE_CODE_UNION:\n+    case TYPE_CODE_MODULE:\n+    case TYPE_CODE_FUNC:\n+      error (_(\"argument to kind must be an intrinsic type\"));\n+    }\n+\n+  if (!TYPE_TARGET_TYPE (type))\n+    return value_from_longest (builtin_type (exp->gdbarch)->builtin_int,\n+\t\t\t       TYPE_LENGTH (type));\n+  return value_from_longest (builtin_type (exp->gdbarch)->builtin_int,\n+\t\t\t     TYPE_LENGTH (TYPE_TARGET_TYPE (type)));\n+}\n+\n /* Special expression evaluation cases for Fortran.  */\n \n static struct value *\n@@ -1264,23 +1289,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n \n     case UNOP_FORTRAN_KIND:\n       arg1 = evaluate_subexp (NULL, exp, pos, EVAL_AVOID_SIDE_EFFECTS);\n-      type = value_type (arg1);\n-\n-      switch (type->code ())\n-\t{\n-\t  case TYPE_CODE_STRUCT:\n-\t  case TYPE_CODE_UNION:\n-\t  case TYPE_CODE_MODULE:\n-\t  case TYPE_CODE_FUNC:\n-\t    error (_(\"argument to kind must be an intrinsic type\"));\n-\t}\n-\n-      if (!TYPE_TARGET_TYPE (type))\n-\treturn value_from_longest (builtin_type (exp->gdbarch)->builtin_int,\n-\t\t\t\t   TYPE_LENGTH (type));\n-      return value_from_longest (builtin_type (exp->gdbarch)->builtin_int,\n-\t\t\t\t TYPE_LENGTH (TYPE_TARGET_TYPE (type)));\n-\n+      return eval_op_f_kind (expect_type, exp, noside, arg1);\n \n     case OP_F77_UNDETERMINED_ARGLIST:\n       /* Remember that in F77, functions, substring ops and array subscript"
    }
  ]
}