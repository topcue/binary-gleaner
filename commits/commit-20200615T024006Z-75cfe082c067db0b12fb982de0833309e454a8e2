{
  "sha": "75cfe082c067db0b12fb982de0833309e454a8e2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzVjZmUwODJjMDY3ZGIwYjEyZmI5ODJkZTA4MzMzMDllNDU0YThlMg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-15T02:40:06Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-15T02:40:06Z"
    },
    "message": "PR26103, Assertion failure with symbols defined in link-once sections\n\n\tPR 26103\n\t* elflink.c (elf_link_add_archive_symbols): Exclude undefined\n\tsymbols that were defined in discarded sections.\n\t* cofflink.c (coff_link_check_archive_element): Likewise.\n\t(coff_link_add_symbols): Set indx to -3 for symbols defined in\n\tdiscarded sections.\n\t(_bfd_coff_write_global_sym): Don't emit such symbols.\n\tlibcoff-in.h (struct coff_link_hash_entry): Update indx comment.\n\tlibcoff.h: Regenerate.",
    "tree": {
      "sha": "849f43dd0057e20e947e5f5fd8b7f80c7382e645",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/849f43dd0057e20e947e5f5fd8b7f80c7382e645"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75cfe082c067db0b12fb982de0833309e454a8e2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75cfe082c067db0b12fb982de0833309e454a8e2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75cfe082c067db0b12fb982de0833309e454a8e2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75cfe082c067db0b12fb982de0833309e454a8e2/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cda58d5f970d0257749d549aee9c0e2bfb4a1fe8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cda58d5f970d0257749d549aee9c0e2bfb4a1fe8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cda58d5f970d0257749d549aee9c0e2bfb4a1fe8"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 45,
    "deletions": 7
  },
  "files": [
    {
      "sha": "fe04699b45ffa26610c3969db4bdfadd016d1f35",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=75cfe082c067db0b12fb982de0833309e454a8e2",
      "patch": "@@ -1,3 +1,15 @@\n+2020-06-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26103\n+\t* elflink.c (elf_link_add_archive_symbols): Exclude undefined\n+\tsymbols that were defined in discarded sections.\n+\t* cofflink.c (coff_link_check_archive_element): Likewise.\n+\t(coff_link_add_symbols): Set indx to -3 for symbols defined in\n+\tdiscarded sections.\n+\t(_bfd_coff_write_global_sym): Don't emit such symbols.\n+\tlibcoff-in.h (struct coff_link_hash_entry): Update indx comment.\n+\tlibcoff.h: Regenerate.\n+\n 2020-06-11  Alan Modra  <amodra@gmail.com>\n \n \tPR 26107"
    },
    {
      "sha": "63bdcde115deae70f52d4eb543ab1170d2c49d81",
      "filename": "bfd/cofflink.c",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/cofflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/cofflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cofflink.c?ref=75cfe082c067db0b12fb982de0833309e454a8e2",
      "patch": "@@ -212,6 +212,12 @@ coff_link_check_archive_element (bfd *abfd,\n   if (h->type != bfd_link_hash_undefined)\n     return TRUE;\n \n+  /* If the archive element has already been loaded then one\n+     of the symbols defined by that element might have been\n+     made undefined due to being in a discarded section.  */\n+  if (((struct coff_link_hash_entry *) h)->indx == -3)\n+    return TRUE;\n+\n   /* PR 22369 - Skip non COFF objects in the archive.  */\n   if (! bfd_family_coff (abfd))\n     return TRUE;\n@@ -286,6 +292,7 @@ coff_link_add_symbols (bfd *abfd,\n \t  asection *section;\n \t  bfd_vma value;\n \t  bfd_boolean addit;\n+\t  bfd_boolean discarded = FALSE;\n \n \t  /* This symbol is externally visible.  */\n \n@@ -311,7 +318,10 @@ coff_link_add_symbols (bfd *abfd,\n \t      flags = BSF_EXPORT | BSF_GLOBAL;\n \t      section = coff_section_from_bfd_index (abfd, sym.n_scnum);\n \t      if (discarded_section (section))\n-\t\tsection = bfd_und_section_ptr;\n+\t\t{\n+\t\t  discarded = TRUE;\n+\t\t  section = bfd_und_section_ptr;\n+\t\t}\n \t      else if (! obj_pe (abfd))\n \t\tvalue -= section->vma;\n \t      break;\n@@ -408,6 +418,9 @@ coff_link_add_symbols (bfd *abfd,\n \t\t      (const char *) NULL, copy, FALSE,\n \t\t      (struct bfd_link_hash_entry **) sym_hash)))\n \t\tgoto error_return;\n+\n+\t      if (discarded)\n+\t\t(*sym_hash)->indx = -3;\n \t    }\n \n \t  if (obj_pe (abfd) && (flags & BSF_SECTION_SYM) != 0)\n@@ -2567,6 +2580,9 @@ _bfd_coff_write_global_sym (struct bfd_hash_entry *bh, void *data)\n       return FALSE;\n \n     case bfd_link_hash_undefined:\n+      if (h->indx == -3)\n+\treturn TRUE;\n+      /* Fall through.  */\n     case bfd_link_hash_undefweak:\n       isym.n_scnum = N_UNDEF;\n       isym.n_value = 0;"
    },
    {
      "sha": "ac00f2984e91c5e384acf0f044861e3b711fc053",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=75cfe082c067db0b12fb982de0833309e454a8e2",
      "patch": "@@ -5813,7 +5813,15 @@ elf_link_add_archive_symbols (bfd *abfd, struct bfd_link_info *info)\n \t  if (h == NULL)\n \t    continue;\n \n-\t  if (h->root.type == bfd_link_hash_common)\n+\t  if (h->root.type == bfd_link_hash_undefined)\n+\t    {\n+\t      /* If the archive element has already been loaded then one\n+\t\t of the symbols defined by that element might have been\n+\t\t made undefined due to being in a discarded section.  */\n+\t      if (h->indx == -3)\n+\t\tcontinue;\n+\t    }\n+\t  else if (h->root.type == bfd_link_hash_common)\n \t    {\n \t      /* We currently have a common symbol.  The archive map contains\n \t\t a reference to this symbol, so we may want to include it.  We\n@@ -5830,7 +5838,7 @@ elf_link_add_archive_symbols (bfd *abfd, struct bfd_link_info *info)\n \t      if (! elf_link_is_defined_archive_symbol (abfd, symdef))\n \t\tcontinue;\n \t    }\n-\t  else if (h->root.type != bfd_link_hash_undefined)\n+\t  else\n \t    {\n \t      if (h->root.type != bfd_link_hash_undefweak)\n \t\t/* Symbol must be defined.  Don't check it again.  */"
    },
    {
      "sha": "b7fcea30bb4754d72bea70206fd7f8218e57317f",
      "filename": "bfd/libcoff-in.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/libcoff-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/libcoff-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libcoff-in.h?ref=75cfe082c067db0b12fb982de0833309e454a8e2",
      "patch": "@@ -243,8 +243,9 @@ struct coff_link_hash_entry\n {\n   struct bfd_link_hash_entry root;\n \n-  /* Symbol index in output file.  Set to -1 initially.  Set to -2 if\n-     there is a reloc against this symbol.  */\n+  /* Symbol index in output file.  This is initialized to -1.  It is\n+     set to -2 if the symbol is used by a reloc.  It is set to -3 if\n+     this symbol is defined in a discarded section.  */\n   long indx;\n \n   /* Symbol type.  */"
    },
    {
      "sha": "df32c8604ec090b373df036b17e719d8acf4c934",
      "filename": "bfd/libcoff.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/libcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75cfe082c067db0b12fb982de0833309e454a8e2/bfd/libcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libcoff.h?ref=75cfe082c067db0b12fb982de0833309e454a8e2",
      "patch": "@@ -247,8 +247,9 @@ struct coff_link_hash_entry\n {\n   struct bfd_link_hash_entry root;\n \n-  /* Symbol index in output file.  Set to -1 initially.  Set to -2 if\n-     there is a reloc against this symbol.  */\n+  /* Symbol index in output file.  This is initialized to -1.  It is\n+     set to -2 if the symbol is used by a reloc.  It is set to -3 if\n+     this symbol is defined in a discarded section.  */\n   long indx;\n \n   /* Symbol type.  */"
    }
  ]
}