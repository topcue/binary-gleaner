{
  "sha": "e02812494254b70fec6fa432f7f668956711133b",
  "node_id": "C_kwDOANOeidoAKGUwMjgxMjQ5NDI1NGI3MGZlYzZmYTQzMmY3ZjY2ODk1NjcxMTEzM2I",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-24T08:06:03Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-24T11:15:23Z"
    },
    "message": "asan: arm-darwin: buffer overflow\n\n\tPR 21813\n\t* mach-o-arm.c (bfd_mach_o_arm_canonicalize_one_reloc): Sanity\n\tcheck PAIR reloc in other branch of condition as was done for\n\tPR21813.  Formatting.  Delete debug printf.",
    "tree": {
      "sha": "93c3d1af179f189c659dd2dca287b92b6367c4b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/93c3d1af179f189c659dd2dca287b92b6367c4b4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e02812494254b70fec6fa432f7f668956711133b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e02812494254b70fec6fa432f7f668956711133b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e02812494254b70fec6fa432f7f668956711133b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e02812494254b70fec6fa432f7f668956711133b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f9661f12a42583c91655bc5c5b60542bcaed4e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f9661f12a42583c91655bc5c5b60542bcaed4e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f9661f12a42583c91655bc5c5b60542bcaed4e2"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 21,
    "deletions": 18
  },
  "files": [
    {
      "sha": "9f1a104719cadef8e93fa0175193afe21dbd0048",
      "filename": "bfd/mach-o-arm.c",
      "status": "modified",
      "additions": 21,
      "deletions": 18,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e02812494254b70fec6fa432f7f668956711133b/bfd/mach-o-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e02812494254b70fec6fa432f7f668956711133b/bfd/mach-o-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/mach-o-arm.c?ref=e02812494254b70fec6fa432f7f668956711133b",
      "patch": "@@ -156,10 +156,7 @@ bfd_mach_o_arm_canonicalize_one_reloc (bfd *       abfd,\n   bfd_mach_o_reloc_info reloc;\n \n   if (!bfd_mach_o_pre_canonicalize_one_reloc (abfd, raw, &reloc, res, syms))\n-    {\n-fprintf (stderr, \"ARm 1\\n\");\n     return false;\n-    }\n \n   if (reloc.r_scattered)\n     {\n@@ -169,9 +166,9 @@ fprintf (stderr, \"ARm 1\\n\");\n \t  /* PR 21813: Check for a corrupt PAIR reloc at the start.  */\n \t  if (res == res_base)\n \t    {\n-\t      _bfd_error_handler (_(\"\\\n-malformed mach-o ARM reloc pair: reloc is first reloc\"));\n-\t    return false;\n+\t      _bfd_error_handler (_(\"malformed mach-o ARM reloc pair: \"\n+\t\t\t\t    \"reloc is first reloc\"));\n+\t      return false;\n \t    }\n \t  if (reloc.r_length == 2)\n \t    {\n@@ -185,8 +182,8 @@ malformed mach-o ARM reloc pair: reloc is first reloc\"));\n \t      res->address = res[-1].address;\n \t      return true;\n \t    }\n-\t  _bfd_error_handler (_(\"\\\n-malformed mach-o ARM reloc pair: invalid length: %d\"), reloc.r_length);\n+\t  _bfd_error_handler (_(\"malformed mach-o ARM reloc pair: \"\n+\t\t\t\t\"invalid length: %d\"), reloc.r_length);\n \t  return false;\n \n \tcase BFD_MACH_O_ARM_RELOC_SECTDIFF:\n@@ -200,8 +197,8 @@ malformed mach-o ARM reloc pair: invalid length: %d\"), reloc.r_length);\n \t      res->howto = &arm_howto_table[8];\n \t      return true;\n \t    }\n-\t  _bfd_error_handler (_(\"\\\n-malformed mach-o ARM sectdiff reloc: invalid length: %d\"), reloc.r_length);\n+\t  _bfd_error_handler (_(\"malformed mach-o ARM sectdiff reloc: \"\n+\t\t\t\t\"invalid length: %d\"), reloc.r_length);\n \t  return false;\n \n \tcase BFD_MACH_O_ARM_RELOC_LOCAL_SECTDIFF:\n@@ -215,8 +212,8 @@ malformed mach-o ARM sectdiff reloc: invalid length: %d\"), reloc.r_length);\n \t      res->howto = &arm_howto_table[9];\n \t      return true;\n \t    }\n-\t  _bfd_error_handler (_(\"\\\n-malformed mach-o ARM local sectdiff reloc: invalid length: %d\"),\n+\t  _bfd_error_handler (_(\"malformed mach-o ARM local sectdiff reloc: \"\n+\t\t\t\t\"invalid length: %d\"),\n \t\t\t      reloc.r_length);\n \t  return false;\n \n@@ -230,8 +227,8 @@ malformed mach-o ARM local sectdiff reloc: invalid length: %d\"),\n \t      res->howto = &arm_howto_table[14];\n \t      return true;\n \t    }\n-\t  _bfd_error_handler (_(\"\\\n-malformed mach-o ARM half sectdiff reloc: invalid length: %d\"),\n+\t  _bfd_error_handler (_(\"malformed mach-o ARM half sectdiff reloc: \"\n+\t\t\t\t\"invalid length: %d\"),\n \t\t\t      reloc.r_length);\n \t  return false;\n \n@@ -262,8 +259,8 @@ malformed mach-o ARM half sectdiff reloc: invalid length: %d\"),\n \t      res->howto = &arm_howto_table[3];\n \t      return true;\n \t    default:\n-\t      _bfd_error_handler (_(\"\\\n-malformed mach-o ARM vanilla reloc: invalid length: %d (pcrel: %d)\"),\n+\t      _bfd_error_handler (_(\"malformed mach-o ARM vanilla reloc: \"\n+\t\t\t\t    \"invalid length: %d (pcrel: %d)\"),\n \t\t\t\t  reloc.r_length, reloc.r_pcrel);\n \t      return false;\n \t    }\n@@ -299,6 +296,12 @@ malformed mach-o ARM vanilla reloc: invalid length: %d (pcrel: %d)\"),\n \t  break;\n \n \tcase BFD_MACH_O_ARM_RELOC_PAIR:\n+\t  if (res == res_base)\n+\t    {\n+\t      _bfd_error_handler (_(\"malformed mach-o ARM reloc pair: \"\n+\t\t\t\t    \"reloc is first reloc\"));\n+\t      return false;\n+\t    }\n \t  if (res[-1].howto == &arm_howto_table[12]\n \t      && reloc.r_length == 0)\n \t    {\n@@ -326,8 +329,8 @@ malformed mach-o ARM vanilla reloc: invalid length: %d (pcrel: %d)\"),\n \t}\n     }\n \n-  _bfd_error_handler (_(\"\\\n-malformed mach-o ARM reloc: unknown reloc type: %d\"), reloc.r_length);\n+  _bfd_error_handler (_(\"malformed mach-o ARM reloc: \"\n+\t\t\t\"unknown reloc type: %d\"), reloc.r_length);\n   return false;\n }\n "
    }
  ]
}