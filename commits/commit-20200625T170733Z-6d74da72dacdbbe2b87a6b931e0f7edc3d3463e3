{
  "sha": "6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQ3NGRhNzJkYWNkYmJlMmI4N2E2YjkzMWUwZjdlZGMzZDM0NjNlMw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-16T16:00:33Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-25T17:07:33Z"
    },
    "message": "gdb/riscv: Loop over all registers for 'info all-registers'\n\nCurrently the 'info all-registers' command only loops over those\nregisters that are known to GDB.  Any registers that are unknown, that\nis, are mentioned in the target description, but are not something GDB\notherwise knows, will not be displayed.\n\nThis feels wrong, so this commit fixes this mistake.  The output of\n'info all-registers' now matches 'info registers all'.\n\ngdb/ChangeLog:\n\n\t* riscv-tdep.c (riscv_print_registers_info): Loop over all\n\tregisters, not just the known core set of registers.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.arch/riscv-tdesc-regs.exp: New test cases.",
    "tree": {
      "sha": "5d43d213221a997b1ed1c8f30efd25373d9b3315",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5d43d213221a997b1ed1c8f30efd25373d9b3315"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2e52d038246520ee8f8d8344da18303154a421a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2e52d038246520ee8f8d8344da18303154a421a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2e52d038246520ee8f8d8344da18303154a421a6"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 17,
    "deletions": 4
  },
  "files": [
    {
      "sha": "0a36c6bc48c85df2e4a4311bcd0f124416e2e8ee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* riscv-tdep.c (riscv_print_registers_info): Loop over all\n+\tregisters, not just the known core set of registers.\n+\n 2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* riscv-tdep.c (riscv_register_name): Return NULL for duplicate"
    },
    {
      "sha": "b86ba6305402c84aaaf4665855125ae37e93d3c8",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
      "patch": "@@ -1071,7 +1071,7 @@ riscv_print_registers_info (struct gdbarch *gdbarch,\n       else\n \treggroup = general_reggroup;\n \n-      for (regnum = 0; regnum <= RISCV_LAST_REGNUM; ++regnum)\n+      for (regnum = 0; regnum < gdbarch_num_cooked_regs (gdbarch); ++regnum)\n \t{\n \t  /* Zero never changes, so might as well hide by default.  */\n \t  if (regnum == RISCV_ZERO_REGNUM && !print_all)"
    },
    {
      "sha": "8ad2448080aed42e6e8e4a69c4d6e5ee632a5e1b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
      "patch": "@@ -1,3 +1,7 @@\n+2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.arch/riscv-tdesc-regs.exp: New test cases.\n+\n 2020-06-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.arch/riscv-tdesc-regs.exp: Extend test case."
    },
    {
      "sha": "1be32e0e8a1e86e5c2e02568a0bd8722351ffb54",
      "filename": "gdb/testsuite/gdb.arch/riscv-tdesc-regs.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/testsuite/gdb.arch/riscv-tdesc-regs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3/gdb/testsuite/gdb.arch/riscv-tdesc-regs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/riscv-tdesc-regs.exp?ref=6d74da72dacdbbe2b87a6b931e0f7edc3d3463e3",
      "patch": "@@ -80,11 +80,15 @@ gdb_test \"info registers \\$csr0\" \"Invalid register `csr0'\"\n gdb_test \"info registers \\$dscratch0\" \"dscratch0\\[ \\t\\]+.*\"\n gdb_test \"info registers \\$dscratch\" \"dscratch\\[ \\t\\]+.*\"\n \n-foreach rgroup {all save restore} {\n+foreach rgroup {x_all all save restore} {\n     # Now use 'info registers all' to see how many times the floating\n     # point status registers show up in the output.\n     array set reg_counts {}\n-    set test \"info registers $rgroup\"\n+    if {$rgroup == \"x_all\"} {\n+\tset test \"info all-registers\"\n+    } else {\n+\tset test \"info registers $rgroup\"\n+    }\n     gdb_test_multiple $test $test {\n \t-re \".*info registers all\\r\\n\" {\n \t    verbose -log \"Skip to first register\"\n@@ -107,7 +111,7 @@ foreach rgroup {all save restore} {\n \t    set count 0\n \t}\n \tif {($reg == \"unknown_csr\" || $reg == \"dscratch\") \\\n-\t\t&& $rgroup != \"all\"} {\n+\t\t&& $rgroup != \"all\" && $rgroup != \"x_all\"} {\n \t    gdb_assert {$count == 0} \\\n \t\t\"register $reg not seen in reggroup $rgroup\"\n \t} else {"
    }
  ]
}