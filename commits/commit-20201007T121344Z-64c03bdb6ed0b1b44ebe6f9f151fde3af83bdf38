{
  "sha": "64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjRjMDNiZGI2ZWQwYjFiNDRlYmU2ZjlmMTUxZmRlM2FmODNiZGYzOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-07T12:13:44Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-07T12:13:44Z"
    },
    "message": "gdb: make signal_catch_counts a static array\n\nI noticed that signal_catch_counts is a dynamically-allocated array of\nconstant size, allocated at startup an never freed.  This might as well\nbe a statically-allocated array.\n\ngdb/ChangeLog:\n\n\t* break-catch-sig.c (signal_catch_counts): Make a static arrray.\n\t(_initialize_break_catch_sig): Don't allocate array.\n\nChange-Id: I220321df5ad6c1d2664ec9d483eea2dc1c979afe",
    "tree": {
      "sha": "b6f6a5d392b81f6ec07afe1a4739899e4c96fbd3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b6f6a5d392b81f6ec07afe1a4739899e4c96fbd3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4b136f6f9aba2122868704bc18fd21e1d232392c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b136f6f9aba2122868704bc18fd21e1d232392c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b136f6f9aba2122868704bc18fd21e1d232392c"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 6,
    "deletions": 3
  },
  "files": [
    {
      "sha": "6a69e630852c4cb52ee36f112460822f40923555",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-07  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* break-catch-sig.c (signal_catch_counts): Make a static arrray.\n+\t(_initialize_break_catch_sig): Don't allocate array.\n+\n 2020-10-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* symtab.c (find_pc_line): Return unmapped addresses when the"
    },
    {
      "sha": "5c7cdf1fecc69d64a312c50eb07d810419b24cf4",
      "filename": "gdb/break-catch-sig.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38/gdb/break-catch-sig.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38/gdb/break-catch-sig.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/break-catch-sig.c?ref=64c03bdb6ed0b1b44ebe6f9f151fde3af83bdf38",
      "patch": "@@ -60,7 +60,7 @@ static struct breakpoint_ops signal_catchpoint_ops;\n \n /* Count of each signal.  */\n \n-static unsigned int *signal_catch_counts;\n+static unsigned int signal_catch_counts[GDB_SIGNAL_LAST];\n \n \f\n \n@@ -430,8 +430,6 @@ _initialize_break_catch_sig ()\n {\n   initialize_signal_catchpoint_ops ();\n \n-  signal_catch_counts = XCNEWVEC (unsigned int, GDB_SIGNAL_LAST);\n-\n   add_catch_command (\"signal\", _(\"\\\n Catch signals by their names and/or numbers.\\n\\\n Usage: catch signal [[NAME|NUMBER] [NAME|NUMBER]...|all]\\n\\"
    }
  ]
}