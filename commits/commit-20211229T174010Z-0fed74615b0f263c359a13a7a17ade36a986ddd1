{
  "sha": "0fed74615b0f263c359a13a7a17ade36a986ddd1",
  "node_id": "C_kwDOANOeidoAKDBmZWQ3NDYxNWIwZjI2M2MzNTlhMTNhN2ExN2FkZTM2YTk4NmRkZDE",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-25T05:11:06Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:40:10Z"
    },
    "message": "Send jit.c errors to gdb_stderr\n\njit.c writes some error messages to gdb_stdout, but using gdb_stderr\nis better.  This is part of PR gdb/7233.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=7233",
    "tree": {
      "sha": "d272c8fa1d48563d38ed00c517cf77ac933e226f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d272c8fa1d48563d38ed00c517cf77ac933e226f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0fed74615b0f263c359a13a7a17ade36a986ddd1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0fed74615b0f263c359a13a7a17ade36a986ddd1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0fed74615b0f263c359a13a7a17ade36a986ddd1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0fed74615b0f263c359a13a7a17ade36a986ddd1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "84b334970bb5892a1f50a3d8e9a569263a502224",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/84b334970bb5892a1f50a3d8e9a569263a502224",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/84b334970bb5892a1f50a3d8e9a569263a502224"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 13,
    "deletions": 10
  },
  "files": [
    {
      "sha": "477183f3e4b0cf61caf04be726e7eebd173227be",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0fed74615b0f263c359a13a7a17ade36a986ddd1/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0fed74615b0f263c359a13a7a17ade36a986ddd1/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=0fed74615b0f263c359a13a7a17ade36a986ddd1",
      "patch": "@@ -251,8 +251,8 @@ jit_read_descriptor (gdbarch *gdbarch,\n   err = target_read_memory (addr, desc_buf, desc_size);\n   if (err)\n     {\n-      printf_unfiltered (_(\"Unable to read JIT descriptor from \"\n-\t\t\t   \"remote memory\\n\"));\n+      fprintf_unfiltered (gdb_stderr, _(\"Unable to read JIT descriptor from \"\n+\t\t\t\t\t\"remote memory\\n\"));\n       return false;\n     }\n \n@@ -719,15 +719,16 @@ jit_bfd_try_read_symtab (struct jit_code_entry *code_entry,\n       (code_entry->symfile_addr, code_entry->symfile_size, gnutarget));\n   if (nbfd == NULL)\n     {\n-      puts_unfiltered (_(\"Error opening JITed symbol file, ignoring it.\\n\"));\n+      fputs_unfiltered (_(\"Error opening JITed symbol file, ignoring it.\\n\"),\n+\t\t\tgdb_stderr);\n       return;\n     }\n \n   /* Check the format.  NOTE: This initializes important data that GDB uses!\n      We would segfault later without this line.  */\n   if (!bfd_check_format (nbfd.get (), bfd_object))\n     {\n-      printf_unfiltered (_(\"\\\n+      fprintf_unfiltered (gdb_stderr, _(\"\\\n JITed symbol file is not an object file, ignoring it.\\n\"));\n       return;\n     }\n@@ -1138,9 +1139,10 @@ jit_inferior_init (inferior *inf)\n       /* Check that the version number agrees with that we support.  */\n       if (descriptor.version != 1)\n \t{\n-\t  printf_unfiltered (_(\"Unsupported JIT protocol version %ld \"\n-\t\t\t       \"in descriptor (expected 1)\\n\"),\n-\t\t\t     (long) descriptor.version);\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Unsupported JIT protocol version %ld \"\n+\t\t\t\t\"in descriptor (expected 1)\\n\"),\n+\t\t\t      (long) descriptor.version);\n \t  continue;\n \t}\n \n@@ -1229,9 +1231,10 @@ jit_event_handler (gdbarch *gdbarch, objfile *jiter)\n       {\n \tobjfile *jited = jit_find_objf_with_entry_addr (entry_addr);\n \tif (jited == nullptr)\n-\t  printf_unfiltered (_(\"Unable to find JITed code \"\n-\t\t\t       \"entry at address: %s\\n\"),\n-\t\t\t     paddress (gdbarch, entry_addr));\n+\t  fprintf_unfiltered (gdb_stderr,\n+\t\t\t      _(\"Unable to find JITed code \"\n+\t\t\t\t\"entry at address: %s\\n\"),\n+\t\t\t      paddress (gdbarch, entry_addr));\n \telse\n \t  jited->unlink ();\n "
    }
  ]
}