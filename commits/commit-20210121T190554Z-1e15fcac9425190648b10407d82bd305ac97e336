{
  "sha": "1e15fcac9425190648b10407d82bd305ac97e336",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWUxNWZjYWM5NDI1MTkwNjQ4YjEwNDA3ZDgyYmQzMDVhYzk3ZTMzNg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T19:05:54Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T19:05:54Z"
    },
    "message": "gdb: convert bfd-cache to new-style debug macros\n\ngdb/ChangeLog:\n\n\t* gdb_bfd.c (bfd_cache_debug_printf): New, use throughout file.\n\nChange-Id: Ie29948d82adfae7edb3cdcbd61f59a66892fcc99",
    "tree": {
      "sha": "3179c2d0ae9635a0679088b312397bef2b694f80",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3179c2d0ae9635a0679088b312397bef2b694f80"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1e15fcac9425190648b10407d82bd305ac97e336",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e15fcac9425190648b10407d82bd305ac97e336",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1e15fcac9425190648b10407d82bd305ac97e336",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e15fcac9425190648b10407d82bd305ac97e336/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "439706e6a907b54658714a358b220febc63a0182",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/439706e6a907b54658714a358b220febc63a0182",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/439706e6a907b54658714a358b220febc63a0182"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 25,
    "deletions": 29
  },
  "files": [
    {
      "sha": "ea92bcbf4dd273e9263edc8a5b1e1a8bc01f2b14",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e15fcac9425190648b10407d82bd305ac97e336/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e15fcac9425190648b10407d82bd305ac97e336/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1e15fcac9425190648b10407d82bd305ac97e336",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-21  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* gdb_bfd.c (bfd_cache_debug_printf): New, use throughout file.\n+\n 2021-01-21  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* ser-tcp.c (wait_for_connect): Use interruptible_select instead"
    },
    {
      "sha": "3312197acd5e48dde2bef4a56b2dc3fb5b2442ee",
      "filename": "gdb/gdb_bfd.c",
      "status": "modified",
      "additions": 21,
      "deletions": 29,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e15fcac9425190648b10407d82bd305ac97e336/gdb/gdb_bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e15fcac9425190648b10407d82bd305ac97e336/gdb/gdb_bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_bfd.c?ref=1e15fcac9425190648b10407d82bd305ac97e336",
      "patch": "@@ -138,6 +138,11 @@ show_bfd_sharing  (struct ui_file *file, int from_tty,\n \n static bool debug_bfd_cache;\n \n+/* Print an \"bfd-cache\" debug statement.  */\n+\n+#define bfd_cache_debug_printf(fmt, ...) \\\n+  debug_prefixed_printf_cond (debug_bfd_cache, \"bfd-cache\", fmt, ##__VA_ARGS__)\n+\n static void\n show_bfd_cache_debug (struct ui_file *file, int from_tty,\n \t\t      struct cmd_list_element *c, const char *value)\n@@ -529,10 +534,7 @@ gdb_bfd_open (const char *name, const char *target, int fd,\n   if (fstat (fd, &st) < 0)\n     {\n       /* Weird situation here -- don't cache if we can't stat.  */\n-      if (debug_bfd_cache)\n-\tfprintf_unfiltered (gdb_stdlog,\n-\t\t\t    \"Could not stat %s - not caching\\n\",\n-\t\t\t    name);\n+      bfd_cache_debug_printf (\"Could not stat %s - not caching\", name);\n       abfd = bfd_fopen (name, target, FOPEN_RB, fd);\n       if (abfd == nullptr)\n \treturn nullptr;\n@@ -553,11 +555,9 @@ gdb_bfd_open (const char *name, const char *target, int fd,\n   abfd = (struct bfd *) htab_find_with_hash (gdb_bfd_cache, &search, hash);\n   if (bfd_sharing && abfd != NULL)\n     {\n-      if (debug_bfd_cache)\n-\tfprintf_unfiltered (gdb_stdlog,\n-\t\t\t    \"Reusing cached bfd %s for %s\\n\",\n-\t\t\t    host_address_to_string (abfd),\n-\t\t\t    bfd_get_filename (abfd));\n+      bfd_cache_debug_printf (\"Reusing cached bfd %s for %s\",\n+\t\t\t      host_address_to_string (abfd),\n+\t\t\t      bfd_get_filename (abfd));\n       close (fd);\n       return gdb_bfd_ref_ptr::new_reference (abfd);\n     }\n@@ -566,11 +566,9 @@ gdb_bfd_open (const char *name, const char *target, int fd,\n   if (abfd == NULL)\n     return NULL;\n \n-  if (debug_bfd_cache)\n-    fprintf_unfiltered (gdb_stdlog,\n-\t\t\t\"Creating new bfd %s for %s\\n\",\n-\t\t\thost_address_to_string (abfd),\n-\t\t\tbfd_get_filename (abfd));\n+  bfd_cache_debug_printf (\"Creating new bfd %s for %s\",\n+\t\t\t  host_address_to_string (abfd),\n+\t\t\t  bfd_get_filename (abfd));\n \n   if (bfd_sharing)\n     {\n@@ -646,11 +644,9 @@ gdb_bfd_ref (struct bfd *abfd)\n \n   gdata = (struct gdb_bfd_data *) bfd_usrdata (abfd);\n \n-  if (debug_bfd_cache)\n-    fprintf_unfiltered (gdb_stdlog,\n-\t\t\t\"Increase reference count on bfd %s (%s)\\n\",\n-\t\t\thost_address_to_string (abfd),\n-\t\t\tbfd_get_filename (abfd));\n+  bfd_cache_debug_printf (\"Increase reference count on bfd %s (%s)\",\n+\t\t\t  host_address_to_string (abfd),\n+\t\t\t  bfd_get_filename (abfd));\n \n   if (gdata != NULL)\n     {\n@@ -681,19 +677,15 @@ gdb_bfd_unref (struct bfd *abfd)\n   gdata->refc -= 1;\n   if (gdata->refc > 0)\n     {\n-      if (debug_bfd_cache)\n-\tfprintf_unfiltered (gdb_stdlog,\n-\t\t\t    \"Decrease reference count on bfd %s (%s)\\n\",\n-\t\t\t    host_address_to_string (abfd),\n-\t\t\t    bfd_get_filename (abfd));\n+      bfd_cache_debug_printf (\"Decrease reference count on bfd %s (%s)\",\n+\t\t\t      host_address_to_string (abfd),\n+\t\t\t      bfd_get_filename (abfd));\n       return;\n     }\n \n-  if (debug_bfd_cache)\n-    fprintf_unfiltered (gdb_stdlog,\n-\t\t\t\"Delete final reference count on bfd %s (%s)\\n\",\n-\t\t\thost_address_to_string (abfd),\n-\t\t\tbfd_get_filename (abfd));\n+  bfd_cache_debug_printf (\"Delete final reference count on bfd %s (%s)\",\n+\t\t\t  host_address_to_string (abfd),\n+\t\t\t  bfd_get_filename (abfd));\n \n   archive_bfd = gdata->archive_bfd;\n   search.filename = bfd_get_filename (abfd);"
    }
  ]
}