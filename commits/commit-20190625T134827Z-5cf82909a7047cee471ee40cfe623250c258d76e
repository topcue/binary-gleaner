{
  "sha": "5cf82909a7047cee471ee40cfe623250c258d76e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWNmODI5MDlhNzA0N2NlZTQ3MWVlNDBjZmU2MjMyNTBjMjU4ZDc2ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T17:08:43Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:27Z"
    },
    "message": "Create tui_disasm_window\n\nThis introduces the new tui_disasm_window class, which represents a\ndisassembly window.  It shares a lot of behavior with the source\nwindow, so a new tui_source_window_base class is also created.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-data.h (struct tui_source_window_base): New struct.\n\t(struct tui_source_window): Derive from tui_source_window_base.\n\t(struct tui_disasm_window): New struct.\n\t* tui/tui-data.c (tui_source_window_base::clear_detail): Rename\n\tfrom tui_source_window::clear_detail.\n\t(tui_source_window_base): Rename from tui_source_window.\n\t(~tui_source_window_base): Rename from ~tui_source_window.\n\t(tui_alloc_win_info): Create a tui_disasm_window.",
    "tree": {
      "sha": "79f9a90053ccbe55a63b41cc93ccdd1f19aca95e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/79f9a90053ccbe55a63b41cc93ccdd1f19aca95e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5cf82909a7047cee471ee40cfe623250c258d76e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5cf82909a7047cee471ee40cfe623250c258d76e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5cf82909a7047cee471ee40cfe623250c258d76e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5cf82909a7047cee471ee40cfe623250c258d76e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ee1d42d6c1a05725868a8ea4855eaa81cbbda635",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee1d42d6c1a05725868a8ea4855eaa81cbbda635",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ee1d42d6c1a05725868a8ea4855eaa81cbbda635"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 51,
    "deletions": 8
  },
  "files": [
    {
      "sha": "0525b03ddd9a5ae83c4767bfb56b33c91cfe35cc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5cf82909a7047cee471ee40cfe623250c258d76e",
      "patch": "@@ -1,3 +1,14 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-data.h (struct tui_source_window_base): New struct.\n+\t(struct tui_source_window): Derive from tui_source_window_base.\n+\t(struct tui_disasm_window): New struct.\n+\t* tui/tui-data.c (tui_source_window_base::clear_detail): Rename\n+\tfrom tui_source_window::clear_detail.\n+\t(tui_source_window_base): Rename from tui_source_window.\n+\t(~tui_source_window_base): Rename from ~tui_source_window.\n+\t(tui_alloc_win_info): Create a tui_disasm_window.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-data.h (struct tui_source_window)"
    },
    {
      "sha": "1edf40b71b3613dc08dc9ebf60447745bfcbdf41",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=5cf82909a7047cee471ee40cfe623250c258d76e",
      "patch": "@@ -176,7 +176,7 @@ tui_add_to_source_windows (struct tui_win_info *win_info)\n /* See tui-data.h.  */\n \n void\n-tui_source_window::clear_detail ()\n+tui_source_window_base::clear_detail ()\n {\n   detail.source_info.gdbarch = NULL;\n   detail.source_info.start_line_or_addr.loa = LOA_ADDRESS;\n@@ -503,7 +503,7 @@ tui_win_info::tui_win_info (enum tui_win_type type)\n   tui_init_generic_part (&generic);\n }\n \n-tui_source_window::tui_source_window (enum tui_win_type type)\n+tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n   : tui_win_info (type)\n {\n   gdb_assert (type == SRC_WIN || type == DISASSEM_WIN);\n@@ -539,8 +539,10 @@ tui_alloc_win_info (enum tui_win_type type)\n   switch (type)\n     {\n     case SRC_WIN:\n+      return new tui_source_window ();\n+\n     case DISASSEM_WIN:\n-      return new tui_source_window (type);\n+      return new tui_disasm_window ();\n \n     case DATA_WIN:\n       return new tui_data_window ();\n@@ -617,7 +619,7 @@ tui_add_content_elements (struct tui_gen_win_info *win_info,\n   return index_start;\n }\n \n-tui_source_window::~tui_source_window ()\n+tui_source_window_base::~tui_source_window_base ()\n {\n   if (detail.source_info.fullname)\n     {"
    },
    {
      "sha": "e09aad60b527d1f9a404259da064b869625d0464",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 34,
      "deletions": 4,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5cf82909a7047cee471ee40cfe623250c258d76e/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=5cf82909a7047cee471ee40cfe623250c258d76e",
      "patch": "@@ -291,15 +291,45 @@ struct tui_win_info\n   int is_highlighted = 0;\n };\n \n-struct tui_source_window : public tui_win_info\n+/* The base class for all source-like windows, namely the source and\n+   disassembly windows.  */\n+\n+struct tui_source_window_base : public tui_win_info\n {\n-  explicit tui_source_window (enum tui_win_type type);\n-  ~tui_source_window () override;\n-  DISABLE_COPY_AND_ASSIGN (tui_source_window);\n+protected:\n+  explicit tui_source_window_base (enum tui_win_type type);\n+  ~tui_source_window_base () override;\n+  DISABLE_COPY_AND_ASSIGN (tui_source_window_base);\n+\n+public:\n \n   void clear_detail () override;\n };\n \n+/* A TUI source window.  */\n+\n+struct tui_source_window : public tui_source_window_base\n+{\n+  tui_source_window ()\n+    : tui_source_window_base (SRC_WIN)\n+  {\n+  }\n+\n+  DISABLE_COPY_AND_ASSIGN (tui_source_window);\n+};\n+\n+/* A TUI disassembly window.  */\n+\n+struct tui_disasm_window : public tui_source_window_base\n+{\n+  tui_disasm_window ()\n+    : tui_source_window_base (DISASSEM_WIN)\n+  {\n+  }\n+\n+  DISABLE_COPY_AND_ASSIGN (tui_disasm_window);\n+};\n+\n struct tui_data_window : public tui_win_info\n {\n   tui_data_window ();"
    }
  ]
}