{
  "sha": "a7aba2668a7b392182e296392d8e19516e1a6ec5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTdhYmEyNjY4YTdiMzkyMTgyZTI5NjM5MmQ4ZTE5NTE2ZTFhNmVjNQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-02T14:46:38Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-10-02T14:46:38Z"
    },
    "message": "gdb: remove arguments from inferior_created observable\n\nI noticed that non of the listeners of the inferior_created observable\nused either of the arguments.  Remove them.  This in turn allows\nremoving the target parameter of post_create_inferior.\n\nTested only by rebuilding.\n\ngdb/ChangeLog:\n\n\t* observable.h <inferior_created>: Remove parameters.  Update all\n\tlisteners.\n\t* inferior.h (post_create_inferior): Remove target parameter.\n\tUpdate all callers.\n\nChange-Id: I8944cefdc4447ed5347dc927b75abf1e7a0e27e6",
    "tree": {
      "sha": "90bf9ad0ff14856658d698c150dbb479350b7918",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90bf9ad0ff14856658d698c150dbb479350b7918"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a7aba2668a7b392182e296392d8e19516e1a6ec5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7aba2668a7b392182e296392d8e19516e1a6ec5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a7aba2668a7b392182e296392d8e19516e1a6ec5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7aba2668a7b392182e296392d8e19516e1a6ec5/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3ee6f75d058c0747368e0631735e279174b1f918",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ee6f75d058c0747368e0631735e279174b1f918",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ee6f75d058c0747368e0631735e279174b1f918"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 24,
    "deletions": 18
  },
  "files": [
    {
      "sha": "8788c60899f7f4a34d10eeccd842a7e16f6d40ee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -1,3 +1,10 @@\n+2020-10-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* observable.h <inferior_created>: Remove parameters.  Update all\n+\tlisteners.\n+\t* inferior.h (post_create_inferior): Remove target parameter.\n+\tUpdate all callers.\n+\n 2020-10-02  Nitika Achra  <Nitika.Achra@amd.com>\n \n \t* dwarf2/macro.c (dwarf_decode_macro_bytes): Handle DW_MACRO_define_strx"
    },
    {
      "sha": "e83707fd7c50bedae5a0ab75ef33d2301c3dd114",
      "filename": "gdb/bsd-uthread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/bsd-uthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/bsd-uthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-uthread.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -263,7 +263,7 @@ bsd_uthread_deactivate (void)\n }\n \n static void\n-bsd_uthread_inferior_created (struct target_ops *ops, int from_tty)\n+bsd_uthread_inferior_created ()\n {\n   bsd_uthread_activate (NULL);\n }"
    },
    {
      "sha": "e82c183eae5a32748338edb97b00c1b5bdcd828c",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -516,7 +516,7 @@ core_target_open (const char *arg, int from_tty)\n   if (exec_bfd == nullptr)\n     locate_exec_from_corefile_build_id (core_bfd, from_tty);\n \n-  post_create_inferior (target, from_tty);\n+  post_create_inferior (from_tty);\n \n   /* Now go through the target stack looking for threads since there\n      may be a thread_stratum target loaded on top of target core by"
    },
    {
      "sha": "1952d2eb6f305a040fbc1bc5db8b609e5bde871f",
      "filename": "gdb/dummy-frame.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/dummy-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/dummy-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dummy-frame.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -273,7 +273,7 @@ find_dummy_frame_dtor (dummy_frame_dtor_ftype *dtor, void *dtor_data)\n    them up at least once whenever we start a new inferior.  */\n \n static void\n-cleanup_dummy_frames (struct target_ops *target, int from_tty)\n+cleanup_dummy_frames ()\n {\n   while (dummy_frame_stack != NULL)\n     remove_dummy_frame (&dummy_frame_stack);"
    },
    {
      "sha": "d8f95977a18c82f1d2aee635221e2d1e6c5d275d",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -279,7 +279,7 @@ strip_bg_char (const char *args, int *bg_char_p)\n    should be stopped.  */\n \n void\n-post_create_inferior (struct target_ops *target, int from_tty)\n+post_create_inferior (int from_tty)\n {\n \n   /* Be sure we own the terminal in case write operations are performed.  */ \n@@ -347,7 +347,7 @@ post_create_inferior (struct target_ops *target, int from_tty)\n      if the now pushed target supports hardware watchpoints.  */\n   breakpoint_re_set ();\n \n-  gdb::observers::inferior_created.notify (target, from_tty);\n+  gdb::observers::inferior_created.notify ();\n }\n \n /* Kill the inferior if already running.  This function is designed\n@@ -520,7 +520,7 @@ run_command_1 (const char *args, int from_tty, enum run_how run_how)\n \n   /* Pass zero for FROM_TTY, because at this point the \"run\" command\n      has done its thing; now we are setting up the running program.  */\n-  post_create_inferior (current_top_target (), 0);\n+  post_create_inferior (0);\n \n   /* Queue a pending event so that the program stops immediately.  */\n   if (run_how == RUN_STOP_AT_FIRST_INSN)\n@@ -2432,7 +2432,7 @@ setup_inferior (int from_tty)\n   /* Take any necessary post-attaching actions for this platform.  */\n   target_post_attach (inferior_ptid.pid ());\n \n-  post_create_inferior (current_top_target (), from_tty);\n+  post_create_inferior (from_tty);\n }\n \n /* What to do after the first program stops after attaching.  */"
    },
    {
      "sha": "d016161fb05194b95933b80cb2dc80655c6297a1",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -196,7 +196,7 @@ extern ptid_t gdb_startup_inferior (pid_t pid, int num_traps);\n \n extern void setup_inferior (int from_tty);\n \n-extern void post_create_inferior (struct target_ops *, int);\n+extern void post_create_inferior (int from_tty);\n \n extern void attach_command (const char *, int);\n "
    },
    {
      "sha": "a150585bd5adf7f18dce9ff532d02f92ea626eee",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -3185,7 +3185,7 @@ start_remote (int from_tty)\n   /* Now that the inferior has stopped, do any bookkeeping like\n      loading shared libraries.  We want to do this before normal_stop,\n      so that the displayed frame is up to date.  */\n-  post_create_inferior (current_top_target (), from_tty);\n+  post_create_inferior (from_tty);\n \n   normal_stop ();\n }"
    },
    {
      "sha": "9298ac0f4877a87e57b35792f5af73132c65d409",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -1232,7 +1232,7 @@ jit_inferior_init (struct gdbarch *gdbarch)\n /* inferior_created observer.  */\n \n static void\n-jit_inferior_created (struct target_ops *ops, int from_tty)\n+jit_inferior_created ()\n {\n   jit_inferior_created_hook ();\n }"
    },
    {
      "sha": "c625cefead2f662875ead99180383ba8da605cbf",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -1310,7 +1310,7 @@ check_pid_namespace_match (void)\n    This handles the case of debugging statically linked executables.  */\n \n static void\n-thread_db_inferior_created (struct target_ops *target, int from_tty)\n+thread_db_inferior_created ()\n {\n   check_pid_namespace_match ();\n   check_for_thread_db ();"
    },
    {
      "sha": "e4fc2faecb208eed0d165c58a6fcd59208c3fd13",
      "filename": "gdb/m68k-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/m68k-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/m68k-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m68k-linux-tdep.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -211,7 +211,7 @@ struct m68k_linux_sigtramp_info\n static int target_is_uclinux;\n \n static void\n-m68k_linux_inferior_created (struct target_ops *objfile, int from_tty)\n+m68k_linux_inferior_created ()\n {\n   /* Record that we will need to re-evaluate whether we are running on a\n      uClinux or normal GNU/Linux target (see m68k_linux_get_sigtramp_info).  */"
    },
    {
      "sha": "d9d0f149f6f520275c97465893932bd2a39978dd",
      "filename": "gdb/observable.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/observable.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/observable.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/observable.h?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -87,8 +87,7 @@ extern observable<> executable_changed;\n    instruction.  For 'attach' and 'core', gdb calls this observer\n    immediately after connecting to the inferior, and before any\n    information on the inferior has been printed.  */\n-extern observable<struct target_ops */* target */,\n-\t\t  int /* from_tty */> inferior_created;\n+extern observable<> inferior_created;\n \n /* The status of process record for inferior inferior in gdb has\n    changed.  The process record is started if STARTED is true, and"
    },
    {
      "sha": "a7c59ad325a36fa5609e8ce8e9531997f79c952d",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -657,7 +657,7 @@ ravenscar_thread_target::xfer_partial (enum target_object object,\n /* Observer on inferior_created: push ravenscar thread stratum if needed.  */\n \n static void\n-ravenscar_inferior_created (struct target_ops *target, int from_tty)\n+ravenscar_inferior_created ()\n {\n   const char *err_msg;\n "
    },
    {
      "sha": "5f212e10323f10360f4a361e8abcf81b85f0c9fa",
      "filename": "gdb/symfile-mem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/symfile-mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/symfile-mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-mem.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -157,7 +157,7 @@ add_symbol_file_from_memory_command (const char *args, int from_tty)\n    This function is called via the inferior_created observer.  */\n \n static void\n-add_vsyscall_page (struct target_ops *target, int from_tty)\n+add_vsyscall_page ()\n {\n   struct mem_range vsyscall_range;\n "
    },
    {
      "sha": "0c4f66dd5816fc1a6e5bd6ab5139643118e58f44",
      "filename": "gdb/tracectf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/tracectf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/tracectf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracectf.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -1175,7 +1175,7 @@ ctf_target_open (const char *dirname, int from_tty)\n   merge_uploaded_trace_state_variables (&uploaded_tsvs);\n   merge_uploaded_tracepoints (&uploaded_tps);\n \n-  post_create_inferior (&ctf_ops, from_tty);\n+  post_create_inferior (from_tty);\n }\n \n /* This is the implementation of target_ops method to_close.  Destroy"
    },
    {
      "sha": "9cf68c5cb6ec9204b41cb384674bb8a61e0816f6",
      "filename": "gdb/tracefile-tfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/tracefile-tfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7aba2668a7b392182e296392d8e19516e1a6ec5/gdb/tracefile-tfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile-tfile.c?ref=a7aba2668a7b392182e296392d8e19516e1a6ec5",
      "patch": "@@ -571,7 +571,7 @@ tfile_target_open (const char *arg, int from_tty)\n \n   merge_uploaded_tracepoints (&uploaded_tps);\n \n-  post_create_inferior (&tfile_ops, from_tty);\n+  post_create_inferior (from_tty);\n }\n \n /* Interpret the given line from the definitions part of the trace"
    }
  ]
}