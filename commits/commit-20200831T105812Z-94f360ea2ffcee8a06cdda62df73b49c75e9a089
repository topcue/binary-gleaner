{
  "sha": "94f360ea2ffcee8a06cdda62df73b49c75e9a089",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTRmMzYwZWEyZmZjZWU4YTA2Y2RkYTYyZGY3M2I0OWM3NWU5YTA4OQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T07:46:21Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-31T10:58:12Z"
    },
    "message": "PR26502 UBSAN: tc-tic6x.c left shift of negative value\n\n\tPR 26502\n\t* config/tc-tic6x.c (md_apply_fix): Use unsigned variables.",
    "tree": {
      "sha": "8eca1335768080c26973babfa7cb9aa40a4a9840",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8eca1335768080c26973babfa7cb9aa40a4a9840"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/94f360ea2ffcee8a06cdda62df73b49c75e9a089",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94f360ea2ffcee8a06cdda62df73b49c75e9a089",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/94f360ea2ffcee8a06cdda62df73b49c75e9a089",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94f360ea2ffcee8a06cdda62df73b49c75e9a089/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8659fff005fd09cebaa1af5a76962ec77cce320c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8659fff005fd09cebaa1af5a76962ec77cce320c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8659fff005fd09cebaa1af5a76962ec77cce320c"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 26,
    "deletions": 21
  },
  "files": [
    {
      "sha": "1976c1098958e1aa14f94b5be01e71a50355210f",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94f360ea2ffcee8a06cdda62df73b49c75e9a089/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94f360ea2ffcee8a06cdda62df73b49c75e9a089/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=94f360ea2ffcee8a06cdda62df73b49c75e9a089",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26502\n+\t* config/tc-tic6x.c (md_apply_fix): Use unsigned variables.\n+\n 2020-08-31  Alan Modra  <amodra@gmail.com>\n \n \tPR 26497"
    },
    {
      "sha": "904d257ac7f5d2badbbf71865facf79caa2c8696",
      "filename": "gas/config/tc-tic6x.c",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94f360ea2ffcee8a06cdda62df73b49c75e9a089/gas/config/tc-tic6x.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94f360ea2ffcee8a06cdda62df73b49c75e9a089/gas/config/tc-tic6x.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-tic6x.c?ref=94f360ea2ffcee8a06cdda62df73b49c75e9a089",
      "patch": "@@ -3775,7 +3775,7 @@ md_assemble (char *str)\n void\n md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n {\n-  offsetT value = *valP;\n+  valueT value = *valP;\n   char *buf = fixP->fx_where + fixP->fx_frag->fr_literal;\n \n   value = SEXT (value);\n@@ -3805,7 +3805,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_16:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  if (value < -0x8000 || value > 0xffff)\n+\t  if (value + 0x8000 > 0xffff + 0x8000)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"value too large for 2-byte field\"));\n \t  md_number_to_chars (buf, value, 2);\n@@ -3815,7 +3815,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_8:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  if (value < -0x80 || value > 0xff)\n+\t  if (value + 0x80 > 0xff + 0x80)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"value too large for 1-byte field\"));\n \t  *buf = value;\n@@ -3831,7 +3831,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_SBR_GOT_L16_W:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \t  int shift;\n \n \t  switch (fixP->fx_r_type)\n@@ -3851,7 +3851,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t    }\n \n \t  MODIFY_VALUE (newval, value, shift, 7, 16);\n-\t  if ((value < -0x8000 || value > 0x7fff)\n+\t  if ((value + 0x8000 > 0x7fff + 0x8000)\n \t      && (fixP->fx_r_type == BFD_RELOC_C6000_ABS_S16\n \t\t  || fixP->fx_r_type == BFD_RELOC_C6000_SBR_S16))\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n@@ -3872,7 +3872,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_SBR_GOT_H16_W:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \t  int shift;\n \n \t  switch (fixP->fx_r_type)\n@@ -3903,7 +3903,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_PCR_L16:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \t  int shift = fixP->fx_r_type == BFD_RELOC_C6000_PCR_H16 ? 16 : 0;\n \n \t  MODIFY_VALUE (newval, value, shift, 7, 16);\n@@ -3915,10 +3915,10 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_SBR_U15_B:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  MODIFY_VALUE (newval, value, 0, 8, 15);\n-\t  if (value < 0 || value > 0x7fff)\n+\t  if (value > 0x7fff)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"immediate offset out of range\"));\n \n@@ -3929,7 +3929,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_SBR_U15_H:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  /* Constant ADDA operands, processed as constant when the\n \t     instruction is parsed, are encoded as-is rather than\n@@ -3945,7 +3945,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t  if (value & 1)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"immediate offset not 2-byte-aligned\"));\n-\t  if (value < 0 || value > 0xfffe)\n+\t  if (value > 0xfffe)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"immediate offset out of range\"));\n \n@@ -3957,7 +3957,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_SBR_GOT_U15_W:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  /* Constant ADDA operands, processed as constant when the\n \t     instruction is parsed, are encoded as-is rather than\n@@ -3973,7 +3973,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n \t  if (value & 3)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"immediate offset not 4-byte-aligned\"));\n-\t  if (value < 0 || value > 0x1fffc)\n+\t  if (value > 0x1fffc)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"immediate offset out of range\"));\n \n@@ -3994,14 +3994,14 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_PCR_S21:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  MODIFY_VALUE (newval, value, 2, 7, 21);\n \n \t  if (value & 3)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset not 4-byte-aligned\"));\n-\t  if (value < -0x400000 || value > 0x3ffffc)\n+\t  if (value + 0x400000 > 0x3ffffc + 0x400000)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset out of range\"));\n \n@@ -4012,14 +4012,14 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_PCR_S12:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  MODIFY_VALUE (newval, value, 2, 16, 12);\n \n \t  if (value & 3)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset not 4-byte-aligned\"));\n-\t  if (value < -0x2000 || value > 0x1ffc)\n+\t  if (value + 0x2000 > 0x1ffc + 0x2000)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset out of range\"));\n \n@@ -4030,14 +4030,14 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_PCR_S10:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  MODIFY_VALUE (newval, value, 2, 13, 10);\n \n \t  if (value & 3)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset not 4-byte-aligned\"));\n-\t  if (value < -0x800 || value > 0x7fc)\n+\t  if (value + 0x800 > 0x7fc + 0x800)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset out of range\"));\n \n@@ -4048,14 +4048,14 @@ md_apply_fix (fixS *fixP, valueT *valP, segT seg ATTRIBUTE_UNUSED)\n     case BFD_RELOC_C6000_PCR_S7:\n       if (fixP->fx_done || !seg->use_rela_p)\n \t{\n-\t  offsetT newval = md_chars_to_number (buf, 4);\n+\t  valueT newval = md_chars_to_number (buf, 4);\n \n \t  MODIFY_VALUE (newval, value, 2, 16, 7);\n \n \t  if (value & 3)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset not 4-byte-aligned\"));\n-\t  if (value < -0x100 || value > 0xfc)\n+\t  if (value + 0x100 > 0xfc + 0x100)\n \t    as_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t\t  _(\"PC-relative offset out of range\"));\n "
    }
  ]
}