{
  "sha": "41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDFkYTA4MjIzOGJiYzNiYmU4YmFjMWIwZmJjYWI3MTZmZTdjODdmMg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-10T02:52:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-10T03:24:01Z"
    },
    "message": "objdump disassembly of files without symbols\n\nubsan complains about memcpy with a NULL src even when size is zero.\n\n\t* objdump.c (disassemble_section): Don't call qsort unless\n\tsym count is at least two.\n\t(disassemble_data): Don't call memcpy with NULL src.",
    "tree": {
      "sha": "9d480e5a61bea83f6ae61724f3a81e38ad12b05d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d480e5a61bea83f6ae61724f3a81e38ad12b05d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b5e16ffd3e8886fa3fb90d63e3200fcc373848e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b5e16ffd3e8886fa3fb90d63e3200fcc373848e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b5e16ffd3e8886fa3fb90d63e3200fcc373848e"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 14,
    "deletions": 4
  },
  "files": [
    {
      "sha": "fc456a2259d82c54ef74586dec8f3efcbe93e60f",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (disassemble_section): Don't call qsort unless\n+\tsym count is at least two.\n+\t(disassemble_data): Don't call memcpy with NULL src.\n+\n 2020-03-09  Alan Modra  <amodra@gmail.com>\n \n \tPR 25645"
    },
    {
      "sha": "211be9239f885739a0d4cc188db12e1fa1423e3b",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41da082238bbc3bbe8bac1b0fbcab716fe7c87f2/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=41da082238bbc3bbe8bac1b0fbcab716fe7c87f2",
      "patch": "@@ -3109,7 +3109,8 @@ disassemble_section (bfd *abfd, asection *section, void *inf)\n \n   /* Sort the symbols into value and section order.  */\n   compare_section = section;\n-  qsort (sorted_syms, sorted_symcount, sizeof (asymbol *), compare_symbols);\n+  if (sorted_symcount > 1)\n+    qsort (sorted_syms, sorted_symcount, sizeof (asymbol *), compare_symbols);\n \n   /* Skip over the relocs belonging to addresses below the\n      start address.  */\n@@ -3376,10 +3377,13 @@ disassemble_data (bfd *abfd)\n   sorted_symcount = symcount ? symcount : dynsymcount;\n   sorted_syms = (asymbol **) xmalloc ((sorted_symcount + synthcount)\n                                       * sizeof (asymbol *));\n-  memcpy (sorted_syms, symcount ? syms : dynsyms,\n-\t  sorted_symcount * sizeof (asymbol *));\n+  if (sorted_symcount != 0)\n+    {\n+      memcpy (sorted_syms, symcount ? syms : dynsyms,\n+\t      sorted_symcount * sizeof (asymbol *));\n \n-  sorted_symcount = remove_useless_symbols (sorted_syms, sorted_symcount);\n+      sorted_symcount = remove_useless_symbols (sorted_syms, sorted_symcount);\n+    }\n \n   for (i = 0; i < synthcount; ++i)\n     {"
    }
  ]
}