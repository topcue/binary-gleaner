{
  "sha": "abdd4204a2f80798e5e517aeaa0955778c728bdf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWJkZDQyMDRhMmY4MDc5OGU1ZTUxN2FlYWEwOTU1Nzc4YzcyOGJkZg==",
  "commit": {
    "author": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-07-20T23:13:50Z"
    },
    "committer": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-07-29T19:38:47Z"
    },
    "message": "Fix for gdb.tui/tui-layout-asm.exp\n\nThe width of the window is too narrow to display the entire assembly line.\nThe width of the columns in the window changes as the test walks thru the\nterminal window output.  The column change results in the first and second\nreads of the same line to differ thus causing the test to fail.  Increasing\nthe width of the window keeps the column width consistent thru the test.\n\nIf the test fails, the added check prints an message to the log file if\nthe failure may be due to the window being too narrow.\n\ngdb/testsuite/ChangeLog\n\n\t* gdb.tui/tui-layout-asm.exp: Replace window width of 80 with the\n\ttui_asm_window_width variable for the width. Add if\n\tcount_whitespace check.\n\t(count_whitespace): New proc",
    "tree": {
      "sha": "a02284fee993c56b36ba180c11247728e82f6a79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a02284fee993c56b36ba180c11247728e82f6a79"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/abdd4204a2f80798e5e517aeaa0955778c728bdf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/abdd4204a2f80798e5e517aeaa0955778c728bdf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/abdd4204a2f80798e5e517aeaa0955778c728bdf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/abdd4204a2f80798e5e517aeaa0955778c728bdf/comments",
  "author": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91ef1ea5428adfc8b2b13bd584e1791c9e59e804",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/91ef1ea5428adfc8b2b13bd584e1791c9e59e804"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 30,
    "deletions": 2
  },
  "files": [
    {
      "sha": "3ff5347f5edb80ffb98d50ac27fbb31aa5b563cf",
      "filename": "gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "status": "modified",
      "additions": 30,
      "deletions": 2,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/abdd4204a2f80798e5e517aeaa0955778c728bdf/gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/abdd4204a2f80798e5e517aeaa0955778c728bdf/gdb/testsuite/gdb.tui/tui-layout-asm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/tui-layout-asm.exp?ref=abdd4204a2f80798e5e517aeaa0955778c728bdf",
      "patch": "@@ -24,15 +24,23 @@ if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n     return -1\n }\n \n-Term::clean_restart 24 80 $testfile\n+# PPC currently needs a minimum window width of 90 to work correctly.\n+set tui_asm_window_width 90\n+\n+Term::clean_restart 24 ${tui_asm_window_width} $testfile\n if {![Term::prepare_for_tui]} {\n     unsupported \"TUI not supported\"\n     return\n }\n \n+# Helper proc, returns a count of the ' ' characters in STRING.\n+proc count_whitespace { string } {\n+    return [expr {[llength [split $string { }]] - 1}]\n+}\n+\n # This puts us into TUI mode, and should display the ASM window.\n Term::command_no_prompt_prefix \"layout asm\"\n-Term::check_box_contents \"check asm box contents\" 0 0 80 15 \"<main>\"\n+Term::check_box_contents \"check asm box contents\" 0 0 ${tui_asm_window_width} 15 \"<main>\"\n \n # Scroll the ASM window down using the down arrow key.  In an ideal\n # world we'd like to use PageDown here, but currently our terminal\n@@ -65,6 +73,26 @@ while (1) {\n \t    && [regexp $re_line [Term::get_line 1]]} {\n \t# We scrolled successfully.\n     } else {\n+\tif {[count_whitespace ${line}] != \\\n+\t\t[count_whitespace [Term::get_line 1]]} {\n+\t    # GDB's TUI assembler display will widen columns based on\n+\t    # the longest item that appears in a column on any line.\n+\t    # As we have just scrolled, and so revealed a new line, it\n+\t    # is possible that the width of some columns has changed.\n+\t    #\n+\t    # As a result it is possible that part of the line we were\n+\t    # expected to see in the output is now off the screen. And\n+\t    # this test will fail.\n+\t    #\n+\t    # This is unfortunate, but, right now, there's no easy way\n+\t    # to \"lock\" the format of the TUI assembler window.  The\n+\t    # only option appears to be making the window width wider,\n+\t    # this can be done by adjusting TUI_ASM_WINDOW_WIDTH.\n+\t    verbose -log \"WARNING: The following failure is probably due to the TUI window\"\n+\t    verbose -log \"         width.  See the comments in the test script for more\"\n+\t    verbose -log \"         details.\"\n+\t}\n+\n \tfail \"$testname (scroll failed)\"\n \tTerm::dump_screen\n \tbreak"
    }
  ]
}