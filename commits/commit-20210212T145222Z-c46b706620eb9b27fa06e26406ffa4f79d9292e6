{
  "sha": "c46b706620eb9b27fa06e26406ffa4f79d9292e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzQ2YjcwNjYyMGViOWIyN2ZhMDZlMjY0MDZmZmE0Zjc5ZDkyOTJlNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-02-12T14:52:22Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-02-12T14:52:22Z"
    },
    "message": "Change the readelf and objdump programs so that they will automatically follow links to separate debug info files.\n\n\t* configure.ac (follow-debug-links): Add option to enable or\n\tdisable the following of debug links by default.  Set the\n\tdefault for the option to be 'follow'.\n\t* dwarf.c (do_follow_links): Initialise with DEFAULT_FOR_FOLLOW_LINKS.\n\t(dwarf_select_sections_by_names): Add no-follow-links option.\n\t(dwarf_select_sections_by_letter): Add 'N' option.\n\t* objdump.c (usage): Add conditional text describing the\n\tfollow links option.\n\t(slurp_symtab): Ensure that there is a NULL entry at the end\n\tof the symbol table.\n\t(slurp_dynamic_symtab): Likewise.\n\t(dump_bfd): When extending the symbol table, ensure that there\n\tis still a NULL entry at the end.\n\t* readelf.c (usage): Add conditional text describing the\n\tfollow links option.\n\t* doc/binutils.texi: Update documentation for objcopy and\n\treadelf.\n\t* doc/debug.options.texi: Update documentation of the\n\tfollow-links option.\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/binutils-all/compress.exp: Add the -WN option to\n\tobjdump command lines that are not expecting to follow links.\n\t* testsuite/binutils-all/readelf.exp: Add the\n\t--debug-dump=no-follow-links option to tests that are not\n\texpecting to follow debug links.\n\ngas\t* testsuite/gas/mach-o/sections-1.d: Stop automatic debug link\n        following.\n\t* testsuite/gas/xgate/insns-dwarf2.d: Likewise.\n\nld\t* testsuite/ld-elf/sec64k.exp: Stop readelf from automatically\n\tfollowing debug links.",
    "tree": {
      "sha": "0ec6f7bf04f8c7d05eb71ec5698d847a09777965",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0ec6f7bf04f8c7d05eb71ec5698d847a09777965"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c46b706620eb9b27fa06e26406ffa4f79d9292e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c46b706620eb9b27fa06e26406ffa4f79d9292e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c46b706620eb9b27fa06e26406ffa4f79d9292e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c46b706620eb9b27fa06e26406ffa4f79d9292e6/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "96df3e28b835ccb5804bcca96f417761e5e8be67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96df3e28b835ccb5804bcca96f417761e5e8be67",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/96df3e28b835ccb5804bcca96f417761e5e8be67"
    }
  ],
  "stats": {
    "total": 230,
    "additions": 183,
    "deletions": 47
  },
  "files": [
    {
      "sha": "a717099426534ebb887bae0cefa58b449570ebbb",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,3 +1,33 @@\n+2021-02-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (follow-debug-links): Add option to enable or\n+\tdisable the following of debug links by default.  Set the\n+\tdefault for the option to be 'follow'.\n+\t* dwarf.c (do_follow_links): Initialise with DEFAULT_FOR_FOLLOW_LINKS.\n+\t(dwarf_select_sections_by_names): Add no-follow-links option.\n+\t(dwarf_select_sections_by_letter): Add 'N' option.\n+\t* objdump.c (usage): Add conditional text describing the\n+\tfollow links option.\n+\t(slurp_symtab): Ensure that there is a NULL entry at the end\n+\tof the symbol table.\n+\t(slurp_dynamic_symtab): Likewise.\n+\t(dump_bfd): When extending the symbol table, ensure that there\n+\tis still a NULL entry at the end.\n+\t* readelf.c (usage): Add conditional text describing the\n+\tfollow links option.\n+\t* doc/binutils.texi: Update documentation for objcopy and\n+\treadelf.\n+\t* doc/debug.options.texi: Update documentation of the\n+\tfollow-links option.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/binutils-all/compress.exp: Add the -WN option to\n+\tobjdump command lines that are not expecting to follow links.\n+\t* testsuite/binutils-all/readelf.exp: Add the\n+\t--debug-dump=no-follow-links option to tests that are not\n+\texpecting to follow debug links.\n+\t* NEWS: Mention the new behaviour.\n+\n 2021-02-12  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/binutils-all/objcopy.exp: Report \"unsupported\" when"
    },
    {
      "sha": "b0d55623738eb2c7cbf1c6fded0db2dd7742a127",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,5 +1,12 @@\n -*- text -*-\n \n+* Readelf and objdump will now follow links to separate debug info files by\n+  default.  This behaviour can be stopped via the use of the new -wN or\n+  --debug-dump=no-follow-links options for readelf and the -WN or\n+  --dwarf=no-follow-links options for objdump.  Also the old behaviour can be\n+  restored by the use of the --enable-follow-debug-links=no configure time\n+  option.\n+\n Changes in 2.36:\n \n * Update elfedit and readelf with LAM_U48 and LAM_U57 support."
    },
    {
      "sha": "59076a607300918ec2fa453424f76e13c86e5b7a",
      "filename": "binutils/config.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/config.in?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -18,6 +18,9 @@\n /* Should ar and ranlib use -D behavior by default? */\n #undef DEFAULT_AR_DETERMINISTIC\n \n+/* Have readelf and objdump follow debug links by default */\n+#undef DEFAULT_FOR_FOLLOW_LINKS\n+\n /* Have nm use F and f for global and local ifunc symbols */\n #undef DEFAULT_F_FOR_IFUNC_SYMBOLS\n "
    },
    {
      "sha": "f328d31175db333cbcf394db05803d2646d51e33",
      "filename": "binutils/configure",
      "status": "modified",
      "additions": 27,
      "deletions": 2,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -822,6 +822,7 @@ enable_targets\n enable_deterministic_archives\n enable_default_strings_all\n enable_f_for_ifunc_symbols\n+enable_follow_debug_links\n with_debuginfod\n enable_libctf\n enable_werror\n@@ -1489,6 +1490,9 @@ Optional Features:\n   --enable-f-for-ifunc-symbols\n                           Have nm use F and f for global and local ifunc\n                           symbols\n+  --enable-follow-debug-links\n+                          Have readelf and objdump follow debug links by\n+                          default\n   --enable-libctf         Handle .ctf type-info sections [default=yes]\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings\n@@ -11577,7 +11581,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11580 \"configure\"\n+#line 11584 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11683,7 +11687,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11686 \"configure\"\n+#line 11690 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12359,6 +12363,27 @@ _ACEOF\n \n \n \n+# Check whether --enable-follow-debug-links was given.\n+if test \"${enable_follow_debug_links+set}\" = set; then :\n+  enableval=$enable_follow_debug_links;\n+if test \"${enableval}\" = no; then\n+  default_for_follow_links=0\n+else\n+  default_for_follow_links=1\n+fi\n+else\n+  default_for_follow_links=1\n+fi\n+\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define DEFAULT_FOR_FOLLOW_LINKS $default_for_follow_links\n+_ACEOF\n+\n+\n+\n+\n \n \n "
    },
    {
      "sha": "af24c0c9a8a65901f2553eb401ce026f290bdb9a",
      "filename": "binutils/configure.ac",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure.ac?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -82,6 +82,20 @@ fi], [default_f_for_ifunc=0])\n AC_DEFINE_UNQUOTED(DEFAULT_F_FOR_IFUNC_SYMBOLS, $default_f_for_ifunc,\n \t\t   [Have nm use F and f for global and local ifunc symbols])\n \n+\n+AC_ARG_ENABLE(follow-debug-links,\n+[AS_HELP_STRING([--enable-follow-debug-links],\n+\t[Have readelf and objdump follow debug links by default])], [\n+if test \"${enableval}\" = no; then\n+  default_for_follow_links=0\n+else\n+  default_for_follow_links=1\n+fi], [default_for_follow_links=1])\n+\n+AC_DEFINE_UNQUOTED(DEFAULT_FOR_FOLLOW_LINKS, $default_for_follow_links,\n+\t\t   [Have readelf and objdump follow debug links by default])\n+\n+\n AC_DEBUGINFOD\n \n GCC_ENABLE([libctf], [yes], [], [Handle .ctf type-info sections])"
    },
    {
      "sha": "94ea5720be8d7a7e6f8dfd86e56a1ccbaffe5bce",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -2187,8 +2187,10 @@ objdump [@option{-a}|@option{--archive-headers}]\n         [@option{-r}|@option{--reloc}]\n         [@option{-R}|@option{--dynamic-reloc}]\n         [@option{-s}|@option{--full-contents}]\n-        [@option{-W[lLiaprmfFsoORtUuTgAckK]}|\n-         @option{--dwarf}[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow-links]]\n+        [@option{-W[lLiaprmfFsoORtUuTgAck]}|\n+         @option{--dwarf}[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links]]\n+        [@option{-WK}|@option{--dwarf=follow-links}]\n+        [@option{-WN}|@option{--dwarf=no-follow-links}]\n         [@option{--ctf=}@var{section}]\n         [@option{-G}|@option{--stabs}]\n         [@option{-t}|@option{--syms}]\n@@ -2325,7 +2327,7 @@ will stop at the end of the function, otherwise it will stop when the\n next symbol is encountered.  If there are no matches for @var{symbol}\n then nothing will be displayed.\n \n-Note if the @option{--dwarf=follow-links} option has also been enabled\n+Note if the @option{--dwarf=follow-links} option is enabled\n then any symbol tables in linked debug info files will be read in and\n used when disassembling.\n \n@@ -2347,7 +2349,7 @@ If the target is an ARM architecture this switch also has the effect\n of forcing the disassembler to decode pieces of data found in code\n sections as if they were instructions.\n \n-Note if the @option{--dwarf=follow-links} option has also been enabled\n+Note if the @option{--dwarf=follow-links} option is enabled\n then any symbol tables in linked debug info files will be read in and\n used when disassembling.\n \n@@ -4753,8 +4755,10 @@ readelf [@option{-a}|@option{--all}]\n         [@option{-R} <number or name>|@option{--relocated-dump=}<number or name>]\n         [@option{-z}|@option{--decompress}]\n         [@option{-c}|@option{--archive-index}]\n-        [@option{-w[lLiaprmfFsoORtUuTgAckK]}|\n-         @option{--debug-dump}[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow-links]]\n+        [@option{-w[lLiaprmfFsoORtUuTgAck]}|\n+         @option{--debug-dump}[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links]]\n+        [@option{-wK}|@option{--debug-dump=follow-links}]\n+        [@option{-wN}|@option{--debug-dump=no-follow-links}]\n         [@option{--dwarf-depth=@var{n}}]\n         [@option{--dwarf-start=@var{n}}]\n         [@option{--ctf=}@var{section}]"
    },
    {
      "sha": "2ad8f03626d259bed8608e569a6934467cb1dbdc",
      "filename": "binutils/doc/debug.options.texi",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/doc/debug.options.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/doc/debug.options.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/debug.options.texi?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -61,6 +61,17 @@ In addition, when displaying DWARF attributes, if a form is found that\n references the separate debug info file, then the referenced contents\n will also be displayed.\n \n+Note - in some distributions this option is enabled by default.  It\n+can be disabled via the @option{N} debug option.  The default can be\n+chosen when configuring the binutils via the\n+@option{--enable-follow-debug-links=yes} or\n+@option{--enable-follow-debug-links=no} options.  If these are not\n+used then the default is to enable the following of debug links.\n+\n+@item N\n+@itemx =no-follow-links\n+Disables the following of links to separate debug info files.\n+\n @item l\n @itemx =rawline\n Displays the contents of the @samp{.debug_line} section in a raw"
    },
    {
      "sha": "ce1aeff7ee4829b44dfaf6809ba14f45d5b176d1",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -99,7 +99,7 @@ int do_debug_addr;\n int do_debug_cu_index;\n int do_wide;\n int do_debug_links;\n-int do_follow_links;\n+int do_follow_links = DEFAULT_FOR_FOLLOW_LINKS;\n bfd_boolean do_checks;\n \n int dwarf_cutoff_level = -1;\n@@ -11373,6 +11373,7 @@ dwarf_select_sections_by_names (const char *names)\n       { \"links\", & do_debug_links, 1 },\n       { \"loc\",  & do_debug_loc, 1 },\n       { \"macro\", & do_debug_macinfo, 1 },\n+      { \"no-follow-links\", & do_follow_links, 0 },\n       { \"pubnames\", & do_debug_pubnames, 1 },\n       { \"pubtypes\", & do_debug_pubtypes, 1 },\n       /* This entry is for compatibility\n@@ -11402,7 +11403,7 @@ dwarf_select_sections_by_names (const char *names)\n \t  if (strncmp (p, entry->option, len) == 0\n \t      && (p[len] == ',' || p[len] == '\\0'))\n \t    {\n-\t      * entry->variable |= entry->val;\n+\t      * entry->variable = entry->val;\n \n \t      /* The --debug-dump=frames-interp option also\n \t\t enables the --debug-dump=frames option.  */\n@@ -11443,6 +11444,7 @@ dwarf_select_sections_by_letters (const char *letters)\n       case 'g':\tdo_gdb_index = 1; break;\n       case 'i':\tdo_debug_info = 1; break;\n       case 'K': do_follow_links = 1; break;\n+      case 'N': do_follow_links = 0; break;\n       case 'k':\tdo_debug_links = 1; break;\n       case 'l':\tdo_debug_lines |= FLAG_DEBUG_LINES_RAW;\tbreak;\n       case 'L':\tdo_debug_lines |= FLAG_DEBUG_LINES_DECODED; break;"
    },
    {
      "sha": "fde5f59c9acee40bcc9c310ff9636cf476f31664",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 42,
      "deletions": 24,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -229,13 +229,24 @@ usage (FILE *stream, int status)\n   -g, --debugging          Display debug information in object file\\n\\\n   -e, --debugging-tags     Display debug information using ctags style\\n\\\n   -G, --stabs              Display (in raw form) any STABS info in the file\\n\\\n-  -W[lLiaprmfFsoORtUuTgAckK] or\\n\\\n+  -W[lLiaprmfFsoORtUuTgAck] or\\n\\\n   --dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,\\n\\\n           =frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,\\n\\\n           =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,\\n\\\n-          =addr,=cu_index,=links,=follow-links]\\n\\\n+          =addr,=cu_index,=links]\\n\\\n                            Display DWARF info in the file\\n\\\n \"));\n+#if DEFAULT_FOR_FOLLOW_LINKS\n+  fprintf (stream, _(\"\\\n+  -WK,--dwarf=follow-links     Follow links to separate debug info files (default)\\n\\\n+  -WN,--dwarf=no-follow-links  Do not follow links to separate debug info files\\n\\\n+\"));\n+#else\n+  fprintf (stream, _(\"\\\n+  -WK,--dwarf=follow-links     Follow links to separate debug info files\\n\\\n+  -WN,--dwarf=no-follow-links  Do not follow links to separate debug info files (default)\\n\\\n+\"));\n+#endif\n #ifdef ENABLE_LIBCTF\n   fprintf (stream, _(\"\\\n   --ctf=SECTION            Display CTF info from SECTION\\n\\\n@@ -737,31 +748,32 @@ slurp_symtab (bfd *abfd)\n       non_fatal (_(\"failed to read symbol table from: %s\"), bfd_get_filename (abfd));\n       bfd_fatal (_(\"error message was\"));\n     }\n-  if (storage)\n-    {\n-      off_t filesize = bfd_get_file_size (abfd);\n-\n-      /* qv PR 24707.  */\n-      if (filesize > 0\n-\t  && filesize < storage\n-\t  /* The MMO file format supports its own special compression\n-\t     technique, so its sections can be larger than the file size.  */\n-\t  && bfd_get_flavour (abfd) != bfd_target_mmo_flavour)\t  \n-\t{\n-\t  bfd_nonfatal_message (bfd_get_filename (abfd), abfd, NULL,\n-\t\t\t\t_(\"error: symbol table size (%#lx) is larger than filesize (%#lx)\"),\n-\t\t\tstorage, (long) filesize);\n-\t  exit_status = 1;\n-\t  symcount = 0;\n-\t  return NULL;\n-\t}\n+  /* Add an extra entry (at the end) with a NULL pointer.  */\n+  storage += sizeof (asymbol *);\n \n-      sy = (asymbol **) xmalloc (storage);\n+  off_t filesize = bfd_get_file_size (abfd);\n+\n+  /* qv PR 24707.  */\n+  if (filesize > 0\n+      && filesize < storage\n+      /* The MMO file format supports its own special compression\n+\t technique, so its sections can be larger than the file size.  */\n+      && bfd_get_flavour (abfd) != bfd_target_mmo_flavour)\t  \n+    {\n+      bfd_nonfatal_message (bfd_get_filename (abfd), abfd, NULL,\n+\t\t\t    _(\"error: symbol table size (%#lx) is larger than filesize (%#lx)\"),\n+\t\t\t    storage, (long) filesize);\n+      exit_status = 1;\n+      symcount = 0;\n+      return NULL;\n     }\n \n+  sy = (asymbol **) xmalloc (storage);\n   symcount = bfd_canonicalize_symtab (abfd, sy);\n   if (symcount < 0)\n     bfd_fatal (bfd_get_filename (abfd));\n+  /* assert (symcount < (storage / sizeof (asymbol *))) */\n+  sy[symcount] = NULL;\n   return sy;\n }\n \n@@ -774,6 +786,7 @@ slurp_dynamic_symtab (bfd *abfd)\n   long storage;\n \n   storage = bfd_get_dynamic_symtab_upper_bound (abfd);\n+  /* Add an extra entry (at the end) with a NULL pointer.  */\n   if (storage < 0)\n     {\n       if (!(bfd_get_file_flags (abfd) & DYNAMIC))\n@@ -786,12 +799,15 @@ slurp_dynamic_symtab (bfd *abfd)\n \n       bfd_fatal (bfd_get_filename (abfd));\n     }\n-  if (storage)\n-    sy = (asymbol **) xmalloc (storage);\n+\n+  storage += sizeof (asymbol *);\n+  sy = (asymbol **) xmalloc (storage);\n \n   dynsymcount = bfd_canonicalize_dynamic_symtab (abfd, sy);\n   if (dynsymcount < 0)\n     bfd_fatal (bfd_get_filename (abfd));\n+  /* assert (symcount < (storage / sizeof (asymbol *))) */\n+  sy[dynsymcount] = NULL;\n   return sy;\n }\n \n@@ -4899,10 +4915,12 @@ dump_bfd (bfd *abfd, bfd_boolean is_mainfile)\n \t\t    }\n \t\t  else\n \t\t    {\n-\t\t      syms = xrealloc (syms, (symcount + old_symcount) * sizeof (asymbol *));\n+\t\t      syms = xrealloc (syms, (symcount + old_symcount + 1) * sizeof (asymbol *));\n \t\t      memcpy (syms + old_symcount,\n \t\t\t      extra_syms,\n \t\t\t      symcount * sizeof (asymbol *));\n+\t\t      /* Preserve the NULL entry at the end of the symbol table.  */\n+\t\t      syms[symcount + old_symcount] = NULL;\n \t\t    }\n \t\t}\n "
    },
    {
      "sha": "77e450a619519d6a64ba158ff5abaa04289b6ca4",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -4624,12 +4624,23 @@ usage (FILE * stream)\n   -R --relocated-dump=<number|name>\\n\\\n                          Dump the contents of section <number|name> as relocated bytes\\n\\\n   -z --decompress        Decompress section before dumping it\\n\\\n-  -w[lLiaprmfFsoORtUuTgAckK] or\\n\\\n+  -w[lLiaprmfFsoORtUuTgAck] or\\n\\\n   --debug-dump[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,\\n\\\n                =frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,\\n\\\n                =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,\\n\\\n-               =addr,=cu_index,=links,=follow-links]\\n\\\n+               =addr,=cu_index,=links]\\n\\\n                          Display the contents of DWARF debug sections\\n\"));\n+#if DEFAULT_FOR_FOLLOW_LINKS\n+  fprintf (stream, _(\"\\\n+  -wK,--debug-dump=follow-links     Follow links to separate debug info files (default)\\n\\\n+  -wN,--debug-dump=no-follow-links  Do not follow links to separate debug info files\\n\\\n+\"));\n+#else\n+  fprintf (stream, _(\"\\\n+  -wK,--debug-dump=follow-links     Follow links to separate debug info files\\n\\\n+  -wN,--debug-dump=no-follow-links  Do not follow links to separate debug info files (default)\\n\\\n+\"));\n+#endif\n   fprintf (stream, _(\"\\\n   --dwarf-depth=N        Do not display DIEs at depth N or greater\\n\\\n   --dwarf-start=N        Display DIEs starting with N, at the same depth\\n\\"
    },
    {
      "sha": "5801f6b7c64a1fb7c8ffd196c808b6d9d9ab328d",
      "filename": "binutils/testsuite/binutils-all/compress.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/compress.exp?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -717,7 +717,7 @@ proc test_gnu_debuglink {} {\n \tfail \"$test (objcopy link decompress)\"\n \treturn\n     }\n-    set got [remote_exec host \"$OBJDUMP -S tmpdir/testprog\" \"\" \"/dev/null\" \"tmpdir/testprog.decompress.dump\"]\n+    set got [remote_exec host \"$OBJDUMP -S -WN tmpdir/testprog\" \"\" \"/dev/null\" \"tmpdir/testprog.decompress.dump\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tfail \"$test (objcopy dump decompress)\"\n \treturn\n@@ -726,7 +726,7 @@ proc test_gnu_debuglink {} {\n \tfail \"$test (objcopy link compress)\"\n \treturn\n     }\n-    set got [remote_exec host \"$OBJDUMP -S tmpdir/testprog\" \"\" \"/dev/null\" \"tmpdir/testprog.compress.dump\"]\n+    set got [remote_exec host \"$OBJDUMP -S -WN tmpdir/testprog\" \"\" \"/dev/null\" \"tmpdir/testprog.compress.dump\"]\n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tfail \"$test (objcopy dump compress)\"\n \treturn"
    },
    {
      "sha": "6f95d4039f55a6d3e6c8a31c16831ce0ba41df92",
      "filename": "binutils/testsuite/binutils-all/objdump.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objdump.exp?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -606,7 +606,7 @@ if { [is_elf_format] } then {\n \tset testfile tmpdir/debuglink.${obj}\n     }\n \n-    set got [remote_exec host \"$OBJDUMP $OBJDUMPFLAGS -Wk $testfile\" \"\" \"/dev/null\" \"objdump.out\"]\n+    set got [remote_exec host \"$OBJDUMP $OBJDUMPFLAGS -Wk -WN $testfile\" \"\" \"/dev/null\" \"objdump.out\"]\n \n     if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n \tfail \"objdump -Wk (reason: unexpected output)\"\n@@ -615,7 +615,7 @@ if { [is_elf_format] } then {\n     }\n \n     if { [regexp_diff objdump.out $srcdir/$subdir/objdump.Wk] } then {\n-\tfail \"objdump -Wk\"\n+\tfail \"objdump -Wk (reason: output does not match expectations)\"\n     } else {\n \tpass \"objdump -Wk\"\n     }"
    },
    {
      "sha": "71164085706089faaea040e1aab3fc3abfb0a848",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -507,7 +507,7 @@ if {![binutils_assemble $srcdir/$subdir/debuglink.s tmpdir/debuglink.o]} then {\n \tset tempfile [remote_download host tmpdir/debuglink.o]\n     }\n \n-    readelf_test {--debug-dump=links} $tempfile readelf.k  {}\n+    readelf_test {--debug-dump=links -wN} $tempfile readelf.k  {}\n \n     # Check that debug link sections can be followed.\n     if {![binutils_assemble $srcdir/$subdir/linkdebug.s tmpdir/linkdebug.debug]} then {\n@@ -530,7 +530,7 @@ if {![binutils_assemble $srcdir/$subdir/dwo.s tmpdir/dwo.o]} then {\n \tset tempfile [remote_download host tmpdir/dwo.o]\n     }\n \n-    readelf_test {--debug-dump=links} $tempfile readelf.k2  {}\n+    readelf_test {--debug-dump=links --debug-dump=no-follow-links} $tempfile readelf.k2  {}\n }\n \n if {![binutils_assemble $srcdir/$subdir/zero-sec.s tmpdir/zero-sec.o]} then {\n@@ -555,6 +555,6 @@ if ![is_remote host] {\n     if {[catch \"system \\\"bzip2 -dc $test > $tempfile\\\"\"] != 0} {\n \tuntested \"bzip2 -dc ($testname)\"\n     } else {\n-\treadelf_test {--debug-dump=macro} $tempfile pr26112.r {}\n+\treadelf_test {--debug-dump=macro -wN} $tempfile pr26112.r {}\n     }\n }"
    },
    {
      "sha": "d21ff558f1bfc1a58f0b422a3fd1ea750667ee7a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/gas/mach-o/sections-1.d: Stop automatic debug link\n+        following.\n+\t* testsuite/gas/xgate/insns-dwarf2.d: Likewise.\n+\n 2021-02-12  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/gas/all/pr27381.err: Don't match source file name."
    },
    {
      "sha": "cf7676925049bf93152f94d69ba90a5c1d3115d8",
      "filename": "gas/testsuite/gas/mach-o/sections-1.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/testsuite/gas/mach-o/sections-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/testsuite/gas/mach-o/sections-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/mach-o/sections-1.d?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,4 +1,4 @@\n-#objdump: -P section\n+#objdump: -P section -WN\n .*: +file format mach-o.*\n #...\n  Section: __text           __TEXT           \\(bfdname: .text\\)"
    },
    {
      "sha": "fd658a6912e430cbf836a8cbbde6b4a587957049",
      "filename": "gas/testsuite/gas/xgate/insns-dwarf2.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/testsuite/gas/xgate/insns-dwarf2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/gas/testsuite/gas/xgate/insns-dwarf2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/xgate/insns-dwarf2.d?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,4 +1,4 @@\n-#objdump: -S\n+#objdump: -S -WN\n #as: -gdwarf2\n #name: Dwarf2 test on insns.s\n #source: insns.s"
    },
    {
      "sha": "16c6f2f427abcbfda0fc359521b86d8b737214f8",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/ld-elf/sec64k.exp: Stop readelf from automatically\n+\tfollowing debug links.\n+\n 2021-02-11  Alan Modra  <amodra@gmail.com>\n \n \t* NEWS: Mention arm-symbianelf removal."
    },
    {
      "sha": "a8ce93358198ae95f7ccb8b7c5f7bc9f88e54cf4",
      "filename": "ld/testsuite/ld-elf/sec64k.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c46b706620eb9b27fa06e26406ffa4f79d9292e6/ld/testsuite/ld-elf/sec64k.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c46b706620eb9b27fa06e26406ffa4f79d9292e6/ld/testsuite/ld-elf/sec64k.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/sec64k.exp?ref=c46b706620eb9b27fa06e26406ffa4f79d9292e6",
      "patch": "@@ -135,7 +135,7 @@ if { ![istarget \"m32r-*-*\"] } then {\n \tputs $ofd \"#as: -ez80-adl\"\n     }\n     puts $ofd \"#ld: -r\"\n-    puts $ofd \"#readelf: -W -Ss\"\n+    puts $ofd \"#readelf: -W -wN -Ss\"\n     puts $ofd \"There are 680.. section headers.*:\"\n     puts $ofd \"#...\"\n     puts $ofd \"  \\\\\\[ 0\\\\\\] .* 680\\[0-9\\]\\[0-9\\]\\[ \\]+0\\[ \\]+0\"\n@@ -190,7 +190,7 @@ if { ![istarget \"d10v-*-*\"]\n     if { [istarget \"z80-*-*\"] } then {\n \tputs $ofd \"#as: -ez80-adl\"\n     }\n-    puts $ofd \"#readelf: -W -Ss\"\n+    puts $ofd \"#readelf: -W -wN -Ss\"\n     puts $ofd \"There are 660.. section headers.*:\"\n     puts $ofd \"#...\"\n     puts $ofd \"  \\\\\\[ 0\\\\\\] .* 660..\\[ \\]+0\\[ \\]+0\""
    }
  ]
}