{
  "sha": "4383e1fc3b3269413423c271cb362431b2b70398",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDM4M2UxZmMzYjMyNjk0MTM0MjNjMjcxY2IzNjI0MzFiMmI3MDM5OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-29T02:27:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-29T11:43:27Z"
    },
    "message": "ubsan: sparc: left shift cannot be represented in type 'int'\n\n\t* sparc-dis.c (SEX): Don't use left and right shift to sign extend.\n\t(compare_opcodes): Avoid signed shift left overflow.\n\t(print_insn_sparc): Likewise.",
    "tree": {
      "sha": "ccd3793ab24c6404d8a097a44560c2d283c8ec7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ccd3793ab24c6404d8a097a44560c2d283c8ec7b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4383e1fc3b3269413423c271cb362431b2b70398",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4383e1fc3b3269413423c271cb362431b2b70398",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4383e1fc3b3269413423c271cb362431b2b70398",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4383e1fc3b3269413423c271cb362431b2b70398/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c5e259235a4e4546910245b170de1e29a711034",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c5e259235a4e4546910245b170de1e29a711034",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8c5e259235a4e4546910245b170de1e29a711034"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 12,
    "deletions": 9
  },
  "files": [
    {
      "sha": "bde9b9216665f87b45801b00559767da43301aa6",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4383e1fc3b3269413423c271cb362431b2b70398/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4383e1fc3b3269413423c271cb362431b2b70398/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=4383e1fc3b3269413423c271cb362431b2b70398",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-29  Alan Modra  <amodra@gmail.com>\n+\n+\t* sparc-dis.c (SEX): Don't use left and right shift to sign extend.\n+\t(compare_opcodes): Avoid signed shift left overflow.\n+\t(print_insn_sparc): Likewise.\n+\n 2019-12-29  Alan Modra  <amodra@gmail.com>\n \n \tPR 25319"
    },
    {
      "sha": "57bde0ee6c11f320edf26b627365d99f0e1d351d",
      "filename": "opcodes/sparc-dis.c",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4383e1fc3b3269413423c271cb362431b2b70398/opcodes/sparc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4383e1fc3b3269413423c271cb362431b2b70398/opcodes/sparc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/sparc-dis.c?ref=4383e1fc3b3269413423c271cb362431b2b70398",
      "patch": "@@ -63,8 +63,8 @@ static sparc_opcode_hash *opcode_hash_table[HASH_SIZE];\n \n /* Sign-extend a value which is N bits long.  */\n #define\tSEX(value, bits) \\\n-\t((((int)(value)) << ((8 * sizeof (int)) - bits))\t\\\n-\t\t\t >> ((8 * sizeof (int)) - bits) )\n+  ((int) (((value & ((1u << (bits - 1) << 1) - 1))\t\\\n+\t   ^ (1u << (bits - 1))) - (1u << (bits - 1))))\n \n static  char *reg_names[] =\n { \"g0\", \"g1\", \"g2\", \"g3\", \"g4\", \"g5\", \"g6\", \"g7\",\n@@ -325,7 +325,7 @@ compare_opcodes (const void * a, const void * b)\n      another, it is important to order the opcodes in the right order.  */\n   for (i = 0; i < 32; ++i)\n     {\n-      unsigned long int x = 1 << i;\n+      unsigned long int x = 1ul << i;\n       int x0 = (match0 & x) != 0;\n       int x1 = (match1 & x) != 0;\n \n@@ -335,7 +335,7 @@ compare_opcodes (const void * a, const void * b)\n \n   for (i = 0; i < 32; ++i)\n     {\n-      unsigned long int x = 1 << i;\n+      unsigned long int x = 1ul << i;\n       int x0 = (lose0 & x) != 0;\n       int x1 = (lose1 & x) != 0;\n \n@@ -712,8 +712,7 @@ print_insn_sparc (bfd_vma memaddr, disassemble_info *info)\n \n \t\t  case 'h':\n \t\t    (*info->fprintf_func) (stream, \"%%hi(%#x)\",\n-\t\t\t\t\t   ((unsigned) 0xFFFFFFFF\n-\t\t\t\t\t    & ((int) X_IMM22 (insn) << 10)));\n+\t\t\t\t\t   (unsigned) X_IMM22 (insn) << 10);\n \t\t    break;\n \n \t\t  case 'i':\t/* 13 bit immediate.  */\n@@ -1062,9 +1061,7 @@ print_insn_sparc (bfd_vma memaddr, disassemble_info *info)\n \t\t      && X_RD (prev_insn) == X_RS1 (insn))\n \t\t    {\n \t\t      (*info->fprintf_func) (stream, \"\\t! \");\n-\t\t      info->target =\n-\t\t\t((unsigned) 0xFFFFFFFF\n-\t\t\t & ((int) X_IMM22 (prev_insn) << 10));\n+\t\t      info->target = (unsigned) X_IMM22 (prev_insn) << 10;\n \t\t      if (imm_added_to_rs1)\n \t\t\tinfo->target += X_SIMM (insn, 13);\n \t\t      else"
    }
  ]
}