{
  "sha": "4ca8baee000128932f0cd61b226fa5b53656fc32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGNhOGJhZWUwMDAxMjg5MzJmMGNkNjFiMjI2ZmE1YjUzNjU2ZmMzMg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-20T02:24:57Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-20T04:17:08Z"
    },
    "message": "sim: m68hc11: fix unused function warnings with -O0\n\nMark these functions as unused in case they don't get inlined when\nbuilding with -O0.",
    "tree": {
      "sha": "695bfc88afb2f17fe5a61c66a09722f2de6db7b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/695bfc88afb2f17fe5a61c66a09722f2de6db7b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ca8baee000128932f0cd61b226fa5b53656fc32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ca8baee000128932f0cd61b226fa5b53656fc32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ca8baee000128932f0cd61b226fa5b53656fc32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ca8baee000128932f0cd61b226fa5b53656fc32/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d73f39ee4309d340b97974e49f34e24b8b93fc61",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d73f39ee4309d340b97974e49f34e24b8b93fc61",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d73f39ee4309d340b97974e49f34e24b8b93fc61"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 26,
    "deletions": 22
  },
  "files": [
    {
      "sha": "c880fe6087c82b14c70b7b29458c4c33199470bf",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca8baee000128932f0cd61b226fa5b53656fc32/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca8baee000128932f0cd61b226fa5b53656fc32/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=4ca8baee000128932f0cd61b226fa5b53656fc32",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-main.h: Add UNUSED to all STATIC_INLINE functions.\n+\n 2021-06-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* aclocal.m4: Regenerate."
    },
    {
      "sha": "108b82fc0c2834004758def8b0f77d5f3b179466",
      "filename": "sim/m68hc11/sim-main.h",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ca8baee000128932f0cd61b226fa5b53656fc32/sim/m68hc11/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ca8baee000128932f0cd61b226fa5b53656fc32/sim/m68hc11/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/sim-main.h?ref=4ca8baee000128932f0cd61b226fa5b53656fc32",
      "patch": "@@ -291,7 +291,7 @@ extern void cpu_memory_exception (sim_cpu *cpu,\n                                   uint16 addr,\n                                   const char *message);\n \n-STATIC_INLINE address_word\n+STATIC_INLINE UNUSED address_word\n phys_to_virt (sim_cpu *cpu, address_word addr)\n {\n   if (addr >= cpu->bank_start && addr < cpu->bank_end)\n@@ -302,7 +302,7 @@ phys_to_virt (sim_cpu *cpu, address_word addr)\n     return (address_word) (addr);\n }\n \n-STATIC_INLINE uint8\n+STATIC_INLINE UNUSED uint8\n memory_read8 (sim_cpu *cpu, uint16 addr)\n {\n   uint8 val;\n@@ -315,7 +315,7 @@ memory_read8 (sim_cpu *cpu, uint16 addr)\n   return val;\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n memory_write8 (sim_cpu *cpu, uint16 addr, uint8 val)\n {\n   if (sim_core_write_buffer (CPU_STATE (cpu), cpu, 0, &val, addr, 1) != 1)\n@@ -325,7 +325,7 @@ memory_write8 (sim_cpu *cpu, uint16 addr, uint8 val)\n     }\n }\n \n-STATIC_INLINE uint16\n+STATIC_INLINE UNUSED uint16\n memory_read16 (sim_cpu *cpu, uint16 addr)\n {\n   uint8 b[2];\n@@ -338,7 +338,7 @@ memory_read16 (sim_cpu *cpu, uint16 addr)\n   return (((uint16) (b[0])) << 8) | ((uint16) b[1]);\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n memory_write16 (sim_cpu *cpu, uint16 addr, uint16 val)\n {\n   uint8 b[2];\n@@ -354,31 +354,31 @@ memory_write16 (sim_cpu *cpu, uint16 addr, uint16 val)\n extern void\n cpu_ccr_update_tst8 (sim_cpu *cpu, uint8 val);\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_tst16 (sim_cpu *cpu, uint16 val)\n {\n   cpu_set_ccr_V (cpu, 0);\n   cpu_set_ccr_N (cpu, val & 0x8000 ? 1 : 0);\n   cpu_set_ccr_Z (cpu, val == 0 ? 1 : 0);\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_shift8 (sim_cpu *cpu, uint8 val)\n {\n   cpu_set_ccr_N (cpu, val & 0x80 ? 1 : 0);\n   cpu_set_ccr_Z (cpu, val == 0 ? 1 : 0);\n   cpu_set_ccr_V (cpu, cpu_get_ccr_N (cpu) ^ cpu_get_ccr_C (cpu));\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_shift16 (sim_cpu *cpu, uint16 val)\n {\n   cpu_set_ccr_N (cpu, val & 0x8000 ? 1 : 0);\n   cpu_set_ccr_Z (cpu, val == 0 ? 1 : 0);\n   cpu_set_ccr_V (cpu, cpu_get_ccr_N (cpu) ^ cpu_get_ccr_C (cpu));\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_add8 (sim_cpu *cpu, uint8 r, uint8 a, uint8 b)\n {\n   cpu_set_ccr_C (cpu, ((a & b) | (b & ~r) | (a & ~r)) & 0x80 ? 1 : 0);\n@@ -388,7 +388,7 @@ cpu_ccr_update_add8 (sim_cpu *cpu, uint8 r, uint8 a, uint8 b)\n }\n \n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_sub8 (sim_cpu *cpu, uint8 r, uint8 a, uint8 b)\n {\n   cpu_set_ccr_C (cpu, ((~a & b) | (b & r) | (~a & r)) & 0x80 ? 1 : 0);\n@@ -397,7 +397,7 @@ cpu_ccr_update_sub8 (sim_cpu *cpu, uint8 r, uint8 a, uint8 b)\n   cpu_set_ccr_N (cpu, r & 0x80 ? 1 : 0);\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_add16 (sim_cpu *cpu, uint16 r, uint16 a, uint16 b)\n {\n   cpu_set_ccr_C (cpu, ((a & b) | (b & ~r) | (a & ~r)) & 0x8000 ? 1 : 0);\n@@ -406,7 +406,7 @@ cpu_ccr_update_add16 (sim_cpu *cpu, uint16 r, uint16 a, uint16 b)\n   cpu_set_ccr_N (cpu, r & 0x8000 ? 1 : 0);\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_ccr_update_sub16 (sim_cpu *cpu, uint16 r, uint16 a, uint16 b)\n {\n   cpu_set_ccr_C (cpu, ((~a & b) | (b & r) | (~a & r)) & 0x8000 ? 1 : 0);\n@@ -416,7 +416,7 @@ cpu_ccr_update_sub16 (sim_cpu *cpu, uint16 r, uint16 a, uint16 b)\n }\n \n /* Push and pop instructions for 68HC11 (next-available stack mode).  */\n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_m68hc11_push_uint8 (sim_cpu *cpu, uint8 val)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -425,7 +425,7 @@ cpu_m68hc11_push_uint8 (sim_cpu *cpu, uint8 val)\n   cpu->cpu_regs.sp = addr - 1;\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_m68hc11_push_uint16 (sim_cpu *cpu, uint16 val)\n {\n   uint16 addr = cpu->cpu_regs.sp - 1;\n@@ -434,7 +434,7 @@ cpu_m68hc11_push_uint16 (sim_cpu *cpu, uint16 val)\n   cpu->cpu_regs.sp = addr - 1;\n }\n \n-STATIC_INLINE uint8\n+STATIC_INLINE UNUSED uint8\n cpu_m68hc11_pop_uint8 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -445,7 +445,7 @@ cpu_m68hc11_pop_uint8 (sim_cpu *cpu)\n   return val;\n }\n \n-STATIC_INLINE uint16\n+STATIC_INLINE UNUSED uint16\n cpu_m68hc11_pop_uint16 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -457,7 +457,7 @@ cpu_m68hc11_pop_uint16 (sim_cpu *cpu)\n }\n \n /* Push and pop instructions for 68HC12 (last-used stack mode).  */\n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_m68hc12_push_uint8 (sim_cpu *cpu, uint8 val)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -467,7 +467,7 @@ cpu_m68hc12_push_uint8 (sim_cpu *cpu, uint8 val)\n   cpu->cpu_regs.sp = addr;\n }\n \n-STATIC_INLINE void\n+STATIC_INLINE UNUSED void\n cpu_m68hc12_push_uint16 (sim_cpu *cpu, uint16 val)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -477,7 +477,7 @@ cpu_m68hc12_push_uint16 (sim_cpu *cpu, uint16 val)\n   cpu->cpu_regs.sp = addr;\n }\n \n-STATIC_INLINE uint8\n+STATIC_INLINE UNUSED uint8\n cpu_m68hc12_pop_uint8 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -488,7 +488,7 @@ cpu_m68hc12_pop_uint8 (sim_cpu *cpu)\n   return val;\n }\n \n-STATIC_INLINE uint16\n+STATIC_INLINE UNUSED uint16\n cpu_m68hc12_pop_uint16 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.sp;\n@@ -500,7 +500,7 @@ cpu_m68hc12_pop_uint16 (sim_cpu *cpu)\n }\n \n /* Fetch a 8/16 bit value and update the PC.  */\n-STATIC_INLINE uint8\n+STATIC_INLINE UNUSED uint8\n cpu_fetch8 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.pc;\n@@ -511,7 +511,7 @@ cpu_fetch8 (sim_cpu *cpu)\n   return val;\n }\n \n-STATIC_INLINE uint16\n+STATIC_INLINE UNUSED uint16\n cpu_fetch16 (sim_cpu *cpu)\n {\n   uint16 addr = cpu->cpu_regs.pc;"
    }
  ]
}