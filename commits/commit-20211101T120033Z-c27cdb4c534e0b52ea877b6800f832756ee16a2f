{
  "sha": "c27cdb4c534e0b52ea877b6800f832756ee16a2f",
  "node_id": "C_kwDOANOeidoAKGMyN2NkYjRjNTM0ZTBiNTJlYTg3N2I2ODAwZjgzMjc1NmVlMTZhMmY",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-31T13:50:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-01T12:00:33Z"
    },
    "message": "objcopy buffer overflow\n\n\"tocopy\" in this code was an int, which when the size to be copied was\nlarger than MAXINT could result in tocopy being negative.  A negative\nvalue of course is less than BUFSIZE, but when converted to\nbfd_size_type is extremely large.\n\n\tPR 995\n\t* objcopy.c (copy_unknown_object): Correct calculation of \"tocopy\".\n\tUse better variable types.",
    "tree": {
      "sha": "3fd83f8cef38b521a12115be882cdbebbf713f12",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3fd83f8cef38b521a12115be882cdbebbf713f12"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c27cdb4c534e0b52ea877b6800f832756ee16a2f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c27cdb4c534e0b52ea877b6800f832756ee16a2f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c27cdb4c534e0b52ea877b6800f832756ee16a2f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c27cdb4c534e0b52ea877b6800f832756ee16a2f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3197e593d8a2a79a23dc9155d18d7aff6281da14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3197e593d8a2a79a23dc9155d18d7aff6281da14",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3197e593d8a2a79a23dc9155d18d7aff6281da14"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 9,
    "deletions": 12
  },
  "files": [
    {
      "sha": "e0d52d114fec54d5cf6c45c67c3a019e6b600af2",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c27cdb4c534e0b52ea877b6800f832756ee16a2f/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c27cdb4c534e0b52ea877b6800f832756ee16a2f/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=c27cdb4c534e0b52ea877b6800f832756ee16a2f",
      "patch": "@@ -1894,9 +1894,8 @@ static bool\n copy_unknown_object (bfd *ibfd, bfd *obfd)\n {\n   char *cbuf;\n-  int tocopy;\n-  long ncopied;\n-  long size;\n+  bfd_size_type tocopy;\n+  off_t size;\n   struct stat buf;\n \n   if (bfd_stat_arch_elt (ibfd, &buf) != 0)\n@@ -1924,30 +1923,28 @@ copy_unknown_object (bfd *ibfd, bfd *obfd)\n \t    bfd_get_archive_filename (ibfd), bfd_get_filename (obfd));\n \n   cbuf = (char *) xmalloc (BUFSIZE);\n-  ncopied = 0;\n-  while (ncopied < size)\n+  while (size != 0)\n     {\n-      tocopy = size - ncopied;\n-      if (tocopy > BUFSIZE)\n+      if (size > BUFSIZE)\n \ttocopy = BUFSIZE;\n+      else\n+\ttocopy = size;\n \n-      if (bfd_bread (cbuf, (bfd_size_type) tocopy, ibfd)\n-\t  != (bfd_size_type) tocopy)\n+      if (bfd_bread (cbuf, tocopy, ibfd) != tocopy)\n \t{\n \t  bfd_nonfatal_message (NULL, ibfd, NULL, NULL);\n \t  free (cbuf);\n \t  return false;\n \t}\n \n-      if (bfd_bwrite (cbuf, (bfd_size_type) tocopy, obfd)\n-\t  != (bfd_size_type) tocopy)\n+      if (bfd_bwrite (cbuf, tocopy, obfd) != tocopy)\n \t{\n \t  bfd_nonfatal_message (NULL, obfd, NULL, NULL);\n \t  free (cbuf);\n \t  return false;\n \t}\n \n-      ncopied += tocopy;\n+      size -= tocopy;\n     }\n \n   /* We should at least to be able to read it back when copying an"
    }
  ]
}