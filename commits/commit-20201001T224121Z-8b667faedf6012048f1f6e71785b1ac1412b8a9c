{
  "sha": "8b667faedf6012048f1f6e71785b1ac1412b8a9c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGI2NjdmYWVkZjYwMTIwNDhmMWY2ZTcxNzg1YjFhYzE0MTJiOGE5Yw==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-09-23T03:31:31Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-10-01T22:41:21Z"
    },
    "message": "Add NetBSD/i386 gdbserver support\n\nThe support is on part with NetBSD/amd64, thus GPR works,\nsingle step and software breakpoint are operational, and the\nSVR4 r_debug integration is functional.\n\ngdbserver/ChangeLog:\n\n\t* netbsd-i386-low.cc: Add.\n\t* Makefile.in (SFILES): Register \"netbsd-i386-low.c\".\n\t* configure.srv: Add i[34567]86-*-netbsd*.",
    "tree": {
      "sha": "32a487b1f43f51bfbdd48402adae9d1ede5a6481",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/32a487b1f43f51bfbdd48402adae9d1ede5a6481"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8b667faedf6012048f1f6e71785b1ac1412b8a9c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b667faedf6012048f1f6e71785b1ac1412b8a9c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8b667faedf6012048f1f6e71785b1ac1412b8a9c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8b667faedf6012048f1f6e71785b1ac1412b8a9c/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "15397b0e058a84afcc2b6f4af383514e32f99a3d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/15397b0e058a84afcc2b6f4af383514e32f99a3d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/15397b0e058a84afcc2b6f4af383514e32f99a3d"
    }
  ],
  "stats": {
    "total": 170,
    "additions": 170,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d667a203e67820e66b433d6b23ce74bc0754537c",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=8b667faedf6012048f1f6e71785b1ac1412b8a9c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-01  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* netbsd-i386-low.cc: Add.\n+\t* Makefile.in (SFILES): Register \"netbsd-i386-low.c\".\n+\t* configure.srv: Add i[34567]86-*-netbsd*.\n+\n 2020-10-01  Kamil Rytarowski  <n54@gmx.com>\n \n \t* netbsd-amd64-low.cc (netbsd_x86_64_arch_setup): Remove."
    },
    {
      "sha": "8b80acebdf1e28cf55421db106f5127cf5b0b8dd",
      "filename": "gdbserver/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/Makefile.in?ref=8b667faedf6012048f1f6e71785b1ac1412b8a9c",
      "patch": "@@ -194,6 +194,7 @@ SFILES = \\\n \t$(srcdir)/linux-xtensa-low.cc \\\n \t$(srcdir)/mem-break.cc \\\n \t$(srcdir)/netbsd-amd64-low.cc \\\n+\t$(srcdir)/netbsd-i386-low.cc \\\n \t$(srcdir)/netbsd-low.cc \\\n \t$(srcdir)/netbsd-low.h \\\n \t$(srcdir)/proc-service.cc \\"
    },
    {
      "sha": "c4fe4ca81ee5ccccab59e395daa92d5a9c3372c2",
      "filename": "gdbserver/configure.srv",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/configure.srv",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/configure.srv",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure.srv?ref=8b667faedf6012048f1f6e71785b1ac1412b8a9c",
      "patch": "@@ -101,6 +101,12 @@ case \"${gdbserver_host}\" in\n \t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o\"\n \t\t\tsrv_mingw=yes\n \t\t\t;;\n+  i[34567]86-*-netbsd*)\tsrv_regobj=\"\"\n+\t\t\tsrv_tgtobj=\"netbsd-low.o netbsd-i386-low.o fork-child.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} nat/fork-inferior.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} nat/netbsd-nat.o\"\n+\t\t\tsrv_tgtobj=\"${srv_tgtobj} arch/i386.o\"\n+\t\t\t;;\n   ia64-*-linux*)\tsrv_regobj=reg-ia64.o\n \t\t\tsrv_tgtobj=\"$srv_linux_obj linux-ia64-low.o\"\n \t\t\tsrv_linux_usrregs=yes"
    },
    {
      "sha": "e52fde20f20169db305c9539809579fe73af2d59",
      "filename": "gdbserver/netbsd-i386-low.cc",
      "status": "added",
      "additions": 157,
      "deletions": 0,
      "changes": 157,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/netbsd-i386-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8b667faedf6012048f1f6e71785b1ac1412b8a9c/gdbserver/netbsd-i386-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/netbsd-i386-low.cc?ref=8b667faedf6012048f1f6e71785b1ac1412b8a9c",
      "patch": "@@ -0,0 +1,157 @@\n+/* Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <sys/types.h>\n+#include <sys/ptrace.h>\n+#include <limits.h>\n+\n+#include \"server.h\"\n+#include \"netbsd-low.h\"\n+#include \"gdbsupport/x86-xstate.h\"\n+#include \"arch/i386.h\"\n+#include \"x86-tdesc.h\"\n+#include \"tdesc.h\"\n+\n+/* The index of various registers inside the regcache.  */\n+\n+enum netbsd_i386_gdb_regnum\n+{\n+  I386_EAX_REGNUM,              /* %eax */\n+  I386_ECX_REGNUM,              /* %ecx */\n+  I386_EDX_REGNUM,              /* %edx */\n+  I386_EBX_REGNUM,              /* %ebx */\n+  I386_ESP_REGNUM,              /* %esp */\n+  I386_EBP_REGNUM,              /* %ebp */\n+  I386_ESI_REGNUM,              /* %esi */\n+  I386_EDI_REGNUM,              /* %edi */\n+  I386_EIP_REGNUM,              /* %eip */\n+  I386_EFLAGS_REGNUM,           /* %eflags */\n+  I386_CS_REGNUM,               /* %cs */\n+  I386_SS_REGNUM,               /* %ss */\n+  I386_DS_REGNUM,               /* %ds */\n+  I386_ES_REGNUM,               /* %es */\n+  I386_FS_REGNUM,               /* %fs */\n+  I386_GS_REGNUM,               /* %gs */\n+  I386_ST0_REGNUM               /* %st(0) */\n+};\n+\n+/* The fill_function for the general-purpose register set.  */\n+\n+static void\n+netbsd_i386_fill_gregset (struct regcache *regcache, char *buf)\n+{\n+  struct reg *r = (struct reg *) buf;\n+\n+#define netbsd_i386_collect_gp(regnum, fld) do {\t\t\\\n+    collect_register (regcache, regnum, &r->r_##fld);\t\t\\\n+  } while (0)\n+\n+  netbsd_i386_collect_gp (I386_EAX_REGNUM, eax);\n+  netbsd_i386_collect_gp (I386_EBX_REGNUM, ebx);\n+  netbsd_i386_collect_gp (I386_ECX_REGNUM, ecx);\n+  netbsd_i386_collect_gp (I386_EDX_REGNUM, edx);\n+  netbsd_i386_collect_gp (I386_ESP_REGNUM, esp);\n+  netbsd_i386_collect_gp (I386_EBP_REGNUM, ebp);\n+  netbsd_i386_collect_gp (I386_ESI_REGNUM, esi);\n+  netbsd_i386_collect_gp (I386_EDI_REGNUM, edi);\n+  netbsd_i386_collect_gp (I386_EIP_REGNUM, eip);\n+  netbsd_i386_collect_gp (I386_EFLAGS_REGNUM, eflags);\n+  netbsd_i386_collect_gp (I386_CS_REGNUM, cs);\n+  netbsd_i386_collect_gp (I386_SS_REGNUM, ss);\n+  netbsd_i386_collect_gp (I386_DS_REGNUM, ds);\n+  netbsd_i386_collect_gp (I386_ES_REGNUM, es);\n+  netbsd_i386_collect_gp (I386_FS_REGNUM, fs);\n+  netbsd_i386_collect_gp (I386_GS_REGNUM, gs);\n+}\n+\n+/* The store_function for the general-purpose register set.  */\n+\n+static void\n+netbsd_i386_store_gregset (struct regcache *regcache, const char *buf)\n+{\n+  struct reg *r = (struct reg *) buf;\n+\n+#define netbsd_i386_supply_gp(regnum, fld) do {\t\t\\\n+    supply_register (regcache, regnum, &r->r_##fld);\t\\\n+  } while(0)\n+\n+  netbsd_i386_supply_gp (I386_EAX_REGNUM, eax);\n+  netbsd_i386_supply_gp (I386_EBX_REGNUM, ebx);\n+  netbsd_i386_supply_gp (I386_ECX_REGNUM, ecx);\n+  netbsd_i386_supply_gp (I386_EDX_REGNUM, edx);\n+  netbsd_i386_supply_gp (I386_ESP_REGNUM, esp);\n+  netbsd_i386_supply_gp (I386_EBP_REGNUM, ebp);\n+  netbsd_i386_supply_gp (I386_ESI_REGNUM, esi);\n+  netbsd_i386_supply_gp (I386_EDI_REGNUM, edi);\n+  netbsd_i386_supply_gp (I386_EIP_REGNUM, eip);\n+  netbsd_i386_supply_gp (I386_EFLAGS_REGNUM, eflags);\n+  netbsd_i386_supply_gp (I386_CS_REGNUM, cs);\n+  netbsd_i386_supply_gp (I386_SS_REGNUM, ss);\n+  netbsd_i386_supply_gp (I386_DS_REGNUM, ds);\n+  netbsd_i386_supply_gp (I386_ES_REGNUM, es);\n+  netbsd_i386_supply_gp (I386_FS_REGNUM, fs);\n+  netbsd_i386_supply_gp (I386_GS_REGNUM, gs);\n+}\n+\n+/* Description of all the x86-netbsd register sets.  */\n+\n+static const struct netbsd_regset_info netbsd_target_regsets[] =\n+{\n+  /* General Purpose Registers.  */\n+  {PT_GETREGS, PT_SETREGS, sizeof (struct reg),\n+  netbsd_i386_fill_gregset, netbsd_i386_store_gregset},\n+  /* End of list marker.  */\n+  {0, 0, -1, NULL, NULL }\n+};\n+\n+/* NetBSD target op definitions for the amd64 architecture.  */\n+\n+class netbsd_i386_target : public netbsd_process_target\n+{\n+public:\n+  const netbsd_regset_info *get_regs_info () override;\n+\n+  void low_arch_setup () override;\n+};\n+\n+const netbsd_regset_info *\n+netbsd_i386_target::get_regs_info ()\n+{\n+  return netbsd_target_regsets;\n+}\n+\n+/* Initialize the target description for the architecture of the\n+   inferior.  */\n+\n+void\n+netbsd_i386_target::low_arch_setup ()\n+{\n+  target_desc *tdesc\n+    = i386_create_target_description (X86_XSTATE_SSE_MASK, false, false);\n+\n+  init_target_desc (tdesc, i386_expedite_regs);\n+\n+  current_process ()->tdesc = tdesc;\n+}\n+\n+/* The singleton target ops object.  */\n+\n+static netbsd_i386_target the_netbsd_i386_target;\n+\n+/* The NetBSD target ops object.  */\n+\n+netbsd_process_target *the_netbsd_target = &the_netbsd_i386_target;"
    }
  ]
}