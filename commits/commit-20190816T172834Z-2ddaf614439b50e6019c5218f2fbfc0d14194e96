{
  "sha": "2ddaf614439b50e6019c5218f2fbfc0d14194e96",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmRkYWY2MTQ0MzliNTBlNjAxOWM1MjE4ZjJmYmZjMGQxNDE5NGU5Ng==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-12T00:27:02Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-16T17:28:34Z"
    },
    "message": "Change tui_update_breakpoint_info to be a method\n\nThis changes tui_update_breakpoint_info to be a method on\ntui_source_window_base.\n\ngdb/ChangeLog\n2019-08-16  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<update_breakpoint_info>: Declare.\n\t(tui_update_breakpoint_info): Don't declare.\n\t* tui/tui-winsource.c (tui_source_window_base::update_source_window_as_is)\n\t(tui_update_all_breakpoint_info): Update.\n\t(tui_source_window_base::update_breakpoint_info): Rename from\n\ttui_update_breakpoint_info.\n\t(tui_source_window_base::update_exec_info): Update.",
    "tree": {
      "sha": "af126b5d957b0eb1494a07640bd417aa3e2ebac6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/af126b5d957b0eb1494a07640bd417aa3e2ebac6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2ddaf614439b50e6019c5218f2fbfc0d14194e96",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ddaf614439b50e6019c5218f2fbfc0d14194e96",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2ddaf614439b50e6019c5218f2fbfc0d14194e96",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ddaf614439b50e6019c5218f2fbfc0d14194e96/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "017f982820d408fb49657b9b9b8f45a9616c5f21",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/017f982820d408fb49657b9b9b8f45a9616c5f21",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/017f982820d408fb49657b9b9b8f45a9616c5f21"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 28,
    "deletions": 21
  },
  "files": [
    {
      "sha": "d6aecd2d204d5839a11b6e076c60d7c13596891e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2ddaf614439b50e6019c5218f2fbfc0d14194e96",
      "patch": "@@ -1,3 +1,14 @@\n+2019-08-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<update_breakpoint_info>: Declare.\n+\t(tui_update_breakpoint_info): Don't declare.\n+\t* tui/tui-winsource.c (tui_source_window_base::update_source_window_as_is)\n+\t(tui_update_all_breakpoint_info): Update.\n+\t(tui_source_window_base::update_breakpoint_info): Rename from\n+\ttui_update_breakpoint_info.\n+\t(tui_source_window_base::update_exec_info): Update.\n+\n 2019-08-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_base)"
    },
    {
      "sha": "d0e18791e4ae4bc094120bb9592811a39f1a1fd1",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=2ddaf614439b50e6019c5218f2fbfc0d14194e96",
      "patch": "@@ -99,7 +99,7 @@ tui_source_window_base::update_source_window_as_is\n     erase_source_content ();\n   else\n     {\n-      tui_update_breakpoint_info (this, nullptr, false);\n+      update_breakpoint_info (nullptr, false);\n       show_source_content ();\n       update_exec_info ();\n       if (type == SRC_WIN)\n@@ -448,10 +448,8 @@ tui_update_all_breakpoint_info (struct breakpoint *being_deleted)\n {\n   for (tui_source_window_base *win : tui_source_windows ())\n     {\n-      if (tui_update_breakpoint_info (win, being_deleted, false))\n-        {\n-          win->update_exec_info ();\n-        }\n+      if (win->update_breakpoint_info (being_deleted, false))\n+\twin->update_exec_info ();\n     }\n }\n \n@@ -463,20 +461,19 @@ tui_update_all_breakpoint_info (struct breakpoint *being_deleted)\n    refreshed.  */\n \n bool\n-tui_update_breakpoint_info (struct tui_source_window_base *win,\n-\t\t\t    struct breakpoint *being_deleted,\n-\t\t\t    bool current_only)\n+tui_source_window_base::update_breakpoint_info\n+  (struct breakpoint *being_deleted, bool current_only)\n {\n   int i;\n   bool need_refresh = false;\n \n-  for (i = 0; i < win->content.size (); i++)\n+  for (i = 0; i < content.size (); i++)\n     {\n       struct breakpoint *bp;\n       extern struct breakpoint *breakpoint_chain;\n       struct tui_source_element *line;\n \n-      line = &win->content[i];\n+      line = &content[i];\n       if (current_only && !line->is_exec_point)\n          continue;\n \n@@ -498,7 +495,7 @@ tui_update_breakpoint_info (struct tui_source_window_base *win,\n \n \t  for (loc = bp->loc; loc != NULL; loc = loc->next)\n \t    {\n-\t      if (win->location_matches_p (loc, i))\n+\t      if (location_matches_p (loc, i))\n \t\t{\n \t\t  if (bp->enable_state == bp_disabled)\n \t\t    mode |= TUI_BP_DISABLED;\n@@ -529,7 +526,7 @@ void\n tui_source_window_base::update_exec_info ()\n {\n   werase (execution_info->handle);\n-  tui_update_breakpoint_info (this, nullptr, true);\n+  update_breakpoint_info (nullptr, true);\n   for (int i = 0; i < content.size (); i++)\n     {\n       struct tui_source_element *src_element = &content[i];"
    },
    {
      "sha": "30b29ca8fdc3f12266e87855dcaeb1bb535425a3",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ddaf614439b50e6019c5218f2fbfc0d14194e96/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=2ddaf614439b50e6019c5218f2fbfc0d14194e96",
      "patch": "@@ -142,6 +142,14 @@ struct tui_source_window_base : public tui_win_info\n \t\t\t     struct symtab *s,\n \t\t\t     struct tui_line_or_address line_or_addr);\n \n+  /* Scan the source window and the breakpoints to update the\n+     break_mode information for each line.  Returns true if something\n+     changed and the execution window must be refreshed.  See\n+     tui_update_all_breakpoint_info for a description of\n+     BEING_DELETED.  */\n+  bool update_breakpoint_info (struct breakpoint *being_deleted,\n+\t\t\t       bool current_only);\n+\n   /* Erase the source content.  */\n   virtual void erase_source_content () = 0;\n \n@@ -239,15 +247,6 @@ struct tui_source_windows\n    removed from the list of breakpoints.  */\n extern void tui_update_all_breakpoint_info (struct breakpoint *being_deleted);\n \n-/* Scan the source window and the breakpoints to update the break_mode\n-   information for each line.  Returns true if something changed and\n-   the execution window must be refreshed.  See\n-   tui_update_all_breakpoint_info for a description of\n-   BEING_DELETED.  */\n-extern bool tui_update_breakpoint_info (struct tui_source_window_base *win,\n-\t\t\t\t\tstruct breakpoint *being_deleted,\n-\t\t\t\t\tbool current_only);\n-\n /* Function to display the \"main\" routine.  */\n extern void tui_display_main (void);\n extern void tui_update_source_windows_with_addr (struct gdbarch *, CORE_ADDR);"
    }
  ]
}