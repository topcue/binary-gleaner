{
  "sha": "f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjVmMTBjNjZmOGRjNTQ2NjUzNjE4MWExZTVjY2UyNDE5YTViY2JkNw==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T16:20:46Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:22:09Z"
    },
    "message": "[PATCH 7/57][Arm][GAS] Add support for MVE instructions: vstr/vldr\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (struct arm_it): Make immisreg field larger to hold\n\ttype of register.\n\t(enum shift_kind): Add SHIFT_UXTW shift kind.\n\t(enum parse_shift_mode): Add SHIFT_UXTW_IMMEDIATE shift mode.\n\t(parse_shift): Handle new shift type.\n\t(parse_address_main): Accept new addressing modes.\n\t(M_MNEM_vstrb, M_MNEM_vstrh, M_MNEM_vstrw, M_MNEM_vstrd,\n\t M_MNEM_vldrb, M_MNEM_vldrh, M_MNEM_vldrw, M_MNEM_vldrd): New\n\tinstruction encodings.\n\t(do_mve_vstr_vldr_QI): New encoding functions.\n\t(do_mve_vstr_vldr_RQ): Likewise.\n\t(do_mve_vstr_vldr_RI): Likewise.\n\t(do_mve_vstr_vldr): Likewise.\n\t* testsuite/gas/arm/mve-vldr-bad-1.d: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-1.l: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-1.s: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-2.d: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-2.l: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-2.s: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-3.d: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-3.l: New test.\n\t* testsuite/gas/arm/mve-vldr-bad-3.s: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-1.d: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-1.l: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-1.s: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-2.d: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-2.l: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-2.s: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-3.d: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-3.l: New test.\n\t* testsuite/gas/arm/mve-vstr-bad-3.s: New test.",
    "tree": {
      "sha": "89eb436c9a481c9e8f36f6479541431b731060ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89eb436c9a481c9e8f36f6479541431b731060ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/35c228db7089caf9525c1ef4cb35f6a8335eeea9"
    }
  ],
  "stats": {
    "total": 1543,
    "additions": 1536,
    "deletions": 7
  },
  "files": [
    {
      "sha": "65827441124810de3fad63033e5cc6235d392c50",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -1,3 +1,37 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (struct arm_it): Make immisreg field larger to hold\n+\ttype of register.\n+\t(enum shift_kind): Add SHIFT_UXTW shift kind.\n+\t(enum parse_shift_mode): Add SHIFT_UXTW_IMMEDIATE shift mode.\n+\t(parse_shift): Handle new shift type.\n+\t(parse_address_main): Accept new addressing modes.\n+\t(M_MNEM_vstrb, M_MNEM_vstrh, M_MNEM_vstrw, M_MNEM_vstrd,\n+\t M_MNEM_vldrb, M_MNEM_vldrh, M_MNEM_vldrw, M_MNEM_vldrd): New\n+\tinstruction encodings.\n+\t(do_mve_vstr_vldr_QI): New encoding functions.\n+\t(do_mve_vstr_vldr_RQ): Likewise.\n+\t(do_mve_vstr_vldr_RI): Likewise.\n+\t(do_mve_vstr_vldr): Likewise.\n+\t* testsuite/gas/arm/mve-vldr-bad-1.d: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-1.l: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-1.s: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-2.d: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-2.l: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-2.s: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-3.d: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-3.l: New test.\n+\t* testsuite/gas/arm/mve-vldr-bad-3.s: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-1.d: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-1.l: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-1.s: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-2.d: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-2.l: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-2.s: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-3.d: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-3.l: New test.\n+\t* testsuite/gas/arm/mve-vstr-bad-3.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (enum it_instruction_type): Add MVE_UNPREDICABLE_INSN."
    },
    {
      "sha": "717f1b1a58a0e343a6625d41b33310f2d87991e5",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 321,
      "deletions": 7,
      "changes": 328,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -508,7 +508,8 @@ struct arm_it\n     struct neon_type_el vectype;\n     unsigned present\t: 1;  /* Operand present.  */\n     unsigned isreg\t: 1;  /* Operand was a register.  */\n-    unsigned immisreg\t: 1;  /* .imm field is a second register.  */\n+    unsigned immisreg\t: 2;  /* .imm field is a second register.\n+\t\t\t\t 0: imm, 1: gpr, 2: MVE Q-register.  */\n     unsigned isscalar   : 1;  /* Operand is a (Neon) scalar.  */\n     unsigned immisalign : 1;  /* Immediate is an alignment specifier.  */\n     unsigned immisfloat : 1;  /* Immediate was parsed as a float.  */\n@@ -5289,7 +5290,7 @@ parse_qfloat_immediate (char **ccp, int *immed)\n /* Shift operands.  */\n enum shift_kind\n {\n-  SHIFT_LSL, SHIFT_LSR, SHIFT_ASR, SHIFT_ROR, SHIFT_RRX\n+  SHIFT_LSL, SHIFT_LSR, SHIFT_ASR, SHIFT_ROR, SHIFT_RRX, SHIFT_UXTW\n };\n \n struct asm_shift_name\n@@ -5306,6 +5307,7 @@ enum parse_shift_mode\n   SHIFT_LSL_OR_ASR_IMMEDIATE,\t/* Shift must be LSL or ASR immediate.\t*/\n   SHIFT_ASR_IMMEDIATE,\t\t/* Shift must be ASR immediate.\t */\n   SHIFT_LSL_IMMEDIATE,\t\t/* Shift must be LSL immediate.\t */\n+  SHIFT_UXTW_IMMEDIATE\t\t/* Shift must be UXTW immediate.  */\n };\n \n /* Parse a <shift> specifier on an ARM data processing instruction.\n@@ -5350,7 +5352,13 @@ parse_shift (char **str, int i, enum parse_shift_mode mode)\n   switch (mode)\n     {\n     case NO_SHIFT_RESTRICT:\n-    case SHIFT_IMMEDIATE:   break;\n+    case SHIFT_IMMEDIATE:\n+      if (shift == SHIFT_UXTW)\n+\t{\n+\t  inst.error = _(\"'UXTW' not allowed here\");\n+\t  return FAIL;\n+\t}\n+      break;\n \n     case SHIFT_LSL_OR_ASR_IMMEDIATE:\n       if (shift != SHIFT_LSL && shift != SHIFT_ASR)\n@@ -5375,6 +5383,13 @@ parse_shift (char **str, int i, enum parse_shift_mode mode)\n \t  return FAIL;\n \t}\n       break;\n+    case SHIFT_UXTW_IMMEDIATE:\n+      if (shift != SHIFT_UXTW)\n+\t{\n+\t  inst.error = _(\"'UXTW' required\");\n+\t  return FAIL;\n+\t}\n+      break;\n \n     default: abort ();\n     }\n@@ -5744,7 +5759,21 @@ parse_address_main (char **str, int i, int group_relocations,\n   /* PR gas/14887: Allow for whitespace after the opening bracket.  */\n   skip_whitespace (p);\n \n-  if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) == FAIL)\n+  if (group_type == GROUP_MVE)\n+    {\n+      enum arm_reg_type rtype = REG_TYPE_MQ;\n+      struct neon_type_el et;\n+      if ((reg = arm_typed_reg_parse (&p, rtype, &rtype, &et)) != FAIL)\n+\t{\n+\t  inst.operands[i].isquad = 1;\n+\t}\n+      else if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) == FAIL)\n+\t{\n+\t  inst.error = BAD_ADDR_MODE;\n+\t  return PARSE_OPERAND_FAIL;\n+\t}\n+    }\n+  else if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) == FAIL)\n     {\n       if (group_type == GROUP_MVE)\n \tinst.error = BAD_ADDR_MODE;\n@@ -5762,7 +5791,26 @@ parse_address_main (char **str, int i, int group_relocations,\n       if (*p == '+') p++;\n       else if (*p == '-') p++, inst.operands[i].negative = 1;\n \n-      if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) != FAIL)\n+      enum arm_reg_type rtype = REG_TYPE_MQ;\n+      struct neon_type_el et;\n+      if (group_type == GROUP_MVE\n+\t  && (reg = arm_typed_reg_parse (&p, rtype, &rtype, &et)) != FAIL)\n+\t{\n+\t  inst.operands[i].immisreg = 2;\n+\t  inst.operands[i].imm = reg;\n+\n+\t  if (skip_past_comma (&p) == SUCCESS)\n+\t    {\n+\t      if (parse_shift (&p, i, SHIFT_UXTW_IMMEDIATE) == SUCCESS)\n+\t\t{\n+\t\t  inst.operands[i].imm |= inst.relocs[0].exp.X_add_number << 5;\n+\t\t  inst.relocs[0].exp.X_add_number = 0;\n+\t\t}\n+\t      else\n+\t\treturn PARSE_OPERAND_FAIL;\n+\t    }\n+\t}\n+      else if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) != FAIL)\n \t{\n \t  inst.operands[i].imm = reg;\n \t  inst.operands[i].immisreg = 1;\n@@ -5919,7 +5967,15 @@ parse_address_main (char **str, int i, int group_relocations,\n \t  if (*p == '+') p++;\n \t  else if (*p == '-') p++, inst.operands[i].negative = 1;\n \n-\t  if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) != FAIL)\n+\t  enum arm_reg_type rtype = REG_TYPE_MQ;\n+\t  struct neon_type_el et;\n+\t  if (group_type == GROUP_MVE\n+\t      && (reg = arm_typed_reg_parse (&p, rtype, &rtype, &et)) != FAIL)\n+\t    {\n+\t      inst.operands[i].immisreg = 2;\n+\t      inst.operands[i].imm = reg;\n+\t    }\n+\t  else if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) != FAIL)\n \t    {\n \t      /* We might be using the immediate for alignment already. If we\n \t\t are, OR the register number into the low-order bits.  */\n@@ -13893,6 +13949,14 @@ do_t_loloop (void)\n #define M_MNEM_vld41\t0xfc901e21\n #define M_MNEM_vld42\t0xfc901e41\n #define M_MNEM_vld43\t0xfc901e61\n+#define M_MNEM_vstrb\t0xec000e00\n+#define M_MNEM_vstrh\t0xec000e10\n+#define M_MNEM_vstrw\t0xec000e40\n+#define M_MNEM_vstrd\t0xec000e50\n+#define M_MNEM_vldrb\t0xec100e00\n+#define M_MNEM_vldrh\t0xec100e10\n+#define M_MNEM_vldrw\t0xec100e40\n+#define M_MNEM_vldrd\t0xec100e50\n \n /* Neon instruction encoder helpers.  */\n \n@@ -15740,6 +15804,247 @@ check_simd_pred_availability (int fp, unsigned check)\n   return 0;\n }\n \n+static void\n+do_mve_vstr_vldr_QI (int size, int elsize, int load)\n+{\n+  constraint (size < 32, BAD_ADDR_MODE);\n+  constraint (size != elsize, BAD_EL_TYPE);\n+  constraint (inst.operands[1].immisreg, BAD_ADDR_MODE);\n+  constraint (!inst.operands[1].preind, BAD_ADDR_MODE);\n+  constraint (load && inst.operands[0].reg == inst.operands[1].reg,\n+\t      _(\"destination register and offset register may not be the\"\n+\t\t\" same\"));\n+\n+  int imm = inst.relocs[0].exp.X_add_number;\n+  int add = 1;\n+  if (imm < 0)\n+    {\n+      add = 0;\n+      imm = -imm;\n+    }\n+  constraint ((imm % (size / 8) != 0)\n+\t      || imm > (0x7f << neon_logbits (size)),\n+\t      (size == 32) ? _(\"immediate must be a multiple of 4 in the\"\n+\t\t\t       \" range of +/-[0,508]\")\n+\t\t\t   : _(\"immediate must be a multiple of 8 in the\"\n+\t\t\t       \" range of +/-[0,1016]\"));\n+  inst.instruction |= 0x11 << 24;\n+  inst.instruction |= add << 23;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= inst.operands[1].writeback << 21;\n+  inst.instruction |= LOW4 (inst.operands[1].reg) << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= 1 << 12;\n+  inst.instruction |= (size == 64) << 8;\n+  inst.instruction &= 0xffffff00;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 7;\n+  inst.instruction |= imm >> neon_logbits (size);\n+}\n+\n+static void\n+do_mve_vstr_vldr_RQ (int size, int elsize, int load)\n+{\n+    unsigned os = inst.operands[1].imm >> 5;\n+    constraint (os != 0 && size == 8,\n+\t\t_(\"can not shift offsets when accessing less than half-word\"));\n+    constraint (os && os != neon_logbits (size),\n+\t\t_(\"shift immediate must be 1, 2 or 3 for half-word, word\"\n+\t\t  \" or double-word accesses respectively\"));\n+    if (inst.operands[1].reg == REG_PC)\n+      as_tsktsk (MVE_BAD_PC);\n+\n+    switch (size)\n+      {\n+      case 8:\n+\tconstraint (elsize >= 64, BAD_EL_TYPE);\n+\tbreak;\n+      case 16:\n+\tconstraint (elsize < 16 || elsize >= 64, BAD_EL_TYPE);\n+\tbreak;\n+      case 32:\n+      case 64:\n+\tconstraint (elsize != size, BAD_EL_TYPE);\n+\tbreak;\n+      default:\n+\tbreak;\n+      }\n+    constraint (inst.operands[1].writeback || !inst.operands[1].preind,\n+\t\tBAD_ADDR_MODE);\n+    if (load)\n+      {\n+\tconstraint (inst.operands[0].reg == (inst.operands[1].imm & 0x1f),\n+\t\t    _(\"destination register and offset register may not be\"\n+\t\t    \" the same\"));\n+\tconstraint (size == elsize && inst.vectype.el[0].type != NT_unsigned,\n+\t\t    BAD_EL_TYPE);\n+\tconstraint (inst.vectype.el[0].type != NT_unsigned\n+\t\t    && inst.vectype.el[0].type != NT_signed, BAD_EL_TYPE);\n+\tinst.instruction |= (inst.vectype.el[0].type == NT_unsigned) << 28;\n+      }\n+    else\n+      {\n+\tconstraint (inst.vectype.el[0].type != NT_untyped, BAD_EL_TYPE);\n+      }\n+\n+    inst.instruction |= 1 << 23;\n+    inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+    inst.instruction |= inst.operands[1].reg << 16;\n+    inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+    inst.instruction |= neon_logbits (elsize) << 7;\n+    inst.instruction |= HI1 (inst.operands[1].imm) << 5;\n+    inst.instruction |= LOW4 (inst.operands[1].imm);\n+    inst.instruction |= !!os;\n+}\n+\n+static void\n+do_mve_vstr_vldr_RI (int size, int elsize, int load)\n+{\n+  enum neon_el_type type = inst.vectype.el[0].type;\n+\n+  constraint (size >= 64, BAD_ADDR_MODE);\n+  switch (size)\n+    {\n+    case 16:\n+      constraint (elsize < 16 || elsize >= 64, BAD_EL_TYPE);\n+      break;\n+    case 32:\n+      constraint (elsize != size, BAD_EL_TYPE);\n+      break;\n+    default:\n+      break;\n+    }\n+  if (load)\n+    {\n+      constraint (elsize != size && type != NT_unsigned\n+\t\t  && type != NT_signed, BAD_EL_TYPE);\n+    }\n+  else\n+    {\n+      constraint (elsize != size && type != NT_untyped, BAD_EL_TYPE);\n+    }\n+\n+  int imm = inst.relocs[0].exp.X_add_number;\n+  int add = 1;\n+  if (imm < 0)\n+    {\n+      add = 0;\n+      imm = -imm;\n+    }\n+\n+  if ((imm % (size / 8) != 0) || imm > (0x7f << neon_logbits (size)))\n+    {\n+      switch (size)\n+\t{\n+\tcase 8:\n+\t  constraint (1, _(\"immediate must be in the range of +/-[0,127]\"));\n+\t  break;\n+\tcase 16:\n+\t  constraint (1, _(\"immediate must be a multiple of 2 in the\"\n+\t\t\t   \" range of +/-[0,254]\"));\n+\t  break;\n+\tcase 32:\n+\t  constraint (1, _(\"immediate must be a multiple of 4 in the\"\n+\t\t\t   \" range of +/-[0,508]\"));\n+\t  break;\n+\t}\n+    }\n+\n+  if (size != elsize)\n+    {\n+      constraint (inst.operands[1].reg > 7, BAD_HIREG);\n+      constraint (inst.operands[0].reg > 14,\n+\t\t  _(\"MVE vector register in the range [Q0..Q7] expected\"));\n+      inst.instruction |= (load && type == NT_unsigned) << 28;\n+      inst.instruction |= (size == 16) << 19;\n+      inst.instruction |= neon_logbits (elsize) << 7;\n+    }\n+  else\n+    {\n+      if (inst.operands[1].reg == REG_PC)\n+\tas_tsktsk (MVE_BAD_PC);\n+      else if (inst.operands[1].reg == REG_SP && inst.operands[1].writeback)\n+\tas_tsktsk (MVE_BAD_SP);\n+      inst.instruction |= 1 << 12;\n+      inst.instruction |= neon_logbits (size) << 7;\n+    }\n+  inst.instruction |= inst.operands[1].preind << 24;\n+  inst.instruction |= add << 23;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= inst.operands[1].writeback << 21;\n+  inst.instruction |= inst.operands[1].reg << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction &= 0xffffff80;\n+  inst.instruction |= imm >> neon_logbits (size);\n+\n+}\n+\n+static void\n+do_mve_vstr_vldr (void)\n+{\n+  unsigned size;\n+  int load = 0;\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  switch (inst.instruction)\n+    {\n+    default:\n+      gas_assert (0);\n+      break;\n+    case M_MNEM_vldrb:\n+      load = 1;\n+      /* fall through.  */\n+    case M_MNEM_vstrb:\n+      size = 8;\n+      break;\n+    case M_MNEM_vldrh:\n+      load = 1;\n+      /* fall through.  */\n+    case M_MNEM_vstrh:\n+      size = 16;\n+      break;\n+    case M_MNEM_vldrw:\n+      load = 1;\n+      /* fall through.  */\n+    case M_MNEM_vstrw:\n+      size = 32;\n+      break;\n+    case M_MNEM_vldrd:\n+      load = 1;\n+      /* fall through.  */\n+    case M_MNEM_vstrd:\n+      size = 64;\n+      break;\n+    }\n+  unsigned elsize = inst.vectype.el[0].size;\n+\n+  if (inst.operands[1].isquad)\n+    {\n+      /* We are dealing with [Q, imm]{!} cases.  */\n+      do_mve_vstr_vldr_QI (size, elsize, load);\n+    }\n+  else\n+    {\n+      if (inst.operands[1].immisreg == 2)\n+\t{\n+\t  /* We are dealing with [R, Q, {UXTW #os}] cases.  */\n+\t  do_mve_vstr_vldr_RQ (size, elsize, load);\n+\t}\n+      else if (!inst.operands[1].immisreg)\n+\t{\n+\t  /* We are dealing with [R, Imm]{!}/[R], Imm cases.  */\n+\t  do_mve_vstr_vldr_RI (size, elsize, load);\n+\t}\n+      else\n+\tconstraint (1, BAD_ADDR_MODE);\n+    }\n+\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vst_vld (void)\n {\n@@ -20578,7 +20883,8 @@ static const struct asm_shift_name shift_names [] =\n   { \"lsr\", SHIFT_LSR },\t { \"LSR\", SHIFT_LSR },\n   { \"asr\", SHIFT_ASR },\t { \"ASR\", SHIFT_ASR },\n   { \"ror\", SHIFT_ROR },\t { \"ROR\", SHIFT_ROR },\n-  { \"rrx\", SHIFT_RRX },\t { \"RRX\", SHIFT_RRX }\n+  { \"rrx\", SHIFT_RRX },\t { \"RRX\", SHIFT_RRX },\n+  { \"uxtw\", SHIFT_UXTW}, { \"UXTW\", SHIFT_UXTW}\n };\n \n /* Table of all explicit relocation names.  */\n@@ -22948,6 +23254,14 @@ static const struct asm_opcode insns[] =\n  mCEF(vld41,\t_vld41,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n  mCEF(vld42,\t_vld42,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n  mCEF(vld43,\t_vld43,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vstrb,\t_vstrb,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vstrh,\t_vstrh,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vstrw,\t_vstrw,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vstrd,\t_vstrd,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vldrb,\t_vldrb,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vldrh,\t_vldrh,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vldrw,\t_vldrw,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n+ mCEF(vldrd,\t_vldrd,\t    2, (RMQ, ADDRMVE),\t\t\tmve_vstr_vldr),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT    & fpu_vfp_ext_v1xd"
    },
    {
      "sha": "7c651eb3c40fda796a5cee8a66572e41ee0bd02e",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-1.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-1.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VLDR with [R, Q] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vldr-bad-1.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "9f1ba4d9562211239005db857934855ac87439a2",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-1.l",
      "status": "added",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-1.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,98 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad element type for instruction -- `vldrb.16 q0,\\[r0,q1\\]'\n+[^:]*:11: Error: bad element type for instruction -- `vldrb.p16 q0,\\[r0,q1\\]'\n+[^:]*:12: Error: bad element type for instruction -- `vldrb.f16 q0,\\[r0,q1\\]'\n+[^:]*:13: Error: bad element type for instruction -- `vldrb.32 q0,\\[r0,q1\\]'\n+[^:]*:14: Error: bad element type for instruction -- `vldrb.f32 q0,\\[r0,q1\\]'\n+[^:]*:15: Error: bad element type for instruction -- `vldrb.64 q0,\\[r0,q1\\]'\n+[^:]*:16: Error: bad element type for instruction -- `vldrb.u64 q0,\\[r0,q1\\]'\n+[^:]*:17: Error: bad element type for instruction -- `vldrb.s64 q0,\\[r0,q1\\]'\n+[^:]*:18: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:19: Error: destination register and offset register may not be the same -- `vldrb.u32 q0,\\[r0,q0\\]'\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Error: syntax error -- `vldrbeq.u32 q0,\\[r0,q1\\]'\n+[^:]*:23: Error: syntax error -- `vldrbeq.u32 q0,\\[r0,q1\\]'\n+[^:]*:25: Error: syntax error -- `vldrbeq.u32 q0,\\[r0,q1\\]'\n+[^:]*:26: Error: vector predicated instruction should be in VPT/VPST block -- `vldrbt.u32 q0,\\[r0,q1\\]'\n+[^:]*:28: Error: instruction missing MVE vector predication code -- `vldrb.u32 q0,\\[r0,q1\\]'\n+[^:]*:30: Error: bad element type for instruction -- `vldrh.32 q0,\\[r0,q1\\]'\n+[^:]*:31: Error: bad element type for instruction -- `vldrh.f32 q0,\\[r0,q1\\]'\n+[^:]*:32: Error: bad element type for instruction -- `vldrh.64 q0,\\[r0,q1\\]'\n+[^:]*:33: Error: bad element type for instruction -- `vldrh.u64 q0,\\[r0,q1\\]'\n+[^:]*:34: Error: bad element type for instruction -- `vldrh.s64 q0,\\[r0,q1\\]'\n+[^:]*:35: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:36: Error: destination register and offset register may not be the same -- `vldrh.u32 q0,\\[r0,q0\\]'\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Error: syntax error -- `vldrheq.u32 q0,\\[r0,q1\\]'\n+[^:]*:40: Error: syntax error -- `vldrheq.u32 q0,\\[r0,q1\\]'\n+[^:]*:42: Error: syntax error -- `vldrheq.u32 q0,\\[r0,q1\\]'\n+[^:]*:43: Error: vector predicated instruction should be in VPT/VPST block -- `vldrht.u32 q0,\\[r0,q1\\]'\n+[^:]*:45: Error: instruction missing MVE vector predication code -- `vldrh.u32 q0,\\[r0,q1\\]'\n+[^:]*:47: Error: bad element type for instruction -- `vldrw.64 q0,\\[r0,q1\\]'\n+[^:]*:48: Error: bad element type for instruction -- `vldrw.u64 q0,\\[r0,q1\\]'\n+[^:]*:49: Error: bad element type for instruction -- `vldrw.s64 q0,\\[r0,q1\\]'\n+[^:]*:50: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:51: Error: destination register and offset register may not be the same -- `vldrw.u32 q0,\\[r0,q0\\]'\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:52: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:54: Error: syntax error -- `vldrweq.u32 q0,\\[r0,q1\\]'\n+[^:]*:55: Error: syntax error -- `vldrweq.u32 q0,\\[r0,q1\\]'\n+[^:]*:57: Error: syntax error -- `vldrweq.u32 q0,\\[r0,q1\\]'\n+[^:]*:58: Error: vector predicated instruction should be in VPT/VPST block -- `vldrwt.u32 q0,\\[r0,q1\\]'\n+[^:]*:60: Error: instruction missing MVE vector predication code -- `vldrw.u32 q0,\\[r0,q1\\]'\n+[^:]*:69: Error: bad element type for instruction -- `vldrd.8 q0,\\[r0,q1\\]'\n+[^:]*:70: Error: bad element type for instruction -- `vldrd.u8 q0,\\[r0,q1\\]'\n+[^:]*:71: Error: bad element type for instruction -- `vldrd.s8 q0,\\[r0,q1\\]'\n+[^:]*:72: Error: bad element type for instruction -- `vldrd.p8 q0,\\[r0,q1\\]'\n+[^:]*:73: Error: bad element type for instruction -- `vldrd.16 q0,\\[r0,q1\\]'\n+[^:]*:74: Error: bad element type for instruction -- `vldrd.u16 q0,\\[r0,q1\\]'\n+[^:]*:75: Error: bad element type for instruction -- `vldrd.s16 q0,\\[r0,q1\\]'\n+[^:]*:76: Error: bad element type for instruction -- `vldrd.p16 q0,\\[r0,q1\\]'\n+[^:]*:77: Error: bad element type for instruction -- `vldrd.f16 q0,\\[r0,q1\\]'\n+[^:]*:78: Error: bad element type for instruction -- `vldrd.32 q0,\\[r0,q1\\]'\n+[^:]*:79: Error: bad element type for instruction -- `vldrd.u32 q0,\\[r0,q1\\]'\n+[^:]*:80: Error: bad element type for instruction -- `vldrd.s32 q0,\\[r0,q1\\]'\n+[^:]*:81: Error: bad element type for instruction -- `vldrd.f32 q0,\\[r0,q1\\]'\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:82: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:84: Error: syntax error -- `vldrdeq.u64 q0,\\[r0,q1\\]'\n+[^:]*:85: Error: syntax error -- `vldrdeq.u64 q0,\\[r0,q1\\]'\n+[^:]*:87: Error: syntax error -- `vldrdeq.u64 q0,\\[r0,q1\\]'\n+[^:]*:88: Error: vector predicated instruction should be in VPT/VPST block -- `vldrdt.u64 q0,\\[r0,q1\\]'\n+[^:]*:90: Error: instruction missing MVE vector predication code -- `vldrd.u64 q0,\\[r0,q1\\]'\n+[^:]*:92: Error: shift expression expected -- `vldrb.u8 q0,\\[r0,q1,#0\\]'\n+[^:]*:93: Error: can not shift offsets when accessing less than half-word -- `vldrb.u8 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:94: Error: can not shift offsets when accessing less than half-word -- `vldrb.u16 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:95: Error: can not shift offsets when accessing less than half-word -- `vldrb.u32 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:96: Error: shift expression expected -- `vldrh.u16 q0,\\[r0,q1,#1\\]'\n+[^:]*:97: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrh.u16 q0,\\[r0,q1,UXTW#2\\]'\n+[^:]*:98: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrh.u32 q0,\\[r0,q1,UXTW#2\\]'\n+[^:]*:99: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrh.u16 q0,\\[r0,q1,UXTW#3\\]'\n+[^:]*:100: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrh.u32 q0,\\[r0,q1,UXTW#3\\]'\n+[^:]*:101: Error: shift expression expected -- `vldrw.u32 q0,\\[r0,q1,#2\\]'\n+[^:]*:102: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrw.u32 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:103: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrw.u32 q0,\\[r0,q1,UXTW#3\\]'\n+[^:]*:104: Error: shift expression expected -- `vldrd.u64 q0,\\[r0,q1,#3\\]'\n+[^:]*:105: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrd.u64 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:106: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrd.u64 q0,\\[r0,q1,UXTW#2\\]'\n+[^:]*:107: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vldrd.u64 q0,\\[r0,q1,UXTW#4\\]'\n+\n+"
    },
    {
      "sha": "09218cc35cc565bdb0b62eec24f7755e8cdf511a",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-1.s",
      "status": "added",
      "additions": 107,
      "deletions": 0,
      "changes": 107,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-1.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,107 @@\n+.macro cond mnem\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().u32 q0, [r0, q1]\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vldrb.16 q0, [r0, q1]\n+vldrb.p16 q0, [r0, q1]\n+vldrb.f16 q0, [r0, q1]\n+vldrb.32 q0, [r0, q1]\n+vldrb.f32 q0, [r0, q1]\n+vldrb.64 q0, [r0, q1]\n+vldrb.u64 q0, [r0, q1]\n+vldrb.s64 q0, [r0, q1]\n+vldrb.u32 q0, [pc, q1]\n+vldrb.u32 q0, [r0, q0]\n+cond vldrb\n+it eq\n+vldrbeq.u32 q0, [r0, q1]\n+vldrbeq.u32 q0, [r0, q1]\n+vpst\n+vldrbeq.u32 q0, [r0, q1]\n+vldrbt.u32 q0, [r0, q1]\n+vpst\n+vldrb.u32 q0, [r0, q1]\n+\n+vldrh.32 q0, [r0, q1]\n+vldrh.f32 q0, [r0, q1]\n+vldrh.64 q0, [r0, q1]\n+vldrh.u64 q0, [r0, q1]\n+vldrh.s64 q0, [r0, q1]\n+vldrh.u32 q0, [pc, q1]\n+vldrh.u32 q0, [r0, q0]\n+cond vldrh\n+it eq\n+vldrheq.u32 q0, [r0, q1]\n+vldrheq.u32 q0, [r0, q1]\n+vpst\n+vldrheq.u32 q0, [r0, q1]\n+vldrht.u32 q0, [r0, q1]\n+vpst\n+vldrh.u32 q0, [r0, q1]\n+\n+vldrw.64 q0, [r0, q1]\n+vldrw.u64 q0, [r0, q1]\n+vldrw.s64 q0, [r0, q1]\n+vldrw.u32 q0, [pc, q1]\n+vldrw.u32 q0, [r0, q0]\n+cond vldrw\n+it eq\n+vldrweq.u32 q0, [r0, q1]\n+vldrweq.u32 q0, [r0, q1]\n+vpst\n+vldrweq.u32 q0, [r0, q1]\n+vldrwt.u32 q0, [r0, q1]\n+vpst\n+vldrw.u32 q0, [r0, q1]\n+\n+.macro cond64\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vldrd.u64 q0, [r0, q1]\n+.endr\n+.endm\n+\n+vldrd.8 q0, [r0, q1]\n+vldrd.u8 q0, [r0, q1]\n+vldrd.s8 q0, [r0, q1]\n+vldrd.p8 q0, [r0, q1]\n+vldrd.16 q0, [r0, q1]\n+vldrd.u16 q0, [r0, q1]\n+vldrd.s16 q0, [r0, q1]\n+vldrd.p16 q0, [r0, q1]\n+vldrd.f16 q0, [r0, q1]\n+vldrd.32 q0, [r0, q1]\n+vldrd.u32 q0, [r0, q1]\n+vldrd.s32 q0, [r0, q1]\n+vldrd.f32 q0, [r0, q1]\n+cond64\n+it eq\n+vldrdeq.u64 q0, [r0, q1]\n+vldrdeq.u64 q0, [r0, q1]\n+vpst\n+vldrdeq.u64 q0, [r0, q1]\n+vldrdt.u64 q0, [r0, q1]\n+vpst\n+vldrd.u64 q0, [r0, q1]\n+\n+vldrb.u8 q0, [r0, q1, #0]\n+vldrb.u8 q0, [r0, q1, UXTW #1]\n+vldrb.u16 q0, [r0, q1, UXTW #1]\n+vldrb.u32 q0, [r0, q1, UXTW #1]\n+vldrh.u16 q0, [r0, q1, #1]\n+vldrh.u16 q0, [r0, q1, UXTW #2]\n+vldrh.u32 q0, [r0, q1, UXTW #2]\n+vldrh.u16 q0, [r0, q1, UXTW #3]\n+vldrh.u32 q0, [r0, q1, UXTW #3]\n+vldrw.u32 q0, [r0, q1, #2]\n+vldrw.u32 q0, [r0, q1, UXTW #1]\n+vldrw.u32 q0, [r0, q1, UXTW #3]\n+vldrd.u64 q0, [r0, q1, #3]\n+vldrd.u64 q0, [r0, q1, UXTW #1]\n+vldrd.u64 q0, [r0, q1, UXTW #2]\n+vldrd.u64 q0, [r0, q1, UXTW #4]"
    },
    {
      "sha": "9dc3fd898f062295cc223d1fbe1ed57918ece8ca",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-2.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-2.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VLDR with [Q, #imm] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vldr-bad-2.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "eb3f537deb2e7690e14edbcd359c54312696b9c5",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-2.l",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-2.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,41 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad element type for instruction -- `vldrw.u16 q0,\\[q1,#4\\]'\n+[^:]*:11: Error: bad element type for instruction -- `vldrw.u64 q0,\\[q1,#-4\\]'\n+[^:]*:12: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.u32 q0,\\[q1,#1\\]'\n+[^:]*:13: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.u32 q0,\\[q1,#2\\]'\n+[^:]*:14: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.u32 q0,\\[q1,#231\\]'\n+[^:]*:15: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.u32 q0,\\[q1,#516\\]'\n+[^:]*:16: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.u32 q0,\\[q1,#-516\\]'\n+[^:]*:17: Error: destination register and offset register may not be the same -- `vldrw.u32 q0,\\[q0,#4\\]'\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:18: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:20: Error: syntax error -- `vldrweq.u32 q0,\\[q1\\]'\n+[^:]*:21: Error: syntax error -- `vldrweq.u32 q0,\\[q1\\]'\n+[^:]*:23: Error: syntax error -- `vldrweq.u32 q0,\\[q1\\]'\n+[^:]*:24: Error: vector predicated instruction should be in VPT/VPST block -- `vldrwt.u32 q0,\\[q1\\]'\n+[^:]*:26: Error: instruction missing MVE vector predication code -- `vldrw.u32 q0,\\[q1\\]'\n+[^:]*:27: Error: bad element type for instruction -- `vldrd.u16 q0,\\[q1,#8\\]'\n+[^:]*:28: Error: bad element type for instruction -- `vldrd.u32 q0,\\[q1,#-8\\]'\n+[^:]*:29: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#1\\]'\n+[^:]*:30: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#4\\]'\n+[^:]*:31: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#7\\]'\n+[^:]*:32: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#228\\]'\n+[^:]*:33: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#1024\\]'\n+[^:]*:34: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vldrd.u64 q0,\\[q1,#-1024\\]'\n+[^:]*:35: Error: destination register and offset register may not be the same -- `vldrd.u64 q0,\\[q0,#8\\]'\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Error: syntax error -- `vldrdeq.u64 q0,\\[q1\\]'\n+[^:]*:39: Error: syntax error -- `vldrdeq.u64 q0,\\[q1\\]'\n+[^:]*:41: Error: syntax error -- `vldrdeq.u64 q0,\\[q1\\]'\n+[^:]*:42: Error: vector predicated instruction should be in VPT/VPST block -- `vldrdt.u64 q0,\\[q1\\]'\n+[^:]*:44: Error: instruction missing MVE vector predication code -- `vldrd.u64 q0,\\[q1\\]'\n+"
    },
    {
      "sha": "d0c4e77e711d5257c55b2fe30ca45065f35eaff2",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-2.s",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-2.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,44 @@\n+.macro cond mnem, size\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().u\\size q0, [q1, #8]\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vldrw.u16 q0, [q1, #4]\n+vldrw.u64 q0, [q1, #-4]\n+vldrw.u32 q0, [q1, #1]\n+vldrw.u32 q0, [q1, #2]\n+vldrw.u32 q0, [q1, #231]\n+vldrw.u32 q0, [q1, #516]\n+vldrw.u32 q0, [q1, #-516]\n+vldrw.u32 q0, [q0, #4]\n+cond vldrw, 32\n+it eq\n+vldrweq.u32 q0, [q1]\n+vldrweq.u32 q0, [q1]\n+vpst\n+vldrweq.u32 q0, [q1]\n+vldrwt.u32 q0, [q1]\n+vpst\n+vldrw.u32 q0, [q1]\n+vldrd.u16 q0, [q1, #8]\n+vldrd.u32 q0, [q1, #-8]\n+vldrd.u64 q0, [q1, #1]\n+vldrd.u64 q0, [q1, #4]\n+vldrd.u64 q0, [q1, #7]\n+vldrd.u64 q0, [q1, #228]\n+vldrd.u64 q0, [q1, #1024]\n+vldrd.u64 q0, [q1, #-1024]\n+vldrd.u64 q0, [q0, #8]\n+cond vldrd, 64\n+it eq\n+vldrdeq.u64 q0, [q1]\n+vldrdeq.u64 q0, [q1]\n+vpst\n+vldrdeq.u64 q0, [q1]\n+vldrdt.u64 q0, [q1]\n+vpst\n+vldrd.u64 q0, [q1]"
    },
    {
      "sha": "2f5e230249b0e91064992febb46a66fe2a53548e",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-3.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-3.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VLDR with [R, #imm] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vldr-bad-3.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "024822ded3e66ba41b52fa20b13f2e5a3f20069a",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-3.l",
      "status": "added",
      "additions": 135,
      "deletions": 0,
      "changes": 135,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-3.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,135 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0,#128\\]'\n+[^:]*:11: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0,#-128\\]'\n+[^:]*:12: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0,#128\\]'\n+[^:]*:13: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0,#-128\\]'\n+[^:]*:14: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0,#128\\]'\n+[^:]*:15: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0,#-128\\]'\n+[^:]*:16: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0,#128\\]!'\n+[^:]*:17: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0,#-128\\]!'\n+[^:]*:18: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0,#128\\]!'\n+[^:]*:19: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0,#-128\\]!'\n+[^:]*:20: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0,#128\\]!'\n+[^:]*:21: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0,#-128\\]!'\n+[^:]*:22: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0\\],#128'\n+[^:]*:23: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.8 q0,\\[r0\\],#-128'\n+[^:]*:24: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0\\],#128'\n+[^:]*:25: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u16 q0,\\[r0\\],#-128'\n+[^:]*:26: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0\\],#128'\n+[^:]*:27: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vldrb.u32 q0,\\[r0\\],#-128'\n+[^:]*:28: Error: lo register required -- `vldrb.u16 q0,\\[r10,#2\\]'\n+[^:]*:29: Error: lo register required -- `vldrb.u16 q0,\\[r10,#2\\]!'\n+[^:]*:30: Error: lo register required -- `vldrb.u16 q0,\\[r10\\],#2'\n+[^:]*:31: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:32: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:33: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:35: Error: bad element type for instruction -- `vldrb.16 q0,\\[r0\\]'\n+[^:]*:36: Error: bad element type for instruction -- `vldrb.f16 q0,\\[r0\\]'\n+[^:]*:37: Error: bad element type for instruction -- `vldrb.p16 q0,\\[r0\\]'\n+[^:]*:38: Error: bad element type for instruction -- `vldrb.32 q0,\\[r0\\]'\n+[^:]*:39: Error: bad element type for instruction -- `vldrb.f32 q0,\\[r0\\]'\n+[^:]*:40: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#1\\]'\n+[^:]*:41: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#17\\]'\n+[^:]*:42: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#-17\\]'\n+[^:]*:43: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#256\\]'\n+[^:]*:44: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#-256\\]'\n+[^:]*:45: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0,#1\\]'\n+[^:]*:46: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0,#17\\]'\n+[^:]*:47: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0,#-17\\]'\n+[^:]*:48: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0,#256\\]'\n+[^:]*:49: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0,#-256\\]'\n+[^:]*:50: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#1\\]!'\n+[^:]*:51: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#17\\]!'\n+[^:]*:52: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#-17\\]!'\n+[^:]*:53: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#256\\]!'\n+[^:]*:54: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0,#-256\\]!'\n+[^:]*:55: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.s32 q0,\\[r0,#1\\]!'\n+[^:]*:56: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.s32 q0,\\[r0,#17\\]!'\n+[^:]*:57: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.s32 q0,\\[r0,#-17\\]!'\n+[^:]*:58: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.s32 q0,\\[r0,#256\\]!'\n+[^:]*:59: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.s32 q0,\\[r0,#-256\\]!'\n+[^:]*:60: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0\\],#1'\n+[^:]*:61: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0\\],#17'\n+[^:]*:62: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0\\],#-17'\n+[^:]*:63: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0\\],#256'\n+[^:]*:64: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.16 q0,\\[r0\\],#-256'\n+[^:]*:65: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0\\],#1'\n+[^:]*:66: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0\\],#17'\n+[^:]*:67: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0\\],#-17'\n+[^:]*:68: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0\\],#256'\n+[^:]*:69: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vldrh.u32 q0,\\[r0\\],#-256'\n+[^:]*:70: Error: lo register required -- `vldrh.u32 q0,\\[r10,#4\\]'\n+[^:]*:71: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:72: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:73: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:74: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:75: Error: bad element type for instruction -- `vldrh.8 q0,\\[r0\\]'\n+[^:]*:76: Error: bad element type for instruction -- `vldrh.u8 q0,\\[r0\\]'\n+[^:]*:77: Error: bad element type for instruction -- `vldrh.s8 q0,\\[r0\\]'\n+[^:]*:78: Error: bad element type for instruction -- `vldrh.p8 q0,\\[r0\\]'\n+[^:]*:79: Error: bad element type for instruction -- `vldrh.32 q0,\\[r0\\]'\n+[^:]*:80: Error: bad element type for instruction -- `vldrh.f32 q0,\\[r0\\]'\n+[^:]*:81: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#3\\]'\n+[^:]*:82: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-3\\]'\n+[^:]*:83: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#514\\]'\n+[^:]*:84: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-258\\]'\n+[^:]*:85: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#258\\]'\n+[^:]*:86: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#516\\]'\n+[^:]*:87: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-516\\]'\n+[^:]*:88: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#3\\]!'\n+[^:]*:89: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-3\\]!'\n+[^:]*:90: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#514\\]!'\n+[^:]*:91: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-258\\]!'\n+[^:]*:92: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#258\\]!'\n+[^:]*:93: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#516\\]!'\n+[^:]*:94: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0,#-516\\]!'\n+[^:]*:95: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#3'\n+[^:]*:96: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#-3'\n+[^:]*:97: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#514'\n+[^:]*:98: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#-258'\n+[^:]*:99: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#258'\n+[^:]*:100: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#516'\n+[^:]*:101: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vldrw.32 q0,\\[r0\\],#-516'\n+[^:]*:102: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:103: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:104: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:105: Error: bad element type for instruction -- `vldrw.8 q0,\\[r0\\]'\n+[^:]*:106: Error: bad element type for instruction -- `vldrw.u8 q0,\\[r0\\]'\n+[^:]*:107: Error: bad element type for instruction -- `vldrw.s8 q0,\\[r0\\]'\n+[^:]*:108: Error: bad element type for instruction -- `vldrw.p8 q0,\\[r0\\]'\n+[^:]*:109: Error: bad element type for instruction -- `vldrw.16 q0,\\[r0\\]'\n+[^:]*:110: Error: bad element type for instruction -- `vldrw.u16 q0,\\[r0\\]'\n+[^:]*:111: Error: bad element type for instruction -- `vldrw.s16 q0,\\[r0\\]'\n+[^:]*:112: Error: bad element type for instruction -- `vldrw.f16 q0,\\[r0\\]'\n+[^:]*:113: Error: bad element type for instruction -- `vldrw.p16 q0,\\[r0\\]'\n+[^:]*:115: Error: syntax error -- `vldrbeq.8 q0,\\[r0\\]'\n+[^:]*:116: Error: syntax error -- `vldrbeq.8 q0,\\[r0\\]'\n+[^:]*:118: Error: syntax error -- `vldrbeq.8 q0,\\[r0\\]'\n+[^:]*:119: Error: vector predicated instruction should be in VPT/VPST block -- `vldrbt.8 q0,\\[r0\\]'\n+[^:]*:121: Error: instruction missing MVE vector predication code -- `vldrb.8 q0,\\[r0\\]'\n+[^:]*:123: Error: syntax error -- `vldrheq.16 q0,\\[r0\\]'\n+[^:]*:124: Error: syntax error -- `vldrheq.16 q0,\\[r0\\]'\n+[^:]*:126: Error: syntax error -- `vldrheq.16 q0,\\[r0\\]'\n+[^:]*:127: Error: vector predicated instruction should be in VPT/VPST block -- `vldrht.16 q0,\\[r0\\]'\n+[^:]*:129: Error: instruction missing MVE vector predication code -- `vldrh.16 q0,\\[r0\\]'\n+[^:]*:131: Error: syntax error -- `vldrweq.32 q0,\\[r0\\]'\n+[^:]*:132: Error: syntax error -- `vldrweq.32 q0,\\[r0\\]'\n+[^:]*:134: Error: syntax error -- `vldrweq.32 q0,\\[r0\\]'\n+[^:]*:135: Error: vector predicated instruction should be in VPT/VPST block -- `vldrwt.32 q0,\\[r0\\]'\n+[^:]*:137: Error: instruction missing MVE vector predication code -- `vldrw.32 q0,\\[r0\\]'"
    },
    {
      "sha": "3b3fd61007457896b9086c4591029670b4ec34b3",
      "filename": "gas/testsuite/gas/arm/mve-vldr-bad-3.s",
      "status": "added",
      "additions": 138,
      "deletions": 0,
      "changes": 138,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vldr-bad-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vldr-bad-3.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,138 @@\n+.macro cond mnem\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().u32 q0, [r0]\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vldrb.8 q0, [r0, #128]\n+vldrb.8 q0, [r0, #-128]\n+vldrb.u16 q0, [r0, #128]\n+vldrb.u16 q0, [r0, #-128]\n+vldrb.u32 q0, [r0, #128]\n+vldrb.u32 q0, [r0, #-128]\n+vldrb.8 q0, [r0, #128]!\n+vldrb.8 q0, [r0, #-128]!\n+vldrb.u16 q0, [r0, #128]!\n+vldrb.u16 q0, [r0, #-128]!\n+vldrb.u32 q0, [r0, #128]!\n+vldrb.u32 q0, [r0, #-128]!\n+vldrb.8 q0, [r0], #128\n+vldrb.8 q0, [r0], #-128\n+vldrb.u16 q0, [r0], #128\n+vldrb.u16 q0, [r0], #-128\n+vldrb.u32 q0, [r0], #128\n+vldrb.u32 q0, [r0], #-128\n+vldrb.u16 q0, [r10, #2]\n+vldrb.u16 q0, [r10, #2]!\n+vldrb.u16 q0, [r10], #2\n+vldrb.8 q0, [sp, #2]!\n+vldrb.8 q0, [sp], #2\n+vldrb.8 q0, [pc, #2]\n+cond vldrb\n+vldrb.16 q0, [r0]\n+vldrb.f16 q0, [r0]\n+vldrb.p16 q0, [r0]\n+vldrb.32 q0, [r0]\n+vldrb.f32 q0, [r0]\n+vldrh.16 q0, [r0, #1]\n+vldrh.16 q0, [r0, #17]\n+vldrh.16 q0, [r0, #-17]\n+vldrh.16 q0, [r0, #256]\n+vldrh.16 q0, [r0, #-256]\n+vldrh.u32 q0, [r0, #1]\n+vldrh.u32 q0, [r0, #17]\n+vldrh.u32 q0, [r0, #-17]\n+vldrh.u32 q0, [r0, #256]\n+vldrh.u32 q0, [r0, #-256]\n+vldrh.16 q0, [r0, #1]!\n+vldrh.16 q0, [r0, #17]!\n+vldrh.16 q0, [r0, #-17]!\n+vldrh.16 q0, [r0, #256]!\n+vldrh.16 q0, [r0, #-256]!\n+vldrh.s32 q0, [r0, #1]!\n+vldrh.s32 q0, [r0, #17]!\n+vldrh.s32 q0, [r0, #-17]!\n+vldrh.s32 q0, [r0, #256]!\n+vldrh.s32 q0, [r0, #-256]!\n+vldrh.16 q0, [r0], #1\n+vldrh.16 q0, [r0], #17\n+vldrh.16 q0, [r0], #-17\n+vldrh.16 q0, [r0], #256\n+vldrh.16 q0, [r0], #-256\n+vldrh.u32 q0, [r0], #1\n+vldrh.u32 q0, [r0], #17\n+vldrh.u32 q0, [r0], #-17\n+vldrh.u32 q0, [r0], #256\n+vldrh.u32 q0, [r0], #-256\n+vldrh.u32 q0, [r10, #4]\n+vldrh.16 q0, [sp, #2]!\n+vldrh.16 q0, [sp], #2\n+vldrh.16 q0, [pc, #2]\n+cond vldrh\n+vldrh.8 q0, [r0]\n+vldrh.u8 q0, [r0]\n+vldrh.s8 q0, [r0]\n+vldrh.p8 q0, [r0]\n+vldrh.32 q0, [r0]\n+vldrh.f32 q0, [r0]\n+vldrw.32 q0, [r0, #3]\n+vldrw.32 q0, [r0, #-3]\n+vldrw.32 q0, [r0, #514]\n+vldrw.32 q0, [r0, #-258]\n+vldrw.32 q0, [r0, #258]\n+vldrw.32 q0, [r0, #516]\n+vldrw.32 q0, [r0, #-516]\n+vldrw.32 q0, [r0, #3]!\n+vldrw.32 q0, [r0, #-3]!\n+vldrw.32 q0, [r0, #514]!\n+vldrw.32 q0, [r0, #-258]!\n+vldrw.32 q0, [r0, #258]!\n+vldrw.32 q0, [r0, #516]!\n+vldrw.32 q0, [r0, #-516]!\n+vldrw.32 q0, [r0], #3\n+vldrw.32 q0, [r0], #-3\n+vldrw.32 q0, [r0], #514\n+vldrw.32 q0, [r0], #-258\n+vldrw.32 q0, [r0], #258\n+vldrw.32 q0, [r0], #516\n+vldrw.32 q0, [r0], #-516\n+vldrw.32 q0, [sp, #4]!\n+vldrw.32 q0, [pc, #4]\n+cond vldrw\n+vldrw.8 q0, [r0]\n+vldrw.u8 q0, [r0]\n+vldrw.s8 q0, [r0]\n+vldrw.p8 q0, [r0]\n+vldrw.16 q0, [r0]\n+vldrw.u16 q0, [r0]\n+vldrw.s16 q0, [r0]\n+vldrw.f16 q0, [r0]\n+vldrw.p16 q0, [r0]\n+it eq\n+vldrbeq.8 q0, [r0]\n+vldrbeq.8 q0, [r0]\n+vpst\n+vldrbeq.8 q0, [r0]\n+vldrbt.8 q0, [r0]\n+vpst\n+vldrb.8 q0, [r0]\n+it eq\n+vldrheq.16 q0, [r0]\n+vldrheq.16 q0, [r0]\n+vpst\n+vldrheq.16 q0, [r0]\n+vldrht.16 q0, [r0]\n+vpst\n+vldrh.16 q0, [r0]\n+it eq\n+vldrweq.32 q0, [r0]\n+vldrweq.32 q0, [r0]\n+vpst\n+vldrweq.32 q0, [r0]\n+vldrwt.32 q0, [r0]\n+vpst\n+vldrw.32 q0, [r0]\n+"
    },
    {
      "sha": "05e95e341750c4ec36d50306974e8f82081d422c",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-1.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-1.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSTR with [R, Q] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vstr-bad-1.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "8fb6b06d869c9e2a220e3eb729cf0d12f7dd6e56",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-1.l",
      "status": "added",
      "additions": 105,
      "deletions": 0,
      "changes": 105,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-1.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,105 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Error: bad element type for instruction -- `vstrb.s8 q0,\\[r0,q1\\]'\n+[^:]*:13: Error: bad element type for instruction -- `vstrb.u8 q0,\\[r0,q1\\]'\n+[^:]*:14: Error: bad element type for instruction -- `vstrb.s16 q0,\\[r0,q1\\]'\n+[^:]*:15: Error: bad element type for instruction -- `vstrb.u16 q0,\\[r0,q1\\]'\n+[^:]*:16: Error: bad element type for instruction -- `vstrb.f16 q0,\\[r0,q1\\]'\n+[^:]*:17: Error: bad element type for instruction -- `vstrb.u32 q0,\\[r0,q1\\]'\n+[^:]*:18: Error: bad element type for instruction -- `vstrb.s32 q0,\\[r0,q1\\]'\n+[^:]*:19: Error: bad element type for instruction -- `vstrb.f32 q0,\\[r0,q1\\]'\n+[^:]*:20: Error: bad element type for instruction -- `vstrb.64 q0,\\[r0,q1\\]'\n+[^:]*:21: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: bad element type for instruction -- `vstrh.8 q0,\\[r0,q1\\]'\n+[^:]*:26: Error: bad element type for instruction -- `vstrh.s8 q0,\\[r0,q1\\]'\n+[^:]*:27: Error: bad element type for instruction -- `vstrh.u8 q0,\\[r0,q1\\]'\n+[^:]*:28: Error: bad element type for instruction -- `vstrh.s16 q0,\\[r0,q1\\]'\n+[^:]*:29: Error: bad element type for instruction -- `vstrh.u16 q0,\\[r0,q1\\]'\n+[^:]*:30: Error: bad element type for instruction -- `vstrh.f16 q0,\\[r0,q1\\]'\n+[^:]*:31: Error: bad element type for instruction -- `vstrh.u32 q0,\\[r0,q1\\]'\n+[^:]*:32: Error: bad element type for instruction -- `vstrh.s32 q0,\\[r0,q1\\]'\n+[^:]*:33: Error: bad element type for instruction -- `vstrh.f32 q0,\\[r0,q1\\]'\n+[^:]*:34: Error: bad element type for instruction -- `vstrh.64 q0,\\[r0,q1\\]'\n+[^:]*:35: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Error: shift expression expected -- `vstrh.16 q0,\\[r0,q1,#1\\]'\n+[^:]*:40: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrh.16 q0,\\[r0,q1,UXTW#2\\]'\n+[^:]*:41: Error: bad element type for instruction -- `vstrw.8 q0,\\[r0,q1\\]'\n+[^:]*:42: Error: bad element type for instruction -- `vstrw.u8 q0,\\[r0,q1\\]'\n+[^:]*:43: Error: bad element type for instruction -- `vstrw.s8 q0,\\[r0,q1\\]'\n+[^:]*:44: Error: bad element type for instruction -- `vstrw.16 q0,\\[r0,q1\\]'\n+[^:]*:45: Error: bad element type for instruction -- `vstrw.f16 q0,\\[r0,q1\\]'\n+[^:]*:46: Error: bad element type for instruction -- `vstrw.u16 q0,\\[r0,q1\\]'\n+[^:]*:47: Error: bad element type for instruction -- `vstrw.s16 q0,\\[r0,q1\\]'\n+[^:]*:48: Error: bad element type for instruction -- `vstrw.u32 q0,\\[r0,q1\\]'\n+[^:]*:49: Error: bad element type for instruction -- `vstrw.s32 q0,\\[r0,q1\\]'\n+[^:]*:50: Error: bad element type for instruction -- `vstrw.f32 q0,\\[r0,q1\\]'\n+[^:]*:51: Error: bad element type for instruction -- `vstrw.64 q0,\\[r0,q1\\]'\n+[^:]*:52: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:53: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:56: Error: shift expression expected -- `vstrw.32 q0,\\[r0,q1,#2\\]'\n+[^:]*:57: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrw.32 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:58: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrw.32 q0,\\[r0,q1,UXTW#3\\]'\n+[^:]*:59: Error: bad element type for instruction -- `vstrd.8 q0,\\[r0,q1\\]'\n+[^:]*:60: Error: bad element type for instruction -- `vstrd.u8 q0,\\[r0,q1\\]'\n+[^:]*:61: Error: bad element type for instruction -- `vstrd.s8 q0,\\[r0,q1\\]'\n+[^:]*:62: Error: bad element type for instruction -- `vstrd.16 q0,\\[r0,q1\\]'\n+[^:]*:63: Error: bad element type for instruction -- `vstrd.u16 q0,\\[r0,q1\\]'\n+[^:]*:64: Error: bad element type for instruction -- `vstrd.s16 q0,\\[r0,q1\\]'\n+[^:]*:65: Error: bad element type for instruction -- `vstrd.f16 q0,\\[r0,q1\\]'\n+[^:]*:66: Error: bad element type for instruction -- `vstrd.32 q0,\\[r0,q1\\]'\n+[^:]*:67: Error: bad element type for instruction -- `vstrd.u32 q0,\\[r0,q1\\]'\n+[^:]*:68: Error: bad element type for instruction -- `vstrd.s32 q0,\\[r0,q1\\]'\n+[^:]*:69: Error: bad element type for instruction -- `vstrd.f32 q0,\\[r0,q1\\]'\n+[^:]*:70: Error: bad element type for instruction -- `vstrd.f64 q0,\\[r0,q1\\]'\n+[^:]*:71: Error: bad element type for instruction -- `vstrd.u64 q0,\\[r0,q1\\]'\n+[^:]*:72: Error: bad element type for instruction -- `vstrd.s64 q0,\\[r0,q1\\]'\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:83: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:84: Error: shift expression expected -- `vstrd.64 q0,\\[r0,q1,#3\\]'\n+[^:]*:85: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrd.64 q0,\\[r0,q1,UXTW#1\\]'\n+[^:]*:86: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrd.64 q0,\\[r0,q1,UXTW#2\\]'\n+[^:]*:87: Error: shift immediate must be 1, 2 or 3 for half-word, word or double-word accesses respectively -- `vstrd.64 q0,\\[r0,q1,UXTW#4\\]'\n+[^:]*:90: Error: syntax error -- `vstrbeq.32 q0,\\[r0,q1\\]'\n+[^:]*:91: Error: syntax error -- `vstrbeq.32 q0,\\[r0,q1\\]'\n+[^:]*:93: Error: syntax error -- `vstrbeq.32 q0,\\[r0,q1\\]'\n+[^:]*:95: Error: instruction missing MVE vector predication code -- `vstrb.32 q0,\\[r0,q1\\]'\n+[^:]*:96: Error: vector predicated instruction should be in VPT/VPST block -- `vstrbt.32 q0,\\[r0,q1\\]'\n+[^:]*:97: Error: vector predicated instruction should be in VPT/VPST block -- `vstrbe.32 q0,\\[r0,q1\\]'\n+[^:]*:99: Error: syntax error -- `vstrheq.32 q0,\\[r0,q1\\]'\n+[^:]*:100: Error: syntax error -- `vstrheq.32 q0,\\[r0,q1\\]'\n+[^:]*:102: Error: syntax error -- `vstrheq.32 q0,\\[r0,q1\\]'\n+[^:]*:104: Error: instruction missing MVE vector predication code -- `vstrh.32 q0,\\[r0,q1\\]'\n+[^:]*:105: Error: vector predicated instruction should be in VPT/VPST block -- `vstrht.32 q0,\\[r0,q1\\]'\n+[^:]*:106: Error: vector predicated instruction should be in VPT/VPST block -- `vstrhe.32 q0,\\[r0,q1\\]'\n+[^:]*:108: Error: syntax error -- `vstrweq.32 q0,\\[r0,q1\\]'\n+[^:]*:109: Error: syntax error -- `vstrweq.32 q0,\\[r0,q1\\]'\n+[^:]*:111: Error: syntax error -- `vstrweq.32 q0,\\[r0,q1\\]'\n+[^:]*:113: Error: instruction missing MVE vector predication code -- `vstrw.32 q0,\\[r0,q1\\]'\n+[^:]*:114: Error: vector predicated instruction should be in VPT/VPST block -- `vstrwt.32 q0,\\[r0,q1\\]'\n+[^:]*:115: Error: vector predicated instruction should be in VPT/VPST block -- `vstrwe.32 q0,\\[r0,q1\\]'\n+[^:]*:117: Error: syntax error -- `vstrdeq.64 q0,\\[r0,q1\\]'\n+[^:]*:118: Error: syntax error -- `vstrdeq.64 q0,\\[r0,q1\\]'\n+[^:]*:120: Error: syntax error -- `vstrdeq.64 q0,\\[r0,q1\\]'\n+[^:]*:122: Error: instruction missing MVE vector predication code -- `vstrd.64 q0,\\[r0,q1\\]'\n+[^:]*:123: Error: vector predicated instruction should be in VPT/VPST block -- `vstrdt.64 q0,\\[r0,q1\\]'\n+[^:]*:124: Error: vector predicated instruction should be in VPT/VPST block -- `vstrde.64 q0,\\[r0,q1\\]'"
    },
    {
      "sha": "1eafc6a5f7f2ba7f5eb84dd47dfb4b85391b1795",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-1.s",
      "status": "added",
      "additions": 124,
      "deletions": 0,
      "changes": 124,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-1.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,124 @@\n+.macro cond mnem\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().32 q0, [r0, q1]\n+.endr\n+.endm\n+\n+\n+\n+.syntax unified\n+.thumb\n+vstrb.s8 q0, [r0, q1]\n+vstrb.u8 q0, [r0, q1]\n+vstrb.s16 q0, [r0, q1]\n+vstrb.u16 q0, [r0, q1]\n+vstrb.f16 q0, [r0, q1]\n+vstrb.u32 q0, [r0, q1]\n+vstrb.s32 q0, [r0, q1]\n+vstrb.f32 q0, [r0, q1]\n+vstrb.64 q0, [r0, q1]\n+vstrb.16 q0, [pc, q1]\n+cond vstrb\n+\n+\n+vstrh.8 q0, [r0, q1]\n+vstrh.s8 q0, [r0, q1]\n+vstrh.u8 q0, [r0, q1]\n+vstrh.s16 q0, [r0, q1]\n+vstrh.u16 q0, [r0, q1]\n+vstrh.f16 q0, [r0, q1]\n+vstrh.u32 q0, [r0, q1]\n+vstrh.s32 q0, [r0, q1]\n+vstrh.f32 q0, [r0, q1]\n+vstrh.64 q0, [r0, q1]\n+vstrh.16 q0, [pc, q1]\n+cond vstrh\n+\n+\n+vstrh.16 q0, [r0, q1, #1]\n+vstrh.16 q0, [r0, q1, UXTW #2]\n+vstrw.8 q0, [r0, q1]\n+vstrw.u8 q0, [r0, q1]\n+vstrw.s8 q0, [r0, q1]\n+vstrw.16 q0, [r0, q1]\n+vstrw.f16 q0, [r0, q1]\n+vstrw.u16 q0, [r0, q1]\n+vstrw.s16 q0, [r0, q1]\n+vstrw.u32 q0, [r0, q1]\n+vstrw.s32 q0, [r0, q1]\n+vstrw.f32 q0, [r0, q1]\n+vstrw.64 q0, [r0, q1]\n+vstrw.32 q0, [pc, q1]\n+cond vstrw\n+\n+\n+vstrw.32 q0, [r0, q1, #2]\n+vstrw.32 q0, [r0, q1, UXTW #1]\n+vstrw.32 q0, [r0, q1, UXTW #3]\n+vstrd.8 q0, [r0, q1]\n+vstrd.u8 q0, [r0, q1]\n+vstrd.s8 q0, [r0, q1]\n+vstrd.16 q0, [r0, q1]\n+vstrd.u16 q0, [r0, q1]\n+vstrd.s16 q0, [r0, q1]\n+vstrd.f16 q0, [r0, q1]\n+vstrd.32 q0, [r0, q1]\n+vstrd.u32 q0, [r0, q1]\n+vstrd.s32 q0, [r0, q1]\n+vstrd.f32 q0, [r0, q1]\n+vstrd.f64 q0, [r0, q1]\n+vstrd.u64 q0, [r0, q1]\n+vstrd.s64 q0, [r0, q1]\n+\n+.macro cond64\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vstrd\\().64 q0, [r0, q1]\n+.endr\n+.endm\n+\n+\n+\n+cond64\n+vstrd.64 q0, [r0, q1, #3]\n+vstrd.64 q0, [r0, q1, UXTW #1]\n+vstrd.64 q0, [r0, q1, UXTW #2]\n+vstrd.64 q0, [r0, q1, UXTW #4]\n+\n+it eq\n+vstrbeq.32 q0, [r0, q1]\n+vstrbeq.32 q0, [r0, q1]\n+vpst\n+vstrbeq.32 q0, [r0, q1]\n+vpst\n+vstrb.32 q0, [r0, q1]\n+vstrbt.32 q0, [r0, q1]\n+vstrbe.32 q0, [r0, q1]\n+it eq\n+vstrheq.32 q0, [r0, q1]\n+vstrheq.32 q0, [r0, q1]\n+vpst\n+vstrheq.32 q0, [r0, q1]\n+vpst\n+vstrh.32 q0, [r0, q1]\n+vstrht.32 q0, [r0, q1]\n+vstrhe.32 q0, [r0, q1]\n+it eq\n+vstrweq.32 q0, [r0, q1]\n+vstrweq.32 q0, [r0, q1]\n+vpst\n+vstrweq.32 q0, [r0, q1]\n+vpst\n+vstrw.32 q0, [r0, q1]\n+vstrwt.32 q0, [r0, q1]\n+vstrwe.32 q0, [r0, q1]\n+it eq\n+vstrdeq.64 q0, [r0, q1]\n+vstrdeq.64 q0, [r0, q1]\n+vpst\n+vstrdeq.64 q0, [r0, q1]\n+vpst\n+vstrd.64 q0, [r0, q1]\n+vstrdt.64 q0, [r0, q1]\n+vstrde.64 q0, [r0, q1]"
    },
    {
      "sha": "e1dc5281ae8fbfd03b0b4beffa9c2329a737f4cf",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-2.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-2.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSTR with [Q, #imm] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vstr-bad-2.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "b4ecb2b1cd1bdab74ee8c448372473830b906a77",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-2.l",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-2.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,38 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad element type for instruction -- `vstrw.u16 q0,\\[q1,#4\\]'\n+[^:]*:11: Error: bad element type for instruction -- `vstrw.u64 q0,\\[q1,#-4\\]'\n+[^:]*:12: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.u32 q0,\\[q1,#1\\]'\n+[^:]*:13: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.u32 q0,\\[q1,#2\\]'\n+[^:]*:14: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.u32 q0,\\[q1,#231\\]'\n+[^:]*:15: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.u32 q0,\\[q1,#516\\]'\n+[^:]*:16: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.u32 q0,\\[q1,#-516\\]'\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:17: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:19: Error: syntax error -- `vstrweq.u32 q0,\\[q1\\]'\n+[^:]*:20: Error: syntax error -- `vstrweq.u32 q0,\\[q1\\]'\n+[^:]*:22: Error: syntax error -- `vstrweq.u32 q0,\\[q1\\]'\n+[^:]*:23: Error: vector predicated instruction should be in VPT/VPST block -- `vstrwt.u32 q0,\\[q1\\]'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vstrw.u32 q0,\\[q1\\]'\n+[^:]*:26: Error: bad element type for instruction -- `vstrd.u16 q0,\\[q1,#8\\]'\n+[^:]*:27: Error: bad element type for instruction -- `vstrd.u32 q0,\\[q1,#-8\\]'\n+[^:]*:28: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#1\\]'\n+[^:]*:29: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#4\\]'\n+[^:]*:30: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#7\\]'\n+[^:]*:31: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#228\\]'\n+[^:]*:32: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#1024\\]'\n+[^:]*:33: Error: immediate must be a multiple of 8 in the range of \\+/-\\[0,1016\\] -- `vstrd.u64 q0,\\[q1,#-1024\\]'\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Error: syntax error -- `vstrdeq.u64 q0,\\[q1\\]'\n+[^:]*:37: Error: syntax error -- `vstrdeq.u64 q0,\\[q1\\]'\n+[^:]*:39: Error: syntax error -- `vstrdeq.u64 q0,\\[q1\\]'\n+[^:]*:40: Error: vector predicated instruction should be in VPT/VPST block -- `vstrdt.u64 q0,\\[q1\\]'\n+[^:]*:42: Error: instruction missing MVE vector predication code -- `vstrd.u64 q0,\\[q1\\]'"
    },
    {
      "sha": "d6a1e8650001476190d05dd1421f42427fe1fa28",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-2.s",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-2.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,43 @@\n+.macro cond mnem, size\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().u\\size q0, [q1, #8]\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vstrw.u16 q0, [q1, #4]\n+vstrw.u64 q0, [q1, #-4]\n+vstrw.u32 q0, [q1, #1]\n+vstrw.u32 q0, [q1, #2]\n+vstrw.u32 q0, [q1, #231]\n+vstrw.u32 q0, [q1, #516]\n+vstrw.u32 q0, [q1, #-516]\n+cond vstrw, 32\n+it eq\n+vstrweq.u32 q0, [q1]\n+vstrweq.u32 q0, [q1]\n+vpst\n+vstrweq.u32 q0, [q1]\n+vstrwt.u32 q0, [q1]\n+vpst\n+vstrw.u32 q0, [q1]\n+vstrd.u16 q0, [q1, #8]\n+vstrd.u32 q0, [q1, #-8]\n+vstrd.u64 q0, [q1, #1]\n+vstrd.u64 q0, [q1, #4]\n+vstrd.u64 q0, [q1, #7]\n+vstrd.u64 q0, [q1, #228]\n+vstrd.u64 q0, [q1, #1024]\n+vstrd.u64 q0, [q1, #-1024]\n+cond vstrd, 64\n+it eq\n+vstrdeq.u64 q0, [q1]\n+vstrdeq.u64 q0, [q1]\n+vpst\n+vstrdeq.u64 q0, [q1]\n+vstrdt.u64 q0, [q1]\n+vpst\n+vstrd.u64 q0, [q1]\n+"
    },
    {
      "sha": "e4c657008fdaecd7b36b6e8e518c5f8e65f67844",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-3.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-3.d?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSTR with [R, #imm] addressing mode\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vstr-bad-3.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "71c9f58e62441432b5d7dbc74f3d32953f8821a5",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-3.l",
      "status": "added",
      "additions": 138,
      "deletions": 0,
      "changes": 138,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-3.l?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,138 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0,#128\\]'\n+[^:]*:11: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0,#-128\\]'\n+[^:]*:12: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0,#128\\]'\n+[^:]*:13: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0,#-128\\]'\n+[^:]*:14: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0,#128\\]'\n+[^:]*:15: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0,#-128\\]'\n+[^:]*:16: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0,#128\\]!'\n+[^:]*:17: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0,#-128\\]!'\n+[^:]*:18: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0,#128\\]!'\n+[^:]*:19: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0,#-128\\]!'\n+[^:]*:20: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0,#128\\]!'\n+[^:]*:21: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0,#-128\\]!'\n+[^:]*:22: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0\\],#128'\n+[^:]*:23: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.8 q0,\\[r0\\],#-128'\n+[^:]*:24: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0\\],#128'\n+[^:]*:25: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.16 q0,\\[r0\\],#-128'\n+[^:]*:26: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0\\],#128'\n+[^:]*:27: Error: immediate must be in the range of \\+/-\\[0,127\\] -- `vstrb.32 q0,\\[r0\\],#-128'\n+[^:]*:28: Error: lo register required -- `vstrb.16 q0,\\[r10,#2\\]'\n+[^:]*:29: Error: lo register required -- `vstrb.16 q0,\\[r10,#2\\]!'\n+[^:]*:30: Error: lo register required -- `vstrb.16 q0,\\[r10\\],#2'\n+[^:]*:31: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:32: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:33: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:34: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:35: Error: bad element type for instruction -- `vstrb.u16 q0,\\[r0\\]'\n+[^:]*:36: Error: bad element type for instruction -- `vstrb.s16 q0,\\[r0\\]'\n+[^:]*:37: Error: bad element type for instruction -- `vstrb.f16 q0,\\[r0\\]'\n+[^:]*:38: Error: bad element type for instruction -- `vstrb.p16 q0,\\[r0\\]'\n+[^:]*:39: Error: bad element type for instruction -- `vstrb.u32 q0,\\[r0\\]'\n+[^:]*:40: Error: bad element type for instruction -- `vstrb.s32 q0,\\[r0\\]'\n+[^:]*:41: Error: bad element type for instruction -- `vstrb.f32 q0,\\[r0\\]'\n+[^:]*:42: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#1\\]'\n+[^:]*:43: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#17\\]'\n+[^:]*:44: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#-17\\]'\n+[^:]*:45: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#256\\]'\n+[^:]*:46: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#-256\\]'\n+[^:]*:47: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#1\\]'\n+[^:]*:48: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#17\\]'\n+[^:]*:49: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#-17\\]'\n+[^:]*:50: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#256\\]'\n+[^:]*:51: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#-256\\]'\n+[^:]*:52: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#1\\]!'\n+[^:]*:53: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#17\\]!'\n+[^:]*:54: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#-17\\]!'\n+[^:]*:55: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#256\\]!'\n+[^:]*:56: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0,#-256\\]!'\n+[^:]*:57: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#1\\]!'\n+[^:]*:58: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#17\\]!'\n+[^:]*:59: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#-17\\]!'\n+[^:]*:60: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#256\\]!'\n+[^:]*:61: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0,#-256\\]!'\n+[^:]*:62: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0\\],#1'\n+[^:]*:63: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0\\],#17'\n+[^:]*:64: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0\\],#-17'\n+[^:]*:65: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0\\],#256'\n+[^:]*:66: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.16 q0,\\[r0\\],#-256'\n+[^:]*:67: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0\\],#1'\n+[^:]*:68: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0\\],#17'\n+[^:]*:69: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0\\],#-17'\n+[^:]*:70: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0\\],#256'\n+[^:]*:71: Error: immediate must be a multiple of 2 in the range of \\+/-\\[0,254\\] -- `vstrh.32 q0,\\[r0\\],#-256'\n+[^:]*:72: Error: lo register required -- `vstrh.32 q0,\\[r10,#4\\]'\n+[^:]*:73: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:74: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:75: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:76: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:77: Error: bad element type for instruction -- `vstrh.8 q0,\\[r0\\]'\n+[^:]*:78: Error: bad element type for instruction -- `vstrh.u8 q0,\\[r0\\]'\n+[^:]*:79: Error: bad element type for instruction -- `vstrh.s8 q0,\\[r0\\]'\n+[^:]*:80: Error: bad element type for instruction -- `vstrh.p8 q0,\\[r0\\]'\n+[^:]*:81: Error: bad element type for instruction -- `vstrh.u32 q0,\\[r0\\]'\n+[^:]*:82: Error: bad element type for instruction -- `vstrh.s32 q0,\\[r0\\]'\n+[^:]*:83: Error: bad element type for instruction -- `vstrh.f32 q0,\\[r0\\]'\n+[^:]*:84: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#3\\]'\n+[^:]*:85: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-3\\]'\n+[^:]*:86: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#514\\]'\n+[^:]*:87: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-258\\]'\n+[^:]*:88: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#258\\]'\n+[^:]*:89: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#516\\]'\n+[^:]*:90: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-516\\]'\n+[^:]*:91: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#3\\]!'\n+[^:]*:92: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-3\\]!'\n+[^:]*:93: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#514\\]!'\n+[^:]*:94: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-258\\]!'\n+[^:]*:95: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#258\\]!'\n+[^:]*:96: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#516\\]!'\n+[^:]*:97: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0,#-516\\]!'\n+[^:]*:98: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#3'\n+[^:]*:99: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#-3'\n+[^:]*:100: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#514'\n+[^:]*:101: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#-258'\n+[^:]*:102: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#258'\n+[^:]*:103: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#516'\n+[^:]*:104: Error: immediate must be a multiple of 4 in the range of \\+/-\\[0,508\\] -- `vstrw.32 q0,\\[r0\\],#-516'\n+[^:]*:105: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:106: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:107: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:108: Error: bad element type for instruction -- `vstrw.8 q0,\\[r0\\]'\n+[^:]*:109: Error: bad element type for instruction -- `vstrw.u8 q0,\\[r0\\]'\n+[^:]*:110: Error: bad element type for instruction -- `vstrw.s8 q0,\\[r0\\]'\n+[^:]*:111: Error: bad element type for instruction -- `vstrw.p8 q0,\\[r0\\]'\n+[^:]*:112: Error: bad element type for instruction -- `vstrw.16 q0,\\[r0\\]'\n+[^:]*:113: Error: bad element type for instruction -- `vstrw.u16 q0,\\[r0\\]'\n+[^:]*:114: Error: bad element type for instruction -- `vstrw.s16 q0,\\[r0\\]'\n+[^:]*:115: Error: bad element type for instruction -- `vstrw.f16 q0,\\[r0\\]'\n+[^:]*:116: Error: bad element type for instruction -- `vstrw.p16 q0,\\[r0\\]'\n+[^:]*:118: Error: syntax error -- `vstrbeq.8 q0,\\[r0\\]'\n+[^:]*:119: Error: syntax error -- `vstrbeq.8 q0,\\[r0\\]'\n+[^:]*:121: Error: syntax error -- `vstrbeq.8 q0,\\[r0\\]'\n+[^:]*:122: Error: vector predicated instruction should be in VPT/VPST block -- `vstrbt.8 q0,\\[r0\\]'\n+[^:]*:124: Error: instruction missing MVE vector predication code -- `vstrb.8 q0,\\[r0\\]'\n+[^:]*:126: Error: syntax error -- `vstrheq.16 q0,\\[r0\\]'\n+[^:]*:127: Error: syntax error -- `vstrheq.16 q0,\\[r0\\]'\n+[^:]*:129: Error: syntax error -- `vstrheq.16 q0,\\[r0\\]'\n+[^:]*:130: Error: vector predicated instruction should be in VPT/VPST block -- `vstrht.16 q0,\\[r0\\]'\n+[^:]*:132: Error: instruction missing MVE vector predication code -- `vstrh.16 q0,\\[r0\\]'\n+[^:]*:134: Error: syntax error -- `vstrweq.32 q0,\\[r0\\]'\n+[^:]*:135: Error: syntax error -- `vstrweq.32 q0,\\[r0\\]'\n+[^:]*:137: Error: syntax error -- `vstrweq.32 q0,\\[r0\\]'\n+[^:]*:138: Error: vector predicated instruction should be in VPT/VPST block -- `vstrwt.32 q0,\\[r0\\]'\n+[^:]*:140: Error: instruction missing MVE vector predication code -- `vstrw.32 q0,\\[r0\\]'"
    },
    {
      "sha": "7c6a30d30ba10ac64793ca62425ebc444460fc86",
      "filename": "gas/testsuite/gas/arm/mve-vstr-bad-3.s",
      "status": "added",
      "additions": 140,
      "deletions": 0,
      "changes": 140,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5f10c66f8dc5466536181a1e5cce2419a5bcbd7/gas/testsuite/gas/arm/mve-vstr-bad-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstr-bad-3.s?ref=f5f10c66f8dc5466536181a1e5cce2419a5bcbd7",
      "patch": "@@ -0,0 +1,140 @@\n+.macro cond mnem\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\mnem\\().32 q0, [r0]\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vstrb.8 q0, [r0, #128]\n+vstrb.8 q0, [r0, #-128]\n+vstrb.16 q0, [r0, #128]\n+vstrb.16 q0, [r0, #-128]\n+vstrb.32 q0, [r0, #128]\n+vstrb.32 q0, [r0, #-128]\n+vstrb.8 q0, [r0, #128]!\n+vstrb.8 q0, [r0, #-128]!\n+vstrb.16 q0, [r0, #128]!\n+vstrb.16 q0, [r0, #-128]!\n+vstrb.32 q0, [r0, #128]!\n+vstrb.32 q0, [r0, #-128]!\n+vstrb.8 q0, [r0], #128\n+vstrb.8 q0, [r0], #-128\n+vstrb.16 q0, [r0], #128\n+vstrb.16 q0, [r0], #-128\n+vstrb.32 q0, [r0], #128\n+vstrb.32 q0, [r0], #-128\n+vstrb.16 q0, [r10, #2]\n+vstrb.16 q0, [r10, #2]!\n+vstrb.16 q0, [r10], #2\n+vstrb.8 q0, [sp, #2]!\n+vstrb.8 q0, [sp], #2\n+vstrb.8 q0, [pc, #2]\n+cond vstrb\n+vstrb.u16 q0, [r0]\n+vstrb.s16 q0, [r0]\n+vstrb.f16 q0, [r0]\n+vstrb.p16 q0, [r0]\n+vstrb.u32 q0, [r0]\n+vstrb.s32 q0, [r0]\n+vstrb.f32 q0, [r0]\n+vstrh.16 q0, [r0, #1]\n+vstrh.16 q0, [r0, #17]\n+vstrh.16 q0, [r0, #-17]\n+vstrh.16 q0, [r0, #256]\n+vstrh.16 q0, [r0, #-256]\n+vstrh.32 q0, [r0, #1]\n+vstrh.32 q0, [r0, #17]\n+vstrh.32 q0, [r0, #-17]\n+vstrh.32 q0, [r0, #256]\n+vstrh.32 q0, [r0, #-256]\n+vstrh.16 q0, [r0, #1]!\n+vstrh.16 q0, [r0, #17]!\n+vstrh.16 q0, [r0, #-17]!\n+vstrh.16 q0, [r0, #256]!\n+vstrh.16 q0, [r0, #-256]!\n+vstrh.32 q0, [r0, #1]!\n+vstrh.32 q0, [r0, #17]!\n+vstrh.32 q0, [r0, #-17]!\n+vstrh.32 q0, [r0, #256]!\n+vstrh.32 q0, [r0, #-256]!\n+vstrh.16 q0, [r0], #1\n+vstrh.16 q0, [r0], #17\n+vstrh.16 q0, [r0], #-17\n+vstrh.16 q0, [r0], #256\n+vstrh.16 q0, [r0], #-256\n+vstrh.32 q0, [r0], #1\n+vstrh.32 q0, [r0], #17\n+vstrh.32 q0, [r0], #-17\n+vstrh.32 q0, [r0], #256\n+vstrh.32 q0, [r0], #-256\n+vstrh.32 q0, [r10, #4]\n+vstrh.16 q0, [sp, #2]!\n+vstrh.16 q0, [sp], #2\n+vstrh.16 q0, [pc, #2]\n+cond vstrh\n+vstrh.8 q0, [r0]\n+vstrh.u8 q0, [r0]\n+vstrh.s8 q0, [r0]\n+vstrh.p8 q0, [r0]\n+vstrh.u32 q0, [r0]\n+vstrh.s32 q0, [r0]\n+vstrh.f32 q0, [r0]\n+vstrw.32 q0, [r0, #3]\n+vstrw.32 q0, [r0, #-3]\n+vstrw.32 q0, [r0, #514]\n+vstrw.32 q0, [r0, #-258]\n+vstrw.32 q0, [r0, #258]\n+vstrw.32 q0, [r0, #516]\n+vstrw.32 q0, [r0, #-516]\n+vstrw.32 q0, [r0, #3]!\n+vstrw.32 q0, [r0, #-3]!\n+vstrw.32 q0, [r0, #514]!\n+vstrw.32 q0, [r0, #-258]!\n+vstrw.32 q0, [r0, #258]!\n+vstrw.32 q0, [r0, #516]!\n+vstrw.32 q0, [r0, #-516]!\n+vstrw.32 q0, [r0], #3\n+vstrw.32 q0, [r0], #-3\n+vstrw.32 q0, [r0], #514\n+vstrw.32 q0, [r0], #-258\n+vstrw.32 q0, [r0], #258\n+vstrw.32 q0, [r0], #516\n+vstrw.32 q0, [r0], #-516\n+vstrw.32 q0, [sp, #4]!\n+vstrw.32 q0, [pc, #4]\n+cond vstrw\n+vstrw.8 q0, [r0]\n+vstrw.u8 q0, [r0]\n+vstrw.s8 q0, [r0]\n+vstrw.p8 q0, [r0]\n+vstrw.16 q0, [r0]\n+vstrw.u16 q0, [r0]\n+vstrw.s16 q0, [r0]\n+vstrw.f16 q0, [r0]\n+vstrw.p16 q0, [r0]\n+it eq\n+vstrbeq.8 q0, [r0]\n+vstrbeq.8 q0, [r0]\n+vpst\n+vstrbeq.8 q0, [r0]\n+vstrbt.8 q0, [r0]\n+vpst\n+vstrb.8 q0, [r0]\n+it eq\n+vstrheq.16 q0, [r0]\n+vstrheq.16 q0, [r0]\n+vpst\n+vstrheq.16 q0, [r0]\n+vstrht.16 q0, [r0]\n+vpst\n+vstrh.16 q0, [r0]\n+it eq\n+vstrweq.32 q0, [r0]\n+vstrweq.32 q0, [r0]\n+vpst\n+vstrweq.32 q0, [r0]\n+vstrwt.32 q0, [r0]\n+vpst\n+vstrw.32 q0, [r0]"
    }
  ]
}