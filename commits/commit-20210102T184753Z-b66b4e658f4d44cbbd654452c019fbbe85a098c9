{
  "sha": "b66b4e658f4d44cbbd654452c019fbbe85a098c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY2YjRlNjU4ZjRkNDRjYmJkNjU0NDUyYzAxOWZiYmU4NWEwOThjOQ==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-02T16:35:25Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-01-02T18:47:53Z"
    },
    "message": "Fix pretty printer of main_type.flds_bnds.bounds\n\nIn struct dynamic_prop the members kind and data were renamed to m_kind and\nm_data.\n\nAnd flag_upper_bound_is_count is actually in bounds directly, not in its\nhigh member.\n\ngdb/ChangeLog:\n\n2021-01-02  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* gdb-gdb.py.in: Fix main_type.flds_bnds.bounds pretty printer.",
    "tree": {
      "sha": "5e5a16ba7b6a8e8c015728697eafd56fb09cb979",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e5a16ba7b6a8e8c015728697eafd56fb09cb979"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b66b4e658f4d44cbbd654452c019fbbe85a098c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b66b4e658f4d44cbbd654452c019fbbe85a098c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b66b4e658f4d44cbbd654452c019fbbe85a098c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b66b4e658f4d44cbbd654452c019fbbe85a098c9/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4258df85f13dbaf9a1cb5b523bf2b9d390b25e69",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4258df85f13dbaf9a1cb5b523bf2b9d390b25e69",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4258df85f13dbaf9a1cb5b523bf2b9d390b25e69"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "6fce234f40fb90a4b8621f907c475e1a6b8e4050",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b66b4e658f4d44cbbd654452c019fbbe85a098c9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b66b4e658f4d44cbbd654452c019fbbe85a098c9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b66b4e658f4d44cbbd654452c019fbbe85a098c9",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-02  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* gdb-gdb.py.in: Fix main_type.flds_bnds.bounds pretty printer.\n+\n 2021-01-01  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gdbarch.sh: Update copyright year range."
    },
    {
      "sha": "2b1c7ded4b6e343cde7d6f87872a164e2bd8b2d3",
      "filename": "gdb/gdb-gdb.py.in",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b66b4e658f4d44cbbd654452c019fbbe85a098c9/gdb/gdb-gdb.py.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b66b4e658f4d44cbbd654452c019fbbe85a098c9/gdb/gdb-gdb.py.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb-gdb.py.in?ref=b66b4e658f4d44cbbd654452c019fbbe85a098c9",
      "patch": "@@ -183,17 +183,18 @@ class StructMainTypePrettyPrinter:\n \n     def bound_img(self, bound_name):\n         \"\"\"Return an image of the given main_type's bound.\"\"\"\n-        b = self.val['flds_bnds']['bounds'].dereference()[bound_name]\n-        bnd_kind = str(b['kind'])\n+        bounds = self.val['flds_bnds']['bounds'].dereference()\n+        b = bounds[bound_name]\n+        bnd_kind = str(b['m_kind'])\n         if bnd_kind == 'PROP_CONST':\n-            return str(b['data']['const_val'])\n+            return str(b['m_data']['const_val'])\n         elif bnd_kind == 'PROP_UNDEFINED':\n             return '(undefined)'\n         else:\n             info = [bnd_kind]\n-            if bound_name == 'high' and b['flag_upper_bound_is_count']:\n+            if bound_name == 'high' and bounds['flag_upper_bound_is_count']:\n                 info.append('upper_bound_is_count')\n-            return '{} ({})'.format(str(b['data']['baton']), ','.join(info))\n+            return '{} ({})'.format(str(b['m_data']['baton']), ','.join(info))\n \n     def bounds_img(self):\n         \"\"\"Return an image of the main_type bounds."
    }
  ]
}