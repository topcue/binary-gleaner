{
  "sha": "0670413d0eb264302e10a1baa163bc9c8c279a21",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDY3MDQxM2QwZWIyNjQzMDJlMTBhMWJhYTE2M2JjOWM4YzI3OWEyMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-14T15:07:10Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-30T18:57:03Z"
    },
    "message": "Remove some checks of .empty()\n\nA few methods in tui_data_window check whether the contents are empty;\nbut all the callers already check this, so these calls can be removed.\n\ngdb/ChangeLog\n2019-08-30  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.c (tui_data_window::last_regs_line_no)\n\t(tui_data_window::display_registers_from)\n\t(tui_data_window::display_reg_element_at_line)\n\t(tui_data_window::display_registers_from_line): Remove checks of\n\t\"empty\".",
    "tree": {
      "sha": "c8fb97ae6ca24c887f3c538c8ffd597a88679642",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8fb97ae6ca24c887f3c538c8ffd597a88679642"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0670413d0eb264302e10a1baa163bc9c8c279a21",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0670413d0eb264302e10a1baa163bc9c8c279a21",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0670413d0eb264302e10a1baa163bc9c8c279a21",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0670413d0eb264302e10a1baa163bc9c8c279a21/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "18bb55c7225dfd07ec8d75226a83da1872db8b90",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18bb55c7225dfd07ec8d75226a83da1872db8b90",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/18bb55c7225dfd07ec8d75226a83da1872db8b90"
    }
  ],
  "stats": {
    "total": 215,
    "additions": 104,
    "deletions": 111
  },
  "files": [
    {
      "sha": "c8b69f4d5258acfa918595cbf89c0b36472fc711",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0670413d0eb264302e10a1baa163bc9c8c279a21/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0670413d0eb264302e10a1baa163bc9c8c279a21/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0670413d0eb264302e10a1baa163bc9c8c279a21",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.c (tui_data_window::last_regs_line_no)\n+\t(tui_data_window::display_registers_from)\n+\t(tui_data_window::display_reg_element_at_line)\n+\t(tui_data_window::display_registers_from_line): Remove checks of\n+\t\"empty\".\n+\n 2019-08-30  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_window) <display_all_data>:"
    },
    {
      "sha": "636ae101483afa74654483ee64b74a4db9c4af08",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 96,
      "deletions": 111,
      "changes": 207,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0670413d0eb264302e10a1baa163bc9c8c279a21/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0670413d0eb264302e10a1baa163bc9c8c279a21/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=0670413d0eb264302e10a1baa163bc9c8c279a21",
      "patch": "@@ -98,14 +98,9 @@ tui_get_register (struct frame_info *frame,\n int\n tui_data_window::last_regs_line_no () const\n {\n-  int num_lines = (-1);\n-\n-  if (!regs_content.empty ())\n-    {\n-      num_lines = regs_content.size () / regs_column_count;\n-      if (regs_content.size () % regs_column_count)\n-\tnum_lines++;\n-    }\n+  int num_lines = regs_content.size () / regs_column_count;\n+  if (regs_content.size () % regs_column_count)\n+    num_lines++;\n   return num_lines;\n }\n \n@@ -245,74 +240,71 @@ tui_data_window::show_register_group (struct reggroup *group,\n void\n tui_data_window::display_registers_from (int start_element_no)\n {\n-  if (!regs_content.empty ())\n+  int j, item_win_width, cur_y;\n+\n+  int max_len = 0;\n+  for (auto &&data_item_win : regs_content)\n     {\n-      int j, item_win_width, cur_y;\n+      const char *p;\n+      int len;\n \n-      int max_len = 0;\n-      for (auto &&data_item_win : regs_content)\n-        {\n-          const char *p;\n-          int len;\n-\n-          len = 0;\n-          p = data_item_win.content.get ();\n-          if (p != 0)\n-\t    len = strlen (p);\n-\n-          if (len > max_len)\n-            max_len = len;\n-        }\n-      item_win_width = max_len + 1;\n-      int i = start_element_no;\n-\n-      regs_column_count = (width - 2) / item_win_width;\n-      if (regs_column_count == 0)\n-        regs_column_count = 1;\n-      item_win_width = (width - 2) / regs_column_count;\n-\n-      /* Now create each data \"sub\" window, and write the display into\n-\t it.  */\n-      cur_y = 1;\n-      while (i < regs_content.size ()\n-\t     && cur_y <= viewport_height)\n+      len = 0;\n+      p = data_item_win.content.get ();\n+      if (p != 0)\n+\tlen = strlen (p);\n+\n+      if (len > max_len)\n+\tmax_len = len;\n+    }\n+  item_win_width = max_len + 1;\n+  int i = start_element_no;\n+\n+  regs_column_count = (width - 2) / item_win_width;\n+  if (regs_column_count == 0)\n+    regs_column_count = 1;\n+  item_win_width = (width - 2) / regs_column_count;\n+\n+  /* Now create each data \"sub\" window, and write the display into\n+     it.  */\n+  cur_y = 1;\n+  while (i < regs_content.size ()\n+\t && cur_y <= viewport_height)\n+    {\n+      for (j = 0;\n+\t   j < regs_column_count && i < regs_content.size ();\n+\t   j++)\n \t{\n-\t  for (j = 0;\n-\t       j < regs_column_count && i < regs_content.size ();\n-\t       j++)\n+\t  struct tui_data_item_window *data_item_win;\n+\n+\t  /* Create the window if necessary.  */\n+\t  data_item_win = &regs_content[i];\n+\t  if (data_item_win->handle != NULL\n+\t      && (data_item_win->height != 1\n+\t\t  || data_item_win->width != item_win_width\n+\t\t  || data_item_win->origin.x != (item_win_width * j) + 1\n+\t\t  || data_item_win->origin.y != cur_y))\n \t    {\n-\t      struct tui_data_item_window *data_item_win;\n-\n-\t      /* Create the window if necessary.  */\n-\t      data_item_win = &regs_content[i];\n-              if (data_item_win->handle != NULL\n-                  && (data_item_win->height != 1\n-                      || data_item_win->width != item_win_width\n-                      || data_item_win->origin.x != (item_win_width * j) + 1\n-                      || data_item_win->origin.y != cur_y))\n-                {\n-                  tui_delete_win (data_item_win->handle);\n-                  data_item_win->handle = 0;\n-                }\n+\t      tui_delete_win (data_item_win->handle);\n+\t      data_item_win->handle = 0;\n+\t    }\n                   \n-\t      if (data_item_win->handle == NULL)\n-\t\t{\n-\t\t  data_item_win->height = 1;\n-\t\t  data_item_win->width = item_win_width;\n-\t\t  data_item_win->origin.x = (item_win_width * j) + 1;\n-\t\t  data_item_win->origin.y = cur_y;\n-\t\t  data_item_win->make_visible (true);\n-                  scrollok (data_item_win->handle, FALSE);\n-\t\t}\n-              touchwin (data_item_win->handle);\n-\n-\t      /* Get the printable representation of the register\n-                 and display it.  */\n-              tui_display_register (data_item_win);\n-\t      i++;\t\t/* Next register.  */\n+\t  if (data_item_win->handle == NULL)\n+\t    {\n+\t      data_item_win->height = 1;\n+\t      data_item_win->width = item_win_width;\n+\t      data_item_win->origin.x = (item_win_width * j) + 1;\n+\t      data_item_win->origin.y = cur_y;\n+\t      data_item_win->make_visible (true);\n+\t      scrollok (data_item_win->handle, FALSE);\n \t    }\n-\t  cur_y++;\t\t/* Next row.  */\n+\t  touchwin (data_item_win->handle);\n+\n+\t  /* Get the printable representation of the register\n+\t     and display it.  */\n+\t  tui_display_register (data_item_win);\n+\t  i++;\t\t/* Next register.  */\n \t}\n+      cur_y++;\t\t/* Next row.  */\n     }\n }\n \n@@ -322,27 +314,24 @@ void\n tui_data_window::display_reg_element_at_line (int start_element_no,\n \t\t\t\t\t      int start_line_no)\n {\n-  if (!regs_content.empty ())\n-    {\n-      int element_no = start_element_no;\n+  int element_no = start_element_no;\n \n-      if (start_element_no != 0 && start_line_no != 0)\n-\t{\n-\t  int last_line_no, first_line_on_last_page;\n-\n-\t  last_line_no = last_regs_line_no ();\n-\t  first_line_on_last_page = last_line_no - (height - 2);\n-\t  if (first_line_on_last_page < 0)\n-\t    first_line_on_last_page = 0;\n-\n-\t  /* If the element_no causes us to scroll past the end of the\n-\t     registers, adjust what element to really start the\n-\t     display at.  */\n-\t  if (start_line_no > first_line_on_last_page)\n-\t    element_no = first_reg_element_no_inline (first_line_on_last_page);\n-\t}\n-      display_registers_from (element_no);\n+  if (start_element_no != 0 && start_line_no != 0)\n+    {\n+      int last_line_no, first_line_on_last_page;\n+\n+      last_line_no = last_regs_line_no ();\n+      first_line_on_last_page = last_line_no - (height - 2);\n+      if (first_line_on_last_page < 0)\n+\tfirst_line_on_last_page = 0;\n+\n+      /* If the element_no causes us to scroll past the end of the\n+\t registers, adjust what element to really start the\n+\t display at.  */\n+      if (start_line_no > first_line_on_last_page)\n+\telement_no = first_reg_element_no_inline (first_line_on_last_page);\n     }\n+  display_registers_from (element_no);\n }\n \n /* See tui-regs.h.  */\n@@ -351,34 +340,30 @@ int\n tui_data_window::display_registers_from_line (int line_no)\n {\n   check_and_display_highlight_if_needed ();\n-  if (!regs_content.empty ())\n-    {\n-      int element_no;\n \n-      if (line_no < 0)\n-\tline_no = 0;\n-      else\n+  int element_no;\n+\n+  if (line_no < 0)\n+    line_no = 0;\n+  else\n+    {\n+      /* Make sure that we don't display off the end of the\n+\t registers.  */\n+      if (line_no >= last_regs_line_no ())\n \t{\n-\t  /* Make sure that we don't display off the end of the\n-\t     registers.  */\n-\t  if (line_no >= last_regs_line_no ())\n-\t    {\n-\t      line_no = line_from_reg_element_no (regs_content.size () - 1);\n-\t      if (line_no < 0)\n-\t\tline_no = 0;\n-\t    }\n+\t  line_no = line_from_reg_element_no (regs_content.size () - 1);\n+\t  if (line_no < 0)\n+\t    line_no = 0;\n \t}\n-\n-      element_no = first_reg_element_no_inline (line_no);\n-      if (element_no < regs_content.size ())\n-\tdisplay_reg_element_at_line (element_no, line_no);\n-      else\n-\tline_no = (-1);\n-\n-      return line_no;\n     }\n \n-  return (-1);\t\t\t/* Nothing was displayed.  */\n+  element_no = first_reg_element_no_inline (line_no);\n+  if (element_no < regs_content.size ())\n+    display_reg_element_at_line (element_no, line_no);\n+  else\n+    line_no = (-1);\n+\n+  return line_no;\n }\n \n "
    }
  ]
}