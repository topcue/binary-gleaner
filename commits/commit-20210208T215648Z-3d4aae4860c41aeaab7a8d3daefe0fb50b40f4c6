{
  "sha": "3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q0YWFlNDg2MGM0MWFlYWFiN2E4ZDNkYWVmZTBmYjUwYjQwZjRjNg==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-01-25T12:46:49Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-02-08T21:56:48Z"
    },
    "message": "Build gdb.base/gnu-ifunc.exp with lazy binding\n\nThe test expects the ifunc resolver to run lazily, at a later stage.\n\nDepending on the distro and toolchain configuration, this is not the\ncase. Some configurations use non-lazy binding and thus the ifunc resolver\nresolves all the ifunc references very early in the process startup, before\nmain.\n\nUbuntu is one such case. It has switched its toolchains to pass -Wl,z,now by\ndefault, since 16.04. This wasn't a problem before 20.04 (at least for\naarch64) because the toolchains did not support ifunc's.\n\nForcing lazy binding makes the test run as expected, as opposed to the 80 or\nso failures it showed before the change.\n\nTested on aarch64-linux/x86_64-linux Ubuntu 20.04.\n\ngdb/testsuite:\n\n2021-02-08  Luis Machado  <luis.machado@linaro.org>\n\n\t* gdb.base/gnu-ifunc.exp (build): Pass -Wl,z,lazy.",
    "tree": {
      "sha": "1e1c2417f04a4b5a553e8fc672fac06c04023aec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1e1c2417f04a4b5a553e8fc672fac06c04023aec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "80b652efa2e969d865d06e1a4aec16b4dcd9f435",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80b652efa2e969d865d06e1a4aec16b4dcd9f435",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/80b652efa2e969d865d06e1a4aec16b4dcd9f435"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "ca011e4eb259f65d16032f4fb5a399a0dd2e5f16",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
      "patch": "@@ -1,3 +1,7 @@\n+2021-02-08  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* gdb.base/gnu-ifunc.exp (build): Pass -Wl,z,lazy.\n+\n 2021-02-08  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.dwarf2/enqueued-cu-base-addr.exp: Fix inter-CU reference."
    },
    {
      "sha": "4ec529130ce9acac5bbf9147aa106eb0ff742417",
      "filename": "gdb/testsuite/gdb.base/gnu-ifunc.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6/gdb/testsuite/gdb.base/gnu-ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6/gdb/testsuite/gdb.base/gnu-ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/gnu-ifunc.exp?ref=3d4aae4860c41aeaab7a8d3daefe0fb50b40f4c6",
      "patch": "@@ -64,6 +64,10 @@ proc build {resolver_attr resolver_debug final_debug} {\n     set lib_opts {}\n     set final_opts {}\n \n+    # Force lazy binding so we don't resolve everything at process startup.\n+    lappend exec_opts \"additional_flags=-Wl,-z,lazy\"\n+    lappend lib_opts \"additional_flags=-Wl,-z,lazy\"\n+\n     if {$resolver_attr} {\n \tlappend lib_opts \"additional_flags=-DIFUNC_RESOLVER_ATTR\"\n     }"
    }
  ]
}