{
  "sha": "66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjYxNTJmMTY2ODVmZTYzYTViMmViOTQxYzJkNzA1N2JiZmY1Y2ZlNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-10T22:17:35Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T01:11:09Z"
    },
    "message": "ubsan: tic4x: segv and signed shifts\n\n\t* tic4x-dis.c (tic4x_print_register): Formatting.  Don't segfault\n\ton NULL registertable entry.\n\t(tic4x_hash_opcode): Use unsigned arithmetic.",
    "tree": {
      "sha": "afbb6e058b5136d0cb05bf1adf57d9ad4e1fa32d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/afbb6e058b5136d0cb05bf1adf57d9ad4e1fa32d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66152f16685fe63a5b2eb941c2d7057bbff5cfe5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "205c426a9bb387204a21165e2275e31c32248035",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/205c426a9bb387204a21165e2275e31c32248035",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/205c426a9bb387204a21165e2275e31c32248035"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 15,
    "deletions": 7
  },
  "files": [
    {
      "sha": "3ae93c16414ad07949880626eb8b2447569c24fb",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66152f16685fe63a5b2eb941c2d7057bbff5cfe5/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66152f16685fe63a5b2eb941c2d7057bbff5cfe5/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* tic4x-dis.c (tic4x_print_register): Formatting.  Don't segfault\n+\ton NULL registertable entry.\n+\t(tic4x_hash_opcode): Use unsigned arithmetic.\n+\n 2019-12-11  Alan Modra  <amodra@gmail.com>\n \n \t* s12z-opc.c (z_decode_signed_value): Avoid signed overflow."
    },
    {
      "sha": "d9f95c94106a5ccb98431c43de8f4db09dbd6717",
      "filename": "opcodes/tic4x-dis.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/66152f16685fe63a5b2eb941c2d7057bbff5cfe5/opcodes/tic4x-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/66152f16685fe63a5b2eb941c2d7057bbff5cfe5/opcodes/tic4x-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/tic4x-dis.c?ref=66152f16685fe63a5b2eb941c2d7057bbff5cfe5",
      "patch": "@@ -137,17 +137,19 @@ tic4x_print_register (struct disassemble_info *info, unsigned long regno)\n     {\n       registertable = xmalloc (sizeof (tic4x_register_t *) * REG_TABLE_SIZE);\n       for (i = 0; i < tic3x_num_registers; i++)\n-\tregistertable[tic3x_registers[i].regno] = (tic4x_register_t *) (tic3x_registers + i);\n+\tregistertable[tic3x_registers[i].regno]\n+\t  = (tic4x_register_t *) (tic3x_registers + i);\n       if (IS_CPU_TIC4X (tic4x_version))\n \t{\n \t  /* Add C4x additional registers, overwriting\n \t     any C3x registers if necessary.  */\n \t  for (i = 0; i < tic4x_num_registers; i++)\n-\t    registertable[tic4x_registers[i].regno] =\n-\t      (tic4x_register_t *)(tic4x_registers + i);\n+\t    registertable[tic4x_registers[i].regno]\n+\t      = (tic4x_register_t *)(tic4x_registers + i);\n \t}\n     }\n-  if ((int) regno > (IS_CPU_TIC4X (tic4x_version) ? TIC4X_REG_MAX : TIC3X_REG_MAX))\n+  if (regno > (IS_CPU_TIC4X (tic4x_version) ? TIC4X_REG_MAX : TIC3X_REG_MAX)\n+      || registertable[regno] == NULL)\n     return 0;\n   if (info != NULL)\n     (*info->fprintf_func) (info->stream, \"%s\", registertable[regno]->name);\n@@ -639,9 +641,9 @@ tic4x_hash_opcode (tic4x_inst_t **optable,\n \t\t   const tic4x_inst_t *inst,\n \t\t   const unsigned long tic4x_oplevel)\n {\n-  int j;\n-  int opcode = inst->opcode >> (32 - TIC4X_HASH_SIZE);\n-  int opmask = inst->opmask >> (32 - TIC4X_HASH_SIZE);\n+  unsigned int j;\n+  unsigned int opcode = inst->opcode >> (32 - TIC4X_HASH_SIZE);\n+  unsigned int opmask = inst->opmask >> (32 - TIC4X_HASH_SIZE);\n \n   /* Use a TIC4X_HASH_SIZE bit index as a hash index.  We should\n      have unique entries so there's no point having a linked list"
    }
  ]
}