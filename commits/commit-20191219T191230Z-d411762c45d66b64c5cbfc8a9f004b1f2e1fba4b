{
  "sha": "d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDQxMTc2MmM0NWQ2NmI2NGM1Y2JmYzhhOWYwMDRiMWYyZTFmYmE0Yg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-12-18T23:56:17Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-12-19T19:12:30Z"
    },
    "message": "Make the literal argument to pow a double, not an integer\n\nSince pow takes doubles, pass 2.0 instead of 2 to pow ().\n\nConveniently, this fixes the ambiguous call to pow on Solaris 11\nwith gcc 5.5 (gcc211 on the compile farm), which has a \"using std::pow\"\ndirective in a system header, which brings in float/double/long double\noverloads.  Fixes the build on Solaris with enable-targets=all.\n\ngdb/ChangeLog:\n\n2019-12-19  Christian Biesinger  <cbiesinger@google.com>\n\n\t* score-tdep.c (score7_analyze_prologue): Pass 2.0 instead of\n\t2 to pow ().\n\nChange-Id: Ib18e7e4749ddcbff0727b72a31198f8cb84d1993",
    "tree": {
      "sha": "08c8638449195f1134ac8ede3d62a8929b6638aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/08c8638449195f1134ac8ede3d62a8929b6638aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1cd4a20a27c430fdd0db8d5b154e9c7860e440f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1cd4a20a27c430fdd0db8d5b154e9c7860e440f5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1cd4a20a27c430fdd0db8d5b154e9c7860e440f5"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 9,
    "deletions": 2
  },
  "files": [
    {
      "sha": "60930a790f97cb3424e0b035535fe12abb4416e9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-19  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* score-tdep.c (score7_analyze_prologue): Pass 2.0 instead of\n+\t2 to pow ().\n+\n 2019-12-19  Christian Biesinger  <cbiesinger@google.com>\n \n \t* tui/tui-source.c (tui_source_window::set_contents): Cast argument of"
    },
    {
      "sha": "b8abe3d890a09bec8da845b6f74c247f8fa34c9c",
      "filename": "gdb/score-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b/gdb/score-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b/gdb/score-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/score-tdep.c?ref=d411762c45d66b64c5cbfc8a9f004b1f2e1fba4b",
      "patch": "@@ -918,13 +918,15 @@ score7_analyze_prologue (CORE_ADDR startaddr, CORE_ADDR pc,\n                    && G_FLD (inst->v, 2, 0) == 0x0)\n             {\n               /* subei! r0, n */\n-              sp_offset += (int) pow (2, G_FLD (inst->v, 6, 3));\n+              sp_offset += (int) pow (2.0, G_FLD (inst->v, 6, 3));\n             }\n           else if (G_FLD (inst->v, 14, 7) == 0xc0\n                    && G_FLD (inst->v, 2, 0) == 0x0)\n             {\n               /* addei! r0, n */\n-              sp_offset -= (int) pow (2, G_FLD (inst->v, 6, 3));\n+\t      /* Solaris 11+gcc 5.5 has ambiguous overloads of pow, so we\n+\t\t pass 2.0 instead of 2 to get the right one.  */\n+              sp_offset -= (int) pow (2.0, G_FLD (inst->v, 6, 3));\n             }\n         }\n       else"
    }
  ]
}