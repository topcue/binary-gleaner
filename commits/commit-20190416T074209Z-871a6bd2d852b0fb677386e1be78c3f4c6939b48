{
  "sha": "871a6bd2d852b0fb677386e1be78c3f4c6939b48",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODcxYTZiZDJkODUyYjBmYjY3NzM4NmUxYmU3OGMzZjRjNjkzOWI0OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-04-15T12:21:44Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-04-16T07:42:09Z"
    },
    "message": "Make frag fr_fix unsigned\n\nThe field only stores unsigned values, so let's make it unsigned to\nstop people worrying about the possibility of negative values.\n\n\t* frags.h (struct frag <fr_fix>): Use unsigned type.\n\t* frags.c (frag_new): Assert that current size exceeds\n\told_frags_var_max_size.\n\t* ehopt.c (get_cie_info): Adjust for unsigned fr_fix.\n\t* listing.c (calc_hex): Likewise.\n\t* write.c (cvt_frag_to_fill, write_relocs): Likewise.\n\t* config/tc-arc.c (md_convert_frag): Likewise.\n\t* config/tc-avr.c (avr_patch_gccisr_frag): Likewise.\n\t* config/tc-mips.c (md_convert_frag): Likewise.\n\t* config/tc-rl78.c (md_convert_frag): Likewise.\n\t* config/tc-rx.c (md_convert_frag): Likewise.\n\t* config/tc-sparc.c (md_apply_fix): Likewise.\n\t* config/tc-xtensa.c (next_instrs_are_b_retw): Likewise.\n\t(unrelaxed_frag_min_insn_count, unrelaxed_frag_has_b_j): Likewise.",
    "tree": {
      "sha": "f1a378f0c442384f758827ba5c8f5a85ca83d3bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f1a378f0c442384f758827ba5c8f5a85ca83d3bd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/871a6bd2d852b0fb677386e1be78c3f4c6939b48",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/871a6bd2d852b0fb677386e1be78c3f4c6939b48",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/871a6bd2d852b0fb677386e1be78c3f4c6939b48",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/871a6bd2d852b0fb677386e1be78c3f4c6939b48/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "02e902e1a1ec7b74125f329b3faef1992efb6d51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02e902e1a1ec7b74125f329b3faef1992efb6d51",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/02e902e1a1ec7b74125f329b3faef1992efb6d51"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 40,
    "deletions": 23
  },
  "files": [
    {
      "sha": "2013c5deffeab1a403b98444efeb4effb959f104",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -1,3 +1,20 @@\n+2019-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* frags.h (struct frag <fr_fix>): Use unsigned type.\n+\t* frags.c (frag_new): Assert that current size exceeds\n+\told_frags_var_max_size.\n+\t* ehopt.c (get_cie_info): Adjust for unsigned fr_fix.\n+\t* listing.c (calc_hex): Likewise.\n+\t* write.c (cvt_frag_to_fill, write_relocs): Likewise.\n+\t* config/tc-arc.c (md_convert_frag): Likewise.\n+\t* config/tc-avr.c (avr_patch_gccisr_frag): Likewise.\n+\t* config/tc-mips.c (md_convert_frag): Likewise.\n+\t* config/tc-rl78.c (md_convert_frag): Likewise.\n+\t* config/tc-rx.c (md_convert_frag): Likewise.\n+\t* config/tc-sparc.c (md_apply_fix): Likewise.\n+\t* config/tc-xtensa.c (next_instrs_are_b_retw): Likewise.\n+\t(unrelaxed_frag_min_insn_count, unrelaxed_frag_has_b_j): Likewise.\n+\n 2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* config/tc-arm.c (parse_sys_vldr_vstr): New function."
    },
    {
      "sha": "6cc4726e2ef84d9ca9a6b66fde77c279dec18231",
      "filename": "gas/config/tc-arc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-arc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-arc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arc.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -3271,7 +3271,7 @@ md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED,\n   int size, fix;\n   struct arc_relax_type *relax_arg = &fragP->tc_frag_data;\n \n-  fix = (fragP->fr_fix < 0 ? 0 : fragP->fr_fix);\n+  fix = fragP->fr_fix;\n   dest = fragP->fr_literal + fix;\n   table_entry = TC_GENERIC_RELAX_TABLE + fragP->fr_subtype;\n "
    },
    {
      "sha": "df0833c761c0a08139bc513a6b9ea6e894a8b20b",
      "filename": "gas/config/tc-avr.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-avr.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -2635,8 +2635,8 @@ avr_patch_gccisr_frag (fragS *fr, int reg)\n   /* Turn frag into ordinary code frag of now known size.  */\n \n   fr->fr_var = 0;\n-  fr->fr_fix = (offsetT) (where - fr->fr_literal);\n-  gas_assert (fr->fr_fix <= fr->fr_offset);\n+  fr->fr_fix = where - fr->fr_literal;\n+  gas_assert (fr->fr_fix <= (valueT) fr->fr_offset);\n   fr->fr_offset = 0;\n   fr->fr_type = rs_fill;\n   fr->fr_subtype = 0;"
    },
    {
      "sha": "70c6548283e63941beb5b030b2bc46a2e953c3c4",
      "filename": "gas/config/tc-mips.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-mips.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-mips.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-mips.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -19056,7 +19056,7 @@ md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, segT asec, fragS *fragp)\n       relax_substateT subtype = fragp->fr_subtype;\n       bfd_boolean second_longer = (subtype & RELAX_SECOND_LONGER) != 0;\n       bfd_boolean use_second = (subtype & RELAX_USE_SECOND) != 0;\n-      int first, second;\n+      unsigned int first, second;\n       fixS *fixp;\n \n       first = RELAX_FIRST (subtype);\n@@ -19099,7 +19099,7 @@ md_convert_frag (bfd *abfd ATTRIBUTE_UNUSED, segT asec, fragS *fragp)\n \t sequence instead.  */\n       while (fixp\n \t     && fixp->fx_frag == fragp\n-\t     && fixp->fx_where < fragp->fr_fix - second)\n+\t     && (valueT) fixp->fx_where + second < fragp->fr_fix)\n \t{\n \t  if (subtype & RELAX_USE_SECOND)\n \t    fixp->fx_done = 1;"
    },
    {
      "sha": "878c03f97e853bd0841372094e4800928b4406ba",
      "filename": "gas/config/tc-rl78.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-rl78.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-rl78.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-rl78.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -1233,8 +1233,7 @@ md_convert_frag (bfd *   abfd ATTRIBUTE_UNUSED,\n \t   fragP->fr_next);\n \n   if (fragP->fr_next != NULL\n-\t  && ((offsetT) (fragP->fr_next->fr_address - fragP->fr_address)\n-\t      != fragP->fr_fix))\n+      && fragP->fr_next->fr_address - fragP->fr_address != fragP->fr_fix)\n     as_bad (_(\"bad frag at %p : fix %ld addr %ld %ld \\n\"), fragP,\n \t    (long) fragP->fr_fix,\n \t    (long) fragP->fr_address, (long) fragP->fr_next->fr_address);"
    },
    {
      "sha": "8688837b31991d8915dd99a53f50739db8f27eba",
      "filename": "gas/config/tc-rx.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-rx.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-rx.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-rx.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -2179,8 +2179,7 @@ md_convert_frag (bfd *   abfd ATTRIBUTE_UNUSED,\n   fragP->fr_var = 0;\n \n   if (fragP->fr_next != NULL\n-\t  && ((offsetT) (fragP->fr_next->fr_address - fragP->fr_address)\n-\t      != fragP->fr_fix))\n+      && fragP->fr_next->fr_address - fragP->fr_address != fragP->fr_fix)\n     as_bad (_(\"bad frag at %p : fix %ld addr %ld %ld \\n\"), fragP,\n \t    (long) fragP->fr_fix,\n \t    (long) fragP->fr_address, (long) fragP->fr_next->fr_address);"
    },
    {
      "sha": "677a13f1fea47f348dfa890956d8ecbd28230ef8",
      "filename": "gas/config/tc-sparc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-sparc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-sparc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-sparc.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -3566,7 +3566,7 @@ md_apply_fix (fixS *fixP, valueT *valP, segT segment ATTRIBUTE_UNUSED)\n              can be completely resolved here, i.e. if no undefined\n              symbol is associated with it.  */\n \t  if (sparc_relax && fixP->fx_addsy == NULL\n-\t      && fixP->fx_where + 8 <= fixP->fx_frag->fr_fix)\n+\t      && (valueT) fixP->fx_where + 8 <= fixP->fx_frag->fr_fix)\n \t    {\n #define G0\t\t0\n #define O7\t\t15"
    },
    {
      "sha": "9350beb495174649cfcca44663a63e3fb49883bd",
      "filename": "gas/config/tc-xtensa.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-xtensa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/config/tc-xtensa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-xtensa.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -8295,7 +8295,7 @@ next_instrs_are_b_retw (fragS *fragP)\n   static xtensa_insnbuf insnbuf = NULL;\n   static xtensa_insnbuf slotbuf = NULL;\n   xtensa_isa isa = xtensa_default_isa;\n-  int offset = 0;\n+  unsigned int offset = 0;\n   int slot;\n   bfd_boolean branch_seen = FALSE;\n \n@@ -8688,7 +8688,7 @@ unrelaxed_frag_min_insn_count (fragS *fragP)\n   xtensa_isa isa = xtensa_default_isa;\n   static xtensa_insnbuf insnbuf = NULL;\n   int insn_count = 0;\n-  int offset = 0;\n+  unsigned int offset = 0;\n \n   if (!fragP->tc_frag_data.is_insn)\n     return insn_count;\n@@ -8741,7 +8741,7 @@ unrelaxed_frag_has_b_j (fragS *fragP)\n {\n   static xtensa_insnbuf insnbuf = NULL;\n   xtensa_isa isa = xtensa_default_isa;\n-  int offset = 0;\n+  unsigned int offset = 0;\n \n   if (!fragP->tc_frag_data.is_insn)\n     return FALSE;"
    },
    {
      "sha": "207e7994059140bf9377f329b75c4b2bf1f8f73a",
      "filename": "gas/ehopt.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/ehopt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/ehopt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ehopt.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -103,7 +103,7 @@ get_cie_info (struct cie_info *info)\n {\n   fragS *f;\n   fixS *fix;\n-  int offset;\n+  unsigned int offset;\n   char CIE_id;\n   char augmentation[10];\n   int iaug;"
    },
    {
      "sha": "a9fc003fbdf05b1d6dc9e0384367d108e84aca17",
      "filename": "gas/frags.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/frags.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/frags.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/frags.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -165,7 +165,9 @@ frag_new (size_t old_frags_var_max_size\n   gas_assert (frchain_now->frch_last == frag_now);\n \n   /* Fix up old frag's fr_fix.  */\n-  frag_now->fr_fix = frag_now_fix_octets () - old_frags_var_max_size;\n+  frag_now->fr_fix = frag_now_fix_octets ();\n+  gas_assert (frag_now->fr_fix >= old_frags_var_max_size);\n+  frag_now->fr_fix -= old_frags_var_max_size;\n   /* Make sure its type is valid.  */\n   gas_assert (frag_now->fr_type != 0);\n "
    },
    {
      "sha": "741ae2ba22190aa7457781c63c2a0711a3fdb85a",
      "filename": "gas/frags.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/frags.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/frags.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/frags.h?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -45,7 +45,7 @@ struct frag {\n   addressT last_fr_address;\n \n   /* (Fixed) number of octets we know we have.  May be 0.  */\n-  offsetT fr_fix;\n+  valueT fr_fix;\n   /* May be used for (Variable) number of octets after above.\n      The generic frag handling code no longer makes any use of fr_var.  */\n   offsetT fr_var;"
    },
    {
      "sha": "a016b7c4b63e613901cc45027dc92c8f228f78c5",
      "filename": "gas/listing.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/listing.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/listing.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/listing.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -783,7 +783,7 @@ calc_hex (list_info_type *list)\n     {\n       /* Print as many bytes from the fixed part as is sensible.  */\n       octet_in_frag = 0;\n-      while ((offsetT) octet_in_frag < frag_ptr->fr_fix\n+      while (octet_in_frag < frag_ptr->fr_fix\n \t     && data_buffer_size < MAX_BYTES - 3)\n \t{\n \t  if (address == ~(unsigned int) 0)\n@@ -801,8 +801,8 @@ calc_hex (list_info_type *list)\n \t  unsigned int var_rep_idx = octet_in_frag;\n \n \t  /* Print as many bytes from the variable part as is sensible.  */\n-\t  while (((offsetT) octet_in_frag\n-\t\t  < (frag_ptr->fr_fix + frag_ptr->fr_var * frag_ptr->fr_offset))\n+\t  while ((octet_in_frag\n+\t\t  < frag_ptr->fr_fix + frag_ptr->fr_var * frag_ptr->fr_offset)\n \t\t && data_buffer_size < MAX_BYTES - 3)\n \t    {\n \t      if (address == ~(unsigned int) 0)\n@@ -816,7 +816,7 @@ calc_hex (list_info_type *list)\n \t      var_rep_idx++;\n \t      octet_in_frag++;\n \n-\t      if ((offsetT) var_rep_idx >= frag_ptr->fr_fix + frag_ptr->fr_var)\n+\t      if (var_rep_idx >= frag_ptr->fr_fix + frag_ptr->fr_var)\n \t\tvar_rep_idx = var_rep_max;\n \t    }\n \t}"
    },
    {
      "sha": "2c4305e17dc8ab96e809e50bf7df09817457970f",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/871a6bd2d852b0fb677386e1be78c3f4c6939b48/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=871a6bd2d852b0fb677386e1be78c3f4c6939b48",
      "patch": "@@ -502,8 +502,8 @@ cvt_frag_to_fill (segT sec ATTRIBUTE_UNUSED, fragS *fragP)\n       md_convert_frag (stdoutput, sec, fragP);\n \n       gas_assert (fragP->fr_next == NULL\n-\t      || ((offsetT) (fragP->fr_next->fr_address - fragP->fr_address)\n-\t\t  == fragP->fr_fix));\n+\t\t  || (fragP->fr_next->fr_address - fragP->fr_address\n+\t\t      == fragP->fr_fix));\n \n       /* After md_convert_frag, we make the frag into a \".space 0\".\n \t md_convert_frag() should set up any fixSs and constants\n@@ -1264,7 +1264,7 @@ write_relocs (bfd *abfd, asection *sec, void *xxx ATTRIBUTE_UNUSED)\n   for (fixp = seginfo->fix_root; fixp != (fixS *) NULL; fixp = fixp->fx_next)\n     {\n       int fx_size, slack;\n-      offsetT loc;\n+      valueT loc;\n       arelent **reloc;\n #ifndef RELOC_EXPANSION_POSSIBLE\n       arelent *rel;"
    }
  ]
}