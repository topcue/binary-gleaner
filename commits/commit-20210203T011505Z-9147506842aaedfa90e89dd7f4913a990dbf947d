{
  "sha": "9147506842aaedfa90e89dd7f4913a990dbf947d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTE0NzUwNjg0MmFhZWRmYTkwZTg5ZGQ3ZjQ5MTNhOTkwZGJmOTQ3ZA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-01-11T18:52:12Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-02-03T01:15:05Z"
    },
    "message": "prepare_for_detach: don't release scoped_restore at the end\n\nAfter detaching from a process, the inf->detaching flag is\ninadvertently left set to true.  If you afterwards reuse the same\ninferior to start a new process, GDB will mishave...\n\nThe problem is that prepare_for_detach discards the scoped_restore at\nthe end, while the intention is for the flag to be set only for the\nduration of prepare_for_detach.\n\nThis was already a bug in the original commit that added\nprepare_for_detach, commit 24291992dac3 (\"PR gdb/11321\"), by yours\ntruly.  Back then, we still used cleanups, and the function called\ndiscard_cleanups instead of do_cleanups, by mistake.\n\ngdb/ChangeLog:\n\n\t* infrun.c (prepare_for_detach): Don't release scoped_restore\n\tbefore returning.",
    "tree": {
      "sha": "3940a4648e610afba45c04ff8ab5113e104c66db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3940a4648e610afba45c04ff8ab5113e104c66db"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9147506842aaedfa90e89dd7f4913a990dbf947d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9147506842aaedfa90e89dd7f4913a990dbf947d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9147506842aaedfa90e89dd7f4913a990dbf947d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9147506842aaedfa90e89dd7f4913a990dbf947d/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d758e62c0ecca0c26547cfe40aa1f32d6e8464b7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d758e62c0ecca0c26547cfe40aa1f32d6e8464b7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d758e62c0ecca0c26547cfe40aa1f32d6e8464b7"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 6,
    "deletions": 6
  },
  "files": [
    {
      "sha": "256b9d080614175434f9a5a3211c3202626ef19e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9147506842aaedfa90e89dd7f4913a990dbf947d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9147506842aaedfa90e89dd7f4913a990dbf947d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9147506842aaedfa90e89dd7f4913a990dbf947d",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-03  Pedro Alves  <pedro@palves.net>\n+\n+\t* infrun.c (prepare_for_detach): Don't release scoped_restore\n+\tbefore returning.\n+\n 2021-02-03  Pedro Alves  <pedro@palves.net>\n \n \t* infrun.c (handle_one): New function, factored out from ..."
    },
    {
      "sha": "895f47457fd16a80fb073d6bc487d2240172cddd",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9147506842aaedfa90e89dd7f4913a990dbf947d/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9147506842aaedfa90e89dd7f4913a990dbf947d/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=9147506842aaedfa90e89dd7f4913a990dbf947d",
      "patch": "@@ -3607,13 +3607,8 @@ prepare_for_detach (void)\n \t at this point, and signals are passed directly to the\n \t inferior, so this must mean the process is gone.  */\n       if (!ecs->wait_some_more)\n-\t{\n-\t  restore_detaching.release ();\n-\t  error (_(\"Program exited while detaching\"));\n-\t}\n+\terror (_(\"Program exited while detaching\"));\n     }\n-\n-  restore_detaching.release ();\n }\n \n /* Wait for control to return from inferior to debugger."
    }
  ]
}