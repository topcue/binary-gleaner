{
  "sha": "cf63b0162b6cbf74bdb056609d1ad777c6d48954",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y2M2IwMTYyYjZjYmY3NGJkYjA1NjYwOWQxYWQ3NzdjNmQ0ODk1NA==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-02-27T21:59:02Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2019-04-09T03:12:45Z"
    },
    "message": "Add python method InferiorThread.handle\n\ngdb/ChangeLog:\n\n\t* python/py-infthread.c (thpy_thread_handle): New function.\n\t(thread_object_methods): Register thpy_thread_handle.",
    "tree": {
      "sha": "d31fe395a2902e3abedf4e932a05343210c72eb2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d31fe395a2902e3abedf4e932a05343210c72eb2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf63b0162b6cbf74bdb056609d1ad777c6d48954",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf63b0162b6cbf74bdb056609d1ad777c6d48954",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf63b0162b6cbf74bdb056609d1ad777c6d48954",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf63b0162b6cbf74bdb056609d1ad777c6d48954/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3d6c62048d8408fbfb6c66830e0c650e36259637",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d6c62048d8408fbfb6c66830e0c650e36259637",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3d6c62048d8408fbfb6c66830e0c650e36259637"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 38,
    "deletions": 0
  },
  "files": [
    {
      "sha": "7912f7d8055eff5b0b7c9b6b7fc96f7b8327a68d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf63b0162b6cbf74bdb056609d1ad777c6d48954/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf63b0162b6cbf74bdb056609d1ad777c6d48954/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cf63b0162b6cbf74bdb056609d1ad777c6d48954",
      "patch": "@@ -1,3 +1,8 @@\n+2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* python/py-infthread.c (thpy_thread_handle): New function.\n+\t(thread_object_methods): Register thpy_thread_handle.\n+\n 2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdbthread.h (thread_to_thread_handle): Declare."
    },
    {
      "sha": "8c556f92ea80a6c3d2d5ec71ab5a940bbe0bd6e9",
      "filename": "gdb/python/py-infthread.c",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf63b0162b6cbf74bdb056609d1ad777c6d48954/gdb/python/py-infthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf63b0162b6cbf74bdb056609d1ad777c6d48954/gdb/python/py-infthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infthread.c?ref=cf63b0162b6cbf74bdb056609d1ad777c6d48954",
      "patch": "@@ -256,6 +256,36 @@ thpy_is_valid (PyObject *self, PyObject *args)\n   Py_RETURN_TRUE;\n }\n \n+/* Implementation of gdb.InferiorThread.handle (self) -> handle. */\n+\n+static PyObject *\n+thpy_thread_handle (PyObject *self, PyObject *args)\n+{\n+  thread_object *thread_obj = (thread_object *) self;\n+  THPY_REQUIRE_VALID (thread_obj);\n+\n+  gdb::byte_vector hv;\n+  \n+  try\n+    {\n+      hv = target_thread_info_to_thread_handle (thread_obj->thread);\n+    }\n+  catch (const gdb_exception &except)\n+    {\n+      GDB_PY_HANDLE_EXCEPTION (except);\n+    }\n+\n+  if (hv.size () == 0)\n+    {\n+      PyErr_SetString (PyExc_RuntimeError, _(\"Thread handle not found.\"));\n+      return NULL;\n+    }\n+\n+  PyObject *object = PyBytes_FromStringAndSize ((const char *) hv.data (),\n+\t\t\t\t                hv.size());\n+  return object;\n+}\n+\n /* Return a reference to a new Python object representing a ptid_t.\n    The object is a tuple containing (pid, lwp, tid). */\n PyObject *\n@@ -335,6 +365,9 @@ Return whether the thread is running.\" },\n   { \"is_exited\", thpy_is_exited, METH_NOARGS,\n     \"is_exited () -> Boolean\\n\\\n Return whether the thread is exited.\" },\n+  { \"handle\", thpy_thread_handle, METH_NOARGS,\n+    \"handle  () -> handle\\n\\\n+Return thread library specific handle for thread.\" },\n \n   { NULL }\n };"
    }
  ]
}