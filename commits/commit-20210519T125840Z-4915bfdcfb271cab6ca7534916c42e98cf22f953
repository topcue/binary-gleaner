{
  "sha": "4915bfdcfb271cab6ca7534916c42e98cf22f953",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDkxNWJmZGNmYjI3MWNhYjZjYTc1MzQ5MTZjNDJlOThjZjIyZjk1Mw==",
  "commit": {
    "author": {
      "name": "Marco Barisione",
      "email": "mbarisione@undo.io",
      "date": "2021-05-19T12:58:40Z"
    },
    "committer": {
      "name": "Marco Barisione",
      "email": "mbarisione@undo.io",
      "date": "2021-05-19T12:58:40Z"
    },
    "message": "gdb: Add an overloaded ui_out::text accepting a const std::string &\n\ngdb/ChangeLog:\n\n\t* ui-out.h (class ui_out): Add ui_out::text accepting a constant\n\treference to a std::string.  Fix all callers using\n\tstd::string::c_str.\n\t* ui-out.c (ui_out::text): Ditto.",
    "tree": {
      "sha": "b84c65da6b8f840d5f6c75711a9df36cc23d9496",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b84c65da6b8f840d5f6c75711a9df36cc23d9496"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4915bfdcfb271cab6ca7534916c42e98cf22f953",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4915bfdcfb271cab6ca7534916c42e98cf22f953",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4915bfdcfb271cab6ca7534916c42e98cf22f953",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4915bfdcfb271cab6ca7534916c42e98cf22f953/comments",
  "author": {
    "login": "barisione",
    "id": 4679325,
    "node_id": "MDQ6VXNlcjQ2NzkzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4679325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisione",
    "html_url": "https://github.com/barisione",
    "followers_url": "https://api.github.com/users/barisione/followers",
    "following_url": "https://api.github.com/users/barisione/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisione/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisione/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisione/subscriptions",
    "organizations_url": "https://api.github.com/users/barisione/orgs",
    "repos_url": "https://api.github.com/users/barisione/repos",
    "events_url": "https://api.github.com/users/barisione/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisione/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisione",
    "id": 4679325,
    "node_id": "MDQ6VXNlcjQ2NzkzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4679325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisione",
    "html_url": "https://github.com/barisione",
    "followers_url": "https://api.github.com/users/barisione/followers",
    "following_url": "https://api.github.com/users/barisione/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisione/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisione/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisione/subscriptions",
    "organizations_url": "https://api.github.com/users/barisione/orgs",
    "repos_url": "https://api.github.com/users/barisione/repos",
    "events_url": "https://api.github.com/users/barisione/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisione/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d9211df246b74aa4f1ba86f04933eca86862a352",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9211df246b74aa4f1ba86f04933eca86862a352",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d9211df246b74aa4f1ba86f04933eca86862a352"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 12,
    "deletions": 5
  },
  "files": [
    {
      "sha": "1b5067662593504940a369a0127a177d50adf190",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -11865,7 +11865,7 @@ print_mention_exception (struct breakpoint *b)\n \t  {\n \t    std::string info = string_printf (_(\"`%s' Ada exception\"),\n \t\t\t\t\t      c->excep_string.c_str ());\n-\t    uiout->text (info.c_str ());\n+\t    uiout->text (info);\n \t  }\n \telse\n \t  uiout->text (_(\"all Ada exceptions\"));\n@@ -11881,7 +11881,7 @@ print_mention_exception (struct breakpoint *b)\n \t    std::string info\n \t      = string_printf (_(\"`%s' Ada exception handlers\"),\n \t\t\t       c->excep_string.c_str ());\n-\t    uiout->text (info.c_str ());\n+\t    uiout->text (info);\n \t  }\n \telse\n \t  uiout->text (_(\"all Ada exceptions handlers\"));"
    },
    {
      "sha": "f6a594d69a2b3a23eeb10f3ba45c08cd544454b3",
      "filename": "gdb/cli/cli-setshow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/cli/cli-setshow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/cli/cli-setshow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.c?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -760,7 +760,7 @@ cmd_show_list (struct cmd_list_element *list, int from_tty)\n \t      std::string prefixname = list->prefix->prefixname ();\n \t      prefixname = (!list->prefix->is_prefix () ? \"\"\n \t\t\t    : strstr (prefixname.c_str (), \"show \") + 5);\n-\t      uiout->text (prefixname.c_str ());\n+\t      uiout->text (prefixname);\n \t    }\n \t  uiout->field_string (\"name\", list->name);\n \t  uiout->text (\":  \");"
    },
    {
      "sha": "54cb45f4e9d4b8321d359444e331142ea881efcb",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -1394,7 +1394,7 @@ print_source_lines_base (struct symtab *s, int line, int stopline,\n \t  if (iter > start)\n \t    {\n \t      std::string text (start, iter);\n-\t      uiout->text (text.c_str ());\n+\t      uiout->text (text);\n \t    }\n \t  if (*iter == '\\r')\n \t    {"
    },
    {
      "sha": "87b6cbf74fd76bfc73d1dde9b8fdcc304441566f",
      "filename": "gdb/thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/thread.c?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -1977,7 +1977,7 @@ print_selected_thread_frame (struct ui_out *uiout,\n \t  uiout->text (\"[Switching to thread \");\n \t  uiout->field_string (\"new-thread-id\", print_thread_id (tp));\n \t  uiout->text (\" (\");\n-\t  uiout->text (target_pid_to_str (inferior_ptid).c_str ());\n+\t  uiout->text (target_pid_to_str (inferior_ptid));\n \t  uiout->text (\")]\");\n \t}\n     }"
    },
    {
      "sha": "56251c9445a98fd07c92b41c34b4a5c8a13b64d1",
      "filename": "gdb/ui-out.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.c?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -581,6 +581,12 @@ ui_out::text (const char *string)\n   do_text (string);\n }\n \n+void\n+ui_out::text (const std::string &string)\n+{\n+  text (string.c_str ());\n+}\n+\n void\n ui_out::call_do_message (const ui_file_style &style, const char *format,\n \t\t\t ...)"
    },
    {
      "sha": "a06477df533051562ce588ca4a5d25216b699c98",
      "filename": "gdb/ui-out.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4915bfdcfb271cab6ca7534916c42e98cf22f953/gdb/ui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-out.h?ref=4915bfdcfb271cab6ca7534916c42e98cf22f953",
      "patch": "@@ -203,6 +203,7 @@ class ui_out\n \n   void spaces (int numspaces);\n   void text (const char *string);\n+  void text (const std::string &string);\n \n   /* Output a printf-style formatted string.  In addition to the usual\n      printf format specs, this supports a few GDB-specific"
    }
  ]
}