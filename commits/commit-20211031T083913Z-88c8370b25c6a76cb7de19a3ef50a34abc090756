{
  "sha": "88c8370b25c6a76cb7de19a3ef50a34abc090756",
  "node_id": "C_kwDOANOeidoAKDg4YzgzNzBiMjVjNmE3NmNiN2RlMTlhM2VmNTBhMzRhYmMwOTA3NTY",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-07-07T02:43:10Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-10-31T08:39:13Z"
    },
    "message": "sim: nltvals: pull target signal out into a dedicated source file\n\nLike we just did for pulling out the errno map, pull out the signal\nmap into a dedicated common file.  All newlib ports are using the\nsame signal map which makes it easy.",
    "tree": {
      "sha": "4aed96015ba53ee77ccf6f90a13234a2fdd2d825",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4aed96015ba53ee77ccf6f90a13234a2fdd2d825"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/88c8370b25c6a76cb7de19a3ef50a34abc090756",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/88c8370b25c6a76cb7de19a3ef50a34abc090756",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/88c8370b25c6a76cb7de19a3ef50a34abc090756",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/88c8370b25c6a76cb7de19a3ef50a34abc090756/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7e40a99318c46ec57a9c0a64c622b6ec0ed89ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7e40a99318c46ec57a9c0a64c622b6ec0ed89ff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7e40a99318c46ec57a9c0a64c622b6ec0ed89ff"
    }
  ],
  "stats": {
    "total": 222,
    "additions": 157,
    "deletions": 65
  },
  "files": [
    {
      "sha": "6bb96bfbfa648181b3515d218c84fe0c0deb34be",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -254,6 +254,7 @@ am_common_libcommon_a_OBJECTS =  \\\n \tcommon/common_libcommon_a-portability.$(OBJEXT) \\\n \tcommon/common_libcommon_a-sim-load.$(OBJEXT) \\\n \tcommon/common_libcommon_a-target-newlib-errno.$(OBJEXT) \\\n+\tcommon/common_libcommon_a-target-newlib-signal.$(OBJEXT) \\\n \tcommon/common_libcommon_a-version.$(OBJEXT)\n common_libcommon_a_OBJECTS = $(am_common_libcommon_a_OBJECTS)\n igen_libigen_a_AR = $(AR) $(ARFLAGS)\n@@ -845,6 +846,7 @@ common_libcommon_a_SOURCES = \\\n \tcommon/portability.c \\\n \tcommon/sim-load.c \\\n \tcommon/target-newlib-errno.c \\\n+\tcommon/target-newlib-signal.c \\\n \tcommon/version.c\n \n @SIM_ENABLE_IGEN_TRUE@igen_libigen_a_SOURCES = \\\n@@ -1019,6 +1021,8 @@ common/common_libcommon_a-sim-load.$(OBJEXT): common/$(am__dirstamp) \\\n \tcommon/$(DEPDIR)/$(am__dirstamp)\n common/common_libcommon_a-target-newlib-errno.$(OBJEXT):  \\\n \tcommon/$(am__dirstamp) common/$(DEPDIR)/$(am__dirstamp)\n+common/common_libcommon_a-target-newlib-signal.$(OBJEXT):  \\\n+\tcommon/$(am__dirstamp) common/$(DEPDIR)/$(am__dirstamp)\n common/common_libcommon_a-version.$(OBJEXT): common/$(am__dirstamp) \\\n \tcommon/$(DEPDIR)/$(am__dirstamp)\n \n@@ -1142,6 +1146,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-portability.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-sim-load.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-target-newlib-errno.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/common_libcommon_a-version.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/filter.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@igen/$(DEPDIR)/filter_host.Po@am__quote@\n@@ -1234,6 +1239,20 @@ common/common_libcommon_a-target-newlib-errno.obj: common/target-newlib-errno.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-errno.obj `if test -f 'common/target-newlib-errno.c'; then $(CYGPATH_W) 'common/target-newlib-errno.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-errno.c'; fi`\n \n+common/common_libcommon_a-target-newlib-signal.o: common/target-newlib-signal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-target-newlib-signal.o -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo -c -o common/common_libcommon_a-target-newlib-signal.o `test -f 'common/target-newlib-signal.c' || echo '$(srcdir)/'`common/target-newlib-signal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='common/target-newlib-signal.c' object='common/common_libcommon_a-target-newlib-signal.o' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-signal.o `test -f 'common/target-newlib-signal.c' || echo '$(srcdir)/'`common/target-newlib-signal.c\n+\n+common/common_libcommon_a-target-newlib-signal.obj: common/target-newlib-signal.c\n+@am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-target-newlib-signal.obj -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo -c -o common/common_libcommon_a-target-newlib-signal.obj `if test -f 'common/target-newlib-signal.c'; then $(CYGPATH_W) 'common/target-newlib-signal.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-signal.c'; fi`\n+@am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Tpo common/$(DEPDIR)/common_libcommon_a-target-newlib-signal.Po\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\t$(AM_V_CC)source='common/target-newlib-signal.c' object='common/common_libcommon_a-target-newlib-signal.obj' libtool=no @AMDEPBACKSLASH@\n+@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n+@am__fastdepCC_FALSE@\t$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o common/common_libcommon_a-target-newlib-signal.obj `if test -f 'common/target-newlib-signal.c'; then $(CYGPATH_W) 'common/target-newlib-signal.c'; else $(CYGPATH_W) '$(srcdir)/common/target-newlib-signal.c'; fi`\n+\n common/common_libcommon_a-version.o: common/version.c\n @am__fastdepCC_TRUE@\t$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libcommon_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT common/common_libcommon_a-version.o -MD -MP -MF common/$(DEPDIR)/common_libcommon_a-version.Tpo -c -o common/common_libcommon_a-version.o `test -f 'common/version.c' || echo '$(srcdir)/'`common/version.c\n @am__fastdepCC_TRUE@\t$(AM_V_at)$(am__mv) common/$(DEPDIR)/common_libcommon_a-version.Tpo common/$(DEPDIR)/common_libcommon_a-version.Po"
    },
    {
      "sha": "d6b34d521229300132db46be9d44d729825f2a81",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -232,6 +232,7 @@ COMMON_OBJS_NAMES = \\\n \tportability.o \\\n \tsim-load.o \\\n \ttarget-newlib-errno.o \\\n+\ttarget-newlib-signal.o \\\n \tversion.o\n COMMON_OBJS = $(COMMON_OBJS_NAMES:%=../common/common_libcommon_a-%)\n "
    },
    {
      "sha": "fbc290185b523454feab232a76cf91653691e993",
      "filename": "sim/common/gentmap.c",
      "status": "modified",
      "additions": 0,
      "deletions": 24,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/gentmap.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/gentmap.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/gentmap.c?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -16,13 +16,6 @@ static struct tdefs sys_tdefs[] = {\n   { 0, 0 }\n };\n \n-static struct tdefs signal_tdefs[] = {\n-#define signal_defs\n-#include \"nltvals.def\"\n-#undef signal_defs\n-  { 0, 0 }\n-};\n-\n static struct tdefs open_tdefs[] = {\n #define open_defs\n #include \"nltvals.def\"\n@@ -46,11 +39,6 @@ gen_targ_vals_h (void)\n     printf (\"#define TARGET_%s %d\\n\", t->symbol, t->value);\n   printf (\"\\n\");\n \n-  printf (\"/* signal values */\\n\");\n-  for (t = &signal_tdefs[0]; t->symbol; ++t)\n-    printf (\"#define TARGET_%s %d\\n\", t->symbol, t->value);\n-  printf (\"\\n\");\n-\n   printf (\"/* open flag values */\\n\");\n   for (t = &open_tdefs[0]; t->symbol; ++t)\n     printf (\"#define TARGET_%s 0x%x\\n\", t->symbol, t->value);\n@@ -69,7 +57,6 @@ gen_targ_map_c (void)\n \n   printf (\"#include \\\"defs.h\\\"\\n\");\n   printf (\"#include <fcntl.h>\\n\");\n-  printf (\"#include <signal.h>\\n\");\n   printf (\"#include \\\"ansidecl.h\\\"\\n\");\n   printf (\"#include \\\"sim/callback.h\\\"\\n\");\n   printf (\"#include \\\"targ-vals.h\\\"\\n\");\n@@ -87,17 +74,6 @@ gen_targ_map_c (void)\n   printf (\"  { 0, -1, -1 }\\n\");\n   printf (\"};\\n\\n\");\n \n-  printf (\"/* signals mapping table */\\n\");\n-  printf (\"CB_TARGET_DEFS_MAP cb_init_signal_map[] = {\\n\");\n-  for (t = &signal_tdefs[0]; t->symbol; ++t)\n-    {\n-      printf (\"#ifdef %s\\n\", t->symbol);\n-      printf (\"  { \\\"%s\\\", %s, TARGET_%s },\\n\", t->symbol, t->symbol, t->symbol);\n-      printf (\"#endif\\n\");\n-    }\n-  printf (\"  { 0, -1, -1 }\\n\");\n-  printf (\"};\\n\\n\");\n-\n   printf (\"/* open flags mapping table */\\n\");\n   printf (\"CB_TARGET_DEFS_MAP cb_init_open_map[] = {\\n\");\n   for (t = &open_tdefs[0]; t->symbol; ++t)"
    },
    {
      "sha": "bf5eda0b0d3b20b1a3196f571ecd5aef55310eee",
      "filename": "sim/common/local.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/local.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/local.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/local.mk?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -37,6 +37,7 @@ noinst_LIBRARIES += %D%/libcommon.a\n \t%D%/portability.c \\\n \t%D%/sim-load.c \\\n \t%D%/target-newlib-errno.c \\\n+\t%D%/target-newlib-signal.c \\\n \t%D%/version.c\n \n %D%/version.c: %D%/version.c-stamp ; @true"
    },
    {
      "sha": "6d44d03ea5b486a512eb7337b66f391d01bcdc72",
      "filename": "sim/common/nltvals.def",
      "status": "modified",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/nltvals.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/nltvals.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/nltvals.def?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -1,46 +1,5 @@\n /* Newlib/libgloss macro values needed by remote target support.  */\n /* This file is machine generated by gennltvals.py.  */\n-#ifdef signal_defs\n-/* from signal.h */\n-/* from sys/signal.h */\n-/* begin signal target macros */\n- { \"SIGABRT\", 6 },\n- { \"SIGALRM\", 14 },\n- { \"SIGBUS\", 10 },\n- { \"SIGCHLD\", 20 },\n- { \"SIGCLD\", 20 },\n- { \"SIGCONT\", 19 },\n- { \"SIGEMT\", 7 },\n- { \"SIGFPE\", 8 },\n- { \"SIGHUP\", 1 },\n- { \"SIGILL\", 4 },\n- { \"SIGINT\", 2 },\n- { \"SIGIO\", 23 },\n- { \"SIGIOT\", 6 },\n- { \"SIGKILL\", 9 },\n- { \"SIGLOST\", 29 },\n- { \"SIGPIPE\", 13 },\n- { \"SIGPOLL\", 23 },\n- { \"SIGPROF\", 27 },\n- { \"SIGQUIT\", 3 },\n- { \"SIGSEGV\", 11 },\n- { \"SIGSTOP\", 17 },\n- { \"SIGSYS\", 12 },\n- { \"SIGTERM\", 15 },\n- { \"SIGTRAP\", 5 },\n- { \"SIGTSTP\", 18 },\n- { \"SIGTTIN\", 21 },\n- { \"SIGTTOU\", 22 },\n- { \"SIGURG\", 16 },\n- { \"SIGUSR1\", 30 },\n- { \"SIGUSR2\", 31 },\n- { \"SIGVTALRM\", 26 },\n- { \"SIGWINCH\", 28 },\n- { \"SIGXCPU\", 24 },\n- { \"SIGXFSZ\", 25 },\n-#undef signal_defs\n-/* end signal target macros */\n-#endif\n #ifdef open_defs\n /* from fcntl.h */\n /* from sys/fcntl.h */"
    },
    {
      "sha": "b886bfa93b9fc7ecc66d1ddd7be21acddc467632",
      "filename": "sim/common/target-newlib-signal.c",
      "status": "added",
      "additions": 136,
      "deletions": 0,
      "changes": 136,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/target-newlib-signal.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88c8370b25c6a76cb7de19a3ef50a34abc090756/sim/common/target-newlib-signal.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/target-newlib-signal.c?ref=88c8370b25c6a76cb7de19a3ef50a34abc090756",
      "patch": "@@ -0,0 +1,136 @@\n+/* Target errno mappings for newlib/libgloss environment.\n+   Copyright 1995-2021 Free Software Foundation, Inc.\n+   Contributed by Mike Frysinger.\n+\n+   This file is part of simulators.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* This must come before any other includes.  */\n+#include \"defs.h\"\n+\n+#include <signal.h>\n+\n+#include \"sim/callback.h\"\n+\n+/* This file is kept up-to-date via the gennltvals.py script.  Do not edit\n+   anything between the START & END comment blocks below.  */\n+\n+CB_TARGET_DEFS_MAP cb_init_signal_map[] = {\n+  /* gennltvals: START */\n+#ifdef SIGABRT\n+  { \"SIGABRT\", SIGABRT, 6 },\n+#endif\n+#ifdef SIGALRM\n+  { \"SIGALRM\", SIGALRM, 14 },\n+#endif\n+#ifdef SIGBUS\n+  { \"SIGBUS\", SIGBUS, 10 },\n+#endif\n+#ifdef SIGCHLD\n+  { \"SIGCHLD\", SIGCHLD, 20 },\n+#endif\n+#ifdef SIGCLD\n+  { \"SIGCLD\", SIGCLD, 20 },\n+#endif\n+#ifdef SIGCONT\n+  { \"SIGCONT\", SIGCONT, 19 },\n+#endif\n+#ifdef SIGEMT\n+  { \"SIGEMT\", SIGEMT, 7 },\n+#endif\n+#ifdef SIGFPE\n+  { \"SIGFPE\", SIGFPE, 8 },\n+#endif\n+#ifdef SIGHUP\n+  { \"SIGHUP\", SIGHUP, 1 },\n+#endif\n+#ifdef SIGILL\n+  { \"SIGILL\", SIGILL, 4 },\n+#endif\n+#ifdef SIGINT\n+  { \"SIGINT\", SIGINT, 2 },\n+#endif\n+#ifdef SIGIO\n+  { \"SIGIO\", SIGIO, 23 },\n+#endif\n+#ifdef SIGIOT\n+  { \"SIGIOT\", SIGIOT, 6 },\n+#endif\n+#ifdef SIGKILL\n+  { \"SIGKILL\", SIGKILL, 9 },\n+#endif\n+#ifdef SIGLOST\n+  { \"SIGLOST\", SIGLOST, 29 },\n+#endif\n+#ifdef SIGPIPE\n+  { \"SIGPIPE\", SIGPIPE, 13 },\n+#endif\n+#ifdef SIGPOLL\n+  { \"SIGPOLL\", SIGPOLL, 23 },\n+#endif\n+#ifdef SIGPROF\n+  { \"SIGPROF\", SIGPROF, 27 },\n+#endif\n+#ifdef SIGQUIT\n+  { \"SIGQUIT\", SIGQUIT, 3 },\n+#endif\n+#ifdef SIGSEGV\n+  { \"SIGSEGV\", SIGSEGV, 11 },\n+#endif\n+#ifdef SIGSTOP\n+  { \"SIGSTOP\", SIGSTOP, 17 },\n+#endif\n+#ifdef SIGSYS\n+  { \"SIGSYS\", SIGSYS, 12 },\n+#endif\n+#ifdef SIGTERM\n+  { \"SIGTERM\", SIGTERM, 15 },\n+#endif\n+#ifdef SIGTRAP\n+  { \"SIGTRAP\", SIGTRAP, 5 },\n+#endif\n+#ifdef SIGTSTP\n+  { \"SIGTSTP\", SIGTSTP, 18 },\n+#endif\n+#ifdef SIGTTIN\n+  { \"SIGTTIN\", SIGTTIN, 21 },\n+#endif\n+#ifdef SIGTTOU\n+  { \"SIGTTOU\", SIGTTOU, 22 },\n+#endif\n+#ifdef SIGURG\n+  { \"SIGURG\", SIGURG, 16 },\n+#endif\n+#ifdef SIGUSR1\n+  { \"SIGUSR1\", SIGUSR1, 30 },\n+#endif\n+#ifdef SIGUSR2\n+  { \"SIGUSR2\", SIGUSR2, 31 },\n+#endif\n+#ifdef SIGVTALRM\n+  { \"SIGVTALRM\", SIGVTALRM, 26 },\n+#endif\n+#ifdef SIGWINCH\n+  { \"SIGWINCH\", SIGWINCH, 28 },\n+#endif\n+#ifdef SIGXCPU\n+  { \"SIGXCPU\", SIGXCPU, 24 },\n+#endif\n+#ifdef SIGXFSZ\n+  { \"SIGXFSZ\", SIGXFSZ, 25 },\n+#endif\n+  /* gennltvals: END */\n+  { NULL, -1, -1 },\n+};"
    }
  ]
}