{
  "sha": "fc304b889106f6d1bd720e969b95615992bf1961",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmMzMDRiODg5MTA2ZjZkMWJkNzIwZTk2OWI5NTYxNTk5MmJmMTk2MQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-11T14:04:21Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-12T02:27:03Z"
    },
    "message": "PR27719, lang_mark_undefineds trashes memory\n\nIt's not enough to test that the output is ELF before casting\nbfd_link_hash_entry to elf_link_hash_entry.  Some ELF targets (d30v,\ndlx, pj, s12z, xgate) use the generic linker support in bfd/linker.c\nand thus their symbols are of type generic_link_hash_entry.\n\nNot all of the places this patch touches can result in wrong accesses,\nbut I thought it worth ensuring that all occurrences of\nelf_link_hash_entry in ld/ were obviously correct.\n\n\tPR 27719\n\t* ldlang.c (lang_mark_undefineds, undef_start_stop): Test that\n\tthe symbol hash table is the correct type before accessing\n\telf_link_hash_entry symbols.\n\t* plugin.c (is_visible_from_outside): Likewise.\n\t* emultempl/armelf.em (ld${EMULATION_NAME}_finish): Likewise.\n\t* emultempl/solaris2.em (elf_solaris2_before_allocation): Likewise.",
    "tree": {
      "sha": "af9f6df2ab9282409587e4b8ba784e813e2c6f5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/af9f6df2ab9282409587e4b8ba784e813e2c6f5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc304b889106f6d1bd720e969b95615992bf1961",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc304b889106f6d1bd720e969b95615992bf1961",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc304b889106f6d1bd720e969b95615992bf1961",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc304b889106f6d1bd720e969b95615992bf1961/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e601909a3287bf541c6a7d82214bb387d2c76d82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e601909a3287bf541c6a7d82214bb387d2c76d82",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e601909a3287bf541c6a7d82214bb387d2c76d82"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 16,
    "deletions": 5
  },
  "files": [
    {
      "sha": "aad02a2086af20bcd11ea8cb58b52663284d2d29",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc304b889106f6d1bd720e969b95615992bf1961/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc304b889106f6d1bd720e969b95615992bf1961/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=fc304b889106f6d1bd720e969b95615992bf1961",
      "patch": "@@ -1,3 +1,13 @@\n+2021-04-12  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27719\n+\t* ldlang.c (lang_mark_undefineds, undef_start_stop): Test that\n+\tthe symbol hash table is the correct type before accessing\n+\telf_link_hash_entry symbols.\n+\t* plugin.c (is_visible_from_outside): Likewise.\n+\t* emultempl/armelf.em (ld${EMULATION_NAME}_finish): Likewise.\n+\t* emultempl/solaris2.em (elf_solaris2_before_allocation): Likewise.\n+\n 2021-04-09  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/inlinepcrel-1.d: Update expected output."
    },
    {
      "sha": "7aec17e5ede95e488350910875b0b1bf4fb4e3d1",
      "filename": "ld/emultempl/armelf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc304b889106f6d1bd720e969b95615992bf1961/ld/emultempl/armelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc304b889106f6d1bd720e969b95615992bf1961/ld/emultempl/armelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/armelf.em?ref=fc304b889106f6d1bd720e969b95615992bf1961",
      "patch": "@@ -463,7 +463,7 @@ gld${EMULATION_NAME}_finish (void)\n     {\n       struct elf_link_hash_entry * eh;\n \n-      if (!entry_symbol.name)\n+      if (!entry_symbol.name || !is_elf_hash_table (link_info.hash))\n \treturn;\n \n       h = bfd_link_hash_lookup (link_info.hash, entry_symbol.name,"
    },
    {
      "sha": "e2b4fd63b7bc2b85709b4288af90eebe21ff56c4",
      "filename": "ld/emultempl/solaris2.em",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc304b889106f6d1bd720e969b95615992bf1961/ld/emultempl/solaris2.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc304b889106f6d1bd720e969b95615992bf1961/ld/emultempl/solaris2.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/solaris2.em?ref=fc304b889106f6d1bd720e969b95615992bf1961",
      "patch": "@@ -64,7 +64,8 @@ elf_solaris2_before_allocation (void)\n   const char **sym;\n \n   /* Do this for both executables and shared objects.  */\n-  if (!bfd_link_relocatable (&link_info))\n+  if (!bfd_link_relocatable (&link_info)\n+      && is_elf_hash_table (link_info.hash))\n     {\n       for (sym = global_syms; *sym != NULL; sym++)\n \t{"
    },
    {
      "sha": "37b64c89ee1d48b10647a07996a21d1f27ecf59a",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc304b889106f6d1bd720e969b95615992bf1961/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc304b889106f6d1bd720e969b95615992bf1961/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=fc304b889106f6d1bd720e969b95615992bf1961",
      "patch": "@@ -4009,7 +4009,7 @@ lang_mark_undefineds (void)\n {\n   ldlang_undef_chain_list_type *ptr;\n \n-  if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n+  if (is_elf_hash_table (link_info.hash))\n     for (ptr = ldlang_undef_chain_list_head; ptr != NULL; ptr = ptr->next)\n       {\n \tstruct elf_link_hash_entry *h = (struct elf_link_hash_entry *)\n@@ -6822,7 +6822,7 @@ undef_start_stop (struct bfd_link_hash_entry *h)\n \t}\n       h->type = bfd_link_hash_undefined;\n       h->u.undef.abfd = NULL;\n-      if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n+      if (is_elf_hash_table (link_info.hash))\n \t{\n \t  const struct elf_backend_data *bed;\n \t  struct elf_link_hash_entry *eh = (struct elf_link_hash_entry *) h;"
    },
    {
      "sha": "98a83bc9593e111d0502d339ffa60fdd55c32489",
      "filename": "ld/plugin.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc304b889106f6d1bd720e969b95615992bf1961/ld/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc304b889106f6d1bd720e969b95615992bf1961/ld/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/plugin.c?ref=fc304b889106f6d1bd720e969b95615992bf1961",
      "patch": "@@ -636,7 +636,7 @@ is_visible_from_outside (struct ld_plugin_symbol *lsym,\n \t\t\t\t   blhe->root.string))\n \treturn false;\n       /* Only ELF symbols really have visibility.  */\n-      if (bfd_get_flavour (link_info.output_bfd) == bfd_target_elf_flavour)\n+      if (is_elf_hash_table (link_info.hash))\n \t{\n \t  struct elf_link_hash_entry *el = (struct elf_link_hash_entry *)blhe;\n \t  int vis = ELF_ST_VISIBILITY (el->other);"
    }
  ]
}