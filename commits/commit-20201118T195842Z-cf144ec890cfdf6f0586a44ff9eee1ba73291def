{
  "sha": "cf144ec890cfdf6f0586a44ff9eee1ba73291def",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2YxNDRlYzg5MGNmZGY2ZjA1ODZhNDRmZjllZWUxYmE3MzI5MWRlZg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-18T19:58:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-11-18T19:58:42Z"
    },
    "message": "gdb/testsuite: use unresolved in mi_run_cmd_full\n\nRunning:\n\n    make check TESTS=\"gdb.mi/mi-nonstop-exit.exp\" RUNTESTFLAGS=\"--target_board=native-extended-gdbserver\"\n\nWe get:\n\n    Running /home/simark/src/binutils-gdb/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp ...\n    ERROR: Unable to start target\n\n                    === gdb Summary ===\n\n    # of expected passes            2\n\nThe root cause of the problem is the typical \"we try to enable non-stop\nafter having connected to gdbserver\".  This is because with the\nnative-extended-gdbserver board, GDB connects to GDBserver as soon as\nit's started.  It's too late then to do \"set non-stop 1\" or \"-gdb-set\nnon-stop 1\".  This is fixed by the following patch.\n\nMore worrying is that the error is not reported (except for the\nprintout).  From the testsuite point of view, everything went fine.\nruntest exits with status 0.\n\nThis is because mi_run_cmd_full uses perror.  perror just prints that\nERROR and makes it so the next test becomes UNRESOLVED.  However,\nthere's no next test, because we just return early, seeing that we\ncouldn't run.\n\nChange mi_run_cmd_full to call unresolved directly instead.  This\nensures that the failure is recorded.\n\nThis is the results diff when running the gdb.mi/*.exp tests:\n\n     # of unexpected failures       34\n     # of expected failures         8\n     # of known failures            13\n    -# of unresolved testcases      4\n    +# of unresolved testcases      10\n     # of unsupported tests         1\n     # of duplicate test names      34\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/mi-support.exp (mi_run_cmd_full): Use unresovled instead\n\tof perror.\n\nChange-Id: Ib0f214c0127fbe73f2033c6c29d678e025690220",
    "tree": {
      "sha": "979121eb19b9ce38e28ff26c9dfbb74c2a58081b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/979121eb19b9ce38e28ff26c9dfbb74c2a58081b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf144ec890cfdf6f0586a44ff9eee1ba73291def",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf144ec890cfdf6f0586a44ff9eee1ba73291def",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf144ec890cfdf6f0586a44ff9eee1ba73291def",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf144ec890cfdf6f0586a44ff9eee1ba73291def/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b6a3e057eaab9735b683e32fe55f3ebf4ebae7e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b6a3e057eaab9735b683e32fe55f3ebf4ebae7e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b6a3e057eaab9735b683e32fe55f3ebf4ebae7e"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4722846c75e140cd387c49141d41bbabf9711404",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf144ec890cfdf6f0586a44ff9eee1ba73291def/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf144ec890cfdf6f0586a44ff9eee1ba73291def/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=cf144ec890cfdf6f0586a44ff9eee1ba73291def",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-18  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* lib/mi-support.exp (mi_run_cmd_full): Use unresovled instead\n+\tof perror.\n+\n 2020-11-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lib/mi-support.exp (mi_gdb_file_cmd): Check for case where"
    },
    {
      "sha": "1c95ddee941a4444007066732e0e633feb686a65",
      "filename": "gdb/testsuite/lib/mi-support.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf144ec890cfdf6f0586a44ff9eee1ba73291def/gdb/testsuite/lib/mi-support.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf144ec890cfdf6f0586a44ff9eee1ba73291def/gdb/testsuite/lib/mi-support.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/mi-support.exp?ref=cf144ec890cfdf6f0586a44ff9eee1ba73291def",
      "patch": "@@ -961,7 +961,7 @@ proc mi_run_cmd_full {use_mi_command args} {\n \tgdb_expect 30 {\n \t    -re \"$mi_gdb_prompt$\" { }\n \t    default {\n-\t\tperror \"gdb_init_command for target failed\"\n+\t\tunresolved \"gdb_init_command for target failed\"\n \t\treturn -1\n \t    }\n \t}\n@@ -995,7 +995,7 @@ proc mi_run_cmd_full {use_mi_command args} {\n \tgdb_expect {\n \t    -re \"&\\\"jump \\\\*${start}\\\\\\\\n\\\"\\[\\r\\n\\]+~\\\"Continuing at 0x\\[0-9A-Fa-f\\]+\\.\\\\\\\\n\\\"\\[\\r\\n\\]+\\\\^running\\[\\r\\n\\]+\\\\*running,thread-id=\\\"\\[^\\\"\\]+\\\"\\[\\r\\n\\]+${mi_gdb_prompt}\" {}\n \t    timeout {\n-\t\tperror \"Unable to start target\"\n+\t\tunresolved \"unable to start target\"\n \t\treturn -1\n \t    }\n \t}\n@@ -1011,7 +1011,7 @@ proc mi_run_cmd_full {use_mi_command args} {\n \t    return -1\n \t}\n \ttimeout {\n-\t    perror \"Unable to start target\"\n+\t    unresolved \"unable to start target\"\n \t    return -1\n \t}\n     }"
    }
  ]
}