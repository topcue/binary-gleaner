{
  "sha": "3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2ViMTg1Yzk3ZDgxNzBiM2YzYTJiNWVkYWI0ZmJiZDU2ZjUzZjZmNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-15T13:33:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-19T14:46:21Z"
    },
    "message": "Fix N^2 behavior in _bfd_dwarf2_find_symbol_bias\n\nA customer reported a case where addr2line was very slow.  We tracked\nthis down to some N^2 behavior in _bfd_dwarf2_find_symbol_bias in the\nunusual case where no function can be found.\n\nThis patch fixes the bug, and reduces the runtime for a particular\nrequest from 127 seconds to 1 second.\n\nbfd/ChangeLog\n2019-08-19  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Create hash table\n\tholding symbols.",
    "tree": {
      "sha": "3d8534031d90c39c7fbae258959d25d3caf8288a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d8534031d90c39c7fbae258959d25d3caf8288a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d292364e95fc9c8230b678d9026f285850074c02",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d292364e95fc9c8230b678d9026f285850074c02",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d292364e95fc9c8230b678d9026f285850074c02"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 51,
    "deletions": 10
  },
  "files": [
    {
      "sha": "bfaec7b5d8060aa65fc82403b0b1168feba9ab6f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-19  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2.c (_bfd_dwarf2_find_symbol_bias): Create hash table\n+\tholding symbols.\n+\n 2019-08-19  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (struct ppc64_elf_obj_tdata): Rename has_gotrel"
    },
    {
      "sha": "a8beec4947246319e227833c1ffaff78d9681330",
      "filename": "bfd/dwarf2.c",
      "status": "modified",
      "additions": 46,
      "deletions": 10,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7/bfd/dwarf2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7/bfd/dwarf2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/dwarf2.c?ref=3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
      "patch": "@@ -35,6 +35,7 @@\n #include \"libbfd.h\"\n #include \"elf-bfd.h\"\n #include \"dwarf2.h\"\n+#include \"hashtab.h\"\n \n /* The data in the .debug_line statement prologue looks like this.  */\n \n@@ -4552,6 +4553,25 @@ stash_comp_unit (struct dwarf2_debug *stash)\n   return NULL;\n }\n \n+/* Hash function for an asymbol.  */\n+\n+static hashval_t\n+hash_asymbol (const void *sym)\n+{\n+  const asymbol *asym = sym;\n+  return htab_hash_string (asym->name);\n+}\n+\n+/* Equality function for asymbols.  */\n+\n+static int\n+eq_asymbol (const void *a, const void *b)\n+{\n+  const asymbol *sa = a;\n+  const asymbol *sb = b;\n+  return strcmp (sa->name, sb->name) == 0;\n+}\n+\n /* Scan the debug information in PINFO looking for a DW_TAG_subprogram\n    abbrev with a DW_AT_low_pc attached to it.  Then lookup that same\n    symbol in SYMBOLS and return the difference between the low_pc and\n@@ -4562,12 +4582,28 @@ _bfd_dwarf2_find_symbol_bias (asymbol ** symbols, void ** pinfo)\n {\n   struct dwarf2_debug *stash;\n   struct comp_unit * unit;\n+  htab_t sym_hash;\n+  bfd_signed_vma result = 0;\n+  asymbol ** psym;\n \n   stash = (struct dwarf2_debug *) *pinfo;\n \n   if (stash == NULL || symbols == NULL)\n     return 0;\n \n+  sym_hash = htab_create_alloc (10, hash_asymbol, eq_asymbol,\n+\t\t\t\tNULL, xcalloc, free);\n+  for (psym = symbols; * psym != NULL; psym++)\n+    {\n+      asymbol * sym = * psym;\n+\n+      if (sym->flags & BSF_FUNCTION && sym->section != NULL)\n+\t{\n+\t  void **slot = htab_find_slot (sym_hash, sym, INSERT);\n+\t  *slot = sym;\n+\t}\n+    }\n+\n   for (unit = stash->all_comp_units; unit; unit = unit->next_unit)\n     {\n       struct funcinfo * func;\n@@ -4577,24 +4613,24 @@ _bfd_dwarf2_find_symbol_bias (asymbol ** symbols, void ** pinfo)\n       for (func = unit->function_table; func != NULL; func = func->prev_func)\n \tif (func->name && func->arange.low)\n \t  {\n-\t    asymbol ** psym;\n+\t    asymbol search, *sym;\n \n \t    /* FIXME: Do we need to scan the aranges looking for the lowest pc value ?  */\n \n-\t    for (psym = symbols; * psym != NULL; psym++)\n+\t    search.name = func->name;\n+\t    sym = htab_find (sym_hash, &search);\n+\t    if (sym != NULL)\n \t      {\n-\t\tasymbol * sym = * psym;\n-\n-\t\tif (sym->flags & BSF_FUNCTION\n-\t\t    && sym->section != NULL\n-\t\t    && strcmp (sym->name, func->name) == 0)\n-\t\t  return ((bfd_signed_vma) func->arange.low) -\n-\t\t    ((bfd_signed_vma) (sym->value + sym->section->vma));\n+\t\tresult = ((bfd_signed_vma) func->arange.low) -\n+\t\t  ((bfd_signed_vma) (sym->value + sym->section->vma));\n+\t\tgoto done;\n \t      }\n \t  }\n     }\n \n-  return 0;\n+ done:\n+  htab_delete (sym_hash);\n+  return result;\n }\n \n /* Find the source code location of SYMBOL.  If SYMBOL is NULL"
    }
  ]
}