{
  "sha": "1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
  "node_id": "C_kwDOANOeidoAKDEyODVjZTg2MjliMzdmODAwYmYyMTczMWVlN2M3YThiMWI4ZDAyMzM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-30T17:29:03Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-26T22:19:13Z"
    },
    "message": "Always call the wrap_here method\n\nThis changes all existing calls to wrap_here to call the method on the\nappropriate ui_file instead.  The choice of ui_file is determined by\ncontext.",
    "tree": {
      "sha": "ce4a47e09e9f76c5530378cb9db537ae38a92976",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce4a47e09e9f76c5530378cb9db537ae38a92976"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7016a382b0dc48001cb5c36e56b42fc41b1303a8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7016a382b0dc48001cb5c36e56b42fc41b1303a8"
    }
  ],
  "stats": {
    "total": 160,
    "additions": 80,
    "deletions": 80
  },
  "files": [
    {
      "sha": "5f225ffb6337b15f62609883d9395d3920a19a3a",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -317,15 +317,15 @@ print_enum_type (struct type *type, struct ui_file *stream)\n   LONGEST lastval;\n \n   fprintf_filtered (stream, \"(\");\n-  wrap_here (1);\n+  stream->wrap_here (1);\n \n   lastval = 0;\n   for (i = 0; i < len; i++)\n     {\n       QUIT;\n       if (i)\n \tfprintf_filtered (stream, \", \");\n-      wrap_here (4);\n+      stream->wrap_here (4);\n       fputs_styled (ada_enum_name (type->field (i).name ()),\n \t\t    variable_name_style.style (), stream);\n       if (lastval != type->field (i).loc_enumval ())\n@@ -416,7 +416,7 @@ print_array_type (struct type *type, struct ui_file *stream, int show,\n \n   elt_type = ada_array_element_type (type, n_indices);\n   fprintf_filtered (stream, \") of \");\n-  wrap_here (0);\n+  stream->wrap_here (0);\n   ada_print_type (elt_type, \"\", stream, show == 0 ? 0 : show - 1, level + 1,\n \t\t  flags);\n   /* Arrays with variable-length elements are never bit-packed in practice but\n@@ -892,7 +892,7 @@ print_func_type (struct type *type, struct ui_file *stream, const char *name,\n \t  if (i > 0)\n \t    {\n \t      fputs_filtered (\"; \", stream);\n-\t      wrap_here (4);\n+\t      stream->wrap_here (4);\n \t    }\n \t  fprintf_filtered (stream, \"a%d: \", i + 1);\n \t  ada_print_type (type->field (i).type (), \"\", stream, -1, 0,"
    },
    {
      "sha": "adab6b42f5b8048ae32f744b9a74c705524b070f",
      "filename": "gdb/ada-valprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/ada-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/ada-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-valprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -178,7 +178,7 @@ val_print_packed_array_elements (struct type *type, const gdb_byte *valaddr,\n \t  fprintf_filtered (stream, \"\\n\");\n \t  print_spaces_filtered (2 + 2 * recurse, stream);\n \t}\n-      wrap_here (2 + 2 * recurse);\n+      stream->wrap_here (2 + 2 * recurse);\n       maybe_print_array_index (index_type, i + low, stream, options);\n \n       i0 = i;\n@@ -235,7 +235,7 @@ val_print_packed_array_elements (struct type *type, const gdb_byte *valaddr,\n \t\t    {\n \t\t      fprintf_filtered (stream, \", \");\n \t\t    }\n-\t\t  wrap_here (2 + 2 * recurse);\n+\t\t  stream->wrap_here (2 + 2 * recurse);\n \t\t  maybe_print_array_index (index_type, j + low,\n \t\t\t\t\t   stream, options);\n \t\t}\n@@ -614,7 +614,7 @@ print_field_values (struct value *value, struct value *outer_value,\n \t}\n       else\n \t{\n-\t  wrap_here (2 + 2 * recurse);\n+\t  stream->wrap_here (2 + 2 * recurse);\n \t}\n \n       annotate_field_begin (type->field (i).type ());"
    },
    {
      "sha": "a24ada66434a4bc2cae9f24a5bba9404923ac3d4",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -250,7 +250,7 @@ cp_type_print_derivation_info (struct ui_file *stream,\n \n   for (i = 0; i < TYPE_N_BASECLASSES (type); i++)\n     {\n-      wrap_here (8);\n+      stream->wrap_here (8);\n       fputs_filtered (i == 0 ? \": \" : \", \", stream);\n       fprintf_filtered (stream, \"%s%s \",\n \t\t\tBASETYPE_VIA_PUBLIC (type, i)\n@@ -310,7 +310,7 @@ cp_type_print_method_args (struct type *mtype, const char *prefix,\n \t  else if (i < nargs)\n \t    {\n \t      fprintf_filtered (stream, \", \");\n-\t      wrap_here (8);\n+\t      stream->wrap_here (8);\n \t    }\n \t}\n     }\n@@ -573,7 +573,7 @@ c_type_print_args (struct type *type, struct ui_file *stream,\n       if (printed_any)\n \t{\n \t  fprintf_filtered (stream, \", \");\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t}\n \n       param_type = type->field (i).type ();\n@@ -602,7 +602,7 @@ c_type_print_args (struct type *type, struct ui_file *stream,\n       if (printed_any && type->has_varargs ())\n \t{\n \t  fprintf_filtered (stream, \", \");\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t  fprintf_filtered (stream, \"...\");\n \t}\n     }\n@@ -888,14 +888,14 @@ c_type_print_template_args (const struct type_print_options *flags,\n \n       if (first)\n \t{\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t  fprintf_filtered (stream, _(\"[with %s = \"), sym->linkage_name ());\n \t  first = 0;\n \t}\n       else\n \t{\n \t  fputs_filtered (\", \", stream);\n-\t  wrap_here (9);\n+\t  stream->wrap_here (9);\n \t  fprintf_filtered (stream, \"%s = \", sym->linkage_name ());\n \t}\n \n@@ -1559,7 +1559,7 @@ c_type_print_base_1 (struct type *type, struct ui_file *stream,\n \t    fputs_filtered (\" \", stream);\n \t}\n \n-      wrap_here (4);\n+      stream->wrap_here (4);\n       if (show < 0)\n \t{\n \t  /* If we just printed a tag name, no need to print anything\n@@ -1594,7 +1594,7 @@ c_type_print_base_1 (struct type *type, struct ui_file *stream,\n \t      QUIT;\n \t      if (i)\n \t\tfprintf_filtered (stream, \", \");\n-\t      wrap_here (4);\n+\t      stream->wrap_here (4);\n \t      fputs_styled (type->field (i).name (),\n \t\t\t    variable_name_style.style (), stream);\n \t      if (lastval != type->field (i).loc_enumval ())"
    },
    {
      "sha": "2f5ce3e5fff25bdd04895e57a7050fa94c71e8d0",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -841,7 +841,7 @@ echo_command (const char *text, int from_tty)\n   reset_terminal_style (gdb_stdout);\n \n   /* Force this output to appear now.  */\n-  wrap_here (0);\n+  gdb_stdout->wrap_here (0);\n   gdb_flush (gdb_stdout);\n }\n "
    },
    {
      "sha": "14422e098d43b6a26f708885aaaa621616877ed7",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1414,7 +1414,7 @@ fput_command_names_styled (const cmd_list_element &c,\n \tcontinue;\n \n       fputs_filtered (\", \", stream);\n-      wrap_here (3);\n+      stream->wrap_here (3);\n       fput_command_name_styled (alias, stream);\n     }\n \n@@ -1651,7 +1651,7 @@ help_list (struct cmd_list_element *list, const char *cmdtype,\n       fprintf_filtered (stream, \"\\n\\\n Type \\\"help%s\\\" followed by a class name for a list of commands in \",\n \t\t\tcmdtype1);\n-      wrap_here (0);\n+      stream->wrap_here (0);\n       fprintf_filtered (stream, \"that class.\");\n \n       fprintf_filtered (stream, \"\\n\\\n@@ -1660,16 +1660,16 @@ Type \\\"help all\\\" for the list of all commands.\");\n \n   fprintf_filtered (stream, \"\\nType \\\"help%s\\\" followed by %scommand name \",\n \t\t    cmdtype1, cmdtype2);\n-  wrap_here (0);\n+  stream->wrap_here (0);\n   fputs_filtered (\"for \", stream);\n-  wrap_here (0);\n+  stream->wrap_here (0);\n   fputs_filtered (\"full \", stream);\n-  wrap_here (0);\n+  stream->wrap_here (0);\n   fputs_filtered (\"documentation.\\n\", stream);\n   fputs_filtered (\"Type \\\"apropos word\\\" to search \"\n \t\t  \"for commands related to \\\"word\\\".\\n\", stream);\n   fputs_filtered (\"Type \\\"apropos -v word\\\" for full documentation\", stream);\n-  wrap_here (0);\n+  stream->wrap_here (0);\n   fputs_filtered (\" of commands related to \\\"word\\\".\\n\", stream);\n   fputs_filtered (\"Command name abbreviations are allowed if unambiguous.\\n\",\n \t\t  stream);"
    },
    {
      "sha": "8e2b631c8395f5592c24151b52319d47d158290e",
      "filename": "gdb/cp-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cp-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/cp-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-valprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -222,7 +222,7 @@ cp_print_value_fields (struct value *val, struct ui_file *stream,\n \t    }\n \t  else\n \t    {\n-\t      wrap_here (2 + 2 * recurse);\n+\t      stream->wrap_here (2 + 2 * recurse);\n \t    }\n \n \t  annotate_field_begin (type->field (i).type ());"
    },
    {
      "sha": "3000e5dddad98d9de58b42bd35167bec5f20cdc1",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1118,7 +1118,7 @@ The following disassembler options are supported for use with the\\n\\\n \t    fprintf_filtered (file, \"%s\", valid_options->arg[i]->name);\n \t  if (valid_options->name[i + 1] != NULL)\n \t    fprintf_filtered (file, \", \");\n-\t  wrap_here (2);\n+\t  file->wrap_here (2);\n \t}\n       fprintf_filtered (file, \"\\n\");\n     }\n@@ -1136,7 +1136,7 @@ The following disassembler options are supported for use with the\\n\\\n \t  for (j = 0; valid_args[i].values[j] != NULL; j++)\n \t    {\n \t      fprintf_filtered (file, \" %s\", valid_args[i].values[j]);\n-\t      wrap_here (3);\n+\t      file->wrap_here (3);\n \t    }\n \t  fprintf_filtered (file, \"\\n\");\n \t}"
    },
    {
      "sha": "16e26d5e4b100c79b72df2ec45ef0bf8f87c5464",
      "filename": "gdb/exceptions.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/exceptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/exceptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exceptions.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -52,7 +52,7 @@ print_flush (void)\n \n   /* 1.  The _filtered buffer.  */\n   if (filtered_printing_initialized ())\n-    wrap_here (0);\n+    gdb_stdout->wrap_here (0);\n \n   /* 2.  The stdio buffer.  */\n   gdb_flush (gdb_stdout);"
    },
    {
      "sha": "43ecb730a6559bfd91ae06d38e2336e7dfabe7ce",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -909,7 +909,7 @@ print_section_info (const target_section_table *t, bfd *abfd)\n   printf_filtered (\"\\t`%ps', \",\n \t\t   styled_string (file_name_style.style (),\n \t\t\t\t  bfd_get_filename (abfd)));\n-  wrap_here (8);\n+  gdb_stdout->wrap_here (8);\n   printf_filtered (_(\"file type %s.\\n\"), bfd_get_target (abfd));\n   if (abfd == current_program_space->exec_bfd ())\n     {"
    },
    {
      "sha": "6fd3d519c86b5541686af4d04483e43e8fd06d3f",
      "filename": "gdb/f-typeprint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/f-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/f-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-typeprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -250,7 +250,7 @@ f_language::f_type_print_varspec_suffix (struct type *type,\n \t      if (i > 0)\n \t\t{\n \t\t  fputs_filtered (\", \", stream);\n-\t\t  wrap_here (4);\n+\t\t  stream->wrap_here (4);\n \t\t}\n \t      print_type (type->field (i).type (), \"\", stream, -1, 0, 0);\n \t    }\n@@ -290,7 +290,7 @@ f_language::f_type_print_base (struct type *type, struct ui_file *stream,\n \n   QUIT;\n \n-  wrap_here (4);\n+  stream->wrap_here (4);\n   if (type == NULL)\n     {\n       fputs_styled (\"<type unknown>\", metadata_style.style (), stream);"
    },
    {
      "sha": "c64e834693805dbf3e30e9c00d581a69ad143fd8",
      "filename": "gdb/guile/scm-pretty-print.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/guile/scm-pretty-print.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/guile/scm-pretty-print.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-pretty-print.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -861,7 +861,7 @@ ppscm_print_children (SCM printer, enum display_hint hint,\n \t      print_spaces_filtered (2 + 2 * recurse, stream);\n \t    }\n \t  else\n-\t    wrap_here (2 + 2 *recurse);\n+\t    stream->wrap_here (2 + 2 *recurse);\n \t}\n \n       if (is_map && i % 2 == 0)"
    },
    {
      "sha": "f3685f75b72321d77745fdfb66a5a473414caf39",
      "filename": "gdb/m2-typeprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/m2-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/m2-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-typeprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -79,7 +79,7 @@ m2_print_type (struct type *type, const char *varstring,\n \n   QUIT;\n \n-  wrap_here (4);\n+  stream->wrap_here (4);\n   if (type == NULL)\n     {\n       fputs_styled (_(\"<type unknown>\"), metadata_style.style (), stream);\n@@ -292,7 +292,7 @@ m2_procedure (struct type *type, struct ui_file *stream,\n \t  if (i > 0)\n \t    {\n \t      fputs_filtered (\", \", stream);\n-\t      wrap_here (4);\n+\t      stream->wrap_here (4);\n \t    }\n \t  m2_print_type (type->field (i).type (), \"\", stream, -1, 0, flags);\n \t}\n@@ -539,7 +539,7 @@ m2_record_fields (struct type *type, struct ui_file *stream, int show,\n \t    fprintf_filtered (stream, \" = \");\n \t}\n     }\n-  wrap_here (4);\n+  stream->wrap_here (4);\n   if (show < 0)\n     {\n       if (type->code () == TYPE_CODE_STRUCT)\n@@ -608,7 +608,7 @@ m2_enum (struct type *type, struct ui_file *stream, int show, int level)\n \t  QUIT;\n \t  if (i > 0)\n \t    fprintf_filtered (stream, \", \");\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t  fputs_styled (type->field (i).name (),\n \t\t\tvariable_name_style.style (), stream);\n \t  if (lastval != type->field (i).loc_enumval ())"
    },
    {
      "sha": "8f944d86545068dd5dfaa7bf8d4f7e9abde7b9ef",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1121,7 +1121,7 @@ captured_main_1 (struct captured_main_args *context)\n   if (print_version)\n     {\n       print_gdb_version (gdb_stdout, false);\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       printf_filtered (\"\\n\");\n       exit (0);\n     }\n@@ -1135,7 +1135,7 @@ captured_main_1 (struct captured_main_args *context)\n   if (print_configuration)\n     {\n       print_gdb_configuration (gdb_stdout);\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       printf_filtered (\"\\n\");\n       exit (0);\n     }\n@@ -1151,7 +1151,7 @@ captured_main_1 (struct captured_main_args *context)\n       print_gdb_version (gdb_stdout, true);\n       if (symarg)\n \tprintf_filtered (\"..\");\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       printf_filtered (\"\\n\");\n       gdb_flush (gdb_stdout);\t/* Force to screen during slow\n \t\t\t\t   operations.  */\n@@ -1172,7 +1172,7 @@ captured_main_1 (struct captured_main_args *context)\n       print_gdb_version (gdb_stdout, true);\n       if (symarg)\n \tprintf_filtered (\"..\");\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       printf_filtered (\"\\n\");\n       gdb_flush (gdb_stdout);\t/* Force to screen during slow\n \t\t\t\t   operations.  */"
    },
    {
      "sha": "189b14643a82135cbf6c58f9beaba1a57ec97106",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -364,9 +364,9 @@ maint_print_all_sections (const char *header, bfd *abfd, objfile *objfile,\n \t\t\t  const char *arg)\n {\n   puts_filtered (header);\n-  wrap_here (8);\n+  gdb_stdout->wrap_here (8);\n   printf_filtered (\"`%s', \", bfd_get_filename (abfd));\n-  wrap_here (8);\n+  gdb_stdout->wrap_here (8);\n   printf_filtered (_(\"file type %s.\\n\"), bfd_get_target (abfd));\n \n   int section_count = gdb_bfd_count_sections (abfd);"
    },
    {
      "sha": "18c9ab9facb095353695810f4c0141949a13fdd0",
      "filename": "gdb/p-typeprint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/p-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/p-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-typeprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -287,7 +287,7 @@ pascal_language::print_func_args (struct type *type, struct ui_file *stream,\n       if (i > 0)\n \t{\n \t  fputs_filtered (\", \", stream);\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t}\n       /*  Can we find if it is a var parameter ??\n \t  if ( TYPE_FIELD(type, i) == )\n@@ -419,7 +419,7 @@ pascal_language::type_print_base (struct type *type, struct ui_file *stream, int\n   section_type;\n \n   QUIT;\n-  wrap_here (4);\n+  stream->wrap_here (4);\n   if (type == NULL)\n     {\n       fputs_styled (\"<type unknown>\", metadata_style.style (), stream);\n@@ -487,7 +487,7 @@ pascal_language::type_print_base (struct type *type, struct ui_file *stream, int\n       fprintf_filtered (stream, \"case <?> of \");\n \n     struct_union:\n-      wrap_here (4);\n+      stream->wrap_here (4);\n       if (show < 0)\n \t{\n \t  /* If we just printed a tag name, no need to print anything else.  */\n@@ -692,7 +692,7 @@ pascal_language::type_print_base (struct type *type, struct ui_file *stream, int\n       /* enum is just defined by\n \t type enume_name = (enum_member1,enum_member2,...)  */\n       fprintf_filtered (stream, \" = \");\n-      wrap_here (4);\n+      stream->wrap_here (4);\n       if (show < 0)\n \t{\n \t  /* If we just printed a tag name, no need to print anything else.  */\n@@ -709,7 +709,7 @@ pascal_language::type_print_base (struct type *type, struct ui_file *stream, int\n \t      QUIT;\n \t      if (i)\n \t\tfprintf_filtered (stream, \", \");\n-\t      wrap_here (4);\n+\t      stream->wrap_here (4);\n \t      fputs_filtered (type->field (i).name (), stream);\n \t      if (lastval != type->field (i).loc_enumval ())\n \t\t{"
    },
    {
      "sha": "635d7ed5e4de28d1b45d37c75d6398a6ce2f4a56",
      "filename": "gdb/p-valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/p-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/p-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-valprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -574,7 +574,7 @@ pascal_object_print_value_fields (struct value *val, struct ui_file *stream,\n \t    }\n \t  else\n \t    {\n-\t      wrap_here (2 + 2 * recurse);\n+\t      stream->wrap_here (2 + 2 * recurse);\n \t    }\n \n \t  annotate_field_begin (type->field (i).type ());"
    },
    {
      "sha": "ab87310965df718d36b46224559a2c40504be575",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -317,7 +317,7 @@ print_formatted (struct value *val, int size,\n \n \tcase 'i':\n \t  /* We often wrap here if there are long symbolic names.  */\n-\t  wrap_here (4);\n+\t  stream->wrap_here (4);\n \t  next_address = (value_address (val)\n \t\t\t  + gdb_print_insn (type->arch (),\n \t\t\t\t\t    value_address (val), stream,\n@@ -826,7 +826,7 @@ find_instruction_backward (struct gdbarch *gdbarch, CORE_ADDR addr,\n \t     is calculated after the loop.  */\n \t  printf_filtered (_(\"No line number information available \"\n \t\t\t     \"for address \"));\n-\t  wrap_here (2);\n+\t  gdb_stdout->wrap_here (2);\n \t  print_address (gdbarch, loop_start - 1, gdb_stdout);\n \t  printf_filtered (\"\\n\");\n \t  break;\n@@ -1498,7 +1498,7 @@ output_command (const char *exp, int from_tty)\n \n   annotate_value_end ();\n \n-  wrap_here (0);\n+  gdb_stdout->wrap_here (0);\n   gdb_flush (gdb_stdout);\n }\n \n@@ -2895,7 +2895,7 @@ printf_command (const char *arg, int from_tty)\n {\n   ui_printf (arg, gdb_stdout);\n   reset_terminal_style (gdb_stdout);\n-  wrap_here (0);\n+  gdb_stdout->wrap_here (0);\n   gdb_stdout->flush ();\n }\n "
    },
    {
      "sha": "ce077c67cbbe1ad008f96a87def0d936776512d5",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1422,11 +1422,11 @@ partial_symtab::expand_dependencies (struct objfile *objfile)\n \t  if (info_verbose)\n \t    {\n \t      puts_filtered (\" \");\n-\t      wrap_here (0);\n+\t      gdb_stdout->wrap_here (0);\n \t      puts_filtered (\"and \");\n-\t      wrap_here (0);\n+\t      gdb_stdout->wrap_here (0);\n \t      printf_filtered (\"%s...\", dependencies[i]->filename);\n-\t      wrap_here (0);\t/* Flush output */\n+\t      gdb_stdout->wrap_here (0);\t/* Flush output */\n \t      gdb_flush (gdb_stdout);\n \t    }\n \t  dependencies[i]->expand_psymtab (objfile);\n@@ -1679,14 +1679,14 @@ maintenance_info_psymtabs (const char *regexp, int from_tty)\n \t\t    if (! printed_objfile_start)\n \t\t      {\n \t\t\tprintf_filtered (\"{ objfile %s \", objfile_name (objfile));\n-\t\t\twrap_here (2);\n+\t\t\tgdb_stdout->wrap_here (2);\n \t\t\tprintf_filtered (\"((struct objfile *) %s)\\n\",\n \t\t\t\t\t host_address_to_string (objfile));\n \t\t\tprinted_objfile_start = 1;\n \t\t      }\n \n \t\t    printf_filtered (\"  { psymtab %s \", psymtab->filename);\n-\t\t    wrap_here (4);\n+\t\t    gdb_stdout->wrap_here (4);\n \t\t    printf_filtered (\"((struct partial_symtab *) %s)\\n\",\n \t\t\t\t     host_address_to_string (psymtab));\n "
    },
    {
      "sha": "8d3786844def5bd52bb4ebd4747940d1b6fe9499",
      "filename": "gdb/python/py-prettyprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/python/py-prettyprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/python/py-prettyprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-prettyprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -474,7 +474,7 @@ print_children (PyObject *printer, const char *hint,\n \t      print_spaces_filtered (2 + 2 * recurse, stream);\n \t    }\n \t  else\n-\t    wrap_here (2 + 2 *recurse);\n+\t    stream->wrap_here (2 + 2 *recurse);\n \t}\n \n       if (is_map && i % 2 == 0)"
    },
    {
      "sha": "f749dd64e3b8418b071f7aa63c3508d391a2917b",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1548,7 +1548,7 @@ info_line_command (const char *arg, int from_tty)\n \t\t user about a source line, at least let them have the symbolic\n \t\t address.  */\n \t      printf_filtered (\" for address \");\n-\t      wrap_here (2);\n+\t      gdb_stdout->wrap_here (2);\n \t      print_address (gdbarch, sal.pc, gdb_stdout);\n \t    }\n \t  else\n@@ -1565,21 +1565,21 @@ info_line_command (const char *arg, int from_tty)\n \t      printf_filtered (\"Line %d of \\\"%s\\\"\",\n \t\t\t       sal.line,\n \t\t\t       symtab_to_filename_for_display (sal.symtab));\n-\t      wrap_here (2);\n+\t      gdb_stdout->wrap_here (2);\n \t      printf_filtered (\" is at address \");\n \t      print_address (gdbarch, start_pc, gdb_stdout);\n-\t      wrap_here (2);\n+\t      gdb_stdout->wrap_here (2);\n \t      printf_filtered (\" but contains no code.\\n\");\n \t    }\n \t  else\n \t    {\n \t      printf_filtered (\"Line %d of \\\"%s\\\"\",\n \t\t\t       sal.line,\n \t\t\t       symtab_to_filename_for_display (sal.symtab));\n-\t      wrap_here (2);\n+\t      gdb_stdout->wrap_here (2);\n \t      printf_filtered (\" starts at address \");\n \t      print_address (gdbarch, start_pc, gdb_stdout);\n-\t      wrap_here (2);\n+\t      gdb_stdout->wrap_here (2);\n \t      printf_filtered (\" and ends at \");\n \t      print_address (gdbarch, end_pc, gdb_stdout);\n \t      printf_filtered (\".\\n\");"
    },
    {
      "sha": "c7269e2ac32617364b9f1d5669c14a63ed4b7dd2",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1557,21 +1557,21 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n   else\n     fputs_styled (\"<unavailable>\", metadata_style.style (), gdb_stdout);\n \n-  wrap_here (3);\n+  gdb_stdout->wrap_here (3);\n   if (funname)\n     {\n       printf_filtered (\" in \");\n       puts_filtered (funname);\n     }\n-  wrap_here (3);\n+  gdb_stdout->wrap_here (3);\n   if (sal.symtab)\n     printf_filtered\n       (\" (%ps:%d)\",\n        styled_string (file_name_style.style (),\n \t\t      symtab_to_filename_for_display (sal.symtab)),\n        sal.line);\n   puts_filtered (\"; \");\n-  wrap_here (4);\n+  gdb_stdout->wrap_here (4);\n   printf_filtered (\"saved %s = \", pc_regname);\n \n   if (!frame_id_p (frame_unwind_caller_id (fi)))\n@@ -1627,7 +1627,7 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n     }\n   if (get_next_frame (fi) && calling_frame_info)\n     puts_filtered (\",\");\n-  wrap_here (3);\n+  gdb_stdout->wrap_here (3);\n   if (get_next_frame (fi))\n     {\n       printf_filtered (\" caller of frame at \");\n@@ -1765,7 +1765,7 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n \t\tputs_filtered (\" Saved registers:\\n \");\n \t      else\n \t\tputs_filtered (\",\");\n-\t      wrap_here (1);\n+\t      gdb_stdout->wrap_here (1);\n \t      printf_filtered (\" %s at \",\n \t\t\t       gdbarch_register_name (gdbarch, i));\n \t      puts_filtered (paddress (gdbarch, addr));"
    },
    {
      "sha": "9bd4f48d0b023b5cd65b443320e45ac237113d41",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -2607,9 +2607,9 @@ reread_symbols (int from_tty)\n \n \t  if (!objfile_has_symbols (objfile))\n \t    {\n-\t      wrap_here (0);\n+\t      gdb_stdout->wrap_here (0);\n \t      printf_filtered (_(\"(no debugging symbols found)\\n\"));\n-\t      wrap_here (0);\n+\t      gdb_stdout->wrap_here (0);\n \t    }\n \n \t  /* We're done reading the symbol file; finish off complaints.  */"
    },
    {
      "sha": "cd51f6645c563965a27dff7e3c255d98aafc0ebf",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -766,7 +766,7 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t\t    if (! printed_objfile_start)\n \t\t      {\n \t\t\tprintf_filtered (\"{ objfile %s \", objfile_name (objfile));\n-\t\t\twrap_here (2);\n+\t\t\tgdb_stdout->wrap_here (2);\n \t\t\tprintf_filtered (\"((struct objfile *) %s)\\n\",\n \t\t\t\t\t host_address_to_string (objfile));\n \t\t\tprinted_objfile_start = 1;\n@@ -816,7 +816,7 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \n \t\t    printf_filtered (\"\\t{ symtab %s \",\n \t\t\t\t     symtab_to_filename_for_display (symtab));\n-\t\t    wrap_here (4);\n+\t\t    gdb_stdout->wrap_here (4);\n \t\t    printf_filtered (\"((struct symtab *) %s)\\n\",\n \t\t\t\t     host_address_to_string (symtab));\n \t\t    printf_filtered (\"\\t  fullname %s\\n\",\n@@ -873,7 +873,7 @@ maintenance_check_symtabs (const char *ignore, int from_tty)\n \t\tif (! printed_objfile_start)\n \t\t  {\n \t\t    printf_filtered (\"{ objfile %s \", objfile_name (objfile));\n-\t\t    wrap_here (2);\n+\t\t    gdb_stdout->wrap_here (2);\n \t\t    printf_filtered (\"((struct objfile *) %s)\\n\",\n \t\t\t\t     host_address_to_string (objfile));\n \t\t    printed_objfile_start = 1;"
    },
    {
      "sha": "a32e561ed774c283d5ec35beb712d9c2b5734fb1",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -4380,7 +4380,7 @@ output_source_filename_data::output (const char *disp_name,\n     m_uiout->text (\", \");\n   m_first = false;\n \n-  wrap_here (0);\n+  m_uiout->wrap_hint (0);\n   if (m_uiout->is_mi_like_p ())\n     {\n       m_uiout->field_string (\"file\", disp_name, file_name_style.style ());"
    },
    {
      "sha": "a94ed5cebdb27ce0d364384affd8d566826cf854",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1364,7 +1364,7 @@ command_line_input (const char *prompt_arg, const char *annotation_suffix)\n       /* Make sure that all output has been output.  Some machines may\n \t let you get away with leaving out some of the gdb_flush, but\n \t not all.  */\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       gdb_flush (gdb_stdout);\n       gdb_flush (gdb_stderr);\n "
    },
    {
      "sha": "95fc58fb8f066fe11b0063ea6cabc0b7d9b72a09",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -2395,10 +2395,10 @@ tfind_line_command (const char *args, int from_tty)\n \t  printf_filtered (\"Line %d of \\\"%s\\\"\",\n \t\t\t   sal.line,\n \t\t\t   symtab_to_filename_for_display (sal.symtab));\n-\t  wrap_here (2);\n+\t  gdb_stdout->wrap_here (2);\n \t  printf_filtered (\" is at address \");\n \t  print_address (get_current_arch (), start_pc, gdb_stdout);\n-\t  wrap_here (2);\n+\t  gdb_stdout->wrap_here (2);\n \t  printf_filtered (\" but contains no code.\\n\");\n \t  sal = find_pc_line (start_pc, 0);\n \t  if (sal.line > 0"
    },
    {
      "sha": "96e81c83912207bd0c0ce2394f77eaafe4b2b0cd",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -154,7 +154,7 @@ vwarning (const char *string, va_list args)\n \t  target_terminal::ours_for_output ();\n \t}\n       if (filtered_printing_initialized ())\n-\twrap_here (0);\t\t/* Force out any buffered output.  */\n+\tgdb_stdout->wrap_here (0);\t/* Force out any buffered output.  */\n       gdb_flush (gdb_stdout);\n       if (warning_pre_print)\n \tfputs_unfiltered (warning_pre_print, gdb_stderr);\n@@ -881,7 +881,7 @@ defaulted_query (const char *ctlstr, const char defchar, va_list args)\n     {\n       target_terminal::scoped_restore_terminal_state term_state;\n       target_terminal::ours_for_output ();\n-      wrap_here (0);\n+      gdb_stdout->wrap_here (0);\n       vfprintf_filtered (gdb_stdout, ctlstr, args);\n \n       printf_filtered (_(\"(%s or %s) [answered %c; \"\n@@ -1795,8 +1795,8 @@ fputs_maybe_filtered (const char *linebuffer, struct ui_file *stream,\n       if (*lineptr == '\\n')\n \t{\n \t  chars_printed = 0;\n-\t  wrap_here (0);\t/* Spit out chars, cancel\n-\t\t\t\t   further wraps.  */\n+\t  stream->wrap_here (0); /* Spit out chars, cancel\n+\t\t\t\t    further wraps.  */\n \t  lines_printed++;\n \t  /* XXX: The ideal thing would be to call\n \t     'stream->putc' here, but we can't because it"
    },
    {
      "sha": "82abcb4173474ab8c5fc5ebd12509aca6f6cbe9c",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1285ce8629b37f800bf21731ee7c7a8b1b8d0233/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=1285ce8629b37f800bf21731ee7c7a8b1b8d0233",
      "patch": "@@ -1946,7 +1946,7 @@ value_print_array_elements (struct value *val, struct ui_file *stream,\n \t  fprintf_filtered (stream, \"\\n\");\n \t  print_spaces_filtered (2 + 2 * recurse, stream);\n \t}\n-      wrap_here (2 + 2 * recurse);\n+      stream->wrap_here (2 + 2 * recurse);\n       maybe_print_array_index (index_type, i + low_bound,\n \t\t\t       stream, options);\n "
    }
  ]
}