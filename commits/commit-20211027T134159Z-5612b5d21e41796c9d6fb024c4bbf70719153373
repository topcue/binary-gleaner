{
  "sha": "5612b5d21e41796c9d6fb024c4bbf70719153373",
  "node_id": "C_kwDOANOeidoAKDU2MTJiNWQyMWU0MTc5NmM5ZDZmYjAyNGM0YmJmNzA3MTkxNTMzNzM",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-10-27T13:38:51Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-27T13:41:59Z"
    },
    "message": "gdb: fix value.c build on 32-bits\n\nWhen building on ARM (32-bits), we errors like this:\n\n    /home/smarchi/src/binutils-gdb/gdb/value.c: In function 'gdb::array_view<const unsigned char> value_contents_for_printing(value*)':\n    /home/smarchi/src/binutils-gdb/gdb/value.c:1252:35: error: narrowing conversion of 'length' from 'ULONGEST' {aka 'long long unsigned int'} to 'size_t' {aka 'unsigned int'} [-Werror=narrowing]\n     1252 |   return {value->contents.get (), length};\n          |                                   ^~~~~~\n\nFix that by using gdb::make_array_view, which does the appropriate\nconversion.\n\nChange-Id: I7d6f2e75d7440d248b8fb18f8272ee92954b404d",
    "tree": {
      "sha": "9ec3077a7aa777c37546cbc075a451e5536c01ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ec3077a7aa777c37546cbc075a451e5536c01ab"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5612b5d21e41796c9d6fb024c4bbf70719153373",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5612b5d21e41796c9d6fb024c4bbf70719153373",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5612b5d21e41796c9d6fb024c4bbf70719153373",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5612b5d21e41796c9d6fb024c4bbf70719153373/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "437e2ff1ad8a1d5f20ebd27af2f04e1a1bcb48a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/437e2ff1ad8a1d5f20ebd27af2f04e1a1bcb48a7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/437e2ff1ad8a1d5f20ebd27af2f04e1a1bcb48a7"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 5,
    "deletions": 4
  },
  "files": [
    {
      "sha": "a0ce3a796d0c786f405ebb88719ec9df31bb534f",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5612b5d21e41796c9d6fb024c4bbf70719153373/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5612b5d21e41796c9d6fb024c4bbf70719153373/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=5612b5d21e41796c9d6fb024c4bbf70719153373",
      "patch": "@@ -1155,7 +1155,8 @@ value_contents_raw (struct value *value)\n   allocate_value_contents (value);\n \n   ULONGEST length = TYPE_LENGTH (value_type (value));\n-  return {value->contents.get () + value->embedded_offset * unit_size, length};\n+  return gdb::make_array_view\n+    (value->contents.get () + value->embedded_offset * unit_size, length);\n }\n \n gdb::array_view<gdb_byte>\n@@ -1164,7 +1165,7 @@ value_contents_all_raw (struct value *value)\n   allocate_value_contents (value);\n \n   ULONGEST length = TYPE_LENGTH (value_type (value));\n-  return {value->contents.get (), length};\n+  return gdb::make_array_view (value->contents.get (), length);\n }\n \n struct type *\n@@ -1249,7 +1250,7 @@ value_contents_for_printing (struct value *value)\n     value_fetch_lazy (value);\n \n   ULONGEST length = TYPE_LENGTH (value_type (value));\n-  return {value->contents.get (), length};\n+  return gdb::make_array_view (value->contents.get (), length);\n }\n \n gdb::array_view<const gdb_byte>\n@@ -1258,7 +1259,7 @@ value_contents_for_printing_const (const struct value *value)\n   gdb_assert (!value->lazy);\n \n   ULONGEST length = TYPE_LENGTH (value_type (value));\n-  return {value->contents.get (), length};\n+  return gdb::make_array_view (value->contents.get (), length);\n }\n \n gdb::array_view<const gdb_byte>"
    }
  ]
}