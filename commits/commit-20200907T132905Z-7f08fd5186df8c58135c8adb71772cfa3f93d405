{
  "sha": "7f08fd5186df8c58135c8adb71772cfa3f93d405",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2YwOGZkNTE4NmRmOGM1ODEzNWM4YWRiNzE3NzJjZmEzZjkzZDQwNQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-09-07T12:40:40Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-09-07T13:29:05Z"
    },
    "message": "gdb/infrun: use switch_to_target_no_thread to switch the target\n\nUse the available `switch_to_target_no_thread` function to switch the\ntarget.  This is a refactoring.\n\ngdb/ChangeLog:\n2020-09-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* infrun.c (fetch_inferior_event): Use\n\t`switch_to_target_no_thread` to switch the target.",
    "tree": {
      "sha": "800d41cf992c0507dc2cae19413ce038bdb8312e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/800d41cf992c0507dc2cae19413ce038bdb8312e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f08fd5186df8c58135c8adb71772cfa3f93d405",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f08fd5186df8c58135c8adb71772cfa3f93d405",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f08fd5186df8c58135c8adb71772cfa3f93d405",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f08fd5186df8c58135c8adb71772cfa3f93d405/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2a54558074287721ce9e47142f7fa92bda15531",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2a54558074287721ce9e47142f7fa92bda15531",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d2a54558074287721ce9e47142f7fa92bda15531"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 7,
    "deletions": 7
  },
  "files": [
    {
      "sha": "788f4e6014d6ef36a9ebd9097b7af34f16316d01",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f08fd5186df8c58135c8adb71772cfa3f93d405/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f08fd5186df8c58135c8adb71772cfa3f93d405/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7f08fd5186df8c58135c8adb71772cfa3f93d405",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-07  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* infrun.c (fetch_inferior_event): Use\n+\t`switch_to_target_no_thread` to switch the target.\n+\n 2020-09-06  Tom Tromey  <tom@tromey.com>\n \n \t* symfile.h (dwarf2_free_objfile): Don't declare."
    },
    {
      "sha": "82ec30086a96dc4fb5d1ce1031595e578ddf11d0",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f08fd5186df8c58135c8adb71772cfa3f93d405/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f08fd5186df8c58135c8adb71772cfa3f93d405/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=7f08fd5186df8c58135c8adb71772cfa3f93d405",
      "patch": "@@ -3903,13 +3903,8 @@ fetch_inferior_event ()\n     gdb_assert (ecs->ws.kind != TARGET_WAITKIND_IGNORE);\n \n     /* Switch to the target that generated the event, so we can do\n-       target calls.  Any inferior bound to the target will do, so we\n-       just switch to the first we find.  */\n-    for (inferior *inf : all_inferiors (ecs->target))\n-      {\n-\tswitch_to_inferior_no_thread (inf);\n-\tbreak;\n-      }\n+       target calls.  */\n+    switch_to_target_no_thread (ecs->target);\n \n     if (debug_infrun)\n       print_target_wait_results (minus_one_ptid, ecs->ptid, &ecs->ws);"
    }
  ]
}