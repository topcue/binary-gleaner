{
  "sha": "a36158ec0c5145bc3988d9513081a2819353b179",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTM2MTU4ZWMwYzUxNDViYzM5ODhkOTUxMzA4MWEyODE5MzUzYjE3OQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-03T00:38:53Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-04T02:27:09Z"
    },
    "message": "gdb: make macro_stringify return a gdb::unique_xmalloc_ptr<char>\n\nThe change to macro_stringify is straightforward.  This allows removing\nthe manual memory management in fixup_definition.\n\ngdb/ChangeLog:\n\n\t* macroexp.h (macro_stringify): Return\n\tgdb::unique_xmalloc_ptr<char>.\n\t* macroexp.c (macro_stringify): Likewise.\n\t* macrotab.c (fixup_definition): Update.\n\nChange-Id: Id7db8988bdbd569dd51c4f4655b00eb26db277cb",
    "tree": {
      "sha": "96be65e9fb7d4a78c8154ed74d2efc7820265db2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/96be65e9fb7d4a78c8154ed74d2efc7820265db2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a36158ec0c5145bc3988d9513081a2819353b179",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a36158ec0c5145bc3988d9513081a2819353b179",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a36158ec0c5145bc3988d9513081a2819353b179",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a36158ec0c5145bc3988d9513081a2819353b179/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "14d960c82a6094551a0c463973b676136e4e60de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14d960c82a6094551a0c463973b676136e4e60de",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/14d960c82a6094551a0c463973b676136e4e60de"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 15,
    "deletions": 16
  },
  "files": [
    {
      "sha": "8178e1673b1c4f63e835898be1efc87721c6169a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a36158ec0c5145bc3988d9513081a2819353b179/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a36158ec0c5145bc3988d9513081a2819353b179/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a36158ec0c5145bc3988d9513081a2819353b179",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* macroexp.h (macro_stringify): Return\n+\tgdb::unique_xmalloc_ptr<char>.\n+\t* macroexp.c (macro_stringify): Likewise.\n+\t* macrotab.c (fixup_definition): Update.\n+\n 2020-07-02  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* c-exp.y (scan_macro_expansion): Don't free `expansion`."
    },
    {
      "sha": "5f749ffe892855509bff8df3f9b939067870a45a",
      "filename": "gdb/macroexp.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macroexp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macroexp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macroexp.c?ref=a36158ec0c5145bc3988d9513081a2819353b179",
      "patch": "@@ -698,7 +698,7 @@ stringify (struct macro_buffer *dest, const char *arg, int len)\n \n /* See macroexp.h.  */\n \n-char *\n+gdb::unique_xmalloc_ptr<char>\n macro_stringify (const char *str)\n {\n   int len = strlen (str);\n@@ -707,7 +707,7 @@ macro_stringify (const char *str)\n   stringify (&buffer, str, len);\n   buffer.appendc ('\\0');\n \n-  return buffer.release ().release ();\n+  return buffer.release ();\n }\n \n \f"
    },
    {
      "sha": "2e29d02d34bd40efe9adddad01d4361a338f64bf",
      "filename": "gdb/macroexp.h",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macroexp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macroexp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macroexp.h?ref=a36158ec0c5145bc3988d9513081a2819353b179",
      "patch": "@@ -78,9 +78,7 @@ int macro_is_identifier_nondigit (int c);\n int macro_is_digit (int c);\n \n \n-/* Stringify STR according to C rules and return an xmalloc'd pointer\n-   to the result.  */\n-\n-char *macro_stringify (const char *str);\n+/* Stringify STR according to C rules and return a null-terminated string.  */\n+gdb::unique_xmalloc_ptr<char> macro_stringify (const char *str);\n \n #endif /* MACROEXP_H */"
    },
    {
      "sha": "9ada436eaf28bda19ec4c8b6e259797bc2926836",
      "filename": "gdb/macrotab.c",
      "status": "modified",
      "additions": 4,
      "deletions": 10,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macrotab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a36158ec0c5145bc3988d9513081a2819353b179/gdb/macrotab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrotab.c?ref=a36158ec0c5145bc3988d9513081a2819353b179",
      "patch": "@@ -882,25 +882,19 @@ macro_undef (struct macro_source_file *source, int line,\n static struct macro_definition *\n fixup_definition (const char *filename, int line, struct macro_definition *def)\n {\n-  static char *saved_expansion;\n-\n-  if (saved_expansion)\n-    {\n-      xfree (saved_expansion);\n-      saved_expansion = NULL;\n-    }\n+  static gdb::unique_xmalloc_ptr<char> saved_expansion;\n \n   if (def->kind == macro_object_like)\n     {\n       if (def->argc == macro_FILE)\n \t{\n \t  saved_expansion = macro_stringify (filename);\n-\t  def->replacement = saved_expansion;\n+\t  def->replacement = saved_expansion.get ();\n \t}\n       else if (def->argc == macro_LINE)\n \t{\n-\t  saved_expansion = xstrprintf (\"%d\", line);\n-\t  def->replacement = saved_expansion;\n+\t  saved_expansion.reset (xstrprintf (\"%d\", line));\n+\t  def->replacement = saved_expansion.get ();\n \t}\n     }\n "
    }
  ]
}