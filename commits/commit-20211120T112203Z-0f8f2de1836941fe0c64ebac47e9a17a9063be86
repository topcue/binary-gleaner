{
  "sha": "0f8f2de1836941fe0c64ebac47e9a17a9063be86",
  "node_id": "C_kwDOANOeidoAKDBmOGYyZGUxODM2OTQxZmUwYzY0ZWJhYzQ3ZTlhMTdhOTA2M2JlODY",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-20T11:22:03Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-20T11:22:03Z"
    },
    "message": "[gdb/build] Check if libsource-highlight is usable\n\nWhen building gdb with g++ 4.8.5, I ran into:\n...\nld: source-cache.o: in function `source_cache::ensure(symtab*)':\nsource-cache.c:207: undefined reference to \\\n  srchilite::SourceHighlight::SourceHighlight(std::string const&)\n...\n\n[ I configured gdb without explicit settings related to source-highlight, so\nwe're excercising the enable_source_highlight=auto scenario. ]\n\nThe problem is that:\n- the source-highlight library is build with system compiler\n  g++ 7.5.0 which uses the new libstdc++ library abi (see\n  https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html )\n- gdb is build using g++ 4.8.5 which uses the old abi.\n\n[ There's a compatibility macro _GLIBCXX_USE_CXX11_ABI, but that doesn't work\nfor this case.  Instead, it enables the opposite case where the\nsource-highlight library is build with g++ 4.8.5 and gdb is build with\ng++ 7.5.0. ]\n\nFix this by checking whether the source-highlight library is usable during\nconfiguration.\n\nIn the enable_source_highlight=auto scenario, this allows the build to skip\nthe unusable library and finish successfully.\n\nIn the enable_source_highlight=yes scenario, this allows the build to error\nout earlier.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "6db977014c6a843f3c41ed0323b73b0432f132f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6db977014c6a843f3c41ed0323b73b0432f132f3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0f8f2de1836941fe0c64ebac47e9a17a9063be86",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8f2de1836941fe0c64ebac47e9a17a9063be86",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0f8f2de1836941fe0c64ebac47e9a17a9063be86",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f8f2de1836941fe0c64ebac47e9a17a9063be86/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d966a54ba936193aafeeb3a28bd2f2a54e25b564",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d966a54ba936193aafeeb3a28bd2f2a54e25b564",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d966a54ba936193aafeeb3a28bd2f2a54e25b564"
    }
  ],
  "stats": {
    "total": 205,
    "additions": 151,
    "deletions": 54
  },
  "files": [
    {
      "sha": "fe685f2d3d5f856b810b6b689a8162e7605ab7a2",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 109,
      "deletions": 49,
      "changes": 158,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8f2de1836941fe0c64ebac47e9a17a9063be86/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8f2de1836941fe0c64ebac47e9a17a9063be86/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=0f8f2de1836941fe0c64ebac47e9a17a9063be86",
      "patch": "@@ -2367,6 +2367,52 @@ $as_echo \"$ac_res\" >&6; }\n \n } # ac_fn_c_check_func\n \n+# ac_fn_cxx_try_link LINENO\n+# -------------------------\n+# Try to link conftest.$ac_ext, and return whether this succeeded.\n+ac_fn_cxx_try_link ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  rm -f conftest.$ac_objext conftest$ac_exeext\n+  if { { ac_try=\"$ac_link\"\n+case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_link\") 2>conftest.err\n+  ac_status=$?\n+  if test -s conftest.err; then\n+    grep -v '^ *+' conftest.err >conftest.er1\n+    cat conftest.er1 >&5\n+    mv -f conftest.er1 conftest.err\n+  fi\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } && {\n+\t test -z \"$ac_cxx_werror_flag\" ||\n+\t test ! -s conftest.err\n+       } && test -s conftest$ac_exeext && {\n+\t test \"$cross_compiling\" = yes ||\n+\t test -x conftest$ac_exeext\n+       }; then :\n+  ac_retval=0\n+else\n+  $as_echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+\tac_retval=1\n+fi\n+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n+  # interfere with the next link command; also delete a directory that is\n+  # left behind by Apple's compiler.  We do this before executing the actions.\n+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n+  as_fn_set_status $ac_retval\n+\n+} # ac_fn_cxx_try_link\n+\n # ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n # -------------------------------------------\n # Tests whether TYPE exists after having included INCLUDES, setting cache\n@@ -2524,52 +2570,6 @@ $as_echo \"$ac_res\" >&6; }\n \n } # ac_fn_c_check_member\n \n-# ac_fn_cxx_try_link LINENO\n-# -------------------------\n-# Try to link conftest.$ac_ext, and return whether this succeeded.\n-ac_fn_cxx_try_link ()\n-{\n-  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n-  rm -f conftest.$ac_objext conftest$ac_exeext\n-  if { { ac_try=\"$ac_link\"\n-case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_link\") 2>conftest.err\n-  ac_status=$?\n-  if test -s conftest.err; then\n-    grep -v '^ *+' conftest.err >conftest.er1\n-    cat conftest.er1 >&5\n-    mv -f conftest.er1 conftest.err\n-  fi\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; } && {\n-\t test -z \"$ac_cxx_werror_flag\" ||\n-\t test ! -s conftest.err\n-       } && test -s conftest$ac_exeext && {\n-\t test \"$cross_compiling\" = yes ||\n-\t test -x conftest$ac_exeext\n-       }; then :\n-  ac_retval=0\n-else\n-  $as_echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-\tac_retval=1\n-fi\n-  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n-  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n-  # interfere with the next link command; also delete a directory that is\n-  # left behind by Apple's compiler.  We do this before executing the actions.\n-  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n-  as_fn_set_status $ac_retval\n-\n-} # ac_fn_cxx_try_link\n-\n # ac_fn_cxx_check_func LINENO FUNC VAR\n # ------------------------------------\n # Tests whether FUNC exists, setting the cache variable VAR accordingly\n@@ -12103,13 +12103,73 @@ $as_echo \"no - pkg-config not found\" >&6; }\n           ;;\n       esac\n \n-      SRCHIGH_CFLAGS=`${pkg_config_prog_path} --cflags source-highlight`\n-      SRCHIGH_LIBS=`${pkg_config_prog_path} --libs source-highlight`\n+      srchigh_pkg_cflags=`${pkg_config_prog_path} --cflags source-highlight`\n+      srchigh_pkg_libs=`${pkg_config_prog_path} --libs source-highlight`\n+\n+      # Now that we have found a source-highlight library, check if we can use\n+      # it.  In particular, we're trying to detect the situation that the\n+      # library is using the new libstdc++ library abi ( see\n+      # https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html )\n+      # while the compiler being used to compile gdb is using the old abi.\n+      # Such a situation will result in an undefined reference to\n+      # srchilite::SourceHighlight::SourceHighlight(std::string const&).\n+      # This situation can occur for instance when using a source highlight\n+      # library compiled with g++ 7.5.0 while building gdb with g++ 4.8.5.\n+      ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+      save_CFLAGS=$CFLAGS\n+      save_LDFLAGS=$LDFLAGS\n+      CFLAGS=\"$CFLAGS $srchigh_pkg_cflags\"\n+      LDFLAGS=\"$LDFLAGS $srchigh_pkg_libs\"\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <srchilite/sourcehighlight.h>\n+int\n+main ()\n+{\n+std::string outlang = \"esc.outlang\";\n+           new srchilite::SourceHighlight (outlang);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  have_usable_source_highlight=yes\n+else\n+  have_usable_source_highlight=no\n+\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+      CFLAGS=\"$SAVE_CFLAGS\"\n+      LDFLAGS=\"$SAVE_LDFLAGS\"\n+      ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+      if test \"${have_usable_source_highlight}\" = \"yes\"; then\n \n $as_echo \"#define HAVE_SOURCE_HIGHLIGHT 1\" >>confdefs.h\n \n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n+        SRCHIGH_CFLAGS=\"$srchigh_pkg_cflags\"\n+        SRCHIGH_LIBS=\"$srchigh_pkg_libs\"\n+      else\n+        { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+        if test \"${enable_source_highlight}\" = \"yes\"; then\n+          as_fn_error $? \"source-highlight in your system could not be used\" \"$LINENO\" 5\n+        fi\n+      fi\n     else\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n $as_echo \"no\" >&6; }"
    },
    {
      "sha": "56e8a2d804495ef0fd5c420097fe6ca2e10323e8",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 42,
      "deletions": 5,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0f8f2de1836941fe0c64ebac47e9a17a9063be86/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0f8f2de1836941fe0c64ebac47e9a17a9063be86/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=0f8f2de1836941fe0c64ebac47e9a17a9063be86",
      "patch": "@@ -1248,11 +1248,48 @@ either use --disable-source-highlight or dnl\n           ;;\n       esac\n \n-      SRCHIGH_CFLAGS=`${pkg_config_prog_path} --cflags source-highlight`\n-      SRCHIGH_LIBS=`${pkg_config_prog_path} --libs source-highlight`\n-      AC_DEFINE([HAVE_SOURCE_HIGHLIGHT], 1,\n-                [Define to 1 if the source-highlight library is available])\n-      AC_MSG_RESULT([yes])\n+      srchigh_pkg_cflags=`${pkg_config_prog_path} --cflags source-highlight`\n+      srchigh_pkg_libs=`${pkg_config_prog_path} --libs source-highlight`\n+\n+      # Now that we have found a source-highlight library, check if we can use\n+      # it.  In particular, we're trying to detect the situation that the\n+      # library is using the new libstdc++ library abi ( see\n+      # https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html )\n+      # while the compiler being used to compile gdb is using the old abi.\n+      # Such a situation will result in an undefined reference to\n+      # srchilite::SourceHighlight::SourceHighlight(std::string const&).\n+      # This situation can occur for instance when using a source highlight\n+      # library compiled with g++ 7.5.0 while building gdb with g++ 4.8.5.\n+      AC_LANG_PUSH(C++)\n+      save_CFLAGS=$CFLAGS\n+      save_LDFLAGS=$LDFLAGS\n+      CFLAGS=\"$CFLAGS $srchigh_pkg_cflags\"\n+      LDFLAGS=\"$LDFLAGS $srchigh_pkg_libs\"\n+      AC_LINK_IFELSE(\n+        [AC_LANG_PROGRAM(\n+          [#include <srchilite/sourcehighlight.h>],\n+          [std::string outlang = \"esc.outlang\";\n+           new srchilite::SourceHighlight (outlang);]\n+        )],\n+        [have_usable_source_highlight=yes],\n+        [have_usable_source_highlight=no]\n+      )\n+      CFLAGS=\"$SAVE_CFLAGS\"\n+      LDFLAGS=\"$SAVE_LDFLAGS\"\n+      AC_LANG_POP(C++)\n+\n+      if test \"${have_usable_source_highlight}\" = \"yes\"; then\n+        AC_DEFINE([HAVE_SOURCE_HIGHLIGHT], 1,\n+                  [Define to 1 if the source-highlight library is available])\n+        AC_MSG_RESULT([yes])\n+        SRCHIGH_CFLAGS=\"$srchigh_pkg_cflags\"\n+        SRCHIGH_LIBS=\"$srchigh_pkg_libs\"\n+      else\n+        AC_MSG_RESULT([no])\n+        if test \"${enable_source_highlight}\" = \"yes\"; then\n+          AC_MSG_ERROR([source-highlight in your system could not be used])\n+        fi\n+      fi\n     else\n       AC_MSG_RESULT([no])\n       if test \"${enable_source_highlight}\" = \"yes\"; then"
    }
  ]
}