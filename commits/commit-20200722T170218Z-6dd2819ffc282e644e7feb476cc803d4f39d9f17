{
  "sha": "6dd2819ffc282e644e7feb476cc803d4f39d9f17",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmRkMjgxOWZmYzI4MmU2NDRlN2ZlYjQ3NmNjODAzZDRmMzlkOWYxNw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-05T17:15:26Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T17:02:18Z"
    },
    "message": "libctf, link: add the ability to filter out variables from the link\n\nThe CTF variables section (containing variables that have no\ncorresponding symtab entries) can cause the string table to get very\nvoluminous if the names of variables are long.  Some callers want to\nfilter out particular variables they know they won't need.\n\nSo add a \"variable filter\" callback that does that: it's passed the name\nof the variable and a corresponding ctf_file_t / ctf_id_t pair, and\nshould return 1 to filter it out.\n\nld doesn't use this machinery yet, but we could easily add it later if\ndesired.  (But see later for a commit that turns off CTF variable-\nsection linking in ld entirely by default.)\n\ninclude/\n\t* ctf-api.h (ctf_link_variable_filter_t): New.\n\t(ctf_link_set_variable_filter): Likewise.\n\nlibctf/\n\t* libctf.ver (ctf_link_set_variable_filter): Add.\n\t* ctf-impl.h (ctf_file_t) <ctf_link_variable_filter>: New.\n\t<ctf_link_variable_filter_arg>: Likewise.\n\t* ctf-create.c (ctf_serialize): Adjust.\n\t* ctf-link.c (ctf_link_set_variable_filter): New, set it.\n\t(ctf_link_one_variable): Call it if set.",
    "tree": {
      "sha": "cbbc466b022a0c522c03f398e374e12aa7ab6655",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cbbc466b022a0c522c03f398e374e12aa7ab6655"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6dd2819ffc282e644e7feb476cc803d4f39d9f17",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dd2819ffc282e644e7feb476cc803d4f39d9f17",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6dd2819ffc282e644e7feb476cc803d4f39d9f17",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dd2819ffc282e644e7feb476cc803d4f39d9f17/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "19d4b1addcafc786360c31d02d5ef2b44aef3152",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/19d4b1addcafc786360c31d02d5ef2b44aef3152",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/19d4b1addcafc786360c31d02d5ef2b44aef3152"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 48,
    "deletions": 1
  },
  "files": [
    {
      "sha": "3ddc26454053a729901d159b0cda60208e3f14e6",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_link_variable_filter_t): New.\n+\t(ctf_link_set_variable_filter): Likewise.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h (CTF_LINK_EMPTY_CU_MAPPINGS): New."
    },
    {
      "sha": "70bf7e0d8d2dadf2e19201f393a352f9912af296",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -458,6 +458,12 @@ extern int ctf_compress_write (ctf_file_t * fp, int fd);\n extern unsigned char *ctf_write_mem (ctf_file_t *, size_t *, size_t threshold);\n \n extern int ctf_link_add_ctf (ctf_file_t *, ctf_archive_t *, const char *);\n+/* The variable filter should return nonzero if a variable should not\n+   appear in the output.  */\n+typedef int ctf_link_variable_filter_f (ctf_file_t *, const char *, ctf_id_t,\n+\t\t\t\t\tvoid *);\n+extern int ctf_link_set_variable_filter (ctf_file_t *,\n+\t\t\t\t\t ctf_link_variable_filter_f *, void *);\n extern int ctf_link (ctf_file_t *, int flags);\n typedef const char *ctf_link_strtab_string_f (uint32_t *offset, void *arg);\n extern int ctf_link_add_strtab (ctf_file_t *, ctf_link_strtab_string_f *,"
    },
    {
      "sha": "0210b45bc1e04e72e142646e71624d3972669247",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* libctf.ver (ctf_link_set_variable_filter): Add.\n+\t* ctf-impl.h (ctf_file_t) <ctf_link_variable_filter>: New.\n+\t<ctf_link_variable_filter_arg>: Likewise.\n+\t* ctf-create.c (ctf_serialize): Adjust.\n+\t* ctf-link.c (ctf_link_set_variable_filter): New, set it.\n+\t(ctf_link_one_variable): Call it if set.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-link.c (ctf_link_one_variable): Check the dst_type for"
    },
    {
      "sha": "001e625aa8719be00f80b653450b804df169c326",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -543,6 +543,8 @@ ctf_serialize (ctf_file_t *fp)\n   nfp->ctf_link_type_mapping = fp->ctf_link_type_mapping;\n   nfp->ctf_link_memb_name_changer = fp->ctf_link_memb_name_changer;\n   nfp->ctf_link_memb_name_changer_arg = fp->ctf_link_memb_name_changer_arg;\n+  nfp->ctf_link_variable_filter = fp->ctf_link_variable_filter;\n+  nfp->ctf_link_variable_filter_arg = fp->ctf_link_variable_filter_arg;\n   nfp->ctf_link_flags = fp->ctf_link_flags;\n \n   nfp->ctf_snapshot_lu = fp->ctf_snapshots;"
    },
    {
      "sha": "7f47c68eccb6f78f2a309a6caf6cbda961b542ca",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -333,7 +333,12 @@ struct ctf_file\n \n   /* Allow the caller to change the name of link archive members.  */\n   ctf_link_memb_name_changer_f *ctf_link_memb_name_changer;\n-  void *ctf_link_memb_name_changer_arg; /* Argument for it.  */\n+  void *ctf_link_memb_name_changer_arg;         /* Argument for it.  */\n+\n+  /* Allow the caller to filter out variables they don't care about.  */\n+  ctf_link_variable_filter_f *ctf_link_variable_filter;\n+  void *ctf_link_variable_filter_arg;           /* Argument for it. */\n+\n   ctf_dynhash_t *ctf_add_processing; /* Types ctf_add_type is working on now.  */\n   char *ctf_tmp_typeslice;\t  /* Storage for slicing up type names.  */\n   size_t ctf_tmp_typeslicelen;\t  /* Size of the typeslice.  */"
    },
    {
      "sha": "886106cb478c38cb478b25a8b4a4a9964769b656",
      "filename": "libctf/ctf-link.c",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-link.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/ctf-link.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-link.c?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -528,6 +528,16 @@ ctf_link_one_type (ctf_id_t type, int isroot _libctf_unused_, void *arg_)\n   return 0;\t\t\t\t\t/* As above: do not lose types.  */\n }\n \n+/* Set a function which is used to filter out unwanted variables from the link.  */\n+int\n+ctf_link_set_variable_filter (ctf_file_t *fp, ctf_link_variable_filter_f *filter,\n+\t\t\t      void *arg)\n+{\n+  fp->ctf_link_variable_filter = filter;\n+  fp->ctf_link_variable_filter_arg = arg;\n+  return 0;\n+}\n+\n /* Check if we can safely add a variable with the given type to this container.  */\n \n static int\n@@ -564,6 +574,15 @@ ctf_link_one_variable (const char *name, ctf_id_t type, void *arg_)\n   ctf_file_t *check_fp;\n   ctf_dvdef_t *dvd;\n \n+  /* See if this variable is filtered out.  */\n+\n+  if (arg->out_fp->ctf_link_variable_filter)\n+    {\n+      void *farg = arg->out_fp->ctf_link_variable_filter_arg;\n+      if (arg->out_fp->ctf_link_variable_filter (arg->in_fp, name, type, farg))\n+\treturn 0;\n+    }\n+\n   /* In unconflicted link mode, if this type is mapped to a type in the parent\n      container, we want to try to add to that first: if it reports a duplicate,\n      or if the type is in a child already, add straight to the child.  */"
    },
    {
      "sha": "62f99771d9bc7451b19d350655af9caece17e217",
      "filename": "libctf/libctf.ver",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/libctf.ver",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6dd2819ffc282e644e7feb476cc803d4f39d9f17/libctf/libctf.ver",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/libctf.ver?ref=6dd2819ffc282e644e7feb476cc803d4f39d9f17",
      "patch": "@@ -159,6 +159,7 @@ LIBCTF_1.0 {\n \tctf_link_add_ctf;\n \tctf_link_add_cu_mapping;\n \tctf_link_set_memb_name_changer;\n+\tctf_link_set_variable_filter;\n \tctf_link;\n \tctf_link_add_strtab;\n \tctf_link_shuffle_syms;"
    }
  ]
}