{
  "sha": "c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdlNGMwYTY0ODJjZWJjZjhiMTI5ZDEwMDhhMmM1NTNhMDE4M2FlZQ==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-05-04T21:47:57Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-07-29T19:42:52Z"
    },
    "message": "Test 'set print frame-info|frame-arguments presence'.\n\nUpdated tests to test the new options and new values.\nTest the default for print_what in python frame filtering.\nUpdated the tests impacted by the default in python frame filtering\nwhich is now consistent with the backtrace command.\n\ngdb/testsuite/ChangeLog\n2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/options.exp: Update backtrace - completion to\n\tnew option -frame-info.\n\t* gdb.base/frame-args.exp: Test new 'frame-arguments presence'.\n\tTest new 'set print frame-info'.  Test backtrace -frame-info\n\toverriding 'set print frame-info'.\n\t* gdb.python/py-framefilter.exp: Test new 'frame-arguments presence'.\n\tTest new 'set print frame-info'.\n\tVerify consistency of backtrace with and without filters, with and\n\twithout -no-filters.\n\t* gdb.python/py-framefilter-invalidarg.exp: Update to new print_what\n\tdefault.",
    "tree": {
      "sha": "c14874c2f45b27236693134c5fa0390ea236ef06",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c14874c2f45b27236693134c5fa0390ea236ef06"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "4b5e8d19afe4accc3dd87aeba58d6704e71c610d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4b5e8d19afe4accc3dd87aeba58d6704e71c610d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4b5e8d19afe4accc3dd87aeba58d6704e71c610d"
    }
  ],
  "stats": {
    "total": 149,
    "additions": 144,
    "deletions": 5
  },
  "files": [
    {
      "sha": "f17638736a40961b364fb3da24daee1fd045f801",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
      "patch": "@@ -1,3 +1,17 @@\n+2019-07-29  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/options.exp: Update backtrace - completion to\n+\tnew option -frame-info.\n+\t* gdb.base/frame-args.exp: Test new 'frame-arguments presence'.\n+\tTest new 'set print frame-info'.  Test backtrace -frame-info\n+\toverriding 'set print frame-info'.\n+\t* gdb.python/py-framefilter.exp: Test new 'frame-arguments presence'.\n+\tTest new 'set print frame-info'.\n+\tVerify consistency of backtrace with and without filters, with and\n+\twithout -no-filters.\n+\t* gdb.python/py-framefilter-invalidarg.exp: Update to new print_what\n+\tdefault.\n+\n 2019-07-29  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.linespec/explicit.exp: Fix completion trigger for \"complete with"
    },
    {
      "sha": "71115a020ad91aa8786557e67ffb7198397154c2",
      "filename": "gdb/testsuite/gdb.base/frame-args.exp",
      "status": "modified",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.base/frame-args.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.base/frame-args.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/frame-args.exp?ref=c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
      "patch": "@@ -50,4 +50,64 @@ gdb_test \"frame 1\" \\\n          \".*in call_me \\\\(i=\\\\.\\\\.\\\\., f=\\\\.\\\\.\\\\., s=\\\\.\\\\.\\\\., ss=\\\\.\\\\.\\\\., u=\\\\.\\\\.\\\\., e=\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\" \\\n          \"frame 1 with print frame-arguments set to none\"\n \n+# Test with \"print frame-arguments\" set to \"presence\"\n \n+gdb_test_no_output \"set print frame-arguments presence\" \\\n+         \"set print frame-arguments presence\"\n+gdb_test \"frame 1\" \\\n+         \".*in call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\" \\\n+         \"frame 1 with print frame-arguments set to presence\"\n+gdb_test \"frame 2\" \\\n+         \".*in main \\\\(\\\\) at .*frame-args\\\\.c:.*\" \\\n+         \"frame 2 (no args) with print frame-arguments set to presence\"\n+\n+\n+# Test with \"print frame-info\" set to \"location-and-address\"\n+gdb_test_no_output \"set print frame-info location-and-address\" \\\n+    \"set print frame-info location-and-address\"\n+gdb_test \"frame 1\" \\\n+    \".*0x.* in call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\" \\\n+    \"frame 1 with print frame-info set to location-and-address\"\n+\n+# Test with \"print address\" set to \"off\" ...\n+gdb_test_no_output \"set print address off\" \\\n+    \"set print address off\"\n+\n+# ... and \"location-and-address\" (previously set)\n+gdb_test \"frame 1\" \\\n+    \"#1  call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\" \\\n+    \"frame 1 with print frame-info set to location-and-address and address off\"\n+\n+# ... and \"location\"\n+gdb_test_no_output \"set print frame-info location\" \\\n+    \"set print frame-info location\"\n+gdb_test \"frame 1\" \\\n+    \"#1  call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\" \\\n+    \"frame 1 with print frame-info set to location and address off\"\n+\n+# ... and \"short-location\"\n+gdb_test_no_output \"set print frame-info short-location\" \\\n+    \"set print frame-info short-location\"\n+gdb_test \"frame 1\" \\\n+    \"#1  call_me \\\\(\\\\.\\\\.\\\\.\\\\)\" \\\n+    \"frame 1 with print frame-info set to short-location and address off\"\n+\n+# ... and \"source-and-location\"\n+gdb_test_no_output \"set print frame-info source-and-location\" \\\n+    \"set print frame-info source-and-location\"\n+gdb_test \"frame 1\" \\\n+    \"#1  call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\\r\\n\\[1-9\\]\\[0-9\\]*\\[ \\t\\]*break_me \\\\(\\\\);\" \\\n+    \"frame 1 with print frame-info set to source-and-location and address off\"\n+\n+# ... and \"source-line\".\n+gdb_test_no_output \"set print frame-info source-line\" \\\n+    \"set print frame-info source-line\"\n+gdb_test \"frame 1\" \\\n+    \"\\[1-9\\]\\[0-9\\]*\\[ \\t\\]*break_me \\\\(\\\\);\" \\\n+    \"frame 1 with print frame-info set to source-line and address off\"\n+\n+\n+# Verify overriding of the global setting by the backtrace -frame-info option.\n+gdb_test \"backtrace -frame-info source-and-location 2\" \\\n+    \".*\\r\\n.*\\r\\n#1  call_me \\\\(\\\\.\\\\.\\\\.\\\\) at .*frame-args\\\\.c:.*\\r\\n\\[1-9\\]\\[0-9\\]*\\[ \\t\\]*break_me \\\\(\\\\);.*\" \\\n+    \"backtrace -frame-info source-and-location 2 overriding print frame-info set to source-line\""
    },
    {
      "sha": "7a18fe936b2d47d5f61474d38dd100ef0cf48611",
      "filename": "gdb/testsuite/gdb.base/options.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.base/options.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.base/options.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/options.exp?ref=c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
      "patch": "@@ -268,6 +268,7 @@ proc_with_prefix test-backtrace {} {\n     test_gdb_complete_multiple \"backtrace \" \"-\" \"\" {\n \t\"-entry-values\"\n \t\"-frame-arguments\"\n+\t\"-frame-info\"\n \t\"-full\"\n \t\"-hide\"\n \t\"-no-filters\""
    },
    {
      "sha": "2213bcffb2def84ab8d45e406adf59715c287e19",
      "filename": "gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-framefilter-invalidarg.exp?ref=c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
      "patch": "@@ -63,4 +63,4 @@ set remote_python_file [gdb_remote_download host \\\n \t\t\t    ${srcdir}/${subdir}/${testfile}.py]\n gdb_test_no_output \"source ${remote_python_file}\" \"load python file\"\n \n-gdb_test \"bt\" \" in niam \\\\(argc=<error reading variable: dwarf expression stack underflow>, argv=0x\\[0-9a-f\\]+\\\\) at py-framefilter-invalidarg.c:\\[0-9\\]+\" \"bt full with filters\"\n+gdb_test \"bt\" \"niam \\\\(argc=<error reading variable: dwarf expression stack underflow>, argv=0x\\[0-9a-f\\]+\\\\) at py-framefilter-invalidarg.c:\\[0-9\\]+\" \"bt full with filters\""
    },
    {
      "sha": "e3aed24c169e924945f808220bd1d217142a93fb",
      "filename": "gdb/testsuite/gdb.python/py-framefilter.exp",
      "status": "modified",
      "additions": 68,
      "deletions": 4,
      "changes": 72,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.python/py-framefilter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7e4c0a6482cebcf8b129d1008a2c553a0183aee/gdb/testsuite/gdb.python/py-framefilter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-framefilter.exp?ref=c7e4c0a6482cebcf8b129d1008a2c553a0183aee",
      "patch": "@@ -60,11 +60,26 @@ if ![runto_main] then {\n gdb_test_no_output \"set python print-stack full\" \\\n     \"set python print-stack to full\"\n \n+# Verify that 'bt', 'bt -no-filters' print the same info\n+# when there are no filters, no matching filters, or matching filters.\n+# In particular, no address should be printed, as the default for\n+# backtrace -frame-info is 'location', and the breakpoint we just hit\n+# is at the beginning of a line.\n+# Same tests done again after having loaded the filters.\n+gdb_test \"bt 1\" \"#0  main .*\" \"bt 1, no filter loaded\"\n+gdb_test \"bt -no-filters 1\" \"#0  main .*\" \"bt -no-filters 1, no filter loaded\"\n+\n+\n # Load global frame-filters\n set remote_python_file [gdb_remote_download host \\\n \t\t\t    ${srcdir}/${subdir}/${testfile}.py]\n gdb_test_no_output \"source ${remote_python_file}\" \"load python file\"\n \n+# Re-verify the frame-info printed once filters are loaded.\n+# For the first check, the Reverse filter is matching.\n+gdb_test \"bt 1\" \"#0  niam .*\" \"bt 1, filters loaded\"\n+gdb_test \"bt -no-filters 1\" \"#0  main .*\" \"bt -no-filters 1, filters loaded\"\n+\n gdb_breakpoint [gdb_get_line_number \"Backtrace end breakpoint\"]\n gdb_breakpoint [gdb_get_line_number \"Inner test breakpoint\"]\n gdb_continue_to_breakpoint \"Inner test breakpoint\"\n@@ -161,6 +176,10 @@ gdb_test \"bt full hide\" \\\n     \".*#0.*end_func.*str = $hex \\\"The End\\\".*st2 = $hex \\\"Is Near\\\".*b = 12.*c = 5.*#1.*in funca \\\\(\\\\).*#2.*in funcb \\\\(j=10\\\\).*bar = \\{a = 42, b = 84\\}.*#22.*in func1 \\\\(\\\\)\\[^#\\]*#24.*in func3 \\\\(i=3\\\\).*\" \\\n     \"bt full hide with Reverse disabled\"\n \n+# Re-enable Reverse\n+gdb_test_no_output \"enable frame-filter global Reverse\" \\\n+    \"re-enable frame-filter global Reverse\"\n+\n # Test set print frame-arguments\n # none\n gdb_test_no_output \"set print frame-arguments none\" \\\n@@ -169,7 +188,7 @@ gdb_test \"bt no-filter 1\" \\\n     \"#0.*end_func \\\\(foo=\\.\\.\\., bar=\\.\\.\\., fb=\\.\\.\\., bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n     \"bt no-filter 1 no args\"\n gdb_test \"bt 1\" \\\n-    \"#0.*end_func \\\\(foo=\\.\\.\\., bar=\\.\\.\\., fb=\\.\\.\\., bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n+    \"#0.*cnuf_dneThe End \\\\(foo=\\.\\.\\., bar=\\.\\.\\., fb=\\.\\.\\., bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n     \"bt 1 no args\"\n \n # scalars\n@@ -179,17 +198,62 @@ gdb_test \"bt no-filter 1\" \\\n     \"#0.*end_func \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n     \"bt no-filter 1 scalars\"\n gdb_test \"bt 1\" \\\n-    \"#0.*end_func \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n+    \"#0.*cnuf_dneThe End \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n     \"bt 1 scalars\"\n \n+# presence\n+gdb_test_no_output \"set print frame-arguments presence\" \\\n+    \"turn frame arguments to presence only\"\n+gdb_test \"bt no-filter 1\" \\\n+    \"#0.*end_func \\\\(\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n+    \"bt no-filter 1 presence\"\n+gdb_test \"bt 1\" \\\n+    \"#0.*cnuf_dneThe End \\\\(\\.\\.\\.\\\\) at .*py-framefilter.c.*\" \\\n+    \"bt 1 presence\"\n+\n+# Test set print frame-info, with only presence for args.\n+# short-location\n+gdb_test_no_output \"set print frame-info short-location\" \\\n+    \"frame-info short-location\"\n+gdb_test \"bt no-filter 1\" \\\n+     \"#0.*end_func \\\\(\\.\\.\\.\\\\)\\r\\n.*\" \\\n+    \"bt no-filter 1 short-location\"\n+gdb_test \"bt 1\" \\\n+    \"#0.*cnuf_dneThe End \\\\(\\.\\.\\.\\\\)\\r\\n.*\" \\\n+    \"bt 1 short-location\"\n+\n+# source-and-location\n+gdb_test_no_output \"set print frame-info source-and-location\" \\\n+    \"frame-info source-and-location\"\n+gdb_test \"bt no-filter 1\" \\\n+    \"#0.*end_func \\\\(\\.\\.\\.\\\\) at .*py-framefilter.c.*\\r\\n.*\\[1-9\\]\\[0-9\\]*.*\" \\\n+    \"bt no-filter 1 source-and-location\"\n+gdb_test \"bt 1\" \\\n+    \"#0.*cnuf_dneThe End \\\\(\\.\\.\\.\\\\) at .*py-framefilter.c.*\\r\\n.*\\[1-9\\]\\[0-9\\]*.*\" \\\n+    \"bt 1 source-and-location\"\n+\n+# source-line\n+gdb_test_no_output \"set print frame-info source-line\" \\\n+    \"frame-info source-line\"\n+gdb_test \"bt no-filter 1\" \\\n+    \"\\[1-9\\]\\[0-9\\]*\\[ \\t\\]*return; /\\\\* Backtrace end breakpoint \\\\*/.*\" \\\n+    \"bt no-filter 1 source-line\"\n+gdb_test \"bt 1\" \\\n+    \"\\[1-9\\]\\[0-9\\]*\\[ \\t\\]*return; /\\\\* Backtrace end breakpoint \\\\*/.*\" \\\n+    \"bt 1 source-line\"\n+\n+# set print frame-info back to auto.\n+gdb_test_no_output \"set print frame-info auto\" \\\n+    \"frame-info auto\"\n+\n # all\n gdb_test_no_output \"set print frame-arguments all\" \\\n     \"turn on frame arguments\"\n gdb_test \"bt no-filter 1\" \\\n     \"#0.*end_func \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\{nothing = $hex \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n     \"bt no-filter 1 all args\"\n gdb_test \"bt 1\" \\\n-    \"#0.*end_func \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\{nothing = $hex \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n+    \"#0.*cnuf_dneThe End \\\\(foo=21, bar=$hex \\\"Param\\\", fb=$hex, bf=\\{nothing = $hex \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n     \"bt 1 all args\"\n \n # set print address off\n@@ -199,7 +263,7 @@ gdb_test \"bt no-filter 1\" \\\n     \"#0  end_func \\\\(foo=21, bar=\\\"Param\\\", fb=, bf=\\{nothing = \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n     \"bt no-filter 1 no address\"\n gdb_test \"bt 1\" \\\n-    \"#0  end_func \\\\(foo=21, bar=\\\"Param\\\", fb=, bf=\\{nothing = \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n+    \"#0  cnuf_dneThe End \\\\(foo=21, bar=\\\"Param\\\", fb=, bf=\\{nothing = \\\"Foo Bar\\\", f = 42, s = 19\\}\\\\) at .*py-framefilter.c.*\" \\\n     \"bt 1 no addresss\"\n \n gdb_test_no_output \"set python print-stack message\" \\"
    }
  ]
}