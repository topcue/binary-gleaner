{
  "sha": "42e165c30c2f0602a73d301bd62a49a2290360c4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDJlMTY1YzMwYzJmMDYwMmE3M2QzMDFiZDYyYTQ5YTIyOTAzNjBjNA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-29T20:34:54Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-29T20:34:54Z"
    },
    "message": "gdb: fix duplicate test names in gdb.base/break.exp\n\nThese test names are duplicated:\n\n      2 PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed\n      2 PASS: gdb.base/break.exp: set convenience variable $foo to 81.5\n\nWrap them with `with_test_prefix`. I've actually wrapped a bit more\ntests that are related, I think it helps to give the test names a bit\nmore context.  The modified test names are:\n\n    -PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11\n    -PASS: gdb.base/break.exp: set breakpoint via convenience variable\n    -PASS: gdb.base/break.exp: set convenience variable $foo to 81.5\n    -PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed\n    +PASS: gdb.base/break.exp: set line breakpoint via convenience variable: set convenience variable $foo to bp_location11\n    +PASS: gdb.base/break.exp: set line breakpoint via convenience variable: break $foo\n    +PASS: gdb.base/break.exp: set line breakpoint via convenience variable: set convenience variable $foo to 81.5\n    +PASS: gdb.base/break.exp: set line breakpoint via convenience variable: non-integer convenience variable disallowed\n\n    -PASS: gdb.base/break.exp: set $l = 47\n    -PASS: gdb.base/break.exp: break break.c:$l\n    -PASS: gdb.base/break.exp: set convenience variable $foo to 81.5\n    -PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed\n    +PASS: gdb.base/break.exp: set line:file breakpoint via convenience variable: set $l = 47\n    +PASS: gdb.base/break.exp: set line:file breakpoint via convenience variable: break break.c:$l\n    +PASS: gdb.base/break.exp: set line:file breakpoint via convenience variable: set convenience variable $foo to 81.5\n    +PASS: gdb.base/break.exp: set line:file breakpoint via convenience variable: non-integer convenience variable disallowed\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/break.exp: Use with_test_prefix.",
    "tree": {
      "sha": "fe2abeb8593da0dcc3c16cca933a232f170ef651",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fe2abeb8593da0dcc3c16cca933a232f170ef651"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/42e165c30c2f0602a73d301bd62a49a2290360c4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/42e165c30c2f0602a73d301bd62a49a2290360c4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/42e165c30c2f0602a73d301bd62a49a2290360c4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/42e165c30c2f0602a73d301bd62a49a2290360c4/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ed6aceddf5b2c31cda8f74982e8dd0574b3979b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ed6aceddf5b2c31cda8f74982e8dd0574b3979b8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ed6aceddf5b2c31cda8f74982e8dd0574b3979b8"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 43,
    "deletions": 34
  },
  "files": [
    {
      "sha": "f1efecb5f5ea95741ae27db217a53bb3653cac47",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42e165c30c2f0602a73d301bd62a49a2290360c4/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42e165c30c2f0602a73d301bd62a49a2290360c4/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=42e165c30c2f0602a73d301bd62a49a2290360c4",
      "patch": "@@ -1,3 +1,7 @@\n+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdb.base/break.exp: Use with_test_prefix.\n+\n 2020-04-29  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (debug_types): New proc."
    },
    {
      "sha": "d2121c3d635ec326ae2593b4f181ba73ba51b32b",
      "filename": "gdb/testsuite/gdb.base/break.exp",
      "status": "modified",
      "additions": 39,
      "deletions": 34,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/42e165c30c2f0602a73d301bd62a49a2290360c4/gdb/testsuite/gdb.base/break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/42e165c30c2f0602a73d301bd62a49a2290360c4/gdb/testsuite/gdb.base/break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/break.exp?ref=42e165c30c2f0602a73d301bd62a49a2290360c4",
      "patch": "@@ -583,22 +583,25 @@ gdb_test \"clear marker3\" {Deleted breakpoints [0-9]+ [0-9]+.*}\n \n # Verify that a breakpoint can be set via a convenience variable.\n #\n-gdb_test_no_output \"set \\$foo=$bp_location11\" \\\n-    \"set convenience variable \\$foo to bp_location11\"\n \n-gdb_test \"break \\$foo\" \\\n-    \"Breakpoint (\\[0-9\\]*) at .*, line $bp_location11.*\" \\\n-    \"set breakpoint via convenience variable\"\n+with_test_prefix \"set line breakpoint via convenience variable\" {\n+    gdb_test_no_output \"set \\$foo=$bp_location11\" \\\n+\t\"set convenience variable \\$foo to bp_location11\"\n \n-# Verify that GDB responds gracefully to an attempt to set a\n-# breakpoint via a convenience variable whose type is not integer.\n-#\n-gdb_test_no_output \"set \\$foo=81.5\" \\\n-    \"set convenience variable \\$foo to 81.5\"\n+    gdb_test \"break \\$foo\" \\\n+\t\"Breakpoint (\\[0-9\\]*) at .*, line $bp_location11.*\"\n+\n+    # Verify that GDB responds gracefully to an attempt to set a\n+    # breakpoint via a convenience variable whose type is not integer.\n+    #\n \n-gdb_test \"break \\$foo\" \\\n-    \"Convenience variables used in line specs must have integer values.*\" \\\n-    \"set breakpoint via non-integer convenience variable disallowed\"\n+    gdb_test_no_output \"set \\$foo=81.5\" \\\n+\t\"set convenience variable \\$foo to 81.5\"\n+\n+    gdb_test \"break \\$foo\" \\\n+\t\"Convenience variables used in line specs must have integer values.*\" \\\n+\t\"non-integer convenience variable disallowed\"\n+}\n \n # Verify that we can set and trigger a breakpoint in a user-called function.\n #\n@@ -845,29 +848,31 @@ gdb_test_multiple \"\" $test {\n #\n # Test break via convenience variable with file name\n #\n-set line [gdb_get_line_number \"set breakpoint 1 here\"]\n-gdb_test_no_output \"set \\$l = $line\"\n-\n-set line_actual \"-1\"\n-set test \"break ${srcfile}:\\$l\"\n-gdb_test_multiple \"$test\" $test {\n-    -re \"Breakpoint $decimal at $hex: file .*break\\\\.c, line ($decimal)\\\\.\\r\\n$gdb_prompt $\" {\n-        # Save the actual line number on which the breakpoint was\n-        # actually set. On some systems (Eg: Ubuntu 16.04 with GCC\n-        # version 5.4.0), that line gets completely inlined, including\n-        # the call to printf, and so we end up inserting the breakpoint\n-        # on one of the following lines instead.\n-        set line_actual $expect_out(1,string)\n-        pass $test\n-    }\n-}\n \n-gdb_test_no_output \"set \\$foo=81.5\" \\\n-    \"set convenience variable \\$foo to 81.5\"\n-gdb_test \"break $srcfile:\\$foo\" \\\n-    \"Convenience variables used in line specs must have integer values.*\" \\\n-    \"set breakpoint via non-integer convenience variable disallowed\"\n+with_test_prefix \"set line:file breakpoint via convenience variable\" {\n+    set line [gdb_get_line_number \"set breakpoint 1 here\"]\n+    gdb_test_no_output \"set \\$l = $line\"\n+\n+    set line_actual \"-1\"\n+    set test \"break ${srcfile}:\\$l\"\n+    gdb_test_multiple \"$test\" $test {\n+\t-re \"Breakpoint $decimal at $hex: file .*break\\\\.c, line ($decimal)\\\\.\\r\\n$gdb_prompt $\" {\n+\t    # Save the actual line number on which the breakpoint was\n+\t    # actually set. On some systems (Eg: Ubuntu 16.04 with GCC\n+\t    # version 5.4.0), that line gets completely inlined, including\n+\t    # the call to printf, and so we end up inserting the breakpoint\n+\t    # on one of the following lines instead.\n+\t    set line_actual $expect_out(1,string)\n+\t    pass $test\n+\t}\n+    }\n \n+    gdb_test_no_output \"set \\$foo=81.5\" \\\n+\t\"set convenience variable \\$foo to 81.5\"\n+    gdb_test \"break $srcfile:\\$foo\" \\\n+\t\"Convenience variables used in line specs must have integer values.*\" \\\n+\t\"non-integer convenience variable disallowed\"\n+}\n \n #\n # Test that commands can be cleared without error."
    }
  ]
}