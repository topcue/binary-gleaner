{
  "sha": "2a0fa84217cc3ec874f2f924510c7543358bca9c",
  "node_id": "C_kwDOANOeidoAKDJhMGZhODQyMTdjYzNlYzg3NGYyZjkyNDUxMGM3NTQzMzU4YmNhOWM",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-29T08:51:10Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-29T08:51:10Z"
    },
    "message": "[gdb/testsuite] Use unique files in gdb.dwarf2/dw2-lines.exp\n\nWhile debugging a problem in gdb.dwarf2/dw2-lines.exp, I realized that the\ntest-case generates all executables and associated temporary files using the\nsame filenames.\n\nFix this by adding a new proc prefix_id in lib/gdb.exp, and using it in the\ntest-case.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "21a62e3174dfa532b8f70b1deb130edba6e5f33a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/21a62e3174dfa532b8f70b1deb130edba6e5f33a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2a0fa84217cc3ec874f2f924510c7543358bca9c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a0fa84217cc3ec874f2f924510c7543358bca9c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2a0fa84217cc3ec874f2f924510c7543358bca9c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a0fa84217cc3ec874f2f924510c7543358bca9c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "97b3f4e86f7a25e0767487d72cb3977fd653b5bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/97b3f4e86f7a25e0767487d72cb3977fd653b5bc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/97b3f4e86f7a25e0767487d72cb3977fd653b5bc"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 30,
    "deletions": 2
  },
  "files": [
    {
      "sha": "09b6052764013c5b149c0b6b2dc94cd5210c4f5b",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a0fa84217cc3ec874f2f924510c7543358bca9c/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a0fa84217cc3ec874f2f924510c7543358bca9c/gdb/testsuite/gdb.dwarf2/dw2-lines.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-lines.exp?ref=2a0fa84217cc3ec874f2f924510c7543358bca9c",
      "patch": "@@ -20,7 +20,7 @@ load_lib dwarf.exp\n # This test can only be run on targets which support DWARF-2 and use gas.\n require dwarf2_support 1\n \n-standard_testfile .c -dw.S\n+standard_testfile .c\n \n with_shared_gdb {\n     set func_info_vars \\\n@@ -46,6 +46,8 @@ proc test_1 { _cv _cdw64 _lv _ldw64 {_string_form \"\"}} {\n     set ldw64 $_ldw64\n     set string_form $_string_form\n \n+    standard_testfile .c [prefix_id]-dw.S\n+\n     set asm_file [standard_output_file $srcfile2]\n     Dwarf::assemble $asm_file {\n \tdeclare_labels Llines\n@@ -103,7 +105,7 @@ proc test_1 { _cv _cdw64 _lv _ldw64 {_string_form \"\"}} {\n \t}\n     }\n \n-    if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile}.[prefix_id] \\\n \t      [list $srcfile $asm_file] {nodebug}] } {\n \treturn -1\n     }"
    },
    {
      "sha": "b145fe8e2e83fd2434f174dd8ca367a60eb8f898",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a0fa84217cc3ec874f2f924510c7543358bca9c/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a0fa84217cc3ec874f2f924510c7543358bca9c/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=2a0fa84217cc3ec874f2f924510c7543358bca9c",
      "patch": "@@ -2498,6 +2498,32 @@ proc proc_with_prefix {name arguments body} {\n     proc $name $arguments [list with_test_prefix $name $body]\n }\n \n+# Return an id corresponding to the test prefix stored in $pf_prefix, which\n+# is more suitable for use in a file name.\n+# F.i., for a pf_prefix:\n+#   gdb.dwarf2/dw2-lines.exp: \\\n+#     cv=5: cdw=64: lv=5: ldw=64: string_form=line_strp:\n+# return an id:\n+#   cv-5-cdw-32-lv-5-ldw-64-string_form-line_strp\n+\n+proc prefix_id {} {\n+    global pf_prefix\n+    set id $pf_prefix\n+\n+    # Strip \".exp: \" prefix.\n+    set id [regsub  {.*\\.exp: } $id {}]\n+\n+    # Strip colon suffix.\n+    set id [regsub  {:$} $id {}]\n+\n+    # Strip spaces.\n+    set id [regsub -all { } $id {}]\n+\n+    # Replace colons, equal signs.\n+    set id [regsub -all \\[:=\\] $id -]\n+\n+    return $id\n+}\n \n # Run BODY in the context of the caller.  After BODY is run, the variables\n # listed in VARS will be reset to the values they had before BODY was run."
    }
  ]
}