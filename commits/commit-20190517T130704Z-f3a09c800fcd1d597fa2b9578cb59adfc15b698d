{
  "sha": "f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjNhMDljODAwZmNkMWQ1OTdmYTJiOTU3OGNiNTlhZGZjMTViNjk4ZA==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T13:07:04Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T13:07:04Z"
    },
    "message": "Change file close behavior for tee_file\n\nInstead of using two bools to decide if the files should close when tee_file\nis closed, make file one stay open and file two close.  This simplifies the\nuse cases for it.\n\nInline the make_logging_output into the calling functions (the logic here\nlooks ugly in order to simplify a later change).\n\nExpand ui-redirect.exp to cover the changes, similar to mi-logging.exp.\n\ngdb/ChangeLog:\n\n\t* cli/cli-interp.c (cli_interp_base::set_logging): Create tee_file\n\tdirectly.\n\t* cli/cli-interp.h (make_logging_output): Remove declaration.\n\t* cli/cli-logging.c (make_logging_output): Remove function.\n\t* mi/mi-interp.c (mi_interp::set_logging): Create tee_file\n\tdirectly.\n\t* ui-file.c (tee_file::tee_file): Remove bools.\n\t(tee_file::~tee_file): Remove deletes.\n\t* ui-file.h (tee_file): Remove bools.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/ui-redirect.exp: Test redirection.",
    "tree": {
      "sha": "0cfd6d8b1c65fb029a59d706d47aee2f92c990c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0cfd6d8b1c65fb029a59d706d47aee2f92c990c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af4fa23fba220c1b26bb3c8a7996b406dcc181cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af4fa23fba220c1b26bb3c8a7996b406dcc181cc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af4fa23fba220c1b26bb3c8a7996b406dcc181cc"
    }
  ],
  "stats": {
    "total": 161,
    "additions": 86,
    "deletions": 75
  },
  "files": [
    {
      "sha": "2810fff012a84d2caff20363a9877d5d3f0866bf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -1,3 +1,16 @@\n+2019-05-14  Alan Hayward  <alan.hayward@arm.com>\n+\t    Tom Tromey  <tromey@adacore.com>\n+\n+\t* cli/cli-interp.c (cli_interp_base::set_logging): Create tee_file\n+\tdirectly.\n+\t* cli/cli-interp.h (make_logging_output): Remove declaration.\n+\t* cli/cli-logging.c (make_logging_output): Remove function.\n+\t* mi/mi-interp.c (mi_interp::set_logging): Create tee_file\n+\tdirectly.\n+\t* ui-file.c (tee_file::tee_file): Remove bools.\n+\t(tee_file::~tee_file): Remove deletes.\n+\t* ui-file.h (tee_file): Remove bools.\n+\n 2019-01-28  Jan Vrany  <jan.vrany@fit.cvut.cz>\n \n \t* mi/mi-cmds.h (mi_cmd_complete): New function."
    },
    {
      "sha": "7876f910806f005738401d3c1b5820dffa0b5360",
      "filename": "gdb/cli/cli-interp.c",
      "status": "modified",
      "additions": 22,
      "deletions": 16,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-interp.c?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -403,24 +403,30 @@ static saved_output_files saved_output;\n void\n cli_interp_base::set_logging (ui_file_up logfile, bool logging_redirect)\n {\n-  if (logfile != NULL)\n+  if (logfile != nullptr)\n     {\n       saved_output.out = gdb_stdout;\n       saved_output.err = gdb_stderr;\n       saved_output.log = gdb_stdlog;\n       saved_output.targ = gdb_stdtarg;\n       saved_output.targerr = gdb_stdtargerr;\n \n-      /* A raw pointer since ownership is transferred to\n-\t gdb_stdout.  */\n-      ui_file *output = make_logging_output (gdb_stdout,\n-\t\t\t\t\t     std::move (logfile),\n-\t\t\t\t\t     logging_redirect);\n-      gdb_stdout = output;\n-      gdb_stdlog = output;\n-      gdb_stderr = output;\n-      gdb_stdtarg = output;\n-      gdb_stdtargerr = output;\n+      /* If logging is being redirected, then grab logfile.  */\n+      ui_file *logfile_p = nullptr;\n+      if (logging_redirect)\n+\tlogfile_p = logfile.release ();\n+\n+      /* If logging is not being redirected, then a tee containing both the\n+\t logfile and stdout.  */\n+      ui_file *tee = nullptr;\n+      if (!logging_redirect)\n+\ttee = new tee_file (gdb_stdout, std::move (logfile));\n+\n+      gdb_stdout = logging_redirect ? logfile_p : tee;\n+      gdb_stdlog = logging_redirect ? logfile_p : tee;\n+      gdb_stderr = logging_redirect ? logfile_p : tee;\n+      gdb_stdtarg = logging_redirect ? logfile_p : tee;\n+      gdb_stdtargerr = logging_redirect ? logfile_p : tee;\n     }\n   else\n     {\n@@ -434,11 +440,11 @@ cli_interp_base::set_logging (ui_file_up logfile, bool logging_redirect)\n       gdb_stdtarg = saved_output.targ;\n       gdb_stdtargerr = saved_output.targerr;\n \n-      saved_output.out = NULL;\n-      saved_output.err = NULL;\n-      saved_output.log = NULL;\n-      saved_output.targ = NULL;\n-      saved_output.targerr = NULL;\n+      saved_output.out = nullptr;\n+      saved_output.err = nullptr;\n+      saved_output.log = nullptr;\n+      saved_output.targ = nullptr;\n+      saved_output.targerr = nullptr;\n     }\n }\n "
    },
    {
      "sha": "0c2e73b6b38e679abf88b06501e1fbfa2e37d4ae",
      "filename": "gdb/cli/cli-interp.h",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-interp.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-interp.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-interp.h?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -33,19 +33,6 @@ class cli_interp_base : public interp\n   bool supports_command_editing () override;\n };\n \n-/* Make the output ui_file to use when logging is enabled.\n-   CURR_OUTPUT is the stream where output is currently being sent to\n-   (e.g., gdb_stdout for the CLI, raw output stream for the MI).\n-   LOGFILE is the log file already opened by the caller.\n-   LOGGING_REDIRECT is the value of the \"set logging redirect\"\n-   setting.  If true, the resulting output is the logfile.  If false,\n-   the output stream is a tee, with the log file as one of the\n-   outputs.  Ownership of LOGFILE is transferred to the returned\n-   output file, which is an owning pointer.  */\n-extern ui_file *make_logging_output (ui_file *curr_output,\n-\t\t\t\t     ui_file_up logfile,\n-\t\t\t\t     bool logging_redirect);\n-\n /* The CLI interpreter's set_logging_proc method.  Exported so other\n    interpreters can reuse it.  */\n extern void cli_set_logging (struct interp *interp,"
    },
    {
      "sha": "670e7e2490870d16b1019cfa16734e65d5c6ecc8",
      "filename": "gdb/cli/cli-logging.c",
      "status": "modified",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-logging.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/cli/cli-logging.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-logging.c?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -88,24 +88,6 @@ pop_output_files (void)\n     current_uiout->redirect (NULL);\n }\n \n-/* See cli-interp.h.  */\n-\n-ui_file *\n-make_logging_output (ui_file *curr_output, ui_file_up logfile,\n-\t\t     bool logging_redirect)\n-{\n-  if (logging_redirect)\n-    return logfile.release ();\n-  else\n-    {\n-      /* Note that the \"tee\" takes ownership of the log file.  */\n-      ui_file *out = new tee_file (curr_output, false,\n-\t\t\t\t   logfile.get (), true);\n-      logfile.release ();\n-      return out;\n-    }\n-}\n-\n /* This is a helper for the `set logging' command.  */\n static void\n handle_redirections (int from_tty)"
    },
    {
      "sha": "6a19bf02476d56a2c2e29da5cf57ddf34b577bd4",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -1286,18 +1286,27 @@ mi_interp::set_logging (ui_file_up logfile, bool logging_redirect)\n   if (logfile != NULL)\n     {\n       mi->saved_raw_stdout = mi->raw_stdout;\n-      mi->raw_stdout = make_logging_output (mi->raw_stdout,\n-\t\t\t\t\t    std::move (logfile),\n-\t\t\t\t\t    logging_redirect);\n \n+      /* If something is being redirected, then grab logfile.  */\n+      ui_file *logfile_p = nullptr;\n+      if (logging_redirect)\n+\tlogfile_p = logfile.release ();\n+\n+      /* If something is not being redirected, then a tee containing both the\n+\t logfile and stdout.  */\n+      ui_file *tee = nullptr;\n+      if (!logging_redirect)\n+\ttee = new tee_file (mi->raw_stdout, std::move (logfile));\n+\n+      mi->raw_stdout = logging_redirect ? logfile_p : tee;\n     }\n   else\n     {\n       delete mi->raw_stdout;\n       mi->raw_stdout = mi->saved_raw_stdout;\n-      mi->saved_raw_stdout = NULL;\n+      mi->saved_raw_stdout = nullptr;\n     }\n-  \n+\n   mi->out->set_raw (mi->raw_stdout);\n   mi->err->set_raw (mi->raw_stdout);\n   mi->log->set_raw (mi->raw_stdout);"
    },
    {
      "sha": "6d35156499832061b4640a7c6bbee523fa81df32",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -1,3 +1,7 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gdb.base/ui-redirect.exp: Test redirection.\n+\n 2019-01-28  Jan Vrany  <jan.vrany@fit.cvut.cz>\n \n \t* gdb.mi/mi-complete.exp: New file."
    },
    {
      "sha": "f1d00b939dad5aeab20b0f2df7eeae45e8c3bcb1",
      "filename": "gdb/testsuite/gdb.base/ui-redirect.exp",
      "status": "modified",
      "additions": 25,
      "deletions": 5,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/testsuite/gdb.base/ui-redirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/testsuite/gdb.base/ui-redirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ui-redirect.exp?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -34,8 +34,28 @@ gdb_test_multiple $test $test {\n }\n gdb_test_no_output \"end\"\n \n-gdb_test_no_output \"set logging file /dev/null\"\n-gdb_test \"set logging on\" \"Copying output to /dev/null\\\\.\"\n-gdb_test \"save breakpoints /dev/null\" \"Saved to file '/dev/null'\\\\.\"\n-gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n-gdb_test \"help\" \"List of classes of commands:.*\"\n+with_test_prefix \"logging\" {\n+    gdb_test_no_output \"set logging file /dev/null\"\n+    gdb_test \"set logging on\" \"Copying output to /dev/null\\\\.\"\n+    gdb_test \"save breakpoints /dev/null\" \"Saved to file '/dev/null'\\\\.\"\n+    gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n+    gdb_test \"help\" \"List of classes of commands:.*\"\n+}\n+\n+with_test_prefix \"redirect\" {\n+    gdb_test \"set logging redirect on\"\n+    gdb_test \"set logging on\" \"Redirecting output to /dev/null\\\\.\"\n+    gdb_test_no_output \"save breakpoints /dev/null\"\n+    gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n+    gdb_test \"help\" \"List of classes of commands:.*\"\n+}\n+\n+with_test_prefix \"redirect while already logging\" {\n+    gdb_test_no_output \"set logging redirect off\"\n+    gdb_test \"set logging on\" \"Copying output to /dev/null\\\\.\"\n+    gdb_test \"set logging redirect on\" \\\n+    \".*warning: Currently logging .*Turn the logging off and on to make the new setting effective.*\"\n+    gdb_test \"save breakpoints /dev/null\" \"Saved to file '/dev/null'\\\\.\"\n+    gdb_test \"set logging off\" \"Done logging to /dev/null\\\\.\"\n+    gdb_test \"help\" \"List of classes of commands:.*\"\n+}"
    },
    {
      "sha": "24c914f442a5ee0d01ed452428893c9f31068dde",
      "filename": "gdb/ui-file.c",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ui-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ui-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.c?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -336,20 +336,13 @@ stderr_file::stderr_file (FILE *stream)\n \n \f\n \n-tee_file::tee_file (ui_file *one, bool close_one,\n-\t\t    ui_file *two, bool close_two)\n+tee_file::tee_file (ui_file *one, ui_file_up &&two)\n   : m_one (one),\n-    m_two (two),\n-    m_close_one (close_one),\n-    m_close_two (close_two)\n+    m_two (std::move (two))\n {}\n \n tee_file::~tee_file ()\n {\n-  if (m_close_one)\n-    delete m_one;\n-  if (m_close_two)\n-    delete m_two;\n }\n \n void"
    },
    {
      "sha": "39f56d5ea4218feac5c4db74dc319210cdfc35a2",
      "filename": "gdb/ui-file.h",
      "status": "modified",
      "additions": 6,
      "deletions": 9,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ui-file.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f3a09c800fcd1d597fa2b9578cb59adfc15b698d/gdb/ui-file.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ui-file.h?ref=f3a09c800fcd1d597fa2b9578cb59adfc15b698d",
      "patch": "@@ -267,11 +267,9 @@ class stderr_file : public stdio_file\n class tee_file : public ui_file\n {\n public:\n-  /* Create a file which writes to both ONE and TWO.  CLOSE_ONE and\n-     CLOSE_TWO indicate whether the original files should be closed\n-     when the new file is closed.  */\n-  tee_file (ui_file *one, bool close_one,\n-\t    ui_file *two, bool close_two);\n+  /* Create a file which writes to both ONE and TWO.  ONE will remain\n+     open when this object is destroyed; but TWO will be closed.  */\n+  tee_file (ui_file *one, ui_file_up &&two);\n   ~tee_file () override;\n \n   void write (const char *buf, long length_buf) override;\n@@ -284,10 +282,9 @@ class tee_file : public ui_file\n   void flush () override;\n \n private:\n-  /* The two underlying ui_files, and whether they should each be\n-     closed on destruction.  */\n-  ui_file *m_one, *m_two;\n-  bool m_close_one, m_close_two;\n+  /* The two underlying ui_files.  */\n+  ui_file *m_one;\n+  ui_file_up m_two;\n };\n \n #endif"
    }
  ]
}