{
  "sha": "f411722cbc18820e5266ec4c2aadd2269eb15447",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjQxMTcyMmNiYzE4ODIwZTUyNjZlYzRjMmFhZGQyMjY5ZWIxNTQ0Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-05T16:53:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-06-14T14:06:16Z"
    },
    "message": "Allow re-assigning to convenience variables\n\nIn Ada mode, re-assigning an array of a different size to a\nconvenience variable will cause an error:\n\n    (gdb) set lang ada\n    (gdb) set $v := \"abc\"\n    (gdb) set $v := \"abcd\"\n    cannot assign arrays of different length\n\nHowever, this does not really make sense -- instead, it should always\nbe possible to overwrite a convenience variable.\n\nThis patch fixes this bug.\n\nThis was reviewed off-list by Joel.  I'm checking it in.\n\ngdb/ChangeLog\n2019-06-14  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_evaluate_subexp) <case BINOP_ASSIGN>: Always\n\tallow assignment to an internalvar.\n\ngdb/testsuite/ChangeLog\n2019-06-14  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/set_wstr.exp: Add reassignment test.",
    "tree": {
      "sha": "f2f086f981ffc616887b54bb41098d7f7c88adcb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2f086f981ffc616887b54bb41098d7f7c88adcb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f411722cbc18820e5266ec4c2aadd2269eb15447",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f411722cbc18820e5266ec4c2aadd2269eb15447",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f411722cbc18820e5266ec4c2aadd2269eb15447",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f411722cbc18820e5266ec4c2aadd2269eb15447/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4268ec187d401b9b132afa1a13c73e0026a53c5d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4268ec187d401b9b132afa1a13c73e0026a53c5d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4268ec187d401b9b132afa1a13c73e0026a53c5d"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 19,
    "deletions": 1
  },
  "files": [
    {
      "sha": "ee3377c56b29c8f80e7b3882b5d2766e2e3fa444",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f411722cbc18820e5266ec4c2aadd2269eb15447",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_evaluate_subexp) <case BINOP_ASSIGN>: Always\n+\tallow assignment to an internalvar.\n+\n 2019-06-14  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lex.l: Allow \"_\" in attribute names."
    },
    {
      "sha": "1b5f18316fadbfc6074615e02364f5f7761cf756",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=f411722cbc18820e5266ec4c2aadd2269eb15447",
      "patch": "@@ -10486,7 +10486,11 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg2 = evaluate_subexp (type, exp, pos, noside);\n       if (noside == EVAL_SKIP || noside == EVAL_AVOID_SIDE_EFFECTS)\n         return arg1;\n-      if (ada_is_fixed_point_type (value_type (arg1)))\n+      if (VALUE_LVAL (arg1) == lval_internalvar)\n+\t{\n+\t  /* Nothing.  */\n+\t}\n+      else if (ada_is_fixed_point_type (value_type (arg1)))\n         arg2 = cast_to_fixed (value_type (arg1), arg2);\n       else if (ada_is_fixed_point_type (value_type (arg2)))\n         error"
    },
    {
      "sha": "82194862423f4409b9d235df663f2a26b8b5813b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f411722cbc18820e5266ec4c2aadd2269eb15447",
      "patch": "@@ -1,3 +1,7 @@\n+2019-06-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/set_wstr.exp: Add reassignment test.\n+\n 2019-06-14  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/formatted_ref.exp (test_p_x_addr): Check"
    },
    {
      "sha": "ac7098515daa1f248634d653181af7252db6e77c",
      "filename": "gdb/testsuite/gdb.ada/set_wstr.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/testsuite/gdb.ada/set_wstr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f411722cbc18820e5266ec4c2aadd2269eb15447/gdb/testsuite/gdb.ada/set_wstr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/set_wstr.exp?ref=f411722cbc18820e5266ec4c2aadd2269eb15447",
      "patch": "@@ -72,3 +72,8 @@ gdb_test \"print rws\" \\\n \n gdb_test \"set variable www := \\\"1#2#3#4#5#\\\"\" \\\n          \"cannot assign arrays of different length\"\n+\n+# However, reassigning an array of a different length should work when\n+# the LHS is a convenience variable.\n+gdb_test_no_output \"set variable \\$str := \\\"1234\\\"\"\n+gdb_test_no_output \"set variable \\$str := \\\"12345\\\"\""
    }
  ]
}