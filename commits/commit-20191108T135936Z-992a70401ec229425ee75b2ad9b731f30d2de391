{
  "sha": "992a70401ec229425ee75b2ad9b731f30d2de391",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTkyYTcwNDAxZWMyMjk0MjVlZTc1YjJhZDliNzMxZjMwZDJkZTM5MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-10-22T19:32:39Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-11-08T13:59:36Z"
    },
    "message": "Constify command_line_input\n\nThis changes command_line_input to return a \"const char *\", which is\nappropriate because the memory is owned by command_line_input.  Then\nit fixes up the users.\n\nI looked at making command_line_input transfer ownership to its caller\ninstead, but this is complicated due to the way read_next_line is\ncalled, so I decided against it.\n\nTested by rebuilding.\n\ngdb/ChangeLog\n2019-11-08  Tom Tromey  <tromey@adacore.com>\n\n\t* top.c (read_command_file): Update.\n\t(command_line_input): Make return type const.\n\t* python/py-gdb-readline.c: Update.\n\t* linespec.c (decode_line_2): Update.\n\t* defs.h (command_line_input): Make return type const.\n\t* cli/cli-script.c (read_next_line): Make return type const.\n\t* ada-lang.c (get_selections): Update.\n\nChange-Id: I27e6c9477fd1005ab5b16e0d337e4c015b6e6248",
    "tree": {
      "sha": "c3778d85d36c80fb93238f8ef14c06be00141ff7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3778d85d36c80fb93238f8ef14c06be00141ff7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/992a70401ec229425ee75b2ad9b731f30d2de391",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/992a70401ec229425ee75b2ad9b731f30d2de391",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/992a70401ec229425ee75b2ad9b731f30d2de391",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/992a70401ec229425ee75b2ad9b731f30d2de391/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8a46e447a88d2577f4344d373b521eb6905cb869",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8a46e447a88d2577f4344d373b521eb6905cb869",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8a46e447a88d2577f4344d373b521eb6905cb869"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 20,
    "deletions": 9
  },
  "files": [
    {
      "sha": "f5c8a76c0feeb2bf2804a4b74844dcc2c27a831a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -1,3 +1,13 @@\n+2019-11-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* top.c (read_command_file): Update.\n+\t(command_line_input): Make return type const.\n+\t* python/py-gdb-readline.c: Update.\n+\t* linespec.c (decode_line_2): Update.\n+\t* defs.h (command_line_input): Make return type const.\n+\t* cli/cli-script.c (read_next_line): Make return type const.\n+\t* ada-lang.c (get_selections): Update.\n+\n 2019-11-06  Christian Biesinger  <cbiesinger@google.com>\n \n \t* linux-tdep.c (linux_info_proc): Use strtok_r instead of strtok."
    },
    {
      "sha": "2935df52a24b6d455672ea64d9235149e06fdf3e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -3273,7 +3273,7 @@ static int\n get_selections (int *choices, int n_choices, int max_results,\n                 int is_all_choice, const char *annotation_suffix)\n {\n-  char *args;\n+  const char *args;\n   const char *prompt;\n   int n_chosen;\n   int first_choice = is_all_choice ? 2 : 1;"
    },
    {
      "sha": "316aca0f274772016a6c587a808e3e092e908448",
      "filename": "gdb/cli/cli-script.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/cli/cli-script.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/cli/cli-script.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-script.c?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -50,7 +50,7 @@ recurse_read_control_structure\n static void do_define_command (const char *comname, int from_tty,\n \t\t\t       const counted_command_line *commands);\n \n-static char *read_next_line (void);\n+static const char *read_next_line ();\n \n /* Level of control structure when reading.  */\n static int control_level;\n@@ -890,8 +890,8 @@ user_args::insert_args (const char *line) const\n    recurse_read_control_structure whenever we need to read commands\n    from stdin.  */\n \n-static char *\n-read_next_line (void)\n+static const char *\n+read_next_line ()\n {\n   struct ui *ui = current_ui;\n   char *prompt_ptr, control_prompt[256];"
    },
    {
      "sha": "5d68be2a056aabb9b68b104b12a335b95304824b",
      "filename": "gdb/defs.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/defs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/defs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/defs.h?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -306,7 +306,7 @@ typedef void initialize_file_ftype (void);\n \n extern char *gdb_readline_wrapper (const char *);\n \n-extern char *command_line_input (const char *, const char *);\n+extern const char *command_line_input (const char *, const char *);\n \n extern void print_prompt (void);\n "
    },
    {
      "sha": "9b7a8c9715b09d314c5a5f1a10310a2dad8980af",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -1489,7 +1489,7 @@ decode_line_2 (struct linespec_state *self,\n \t       std::vector<symtab_and_line> *result,\n \t       const char *select_mode)\n {\n-  char *args;\n+  const char *args;\n   const char *prompt;\n   int i;\n   std::vector<const char *> filters;"
    },
    {
      "sha": "dcf3b83430914b3fd3c63b9f38c2ddb2241bde73",
      "filename": "gdb/python/py-gdb-readline.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/python/py-gdb-readline.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/python/py-gdb-readline.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-gdb-readline.c?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -37,7 +37,8 @@ gdbpy_readline_wrapper (FILE *sys_stdin, FILE *sys_stdout,\n #endif\n {\n   int n;\n-  char *p = NULL, *q;\n+  const char *p = NULL;\n+  char *q;\n \n   try\n     {"
    },
    {
      "sha": "08c742548bcd6cf65bb05921523c74c81f39ddcc",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/992a70401ec229425ee75b2ad9b731f30d2de391/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=992a70401ec229425ee75b2ad9b731f30d2de391",
      "patch": "@@ -420,7 +420,7 @@ read_command_file (FILE *stream)\n \n   while (ui->instream != NULL && !feof (ui->instream))\n     {\n-      char *command;\n+      const char *command;\n \n       /* Get a command-line.  This calls the readline package.  */\n       command = command_line_input (NULL, NULL);\n@@ -1210,7 +1210,7 @@ gdb_safe_append_history (void)\n    This routine either uses fancy command line editing or simple input\n    as the user has requested.  */\n \n-char *\n+const char *\n command_line_input (const char *prompt_arg, const char *annotation_suffix)\n {\n   static struct buffer cmd_line_buffer;"
    }
  ]
}