{
  "sha": "00f2db6f7d52b718d5436e76184c92006713f531",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDBmMmRiNmY3ZDUyYjcxOGQ1NDM2ZTc2MTg0YzkyMDA2NzEzZjUzMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:06Z"
    },
    "message": "Split out eval_op_f_cmplx\n\nThis splits BINOP_FORTRAN_CMPLX into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* f-lang.c (eval_op_f_cmplx): New function.\n\t(evaluate_subexp_f): Use it.",
    "tree": {
      "sha": "543efdd1d2c7df269b5a8b4fddb17e6a0b9633a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/543efdd1d2c7df269b5a8b4fddb17e6a0b9633a6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/00f2db6f7d52b718d5436e76184c92006713f531",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00f2db6f7d52b718d5436e76184c92006713f531",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/00f2db6f7d52b718d5436e76184c92006713f531",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00f2db6f7d52b718d5436e76184c92006713f531/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93b2b5fae269c9a8e249e81d3549392c8ff70f38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93b2b5fae269c9a8e249e81d3549392c8ff70f38",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93b2b5fae269c9a8e249e81d3549392c8ff70f38"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 19,
    "deletions": 4
  },
  "files": [
    {
      "sha": "5b23e7cabae7c9c72db49df279ee9e3f92403e9b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00f2db6f7d52b718d5436e76184c92006713f531/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00f2db6f7d52b718d5436e76184c92006713f531/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=00f2db6f7d52b718d5436e76184c92006713f531",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* f-lang.c (eval_op_f_cmplx): New function.\n+\t(evaluate_subexp_f): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* f-lang.c (eval_op_f_modulo): New function."
    },
    {
      "sha": "554626e537b86a1d1b1fddb6a7b1a483941bb6fe",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 14,
      "deletions": 4,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00f2db6f7d52b718d5436e76184c92006713f531/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00f2db6f7d52b718d5436e76184c92006713f531/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=00f2db6f7d52b718d5436e76184c92006713f531",
      "patch": "@@ -1120,6 +1120,19 @@ eval_op_f_modulo (struct type *expect_type, struct expression *exp,\n   error (_(\"MODULO of type %s not supported\"), TYPE_SAFE_NAME (type));\n }\n \n+/* A helper function for BINOP_FORTRAN_CMPLX.  */\n+\n+static struct value *\n+eval_op_f_cmplx (struct type *expect_type, struct expression *exp,\n+\t\t enum noside noside,\n+\t\t struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  struct type *type = builtin_f_type(exp->gdbarch)->builtin_complex_s16;\n+  return value_literal_complex (arg1, arg2, type);\n+}\n+\n /* Special expression evaluation cases for Fortran.  */\n \n static struct value *\n@@ -1247,10 +1260,7 @@ evaluate_subexp_f (struct type *expect_type, struct expression *exp,\n     case BINOP_FORTRAN_CMPLX:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg2 = evaluate_subexp (value_type (arg1), exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      type = builtin_f_type(exp->gdbarch)->builtin_complex_s16;\n-      return value_literal_complex (arg1, arg2, type);\n+      return eval_op_f_cmplx (expect_type, exp, noside, arg1, arg2);\n \n     case UNOP_FORTRAN_KIND:\n       arg1 = evaluate_subexp (NULL, exp, pos, EVAL_AVOID_SIDE_EFFECTS);"
    }
  ]
}