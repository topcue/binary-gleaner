{
  "sha": "8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODEyN2EyZmFiNTc4MGYyN2ExYzk5OThiMGJlNGQ4YjVjMjhjMTYwMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-01T21:41:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:54Z"
    },
    "message": "Convert elfread.c to type-safe registry API\n\nThis changes elfread.c to use the type-safe registry API.  This also\nfixes a potential memory leak, by changing the hash table so that it\nis no longer allocated on an obstack.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* elfread.c (elf_objfile_gnu_ifunc_cache_data): Change type.\n\t(elf_gnu_ifunc_record_cache): Update.  Don't allocate hash table\n\ton obstack.\n\t(elf_gnu_ifunc_resolve_by_cache, _initialize_elfread): Update.",
    "tree": {
      "sha": "7dd8adffbea1256e5819365d48a46644e874d030",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7dd8adffbea1256e5819365d48a46644e874d030"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8127a2fab5780f27a1c9998b0be4d8b5c28c1603/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "91d3055d8b77d56cf64f85ace4237a0ccca98a4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91d3055d8b77d56cf64f85ace4237a0ccca98a4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/91d3055d8b77d56cf64f85ace4237a0ccca98a4a"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 15,
    "deletions": 10
  },
  "files": [
    {
      "sha": "be3e5db38c49c1bbdf20464268a7a1badf589b53",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8127a2fab5780f27a1c9998b0be4d8b5c28c1603/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8127a2fab5780f27a1c9998b0be4d8b5c28c1603/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* elfread.c (elf_objfile_gnu_ifunc_cache_data): Change type.\n+\t(elf_gnu_ifunc_record_cache): Update.  Don't allocate hash table\n+\ton obstack.\n+\t(elf_gnu_ifunc_resolve_by_cache, _initialize_elfread): Update.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* mdebugread.c (basic_type_data): Change type."
    },
    {
      "sha": "cb98b83f74b772cf0ffae2bb89af04b2f5c03627",
      "filename": "gdb/elfread.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8127a2fab5780f27a1c9998b0be4d8b5c28c1603/gdb/elfread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8127a2fab5780f27a1c9998b0be4d8b5c28c1603/gdb/elfread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/elfread.c?ref=8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
      "patch": "@@ -639,7 +639,8 @@ elf_rel_plt_read (minimal_symbol_reader &reader,\n \n /* The data pointer is htab_t for gnu_ifunc_record_cache_unchecked.  */\n \n-static const struct objfile_data *elf_objfile_gnu_ifunc_cache_data;\n+static const struct objfile_key<htab, htab_deleter>\n+  elf_objfile_gnu_ifunc_cache_data;\n \n /* Map function names to CORE_ADDR in elf_objfile_gnu_ifunc_cache_data.  */\n \n@@ -710,15 +711,13 @@ elf_gnu_ifunc_record_cache (const char *name, CORE_ADDR addr)\n   if (len > 4 && strcmp (target_name + len - 4, \"@plt\") == 0)\n     return 0;\n \n-  htab = (htab_t) objfile_data (objfile, elf_objfile_gnu_ifunc_cache_data);\n+  htab = elf_objfile_gnu_ifunc_cache_data.get (objfile);\n   if (htab == NULL)\n     {\n-      htab = htab_create_alloc_ex (1, elf_gnu_ifunc_cache_hash,\n-\t\t\t\t   elf_gnu_ifunc_cache_eq,\n-\t\t\t\t   NULL, &objfile->objfile_obstack,\n-\t\t\t\t   hashtab_obstack_allocate,\n-\t\t\t\t   dummy_obstack_deallocate);\n-      set_objfile_data (objfile, elf_objfile_gnu_ifunc_cache_data, htab);\n+      htab = htab_create_alloc (1, elf_gnu_ifunc_cache_hash,\n+\t\t\t\telf_gnu_ifunc_cache_eq,\n+\t\t\t\tNULL, xcalloc, xfree);\n+      elf_objfile_gnu_ifunc_cache_data.set (objfile, htab);\n     }\n \n   entry_local.addr = addr;\n@@ -769,7 +768,7 @@ elf_gnu_ifunc_resolve_by_cache (const char *name, CORE_ADDR *addr_p)\n       struct elf_gnu_ifunc_cache *entry_p;\n       void **slot;\n \n-      htab = (htab_t) objfile_data (objfile, elf_objfile_gnu_ifunc_cache_data);\n+      htab = elf_objfile_gnu_ifunc_cache_data.get (objfile);\n       if (htab == NULL)\n \tcontinue;\n \n@@ -1462,6 +1461,5 @@ _initialize_elfread (void)\n {\n   add_symtab_fns (bfd_target_elf_flavour, &elf_sym_fns);\n \n-  elf_objfile_gnu_ifunc_cache_data = register_objfile_data ();\n   gnu_ifunc_fns_p = &elf_gnu_ifunc_fns;\n }"
    }
  ]
}