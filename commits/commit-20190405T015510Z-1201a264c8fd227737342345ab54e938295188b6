{
  "sha": "1201a264c8fd227737342345ab54e938295188b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTIwMWEyNjRjOGZkMjI3NzM3MzQyMzQ1YWI1NGU5MzgyOTUxODhiNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-24T14:40:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-05T01:55:10Z"
    },
    "message": "Remove parser_state \"initial_size\" parameter\n\nAll the real (not test) uses of parser_state pass 10 as the\n\"initial_size\" parameter, and it seems to me that there's no real\nreason to require callers to set this.  This patch removes this\nparameter.\n\ngdb/ChangeLog\n2019-04-04  Tom Tromey  <tom@tromey.com>\n\n\t* dtrace-probe.c (dtrace_probe::build_arg_exprs): Update.\n\t* stap-probe.c (stap_parse_argument): Update.\n\t* stap-probe.h (struct stap_parse_info) <stap_parse_info>: Remove\n\tinitial_size parameter.\n\t* rust-exp.y (rust_lex_tests): Update.\n\t* parse.c (parser_state): Update.\n\t(parse_exp_in_context): Update.\n\t* parser-defs.h (struct parser_state) <parser_state>: Remove\n\t\"initial_size\" parameter.",
    "tree": {
      "sha": "7c419bb8e09f1875dedd813e7859edaa18aa6a34",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c419bb8e09f1875dedd813e7859edaa18aa6a34"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1201a264c8fd227737342345ab54e938295188b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1201a264c8fd227737342345ab54e938295188b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1201a264c8fd227737342345ab54e938295188b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1201a264c8fd227737342345ab54e938295188b6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e3980ce2a9bf19ade17fdd9817765f2d1e17a0d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3980ce2a9bf19ade17fdd9817765f2d1e17a0d8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e3980ce2a9bf19ade17fdd9817765f2d1e17a0d8"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 23,
    "deletions": 13
  },
  "files": [
    {
      "sha": "ae7c5df26aa25cbe235fdbe0000e9b2e67875b73",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -1,3 +1,15 @@\n+2019-04-04  Tom Tromey  <tom@tromey.com>\n+\n+\t* dtrace-probe.c (dtrace_probe::build_arg_exprs): Update.\n+\t* stap-probe.c (stap_parse_argument): Update.\n+\t* stap-probe.h (struct stap_parse_info) <stap_parse_info>: Remove\n+\tinitial_size parameter.\n+\t* rust-exp.y (rust_lex_tests): Update.\n+\t* parse.c (parser_state): Update.\n+\t(parse_exp_in_context): Update.\n+\t* parser-defs.h (struct parser_state) <parser_state>: Remove\n+\t\"initial_size\" parameter.\n+\n 2019-04-04  Tom Tromey  <tom@tromey.com>\n \n \t* parser-defs.h (increase_expout_size): Don't declare."
    },
    {
      "sha": "f80db713813593a352e50d4199a150747f3c31a7",
      "filename": "gdb/dtrace-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/dtrace-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/dtrace-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dtrace-probe.c?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -627,7 +627,7 @@ dtrace_probe::build_arg_exprs (struct gdbarch *gdbarch)\n       /* Initialize the expression buffer in the parser state.  The\n \t language does not matter, since we are using our own\n \t parser.  */\n-      parser_state pstate (10, current_language, gdbarch);\n+      parser_state pstate (current_language, gdbarch);\n \n       /* The argument value, which is ABI dependent and casted to\n \t `long int'.  */"
    },
    {
      "sha": "69c63da787f966d9699b31898bb1233b662d357f",
      "filename": "gdb/parse.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/parse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/parse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parse.c?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -165,10 +165,9 @@ end_arglist (void)\n \n /* See definition in parser-defs.h.  */\n \n-parser_state::parser_state (size_t initial_size,\n-\t\t\t    const struct language_defn *lang,\n+parser_state::parser_state (const struct language_defn *lang,\n \t\t\t    struct gdbarch *gdbarch)\n-  : expout_size (initial_size),\n+  : expout_size (10),\n     expout (XNEWVAR (expression,\n \t\t     (sizeof (expression)\n \t\t      + EXP_ELEM_TO_BYTES (expout_size)))),\n@@ -1190,7 +1189,7 @@ parse_exp_in_context (const char **stringptr, CORE_ADDR pc,\n      and others called from *.y) ensure CURRENT_LANGUAGE gets restored\n      to the value matching SELECTED_FRAME as set by get_current_arch.  */\n \n-  parser_state ps (10, lang, get_current_arch ());\n+  parser_state ps (lang, get_current_arch ());\n \n   scoped_restore_current_language lang_saver;\n   set_language (lang->la_language);"
    },
    {
      "sha": "ffdbd836a192472511f289680ecce95d31180081",
      "filename": "gdb/parser-defs.h",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/parser-defs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/parser-defs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/parser-defs.h?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -37,11 +37,10 @@ extern int parser_debug;\n \n struct parser_state\n {\n-  /* Constructor.  INITIAL_SIZE is the initial size of the expout\n-     array.  LANG is the language used to parse the expression.  And\n-     GDBARCH is the gdbarch to use during parsing.  */\n+  /* Constructor.  LANG is the language used to parse the expression.\n+     And GDBARCH is the gdbarch to use during parsing.  */\n \n-  parser_state (size_t initial_size, const struct language_defn *lang,\n+  parser_state (const struct language_defn *lang,\n \t\tstruct gdbarch *gdbarch);\n \n   DISABLE_COPY_AND_ASSIGN (parser_state);"
    },
    {
      "sha": "1379030730c1da47b005b78733e567498f6f2bb2",
      "filename": "gdb/rust-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/rust-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/rust-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.y?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -2707,7 +2707,7 @@ rust_lex_tests (void)\n   int i;\n \n   // Set up dummy \"parser\", so that rust_type works.\n-  struct parser_state ps (0, &rust_language_defn, target_gdbarch ());\n+  struct parser_state ps (&rust_language_defn, target_gdbarch ());\n   rust_parser parser (&ps);\n \n   rust_lex_test_one (&parser, \"\", 0);"
    },
    {
      "sha": "24b2b78a9037dfce9437ca3f2fe491983f7605fe",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -1149,7 +1149,7 @@ stap_parse_argument (const char **arg, struct type *atype,\n   /* We need to initialize the expression buffer, in order to begin\n      our parsing efforts.  We use language_c here because we may need\n      to do pointer arithmetics.  */\n-  struct stap_parse_info p (*arg, atype, 10, language_def (language_c),\n+  struct stap_parse_info p (*arg, atype, language_def (language_c),\n \t\t\t    gdbarch);\n \n   stap_parse_argument_1 (&p, 0, STAP_OPERAND_PREC_NONE);"
    },
    {
      "sha": "6c56904aeb32f37e915c4a5a79b1cc00ef6c9482",
      "filename": "gdb/stap-probe.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1201a264c8fd227737342345ab54e938295188b6/gdb/stap-probe.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1201a264c8fd227737342345ab54e938295188b6/gdb/stap-probe.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.h?ref=1201a264c8fd227737342345ab54e938295188b6",
      "patch": "@@ -29,10 +29,10 @@\n struct stap_parse_info\n {\n   stap_parse_info (const char *arg_, struct type *arg_type_,\n-\t\t   size_t initial_size, const struct language_defn *lang,\n+\t\t   const struct language_defn *lang,\n \t\t   struct gdbarch *gdbarch)\n     : arg (arg_),\n-      pstate (initial_size, lang, gdbarch),\n+      pstate (lang, gdbarch),\n       saved_arg (arg_),\n       arg_type (arg_type_),\n       gdbarch (gdbarch),"
    }
  ]
}