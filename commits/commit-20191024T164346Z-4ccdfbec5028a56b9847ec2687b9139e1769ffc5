{
  "sha": "4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGNjZGZiZWM1MDI4YTU2Yjk4NDdlYzI2ODdiOTEzOWUxNzY5ZmZjNQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-24T16:43:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-10-24T16:43:46Z"
    },
    "message": "[gdb/testsuite] Add -wrap pattern flag to gdb_test_multiple\n\nCurrently, in order to rewrite:\n...\ngdb_test <command> <pattern> <message>\n...\nusing gdb_test_multiple, we get:\n...\ngdb_test_multiple <command> <message> {\n    -re \"\\[\\r\\n\\]*(?:<pattern>)\\[\\r\\n\\]+$gdb_prompt $\" {\n    \tpass $gdb_test_name\n    }\n}\n...\n\nAdd a '-wrap pattern flag to gdb_test_multiple, that wraps the regexp\npattern as gdb_test wraps its message argument.\n\nThis allows us to rewrite into the more compact:\n...\ngdb_test_multiple <command> <message> {\n    -re -wrap <pattern> {\n        pass $gdb_test_name\n    }\n}\n...\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-10-24  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (gdb_test_multiple): Add -wrap pattern flag.\n\t* gdb.reverse/step-precsave.exp: Rewrite gdb_test_multiple containing\n\tkfail using -wrap pattern flag and convenience variable\n\tgdb_test_name.\n\nChange-Id: Ie42c97d5ab7acf6db351299ccd23a83540fe6e1a",
    "tree": {
      "sha": "9974d51badde0fcdaf15820d69e023316750c725",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9974d51badde0fcdaf15820d69e023316750c725"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "33d569b709886a1208145806da80b689d9cae9da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/33d569b709886a1208145806da80b689d9cae9da",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/33d569b709886a1208145806da80b689d9cae9da"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 38,
    "deletions": 12
  },
  "files": [
    {
      "sha": "faee8e0f1cb92e8a4f99dde8de2238528c24c2d6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-24  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (gdb_test_multiple): Add -wrap pattern flag.\n+\t* gdb.reverse/step-precsave.exp: Rewrite gdb_test_multiple containing\n+\tkfail using -wrap pattern flag and convenience variable\n+\tgdb_test_name.\n+\n 2019-10-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-progspace.exp: Add tests for the"
    },
    {
      "sha": "2cdceef79e0aa4c7150260f77036eb0f151f4c02",
      "filename": "gdb/testsuite/gdb.reverse/step-precsave.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 11,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/gdb.reverse/step-precsave.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/gdb.reverse/step-precsave.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.reverse/step-precsave.exp?ref=4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
      "patch": "@@ -46,19 +46,15 @@ gdb_test \"break $end_of_main\" \\\n \n # This can take awhile.\n with_timeout_factor 20 {\n-    set test \"run to end of main\"\n-    set pass_pattern \"Breakpoint .* end of main .*\"\n-    set kfail_pattern \"Process record does not support instruction 0xc5 at.*\"\n-    set kfail2_pattern \"Process record does not support instruction 0xfae64 at.*\"\n-    gdb_test_multiple \"continue\" $test {\n-\t-re \"\\[\\r\\n\\]*(?:$pass_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n-\t    pass $test\n+    gdb_test_multiple \"continue\" \"run to end of main\" {\n+\t-re -wrap \"Breakpoint .* end of main .*\" {\n+\t    pass $gdb_test_name\n \t}\n-\t-re \"\\[\\r\\n\\]*(?:$kfail_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n-\t    kfail \"record/23188\" $test\n+\t-re -wrap \"Process record does not support instruction 0xc5 at.*\" {\n+\t    kfail \"record/23188\" $gdb_test_name\n \t}\n-\t-re \"\\[\\r\\n\\]*(?:$kfail2_pattern)\\[\\r\\n\\]+$gdb_prompt $\" {\n-\t    kfail \"record/25038\" $test\n+\t-re -wrap \"Process record does not support instruction 0xfae64 at.*\" {\n+\t    kfail \"record/25038\" $gdb_test_name\n \t}\n     }\n }"
    },
    {
      "sha": "677074139b4fcf4b29ff62007c4b72c7268e7f60",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 1,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ccdfbec5028a56b9847ec2687b9139e1769ffc5/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=4ccdfbec5028a56b9847ec2687b9139e1769ffc5",
      "patch": "@@ -764,6 +764,17 @@ proc gdb_internal_error_resync {} {\n # expected from $gdb_spawn_id.  IOW, callers do not need to worry\n # about resetting \"-i\" back to $gdb_spawn_id explicitly.\n #\n+# In EXPECT_ARGUMENTS we can use a -wrap pattern flag, that wraps the regexp\n+# pattern as gdb_test wraps its message argument.\n+# This allows us to rewrite:\n+#   gdb_test <command> <pattern> <message>\n+# into:\n+#   gdb_test_multiple <command> <message> {\n+#       -re -wrap <pattern> {\n+#           pass $gdb_test_name\n+#       }\n+#   }\n+#\n proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n     global verbose use_gdb_stub\n     global gdb_prompt pagination_prompt\n@@ -825,6 +836,7 @@ proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n     set patterns \"\"\n     set expecting_action 0\n     set expecting_arg 0\n+    set wrap_pattern 0\n     foreach item $user_code subst_item $subst_code {\n \tif { $item == \"-n\" || $item == \"-notransfer\" || $item == \"-nocase\" } {\n \t    lappend processed_code $item\n@@ -839,6 +851,10 @@ proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n \t    lappend processed_code $item\n \t    continue\n \t}\n+\tif { $item == \"-wrap\" } {\n+\t    set wrap_pattern 1\n+\t    continue\n+\t}\n \tif { $expecting_arg } {\n \t    set expecting_arg 0\n \t    lappend processed_code $subst_item\n@@ -852,7 +868,14 @@ proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n \t    continue\n \t}\n \tset expecting_action 1\n-\tlappend processed_code $subst_item\n+\tif { $wrap_pattern } {\n+\t    # Wrap subst_item as is done for the gdb_test PATTERN argument.\n+\t    lappend processed_code \\\n+\t\t\"\\[\\r\\n\\]*(?:$subst_item)\\[\\r\\n\\]+$gdb_prompt $\"\n+\t    set wrap_pattern 0\n+\t} else {\n+\t    lappend processed_code $subst_item\n+\t}\n \tif {$patterns != \"\"} {\n \t    append patterns \"; \"\n \t}"
    }
  ]
}