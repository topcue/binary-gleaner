{
  "sha": "1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWVmNTNlNmI4MzI4YWNkNWI3ZDU0ZWUyZmUyODg4MzZjZTEyOTkyZQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T10:34:09Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-03-22T10:34:09Z"
    },
    "message": "AArch64: gdbserver: read pauth registers\n\nAdd the pauth registers to the regset lists.\n\nAdd a new regset type OPTIONAL_REGS which allows for the regset read to fail.\nOnce the read fails, it will not be checked again.  This allows targets with\noptional features to keep a single static regset_info structure.\n\ngdb/ChangeLog:\n\n\t* arch/aarch64.h (AARCH64_PAUTH_REGS_SIZE): New define.\n\ngdb/gdbserver/ChangeLog:\n\n\t* linux-aarch64-low.c (aarch64_store_pauthregset): New function.\n\t* linux-low.c (regsets_store_inferior_registers): Allow optional reads\n\tto fail.\n\t* linux-low.h (enum regset_type): Add OPTIONAL_REGS.",
    "tree": {
      "sha": "de8f553a4587c228651e7bfc16f0f720b4c9a14d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/de8f553a4587c228651e7bfc16f0f720b4c9a14d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "76bed0fd9493868889929ca9dcd32350c1d864be",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76bed0fd9493868889929ca9dcd32350c1d864be",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/76bed0fd9493868889929ca9dcd32350c1d864be"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 46,
    "deletions": 6
  },
  "files": [
    {
      "sha": "8622c9bfa8157929ed0563d8a94740bdb671ceb1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* arch/aarch64.h (AARCH64_PAUTH_REGS_SIZE): New define.\n+\n 2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "
    },
    {
      "sha": "309fe75273ef5175f11ebb6b111e260ac5da2aef",
      "filename": "gdb/arch/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/arch/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/arch/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/aarch64.h?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -68,6 +68,7 @@ enum aarch64_regnum\n \n #define AARCH64_PAUTH_DMASK_REGNUM(pauth_reg_base) (pauth_reg_base)\n #define AARCH64_PAUTH_CMASK_REGNUM(pauth_reg_base) (pauth_reg_base + 1)\n+#define AARCH64_PAUTH_REGS_SIZE (16)\n \n #define AARCH64_X_REGS_NUM 31\n #define AARCH64_V_REGS_NUM 32"
    },
    {
      "sha": "21c286d5ef3e710f1c5a849dcb82de205974c7f6",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n+\t    Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* linux-aarch64-low.c (aarch64_store_pauthregset): New function.\n+\t* linux-low.c (regsets_store_inferior_registers): Allow optional reads\n+\tto fail.\n+\t* linux-low.h (enum regset_type): Add OPTIONAL_REGS.\n+\n 2019-03-22  Alan Hayward  <alan.hayward@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "
    },
    {
      "sha": "20c75493b07c03c044258055219326c05e606128",
      "filename": "gdb/gdbserver/linux-aarch64-low.c",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-aarch64-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-aarch64-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-aarch64-low.c?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -135,6 +135,23 @@ aarch64_store_fpregset (struct regcache *regcache, const void *buf)\n   supply_register (regcache, AARCH64_FPCR_REGNUM, &regset->fpcr);\n }\n \n+/* Store the pauth registers to regcache.  */\n+\n+static void\n+aarch64_store_pauthregset (struct regcache *regcache, const void *buf)\n+{\n+  uint64_t *pauth_regset = (uint64_t *) buf;\n+  int pauth_base = find_regno (regcache->tdesc, \"pauth_dmask\");\n+\n+  if (pauth_base == 0)\n+    return;\n+\n+  supply_register (regcache, AARCH64_PAUTH_DMASK_REGNUM (pauth_base),\n+\t\t   &pauth_regset[0]);\n+  supply_register (regcache, AARCH64_PAUTH_CMASK_REGNUM (pauth_base),\n+\t\t   &pauth_regset[1]);\n+}\n+\n /* Enable miscellaneous debugging output.  The name is historical - it\n    was originally used to debug LinuxThreads support.  */\n extern int debug_threads;\n@@ -564,6 +581,9 @@ static struct regset_info aarch64_regsets[] =\n     sizeof (struct user_fpsimd_state), FP_REGS,\n     aarch64_fill_fpregset, aarch64_store_fpregset\n   },\n+  { PTRACE_GETREGSET, PTRACE_SETREGSET, NT_ARM_PAC_MASK,\n+    AARCH64_PAUTH_REGS_SIZE, OPTIONAL_REGS,\n+    NULL, aarch64_store_pauthregset },\n   NULL_REGSET\n };\n \n@@ -590,6 +610,9 @@ static struct regset_info aarch64_sve_regsets[] =\n     SVE_PT_SIZE (AARCH64_MAX_SVE_VQ, SVE_PT_REGS_SVE), EXTENDED_REGS,\n     aarch64_sve_regs_copy_from_regcache, aarch64_sve_regs_copy_to_regcache\n   },\n+  { PTRACE_GETREGSET, PTRACE_SETREGSET, NT_ARM_PAC_MASK,\n+    AARCH64_PAUTH_REGS_SIZE, OPTIONAL_REGS,\n+    NULL, aarch64_store_pauthregset },\n   NULL_REGSET\n };\n "
    },
    {
      "sha": "6f703f589fe931c86c27bf750cf6ee144062befd",
      "filename": "gdb/gdbserver/linux-low.c",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-low.c?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -5358,10 +5358,11 @@ regsets_fetch_inferior_registers (struct regsets_info *regsets_info,\n #endif\n       if (res < 0)\n \t{\n-\t  if (errno == EIO)\n+\t  if (errno == EIO\n+\t      || (errno == EINVAL && regset->type == OPTIONAL_REGS))\n \t    {\n-\t      /* If we get EIO on a regset, do not try it again for\n-\t\t this process mode.  */\n+\t      /* If we get EIO on a regset, or an EINVAL and the regset is\n+\t\t optional, do not try it again for this process mode.  */\n \t      disable_regset (regsets_info, regset);\n \t    }\n \t  else if (errno == ENODATA)\n@@ -5456,10 +5457,11 @@ regsets_store_inferior_registers (struct regsets_info *regsets_info,\n \n       if (res < 0)\n \t{\n-\t  if (errno == EIO)\n+\t  if (errno == EIO\n+\t      || (errno == EINVAL && regset->type == OPTIONAL_REGS))\n \t    {\n-\t      /* If we get EIO on a regset, do not try it again for\n-\t\t this process mode.  */\n+\t      /* If we get EIO on a regset, or an EINVAL and the regset is\n+\t\t optional, do not try it again for this process mode.  */\n \t      disable_regset (regsets_info, regset);\n \t    }\n \t  else if (errno == ESRCH)"
    },
    {
      "sha": "1ade35d64850f86168c0a0043165bc681c20721f",
      "filename": "gdb/gdbserver/linux-low.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ef53e6b8328acd5b7d54ee2fe288836ce12992e/gdb/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-low.h?ref=1ef53e6b8328acd5b7d54ee2fe288836ce12992e",
      "patch": "@@ -40,6 +40,7 @@ enum regset_type {\n   GENERAL_REGS,\n   FP_REGS,\n   EXTENDED_REGS,\n+  OPTIONAL_REGS, /* Do not error if the regset cannot be accessed.  */\n };\n \n /* The arch's regsets array initializer must be terminated with a NULL"
    }
  ]
}