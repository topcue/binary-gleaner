{
  "sha": "ba6a0ef34933712ec65855997e982bead3b314d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmE2YTBlZjM0OTMzNzEyZWM2NTg1NTk5N2U5ODJiZWFkM2IzMTRkNA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-12T11:07:19Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-15T09:21:37Z"
    },
    "message": "gdb: use make_scoped_restore to restore gdbpy_current_objfile\n\nThe current mechanism by which the Python gdb.current_objfile is\nmaintained does not allow for nested auto-load events.  It is assumed\nthat once an auto-load script has finished loading then the current\nobjfile should be set back to NULL.  In a nested situation, we should\nbe restoring the previous value.\n\nWe already have an RAII class to handle save/restore type behaviour,\nso lets just switch to use that.\n\nThe test is a little contrived, but is simple enough, and triggers the\nbug.  The real use case might involve the auto-load script calling\nfunctions (either in the just-loaded object file, or in the main\nexecutable), which in turn trigger further auto-loads to occur.\n\ngdb/ChangeLog:\n\n\t* python/python.c (gdbpy_source_objfile_script): Use\n\tmake_scoped_restore to restore gdbpy_current_objfile.\n\t(gdbpy_execute_objfile_script): Likewise.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-auto-load-chaining-f1.c: New file.\n\t* gdb.python/py-auto-load-chaining-f1.o-gdb.py: New file.\n\t* gdb.python/py-auto-load-chaining-f2.c: New file.\n\t* gdb.python/py-auto-load-chaining-f2.o-gdb.py: New file.\n\t* gdb.python/py-auto-load-chaining.c: New file.\n\t* gdb.python/py-auto-load-chaining.exp: New file.",
    "tree": {
      "sha": "3e2266ac864cec209509e064b85c6a4dec9dd204",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e2266ac864cec209509e064b85c6a4dec9dd204"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba6a0ef34933712ec65855997e982bead3b314d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba6a0ef34933712ec65855997e982bead3b314d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba6a0ef34933712ec65855997e982bead3b314d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba6a0ef34933712ec65855997e982bead3b314d4/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e838b3ca2172f275e05b098adf48a36bda6348b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e838b3ca2172f275e05b098adf48a36bda6348b3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e838b3ca2172f275e05b098adf48a36bda6348b3"
    }
  ],
  "stats": {
    "total": 270,
    "additions": 264,
    "deletions": 6
  },
  "files": [
    {
      "sha": "59c8a3993275bc68eb71c795d6719b6d2300096f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* python/python.c (gdbpy_source_objfile_script): Use\n+\tmake_scoped_restore to restore gdbpy_current_objfile.\n+\t(gdbpy_execute_objfile_script): Likewise.\n+\n 2021-03-14  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (read_attribute_value): Use cu_header"
    },
    {
      "sha": "9eed258c18167f7cac09bc45924b55711244a259",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -1388,11 +1388,10 @@ gdbpy_source_objfile_script (const struct extension_language_defn *extlang,\n     return;\n \n   gdbpy_enter enter_py (objfile->arch (), current_language);\n-  gdbpy_current_objfile = objfile;\n+  scoped_restore restire_current_objfile\n+    = make_scoped_restore (&gdbpy_current_objfile, objfile);\n \n   python_run_simple_file (file, filename);\n-\n-  gdbpy_current_objfile = NULL;\n }\n \n /* Set the current objfile to OBJFILE and then execute SCRIPT\n@@ -1410,11 +1409,10 @@ gdbpy_execute_objfile_script (const struct extension_language_defn *extlang,\n     return;\n \n   gdbpy_enter enter_py (objfile->arch (), current_language);\n-  gdbpy_current_objfile = objfile;\n+  scoped_restore restire_current_objfile\n+    = make_scoped_restore (&gdbpy_current_objfile, objfile);\n \n   PyRun_SimpleString (script);\n-\n-  gdbpy_current_objfile = NULL;\n }\n \n /* Return the current Objfile, or None if there isn't one.  */"
    },
    {
      "sha": "40112300b9ce1f98f33a2400c0beaf8ead7c82b2",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-auto-load-chaining-f1.c: New file.\n+\t* gdb.python/py-auto-load-chaining-f1.o-gdb.py: New file.\n+\t* gdb.python/py-auto-load-chaining-f2.c: New file.\n+\t* gdb.python/py-auto-load-chaining-f2.o-gdb.py: New file.\n+\t* gdb.python/py-auto-load-chaining.c: New file.\n+\t* gdb.python/py-auto-load-chaining.exp: New file.\n+\n 2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-bad-printers.exp: Extend test names to make them"
    },
    {
      "sha": "77250bd91d68ac9919b5fef3128c47fe7757fc8d",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining-f1.c",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.c?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,24 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see  <http://www.gnu.org/licenses/>.  */\n+\n+/* Just a dummy function.  */\n+\n+int\n+f1 ()\n+{\n+  return 1;\n+}"
    },
    {
      "sha": "4f5a4e78594802b3e81f9f8cee2b19cd0029f4ed",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining-f1.o-gdb.py",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.o-gdb.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.o-gdb.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining-f1.o-gdb.py?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,37 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This script is auto-loaded when the py-auto-load-chaining-f1.o\n+# object is loaded.\n+\n+import re\n+\n+print (\"Entering f1.o auto-load script\")\n+\n+print (\"Current objfile is: %s\"\n+       % gdb.current_objfile ().filename)\n+\n+print (\"Chain loading f2.o...\")\n+\n+filename = gdb.current_objfile ().filename\n+filename = re.sub (r\"-f1.o$\", \"-f2.o\", filename)\n+r2 = gdb.lookup_global_symbol ('region_2').value ()\n+gdb.execute (\"add-symbol-file %s 0x%x\" % (filename, r2))\n+\n+print (\"After loading f2.o...\")\n+print (\"Current objfile is: %s\"\n+       % gdb.current_objfile ().filename)\n+\n+print (\"Leaving f1.o auto-load script\")"
    },
    {
      "sha": "f2eeab8f389c22331c0a4d440bce995e31cc6b82",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining-f2.c",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.c?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,24 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see  <http://www.gnu.org/licenses/>.  */\n+\n+/* Just a dummy function.  */\n+\n+int\n+f2 ()\n+{\n+  return 2;\n+}"
    },
    {
      "sha": "f5c29cd792fd7249bced58f7d8524ba9ad0d5884",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining-f2.o-gdb.py",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.o-gdb.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.o-gdb.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining-f2.o-gdb.py?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,24 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# This script is auto-loaded when the py-auto-load-chaining-f2.o\n+# object is loaded.\n+\n+print (\"Entering f2.o auto-load script\")\n+\n+print (\"Current objfile is: %s\"\n+       % gdb.current_objfile ().filename)\n+\n+print (\"Leaving f2.o auto-load script\")"
    },
    {
      "sha": "5b7feed90aa4dffa3ebfa837d0bacec3114092d5",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining.c",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining.c?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,58 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see  <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdlib.h>\n+#include <unistd.h>\n+#include <sys/mman.h>\n+#include <stdio.h>\n+\n+/* These will hold the addresses for two memory regions.  */\n+\n+void *region_1;\n+void *region_2;\n+\n+/* Allocate a page of memory using mmap, and return a pointer.  */\n+\n+void *\n+allocate_page (void)\n+{\n+  void *addr;\n+  int pgsize = sysconf(_SC_PAGE_SIZE);\n+  addr = mmap (NULL, pgsize, PROT_EXEC | PROT_READ | PROT_WRITE,\n+               MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n+  if (addr == MAP_FAILED)\n+    perror (\"mmap\");\n+}\n+\n+/* Only called so we can create a breakpoint.  */\n+\n+void\n+breakpt (void)\n+{\n+  /* Nothing.  */\n+}\n+\n+/* The test.  */\n+\n+int\n+main (void)\n+{\n+  region_1 = allocate_page ();\n+  region_2 = allocate_page ();\n+\n+  breakpt ();\t/* Break Here.  */\n+}"
    },
    {
      "sha": "29414e8a775d36a8ea94da86757aa92c824be4e6",
      "filename": "gdb/testsuite/gdb.python/py-auto-load-chaining.exp",
      "status": "added",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba6a0ef34933712ec65855997e982bead3b314d4/gdb/testsuite/gdb.python/py-auto-load-chaining.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-auto-load-chaining.exp?ref=ba6a0ef34933712ec65855997e982bead3b314d4",
      "patch": "@@ -0,0 +1,78 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that the value of gdb.current_objfile is correct even when one\n+# auto-load script loads a second objfile, which triggers the\n+# execution of another (nested) objfile script.\n+\n+load_lib gdb-python.exp\n+\n+standard_testfile .c -f1.c -f2.c\n+\n+# Two additional object files needed for this test.\n+set f1_o [standard_output_file ${gdb_test_file_name}-f1.o]\n+set f2_o [standard_output_file ${gdb_test_file_name}-f2.o]\n+\n+# Now build the object files.\n+if {[gdb_compile \"${srcdir}/${subdir}/${srcfile2}\" ${f1_o} object {}] != \"\"} {\n+  untested \"failed to compile object file f1.o\"\n+  return -1\n+}\n+\n+if {[gdb_compile \"${srcdir}/${subdir}/${srcfile3}\" ${f2_o} object {}] != \"\"} {\n+  untested \"failed to compile object file f2.o\"\n+  return -1\n+}\n+\n+# Copy the two Python scripts to where the tests are being run.\n+set remote_python_file [gdb_remote_download host \\\n+\t\t\t    ${srcdir}/${subdir}/${testfile}-f1.o-gdb.py]\n+set remote_python_file [gdb_remote_download host \\\n+\t\t\t    ${srcdir}/${subdir}/${testfile}-f2.o-gdb.py]\n+\n+# Build the main test executable and start GDB.\n+if {[prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}]} {\n+    return -1\n+}\n+\n+# Skip all tests if Python scripting is not enabled.\n+if { [skip_python_tests] } { continue }\n+\n+if ![runto_main] {\n+   return -1\n+}\n+\n+set safe_path [standard_output_file \"\"]\n+gdb_test_no_output \"set auto-load safe-path ${safe_path}\" \\\n+    \"set auto-load safe-path\"\n+\n+gdb_breakpoint [gdb_get_line_number \"Break Here\"]\n+gdb_continue_to_breakpoint \"run to test breakpoint\"\n+\n+gdb_test_no_output \"set confirm off\"\n+gdb_test \"add-symbol-file ${f1_o} region_1\" \\\n+    [multi_line \\\n+\t \"Entering f1\\\\.o auto-load script\" \\\n+\t \"Current objfile is: \\[^\\r\\n\\]+/py-auto-load-chaining-f1\\\\.o\" \\\n+\t \"Chain loading f2\\\\.o\\\\.\\\\.\\\\.\" \\\n+\t \"add symbol table from file \\\"\\[^\\r\\n\\]+/py-auto-load-chaining-f2\\\\.o\\\" at\" \\\n+\t \"\\\\s+\\\\.text_addr = $hex\" \\\n+\t \"Entering f2\\\\.o auto-load script\" \\\n+\t \"Current objfile is: \\[^\\r\\n\\]+/py-auto-load-chaining-f2\\\\.o\" \\\n+\t \"Leaving f2\\\\.o auto-load script\" \\\n+\t \"After loading f2\\\\.o\\\\.\\\\.\\\\.\" \\\n+\t \"Current objfile is: \\[^\\r\\n\\]+/py-auto-load-chaining-f1\\\\.o\" \\\n+\t \"Leaving f1\\\\.o auto-load script\"] \\\n+    \"add-symbol-file f1.o\""
    }
  ]
}