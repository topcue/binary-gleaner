{
  "sha": "21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjFhM2ZhZWJiYTQ0NGM0ZDRkMGU4ZjQwYzNhNjBjZGZiYjgzYzUxNA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-06T11:44:03Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-06T11:44:03Z"
    },
    "message": "x86: use %LW / %XW instead of going through vex_w_table[]\n\nSince we have these macros, there's no point having unnecessary table\ndepth.\n\nVFPCLASSP{S,D} are now the first instance of using two %-prefixed\nmacros, which has pointed out a problem with the implementation. Instead\nof using custom code in various case blocks, do the macro accumulation\ncentralized at the top of the main loop of putop(), and zap the\naccumulated macros at the bottom of that loop once it has been\nprocessed.",
    "tree": {
      "sha": "575eb10e3915e16b99481ffb256911455f813125",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/575eb10e3915e16b99481ffb256911455f813125"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc152a17ff2f4a476df198d681d37e064f599fae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc152a17ff2f4a476df198d681d37e064f599fae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc152a17ff2f4a476df198d681d37e064f599fae"
    }
  ],
  "stats": {
    "total": 269,
    "additions": 77,
    "deletions": 192
  },
  "files": [
    {
      "sha": "3de6d6462230ab51e902e5808054fd37b65fad79",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EVEX_W_0F3838_P_1,\n+\tEVEX_W_0F3839_P_1, EVEX_W_0F3840_P_2, EVEX_W_0F3855_P_2,\n+\tEVEX_W_0F3868_P_3, EVEX_W_0F3871_P_2, EVEX_W_0F3873_P_2,\n+\tEVEX_W_0F3A50_P_2, EVEX_W_0F3A51_P_2, EVEX_W_0F3A56_P_2,\n+\tEVEX_W_0F3A57_P_2, EVEX_W_0F3A66_P_2, EVEX_W_0F3A67_P_2,\n+\tEVEX_W_0F3A71_P_2, EVEX_W_0F3A73_P_2): Delete.\n+\t(putop): Centralize management of last[]. Delete SAVE_LAST.\n+\t* i386-dis-evex-w.h: Move entries for opcodes 0F3838, 0F3839,\n+\t0F3840, 0F3855, 0F3868, 0F3871, 0F3873, 0F3A50, 0F3A51, 0F3A56,\n+\t0F3A57, 0F3A66, 0F3A67,\t0F3A71, and 0F3A73 ...\n+\t* i386-dis-evex-prefix.h: here.\n+\n 2020-07-06  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (MOD_EVEX_0F381A_P_2_W_0, MOD_EVEX_0F381A_P_2_W_1,"
    },
    {
      "sha": "bff0a42500006e260917cc67a00572a9c211acae",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
      "patch": "@@ -564,13 +564,13 @@\n   /* PREFIX_EVEX_0F3838 */\n   {\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3838_P_1) },\n+    { \"vpmovm2%LW\",\t{ XM, MaskR }, 0 },\n     { \"vpminsb\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3839 */\n   {\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3839_P_1) },\n+    { \"vpmov%LW2m\",\t{ XMask, EXx }, 0 },\n     { \"vpmins%LW\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F383A */\n@@ -601,7 +601,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3840_P_2) },\n+    { \"vpmull%LW\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3842 */\n   {\n@@ -699,7 +699,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3855_P_2) },\n+    { \"vpopcnt%LW\",\t{ XM, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3859 */\n   {\n@@ -754,7 +754,7 @@\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3868_P_3) },\n+    { \"vp2intersect%LW\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F3870 */\n   {\n@@ -766,7 +766,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3871_P_2) },\n+    { \"vpshldv%LW\",  { XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3872 */\n   {\n@@ -779,7 +779,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3873_P_2) },\n+    { \"vpshrdv%LW\",  { XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3875 */\n   {\n@@ -1251,13 +1251,13 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A50_P_2) },\n+    { \"vrangep%XW\",\t{ XM, Vex, EXx, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A51 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A51_P_2) },\n+    { \"vranges%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A54 */\n   {\n@@ -1275,25 +1275,25 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A56_P_2) },\n+    { \"vreducep%XW\",\t{ XM, EXx, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A57 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A57_P_2) },\n+    { \"vreduces%XW\",\t{ XMScalar, VexScalar, EXVexWdqScalar, EXxEVexS, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A66 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A66_P_2) },\n+    { \"vfpclassp%XW%XZ\",\t{ XMask, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A67 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A67_P_2) },\n+    { \"vfpclasss%XW\",\t{ XMask, EXVexWdqScalar, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A70 */\n   {\n@@ -1305,7 +1305,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A71_P_2) },\n+    { \"vpshld%LW\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A72 */\n   {\n@@ -1317,5 +1317,5 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { VEX_W_TABLE (EVEX_W_0F3A73_P_2) },\n+    { \"vpshrd%LW\",   { XM, Vex, EXx, Ib }, 0 },\n   },"
    },
    {
      "sha": "6d0d48e5408545d93b5d2a3b0e4bc4acf83fecd3",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 0,
      "deletions": 75,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
      "patch": "@@ -518,25 +518,10 @@\n     { Bad_Opcode },\n     { \"vpcmpgtq\",\t{ XMask, Vex, EXx }, 0 },\n   },\n-  /* EVEX_W_0F3838_P_1 */\n-  {\n-    { \"vpmovm2d\",\t{ XM, MaskR }, 0 },\n-    { \"vpmovm2q\",\t{ XM, MaskR }, 0 },\n-  },\n-  /* EVEX_W_0F3839_P_1 */\n-  {\n-    { \"vpmovd2m\",\t{ XMask, EXx }, 0 },\n-    { \"vpmovq2m\",\t{ XMask, EXx }, 0 },\n-  },\n   /* EVEX_W_0F383A_P_1 */\n   {\n     { \"vpbroadcastmw2d\",\t{ XM, MaskR }, 0 },\n   },\n-  /* EVEX_W_0F3840_P_2 */\n-  {\n-    { \"vpmulld\",\t{ XM, Vex, EXx }, 0 },\n-    { \"vpmullq\",\t{ XM, Vex, EXx }, 0 },\n-  },\n   /* EVEX_W_0F3852_P_1 */\n   {\n     { \"vdpbf16ps\",\t{ XM, Vex, EXx }, 0 },\n@@ -547,11 +532,6 @@\n     { \"vpopcntb\",\t{ XM, EXx }, 0 },\n     { \"vpopcntw\",\t{ XM, EXx }, 0 },\n   },\n-  /* EVEX_W_0F3855_P_2 */\n-  {\n-    { \"vpopcntd\",\t{ XM, EXx }, 0 },\n-    { \"vpopcntq\",\t{ XM, EXx }, 0 },\n-  },\n   /* EVEX_W_0F3859_P_2 */\n   {\n     { \"vbroadcasti32x2\",\t{ XM, EXxmm_mq }, 0 },\n@@ -582,21 +562,11 @@\n     { \"vpblendmb\",\t{ XM, Vex, EXx }, 0 },\n     { \"vpblendmw\",\t{ XM, Vex, EXx }, 0 },\n   },\n-  /* EVEX_W_0F3868_P_3 */\n-  {\n-    { \"vp2intersectd\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n-    { \"vp2intersectq\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n-  },\n   /* EVEX_W_0F3870_P_2 */\n   {\n     { Bad_Opcode },\n     { \"vpshldvw\",  { XM, Vex, EXx }, 0 },\n   },\n-  /* EVEX_W_0F3871_P_2 */\n-  {\n-    { \"vpshldvd\",  { XM, Vex, EXx }, 0 },\n-    { \"vpshldvq\",  { XM, Vex, EXx }, 0 },\n-  },\n   /* EVEX_W_0F3872_P_1 */\n   {\n     { \"vcvtneps2bf16%XY\", { XMxmmq, EXx }, 0 },\n@@ -612,11 +582,6 @@\n     { \"vcvtne2ps2bf16\", { XM, Vex, EXx}, 0 },\n     { Bad_Opcode },\n   },\n-  /* EVEX_W_0F3873_P_2 */\n-  {\n-    { \"vpshrdvd\",  { XM, Vex, EXx }, 0 },\n-    { \"vpshrdvq\",  { XM, Vex, EXx }, 0 },\n-  },\n   /* EVEX_W_0F3875_P_2 */\n   {\n     { \"vpermi2b\",\t{ XM, Vex, EXx }, 0 },\n@@ -786,53 +751,13 @@\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A43_P_2_W_0) },\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A43_P_2_W_1) },\n   },\n-  /* EVEX_W_0F3A50_P_2 */\n-  {\n-    { \"vrangeps\",\t{ XM, Vex, EXx, EXxEVexS, Ib }, 0 },\n-    { \"vrangepd\",\t{ XM, Vex, EXx, EXxEVexS, Ib }, 0 },\n-  },\n-  /* EVEX_W_0F3A51_P_2 */\n-  {\n-    { \"vrangess\",\t{ XMScalar, VexScalar, EXxmm_md, EXxEVexS, Ib }, 0 },\n-    { \"vrangesd\",\t{ XMScalar, VexScalar, EXxmm_mq, EXxEVexS, Ib }, 0 },\n-  },\n-  /* EVEX_W_0F3A56_P_2 */\n-  {\n-    { \"vreduceps\",\t{ XM, EXx, EXxEVexS, Ib }, 0 },\n-    { \"vreducepd\",\t{ XM, EXx, EXxEVexS, Ib }, 0 },\n-  },\n-  /* EVEX_W_0F3A57_P_2 */\n-  {\n-    { \"vreducess\",\t{ XMScalar, VexScalar, EXxmm_md, EXxEVexS, Ib }, 0 },\n-    { \"vreducesd\",\t{ XMScalar, VexScalar, EXxmm_mq, EXxEVexS, Ib }, 0 },\n-  },\n-  /* EVEX_W_0F3A66_P_2 */\n-  {\n-    { \"vfpclassps%XZ\",\t{ XMask, EXx, Ib }, 0 },\n-    { \"vfpclasspd%XZ\",\t{ XMask, EXx, Ib }, 0 },\n-  },\n-  /* EVEX_W_0F3A67_P_2 */\n-  {\n-    { \"vfpclassss\",\t{ XMask, EXxmm_md, Ib }, 0 },\n-    { \"vfpclasssd\",\t{ XMask, EXxmm_mq, Ib }, 0 },\n-  },\n   /* EVEX_W_0F3A70_P_2 */\n   {\n     { Bad_Opcode },\n     { \"vpshldw\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n-  /* EVEX_W_0F3A71_P_2 */\n-  {\n-    { \"vpshldd\",   { XM, Vex, EXx, Ib }, 0 },\n-    { \"vpshldq\",   { XM, Vex, EXx, Ib }, 0 },\n-  },\n   /* EVEX_W_0F3A72_P_2 */\n   {\n     { Bad_Opcode },\n     { \"vpshrdw\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n-  /* EVEX_W_0F3A73_P_2 */\n-  {\n-    { \"vpshrdd\",   { XM, Vex, EXx, Ib }, 0 },\n-    { \"vpshrdq\",   { XM, Vex, EXx, Ib }, 0 },\n-  },"
    },
    {
      "sha": "0a5daa30bfdefd1626875639da25ed3a92dab068",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 48,
      "deletions": 102,
      "changes": 150,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/21a3faebba444c4d4d0e8f40c3a60cdfbb83c514/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=21a3faebba444c4d4d0e8f40c3a60cdfbb83c514",
      "patch": "@@ -2071,26 +2071,19 @@ enum\n   EVEX_W_0F3835_P_1,\n   EVEX_W_0F3835_P_2,\n   EVEX_W_0F3837_P_2,\n-  EVEX_W_0F3838_P_1,\n-  EVEX_W_0F3839_P_1,\n   EVEX_W_0F383A_P_1,\n-  EVEX_W_0F3840_P_2,\n   EVEX_W_0F3852_P_1,\n   EVEX_W_0F3854_P_2,\n-  EVEX_W_0F3855_P_2,\n   EVEX_W_0F3859_P_2,\n   EVEX_W_0F385A_P_2,\n   EVEX_W_0F385B_P_2,\n   EVEX_W_0F3862_P_2,\n   EVEX_W_0F3863_P_2,\n   EVEX_W_0F3866_P_2,\n-  EVEX_W_0F3868_P_3,\n   EVEX_W_0F3870_P_2,\n-  EVEX_W_0F3871_P_2,\n   EVEX_W_0F3872_P_1,\n   EVEX_W_0F3872_P_2,\n   EVEX_W_0F3872_P_3,\n-  EVEX_W_0F3873_P_2,\n   EVEX_W_0F3875_P_2,\n   EVEX_W_0F387A_P_2,\n   EVEX_W_0F387B_P_2,\n@@ -2127,16 +2120,8 @@ enum\n   EVEX_W_0F3A3F_P_2,\n   EVEX_W_0F3A42_P_2,\n   EVEX_W_0F3A43_P_2,\n-  EVEX_W_0F3A50_P_2,\n-  EVEX_W_0F3A51_P_2,\n-  EVEX_W_0F3A56_P_2,\n-  EVEX_W_0F3A57_P_2,\n-  EVEX_W_0F3A66_P_2,\n-  EVEX_W_0F3A67_P_2,\n   EVEX_W_0F3A70_P_2,\n-  EVEX_W_0F3A71_P_2,\n   EVEX_W_0F3A72_P_2,\n-  EVEX_W_0F3A73_P_2,\n };\n \n typedef void (*op_rtn) (int bytemode, int sizeflag);\n@@ -12626,17 +12611,18 @@ putop (const char *in_template, int sizeflag)\n   const char *p;\n   int alt = 0;\n   int cond = 1;\n-  unsigned int l = 0, len = 1;\n+  unsigned int l = 0, len = 0;\n   char last[4];\n \n-#define SAVE_LAST(c)\t\t\t\\\n-  if (l < len && l < sizeof (last))\t\\\n-    last[l++] = c;\t\t\t\\\n-  else\t\t\t\t\t\\\n-    abort ();\n-\n   for (p = in_template; *p; p++)\n     {\n+      if (len > l)\n+\t{\n+\t  if (l >= sizeof (last) || !ISUPPER (*p))\n+\t    abort ();\n+\t  last[l++] = *p;\n+\t  continue;\n+\t}\n       switch (*p)\n \t{\n \tdefault:\n@@ -12674,24 +12660,16 @@ putop (const char *in_template, int sizeflag)\n \t    *obufp++ = 'b';\n \t  break;\n \tcase 'B':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t    case_B:\n \t      if (intel_syntax)\n \t\tbreak;\n \t      if (sizeflag & SUFFIX_ALWAYS)\n \t\t*obufp++ = 'b';\n \t    }\n-\t  else\n+\t  else if (l == 1 && last[0] == 'L')\n \t    {\n-\t      if (l != 1\n-\t\t  || len != 2\n-\t\t  || last[0] != 'L')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n-\n \t      if (address_mode == mode_64bit\n \t\t  && !(prefixes & PREFIX_ADDR))\n \t\t{\n@@ -12702,6 +12680,8 @@ putop (const char *in_template, int sizeflag)\n \n \t      goto case_B;\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'C':\n \t  if (intel_syntax && !alt)\n@@ -12793,13 +12773,10 @@ putop (const char *in_template, int sizeflag)\n \t    *obufp++ = 'd';\n \t  break;\n \tcase 'Z':\n-\t  if (l != 0 || len != 1)\n+\t  if (l != 0)\n \t    {\n-\t      if (l != 1 || len != 2 || last[0] != 'X')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n+\t      if (l != 1 || last[0] != 'X')\n+\t\tabort ();\n \t      if (!need_vex || !vex.evex)\n \t\tabort ();\n \t      if (intel_syntax\n@@ -12831,11 +12808,8 @@ putop (const char *in_template, int sizeflag)\n \t  /* Fall through.  */\n \t  goto case_L;\n \tcase 'L':\n-\t  if (l != 0 || len != 1)\n-\t    {\n-\t      SAVE_LAST (*p);\n-\t      break;\n-\t    }\n+\t  if (l != 0)\n+\t    abort ();\n \tcase_L:\n \t  if (intel_syntax)\n \t    break;\n@@ -12883,7 +12857,7 @@ putop (const char *in_template, int sizeflag)\n \t  /* Fall through.  */\n \t  goto case_P;\n \tcase 'P':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t    case_P:\n \t      if (intel_syntax)\n@@ -12914,14 +12888,8 @@ putop (const char *in_template, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n-\t  else\n+\t  else if (l == 1 && last[0] == 'L')\n \t    {\n-\t      if (l != 1 || len != 2 || last[0] != 'L')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n-\n \t      if ((prefixes & PREFIX_DATA)\n \t\t  || (rex & REX_W)\n \t\t  || (sizeflag & SUFFIX_ALWAYS))\n@@ -12939,6 +12907,8 @@ putop (const char *in_template, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'U':\n \t  if (intel_syntax)\n@@ -12953,7 +12923,7 @@ putop (const char *in_template, int sizeflag)\n \t  /* Fall through.  */\n \t  goto case_Q;\n \tcase 'Q':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t    case_Q:\n \t      if (intel_syntax && !alt)\n@@ -12973,13 +12943,8 @@ putop (const char *in_template, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n-\t  else\n+\t  else if (l == 1 && last[0] == 'L')\n \t    {\n-\t      if (l != 1 || len != 2 || last[0] != 'L')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n \t      if ((intel_syntax && need_modrm)\n \t\t  || (modrm.mod == 3 && !(sizeflag & SUFFIX_ALWAYS)))\n \t\tbreak;\n@@ -12992,6 +12957,8 @@ putop (const char *in_template, int sizeflag)\n \t\t      || (sizeflag & SUFFIX_ALWAYS))\n \t\t*obufp++ = intel_syntax? 'd' : 'l';\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'R':\n \t  USED_REX (REX_W);\n@@ -13013,7 +12980,7 @@ putop (const char *in_template, int sizeflag)\n \t    used_prefixes |= (prefixes & PREFIX_DATA);\n \t  break;\n \tcase 'V':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t      if (intel_syntax)\n \t\tbreak;\n@@ -13025,27 +12992,21 @@ putop (const char *in_template, int sizeflag)\n \t\t  break;\n \t\t}\n \t    }\n-\t  else\n+\t  else if (l == 1 && last[0] == 'L')\n \t    {\n-\t      if (l != 1\n-\t\t  || len != 2\n-\t\t  || last[0] != 'L')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n-\n \t      if (rex & REX_W)\n \t\t{\n \t\t  *obufp++ = 'a';\n \t\t  *obufp++ = 'b';\n \t\t  *obufp++ = 's';\n \t\t}\n \t    }\n+\t  else\n+\t    abort ();\n \t  /* Fall through.  */\n \t  goto case_S;\n \tcase 'S':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t    case_S:\n \t      if (intel_syntax)\n@@ -13064,16 +13025,8 @@ putop (const char *in_template, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n-\t  else\n+\t  else if (l == 1 && last[0] == 'L')\n \t    {\n-\t      if (l != 1\n-\t\t  || len != 2\n-\t\t  || last[0] != 'L')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n-\n \t      if (address_mode == mode_64bit\n \t\t  && !(prefixes & PREFIX_ADDR))\n \t\t{\n@@ -13084,13 +13037,12 @@ putop (const char *in_template, int sizeflag)\n \n \t      goto case_S;\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'X':\n-\t  if (l != 0 || len != 1)\n-\t    {\n-\t      SAVE_LAST (*p);\n-\t      break;\n-\t    }\n+\t  if (l != 0)\n+\t    abort ();\n \t  if (need_vex\n \t      ? vex.prefix == DATA_PREFIX_OPCODE\n \t      : prefixes & PREFIX_DATA)\n@@ -13102,15 +13054,8 @@ putop (const char *in_template, int sizeflag)\n \t    *obufp++ = 's';\n \t  break;\n \tcase 'Y':\n-\t  if (l == 0 && len == 1)\n-\t    abort ();\n-\t  else\n+\t  if (l == 1 && last[0] == 'X')\n \t    {\n-\t      if (l != 1 || len != 2 || last[0] != 'X')\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n \t      if (!need_vex)\n \t\tabort ();\n \t      if (intel_syntax\n@@ -13130,9 +13075,11 @@ putop (const char *in_template, int sizeflag)\n \t\t    abort ();\n \t\t}\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase 'W':\n-\t  if (l == 0 && len == 1)\n+\t  if (l == 0)\n \t    {\n \t      /* operand size flag for cwtl, cbtw */\n \t      USED_REX (REX_W);\n@@ -13150,23 +13097,19 @@ putop (const char *in_template, int sizeflag)\n \t      if (!(rex & REX_W))\n \t\tused_prefixes |= (prefixes & PREFIX_DATA);\n \t    }\n-\t  else\n+\t  else if (l == 1)\n \t    {\n-\t      if (l != 1\n-\t\t  || len != 2\n-\t\t  || (last[0] != 'X'\n-\t\t      && last[0] != 'L'))\n-\t\t{\n-\t\t  SAVE_LAST (*p);\n-\t\t  break;\n-\t\t}\n \t      if (!need_vex)\n \t\tabort ();\n \t      if (last[0] == 'X')\n \t\t*obufp++ = vex.w ? 'd': 's';\n-\t      else\n+\t      else if (last[0] == 'L')\n \t\t*obufp++ = vex.w ? 'q': 'd';\n+\t      else\n+\t\tabort ();\n \t    }\n+\t  else\n+\t    abort ();\n \t  break;\n \tcase '^':\n \t  if (intel_syntax)\n@@ -13201,6 +13144,9 @@ putop (const char *in_template, int sizeflag)\n \t    }\n \t  break;\n \t}\n+\n+      if (len == l)\n+\tlen = l = 0;\n     }\n   *obufp = 0;\n   mnemonicendp = obufp;"
    }
  ]
}