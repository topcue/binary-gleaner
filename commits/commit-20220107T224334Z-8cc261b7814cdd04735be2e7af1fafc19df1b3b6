{
  "sha": "8cc261b7814cdd04735be2e7af1fafc19df1b3b6",
  "node_id": "C_kwDOANOeidoAKDhjYzI2MWI3ODE0Y2RkMDQ3MzViZTJlN2FmMWZhZmMxOWRmMWIzYjY",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-11-21T15:22:49Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2022-01-07T22:43:34Z"
    },
    "message": "gdb/testsuite: Remove duplicates from gdb.base/call-signal-resume.exp\n\nWhen running the testsuite, I\u00a0have:\n\n    Running .../gdb/testsuite/gdb.base/call-signal-resume.exp ...\n    DUPLICATE: gdb.base/call-signal-resume.exp: dummy stack frame number\n    DUPLICATE: gdb.base/call-signal-resume.exp: set confirm off\n    DUPLICATE: gdb.base/call-signal-resume.exp: return\n\nThis is due to the fact that a pattern was probably copy/pasted to\nre-use the logic while not adjusting the test names to avoid the\nduplication.\n\nFix by removing the redundant tests ('set confirm off' only needs to be\nused once) and adjusting the test names where appropriate.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "2c3f9aace9c1240195cb28456521086bdf51d715",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2c3f9aace9c1240195cb28456521086bdf51d715"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8cc261b7814cdd04735be2e7af1fafc19df1b3b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cc261b7814cdd04735be2e7af1fafc19df1b3b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8cc261b7814cdd04735be2e7af1fafc19df1b3b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cc261b7814cdd04735be2e7af1fafc19df1b3b6/comments",
  "author": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "148ac50e89b66c1d7934f464195ba559f5cc8cd0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/148ac50e89b66c1d7934f464195ba559f5cc8cd0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/148ac50e89b66c1d7934f464195ba559f5cc8cd0"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 3,
    "deletions": 4
  },
  "files": [
    {
      "sha": "5b3f10504a2f861761d6362ce6d151bdeea07b5e",
      "filename": "gdb/testsuite/gdb.base/call-signal-resume.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8cc261b7814cdd04735be2e7af1fafc19df1b3b6/gdb/testsuite/gdb.base/call-signal-resume.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8cc261b7814cdd04735be2e7af1fafc19df1b3b6/gdb/testsuite/gdb.base/call-signal-resume.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/call-signal-resume.exp?ref=8cc261b7814cdd04735be2e7af1fafc19df1b3b6",
      "patch": "@@ -116,18 +116,17 @@ gdb_test \"call null_hand_call ()\" \"Breakpoint \\[0-9\\]*, null_hand_call.*\" \\\n \n set frame_number [get_dummy_frame_number]\n if { \"$frame_number\" == \"\" } {\n-    fail \"dummy stack frame number\"\n+    fail \"dummy stack frame number, two\"\n     setup_xfail \"*-*-*\"\n     # Need something.\n     set frame_number 0\n } else {\n-    pass \"dummy stack frame number\"\n+    pass \"dummy stack frame number, two\"\n }\n \n # Pop the dummy frame.\n gdb_test \"frame $frame_number\" \".*\"\n-gdb_test_no_output \"set confirm off\"\n-gdb_test \"return\" \"\"\n+gdb_test \"return\" \"\" \"return, two\"\n \n # Continue again, this time we should get to the signal handler.\n "
    }
  ]
}