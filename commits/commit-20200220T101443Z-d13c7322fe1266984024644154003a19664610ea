{
  "sha": "d13c7322fe1266984024644154003a19664610ea",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDEzYzczMjJmZTEyNjY5ODQwMjQ2NDQxNTQwMDNhMTk2NjQ2MTBlYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-17T00:10:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-02-20T10:14:43Z"
    },
    "message": "gdb: Allow more control over where to find python libraries\n\nThe motivation behind this commit is to make it easier to bundle the\nPython *.py library files with GDB when statically linking GDB against\nlibpython.  The Python files will be manually added into the GDB\ninstallation tree, and GDB should be able to find them at run-time.\nThe installation tree will look like this:\n\n  .\n  |-- bin/\n  |-- include/\n  |-- lib/\n  |   `-- python3.8/\n  `-- share/\n\nThe benefit here is that the entire installation tree can be bundled\ninto a single archive and copied to another machine with a different\nversion of Python installed, and GDB will still work, including its\nPython support.\n\nIn use the new configure options would be used something like this,\nfirst build and install a static Python library:\n\n  mkdir python\n  cd python\n  # Clone or download Python into a src/ directory.\n  mkdir build\n  export PYTHON_INSTALL_PATH=$PWD/install\n  cd build\n  ../src/configure --disable-shared --prefix=$PYTHON_INSTALL_PATH\n  make\n  make install\n\nNow build and install GDB:\n\n  mkdir binutils-gdb\n  cd binutils-gdb\n  # Clone or download GDB into a src/ directory.\n  mkdir build\n  export GDB_INSTALL_DIR=$PWD/install\n  cd build\n  ../src/configure \\\n      --prefix=$GDB_INSTALL_DIR \\\n      --with-python=$PYTHON_INSTALL_PATH/bin/python3 \\\n      --with-python-libdir=$GDB_INSTALL_DIR/lib\n  make all-gdb\n  make install-gdb\n\nFinally, copy the Python libraries into the GDB install:\n\n  cp -r $PYTHON_INSTALL_DIR/lib/python3.8/ $GDB_INSTALL_DIR/lib\n\nAfter this the Python src, build, and install directories are no\nlonger needed and can be deleted.\n\nIf the new --with-python-libdir option is not used then the existing\nbehaviour is left unchanged, GDB will look for the Python libraries in\nthe lib/ directory within the python path.  The concatenation of the\npython prefix and the string 'lib/' is now done at configure time,\nrather than at run time in GDB as it was previous, however, this was\nnever something that the user had dynamic control over, so there's no\nloss of functionality.\n\ngdb/ChangeLog:\n\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Add --with-python-libdir option.\n\t* main.c: Use WITH_PYTHON_LIBDIR.",
    "tree": {
      "sha": "1177c0438c9e3fe8741c5e7f3b561aba2ad7f9e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1177c0438c9e3fe8741c5e7f3b561aba2ad7f9e7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d13c7322fe1266984024644154003a19664610ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d13c7322fe1266984024644154003a19664610ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d13c7322fe1266984024644154003a19664610ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d13c7322fe1266984024644154003a19664610ea/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7445728b14851cb8535a6a9fa2995817dea2e60",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7445728b14851cb8535a6a9fa2995817dea2e60",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7445728b14851cb8535a6a9fa2995817dea2e60"
    }
  ],
  "stats": {
    "total": 99,
    "additions": 91,
    "deletions": 8
  },
  "files": [
    {
      "sha": "405eecf79b085d37228597a27f411dda708d1f81",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d13c7322fe1266984024644154003a19664610ea/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d13c7322fe1266984024644154003a19664610ea/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d13c7322fe1266984024644154003a19664610ea",
      "patch": "@@ -1,3 +1,10 @@\n+2020-02-20  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add --with-python-libdir option.\n+\t* main.c: Use WITH_PYTHON_LIBDIR.\n+\n 2020-02-19  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.c (general_symbol_info::compute_and_set_names): Use"
    },
    {
      "sha": "9c5c1ce834dbed189be88be5f3e11d886f3ee8d8",
      "filename": "gdb/config.in",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d13c7322fe1266984024644154003a19664610ea/gdb/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d13c7322fe1266984024644154003a19664610ea/gdb/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/config.in?ref=d13c7322fe1266984024644154003a19664610ea",
      "patch": "@@ -649,6 +649,10 @@\n /* Define as the return type of ptrace. */\n #undef PTRACE_TYPE_RET\n \n+/* Define if the python lib directory should be relocated when GDB is moved.\n+   */\n+#undef PYTHON_LIBDIR_RELOCATABLE\n+\n /* Define if the python directory should be relocated when GDB is moved. */\n #undef PYTHON_PATH_RELOCATABLE\n \n@@ -752,6 +756,10 @@\n /* Define if the PPC simulator is being linked in. */\n #undef WITH_PPC_SIM\n \n+/* Directory containing Python's standard libraries from --with-python-libdir.\n+   */\n+#undef WITH_PYTHON_LIBDIR\n+\n /* Define if --with-python provides a path, either directly or via\n    python-config.py --exec-prefix. */\n #undef WITH_PYTHON_PATH"
    },
    {
      "sha": "e6b5a510f6cec67bac744312d63308e179ea9afb",
      "filename": "gdb/configure",
      "status": "modified",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d13c7322fe1266984024644154003a19664610ea/gdb/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d13c7322fe1266984024644154003a19664610ea/gdb/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure?ref=d13c7322fe1266984024644154003a19664610ea",
      "patch": "@@ -890,6 +890,7 @@ with_mpfr\n with_libmpfr_prefix\n with_libmpfr_type\n with_python\n+with_python_libdir\n with_guile\n enable_source_highlight\n with_intel_pt\n@@ -1625,6 +1626,8 @@ Optional Packages:\n   --with-libmpfr-type=TYPE     type of library to search for (auto/static/shared)\n   --with-python[=PYTHON]  include python support\n                           (auto/yes/no/<python-program>)\n+  --with-python-libdir[=DIR]\n+                          search for python's libraries in DIR\n   --with-guile[=GUILE]    include guile support\n                           (auto/yes/no/<guile-version>/<pkg-config-program>)\n   --with-intel-pt         include Intel Processor Trace support (auto/yes/no)\n@@ -10665,6 +10668,21 @@ _ACEOF\n   fi\n fi\n \n+\n+# Check whether --with-python-libdir was given.\n+if test \"${with_python_libdir+set}\" = set; then :\n+  withval=$with_python_libdir;\n+else\n+\n+    # If no python libdir is specified then select one based on\n+    # python's prefix path.\n+    if test -n \"${python_prefix}\"; then\n+      with_python_libdir=${python_prefix}/lib\n+    fi\n+\n+fi\n+\n+\n if test \"${have_libpython}\" != no; then\n \n $as_echo \"#define HAVE_PYTHON 1\" >>confdefs.h\n@@ -10675,6 +10693,37 @@ $as_echo \"#define HAVE_PYTHON 1\" >>confdefs.h\n   CONFIG_INSTALL=\"$CONFIG_INSTALL install-python\"\n   ENABLE_CFLAGS=\"$ENABLE_CFLAGS \\$(SUBDIR_PYTHON_CFLAGS)\"\n \n+  if test -n \"${with_python_libdir}\"; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define WITH_PYTHON_LIBDIR \"${with_python_libdir}\"\n+_ACEOF\n+\n+\n+  if test \"x$exec_prefix\" = xNONE || test \"x$exec_prefix\" = 'x${prefix}'; then\n+     if test \"x$prefix\" = xNONE; then\n+     \ttest_prefix=/usr/local\n+     else\n+\ttest_prefix=$prefix\n+     fi\n+  else\n+     test_prefix=$exec_prefix\n+  fi\n+  value=0\n+  case ${with_python_libdir} in\n+     \"${test_prefix}\"|\"${test_prefix}/\"*|\\\n+\t'${exec_prefix}'|'${exec_prefix}/'*)\n+     value=1\n+     ;;\n+  esac\n+\n+cat >>confdefs.h <<_ACEOF\n+#define PYTHON_LIBDIR_RELOCATABLE $value\n+_ACEOF\n+\n+\n+  fi\n+\n   # Flags needed to compile Python code (taken from python-config --cflags).\n   # We cannot call python-config directly because it will output whatever was\n   # used when compiling the Python interpreter itself, including flags which"
    },
    {
      "sha": "a51c5eda6b59b33a9aa389d1416e12eb9e2264bd",
      "filename": "gdb/configure.ac",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d13c7322fe1266984024644154003a19664610ea/gdb/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d13c7322fe1266984024644154003a19664610ea/gdb/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/configure.ac?ref=d13c7322fe1266984024644154003a19664610ea",
      "patch": "@@ -890,6 +890,24 @@ else\n   fi\n fi\n \n+dnl Use --with-python-libdir to control where GDB looks for the Python\n+dnl libraries.\n+dnl\n+dnl If this is not given then the default will be based on the value\n+dnl passed to --with-python, which is in the python_prefix variable.\n+dnl If the --with-python option wasn't given then the default value in\n+dnl python_prefix is based on running the 'gdb/python/python-config\n+dnl --exec-prefix' script.\n+AC_ARG_WITH(python-libdir,\n+  AS_HELP_STRING([--with-python-libdir@<:@=DIR@:>@], [search for python's libraries in DIR]),\n+  [],[\n+    # If no python libdir is specified then select one based on\n+    # python's prefix path.\n+    if test -n \"${python_prefix}\"; then\n+      with_python_libdir=${python_prefix}/lib\n+    fi\n+  ])\n+\n if test \"${have_libpython}\" != no; then\n   AC_DEFINE(HAVE_PYTHON, 1, [Define if Python interpreter is being linked in.])\n   CONFIG_OBS=\"$CONFIG_OBS \\$(SUBDIR_PYTHON_OBS)\"\n@@ -898,6 +916,12 @@ if test \"${have_libpython}\" != no; then\n   CONFIG_INSTALL=\"$CONFIG_INSTALL install-python\"\n   ENABLE_CFLAGS=\"$ENABLE_CFLAGS \\$(SUBDIR_PYTHON_CFLAGS)\"\n \n+  if test -n \"${with_python_libdir}\"; then\n+    AC_DEFINE_UNQUOTED(WITH_PYTHON_LIBDIR, \"${with_python_libdir}\",\n+\t\t       [Directory containing Python's standard libraries from --with-python-libdir.])\n+    GDB_AC_DEFINE_RELOCATABLE(PYTHON_LIBDIR, [python lib], ${with_python_libdir})\n+  fi\n+\n   # Flags needed to compile Python code (taken from python-config --cflags).\n   # We cannot call python-config directly because it will output whatever was\n   # used when compiling the Python interpreter itself, including flags which"
    },
    {
      "sha": "a03ed8117ab6daca61c300b9031714102e86447b",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d13c7322fe1266984024644154003a19664610ea/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d13c7322fe1266984024644154003a19664610ea/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=d13c7322fe1266984024644154003a19664610ea",
      "patch": "@@ -575,14 +575,9 @@ captured_main_1 (struct captured_main_args *context)\n   gdb_datadir = relocate_gdb_directory (GDB_DATADIR,\n \t\t\t\t\tGDB_DATADIR_RELOCATABLE);\n \n-#ifdef WITH_PYTHON_PATH\n-  {\n-    /* For later use in helping Python find itself.  */\n-    char *tmp = concat (WITH_PYTHON_PATH, SLASH_STRING, \"lib\", (char *) NULL);\n-\n-    python_libdir = relocate_gdb_directory (tmp, PYTHON_PATH_RELOCATABLE);\n-    xfree (tmp);\n-  }\n+#ifdef WITH_PYTHON_LIBDIR\n+  python_libdir = relocate_gdb_directory (WITH_PYTHON_LIBDIR,\n+\t\t\t\t\t  PYTHON_LIBDIR_RELOCATABLE);\n #endif\n \n #ifdef RELOC_SRCDIR"
    }
  ]
}