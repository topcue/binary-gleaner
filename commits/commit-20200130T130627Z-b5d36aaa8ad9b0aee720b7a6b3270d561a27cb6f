{
  "sha": "b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjVkMzZhYWE4YWQ5YjBhZWU3MjBiN2E2YjMyNzBkNTYxYTI3Y2I2Zg==",
  "commit": {
    "author": {
      "name": "Jon Turney",
      "email": "jon.turney@dronecode.org.uk",
      "date": "2020-01-15T17:03:48Z"
    },
    "committer": {
      "name": "Jon Turney",
      "email": "jon.turney@dronecode.org.uk",
      "date": "2020-01-30T13:06:27Z"
    },
    "message": "Identify reproducible builds in 'objdump -p' output for PE files\n\nThese are produced by MSVC when the '/Brepro' flag is used.\n\nTo quote from the PE specification [1]:\n\n\"The presence of an entry of type IMAGE_DEBUG_TYPE_REPRO indicates the\nPE file is built in a way to achieve determinism or reproducibility. If\nthe input does not change, the output PE file is guaranteed to be\nbit-for-bit identical no matter when or where the PE is produced.\nVarious date/time stamp fields in the PE file are filled with part or\nall the bits from a calculated hash value that uses PE file content as\ninput, and therefore no longer represent the actual date and time when a\nPE file or related specific data within the PE is produced. The raw data\nof this debug entry may be empty, or may contain a calculated hash value\npreceded by a four-byte value that represents the hash value length.\"\n\n[1] https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n\nbfd/ChangeLog:\n\n2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n\n\t* peXXigen.c (pe_is_repro): New function.\n\t(_bfd_XX_print_private_bfd_data_common): Note timestamp is\n\tactually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.",
    "tree": {
      "sha": "7c7a97fac1c81463e4494077c15cd5ed8e5882fe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7c7a97fac1c81463e4494077c15cd5ed8e5882fe"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABAgAGBQJeMtTTAAoJEMfIbwNwKFyBGrIP/36XoNYKvnV6e7yAi6WrF1pu\nW9SlXzKSwFGg9S5c3iBYih1bbYLWq41r2/3QFJp0qjD9vMBioYKINzxr85D/GzB+\ntO1rZ+WmhtoMXdh8LfFPXplsFP2qrgxDAqeVu2ipSeeYAhVcPfplfCeCvLwBIoYd\n2V6xwutrhVQNSOyEv1qfQxBKBTPtlph36zfLxZJsl4CWlCAaEBOdXVotTfr2q06j\nnQdlgTDMd/Zo3DSw6GdVGDJq3sSwAtnwbr+eJxmZDBXXgoSyG1Dho9Y1IoiJdUmZ\n5ueibLtK973f9gtUVakXjm7lbKlB9ePKhL0ob0crRPw4pfNTWKKOfyvR9gS6isrK\nhyAxVytjEPJXcZ+++KuRd57LLDBOvCNDMMr+y2Qyo7rPREUVJGfjxwmcKLz/OjxE\nKD4ozvt9qEl+oETMJUIdeHvJcWXfP4xDEDhktxVc7rh3ZegRyG6wTP1RVrgOqnoX\nwdx/fj6B9yxXm0aSvb4U+Sn2yFLQuMEL1RknilMPzXimmxI2iJyEfqlTY9DevZJm\nKQ9opM4a8uDoFABnU/PKBBoNNDqOEVhwppQ/Eg/pN1zOnxkRg4FB0ABb9jI8cCb/\nNOLyJ0JhHsB3HDfcxiyKfPbItgLOfMZt+GoRMVX6fnxh08YJLG8vs9v82Jz+8/b3\nY7p5U5kETmyUq9pR0jT1\n=fwGJ\n-----END PGP SIGNATURE-----",
      "payload": "tree 7c7a97fac1c81463e4494077c15cd5ed8e5882fe\nparent 1957ab1030b40939544c88c1c4eb1b8a62bd0b5d\nauthor Jon Turney <jon.turney@dronecode.org.uk> 1579107828 +0000\ncommitter Jon Turney <jon.turney@dronecode.org.uk> 1580389587 +0000\n\nIdentify reproducible builds in 'objdump -p' output for PE files\n\nThese are produced by MSVC when the '/Brepro' flag is used.\n\nTo quote from the PE specification [1]:\n\n\"The presence of an entry of type IMAGE_DEBUG_TYPE_REPRO indicates the\nPE file is built in a way to achieve determinism or reproducibility. If\nthe input does not change, the output PE file is guaranteed to be\nbit-for-bit identical no matter when or where the PE is produced.\nVarious date/time stamp fields in the PE file are filled with part or\nall the bits from a calculated hash value that uses PE file content as\ninput, and therefore no longer represent the actual date and time when a\nPE file or related specific data within the PE is produced. The raw data\nof this debug entry may be empty, or may contain a calculated hash value\npreceded by a four-byte value that represents the hash value length.\"\n\n[1] https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n\nbfd/ChangeLog:\n\n2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n\n\t* peXXigen.c (pe_is_repro): New function.\n\t(_bfd_XX_print_private_bfd_data_common): Note timestamp is\n\tactually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.\n"
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f/comments",
  "author": {
    "login": "jon-turney",
    "id": 3497232,
    "node_id": "MDQ6VXNlcjM0OTcyMzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3497232?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jon-turney",
    "html_url": "https://github.com/jon-turney",
    "followers_url": "https://api.github.com/users/jon-turney/followers",
    "following_url": "https://api.github.com/users/jon-turney/following{/other_user}",
    "gists_url": "https://api.github.com/users/jon-turney/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jon-turney/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jon-turney/subscriptions",
    "organizations_url": "https://api.github.com/users/jon-turney/orgs",
    "repos_url": "https://api.github.com/users/jon-turney/repos",
    "events_url": "https://api.github.com/users/jon-turney/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jon-turney/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jon-turney",
    "id": 3497232,
    "node_id": "MDQ6VXNlcjM0OTcyMzI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3497232?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jon-turney",
    "html_url": "https://github.com/jon-turney",
    "followers_url": "https://api.github.com/users/jon-turney/followers",
    "following_url": "https://api.github.com/users/jon-turney/following{/other_user}",
    "gists_url": "https://api.github.com/users/jon-turney/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jon-turney/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jon-turney/subscriptions",
    "organizations_url": "https://api.github.com/users/jon-turney/orgs",
    "repos_url": "https://api.github.com/users/jon-turney/repos",
    "events_url": "https://api.github.com/users/jon-turney/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jon-turney/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1957ab1030b40939544c88c1c4eb1b8a62bd0b5d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1957ab1030b40939544c88c1c4eb1b8a62bd0b5d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1957ab1030b40939544c88c1c4eb1b8a62bd0b5d"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 86,
    "deletions": 5
  },
  "files": [
    {
      "sha": "30766c113e3fd4ba2e679558b777431875f9499d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n+\n+\t* peXXigen.c (pe_is_repro): New function.\n+\t(_bfd_XX_print_private_bfd_data_common): Note timestamp is\n+\tactually a build hash if PE_IMAGE_DEBUG_TYPE_REPRO is present.\n+\n 2020-01-16  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* peXXigen.c (debug_type_names): Add names for new debug data type"
    },
    {
      "sha": "d9bf0e46236e84472a213a8c3a9b27dd80d69bc1",
      "filename": "bfd/peXXigen.c",
      "status": "modified",
      "additions": 80,
      "deletions": 5,
      "changes": 85,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f/bfd/peXXigen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f/bfd/peXXigen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/peXXigen.c?ref=b5d36aaa8ad9b0aee720b7a6b3270d561a27cb6f",
      "patch": "@@ -2746,6 +2746,71 @@ pe_print_debugdata (bfd * abfd, void * vfile)\n   return TRUE;\n }\n \n+static bfd_boolean\n+pe_is_repro (bfd * abfd)\n+{\n+  pe_data_type *pe = pe_data (abfd);\n+  struct internal_extra_pe_aouthdr *extra = &pe->pe_opthdr;\n+  asection *section;\n+  bfd_byte *data = 0;\n+  bfd_size_type dataoff;\n+  unsigned int i;\n+  bfd_boolean res = FALSE;\n+\n+  bfd_vma addr = extra->DataDirectory[PE_DEBUG_DATA].VirtualAddress;\n+  bfd_size_type size = extra->DataDirectory[PE_DEBUG_DATA].Size;\n+\n+  if (size == 0)\n+    return FALSE;\n+\n+  addr += extra->ImageBase;\n+  for (section = abfd->sections; section != NULL; section = section->next)\n+    {\n+      if ((addr >= section->vma) && (addr < (section->vma + section->size)))\n+\tbreak;\n+    }\n+\n+  if ((section == NULL)\n+      || (!(section->flags & SEC_HAS_CONTENTS))\n+      || (section->size < size))\n+    {\n+      return FALSE;\n+    }\n+\n+  dataoff = addr - section->vma;\n+\n+  if (size > (section->size - dataoff))\n+    {\n+      return FALSE;\n+    }\n+\n+  if (!bfd_malloc_and_get_section (abfd, section, &data))\n+    {\n+      if (data != NULL)\n+\tfree (data);\n+      return FALSE;\n+    }\n+\n+  for (i = 0; i < size / sizeof (struct external_IMAGE_DEBUG_DIRECTORY); i++)\n+    {\n+      struct external_IMAGE_DEBUG_DIRECTORY *ext\n+\t= &((struct external_IMAGE_DEBUG_DIRECTORY *)(data + dataoff))[i];\n+      struct internal_IMAGE_DEBUG_DIRECTORY idd;\n+\n+      _bfd_XXi_swap_debugdir_in (abfd, ext, &idd);\n+\n+      if (idd.Type == PE_IMAGE_DEBUG_TYPE_REPRO)\n+        {\n+          res = TRUE;\n+          break;\n+        }\n+    }\n+\n+  free(data);\n+\n+  return res;\n+}\n+\n /* Print out the program headers.  */\n \n bfd_boolean\n@@ -2777,11 +2842,21 @@ _bfd_XX_print_private_bfd_data_common (bfd * abfd, void * vfile)\n   PF (IMAGE_FILE_BYTES_REVERSED_HI, \"big endian\");\n #undef PF\n \n-  /* ctime implies '\\n'.  */\n-  {\n-    time_t t = pe->coff.timestamp;\n-    fprintf (file, \"\\nTime/Date\\t\\t%s\", ctime (&t));\n-  }\n+  /*\n+    If a PE_IMAGE_DEBUG_TYPE_REPRO entry is present in the debug directory, the\n+    timestamp is to be interpreted as the hash of a reproducible build.\n+  */\n+  if (pe_is_repro (abfd))\n+    {\n+      fprintf (file, \"\\nTime/Date\\t\\t%08lx\", pe->coff.timestamp);\n+      fprintf (file, \"\\t(This is a reproducible build file hash, not a timestamp)\\n\");\n+    }\n+  else\n+    {\n+      /* ctime implies '\\n'.  */\n+      time_t t = pe->coff.timestamp;\n+      fprintf (file, \"\\nTime/Date\\t\\t%s\", ctime (&t));\n+    }\n \n #ifndef IMAGE_NT_OPTIONAL_HDR_MAGIC\n # define IMAGE_NT_OPTIONAL_HDR_MAGIC 0x10b"
    }
  ]
}