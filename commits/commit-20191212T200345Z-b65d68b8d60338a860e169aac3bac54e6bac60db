{
  "sha": "b65d68b8d60338a860e169aac3bac54e6bac60db",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY1ZDY4YjhkNjAzMzhhODYwZTE2OWFhYzNiYWM1NGU2YmFjNjBkYg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-12-12T19:54:31Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-12-12T20:03:45Z"
    },
    "message": "gas: Add md_generic_table_relax_frag\n\nAdd md_generic_table_relax_frag for TC_GENERIC_RELAX_TABLE targets so\nthat a backend can extend relax_frag beyond TC_GENERIC_RELAX_TABLE.\n\n\t* write.c (md_generic_table_relax_frag): New.  Defined to\n\trelax_frag if not defined.\n\t(relax_segment): Call md_generic_table_relax_frag instead of\n\trelax_frag.",
    "tree": {
      "sha": "9bd5fc4ee054a924acffb61f3a6a557d2abd4f63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9bd5fc4ee054a924acffb61f3a6a557d2abd4f63"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b65d68b8d60338a860e169aac3bac54e6bac60db",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b65d68b8d60338a860e169aac3bac54e6bac60db",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b65d68b8d60338a860e169aac3bac54e6bac60db",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b65d68b8d60338a860e169aac3bac54e6bac60db/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7190276c52b9d86a52aae73d3a0f8b56e7a1f4f1"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 18,
    "deletions": 1
  },
  "files": [
    {
      "sha": "ef7369cee9efa04192ee82522cdd74292423cdb0",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=b65d68b8d60338a860e169aac3bac54e6bac60db",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* write.c (md_generic_table_relax_frag): New.  Defined to\n+\trelax_frag if not defined.\n+\t(relax_segment): Call md_generic_table_relax_frag instead of\n+\trelax_frag.\n+\n 2019-12-12  Alan Modra  <amodra@gmail.com>\n \n \t* config/tc-aarch64.c (get_aarch64_insn): Avoid signed overflow."
    },
    {
      "sha": "cb86b5b3629ec64a48b3b2d21bd464e49b73fa4f",
      "filename": "gas/doc/internals.texi",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/doc/internals.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/doc/internals.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/internals.texi?ref=b65d68b8d60338a860e169aac3bac54e6bac60db",
      "patch": "@@ -1210,6 +1210,11 @@ If you do not define @code{md_relax_frag}, you may define\n machine independent code knows how to use such a table to relax PC relative\n references.  See @file{tc-m68k.c} for an example.  @xref{Relaxation}.\n \n+@item md_generic_table_relax_frag\n+@cindex md_generic_table_relax_frag\n+If defined, it is a C statement that is invoked, instead of\n+the default implementation, to scan @code{TC_GENERIC_RELAX_TABLE}.\n+\n @item md_prepare_relax_scan\n @cindex md_prepare_relax_scan\n If defined, it is a C statement that is invoked prior to scanning"
    },
    {
      "sha": "d2bdb7acdf731aa343fb84f3a1dced524164f406",
      "filename": "gas/write.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b65d68b8d60338a860e169aac3bac54e6bac60db/gas/write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/write.c?ref=b65d68b8d60338a860e169aac3bac54e6bac60db",
      "patch": "@@ -2481,6 +2481,10 @@ write_object_file (void)\n }\n \n #ifdef TC_GENERIC_RELAX_TABLE\n+#ifndef md_generic_table_relax_frag\n+#define md_generic_table_relax_frag relax_frag\n+#endif\n+\n /* Relax a fragment by scanning TC_GENERIC_RELAX_TABLE.  */\n \n long\n@@ -3031,7 +3035,8 @@ relax_segment (struct frag *segment_frag_root, segT segment, int pass)\n #ifdef TC_GENERIC_RELAX_TABLE\n \t\t/* The default way to relax a frag is to look through\n \t\t   TC_GENERIC_RELAX_TABLE.  */\n-\t\tgrowth = relax_frag (segment, fragP, stretch);\n+\t\tgrowth = md_generic_table_relax_frag (segment, fragP,\n+\t\t\t\t\t\t      stretch);\n #endif /* TC_GENERIC_RELAX_TABLE  */\n #endif\n \t\tbreak;"
    }
  ]
}