{
  "sha": "6655dba246bd164d953fe220a0e3d4eed85bb268",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjY1NWRiYTI0NmJkMTY0ZDk1M2ZlMjIwYTBlM2Q0ZWVkODViYjI2OA==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-01-02T14:10:40Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-02T14:14:59Z"
    },
    "message": "Add support for the GBZ80, Z180, and eZ80 variants of the Z80 architecure.  Add an ELF based target for these as well.\n\n\tPR 25224\nbfd\t* Makefile.am: Add z80-elf target support.\n\t* configure.ac: Likewise.\n\t* targets.c: Likewise.\n\t* config.bfd: Add z80-elf target support and new arches: ez80 and z180.\n\t* elf32-z80.c: New file.\n\t* archures.c: Add new z80 architectures: eZ80 and Z180.\n\t* coffcode.h: Likewise.\n\t* cpu-z80.c: Likewise.\n\t* bfd-in2.h: Likewise plus additional Z80 relocations.\n\t* coff-z80.c: Add new relocations for Z80 target and local label check.\n\ngas\t* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add support\n\tfor assembler code generated by SDCC. Add new relocation types. Add\n\tz80-elf target support.\n\t* config/tc-z80.h: Add z80-elf target support. Enable dollar local\n\tlabels. Local labels starts from \".L\".\n\t* testsuite/gas/all/fwdexp.d: Fix failure due to symbol conflict.\n\t* testsuite/gas/all/fwdexp.s: Likewise.\n\t* testsuite/gas/z80/suffix.d: Fix failure on ELF target.\n\t* testsuite/gas/z80/z80.exp: Add new tests\n\t* testsuite/gas/z80/dollar.d: New file.\n\t* testsuite/gas/z80/dollar.s: New file.\n\t* testsuite/gas/z80/ez80_adl_all.d: New file.\n\t* testsuite/gas/z80/ez80_adl_all.s: New file.\n\t* testsuite/gas/z80/ez80_adl_suf.d: New file.\n\t* testsuite/gas/z80/ez80_isuf.s: New file.\n\t* testsuite/gas/z80/ez80_z80_all.d: New file.\n\t* testsuite/gas/z80/ez80_z80_all.s: New file.\n\t* testsuite/gas/z80/ez80_z80_suf.d: New file.\n\t* testsuite/gas/z80/r800_extra.d: New file.\n\t* testsuite/gas/z80/r800_extra.s: New file.\n\t* testsuite/gas/z80/r800_ii8.d: New file.\n\t* testsuite/gas/z80/r800_z80_doc.d: New file.\n\t* testsuite/gas/z80/z180.d: New file.\n\t* testsuite/gas/z80/z180.s: New file.\n\t* testsuite/gas/z80/z180_z80_doc.d: New file.\n\t* testsuite/gas/z80/z80_doc.d: New file.\n\t* testsuite/gas/z80/z80_doc.s: New file.\n\t* testsuite/gas/z80/z80_ii8.d: New file.\n\t* testsuite/gas/z80/z80_ii8.s: New file.\n\t* testsuite/gas/z80/z80_in_f_c.d: New file.\n\t* testsuite/gas/z80/z80_in_f_c.s: New file.\n\t* testsuite/gas/z80/z80_op_ii_ld.d: New file.\n\t* testsuite/gas/z80/z80_op_ii_ld.s: New file.\n\t* testsuite/gas/z80/z80_out_c_0.d: New file.\n\t* testsuite/gas/z80/z80_out_c_0.s: New file.\n\t* testsuite/gas/z80/z80_reloc.d: New file.\n\t* testsuite/gas/z80/z80_reloc.s: New file.\n\t* testsuite/gas/z80/z80_sli.d: New file.\n\t* testsuite/gas/z80/z80_sli.s: New file.\n\nld\t* Makefile.am: Add new target z80-elf\n\t* configure.tgt: Likewise.\n\t* emultempl/z80.em: Add support for eZ80 and Z180 architectures.\n\t* emulparams/elf32z80.sh: New file.\n\t* emultempl/z80elf.em: Likewise.\n\t* testsuite/ld-z80/arch_ez80_adl.d: Likewise.\n\t* testsuite/ld-z80/arch_ez80_z80.d: Likewise.\n\t* testsuite/ld-z80/arch_r800.d: Likewise.\n\t* testsuite/ld-z80/arch_z180.d: Likewise.\n\t* testsuite/ld-z80/arch_z80.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.\n\t* testsuite/ld-z80/comb_arch_z180.d: Likewise.\n\t* testsuite/ld-z80/labels.s: Likewise.\n\t* testsuite/ld-z80/relocs.s: Likewise.\n\t* testsuite/ld-z80/relocs_b_ez80.d: Likewise.\n\t* testsuite/ld-z80/relocs_b_z80.d: Likewise.\n\t* testsuite/ld-z80/relocs_f_z80.d: Likewise.\n\t* testsuite/ld-z80/z80.exp: Likewise.\n\nopcodes\t* z80-dis.c: Add support for eZ80 and Z80 instructions.",
    "tree": {
      "sha": "423258b5dadb447dc649e71c6ce48aaeed8ba385",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/423258b5dadb447dc649e71c6ce48aaeed8ba385"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6655dba246bd164d953fe220a0e3d4eed85bb268",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6655dba246bd164d953fe220a0e3d4eed85bb268",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6655dba246bd164d953fe220a0e3d4eed85bb268",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6655dba246bd164d953fe220a0e3d4eed85bb268/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0db131fb835e4c4f6a024e86743467e7e01c965e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0db131fb835e4c4f6a024e86743467e7e01c965e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0db131fb835e4c4f6a024e86743467e7e01c965e"
    }
  ],
  "stats": {
    "total": 35668,
    "additions": 24334,
    "deletions": 11334
  },
  "files": [
    {
      "sha": "0ff109c5c1b6617982a8dcd1c6b1317ee1c86b40",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,22 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* Makefile.am: Add z80-elf target support.\n+\t* configure.ac: Likewise.\n+\t* targets.c: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* config.bfd: Add z80-elf target support and new arches: ez80 and\n+\tz180.\n+\t* elf32-z80.c: New file.\n+\t* archures.c: Add new z80 architectures: eZ80 and Z180.\n+\t* coffcode.h: Likewise.\n+\t* cpu-z80.c: Likewise.\n+\t* coff-z80.c: Add new relocations for Z80 target and local label\n+\tcheck.\n+\t* reloc.c: Add new relocs.\n+\t* bfd-in2.h: Regenerate.\n+\t* libbfd.h: Regenerate.\n+\n 2020-01-02  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR 25210"
    },
    {
      "sha": "d32640a12c58af2265171b3571a359b7d6b2efed",
      "filename": "bfd/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.am?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -354,6 +354,7 @@ BFD32_BACKENDS = \\\n \telf32-xgate.lo \\\n \telf32-xstormy16.lo \\\n \telf32-xtensa.lo \\\n+\telf32-z80.lo \\\n \telf32.lo \\\n \telflink.lo \\\n \telfxx-sparc.lo \\\n@@ -489,6 +490,7 @@ BFD32_BACKENDS_CFILES = \\\n \telf32-xgate.c \\\n \telf32-xstormy16.c \\\n \telf32-xtensa.c \\\n+\telf32-z80.c \\\n \telf32.c \\\n \telflink.c \\\n \telfxx-sparc.c \\"
    },
    {
      "sha": "78555ccbbc20b1f6e4cb8ec35f666dfec0bba588",
      "filename": "bfd/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.in?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -779,6 +779,7 @@ BFD32_BACKENDS = \\\n \telf32-xgate.lo \\\n \telf32-xstormy16.lo \\\n \telf32-xtensa.lo \\\n+\telf32-z80.lo \\\n \telf32.lo \\\n \telflink.lo \\\n \telfxx-sparc.lo \\\n@@ -914,6 +915,7 @@ BFD32_BACKENDS_CFILES = \\\n \telf32-xgate.c \\\n \telf32-xstormy16.c \\\n \telf32-xtensa.c \\\n+\telf32-z80.c \\\n \telf32.c \\\n \telflink.c \\\n \telfxx-sparc.c \\\n@@ -1490,6 +1492,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-xgate.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-xstormy16.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-xtensa.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32-z80.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf32.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf64-aarch64.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/elf64-alpha.Plo@am__quote@"
    },
    {
      "sha": "232103817c1043eaa8aea7614ac28b5d0d493b5d",
      "filename": "bfd/archures.c",
      "status": "modified",
      "additions": 7,
      "deletions": 3,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/archures.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/archures.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/archures.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -505,9 +505,13 @@ DESCRIPTION\n .  bfd_arch_xtensa,    {* Tensilica's Xtensa cores.  *}\n .#define bfd_mach_xtensa\t1\n .  bfd_arch_z80,\n-.#define bfd_mach_z80strict\t1 {* No undocumented opcodes.  *}\n-.#define bfd_mach_z80\t\t3 {* With ixl, ixh, iyl, and iyh.  *}\n-.#define bfd_mach_z80full\t7 {* All undocumented instructions.  *}\n+.#define bfd_mach_gbz80         0 {* GameBoy Z80 (reduced instruction set) *}\n+.#define bfd_mach_z80strict\t1 {* Z80 without undocumented opcodes.  *}\n+.#define bfd_mach_z180          2 {* Z180: successor with additional instructions, but without halves of ix and iy *}\n+.#define bfd_mach_z80\t\t3 {* Z80 with ixl, ixh, iyl, and iyh.  *}\n+.#define bfd_mach_ez80_z80      4 {* eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode *}\n+.#define bfd_mach_ez80_adl      5 {* eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode *}\n+.#define bfd_mach_z80full\t7 {* Z80 with all undocumented instructions.  *}\n .#define bfd_mach_r800\t\t11 {* R800: successor with multiplication.  *}\n .  bfd_arch_lm32,      {* Lattice Mico32.  *}\n .#define bfd_mach_lm32\t\t1"
    },
    {
      "sha": "7c13bc8c91abf291f0206b6608b31955c5ea70d8",
      "filename": "bfd/bfd-in2.h",
      "status": "modified",
      "additions": 25,
      "deletions": 3,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/bfd-in2.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/bfd-in2.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd-in2.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1888,9 +1888,13 @@ enum bfd_architecture\n   bfd_arch_xtensa,    /* Tensilica's Xtensa cores.  */\n #define bfd_mach_xtensa        1\n   bfd_arch_z80,\n-#define bfd_mach_z80strict     1 /* No undocumented opcodes.  */\n-#define bfd_mach_z80           3 /* With ixl, ixh, iyl, and iyh.  */\n-#define bfd_mach_z80full       7 /* All undocumented instructions.  */\n+#define bfd_mach_gbz80         0 /* GameBoy Z80 (reduced instruction set) */\n+#define bfd_mach_z80strict     1 /* Z80 without undocumented opcodes.  */\n+#define bfd_mach_z180          2 /* Z180: successor with additional instructions, but without halves of ix and iy */\n+#define bfd_mach_z80           3 /* Z80 with ixl, ixh, iyl, and iyh.  */\n+#define bfd_mach_ez80_z80      4 /* eZ80 (successor of Z80 & Z180) in Z80 (16-bit address) mode */\n+#define bfd_mach_ez80_adl      5 /* eZ80 (successor of Z80 & Z180) in ADL (24-bit address) mode */\n+#define bfd_mach_z80full       7 /* Z80 with all undocumented instructions.  */\n #define bfd_mach_r800          11 /* R800: successor with multiplication.  */\n   bfd_arch_lm32,      /* Lattice Mico32.  */\n #define bfd_mach_lm32          1\n@@ -5270,6 +5274,24 @@ BFD_RELOC_XTENSA_ASM_EXPAND.  */\n /* 8 bit signed offset in (ix+d) or (iy+d).  */\n   BFD_RELOC_Z80_DISP8,\n \n+/* First 8 bits of multibyte (32, 24 or 16 bit) value.  */\n+  BFD_RELOC_Z80_BYTE0,\n+\n+/* Second 8 bits of multibyte (32, 24 or 16 bit) value.  */\n+  BFD_RELOC_Z80_BYTE1,\n+\n+/* Third 8 bits of multibyte (32 or 24 bit) value.  */\n+  BFD_RELOC_Z80_BYTE2,\n+\n+/* Fourth 8 bits of multibyte (32 bit) value.  */\n+  BFD_RELOC_Z80_BYTE3,\n+\n+/* Lowest 16 bits of multibyte (32 or 24 bit) value.  */\n+  BFD_RELOC_Z80_WORD0,\n+\n+/* Highest 16 bits of multibyte (32 or 24 bit) value.  */\n+  BFD_RELOC_Z80_WORD1,\n+\n /* DJNZ offset.  */\n   BFD_RELOC_Z8K_DISP7,\n "
    },
    {
      "sha": "bb519fd654d095273550476db996ea85d455b6c0",
      "filename": "bfd/coff-z80.c",
      "status": "modified",
      "additions": 269,
      "deletions": 93,
      "changes": 362,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/coff-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/coff-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-z80.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -26,39 +26,204 @@\n #include \"coff/z80.h\"\n #include \"coff/internal.h\"\n #include \"libcoff.h\"\n+#include \"libiberty.h\"\n \n #define COFF_DEFAULT_SECTION_ALIGNMENT_POWER 0\n \n-static reloc_howto_type r_imm32 =\n-HOWTO (R_IMM32, 0, 2, 32, FALSE, 0,\n-       complain_overflow_dont, 0, \"r_imm32\", TRUE, 0xffffffff, 0xffffffff,\n-       FALSE);\n+typedef struct {\n+  bfd_reloc_code_real_type r_type;\n+  reloc_howto_type howto;\n+} bfd_howto_type;\n \n-static reloc_howto_type r_imm24 =\n-HOWTO (R_IMM24, 0, 1, 24, FALSE, 0,\n-       complain_overflow_dont, 0, \"r_imm24\", TRUE, 0x00ffffff, 0x00ffffff,\n-       FALSE);\n-\n-static reloc_howto_type r_imm16 =\n-HOWTO (R_IMM16, 0, 1, 16, FALSE, 0,\n-       complain_overflow_dont, 0, \"r_imm16\", TRUE, 0x0000ffff, 0x0000ffff,\n-       FALSE);\n-\n-static reloc_howto_type r_imm8 =\n-HOWTO (R_IMM8, 0, 0, 8, FALSE, 0,\n-       complain_overflow_bitfield, 0, \"r_imm8\", TRUE, 0x000000ff, 0x000000ff,\n-       FALSE);\n-\n-static reloc_howto_type r_jr =\n-HOWTO (R_JR, 0, 0, 8, TRUE, 0,\n-       complain_overflow_signed, 0, \"r_jr\", FALSE, 0, 0xFF,\n-       FALSE);\n-\n-static reloc_howto_type r_off8 =\n-HOWTO (R_OFF8, 0, 0, 8, FALSE, 0,\n-       complain_overflow_signed, 0,\"r_off8\", FALSE, 0, 0xff,\n-       FALSE);\n+#define BFD_EMPTY_HOWTO(rt,x) {rt, EMPTY_HOWTO(x)}\n+#define BFD_HOWTO(rt,a,b,c,d,e,f,g,h,i,j,k,l,m) {rt, HOWTO(a,b,c,d,e,f,g,h,i,j,k,l,m)}\n \n+static bfd_howto_type howto_table[] =\n+{\n+  BFD_EMPTY_HOWTO (BFD_RELOC_NONE, 0),\n+\n+  BFD_HOWTO (BFD_RELOC_32,\n+     R_IMM32,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     2,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     32,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_bitfield, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_imm32\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0xffffffff,\t/* src_mask */\n+     0xffffffff,\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_24,\n+     R_IMM24,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     24,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_bitfield, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_imm24\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0x00ffffff,\t/* src_mask */\n+     0x00ffffff,\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_16,\n+     R_IMM16,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     16,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_bitfield, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_imm16\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0x0000ffff,\t/* src_mask */\n+     0x0000ffff,\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_8,\n+     R_IMM8,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_bitfield, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_imm8\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0x000000ff,\t/* src_mask */\n+     0x000000ff,\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_8_PCREL,\n+     R_JR,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     TRUE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_signed, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_jr\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xFF,\t\t/* dst_mask */\n+     TRUE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_DISP8,\n+     R_OFF8,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_signed, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_off8\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE0,\n+     R_BYTE0,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_byte0\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE1,\n+     R_BYTE1,\t\t/* type */\n+     8,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_byte1\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE2,\n+     R_BYTE2,\t\t/* type */\n+     16,\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_byte2\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE3,\n+     R_BYTE3,\t\t/* type */\n+     24,\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     8,\t\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_byte3\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_WORD0,\n+     R_WORD0,\t\t/* type */\n+     0,\t\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     16,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_word0\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xffff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_Z80_WORD1,\n+     R_WORD1,\t\t/* type */\n+     16,\t\t/* rightshift */\n+     0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+     16,\t\t/* bitsize */\n+     FALSE,\t\t/* pc_relative */\n+     0,\t\t\t/* bitpos */\n+     complain_overflow_dont, /* complain_on_overflow */\n+     0,\t\t\t/* special_function */\n+     \"r_word1\",\t\t/* name */\n+     FALSE,\t\t/* partial_inplace */\n+     0,\t\t\t/* src_mask */\n+     0xffff,\t\t/* dst_mask */\n+     FALSE),\t\t/* pcrel_offset */\n+};\n+\n+#define NUM_HOWTOS ARRAY_SIZE (howto_table)\n \n #define BADMAG(x) Z80BADMAG(x)\n #define Z80 1\t\t\t/* Customize coffcode.h.  */\n@@ -74,34 +239,19 @@ HOWTO (R_OFF8, 0, 0, 8, FALSE, 0,\n   dst->r_stuff[1] = 'C';\n \n /* Code to turn a r_type into a howto ptr, uses the above howto table.  */\n-\n static void\n rtype2howto (arelent *internal, struct internal_reloc *dst)\n {\n-  switch (dst->r_type)\n+  unsigned i;\n+  for (i = 0; i < NUM_HOWTOS; i++)\n     {\n-    default:\n-      internal->howto = NULL;\n-      break;\n-    case R_IMM8:\n-      internal->howto = &r_imm8;\n-      break;\n-    case R_IMM16:\n-      internal->howto = &r_imm16;\n-      break;\n-    case R_IMM24:\n-      internal->howto = &r_imm24;\n-      break;\n-    case R_IMM32:\n-      internal->howto = &r_imm32;\n-      break;\n-    case R_JR:\n-      internal->howto = &r_jr;\n-      break;\n-    case R_OFF8:\n-      internal->howto = &r_off8;\n-      break;\n+      if (howto_table[i].howto.type == dst->r_type)\n+        {\n+          internal->howto = &howto_table[i].howto;\n+          return;\n+        }\n     }\n+  internal->howto = NULL;\n }\n \n #define RTYPE2HOWTO(internal, relocentry) rtype2howto (internal, relocentry)\n@@ -110,35 +260,23 @@ static reloc_howto_type *\n coff_z80_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n \t\t\t    bfd_reloc_code_real_type code)\n {\n-  switch (code)\n-    {\n-    case BFD_RELOC_8:\t\treturn & r_imm8;\n-    case BFD_RELOC_16:\t\treturn & r_imm16;\n-    case BFD_RELOC_24:\t\treturn & r_imm24;\n-    case BFD_RELOC_32:\t\treturn & r_imm32;\n-    case BFD_RELOC_8_PCREL:\treturn & r_jr;\n-    case BFD_RELOC_Z80_DISP8:\treturn & r_off8;\n-    default:\t\t\tBFD_FAIL ();\n-      return NULL;\n-    }\n+  unsigned i;\n+  for (i = 0; i < NUM_HOWTOS; i++)\n+    if (howto_table[i].r_type == code)\n+      return &howto_table[i].howto;\n+\n+  BFD_FAIL ();\n+  return NULL;\n }\n \n static reloc_howto_type *\n coff_z80_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n \t\t\t    const char *r_name)\n {\n-  if (strcasecmp (r_imm8.name, r_name) == 0)\n-    return &r_imm8;\n-  if (strcasecmp (r_imm16.name, r_name) == 0)\n-    return &r_imm16;\n-  if (strcasecmp (r_imm24.name, r_name) == 0)\n-    return &r_imm24;\n-  if (strcasecmp (r_imm32.name, r_name) == 0)\n-    return &r_imm32;\n-  if (strcasecmp (r_jr.name, r_name) == 0)\n-    return &r_jr;\n-  if (strcasecmp (r_off8.name, r_name) == 0)\n-    return &r_off8;\n+  unsigned i;\n+  for (i = 0; i < NUM_HOWTOS; i++)\n+    if (strcasecmp(howto_table[i].howto.name, r_name) == 0)\n+      return &howto_table[i].howto;\n \n   return NULL;\n }\n@@ -180,14 +318,15 @@ extra_case (bfd *in_abfd,\n \t    unsigned int *dst_ptr)\n {\n   asection * input_section = link_order->u.indirect.section;\n-  int val;\n+  int val = bfd_coff_reloc16_get_value (reloc, link_info, input_section);\n \n   switch (reloc->howto->type)\n     {\n     case R_OFF8:\n-\tval = bfd_coff_reloc16_get_value (reloc, link_info,\n-\t\t\t\t\t   input_section);\n-\tif (val>127 || val<-128) /* Test for overflow.  */\n+      if (reloc->howto->partial_inplace)\n+        val += (signed char)(bfd_get_8 ( in_abfd, data+*src_ptr)\n+                             & reloc->howto->src_mask);\n+      if (val>127 || val<-128) /* Test for overflow.  */\n \t  (*link_info->callbacks->reloc_overflow)\n \t    (link_info, NULL, bfd_asymbol_name (*reloc->sym_ptr_ptr),\n \t     reloc->howto->name, reloc->addend, input_section->owner,\n@@ -198,51 +337,78 @@ extra_case (bfd *in_abfd,\n \t(*src_ptr) += 1;\n       break;\n \n+    case R_BYTE3:\n+      bfd_put_8 (in_abfd, val >> 24, data + *dst_ptr);\n+      (*dst_ptr) += 1;\n+      (*src_ptr) += 1;\n+      break;\n+\n+    case R_BYTE2:\n+      bfd_put_8 (in_abfd, val >> 16, data + *dst_ptr);\n+      (*dst_ptr) += 1;\n+      (*src_ptr) += 1;\n+      break;\n+\n+    case R_BYTE1:\n+      bfd_put_8 (in_abfd, val >> 8, data + *dst_ptr);\n+      (*dst_ptr) += 1;\n+      (*src_ptr) += 1;\n+      break;\n+\n     case R_IMM8:\n-      val = bfd_get_8 ( in_abfd, data+*src_ptr)\n-\t+ bfd_coff_reloc16_get_value (reloc, link_info, input_section);\n+      if (reloc->howto->partial_inplace)\n+        val += bfd_get_8 ( in_abfd, data+*src_ptr) & reloc->howto->src_mask;\n+      //fallthrough\n+    case R_BYTE0:\n       bfd_put_8 (in_abfd, val, data + *dst_ptr);\n       (*dst_ptr) += 1;\n       (*src_ptr) += 1;\n       break;\n \n+    case R_WORD1:\n+      bfd_put_16 (in_abfd, val >> 16, data + *dst_ptr);\n+      (*dst_ptr) += 2;\n+      (*src_ptr) += 2;\n+      break;\n+\n     case R_IMM16:\n-      val = bfd_get_16 ( in_abfd, data+*src_ptr)\n-\t+ bfd_coff_reloc16_get_value (reloc, link_info, input_section);\n+      if (reloc->howto->partial_inplace)\n+        val += bfd_get_16 ( in_abfd, data+*src_ptr) & reloc->howto->src_mask;\n+      //fallthrough\n+    case R_WORD0:\n       bfd_put_16 (in_abfd, val, data + *dst_ptr);\n       (*dst_ptr) += 2;\n       (*src_ptr) += 2;\n       break;\n \n     case R_IMM24:\n-      val = bfd_get_16 ( in_abfd, data+*src_ptr)\n-\t+ (bfd_get_8 ( in_abfd, data+*src_ptr+2) << 16)\n-\t+ bfd_coff_reloc16_get_value (reloc, link_info, input_section);\n+      if (reloc->howto->partial_inplace)\n+        val += (bfd_get_16 ( in_abfd, data+*src_ptr)\n+            + (bfd_get_8 ( in_abfd, data+*src_ptr+2) << 16))\n+            & reloc->howto->src_mask;\n       bfd_put_16 (in_abfd, val, data + *dst_ptr);\n       bfd_put_8 (in_abfd, val >> 16, data + *dst_ptr+2);\n       (*dst_ptr) += 3;\n       (*src_ptr) += 3;\n       break;\n \n     case R_IMM32:\n-      val = bfd_get_32 ( in_abfd, data+*src_ptr)\n-\t+ bfd_coff_reloc16_get_value (reloc, link_info, input_section);\n+      if (reloc->howto->partial_inplace)\n+        val += bfd_get_32 ( in_abfd, data+*src_ptr) & reloc->howto->src_mask;\n       bfd_put_32 (in_abfd, val, data + *dst_ptr);\n       (*dst_ptr) += 4;\n       (*src_ptr) += 4;\n       break;\n \n     case R_JR:\n       {\n-\tbfd_vma dst = bfd_coff_reloc16_get_value (reloc, link_info,\n-\t\t\t\t\t\t  input_section);\n+        if (reloc->howto->partial_inplace)\n+          val += (signed char)(bfd_get_8 ( in_abfd, data+*src_ptr) \n+                               & reloc->howto->src_mask);\n \tbfd_vma dot = (*dst_ptr\n \t\t       + input_section->output_offset\n \t\t       + input_section->output_section->vma);\n-\tint gap = dst - dot - 1;  /* -1, Since the offset is relative\n-\t\t\t\t     to the value of PC after reading\n-\t\t\t\t     the offset.  */\n-\n+\tint gap = val - dot;\n \tif (gap >= 128 || gap < -128)\n \t  (*link_info->callbacks->reloc_overflow)\n \t    (link_info, NULL, bfd_asymbol_name (*reloc->sym_ptr_ptr),\n@@ -260,6 +426,16 @@ extra_case (bfd *in_abfd,\n     }\n }\n \n+static int\n+z80_is_local_label_name (bfd *        abfd ATTRIBUTE_UNUSED,\n+                         const char * name)\n+{\n+  return (name[0] == '.' && name[1] == 'L') ||\n+         _bfd_coff_is_local_label_name (abfd, name);\n+}\n+\n+#define coff_bfd_is_local_label_name z80_is_local_label_name\n+\n #define coff_reloc16_extra_cases    extra_case\n #define coff_bfd_reloc_type_lookup  coff_z80_reloc_type_lookup\n #define coff_bfd_reloc_name_lookup coff_z80_reloc_name_lookup"
    },
    {
      "sha": "dec2e9c63708107048ced5f1e99c3937187ac198",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -2161,11 +2161,14 @@ coff_set_arch_mach_hook (bfd *abfd, void * filehdr)\n       arch = bfd_arch_z80;\n       switch (internal_f->f_flags & F_MACHMASK)\n \t{\n-\tcase 0:\n \tcase bfd_mach_z80strict << 12:\n \tcase bfd_mach_z80 << 12:\n \tcase bfd_mach_z80full << 12:\n \tcase bfd_mach_r800 << 12:\n+\tcase bfd_mach_gbz80 << 12:\n+\tcase bfd_mach_z180 << 12:\n+\tcase bfd_mach_ez80_z80 << 12:\n+\tcase bfd_mach_ez80_adl << 12:\n \t  machine = ((unsigned)internal_f->f_flags & F_MACHMASK) >> 12;\n \t  break;\n \tdefault:\n@@ -2650,11 +2653,14 @@ coff_set_flags (bfd * abfd,\n       *magicp = Z80MAGIC;\n       switch (bfd_get_mach (abfd))\n \t{\n-\tcase 0:\n \tcase bfd_mach_z80strict:\n \tcase bfd_mach_z80:\n \tcase bfd_mach_z80full:\n \tcase bfd_mach_r800:\n+\tcase bfd_mach_gbz80:\n+\tcase bfd_mach_z180:\n+\tcase bfd_mach_ez80_z80:\n+\tcase bfd_mach_ez80_adl:\n \t  *flagsp = bfd_get_mach (abfd) << 12;\n \t  break;\n \tdefault:"
    },
    {
      "sha": "b96931f52e6c46fa281738d468b1d88d20237545",
      "filename": "bfd/config.bfd",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/config.bfd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/config.bfd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/config.bfd?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -207,7 +207,7 @@ wasm32)\t\t targ_archs=bfd_wasm32_arch ;;\n x86_64*)\t targ_archs=bfd_i386_arch ;;\n xtensa*)\t targ_archs=bfd_xtensa_arch ;;\n xgate)\t\t targ_archs=bfd_xgate_arch ;;\n-z80|r800)\t targ_archs=bfd_z80_arch ;;\n+z80*|r800|z180|gbz80|ez80*)\t targ_archs=bfd_z80_arch ;;\n z8k*)\t\t targ_archs=bfd_z8k_arch ;;\n *)\t\t targ_archs=bfd_${targ_cpu}_arch ;;\n esac\n@@ -1404,11 +1404,16 @@ case \"${targ}\" in\n     targ_defvec=xc16x_elf32_vec\n     ;;\n \n-  z80-*-*)\n+  z80-*-coff)\n     targ_defvec=z80_coff_vec\n     targ_underscore=no\n     ;;\n \n+  z80-*-elf)\n+    targ_defvec=z80_elf32_vec\n+    targ_underscore=no\n+    ;;\n+\n   z8k*-*-*)\n     targ_defvec=z8k_coff_vec\n     targ_underscore=yes"
    },
    {
      "sha": "a38f215798d0e6e01327a88f3226bf6446889c22",
      "filename": "bfd/configure",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -14955,6 +14955,7 @@ do\n     xtensa_elf32_be_vec)\t tb=\"$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf\" ;;\n     xtensa_elf32_le_vec)\t tb=\"$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf\" ;;\n     z80_coff_vec)\t\t tb=\"$tb coff-z80.lo reloc16.lo $coffgen\" ;;\n+    z80_elf32_vec)\t\t tb=\"$tb elf32-z80.lo elf32.lo $elf\" ;;\n     z8k_coff_vec)\t\t tb=\"$tb coff-z8k.lo reloc16.lo $coff\" ;;\n \n     # These appear out of order in targets.c"
    },
    {
      "sha": "c5bfbd5d129ceb5668cf2af76e0f227cbc5c3846",
      "filename": "bfd/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/configure.ac?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -691,6 +691,7 @@ do\n     xtensa_elf32_be_vec)\t tb=\"$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf\" ;;\n     xtensa_elf32_le_vec)\t tb=\"$tb xtensa-isa.lo xtensa-modules.lo elf32-xtensa.lo elf32.lo $elf\" ;;\n     z80_coff_vec)\t\t tb=\"$tb coff-z80.lo reloc16.lo $coffgen\" ;;\n+    z80_elf32_vec)\t\t tb=\"$tb elf32-z80.lo elf32.lo $elf\" ;;\n     z8k_coff_vec)\t\t tb=\"$tb coff-z8k.lo reloc16.lo $coff\" ;;\n \n     # These appear out of order in targets.c"
    },
    {
      "sha": "96fcfa3658da7fa22d0d37bf84250d03860c1c55",
      "filename": "bfd/cpu-z80.c",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/cpu-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/cpu-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cpu-z80.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -40,18 +40,23 @@ compatible (const bfd_arch_info_type *a, const bfd_arch_info_type *b)\n   return (a->arch == bfd_arch_z80) ? & bfd_z80_arch : NULL;\n }\n \n-#define N(name,print,default,next)  \\\n- { 16, 16, 8, bfd_arch_z80, name, \"z80\", print, 0, default, \\\n+#define N(name,print,bits,default,next)  \\\n+ { 16, bits, 8, bfd_arch_z80, name, \"z80\", print, 0, default, \\\n    compatible, bfd_default_scan, bfd_arch_default_fill, next, 0 }\n \n #define M(n) &arch_info_struct[n]\n \n static const bfd_arch_info_type arch_info_struct[] =\n {\n-  N (bfd_mach_z80strict, \"z80-strict\", FALSE, M(1)),\n-  N (bfd_mach_z80,\t \"z80\",\t       FALSE, M(2)),\n-  N (bfd_mach_z80full,\t \"z80-full\",   FALSE, M(3)),\n-  N (bfd_mach_r800,\t \"r800\",       FALSE, NULL)\n+  N (bfd_mach_z80full,\t \"z80-full\",   16, FALSE, M(1)),\n+  N (bfd_mach_z80strict, \"z80-strict\", 16, FALSE, M(2)),\n+  N (bfd_mach_z80,\t \"z80\",\t       16, FALSE, M(3)),\n+  N (bfd_mach_r800,\t \"r800\",       16, FALSE, M(4)),\n+  N (bfd_mach_gbz80,\t \"gbz80\",      16, FALSE, M(5)),\n+  N (bfd_mach_z180,\t \"z180\",       16, FALSE, M(6)),\n+  N (bfd_mach_ez80_z80,\t \"ez80-z80\",   16, FALSE, M(7)),\n+  N (bfd_mach_ez80_adl,\t \"ez80-adl\",   24, FALSE, NULL)\n };\n \n-const bfd_arch_info_type bfd_z80_arch = N (0, \"z80-any\", TRUE, M(0));\n+const bfd_arch_info_type bfd_z80_arch =\n+  N (bfd_mach_z80full,   \"z80-full\",   16, TRUE,  M(1));"
    },
    {
      "sha": "888606e7b5cc4bf643668424d51203340dd34530",
      "filename": "bfd/elf32-z80.c",
      "status": "added",
      "additions": 380,
      "deletions": 0,
      "changes": 380,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/elf32-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/elf32-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-z80.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,380 @@\n+/* Zilog (e)Z80-specific support for 32-bit ELF\n+   Copyright (C) 1999-2019 Free Software Foundation, Inc.\n+   (Heavily copied from the S12Z port by Sergey Belyashov (sergey.belyashov@gmail.com))\n+\n+   This file is part of BFD, the Binary File Descriptor library.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+   MA 02110-1301, USA.  */\n+\n+#include \"sysdep.h\"\n+#include \"bfd.h\"\n+#include \"bfdlink.h\"\n+#include \"libbfd.h\"\n+#include \"elf-bfd.h\"\n+\n+#include \"elf/z80.h\"\n+\n+/* All users of this file have bfd_octets_per_byte (abfd, sec) == 1.  */\n+#define OCTETS_PER_BYTE(ABFD, SEC) 1\n+\n+/* Relocation functions.  */\n+static reloc_howto_type *bfd_elf32_bfd_reloc_type_lookup\n+  (bfd *, bfd_reloc_code_real_type);\n+static bfd_boolean z80_info_to_howto_rel\n+  (bfd *, arelent *, Elf_Internal_Rela *);\n+\n+typedef struct {\n+  bfd_reloc_code_real_type r_type;\n+  reloc_howto_type howto;\n+} bfd_howto_type;\n+\n+#define BFD_EMPTY_HOWTO(rt,x) {rt, EMPTY_HOWTO(x)}\n+#define BFD_HOWTO(rt,a,b,c,d,e,f,g,h,i,j,k,l,m) {rt, HOWTO(a,b,c,d,e,f,g,h,i,j,k,l,m)}\n+\n+static const\n+bfd_howto_type elf_z80_howto_table[] =\n+{\n+  /* This reloc does nothing.  */\n+  BFD_HOWTO (BFD_RELOC_NONE,\n+\t R_Z80_NONE,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 3,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 0,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"R_NONE\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* A 8 bit relocation */\n+  BFD_HOWTO (BFD_RELOC_8,\n+\t R_Z80_8,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 8,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield,\t/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_imm8\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* A 8 bit index register displacement relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_DISP8,\n+\t R_Z80_8_DIS,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 8,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_signed,\t/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_off\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* A 8 bit PC-rel relocation */\n+  BFD_HOWTO (BFD_RELOC_8_PCREL,\n+\t R_Z80_8_PCREL,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 8,\t\t\t/* bitsize */\n+\t TRUE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_signed,\t/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_jr\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t TRUE),\t\t\t/* pcrel_offset */\n+\n+  /* An 16 bit absolute relocation */\n+  BFD_HOWTO (BFD_RELOC_16,\n+\t R_Z80_16,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 16,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield,\t/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_imm16\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00000000,\t\t/* src_mask */\n+\t 0x0000ffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* A 24 bit absolute relocation emitted by ADL mode operands */\n+  BFD_HOWTO (BFD_RELOC_24,\n+\t R_Z80_24,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 5,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 24,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_bitfield,\t/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_imm24\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00000000,\t\t/* src_mask */\n+\t 0x00ffffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  BFD_HOWTO (BFD_RELOC_32,\n+\t R_Z80_32,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 2,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_imm32\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0x00000000,\t\t/* src_mask */\n+\t 0xffffffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* First (lowest) 8 bits of multibyte relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE0,\n+\t R_Z80_BYTE0,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_byte0\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* Second 8 bits of multibyte relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE1,\n+\t R_Z80_BYTE1,\t\t/* type */\n+\t 8,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_byte1\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* Third 8 bits of multibyte relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE2,\n+\t R_Z80_BYTE2,\t\t/* type */\n+\t 16,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_byte2\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* Fourth (highest) 8 bits of multibyte relocation */\n+  BFD_HOWTO (BFD_RELOC_Z80_BYTE3,\n+\t R_Z80_BYTE3,\t\t/* type */\n+\t 24,\t\t\t/* rightshift */\n+\t 0,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_byte3\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xff,\t\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* An 16 bit absolute relocation of lower word of multibyte value */\n+  BFD_HOWTO (BFD_RELOC_Z80_WORD0,\n+\t R_Z80_WORD0,\t\t/* type */\n+\t 0,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_word0\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+\n+  /* An 16 bit absolute relocation of higher word of multibyte value */\n+  BFD_HOWTO (BFD_RELOC_Z80_WORD1,\n+\t R_Z80_WORD1,\t\t/* type */\n+\t 16,\t\t\t/* rightshift */\n+\t 1,\t\t\t/* size (0 = byte, 1 = short, 2 = long) */\n+\t 32,\t\t\t/* bitsize */\n+\t FALSE,\t\t\t/* pc_relative */\n+\t 0,\t\t\t/* bitpos */\n+\t complain_overflow_dont,/* complain_on_overflow */\n+\t bfd_elf_generic_reloc,\t/* special_function */\n+\t \"r_word1\",\t\t/* name */\n+\t FALSE,\t\t\t/* partial_inplace */\n+\t 0,\t\t\t/* src_mask */\n+\t 0xffff,\t\t/* dst_mask */\n+\t FALSE),\t\t/* pcrel_offset */\n+};\n+\n+static reloc_howto_type *\n+bfd_elf32_bfd_reloc_type_lookup (bfd *abfd ATTRIBUTE_UNUSED,\n+                                 bfd_reloc_code_real_type code)\n+{\n+  enum\n+    {\n+      table_size = sizeof (elf_z80_howto_table) / sizeof (elf_z80_howto_table[0])\n+    };\n+  unsigned int i;\n+\n+  for (i = 0; i < table_size; i++)\n+    {\n+      if (elf_z80_howto_table[i].r_type == code)\n+          return &elf_z80_howto_table[i].howto;\n+    }\n+\n+  printf (\"%s:%d Not found type %d\\n\", __FILE__, __LINE__, code);\n+\n+  return NULL;\n+}\n+\n+static reloc_howto_type *\n+bfd_elf32_bfd_reloc_name_lookup (bfd *abfd ATTRIBUTE_UNUSED, const char *r_name)\n+{\n+  enum\n+    {\n+      table_size = sizeof (elf_z80_howto_table) / sizeof (elf_z80_howto_table[0])\n+    };\n+  unsigned int i;\n+\n+  for (i = 0; i < table_size; i++)\n+    {\n+      if (elf_z80_howto_table[i].howto.name != NULL\n+          && strcasecmp (elf_z80_howto_table[i].howto.name, r_name) == 0)\n+        return &elf_z80_howto_table[i].howto;\n+    }\n+\n+  return NULL;\n+}\n+\n+/* Set the howto pointer for an z80 ELF reloc.  */\n+\n+static bfd_boolean\n+z80_info_to_howto_rel (bfd *abfd, arelent *cache_ptr, Elf_Internal_Rela *dst)\n+{\n+  enum\n+    {\n+      table_size = sizeof (elf_z80_howto_table) / sizeof (elf_z80_howto_table[0])\n+    };\n+  unsigned int  i;\n+  unsigned int  r_type = ELF32_R_TYPE (dst->r_info);\n+\n+  for (i = 0; i < table_size; i++)\n+    {\n+      if (elf_z80_howto_table[i].howto.type == r_type)\n+        {\n+          cache_ptr->howto = &elf_z80_howto_table[i].howto;\n+          return TRUE;\n+        }\n+    }\n+\n+  /* xgettext:c-format */\n+  _bfd_error_handler (_(\"%pB: unsupported relocation type %#x\"),\n+                      abfd, r_type);\n+  bfd_set_error (bfd_error_bad_value);\n+  return FALSE;\n+}\n+\n+static bfd_boolean\n+z80_elf_set_mach_from_flags (bfd *abfd)\n+{\n+  int mach;\n+  switch (elf_elfheader (abfd)->e_flags)\n+    {\n+    case EF_Z80_MACH_GBZ80:\n+      mach = bfd_mach_gbz80;\n+      break;\n+    case EF_Z80_MACH_Z80:\n+      mach = bfd_mach_z80;\n+      break;\n+    case EF_Z80_MACH_Z180:\n+      mach = bfd_mach_z180;\n+      break;\n+    case EF_Z80_MACH_EZ80_Z80:\n+      mach = bfd_mach_ez80_z80;\n+      break;\n+    case EF_Z80_MACH_EZ80_ADL:\n+      mach = bfd_mach_ez80_adl;\n+      break;\n+    case EF_Z80_MACH_R800:\n+      mach = bfd_mach_r800;\n+      break;\n+    default:\n+      mach = bfd_mach_z80;\n+      break;\n+    }\n+\n+  bfd_default_set_arch_mach (abfd, bfd_arch_z80, mach);\n+  return TRUE;\n+}\n+\n+static int\n+z80_is_local_label_name (bfd *        abfd ATTRIBUTE_UNUSED,\n+                         const char * name)\n+{\n+  return (name[0] == '.' && name[1] == 'L') ||\n+         _bfd_elf_is_local_label_name (abfd, name);\n+}\n+\n+\n+#define ELF_ARCH\t\tbfd_arch_z80\n+#define ELF_MACHINE_CODE\tEM_Z80\n+#define ELF_MAXPAGESIZE\t\t0x10000\n+\n+#define TARGET_LITTLE_SYM\t\tz80_elf32_vec\n+#define TARGET_LITTLE_NAME\t\t\"elf32-z80\"\n+\n+#define elf_info_to_howto\t\t\tNULL\n+#define elf_info_to_howto_rel\t\t\tz80_info_to_howto_rel\n+#define elf_backend_object_p\t\t\tz80_elf_set_mach_from_flags\n+#define bfd_elf32_bfd_is_local_label_name\tz80_is_local_label_name\n+\n+#include \"elf32-target.h\""
    },
    {
      "sha": "d97d4e57a7749bfc5a9108cfeb4a535a24fc94c2",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -2869,6 +2869,12 @@ static const char *const bfd_reloc_code_real_names[] = { \"@@uninitialized@@\",\n   \"BFD_RELOC_XTENSA_TLS_ARG\",\n   \"BFD_RELOC_XTENSA_TLS_CALL\",\n   \"BFD_RELOC_Z80_DISP8\",\n+  \"BFD_RELOC_Z80_BYTE0\",\n+  \"BFD_RELOC_Z80_BYTE1\",\n+  \"BFD_RELOC_Z80_BYTE2\",\n+  \"BFD_RELOC_Z80_BYTE3\",\n+  \"BFD_RELOC_Z80_WORD0\",\n+  \"BFD_RELOC_Z80_WORD1\",\n   \"BFD_RELOC_Z8K_DISP7\",\n   \"BFD_RELOC_Z8K_CALLR\",\n   \"BFD_RELOC_Z8K_IMM4L\","
    },
    {
      "sha": "dc5ef9e5efa758b681bcce7bef828769b33d5c0c",
      "filename": "bfd/po/SRC-POTFILES.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/po/SRC-POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/po/SRC-POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/po/SRC-POTFILES.in?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -236,6 +236,7 @@ elf32-xc16x.c\n elf32-xgate.c\n elf32-xstormy16.c\n elf32-xtensa.c\n+elf32-z80.c\n elf32.c\n elf64-alpha.c\n elf64-bpf.c"
    },
    {
      "sha": "40833e56f7a47ba245304504f865eee58a07bf4f",
      "filename": "bfd/po/bfd.pot",
      "status": "modified",
      "additions": 1756,
      "deletions": 1552,
      "changes": 3308,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/po/bfd.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/po/bfd.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/po/bfd.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268"
    },
    {
      "sha": "33cd67150cfdeeab3be0014b97380fcb8658ec57",
      "filename": "bfd/reloc.c",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/reloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/reloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/reloc.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -6673,6 +6673,30 @@ ENUM\n   BFD_RELOC_Z80_DISP8\n ENUMDOC\n   8 bit signed offset in (ix+d) or (iy+d).\n+ENUM\n+  BFD_RELOC_Z80_BYTE0\n+ENUMDOC\n+  First 8 bits of multibyte (32, 24 or 16 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_BYTE1\n+ENUMDOC\n+  Second 8 bits of multibyte (32, 24 or 16 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_BYTE2\n+ENUMDOC\n+  Third 8 bits of multibyte (32 or 24 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_BYTE3\n+ENUMDOC\n+  Fourth 8 bits of multibyte (32 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_WORD0\n+ENUMDOC\n+  Lowest 16 bits of multibyte (32 or 24 bit) value.\n+ENUM\n+  BFD_RELOC_Z80_WORD1\n+ENUMDOC\n+  Highest 16 bits of multibyte (32 or 24 bit) value.\n \n ENUM\n   BFD_RELOC_Z8K_DISP7"
    },
    {
      "sha": "1b7e29d1e6eb8c7c7058a42c7a7e8678fe2f5670",
      "filename": "bfd/targets.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/targets.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/bfd/targets.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/targets.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -931,6 +931,7 @@ extern const bfd_target xstormy16_elf32_vec;\n extern const bfd_target xtensa_elf32_be_vec;\n extern const bfd_target xtensa_elf32_le_vec;\n extern const bfd_target z80_coff_vec;\n+extern const bfd_target z80_elf32_vec;\n extern const bfd_target z8k_coff_vec;\n \n /* These are always included.  */\n@@ -1353,6 +1354,7 @@ static const bfd_target * const _bfd_target_vector[] =\n \t&xtensa_elf32_le_vec,\n \n \t&z80_coff_vec,\n+\t&z80_elf32_vec,\n \n \t&z8k_coff_vec,\n #endif /* not SELECT_VECS */"
    },
    {
      "sha": "ecc4e1adb96fa4b0dce3bbd56cb6ec0210ae99ce",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* readelf.c: Add support for new Z*) relocations and machine\n+\ttypes.\n+\n 2020-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "7f8c6332641a360b9623b5cf51c12502094aebd1",
      "filename": "binutils/po/binutils.pot",
      "status": "modified",
      "additions": 2076,
      "deletions": 1785,
      "changes": 3861,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/po/binutils.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/po/binutils.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/po/binutils.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268"
    },
    {
      "sha": "17c27ceedaee42512894119fc99de8349dc74c5e",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -162,6 +162,7 @@\n #include \"elf/xgate.h\"\n #include \"elf/xstormy16.h\"\n #include \"elf/xtensa.h\"\n+#include \"elf/z80.h\"\n \n #include \"getopt.h\"\n #include \"libiberty.h\"\n@@ -1586,6 +1587,10 @@ dump_relocations (Filedata *          filedata,\n \t  else\n \t    rtype = elf_nfp_reloc_type (type);\n \t  break;\n+\n+\tcase EM_Z80:\n+\t  rtype = elf_z80_reloc_type (type);\n+\t  break;\n \t}\n \n       if (rtype == NULL)\n@@ -3751,6 +3756,21 @@ get_machine_flags (Filedata * filedata, unsigned e_flags, unsigned e_machine)\n \n \t  if (e_flags & ~ EF_MSP430_MACH)\n \t    strcat (buf, _(\": unknown extra flag bits also present\"));\n+\t  break;\n+\n+\tcase EM_Z80:\n+\t  switch (e_flags & EF_Z80_MACH_MSK)\n+\t    {\n+\t    case EF_Z80_MACH_Z80: strcat (buf, \", Z80\"); break;\n+\t    case EF_Z80_MACH_Z180: strcat (buf, \", Z180\"); break;\n+\t    case EF_Z80_MACH_R800: strcat (buf, \", R800\"); break;\n+\t    case EF_Z80_MACH_EZ80_Z80: strcat (buf, \", EZ80\"); break;\n+\t    case EF_Z80_MACH_EZ80_ADL: strcat (buf, \", EZ80, ADL\"); break;\n+\t    case EF_Z80_MACH_GBZ80: strcat (buf, \", GBZ80\"); break;\n+\t    default:\n+\t      strcat (buf, _(\", unknown\")); break;\n+\t    }\n+\t  break;\n \t}\n     }\n \n@@ -12722,6 +12742,8 @@ is_32bit_abs_reloc (Filedata * filedata, unsigned int reloc_type)\n     case EM_XTENSA_OLD:\n     case EM_XTENSA:\n       return reloc_type == 1; /* R_XTENSA_32.  */\n+    case EM_Z80:\n+      return reloc_type == 6; /* R_Z80_32.  */\n     default:\n       {\n \tstatic unsigned int prev_warn = 0;\n@@ -12904,6 +12926,8 @@ is_24bit_abs_reloc (Filedata * filedata, unsigned int reloc_type)\n       return reloc_type == 4; /* R_MN10200_24.  */\n     case EM_FT32:\n       return reloc_type == 5; /* R_FT32_20.  */\n+    case EM_Z80:\n+      return reloc_type == 5; /* R_Z80_24. */\n     default:\n       return FALSE;\n     }\n@@ -12975,6 +12999,8 @@ is_16bit_abs_reloc (Filedata * filedata, unsigned int reloc_type)\n       return reloc_type == 2; /* R_XC16C_ABS_16.  */\n     case EM_XGATE:\n       return reloc_type == 3; /* R_XGATE_16.  */\n+    case EM_Z80:\n+      return reloc_type == 4; /* R_Z80_16.  */\n     default:\n       return FALSE;\n     }\n@@ -12990,6 +13016,8 @@ is_8bit_abs_reloc (Filedata * filedata, unsigned int reloc_type)\n     {\n     case EM_RISCV:\n       return reloc_type == 54; /* R_RISCV_SET8.  */\n+    case EM_Z80:\n+      return reloc_type == 1;  /* R_Z80_8.  */\n     default:\n       return FALSE;\n     }\n@@ -13197,6 +13225,7 @@ is_none_reloc (Filedata * filedata, unsigned int reloc_type)\n     case EM_TI_C6000:/* R_C6000_NONE.  */\n     case EM_X86_64:  /* R_X86_64_NONE.  */\n     case EM_XC16X:\n+    case EM_Z80:     /* R_Z80_NONE. */\n     case EM_WEBASSEMBLY: /* R_WASM32_NONE.  */\n       return reloc_type == 0;\n "
    },
    {
      "sha": "86134cb5b66c16c1d98efda439c96202f7f5e462",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,62 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* config/tc-z80.c: Add new architectures: Z180 and eZ80. Add\n+\tsupport for assembler code generated by SDCC. Add new relocation\n+\ttypes. Add z80-elf target support.\n+\t* config/tc-z80.h: Add z80-elf target support. Enable dollar local\n+\tlabels. Local labels starts from \".L\".\n+\t* NEWS: Mention the new support.\n+\t* testsuite/gas/all/fwdexp.d: Fix failure due to symbol conflict.\n+\t* testsuite/gas/all/fwdexp.s: Likewise.\n+\t* testsuite/gas/all/cond.l: Likewise.\n+\t* testsuite/gas/all/cond.s: Likewise.\n+\t* testsuite/gas/all/fwdexp.d: Likewise.\n+\t* testsuite/gas/all/fwdexp.s: Likewise.\n+\t* testsuite/gas/elf/section2.e-mips: Likewise.\n+\t* testsuite/gas/elf/section2.l: Likewise.\n+\t* testsuite/gas/elf/section2.s: Likewise.\n+\t* testsuite/gas/macros/app1.d: Likewise.\n+\t* testsuite/gas/macros/app1.s: Likewise.\n+\t* testsuite/gas/macros/app2.d: Likewise.\n+\t* testsuite/gas/macros/app2.s: Likewise.\n+\t* testsuite/gas/macros/app3.d: Likewise.\n+\t* testsuite/gas/macros/app3.s: Likewise.\n+\t* testsuite/gas/macros/app4.d: Likewise.\n+\t* testsuite/gas/macros/app4.s: Likewise.\n+\t* testsuite/gas/macros/app4b.s: Likewise.\n+\t* testsuite/gas/z80/suffix.d: Fix failure on ELF target.\n+\t* testsuite/gas/z80/z80.exp: Add new tests\n+\t* testsuite/gas/z80/dollar.d: New file.\n+\t* testsuite/gas/z80/dollar.s: New file.\n+\t* testsuite/gas/z80/ez80_adl_all.d: New file.\n+\t* testsuite/gas/z80/ez80_adl_all.s: New file.\n+\t* testsuite/gas/z80/ez80_adl_suf.d: New file.\n+\t* testsuite/gas/z80/ez80_isuf.s: New file.\n+\t* testsuite/gas/z80/ez80_z80_all.d: New file.\n+\t* testsuite/gas/z80/ez80_z80_all.s: New file.\n+\t* testsuite/gas/z80/ez80_z80_suf.d: New file.\n+\t* testsuite/gas/z80/r800_extra.d: New file.\n+\t* testsuite/gas/z80/r800_extra.s: New file.\n+\t* testsuite/gas/z80/r800_ii8.d: New file.\n+\t* testsuite/gas/z80/r800_z80_doc.d: New file.\n+\t* testsuite/gas/z80/z180.d: New file.\n+\t* testsuite/gas/z80/z180.s: New file.\n+\t* testsuite/gas/z80/z180_z80_doc.d: New file.\n+\t* testsuite/gas/z80/z80_doc.d: New file.\n+\t* testsuite/gas/z80/z80_doc.s: New file.\n+\t* testsuite/gas/z80/z80_ii8.d: New file.\n+\t* testsuite/gas/z80/z80_ii8.s: New file.\n+\t* testsuite/gas/z80/z80_in_f_c.d: New file.\n+\t* testsuite/gas/z80/z80_in_f_c.s: New file.\n+\t* testsuite/gas/z80/z80_op_ii_ld.d: New file.\n+\t* testsuite/gas/z80/z80_op_ii_ld.s: New file.\n+\t* testsuite/gas/z80/z80_out_c_0.d: New file.\n+\t* testsuite/gas/z80/z80_out_c_0.s: New file.\n+\t* testsuite/gas/z80/z80_reloc.d: New file.\n+\t* testsuite/gas/z80/z80_reloc.s: New file.\n+\t* testsuite/gas/z80/z80_sli.d: New file.\n+\t* testsuite/gas/z80/z80_sli.s: New file.\n+\n 2020-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* config/tc-arm.c (parse_reg_list): Use REG_TYPE_RN instead of"
    },
    {
      "sha": "36d6c652f6d32a8d466fb6f8e7ef8686b4b5a956",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,5 +1,15 @@\n -*- text -*-\n \n+* Add support for Zilog eZ80 and Zilog Z180 CPUs.\n+\n+* Add support for z80-elf target.\n+\n+* Add support for relocation of each byte or word of multibyte value to Z80\n+  targets (just use right shift to 0, 8, 16, or 24 bits or AND operation\n+  with 0xff/0xffff mask): ld a, label >> 16 \\ ld hl, label & 0xffff\n+\n+* Add SDCC support for Z80 targets.\n+\n Changes in 2.33:\n \n * Add support for the Arm Scalable Vector Extension version 2 (SVE2)"
    },
    {
      "sha": "a93b579b62eb0c1af036a521745400a2f0a4016a",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 2040,
      "deletions": 459,
      "changes": 2499,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,4 +1,4 @@\n-/* tc-z80.c -- Assemble code for the Zilog Z80 and ASCII R800\n+/* tc-z80.c -- Assemble code for the Zilog Z80, Z180, EZ80 and ASCII R800\n    Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Contributed by Arnold Metselaar <arnold_m@operamail.com>\n \n@@ -22,6 +22,7 @@\n #include \"as.h\"\n #include \"safe-ctype.h\"\n #include \"subsegs.h\"\n+#include \"elf/z80.h\"\n \n /* Exported constants.  */\n const char comment_chars[] = \";\\0\";\n@@ -37,23 +38,63 @@ enum options\n {\n   OPTION_MACH_Z80 = OPTION_MD_BASE,\n   OPTION_MACH_R800,\n+  OPTION_MACH_Z180,\n+  OPTION_MACH_EZ80_Z80,\n+  OPTION_MACH_EZ80_ADL,\n+  OPTION_MACH_GBZ80,\n+  OPTION_MACH_INST,\n+  OPTION_MACH_NO_INST,\n   OPTION_MACH_IUD,\n   OPTION_MACH_WUD,\n   OPTION_MACH_FUD,\n   OPTION_MACH_IUP,\n   OPTION_MACH_WUP,\n-  OPTION_MACH_FUP\n+  OPTION_MACH_FUP,\n+  OPTION_FLOAT_FORMAT,\n+  OPTION_DOUBLE_FORMAT,\n+  OPTION_COMPAT_LL_PREFIX,\n+  OPTION_COMPAT_COLONLESS,\n+  OPTION_COMPAT_SDCC\n };\n \n-#define INS_Z80    1\n-#define INS_UNDOC  2\n-#define INS_UNPORT 4\n-#define INS_R800   8\n+#define INS_Z80      (1 << 0)\n+#define INS_R800     (1 << 1)\n+#define INS_GBZ80    (1 << 2)\n+#define INS_Z180     (1 << 3)\n+#define INS_EZ80     (1 << 4)\n+#define INS_MARCH_MASK 0xffff\n+\n+#define INS_IDX_HALF (1 << 16)\n+#define INS_IN_F_C   (1 << 17)\n+#define INS_OUT_C_0  (1 << 18)\n+#define INS_SLI      (1 << 19)\n+#define INS_ROT_II_LD (1 << 20)  /* instructions like SLA (ii+d),r; which is: LD r,(ii+d); SLA r; LD (ii+d),r */\n+#define INS_TUNE_MASK 0xffff0000\n+\n+#define INS_NOT_GBZ80 (INS_Z80 | INS_Z180 | INS_R800 | INS_EZ80)\n+\n+#define INS_ALL 0\n+#define INS_UNDOC (INS_IDX_HALF | INS_IN_F_C)\n+#define INS_UNPORT (INS_OUT_C_0 | INS_SLI | INS_ROT_II_LD)\n \n struct option md_longopts[] =\n {\n   { \"z80\",       no_argument, NULL, OPTION_MACH_Z80},\n   { \"r800\",      no_argument, NULL, OPTION_MACH_R800},\n+  { \"z180\",      no_argument, NULL, OPTION_MACH_Z180},\n+  { \"ez80\",      no_argument, NULL, OPTION_MACH_EZ80_Z80},\n+  { \"ez80-adl\",  no_argument, NULL, OPTION_MACH_EZ80_ADL},\n+  { \"float\",     required_argument, NULL, OPTION_FLOAT_FORMAT},\n+  { \"double\",    required_argument, NULL, OPTION_DOUBLE_FORMAT},\n+  { \"strict\",    no_argument, NULL, OPTION_MACH_FUD},\n+  { \"full\",      no_argument, NULL, OPTION_MACH_IUP},\n+  { \"with-inst\", required_argument, NULL, OPTION_MACH_INST},\n+  { \"Wnins\",     required_argument, NULL, OPTION_MACH_INST},\n+  { \"without-inst\", required_argument, NULL, OPTION_MACH_NO_INST},\n+  { \"local-prefix\", required_argument, NULL, OPTION_COMPAT_LL_PREFIX},\n+  { \"colonless\", no_argument, NULL, OPTION_COMPAT_COLONLESS},\n+  { \"sdcc\",      no_argument, NULL, OPTION_COMPAT_SDCC},\n+  { \"Fins\",      required_argument, NULL, OPTION_MACH_NO_INST},\n   { \"ignore-undocumented-instructions\", no_argument, NULL, OPTION_MACH_IUD },\n   { \"Wnud\",  no_argument, NULL, OPTION_MACH_IUD },\n   { \"warn-undocumented-instructions\",  no_argument, NULL, OPTION_MACH_WUD },\n@@ -76,46 +117,169 @@ extern int coff_flags;\n /* Instruction classes that silently assembled.  */\n static int ins_ok = INS_Z80 | INS_UNDOC;\n /* Instruction classes that generate errors.  */\n-static int ins_err = INS_R800;\n-/* Instruction classes actually used, determines machine type.  */\n-static int ins_used = INS_Z80;\n+static int ins_err = ~(INS_Z80 | INS_UNDOC);\n+/* eZ80 CPU mode (ADL or Z80) */\n+static int cpu_mode = 0; /* 0 - Z80, 1 - ADL */\n+/* accept SDCC specific instruction encoding */\n+static int sdcc_compat = 0;\n+/* accept colonless labels */\n+static int colonless_labels = 0;\n+/* local label prefix (NULL - default) */\n+static const char *local_label_prefix = NULL;\n+/* floating point support */\n+typedef const char *(*str_to_float_t)(char *litP, int *sizeP);\n+static str_to_float_t str_to_float;\n+static str_to_float_t str_to_double;\n+\n+/* mode of current instruction */\n+#define INST_MODE_S 0      /* short data mode */\n+#define INST_MODE_IS 0     /* short instruction mode */\n+#define INST_MODE_L 2      /* long data mode */\n+#define INST_MODE_IL 1     /* long instruction mode */\n+#define INST_MODE_FORCED 4 /* CPU mode changed by instruction suffix*/\n+static char inst_mode;\n+\n+static int\n+setup_instruction (const char *inst, int *add, int *sub)\n+{\n+  int n;\n+  if (!strcmp (inst, \"idx-reg-halves\"))\n+    n = INS_IDX_HALF;\n+  else if (!strcmp (inst, \"sli\"))\n+    n = INS_SLI;\n+  else if (!strcmp (inst, \"op-ii-ld\"))\n+    n = INS_ROT_II_LD;\n+  else if (!strcmp (inst, \"in-f-c\"))\n+    n = INS_IN_F_C;\n+  else if (!strcmp (inst, \"out-c-0\"))\n+    n = INS_OUT_C_0;\n+  else\n+    return 0;\n+  *add |= n;\n+  *sub &= ~n;\n+  return 1;\n+}\n+\n+static const char *\n+str_to_zeda32 (char *litP, int *sizeP);\n+static const char *\n+str_to_float48 (char *litP, int *sizeP);\n+\n+static str_to_float_t\n+get_str_to_float (const char *arg)\n+{\n+  if (strcasecmp(arg, \"zeda32\") == 0)\n+    return str_to_zeda32;\n+\n+  if (strcasecmp(arg, \"math48\") == 0)\n+    return str_to_float48;\n+\n+  if (strcasecmp(arg, \"ieee754\") != 0)\n+    as_fatal (_(\"invalid floating point numbers type `%s'\"), arg);\n+  return NULL;\n+}\n+\n+static int\n+setup_instruction_list (const char *list, int *add, int *sub)\n+{\n+  char buf[16];\n+  const char *b;\n+  const char *e;\n+  int sz;\n+  int res = 0;\n+  for (b = list; *b != '\\0';)\n+    {\n+      e = strchr (b, ',');\n+      if (e == NULL)\n+        sz = strlen (b);\n+      else\n+        sz = e - b;\n+      if (sz == 0 || sz >= (int)sizeof (buf))\n+        {\n+          as_bad (_(\"invalid INST in command line: %s\"), b);\n+          return 0;\n+        }\n+      memcpy (buf, b, sz);\n+      buf[sz] = '\\0';\n+      if (setup_instruction (buf, add, sub))\n+        res++;\n+      else\n+        {\n+          as_bad (_(\"invalid INST in command line: %s\"), buf);\n+          return 0;\n+        }\n+      b = &b[sz];\n+      if (*b == ',')\n+        ++b;\n+    }\n+  return res;\n+}\n \n int\n-md_parse_option (int c, const char* arg ATTRIBUTE_UNUSED)\n+md_parse_option (int c, const char* arg)\n {\n   switch (c)\n     {\n     default:\n       return 0;\n     case OPTION_MACH_Z80:\n-      ins_ok &= ~INS_R800;\n-      ins_err |= INS_R800;\n+      ins_ok = (ins_ok & INS_TUNE_MASK) | INS_Z80;\n+      ins_err = (ins_err & INS_MARCH_MASK) | (~INS_Z80 & INS_MARCH_MASK);\n       break;\n     case OPTION_MACH_R800:\n-      ins_ok = INS_Z80 | INS_UNDOC | INS_R800;\n+      ins_ok = INS_R800 | INS_IDX_HALF;\n       ins_err = INS_UNPORT;\n       break;\n-    case OPTION_MACH_IUD:\n-      ins_ok |= INS_UNDOC;\n-      ins_err &= ~INS_UNDOC;\n+    case OPTION_MACH_Z180:\n+      ins_ok = INS_Z180;\n+      ins_err = INS_UNDOC | INS_UNPORT;\n       break;\n-    case OPTION_MACH_IUP:\n-      ins_ok |= INS_UNDOC | INS_UNPORT;\n-      ins_err &= ~(INS_UNDOC | INS_UNPORT);\n+    case OPTION_MACH_EZ80_Z80:\n+      ins_ok = INS_EZ80;\n+      ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n+      cpu_mode = 0;\n+      break;\n+    case OPTION_MACH_EZ80_ADL:\n+      ins_ok = INS_EZ80;\n+      ins_err = (INS_UNDOC | INS_UNPORT) & ~INS_IDX_HALF;\n+      cpu_mode = 1;\n+      break;\n+    case OPTION_MACH_GBZ80:\n+      ins_ok = INS_GBZ80;\n+      ins_err = INS_UNDOC | INS_UNPORT;\n+      break;\n+    case OPTION_FLOAT_FORMAT:\n+      str_to_float = get_str_to_float (arg);\n+      break;\n+    case OPTION_DOUBLE_FORMAT:\n+      str_to_double = get_str_to_float (arg);\n+      break;\n+    case OPTION_MACH_INST:\n+      if ((ins_ok & INS_GBZ80) == 0)\n+        return setup_instruction_list(arg, & ins_ok, & ins_err);\n+      break;\n+    case OPTION_MACH_NO_INST:\n+      if ((ins_ok & INS_GBZ80) == 0)\n+        return setup_instruction_list(arg, & ins_err, & ins_ok);\n       break;\n     case OPTION_MACH_WUD:\n-      if ((ins_ok & INS_R800) == 0)\n-\t{\n-\t  ins_ok &= ~(INS_UNDOC|INS_UNPORT);\n-\t  ins_err &= ~INS_UNDOC;\n-\t}\n+    case OPTION_MACH_IUD:\n+      if ((ins_ok & INS_GBZ80) == 0)\n+        {\n+          ins_ok |= INS_UNDOC;\n+          ins_err &= ~INS_UNDOC;\n+        }\n       break;\n     case OPTION_MACH_WUP:\n-      ins_ok &= ~INS_UNPORT;\n-      ins_err &= ~(INS_UNDOC|INS_UNPORT);\n+    case OPTION_MACH_IUP:\n+      if ((ins_ok & INS_GBZ80) == 0)\n+        {\n+          ins_ok |= INS_UNDOC | INS_UNPORT;\n+          ins_err &= ~(INS_UNDOC | INS_UNPORT);\n+        }\n       break;\n     case OPTION_MACH_FUD:\n-      if ((ins_ok & INS_R800) == 0)\n+      if ((ins_ok & (INS_R800 | INS_GBZ80)) == 0)\n \t{\n \t  ins_ok &= (INS_UNDOC | INS_UNPORT);\n \t  ins_err |= INS_UNDOC | INS_UNPORT;\n@@ -125,6 +289,16 @@ md_parse_option (int c, const char* arg ATTRIBUTE_UNUSED)\n       ins_ok &= ~INS_UNPORT;\n       ins_err |= INS_UNPORT;\n       break;\n+    case OPTION_COMPAT_LL_PREFIX:\n+      local_label_prefix = (arg && *arg) ? arg : NULL;\n+      break;\n+    case OPTION_COMPAT_SDCC:\n+      sdcc_compat = 1;\n+      local_label_prefix = \"_\";\n+      break;\n+    case OPTION_COMPAT_COLONLESS:\n+      colonless_labels = 1;\n+      break;\n     }\n \n   return 1;\n@@ -134,28 +308,52 @@ void\n md_show_usage (FILE * f)\n {\n   fprintf (f, \"\\n\\\n-CPU model/instruction set options:\\n\\\n+CPU model options:\\n\\\n+  -z80\\t\\t\\t  assemble for Z80\\n\\\n+  -r800\\t\\t\\t  assemble for R800\\n\\\n+  -z180\\t\\t\\t  assemble for Z180\\n\\\n+  -ez80\\t\\t\\t  assemble for eZ80 in Z80 mode by default\\n\\\n+  -ez80-adl\\t\\t  assemble for eZ80 in ADL mode by default\\n\\\n+\\n\\\n+Compatibility options:\\n\\\n+  -local-prefix=TEXT\\t  treat labels prefixed by TEXT as local\\n\\\n+  -colonless\\t\\t  permit colonless labels\\n\\\n+  -sdcc\\t\\t\\t  accept SDCC specific instruction syntax\\n\\\n+  -float=FORMAT\\t\\t  set floating point numbers format\\n\\\n+  -double=FORMAT\\t\\t  set floating point numbers format\\n\\\n+Where FORMAT one of:\\n\\\n+  ieee754\\t\\t  IEEE754 compatible\\n\\\n+  zeda32\\t\\t\\t  Zeda z80float library 32 bit format\\n\\\n+  math48\\t\\t  48 bit format from Math48 library\\n\\\n+\\n\\\n+Support for known undocumented instructions:\\n\\\n+  -strict\\t\\t  assemble only documented instructions\\n\\\n+  -full\\t\\t\\t  assemble all undocumented instructions\\n\\\n+  -with-inst=INST[,...]\\n\\\n+  -Wnins INST[,...]\\t  assemble specified instruction(s)\\n\\\n+  -without-inst=INST[,...]\\n\\\n+  -Fins INST[,...]\\t  do not assemble specified instruction(s)\\n\\\n+Where INST is one of:\\n\\\n+  idx-reg-halves\\t  instructions with halves of index registers\\n\\\n+  sli\\t\\t\\t  instruction SLI/SLL\\n\\\n+  op-ii-ld\\t\\t  instructions like SLA (II+dd),R (opcodes DD/FD CB dd xx)\\n\\\n+  in-f-c\\t\\t  instruction IN F,(C)\\n\\\n+  out-c-0\\t\\t  instruction OUT (C),0\\n\\\n \\n\\\n-  -z80\\t\\t  assemble for Z80\\n\\\n+Obsolete options:\\n\\\n   -ignore-undocumented-instructions\\n\\\n-  -Wnud\\n\\\n-\\tsilently assemble undocumented Z80-instructions that work on R800\\n\\\n+  -Wnud\\t\\t\\t  silently assemble undocumented Z80-instructions that work on R800\\n\\\n   -ignore-unportable-instructions\\n\\\n-  -Wnup\\n\\\n-\\tsilently assemble all undocumented Z80-instructions\\n\\\n+  -Wnup\\t\\t\\t  silently assemble all undocumented Z80-instructions\\n\\\n   -warn-undocumented-instructions\\n\\\n-  -Wud\\n\\\n-\\tissue warnings for undocumented Z80-instructions that work on R800\\n\\\n+  -Wud\\t\\t\\t  issue warnings for undocumented Z80-instructions that work on R800\\n\\\n   -warn-unportable-instructions\\n\\\n-  -Wup\\n\\\n-\\tissue warnings for other undocumented Z80-instructions\\n\\\n+  -Wup\\t\\t\\t  issue warnings for other undocumented Z80-instructions\\n\\\n   -forbid-undocumented-instructions\\n\\\n-  -Fud\\n\\\n-\\ttreat all undocumented z80-instructions as errors\\n\\\n+  -Fud\\t\\t\\t  treat all undocumented Z80-instructions as errors\\n\\\n   -forbid-unportable-instructions\\n\\\n-  -Fup\\n\\\n-\\ttreat undocumented z80-instructions that do not work on R800 as errors\\n\\\n-  -r800\\t  assemble for R800\\n\\n\\\n+  -Fup\\t\\t\\t  treat undocumented Z80-instructions that do not work on R800 as errors\\n\\\n+\\n\\\n Default: -z80 -ignore-undocumented-instructions -warn-unportable-instructions.\\n\");\n }\n \n@@ -182,6 +380,7 @@ struct reg_entry\n #define REG_F (6 | 8)\n #define REG_I (9)\n #define REG_R (10)\n+#define REG_MB (11)\n \n #define REG_AF (3 | R_STACKABLE)\n #define REG_BC (0 | R_STACKABLE | R_ARITH)\n@@ -212,6 +411,7 @@ static const struct reg_entry regtable[] =\n   {\"iyh\",REG_H | R_IY },\n   {\"iyl\",REG_L | R_IY },\n   {\"l\",  REG_L },\n+  {\"mb\", REG_MB },\n   {\"r\",  REG_R },\n   {\"sp\", REG_SP },\n } ;\n@@ -226,6 +426,9 @@ md_begin (void)\n   unsigned int i, j, k;\n   char buf[BUFLEN];\n \n+  if (ins_ok & INS_EZ80)   /* if select EZ80 cpu then */\n+    listing_lhs_width = 6; /* use 6 bytes per line in the listing */\n+\n   reg.X_op = O_register;\n   reg.X_md = 0;\n   reg.X_add_symbol = reg.X_op_symbol = 0;\n@@ -263,22 +466,27 @@ z80_md_end (void)\n {\n   int mach_type;\n \n-  if (ins_used & (INS_UNPORT | INS_R800))\n-    ins_used |= INS_UNDOC;\n-\n-  switch (ins_used)\n+  switch (ins_ok & INS_MARCH_MASK)\n     {\n     case INS_Z80:\n-      mach_type = bfd_mach_z80strict;\n+      if (ins_ok & INS_UNPORT)\n+        mach_type = bfd_mach_z80full;\n+      else if (ins_ok & INS_UNDOC)\n+        mach_type = bfd_mach_z80;\n+      else\n+        mach_type = bfd_mach_z80strict;\n       break;\n-    case INS_Z80|INS_UNDOC:\n-      mach_type = bfd_mach_z80;\n+    case INS_R800:\n+      mach_type = bfd_mach_r800;\n       break;\n-    case INS_Z80|INS_UNDOC|INS_UNPORT:\n-      mach_type = bfd_mach_z80full;\n+    case INS_Z180:\n+      mach_type = bfd_mach_z180;\n       break;\n-    case INS_Z80|INS_UNDOC|INS_R800:\n-      mach_type = bfd_mach_r800;\n+    case INS_GBZ80:\n+      mach_type = bfd_mach_gbz80;\n+      break;\n+    case INS_EZ80:\n+      mach_type = cpu_mode ? bfd_mach_ez80_adl : bfd_mach_ez80_z80;\n       break;\n     default:\n       mach_type = 0;\n@@ -287,6 +495,36 @@ z80_md_end (void)\n   bfd_set_arch_mach (stdoutput, TARGET_ARCH, mach_type);\n }\n \n+#if defined (OBJ_ELF) || defined (OBJ_MAYBE_ELF)\n+void\n+z80_elf_final_processing (void)\n+{\n+  unsigned elf_flags;\n+  switch (ins_ok & INS_MARCH_MASK)\n+    {\n+    case INS_Z80:\n+      elf_flags = EF_Z80_MACH_Z80;\n+      break;\n+    case INS_R800:\n+      elf_flags = EF_Z80_MACH_R800;\n+      break;\n+    case INS_Z180:\n+      elf_flags = EF_Z80_MACH_Z180;\n+      break;\n+    case INS_GBZ80:\n+      elf_flags = EF_Z80_MACH_GBZ80;\n+      break;\n+    case INS_EZ80:\n+      elf_flags = cpu_mode ? EF_Z80_MACH_EZ80_ADL : EF_Z80_MACH_EZ80_Z80;\n+      break;\n+    default:\n+      elf_flags = 0;\n+    }\n+\n+  elf_elfheader (stdoutput)->e_flags = elf_flags;\n+}\n+#endif\n+\n static const char *\n skip_space (const char *s)\n {\n@@ -328,6 +566,10 @@ z80_start_line_hook (void)\n \t      return 1;\n \t    }\n \t  break;\n+\tcase '#':\n+\t  if (sdcc_compat)\n+\t    *p = (*skip_space (p + 1) == '(') ? '+' : ' ';\n+\t  break;\n \t}\n     }\n   /* Check for <label>[:] [.](EQU|DEFL) <value>.  */\n@@ -344,10 +586,25 @@ z80_start_line_hook (void)\n       c = get_symbol_name (&name);\n       rest = input_line_pointer + 1;\n \n+      if (ISSPACE(c) && colonless_labels)\n+        {\n+          if (c == '\\n')\n+            {\n+              bump_line_counters ();\n+              LISTING_NEWLINE ();\n+            }\n+          c = ':';\n+        }\n+      if (c == ':' && sdcc_compat && rest[-2] != '$')\n+        dollar_label_clear ();\n       if (*rest == ':')\n-\t++rest;\n-      if (*rest == ' ' || *rest == '\\t')\n-\t++rest;\n+        {\n+          /* remove second colon if SDCC compatibility enabled */\n+          if (sdcc_compat)\n+            *rest = ' ';\n+          ++rest;\n+        }\n+      rest = (char*)skip_space (rest);\n       if (*rest == '.')\n \t++rest;\n       if (strncasecmp (rest, \"EQU\", 3) == 0)\n@@ -386,10 +643,22 @@ md_undefined_symbol (char *name ATTRIBUTE_UNUSED)\n }\n \n const char *\n-md_atof (int type ATTRIBUTE_UNUSED, char *litP ATTRIBUTE_UNUSED,\n-\t int *sizeP ATTRIBUTE_UNUSED)\n+md_atof (int type, char *litP, int *sizeP)\n {\n-  return _(\"floating point numbers are not implemented\");\n+  switch (type)\n+    {\n+    case 'f':\n+    case 'F':\n+      if (str_to_float)\n+        return str_to_float (litP, sizeP);\n+      break;\n+    case 'd':\n+    case 'D':\n+      if (str_to_double)\n+        return str_to_double (litP, sizeP);\n+      break;\n+    }\n+  return ieee_md_atof (type, litP, sizeP, FALSE);\n }\n \n valueT\n@@ -401,8 +670,7 @@ md_section_align (segT seg ATTRIBUTE_UNUSED, valueT size)\n long\n md_pcrel_from (fixS * fixp)\n {\n-  return fixp->fx_where +\n-    fixp->fx_frag->fr_address + 1;\n+  return fixp->fx_where + fixp->fx_frag->fr_address;\n }\n \n typedef const char * (asfunc)(char, char, const char*);\n@@ -413,6 +681,7 @@ typedef struct _table_t\n   unsigned char prefix;\n   unsigned char opcode;\n   asfunc * fp;\n+  unsigned inss; /*0 - all CPU types or list of supported INS_* */\n } table_t;\n \n /* Compares the key for structs that start with a char * to the key.  */\n@@ -436,6 +705,9 @@ static char err_flag;\n static void\n error (const char * message)\n {\n+  if (err_flag)\n+    return;\n+\n   as_bad (\"%s\", message);\n   err_flag = 1;\n }\n@@ -449,35 +721,17 @@ ill_op (void)\n static void\n wrong_mach (int ins_type)\n {\n-  const char *p;\n-\n-  switch (ins_type)\n-    {\n-    case INS_UNDOC:\n-      p = \"undocumented instruction\";\n-      break;\n-    case INS_UNPORT:\n-      p = \"instruction does not work on R800\";\n-      break;\n-    case INS_R800:\n-      p = \"instruction only works R800\";\n-      break;\n-    default:\n-      p = 0; /* Not reachable.  */\n-    }\n-\n   if (ins_type & ins_err)\n-    error (_(p));\n+    ill_op();\n   else\n-    as_warn (\"%s\", _(p));\n+    as_warn (_(\"undocumented instruction\"));\n }\n \n static void\n check_mach (int ins_type)\n {\n   if ((ins_type & ins_ok) == 0)\n     wrong_mach (ins_type);\n-  ins_used |= ins_type;\n }\n \n /* Check whether an expression is indirect.  */\n@@ -546,8 +800,24 @@ parse_exp_not_indexed (const char *s, expressionS *op)\n {\n   const char *p;\n   int indir;\n+  int make_shift = -1;\n \n   p = skip_space (s);\n+  if (sdcc_compat && (*p == '<' || *p == '>'))\n+    {\n+      switch (*p)\n+\t{\n+\tcase '<': /* LSB request */\n+\t  make_shift = 0;\n+\t  break;\n+\tcase '>': /* MSB request */\n+\t  make_shift = cpu_mode ? 16 : 8;\n+\t  break;\n+\t}\n+      s = ++p;\n+      p = skip_space (p);\n+    }\n+\n   op->X_md = indir = is_indir (p);\n   input_line_pointer = (char*) s ;\n   expression (op);\n@@ -562,9 +832,65 @@ parse_exp_not_indexed (const char *s, expressionS *op)\n     default:\n       break;\n     }\n+\n+  if (make_shift >= 0)\n+    {\n+      /* replace [op] by [op >> shift] */\n+      expressionS data;\n+      op->X_add_symbol = make_expr_symbol (op);\n+      op->X_add_number = 0;\n+      op->X_op = O_right_shift;\n+      memset (&data, 0, sizeof (data));\n+      data.X_op = O_constant;\n+      data.X_add_number = make_shift;\n+      op->X_op_symbol = make_expr_symbol (&data);\n+    }\n   return input_line_pointer;\n }\n \n+static int\n+unify_indexed (expressionS *op)\n+{\n+  if (O_register != symbol_get_value_expression(op->X_add_symbol)->X_op)\n+    return 0;\n+\n+  int rnum = symbol_get_value_expression(op->X_add_symbol)->X_add_number;\n+  if ( ((REG_IX != rnum) && (REG_IY != rnum)) || contains_register(op->X_op_symbol) )\n+    {\n+      ill_op();\n+      return 0;\n+    }\n+\n+  /* convert subtraction to addition of negative value */\n+  if (O_subtract == op->X_op)\n+    {\n+      expressionS minus;\n+      minus.X_op = O_uminus;\n+      minus.X_add_number = 0;\n+      minus.X_add_symbol = op->X_op_symbol;\n+      minus.X_op_symbol = 0;\n+      op->X_op_symbol = make_expr_symbol(&minus);\n+      op->X_op = O_add;\n+    }\n+  /* clear X_add_number of the expression */\n+  if (op->X_add_number != 0)\n+    {\n+      expressionS add;\n+      memset (&add, 0, sizeof (add));\n+      add.X_op = O_symbol;\n+      add.X_add_number = op->X_add_number;\n+      add.X_add_symbol = op->X_op_symbol;\n+      add.X_op_symbol = 0;\n+      op->X_add_symbol = make_expr_symbol(&add);\n+    }\n+  else\n+    op->X_add_symbol = op->X_op_symbol;\n+\n+  op->X_add_number = rnum;\n+  op->X_op_symbol = 0;\n+  return 1;\n+}\n+\n /* Parse expression, change operator to O_md1 for indexed addressing*/\n static const char *\n parse_exp (const char *s, expressionS *op)\n@@ -574,32 +900,8 @@ parse_exp (const char *s, expressionS *op)\n     {\n     case O_add:\n     case O_subtract:\n-      if (op->X_md && (O_register == symbol_get_value_expression(op->X_add_symbol)->X_op))\n-        {\n-\t  int rnum = symbol_get_value_expression(op->X_add_symbol)->X_add_number;\n-\t  if ( ((REG_IX != rnum) && (REG_IY != rnum)) || contains_register(op->X_op_symbol) )\n-\t    {\n-\t      ill_op();\n-\t    }\n-\t  else\n-\t    {\n-\t      if (O_subtract == op->X_op)\n-\t        {\n-\t\t  expressionS minus;\n-\t\t  minus.X_op = O_uminus;\n-\t\t  minus.X_add_number = 0;\n-\t\t  minus.X_add_symbol = op->X_op_symbol;\n-\t\t  minus.X_op_symbol = 0;\n-\t\t  op->X_op_symbol = make_expr_symbol(&minus);\n-\t\t  op->X_op = O_add;\n-\t        }\n-\t      symbol_get_value_expression(op->X_op_symbol)->X_add_number += op->X_add_number;\n-\t      op->X_add_number = rnum;\n-\t      op->X_add_symbol = op->X_op_symbol;\n-\t      op->X_op_symbol = 0;\n-\t      op->X_op = O_md1;\n-\t    }\n-\t}\n+      if (unify_indexed(op) && op->X_md)\n+        op->X_op = O_md1;\n       break;\n     case O_register:\n       if ( op->X_md && ((REG_IX == op->X_add_number)||(REG_IY == op->X_add_number)) )\n@@ -608,6 +910,19 @@ parse_exp (const char *s, expressionS *op)\n \t  op->X_op = O_md1;\n \t}\n \tbreak;\n+    case O_constant:\n+      /* parse SDCC syntax where index register offset placed before parentheses */\n+      if (sdcc_compat && is_indir (res))\n+        {\n+          expressionS off;\n+          off = *op;\n+          res = parse_exp (res, op);\n+          if (op->X_op != O_md1 || op->X_add_symbol != zero)\n+            ill_op ();\n+          else\n+              op->X_add_symbol = make_expr_symbol (&off);\n+        }\n+      break;\n     default:\n       break;\n     }\n@@ -705,12 +1020,90 @@ void z80_cons_fix_new (fragS *frag_p, int offset, int nbytes, expressionS *exp)\n     }\n }\n \n+static void\n+emit_data_val (expressionS * val, int size)\n+{\n+  char *p;\n+  bfd_reloc_code_real_type r_type;\n+\n+  p = frag_more (size);\n+  if (val->X_op == O_constant)\n+    {\n+      int i;\n+      for (i = 0; i < size; ++i)\n+\tp[i] = (char)(val->X_add_number >> (i*8));\n+      return;\n+    }\n+\n+  switch (size)\n+    {\n+    case 1: r_type = BFD_RELOC_8; break;\n+    case 2: r_type = BFD_RELOC_16; break;\n+    case 3: r_type = BFD_RELOC_24; break;\n+    case 4: r_type = BFD_RELOC_32; break;\n+    case 8: r_type = BFD_RELOC_64; break;\n+    default:\n+      as_fatal (_(\"invalid data size %d\"), size);\n+    }\n+\n+  if (   (val->X_op == O_register)\n+      || (val->X_op == O_md1)\n+      || contains_register(val->X_add_symbol)\n+      || contains_register(val->X_op_symbol) )\n+    ill_op ();\n+\n+  if (size <= 2 && val->X_op_symbol)\n+    {\n+      bfd_boolean simplify = TRUE;\n+      int shift = symbol_get_value_expression(val->X_op_symbol)->X_add_number;\n+      if (val->X_op == O_bit_and && shift == (1 << (size*8))-1)\n+\tshift = 0;\n+      else if (val->X_op != O_right_shift)\n+\tshift = -1;\n+\n+      if (size == 1)\n+\t{\n+\t  switch (shift)\n+\t    {\n+\t    case 0: r_type = BFD_RELOC_Z80_BYTE0; break;\n+\t    case 8: r_type = BFD_RELOC_Z80_BYTE1; break;\n+\t    case 16: r_type = BFD_RELOC_Z80_BYTE2; break;\n+\t    case 24: r_type = BFD_RELOC_Z80_BYTE3; break;\n+\t    default: simplify = FALSE;\n+\t    }\n+\t}\n+      else /* if (size == 2) */\n+\t{\n+\t  switch (shift)\n+\t    {\n+\t    case 0: r_type = BFD_RELOC_Z80_WORD0; break;\n+\t    case 16: r_type = BFD_RELOC_Z80_WORD1; break;\n+\t    default: simplify = FALSE;\n+\t    }\n+\t}\n+\n+      if (simplify)\n+\t{\n+\t  val->X_op = O_symbol;\n+\t  val->X_op_symbol = NULL;\n+\t  val->X_add_number = 0;\n+\t}\n+    }\n+\n+  fix_new_exp (frag_now, p - frag_now->fr_literal, size, val, FALSE, r_type);\n+}\n+\n static void\n emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n {\n   char *p;\n   int lo, hi;\n \n+  if (r_type == BFD_RELOC_8)\n+    {\n+      emit_data_val (val, 1);\n+      return;\n+    }\n   p = frag_more (1);\n   *p = val->X_add_number;\n   if ( contains_register(val->X_add_symbol) || contains_register(val->X_op_symbol) )\n@@ -736,31 +1129,16 @@ emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n     }\n   else\n     {\n+      /* For symbols only, constants are stored at begin of function */\n       fix_new_exp (frag_now, p - frag_now->fr_literal, 1, val,\n \t\t   (r_type == BFD_RELOC_8_PCREL) ? TRUE : FALSE, r_type);\n-      /* FIXME : Process constant offsets immediately.  */\n     }\n }\n \n static void\n emit_word (expressionS * val)\n {\n-  char *p;\n-\n-  p = frag_more (2);\n-  if (   (val->X_op == O_register)\n-      || (val->X_op == O_md1)\n-      || contains_register(val->X_add_symbol)\n-      || contains_register(val->X_op_symbol) )\n-    ill_op ();\n-  else\n-    {\n-      *p = val->X_add_number;\n-      p[1] = (val->X_add_number>>8);\n-      if (val->X_op != O_constant)\n-\tfix_new_exp (frag_now, p - frag_now->fr_literal, 2,\n-\t\t     val, FALSE, BFD_RELOC_16);\n-    }\n+  emit_data_val (val, (inst_mode & INST_MODE_IL) ? 3 : 2);\n }\n \n static void\n@@ -790,7 +1168,8 @@ emit_mx (char prefix, char opcode, int shift, expressionS * arg)\n \t  if ((prefix == 0) && (rnum & R_INDEX))\n \t    {\n \t      prefix = (rnum & R_IX) ? 0xDD : 0xFD;\n-\t      check_mach (INS_UNDOC);\n+              if (!(ins_ok & INS_EZ80))\n+                check_mach (INS_IDX_HALF);\n \t      rnum &= ~R_INDEX;\n \t    }\n \t  if (rnum > 7)\n@@ -805,6 +1184,11 @@ emit_mx (char prefix, char opcode, int shift, expressionS * arg)\n       * q ++ = opcode + (rnum << shift);\n       break;\n     case O_md1:\n+      if (ins_ok & INS_GBZ80)\n+        {\n+          ill_op ();\n+          break;\n+        }\n       q = frag_more (2);\n       *q++ = (rnum & R_IX) ? 0xDD : 0xFD;\n       *q = (prefix) ? prefix : (opcode + (6 << shift));\n@@ -851,7 +1235,7 @@ emit_m (char prefix, char opcode, const char *args)\n    are allowed).  */\n \n static const char *\n-emit_mr (char prefix, char opcode, const char *args, bfd_boolean unportable)\n+emit_mr (char prefix, char opcode, const char *args)\n {\n   expressionS arg_m, arg_r;\n   const char *p;\n@@ -874,13 +1258,10 @@ emit_mr (char prefix, char opcode, const char *args, bfd_boolean unportable)\n \t      ill_op ();\n \t      break;\n \t    }\n-\t  check_mach (INS_UNPORT);\n-          unportable = TRUE;\n+\t  check_mach (INS_ROT_II_LD);\n \t}\n       /* Fall through.  */\n     case O_register:\n-      if (unportable)\n-\tcheck_mach (INS_UNPORT);\n       emit_mx (prefix, opcode, 0, & arg_m);\n       break;\n     default:\n@@ -889,18 +1270,6 @@ emit_mr (char prefix, char opcode, const char *args, bfd_boolean unportable)\n   return p;\n }\n \n-static const char *\n-emit_mr_z80 (char prefix, char opcode, const char *args)\n-{\n-  return emit_mr (prefix, opcode, args, FALSE);\n-}\n-\n-static const char *\n-emit_mr_unport (char prefix, char opcode, const char *args)\n-{\n-  return emit_mr (prefix, opcode, args, TRUE);\n-}\n-\n static void\n emit_sx (char prefix, char opcode, expressionS * arg_p)\n {\n@@ -934,6 +1303,13 @@ emit_s (char prefix, char opcode, const char *args)\n   const char *p;\n \n   p = parse_exp (args, & arg_s);\n+  if (*p == ',' && arg_s.X_md == 0 && arg_s.X_op == O_register && arg_s.X_add_number == REG_A)\n+    { /* possible instruction in generic format op A,x */\n+      if (!(ins_ok & INS_EZ80) && !sdcc_compat)\n+        ill_op();\n+      ++p;\n+      p = parse_exp (p, & arg_s);\n+    }\n   emit_sx (prefix, opcode, & arg_s);\n   return p;\n }\n@@ -999,6 +1375,7 @@ emit_jr (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n     {\n       q = frag_more (1);\n       *q = opcode;\n+      addr.X_add_number--; /* pcrel computes after offset code */\n       emit_byte (&addr, BFD_RELOC_8_PCREL);\n     }\n   return p;\n@@ -1219,7 +1596,7 @@ emit_bit (char prefix, char opcode, const char * args)\n \tp = emit_m (prefix, opcode + (bn << 3), p);\n       else\n \t/* Set, res : resulting byte can be copied to register.  */\n-        p = emit_mr (prefix, opcode + (bn << 3), p, FALSE);\n+        p = emit_mr (prefix, opcode + (bn << 3), p);\n     }\n   else\n     ill_op ();\n@@ -1349,16 +1726,15 @@ emit_in (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n \t}\n       else\n \t{\n-\t  if (port.X_add_number == REG_C)\n+          if (port.X_add_number == REG_C || port.X_add_number == REG_BC)\n \t    {\n-\t      if (reg.X_add_number == REG_F)\n-\t\tcheck_mach (INS_UNDOC);\n-\t      else\n-\t\t{\n-\t\t  q = frag_more (2);\n-\t\t  *q++ = 0xED;\n-\t\t  *q = 0x40|((reg.X_add_number&7)<<3);\n-\t\t}\n+              if (port.X_add_number == REG_BC && !(ins_ok & INS_EZ80))\n+                ill_op ();\n+              else if (reg.X_add_number == REG_F && !(ins_ok & INS_R800))\n+                check_mach (INS_IN_F_C);\n+          q = frag_more (2);\n+          *q++ = 0xED;\n+          *q = 0x40|((reg.X_add_number&7)<<3);\n \t    }\n \t  else\n \t    ill_op ();\n@@ -1369,6 +1745,39 @@ emit_in (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   return p;\n }\n \n+static const char *\n+emit_in0 (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n+        const char * args)\n+{\n+  expressionS reg, port;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, &reg);\n+  if (*p++ != ',')\n+    {\n+      error (_(\"bad instruction syntax\"));\n+      return p;\n+    }\n+\n+  p = parse_exp (p, &port);\n+  if (reg.X_md == 0\n+      && reg.X_op == O_register\n+      && reg.X_add_number <= 7\n+      && port.X_md\n+      && port.X_op != O_md1\n+      && port.X_op != O_register)\n+    {\n+      q = frag_more (2);\n+      *q++ = 0xED;\n+      *q = 0x00|(reg.X_add_number << 3);\n+      emit_byte (&port, BFD_RELOC_8);\n+    }\n+  else\n+    ill_op ();\n+  return p;\n+}\n+\n static const char *\n emit_out (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n \t const char * args)\n@@ -1389,7 +1798,7 @@ emit_out (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   /* Allow \"out (c), 0\" as unportable instruction.  */\n   if (reg.X_op == O_constant && reg.X_add_number == 0)\n     {\n-      check_mach (INS_UNPORT);\n+      check_mach (INS_OUT_C_0);\n       reg.X_op = O_register;\n       reg.X_add_number = 6;\n     }\n@@ -1411,8 +1820,10 @@ emit_out (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n       }\n     else\n       {\n-\tif (REG_C == port.X_add_number)\n+        if (REG_C == port.X_add_number || port.X_add_number == REG_BC)\n \t  {\n+            if (port.X_add_number == REG_BC && !(ins_ok & INS_EZ80))\n+              ill_op ();\n \t    q = frag_more (2);\n \t    *q++ = 0xED;\n \t    *q = 0x41 | (reg.X_add_number << 3);\n@@ -1423,6 +1834,38 @@ emit_out (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n   return p;\n }\n \n+static const char *\n+emit_out0 (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n+         const char * args)\n+{\n+  expressionS reg, port;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & port);\n+  if (*p++ != ',')\n+    {\n+      error (_(\"bad instruction syntax\"));\n+      return p;\n+    }\n+  p = parse_exp (p, &reg);\n+  if (port.X_md != 0\n+      && port.X_op != O_register\n+      && port.X_op != O_md1\n+      && reg.X_md == 0\n+      && reg.X_op == O_register\n+      && reg.X_add_number <= 7)\n+    {\n+      q = frag_more (2);\n+      *q++ = 0xED;\n+      *q = 0x01 | (reg.X_add_number << 3);\n+      emit_byte (&port, BFD_RELOC_8);\n+    }\n+  else\n+    ill_op ();\n+  return p;\n+}\n+\n static const char *\n emit_rst (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n {\n@@ -1448,279 +1891,896 @@ emit_rst (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n }\n \n static void\n-emit_ldxhl (char prefix, char opcode, expressionS *src, expressionS *d)\n-{\n+emit_ld_m_n(expressionS *dst, expressionS *src)\n+{ /* for 8-bit indirect load to memory instructions like: LD (HL),n or LD (ii+d),n */\n   char *q;\n+  char prefix;\n+  expressionS dst_offset;\n \n-  if (src->X_md)\n-    ill_op ();\n-  else\n+  switch (dst->X_add_number)\n     {\n-      if (src->X_op == O_register)\n-\t{\n-\t  if (src->X_add_number>7)\n-\t    ill_op ();\n-\t  if (prefix)\n-\t    {\n-\t      q = frag_more (2);\n-\t      *q++ = prefix;\n-\t    }\n-\t  else\n-\tq = frag_more (1);\n-\t  *q = opcode + src->X_add_number;\n-\t  if (d)\n-\t    emit_byte (d, BFD_RELOC_Z80_DISP8);\n-\t}\n-      else\n-\t{\n-\t  if (prefix)\n-\t    {\n-\t      q = frag_more (2);\n-\t      *q++ = prefix;\n-\t    }\n-\t  else\n-\t    q = frag_more (1);\n-\t  *q = opcode^0x46;\n-\t  if (d)\n-\t    emit_byte (d, BFD_RELOC_Z80_DISP8);\n-\t  emit_byte (src, BFD_RELOC_8);\n-\t}\n+    case REG_HL: prefix = 0x00; break;\n+    case REG_IX: prefix = 0xDD; break;\n+    case REG_IY: prefix = 0xFD; break;\n+    default:\n+      ill_op ();\n+      return;\n+    }\n+\n+  q = frag_more (prefix ? 2 : 1);\n+  if (prefix)\n+    *q++ = prefix;\n+  *q = 0x36;\n+  if (prefix)\n+    {\n+      dst_offset = *dst;\n+      dst_offset.X_op = O_symbol;\n+      dst_offset.X_add_number = 0;\n+      emit_byte (& dst_offset, BFD_RELOC_Z80_DISP8);\n     }\n+  emit_byte (src, BFD_RELOC_8);\n }\n \n static void\n-emit_ldreg (int dest, expressionS * src)\n-{\n+emit_ld_m_r(expressionS *dst, expressionS *src)\n+{ /* for 8-bit load register to memory instructions: LD (<expression>),r */\n   char *q;\n-  int rnum;\n+  char prefix = 0;\n+  expressionS dst_offset;\n \n-  switch (dest)\n+  switch (dst->X_op)\n     {\n-      /* 8 Bit ld group:  */\n-    case REG_I:\n-    case REG_R:\n-      if (src->X_md == 0 && src->X_op == O_register && src->X_add_number == REG_A)\n-\t{\n-\t  q = frag_more (2);\n-\t  *q++ = 0xED;\n-\t  *q = (dest == REG_I) ? 0x47 : 0x4F;\n-\t}\n-      else\n-\till_op ();\n+    case O_md1:\n+      prefix = (dst->X_add_number == REG_IX) ? 0xDD : 0xFD;\n+      /* Fall through.  */\n+    case O_register:\n+      switch (dst->X_add_number)\n+        {\n+        case REG_BC: /* LD (BC),A */\n+        case REG_DE: /* LD (DE),A */\n+          if (src->X_add_number == REG_A)\n+            {\n+              q = frag_more (1);\n+              *q = 0x02 | ((dst->X_add_number & 3) << 4);\n+              return;\n+            }\n+          break;\n+        case REG_IX:\n+        case REG_IY:\n+        case REG_HL: /* LD (HL),r or LD (ii+d),r */\n+          if (src->X_add_number <= 7)\n+            {\n+              q = frag_more (prefix ? 2 : 1);\n+              if (prefix)\n+                *q++ = prefix;\n+              *q = 0x70 | src->X_add_number;\n+              if (prefix)\n+                {\n+                  dst_offset = *dst;\n+                  dst_offset.X_op = O_symbol;\n+                  dst_offset.X_add_number = 0;\n+                  emit_byte (& dst_offset, BFD_RELOC_Z80_DISP8);\n+                }\n+              return;\n+            }\n+          break;\n+        default:;\n+        }\n+        break;\n+    default: /* LD (nn),A */\n+      if (src->X_add_number == REG_A)\n+        {\n+          q = frag_more (1);\n+          *q = 0x32;\n+          emit_word (dst);\n+          return;\n+        }\n       break;\n+    }\n+    ill_op ();\n+}\n \n-    case REG_A:\n-      if ((src->X_md) && src->X_op != O_register && src->X_op != O_md1)\n-\t{\n-\t  q = frag_more (1);\n-\t  *q = 0x3A;\n-\t  emit_word (src);\n-\t  break;\n-\t}\n+static void\n+emit_ld_m_rr(expressionS *dst, expressionS *src)\n+{ /* for 16-bit load register to memory instructions: LD (<expression>),rr */\n+  char *q;\n+  char prefix = 0;\n+  char opcode = 0;\n+  expressionS dst_offset;\n \n-      if ((src->X_md)\n-\t  && src->X_op == O_register\n-\t  && (src->X_add_number == REG_BC || src->X_add_number == REG_DE))\n-\t{\n-\t  q = frag_more (1);\n-\t  *q = 0x0A + ((src->X_add_number & 1) << 4);\n-\t  break;\n-\t}\n+  switch (dst->X_op)\n+    {\n+    case O_md1:      /* eZ80 instructions LD (ii+d),rr */\n+    case O_register: /* eZ80 instructions LD (HL),rr */\n+      if (!(ins_ok & INS_EZ80)) /* 16-bit indirect load group is supported by eZ80 only */\n+          ill_op ();\n+      switch (dst->X_add_number)\n+        {\n+        case REG_IX: prefix = 0xDD; break;\n+        case REG_IY: prefix = 0xFD; break;\n+        case REG_HL: prefix = 0xED; break;\n+        default:\n+          ill_op ();\n+        }\n+      switch (src->X_add_number)\n+        {\n+        case REG_BC: opcode = 0x0F; break;\n+        case REG_DE: opcode = 0x1F; break;\n+        case REG_HL: opcode = 0x2F; break;\n+        case REG_IX: opcode = (prefix != '\\xfd') ? 0x3F : 0x3E; break;\n+        case REG_IY: opcode = (prefix != '\\xfd') ? 0x3E : 0x3F; break;\n+        default:\n+          ill_op ();\n+        }\n+        q = frag_more (prefix ? 2 : 1);\n+        *q++ = prefix;\n+        *q = opcode;\n+        if (prefix == '\\xfd' || prefix == '\\xdd')\n+          {\n+            dst_offset = *dst;\n+            dst_offset.X_op = O_symbol;\n+            dst_offset.X_add_number = 0;\n+            emit_byte (& dst_offset, BFD_RELOC_Z80_DISP8);\n+          }\n+        break;\n+    default: /* LD (nn),rr */\n+      if (ins_ok & INS_GBZ80)\n+        {\n+          /* GBZ80 supports only LD (nn),SP */\n+          if (src->X_add_number == REG_SP)\n+            {\n+              prefix = 0x00;\n+              opcode = 0x08;\n+            }\n+          else\n+            ill_op ();\n+        }\n+      else\n+        {\n+          switch (src->X_add_number)\n+            {\n+            case REG_BC: prefix = 0xED; opcode = 0x43; break;\n+            case REG_DE: prefix = 0xED; opcode = 0x53; break;\n+            case REG_HL: prefix = 0x00; opcode = 0x22; break;\n+            case REG_IX: prefix = 0xDD; opcode = 0x22; break;\n+            case REG_IY: prefix = 0xFD; opcode = 0x22; break;\n+            case REG_SP: prefix = 0xED; opcode = 0x73; break;\n+            default:\n+              ill_op ();\n+            }\n+        }\n+      q = frag_more (prefix ? 2 : 1);\n+      if (prefix)\n+        *q++ = prefix;\n+      *q = opcode;\n+      emit_word (dst);\n+    }\n+}\n \n-      if ((!src->X_md)\n-\t  && src->X_op == O_register\n-\t  && (src->X_add_number == REG_R || src->X_add_number == REG_I))\n-\t{\n-\t  q = frag_more (2);\n-\t  *q++ = 0xED;\n-\t  *q = (src->X_add_number == REG_I) ? 0x57 : 0x5F;\n-\t  break;\n-\t}\n-      /* Fall through.  */\n+static void\n+emit_ld_r_m (expressionS *dst, expressionS *src)\n+{ /* for 8-bit memory load to register: LD r,(xxx) */\n+  char *q;\n+  char prefix = 0;\n+  char opcode = 0;\n+  expressionS src_offset;\n+\n+  if (dst->X_add_number == REG_A && src->X_op == O_register)\n+    { /* LD A,(BC) or LD A,(DE) */\n+      switch (src->X_add_number)\n+        {\n+        case REG_BC: opcode = 0x0A; break;\n+        case REG_DE: opcode = 0x1A; break;\n+        default: break;\n+        }\n+      if (opcode != 0)\n+        {\n+          q = frag_more (1);\n+          *q = opcode;\n+          return;\n+        }\n+    }\n+\n+  switch (src->X_op)\n+    {\n+    case O_md1:\n+    case O_register:\n+      if (dst->X_add_number > 7)\n+        ill_op ();\n+      opcode = 0x46; /* LD B,(HL) */\n+      switch (src->X_add_number)\n+        {\n+        case REG_HL: prefix = 0x00; break;\n+        case REG_IX: prefix = 0xDD; break;\n+        case REG_IY: prefix = 0xFD; break;\n+        default:\n+          ill_op ();\n+        }\n+      q = frag_more (prefix ? 2 : 1);\n+      if (prefix)\n+        *q++ = prefix;\n+      *q = opcode | ((dst->X_add_number & 7) << 3);\n+      if (prefix)\n+        {\n+          src_offset = *src;\n+          src_offset.X_op = O_symbol;\n+          src_offset.X_add_number = 0;\n+          emit_byte (& src_offset, BFD_RELOC_Z80_DISP8);\n+        }\n+      break;\n+    default: /* LD A,(nn) */\n+      if (dst->X_add_number == REG_A)\n+        {\n+          q = frag_more (1);\n+          *q = 0x3A;\n+          emit_word (src);\n+        }\n+    }\n+}\n+\n+static void\n+emit_ld_r_n (expressionS *dst, expressionS *src)\n+{ /* for 8-bit immediate value load to register: LD r,n */\n+  char *q;\n+  char prefix = 0;\n+\n+  switch (dst->X_add_number)\n+    {\n+    case REG_H|R_IX:\n+    case REG_L|R_IX:\n+      prefix = 0xDD;\n+      break;\n+    case REG_H|R_IY:\n+    case REG_L|R_IY:\n+      prefix = 0xFD;\n+      break;\n+    case REG_A:\n     case REG_B:\n     case REG_C:\n     case REG_D:\n     case REG_E:\n-      emit_sx (0, 0x40 + (dest << 3), src);\n-      break;\n-\n     case REG_H:\n     case REG_L:\n-      if ((src->X_md == 0)\n-\t  && (src->X_op == O_register)\n-\t  && (src->X_add_number & R_INDEX))\n-\till_op ();\n-      else\n-\temit_sx (0, 0x40 + (dest << 3), src);\n       break;\n+    default:\n+      ill_op ();\n+//      return;\n+    }\n \n-    case R_IX | REG_H:\n-    case R_IX | REG_L:\n-    case R_IY | REG_H:\n-    case R_IY | REG_L:\n-      if (src->X_md)\n-\t{\n-\t  ill_op ();\n-\t  break;\n-\t}\n-      check_mach (INS_UNDOC);\n-      if (src-> X_op == O_register)\n-\t{\n-\t  rnum = src->X_add_number;\n-\t  if ((rnum & ~R_INDEX) < 8\n-\t      && ((rnum & R_INDEX) == (dest & R_INDEX)\n-\t\t   || (   (rnum & ~R_INDEX) != REG_H\n-\t\t       && (rnum & ~R_INDEX) != REG_L)))\n-\t    {\n-\t      q = frag_more (2);\n-\t      *q++ = (dest & R_IX) ? 0xDD : 0xFD;\n-\t      *q = 0x40 + ((dest & 0x07) << 3) + (rnum & 7);\n-\t    }\n-\t  else\n-\t    ill_op ();\n-\t}\n+  q = frag_more (prefix ? 2 : 1);\n+  if (prefix)\n+    {\n+      if (ins_ok & INS_GBZ80)\n+        ill_op ();\n+      else if (!(ins_ok & INS_EZ80))\n+        check_mach (INS_IDX_HALF);\n+      *q++ = prefix;\n+    }\n+  *q = 0x06 | ((dst->X_add_number & 7) << 3);\n+  emit_byte (src, BFD_RELOC_8);\n+}\n+\n+static void\n+emit_ld_r_r (expressionS *dst, expressionS *src)\n+{ /* mostly 8-bit load register from register instructions: LD r,r */\n+  /* there are some exceptions: LD SP,HL/IX/IY; LD I,HL and LD HL,I */\n+  char *q;\n+  char prefix = 0;\n+  char opcode = 0;\n+  int ii_halves = 0;\n+\n+  switch (dst->X_add_number)\n+    {\n+    case REG_SP:\n+      switch (src->X_add_number)\n+        {\n+        case REG_HL: prefix = 0x00; break;\n+        case REG_IX: prefix = 0xDD; break;\n+        case REG_IY: prefix = 0xFD; break;\n+        default:\n+          ill_op ();\n+        }\n+      if (ins_ok & INS_GBZ80)\n+        ill_op ();\n+      opcode = 0xF9;\n+      break;\n+    case REG_HL:\n+      if (!(ins_ok & INS_EZ80))\n+        ill_op ();\n+      if (src->X_add_number != REG_I)\n+        ill_op ();\n+      if (cpu_mode < 1)\n+        error (_(\"ADL mode instruction\"));\n+      /* LD HL,I */\n+      prefix = 0xED;\n+      opcode = 0xD7;\n+      break;\n+    case REG_I:\n+      if (src->X_add_number == REG_HL)\n+        {\n+          if (!(ins_ok & INS_EZ80))\n+            ill_op ();\n+          if (cpu_mode < 1)\n+            error (_(\"ADL mode instruction\"));\n+          prefix = 0xED;\n+          opcode = 0xC7;\n+        }\n+      else if (src->X_add_number == REG_A)\n+        {\n+          prefix = 0xED;\n+          opcode = 0x47;\n+        }\n       else\n-\t{\n-\t  q = frag_more (2);\n-\t  *q++ = (dest & R_IX) ? 0xDD : 0xFD;\n-\t  *q = 0x06 + ((dest & 0x07) << 3);\n-\t  emit_byte (src, BFD_RELOC_8);\n-\t}\n+        ill_op ();\n+      break;\n+    case REG_MB:\n+      if (!(ins_ok & INS_EZ80) || (src->X_add_number != REG_A))\n+        ill_op ();\n+      if (cpu_mode < 1)\n+        error (_(\"ADL mode instruction\"));\n+      prefix = 0xED;\n+      opcode = 0x6D;\n+      break;\n+    case REG_R:\n+      if (src->X_add_number == REG_A) /* LD R,A */\n+        {\n+          prefix = 0xED;\n+          opcode = 0x4F;\n+        }\n+      else\n+        ill_op ();\n+      break;\n+    case REG_A:\n+      if (src->X_add_number == REG_I) /* LD A,I */\n+        {\n+          prefix = 0xED;\n+          opcode = 0x57;\n+          break;\n+        }\n+      else if (src->X_add_number == REG_R) /* LD A,R */\n+        {\n+          prefix = 0xED;\n+          opcode = 0x5F;\n+          break;\n+        }\n+      else if (src->X_add_number == REG_MB) /* LD A,MB */\n+        {\n+          if (!(ins_ok & INS_EZ80))\n+            ill_op ();\n+          else\n+            {\n+              if (cpu_mode < 1)\n+                error (_(\"ADL mode instruction\"));\n+              prefix = 0xED;\n+              opcode = 0x6E;\n+            }\n+          break;\n+        }\n+      /* Fall through. */\n+    case REG_B:\n+    case REG_C:\n+    case REG_D:\n+    case REG_E:\n+    case REG_H:\n+    case REG_L:\n+      prefix = 0x00;\n+      break;\n+    case REG_H|R_IX:\n+    case REG_L|R_IX:\n+      prefix = 0xDD;\n+      ii_halves = 1;\n+      break;\n+    case REG_H|R_IY:\n+    case REG_L|R_IY:\n+      prefix = 0xFD;\n+      ii_halves = 1;\n       break;\n+    default:\n+      ill_op ();\n+    }\n \n-      /* 16 Bit ld group:  */\n-    case REG_SP:\n-      if (src->X_md == 0\n-\t  && src->X_op == O_register\n-\t  && REG_HL == (src->X_add_number &~ R_INDEX))\n-\t{\n-\t  q = frag_more ((src->X_add_number & R_INDEX) ? 2 : 1);\n-\t  if (src->X_add_number & R_INDEX)\n-\t    *q++ = (src->X_add_number & R_IX) ? 0xDD : 0xFD;\n-\t  *q = 0xF9;\n-\t  break;\n-\t}\n+  if (opcode == 0)\n+    {\n+      switch (src->X_add_number)\n+        {\n+          case REG_A:\n+          case REG_B:\n+          case REG_C:\n+          case REG_D:\n+          case REG_E:\n+            break;\n+          case REG_H:\n+          case REG_L:\n+            if (prefix != 0)\n+              ill_op (); /* LD iiH/L,H/L are not permitted */\n+            break;\n+          case REG_H|R_IX:\n+          case REG_L|R_IX:\n+            if (prefix == '\\xfd' || dst->X_add_number == REG_H || dst->X_add_number == REG_L)\n+              ill_op (); /* LD IYL,IXL and LD H,IXH are not permitted */\n+            prefix = 0xDD;\n+            ii_halves = 1;\n+            break;\n+          case REG_H|R_IY:\n+          case REG_L|R_IY:\n+            if (prefix == '\\xdd' || dst->X_add_number == REG_H || dst->X_add_number == REG_L)\n+              ill_op (); /* LD IXH,IYH and LD L,IYL are not permitted */\n+            prefix = 0xFD;\n+            ii_halves = 1;\n+            break;\n+          default:\n+            ill_op ();\n+        }\n+      opcode = 0x40 + ((dst->X_add_number & 7) << 3) + (src->X_add_number & 7);\n+    }\n+  if ((ins_ok & INS_GBZ80) && prefix != 0)\n+    ill_op ();\n+  if (ii_halves && !(ins_ok & INS_EZ80))\n+    check_mach (INS_IDX_HALF);\n+  if (prefix == 0 && (ins_ok & INS_EZ80))\n+    {\n+      switch (opcode)\n+        {\n+        case 0x40: /* SIS prefix, in Z80 it is LD B,B */\n+        case 0x49: /* LIS prefix, in Z80 it is LD C,C */\n+        case 0x52: /* SIL prefix, in Z80 it is LD D,D */\n+        case 0x5B: /* LIL prefix, in Z80 it is LD E,E */\n+          as_warn(_(\"unsupported instruction, assembled as NOP\"));\n+          opcode = 0x00;\n+          break;\n+        default:;\n+        }\n+    }\n+  q = frag_more (prefix ? 2 : 1);\n+  if (prefix)\n+    *q++ = prefix;\n+  *q = opcode;\n+}\n+\n+static void\n+emit_ld_rr_m (expressionS *dst, expressionS *src)\n+{ /* for 16-bit indirect load from memory to register: LD rr,(xxx) */\n+  char *q;\n+  char prefix = 0;\n+  char opcode = 0;\n+  expressionS src_offset;\n+\n+  /* GBZ80 has no support for 16-bit load from memory instructions */\n+  if (ins_ok & INS_GBZ80)\n+    ill_op ();\n+\n+  prefix = 0xED;\n+  switch (src->X_op)\n+    {\n+    case O_md1: /* LD rr,(ii+d) */\n+      prefix = (src->X_add_number == REG_IX) ? 0xDD : 0xFD;\n       /* Fall through.  */\n+    case O_register: /* LD rr,(HL) */\n+      /* currently only EZ80 has support for 16bit indirect memory load instructions */\n+      if (!(ins_ok & INS_EZ80))\n+        ill_op ();\n+      switch (dst->X_add_number)\n+        {\n+        case REG_BC: opcode = 0x07; break;\n+        case REG_DE: opcode = 0x17; break;\n+        case REG_HL: opcode = 0x27; break;\n+        case REG_IX: opcode = (!prefix || prefix == '\\xdd') ? 0x37 : 0x31; break;\n+        case REG_IY: opcode = prefix ? ((prefix == '\\xdd') ? 0x31 : 0x37) : 0x36; break;\n+        default:\n+          ill_op ();\n+        }\n+      q = frag_more (2);\n+      *q++ = prefix;\n+      *q = opcode;\n+      if (prefix != '\\xed')\n+        {\n+          src_offset = *src;\n+          src_offset.X_op = O_symbol;\n+          src_offset.X_add_number = 0;\n+          emit_byte (& src_offset, BFD_RELOC_Z80_DISP8);\n+        }\n+      break;\n+    default: /* LD rr,(nn) */\n+      switch (dst->X_add_number)\n+        {\n+        case REG_BC: prefix = 0xED; opcode = 0x4B; break;\n+        case REG_DE: prefix = 0xED; opcode = 0x5B; break;\n+        case REG_HL: prefix = 0x00; opcode = 0x2A; break;\n+        case REG_SP: prefix = 0xED; opcode = 0x7B; break;\n+        case REG_IX: prefix = 0xDD; opcode = 0x2A; break;\n+        case REG_IY: prefix = 0xFD; opcode = 0x2A; break;\n+        default:\n+          ill_op ();\n+        }\n+      q = frag_more (prefix ? 2 : 1);\n+      if (prefix)\n+        *q++ = prefix;\n+      *q = opcode;\n+      emit_word (src);\n+    }\n+    return;\n+}\n+\n+static void\n+emit_ld_rr_nn (expressionS *dst, expressionS *src)\n+{ /* mostly load imediate value to multibyte register instructions: LD rr,nn */\n+  char *q;\n+  char prefix = 0x00;\n+  char opcode = 0x21; /* LD HL,nn */\n+  switch (dst->X_add_number)\n+    {\n+    case REG_IX:\n+      prefix = 0xDD;\n+      break;\n+    case REG_IY:\n+      prefix = 0xFD;\n+      break;\n+    case REG_HL:\n+      break;\n     case REG_BC:\n     case REG_DE:\n-      if (src->X_op == O_register || src->X_op == O_md1)\n-\till_op ();\n-      q = frag_more (src->X_md ? 2 : 1);\n-      if (src->X_md)\n-\t{\n-\t  *q++ = 0xED;\n-\t  *q = 0x4B + ((dest & 3) << 4);\n-\t}\n+    case REG_SP:\n+      opcode = 0x01 + ((dst->X_add_number & 3) << 4);\n+      break;\n+    default:\n+      ill_op ();\n+      return;\n+    }\n+  if (prefix && (ins_ok & INS_GBZ80))\n+    ill_op ();\n+  q = frag_more (prefix ? 2 : 1);\n+  if (prefix)\n+    *q++ = prefix;\n+  *q = opcode;\n+  emit_word (src);\n+}\n+\n+static const char *\n+emit_ld (char prefix_in ATTRIBUTE_UNUSED, char opcode_in ATTRIBUTE_UNUSED,\n+\tconst char * args)\n+{\n+  expressionS dst, src;\n+  const char *p;\n+\n+  p = parse_exp (args, & dst);\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+  p = parse_exp (p, & src);\n+\n+  if (dst.X_md)\n+    {\n+      if (src.X_op == O_register)\n+        {\n+          if (src.X_add_number <= 7)\n+            emit_ld_m_r (& dst, & src); /* LD (xxx),r */\n+          else\n+            emit_ld_m_rr (& dst, & src); /* LD (xxx),rr */\n+        }\n       else\n-\t*q = 0x01 + ((dest & 3) << 4);\n-      emit_word (src);\n+        emit_ld_m_n (& dst, & src); /* LD (hl),n or LD (ix/y+r),n */\n+    }\n+  else if (dst.X_op == O_register)\n+    {\n+      if (src.X_md)\n+        {\n+          if (dst.X_add_number <= 7)\n+            emit_ld_r_m (& dst, & src);\n+          else\n+            emit_ld_rr_m (& dst, & src);\n+        }\n+      else if (src.X_op == O_register)\n+        emit_ld_r_r (& dst, & src);\n+      else if ((dst.X_add_number & ~R_INDEX) <= 7)\n+        emit_ld_r_n (& dst, & src);\n+      else\n+        emit_ld_rr_nn (& dst, & src);\n+    }\n+  else\n+    ill_op ();\n+\n+  return p;\n+}\n+\n+static const char *\n+emit_lddldi (char prefix, char opcode, const char * args)\n+{\n+  expressionS dst, src;\n+  const char *p;\n+  char *q;\n+\n+  if (!(ins_ok & INS_GBZ80))\n+    return emit_insn(prefix, opcode, args);\n+\n+  p = parse_exp (args, & dst);\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+  p = parse_exp (args, & src);\n+\n+  if (dst.X_op != O_register || src.X_op != O_register)\n+    ill_op ();\n+\n+  /* convert opcode 0xA0 . 0x22, 0xA8 . 0x32 */\n+  opcode = (opcode & 0x08) * 2 + 0x22;\n+\n+  if (dst.X_md != 0\n+      && dst.X_add_number == REG_HL\n+      && src.X_md == 0\n+      && src.X_add_number == REG_A)\n+    opcode |= 0x00; /* LDx (HL),A */\n+  else if (dst.X_md == 0\n+      && dst.X_add_number == REG_A\n+      && src.X_md != 0\n+      && src.X_add_number == REG_HL)\n+    opcode |= 0x08; /* LDx A,(HL) */\n+  else\n+    ill_op ();\n+\n+  q = frag_more (1);\n+  *q = opcode;\n+  return p;\n+}\n+\n+static const char *\n+emit_ldh (char prefix ATTRIBUTE_UNUSED, char opcode ATTRIBUTE_UNUSED,\n+        const char * args)\n+{\n+  expressionS dst, src;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & dst);\n+  if (*p++ != ',')\n+    {\n+      error (_(\"bad instruction syntax\"));\n+      return p;\n+    }\n+\n+  p = parse_exp (p, & src);\n+  if (dst.X_md == 0\n+      && dst.X_op == O_register\n+      && dst.X_add_number == REG_A\n+      && src.X_md != 0\n+      && src.X_op != O_md1\n+      && src.X_op != O_register)\n+    {\n+      q = frag_more (1);\n+      *q = 0xF0;\n+      emit_byte (& src, BFD_RELOC_8);\n+    }\n+  else if (dst.X_md != 0\n+      && dst.X_op != O_md1\n+      && src.X_md == 0\n+      && src.X_op == O_register\n+      && src.X_add_number == REG_A)\n+    {\n+      if (dst.X_op == O_register)\n+        {\n+          if (dst.X_add_number == REG_C)\n+            {\n+              q = frag_more (1);\n+              *q = 0xE2;\n+            }\n+          else\n+            ill_op();\n+        }\n+      else\n+        {\n+          q = frag_more (1);\n+          *q = 0xE0;\n+          emit_byte (& dst, BFD_RELOC_8);\n+        }\n+    }\n+  else\n+    ill_op ();\n+\n+  return p;\n+}\n+\n+static const char *\n+parse_lea_pea_args (const char * args, expressionS *op)\n+{\n+  const char *p;\n+  p = parse_exp (args, op);\n+  if (sdcc_compat && *p == ',' && op->X_op == O_register)\n+    {\n+      expressionS off;\n+      p = parse_exp (p + 1, &off);\n+      op->X_op = O_add;\n+      op->X_add_symbol = make_expr_symbol (&off);\n+    }\n+  return p;\n+}\n+\n+static const char *\n+emit_lea (char prefix, char opcode, const char * args)\n+{\n+  expressionS dst, src;\n+  const char *p;\n+  char *q;\n+  int rnum;\n+\n+  p = parse_exp (args, & dst);\n+  if (dst.X_md != 0 || dst.X_op != O_register)\n+    ill_op ();\n+\n+  rnum = dst.X_add_number;\n+  switch (rnum)\n+    {\n+    case REG_BC:\n+    case REG_DE:\n+    case REG_HL:\n+      opcode = 0x02 | ((rnum & 0x03) << 4);\n+      break;\n+    case REG_IX:\n+      opcode = 0x32; /* lea ix,ix+d has opcode 0x32; lea ix,iy+d has opcode 0x54 */\n+      break;\n+    case REG_IY:\n+      opcode = 0x33; /* lea iy,iy+d has opcode 0x33; lea iy,ix+d has opcode 0x55 */\n+      break;\n+    default:\n+      ill_op ();\n+    }\n+\n+  if (*p++ != ',')\n+    error (_(\"bad instruction syntax\"));\n+\n+  p = parse_lea_pea_args (p, & src);\n+  if (src.X_md != 0 || src.X_op != O_add /*&& src.X_op != O_register*/)\n+    ill_op ();\n+\n+  rnum = src.X_add_number;\n+  switch (src.X_op)\n+    {\n+    case O_add:\n+      break;\n+    case O_register: /* permit instructions like LEA rr,IX without displacement specified */\n+      src.X_add_symbol = zero;\n+      break;\n+    default:\n+      ill_op ();\n+    }\n+\n+  switch (rnum)\n+    {\n+    case REG_IX:\n+      opcode = (opcode == 0x33) ? 0x55 : (opcode|0x00);\n       break;\n+    case REG_IY:\n+      opcode = (opcode == 0x32) ? 0x54 : (opcode|0x01);\n+    }\n+\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  *q = opcode;\n+\n+  src.X_op = O_symbol;\n+  src.X_add_number = 0;\n+  emit_byte (& src, BFD_RELOC_Z80_DISP8);\n+\n+  return p;\n+}\n+\n+static const char *\n+emit_mlt (char prefix, char opcode, const char * args)\n+{\n+  expressionS arg;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & arg);\n+  if (arg.X_md != 0 || arg.X_op != O_register || !(arg.X_add_number & R_ARITH))\n+    ill_op ();\n+\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  *q = opcode | ((arg.X_add_number & 3) << 4);\n+\n+  return p;\n+}\n \n-    case REG_HL:\n-    case REG_HL | R_IX:\n-    case REG_HL | R_IY:\n-      if (src->X_op == O_register || src->X_op == O_md1)\n-\till_op ();\n-      q = frag_more ((dest & R_INDEX) ? 2 : 1);\n-      if (dest & R_INDEX)\n-\t* q ++ = (dest & R_IX) ? 0xDD : 0xFD;\n-      *q = (src->X_md) ? 0x2A : 0x21;\n-      emit_word (src);\n-      break;\n+static const char *\n+emit_pea (char prefix, char opcode, const char * args)\n+{\n+  expressionS arg;\n+  const char *p;\n+  char *q;\n \n-    case REG_AF:\n-    case REG_F:\n-      ill_op ();\n-      break;\n+  p = parse_lea_pea_args (args, & arg);\n+  if (arg.X_md != 0\n+      || (/*arg.X_op != O_register &&*/ arg.X_op != O_add)\n+      || !(arg.X_add_number & R_INDEX))\n+    ill_op ();\n+  /* PEA ii without displacement is mostly typo,\n+     because there is PUSH instruction which is shorter and faster */\n+  /*if (arg.X_op == O_register)\n+    as_warn(_(\"PEA is used without displacement, use PUSH instead\"));*/\n \n-    default:\n-      abort ();\n-    }\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  *q = opcode + (arg.X_add_number == REG_IY ? 1 : 0);\n+\n+  arg.X_op = O_symbol;\n+  arg.X_add_number = 0;\n+  emit_byte (& arg, BFD_RELOC_Z80_DISP8);\n+\n+  return p;\n }\n \n static const char *\n-emit_ld (char prefix_in ATTRIBUTE_UNUSED, char opcode_in ATTRIBUTE_UNUSED,\n-\tconst char * args)\n+emit_reti (char prefix, char opcode, const char * args)\n {\n-  expressionS dst, src;\n+  if (ins_ok & INS_GBZ80)\n+    return emit_insn(0x00, 0xD9, args);\n+\n+  return emit_insn(prefix, opcode, args);\n+}\n+\n+static const char *\n+emit_tst (char prefix, char opcode, const char *args)\n+{\n+  expressionS arg_s;\n   const char *p;\n   char *q;\n-  char prefix, opcode;\n+  int rnum;\n \n-  p = parse_exp (args, &dst);\n-  if (*p++ != ',')\n-    error (_(\"bad instruction syntax\"));\n-  p = parse_exp (p, &src);\n+  p = parse_exp (args, & arg_s);\n+  if (*p == ',' && arg_s.X_md == 0 && arg_s.X_op == O_register && arg_s.X_add_number == REG_A)\n+    {\n+      if (!(ins_ok & INS_EZ80))\n+        ill_op();\n+      ++p;\n+      p = parse_exp (p, & arg_s);\n+    }\n \n-  switch (dst.X_op)\n+  rnum = arg_s.X_add_number;\n+  switch (arg_s.X_op)\n     {\n     case O_md1:\n-      {\n-        expressionS dst_offset = dst;\n-\tdst_offset.X_op = O_symbol;\n-\tdst_offset.X_add_number = 0;\n-\temit_ldxhl ((dst.X_add_number & R_IX) ? 0xDD : 0xFD, 0x70,\n-\t\t    &src, &dst_offset);\n-      }\n+      ill_op ();\n       break;\n-\n     case O_register:\n-      if (dst.X_md)\n-\t{\n-\t  switch (dst.X_add_number)\n-\t    {\n-\t    case REG_BC:\n-\t    case REG_DE:\n-\t      if (src.X_md == 0 && src.X_op == O_register && src.X_add_number == REG_A)\n-\t\t{\n-\t\t  q = frag_more (1);\n-\t\t  *q = 0x02 + ( (dst.X_add_number & 1) << 4);\n-\t\t}\n-\t      else\n-\t\till_op ();\n-\t      break;\n-\t    case REG_HL:\n-\t      emit_ldxhl (0, 0x70, &src, NULL);\n-\t      break;\n-\t    default:\n-\t      ill_op ();\n-\t    }\n-\t}\n-      else\n-\temit_ldreg (dst.X_add_number, &src);\n+      rnum = arg_s.X_add_number;\n+      if (arg_s.X_md != 0)\n+        {\n+          if (rnum != REG_HL)\n+            ill_op ();\n+          else\n+            rnum = 6;\n+        }\n+      q = frag_more (2);\n+      *q++ = prefix;\n+      *q = opcode | (rnum << 3);\n       break;\n-\n     default:\n-      if (src.X_md != 0 || src.X_op != O_register)\n-\till_op ();\n-      prefix = opcode = 0;\n-      switch (src.X_add_number)\n-\t{\n-\tcase REG_A:\n-\t  opcode = 0x32; break;\n-\tcase REG_BC: case REG_DE: case REG_SP:\n-\t  prefix = 0xED; opcode = 0x43 + ((src.X_add_number&3)<<4); break;\n-\tcase REG_HL:\n-\t  opcode = 0x22; break;\n-\tcase REG_HL|R_IX:\n-\t  prefix = 0xDD; opcode = 0x22; break;\n-\tcase REG_HL|R_IY:\n-\t  prefix = 0xFD; opcode = 0x22; break;\n-\t}\n-      if (opcode)\n-\t{\n-\t  q = frag_more (prefix?2:1);\n-\t  if (prefix)\n-\t    *q++ = prefix;\n-\t  *q = opcode;\n-\t  emit_word (&dst);\n-\t}\n-      else\n-\till_op ();\n+      if (arg_s.X_md)\n+        ill_op ();\n+      q = frag_more (2);\n+      *q++ = prefix;\n+      *q = opcode | 0x60;\n+      emit_byte (& arg_s, BFD_RELOC_8);\n     }\n   return p;\n }\n \n+static const char *\n+emit_tstio (char prefix, char opcode, const char *args)\n+{\n+  expressionS arg;\n+  const char *p;\n+  char *q;\n+\n+  p = parse_exp (args, & arg);\n+  if (arg.X_md || arg.X_op == O_register || arg.X_op == O_md1)\n+    ill_op ();\n+\n+  q = frag_more (2);\n+  *q++ = prefix;\n+  *q = opcode;\n+  emit_byte(& arg, BFD_RELOC_8);\n+\n+  return p;\n+}\n+\n static void\n emit_data (int size ATTRIBUTE_UNUSED)\n {\n@@ -1767,6 +2827,76 @@ emit_data (int size ATTRIBUTE_UNUSED)\n   input_line_pointer = (char *)(p-1);\n }\n \n+static void\n+z80_cons (int size)\n+{\n+  const char *p;\n+  expressionS exp;\n+\n+  if (is_it_end_of_statement ())\n+    {\n+      demand_empty_rest_of_line ();\n+      return;\n+    }\n+  p = skip_space (input_line_pointer);\n+\n+  do\n+    {\n+      p = parse_exp (p, &exp);\n+      if (exp.X_op == O_md1 || exp.X_op == O_register)\n+\t{\n+\t  ill_op ();\n+\t  break;\n+\t}\n+      if (exp.X_md)\n+\tas_warn (_(\"parentheses ignored\"));\n+      emit_data_val (&exp, size);\n+      p = skip_space (p);\n+  } while (*p++ == ',') ;\n+  input_line_pointer = (char *)(p-1);\n+}\n+\n+/* next functions were commented out because it is difficult to mix\n+   both ADL and Z80 mode instructions within one COFF file:\n+   objdump cannot recognize point of mode switching.\n+*/\n+static void\n+set_cpu_mode (int mode)\n+{\n+  if (ins_ok & INS_EZ80)\n+    cpu_mode = mode;\n+  else\n+    error (_(\"CPU mode is unsupported by target\"));\n+}\n+\n+static void\n+assume (int arg ATTRIBUTE_UNUSED)\n+{\n+  char *name;\n+  char c;\n+  int n;\n+\n+  input_line_pointer = (char*)skip_space (input_line_pointer);\n+  c = get_symbol_name (& name);\n+  if (strncasecmp(name, \"ADL\", 4) != 0)\n+    {\n+      ill_op ();\n+      return;\n+    }\n+\n+  restore_line_pointer (c);\n+  input_line_pointer = (char*)skip_space (input_line_pointer);\n+  if (*input_line_pointer++ != '=')\n+    {\n+      error (_(\"assignment expected\"));\n+      return;\n+    }\n+  input_line_pointer = (char*)skip_space (input_line_pointer);\n+  n = get_single_number ();\n+\n+  set_cpu_mode (n);\n+}\n+\n static const char *\n emit_mulub (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n {\n@@ -1834,97 +2964,267 @@ emit_muluw (char prefix ATTRIBUTE_UNUSED, char opcode, const char * args)\n   return p;\n }\n \n+static int\n+assemble_suffix (const char **suffix)\n+{\n+  static\n+  const char sf[8][4] = \n+    {\n+      \"il\",\n+      \"is\",\n+      \"l\",\n+      \"lil\",\n+      \"lis\",\n+      \"s\",\n+      \"sil\",\n+      \"sis\"\n+    };\n+  const char *p;\n+  const char (*t)[4];\n+  char sbuf[4];\n+  int i;\n+\n+  p = *suffix;\n+  if (*p++ != '.')\n+    return 0;\n+\n+  for (i = 0; (i < 3) && (ISALPHA (*p)); i++)\n+    sbuf[i] = TOLOWER (*p++);\n+  if (*p && !ISSPACE(*p))\n+    return 0;\n+  *suffix = p;\n+  sbuf[i] = 0;\n+\n+  t = bsearch(sbuf, sf, ARRAY_SIZE (sf), sizeof(sf[0]), (int(*)(const void*, const void*))strcmp);\n+  if (t == NULL)\n+    return 0;\n+  i = t - sf;\n+  switch (i)\n+    {\n+      case 0: /* IL */\n+        i = cpu_mode ? 0x5B : 0x52;\n+        break;\n+      case 1: /* IS */\n+        i = cpu_mode ? 0x49 : 0x40;\n+        break;\n+      case 2: /* L */\n+        i = cpu_mode ? 0x5B : 0x49;\n+        break;\n+      case 3: /* LIL */\n+        i = 0x5B;\n+        break;\n+      case 4: /* LIS */\n+        i = 0x49;\n+        break;\n+      case 5: /* S */\n+        i = cpu_mode ? 0x52 : 0x40;\n+        break;\n+      case 6: /* SIL */\n+        i = 0x52;\n+        break;\n+      case 7: /* SIS */\n+        i = 0x40;\n+        break;\n+    }\n+  *frag_more(1) = (char)i;\n+  switch (i)\n+    {\n+    case 0x40: inst_mode = INST_MODE_FORCED | INST_MODE_S | INST_MODE_IS; break;\n+    case 0x49: inst_mode = INST_MODE_FORCED | INST_MODE_L | INST_MODE_IS; break;\n+    case 0x52: inst_mode = INST_MODE_FORCED | INST_MODE_S | INST_MODE_IL; break;\n+    case 0x5B: inst_mode = INST_MODE_FORCED | INST_MODE_L | INST_MODE_IL; break;\n+    }\n+  return 1;\n+}\n+\n+static void\n+psect (int arg)\n+{\n+#if defined(OBJ_ELF)\n+  return obj_elf_section (arg);\n+#elif defined(OBJ_COFF)\n+  return obj_coff_section (arg);\n+#else\n+#error Unknown object format\n+#endif\n+}\n+\n+static void\n+set_inss (int inss)\n+{\n+  int old_ins;\n+\n+  if (!sdcc_compat)\n+    as_fatal (_(\"Invalid directive\"));\n+\n+  old_ins = ins_ok;\n+  ins_ok &= INS_MARCH_MASK;\n+  ins_ok |= inss;\n+  if (old_ins != ins_ok)\n+    cpu_mode = 0;\n+}\n+\n+static void\n+ignore (int arg ATTRIBUTE_UNUSED)\n+{\n+  ignore_rest_of_line ();\n+}\n+\n+static void\n+area (int arg)\n+{\n+  char *p;\n+  if (!sdcc_compat)\n+    as_fatal (_(\"Invalid directive\"));\n+  for (p = input_line_pointer; *p && *p != '(' && *p != '\\n'; p++)\n+    ;\n+  if (*p == '(')\n+    {\n+      *p = '\\n';\n+      psect (arg);\n+      *p++ = '(';\n+      ignore_rest_of_line ();\n+    }\n+  else\n+    psect (arg);\n+}\n+\n /* Port specific pseudo ops.  */\n const pseudo_typeS md_pseudo_table[] =\n {\n+  { \".area\", area, 0},\n+  { \".assume\", assume, 0},\n+  { \".ez80\", set_inss, INS_EZ80},\n+  { \".gbz80\", set_inss, INS_GBZ80},\n+  { \".module\", ignore, 0},\n+  { \".optsdcc\", ignore, 0},\n+  { \".r800\", set_inss, INS_R800},\n+  { \".set\", s_set, 0},\n+  { \".z180\", set_inss, INS_Z180},\n+  { \".z80\", set_inss, INS_Z80},\n   { \"db\" , emit_data, 1},\n-  { \"d24\", cons, 3},\n-  { \"d32\", cons, 4},\n-  { \"def24\", cons, 3},\n-  { \"def32\", cons, 4},\n+  { \"d24\", z80_cons, 3},\n+  { \"d32\", z80_cons, 4},\n+  { \"def24\", z80_cons, 3},\n+  { \"def32\", z80_cons, 4},\n   { \"defb\", emit_data, 1},\n+  { \"defm\", emit_data, 1},\n   { \"defs\", s_space, 1}, /* Synonym for ds on some assemblers.  */\n-  { \"defw\", cons, 2},\n+  { \"defw\", z80_cons, 2},\n   { \"ds\",   s_space, 1}, /* Fill with bytes rather than words.  */\n-  { \"dw\", cons, 2},\n-  { \"psect\", obj_coff_section, 0}, /* TODO: Translate attributes.  */\n+  { \"dw\", z80_cons, 2},\n+  { \"psect\", psect, 0}, /* TODO: Translate attributes.  */\n   { \"set\", 0, 0}, \t\t/* Real instruction on z80.  */\n   { NULL, 0, 0 }\n } ;\n \n static table_t instab[] =\n {\n-  { \"adc\",  0x88, 0x4A, emit_adc },\n-  { \"add\",  0x80, 0x09, emit_add },\n-  { \"and\",  0x00, 0xA0, emit_s },\n-  { \"bit\",  0xCB, 0x40, emit_bit },\n-  { \"call\", 0xCD, 0xC4, emit_jpcc },\n-  { \"ccf\",  0x00, 0x3F, emit_insn },\n-  { \"cp\",   0x00, 0xB8, emit_s },\n-  { \"cpd\",  0xED, 0xA9, emit_insn },\n-  { \"cpdr\", 0xED, 0xB9, emit_insn },\n-  { \"cpi\",  0xED, 0xA1, emit_insn },\n-  { \"cpir\", 0xED, 0xB1, emit_insn },\n-  { \"cpl\",  0x00, 0x2F, emit_insn },\n-  { \"daa\",  0x00, 0x27, emit_insn },\n-  { \"dec\",  0x0B, 0x05, emit_incdec },\n-  { \"di\",   0x00, 0xF3, emit_insn },\n-  { \"djnz\", 0x00, 0x10, emit_jr },\n-  { \"ei\",   0x00, 0xFB, emit_insn },\n-  { \"ex\",   0x00, 0x00, emit_ex},\n-  { \"exx\",  0x00, 0xD9, emit_insn },\n-  { \"halt\", 0x00, 0x76, emit_insn },\n-  { \"im\",   0xED, 0x46, emit_im },\n-  { \"in\",   0x00, 0x00, emit_in },\n-  { \"inc\",  0x03, 0x04, emit_incdec },\n-  { \"ind\",  0xED, 0xAA, emit_insn },\n-  { \"indr\", 0xED, 0xBA, emit_insn },\n-  { \"ini\",  0xED, 0xA2, emit_insn },\n-  { \"inir\", 0xED, 0xB2, emit_insn },\n-  { \"jp\",   0xC3, 0xC2, emit_jpcc },\n-  { \"jr\",   0x18, 0x20, emit_jrcc },\n-  { \"ld\",   0x00, 0x00, emit_ld },\n-  { \"ldd\",  0xED, 0xA8, emit_insn },\n-  { \"lddr\", 0xED, 0xB8, emit_insn },\n-  { \"ldi\",  0xED, 0xA0, emit_insn },\n-  { \"ldir\", 0xED, 0xB0, emit_insn },\n-  { \"mulub\", 0xED, 0xC5, emit_mulub }, /* R800 only.  */\n-  { \"muluw\", 0xED, 0xC3, emit_muluw }, /* R800 only.  */\n-  { \"neg\",  0xed, 0x44, emit_insn },\n-  { \"nop\",  0x00, 0x00, emit_insn },\n-  { \"or\",   0x00, 0xB0, emit_s },\n-  { \"otdr\", 0xED, 0xBB, emit_insn },\n-  { \"otir\", 0xED, 0xB3, emit_insn },\n-  { \"out\",  0x00, 0x00, emit_out },\n-  { \"outd\", 0xED, 0xAB, emit_insn },\n-  { \"outi\", 0xED, 0xA3, emit_insn },\n-  { \"pop\",  0x00, 0xC1, emit_pop },\n-  { \"push\", 0x00, 0xC5, emit_pop },\n-  { \"res\",  0xCB, 0x80, emit_bit },\n-  { \"ret\",  0xC9, 0xC0, emit_retcc },\n-  { \"reti\", 0xED, 0x4D, emit_insn },\n-  { \"retn\", 0xED, 0x45, emit_insn },\n-  { \"rl\",   0xCB, 0x10, emit_mr_z80 },\n-  { \"rla\",  0x00, 0x17, emit_insn },\n-  { \"rlc\",  0xCB, 0x00, emit_mr_z80 },\n-  { \"rlca\", 0x00, 0x07, emit_insn },\n-  { \"rld\",  0xED, 0x6F, emit_insn },\n-  { \"rr\",   0xCB, 0x18, emit_mr_z80 },\n-  { \"rra\",  0x00, 0x1F, emit_insn },\n-  { \"rrc\",  0xCB, 0x08, emit_mr_z80 },\n-  { \"rrca\", 0x00, 0x0F, emit_insn },\n-  { \"rrd\",  0xED, 0x67, emit_insn },\n-  { \"rst\",  0x00, 0xC7, emit_rst},\n-  { \"sbc\",  0x98, 0x42, emit_adc },\n-  { \"scf\",  0x00, 0x37, emit_insn },\n-  { \"set\",  0xCB, 0xC0, emit_bit },\n-  { \"sla\",  0xCB, 0x20, emit_mr_z80 },\n-  { \"sli\",  0xCB, 0x30, emit_mr_unport },\n-  { \"sll\",  0xCB, 0x30, emit_mr_unport },\n-  { \"sra\",  0xCB, 0x28, emit_mr_z80 },\n-  { \"srl\",  0xCB, 0x38, emit_mr_z80 },\n-  { \"sub\",  0x00, 0x90, emit_s },\n-  { \"xor\",  0x00, 0xA8, emit_s },\n+  { \"adc\",  0x88, 0x4A, emit_adc,  INS_ALL },\n+  { \"add\",  0x80, 0x09, emit_add,  INS_ALL },\n+  { \"and\",  0x00, 0xA0, emit_s,    INS_ALL },\n+  { \"bit\",  0xCB, 0x40, emit_bit,  INS_ALL },\n+  { \"call\", 0xCD, 0xC4, emit_jpcc, INS_ALL },\n+  { \"ccf\",  0x00, 0x3F, emit_insn, INS_ALL },\n+  { \"cp\",   0x00, 0xB8, emit_s,    INS_ALL },\n+  { \"cpd\",  0xED, 0xA9, emit_insn, INS_NOT_GBZ80 },\n+  { \"cpdr\", 0xED, 0xB9, emit_insn, INS_NOT_GBZ80 },\n+  { \"cpi\",  0xED, 0xA1, emit_insn, INS_NOT_GBZ80 },\n+  { \"cpir\", 0xED, 0xB1, emit_insn, INS_NOT_GBZ80 },\n+  { \"cpl\",  0x00, 0x2F, emit_insn, INS_ALL },\n+  { \"daa\",  0x00, 0x27, emit_insn, INS_ALL },\n+  { \"dec\",  0x0B, 0x05, emit_incdec,INS_ALL },\n+  { \"di\",   0x00, 0xF3, emit_insn, INS_ALL },\n+  { \"djnz\", 0x00, 0x10, emit_jr,   INS_NOT_GBZ80 },\n+  { \"ei\",   0x00, 0xFB, emit_insn, INS_ALL },\n+  { \"ex\",   0x00, 0x00, emit_ex,   INS_NOT_GBZ80 },\n+  { \"exx\",  0x00, 0xD9, emit_insn, INS_NOT_GBZ80 },\n+  { \"halt\", 0x00, 0x76, emit_insn, INS_ALL },\n+  { \"im\",   0xED, 0x46, emit_im,   INS_NOT_GBZ80 },\n+  { \"in\",   0x00, 0x00, emit_in,   INS_NOT_GBZ80 },\n+  { \"in0\",  0xED, 0x00, emit_in0,  INS_Z180|INS_EZ80 },\n+  { \"inc\",  0x03, 0x04, emit_incdec,INS_ALL },\n+  { \"ind\",  0xED, 0xAA, emit_insn, INS_NOT_GBZ80 },\n+  { \"ind2\", 0xED, 0x8C, emit_insn, INS_EZ80 },\n+  { \"ind2r\",0xED, 0x9C, emit_insn, INS_EZ80 },\n+  { \"indm\", 0xED, 0x8A, emit_insn, INS_EZ80 },\n+  { \"indmr\",0xED, 0x9A, emit_insn, INS_EZ80 },\n+  { \"indr\", 0xED, 0xBA, emit_insn, INS_NOT_GBZ80 },\n+  { \"indrx\",0xED, 0xCA, emit_insn, INS_EZ80 },\n+  { \"ini\",  0xED, 0xA2, emit_insn, INS_NOT_GBZ80 },\n+  { \"ini2\", 0xED, 0x84, emit_insn, INS_EZ80 },\n+  { \"ini2r\",0xED, 0x94, emit_insn, INS_EZ80 },\n+  { \"inim\", 0xED, 0x82, emit_insn, INS_EZ80 },\n+  { \"inimr\",0xED, 0x92, emit_insn, INS_EZ80 },\n+  { \"inir\", 0xED, 0xB2, emit_insn, INS_NOT_GBZ80 },\n+  { \"inirx\",0xED, 0xC2, emit_insn, INS_EZ80 },\n+  { \"jp\",   0xC3, 0xC2, emit_jpcc, INS_ALL },\n+  { \"jr\",   0x18, 0x20, emit_jrcc, INS_ALL },\n+  { \"ld\",   0x00, 0x00, emit_ld,   INS_ALL },\n+  { \"ldd\",  0xED, 0xA8, emit_lddldi,INS_ALL }, /* GBZ80 has special meaning */\n+  { \"lddr\", 0xED, 0xB8, emit_insn, INS_NOT_GBZ80 },\n+  { \"ldh\",  0xE0, 0x00, emit_ldh,  INS_GBZ80 },\n+  { \"ldhl\", 0xE0, 0x00, emit_ldh,  INS_GBZ80 },\n+  { \"ldi\",  0xED, 0xA0, emit_lddldi,INS_ALL }, /* GBZ80 has special meaning */\n+  { \"ldir\", 0xED, 0xB0, emit_insn, INS_NOT_GBZ80 },\n+  { \"lea\",  0xED, 0x02, emit_lea,  INS_EZ80 },\n+  { \"mlt\",  0xED, 0x4C, emit_mlt,  INS_Z180|INS_EZ80 },\n+  { \"mulub\",0xED, 0xC5, emit_mulub,INS_R800 },\n+  { \"muluw\",0xED, 0xC3, emit_muluw,INS_R800 },\n+  { \"neg\",  0xed, 0x44, emit_insn, INS_NOT_GBZ80 },\n+  { \"nop\",  0x00, 0x00, emit_insn, INS_ALL },\n+  { \"or\",   0x00, 0xB0, emit_s,    INS_ALL },\n+  { \"otd2r\",0xED, 0xBC, emit_insn, INS_EZ80 },\n+  { \"otdm\", 0xED, 0x8B, emit_insn, INS_Z180|INS_EZ80 },\n+  { \"otdmr\",0xED, 0x9B, emit_insn, INS_Z180|INS_EZ80 },\n+  { \"otdr\", 0xED, 0xBB, emit_insn, INS_NOT_GBZ80 },\n+  { \"otdrx\",0xED, 0xCB, emit_insn, INS_EZ80 },\n+  { \"oti2r\",0xED, 0xB4, emit_insn, INS_EZ80 },\n+  { \"otim\", 0xED, 0x83, emit_insn, INS_Z180|INS_EZ80 },\n+  { \"otimr\",0xED, 0x93, emit_insn, INS_Z180|INS_EZ80 },\n+  { \"otir\", 0xED, 0xB3, emit_insn, INS_NOT_GBZ80 },\n+  { \"otirx\",0xED, 0xC3, emit_insn, INS_EZ80 },\n+  { \"out\",  0x00, 0x00, emit_out,  INS_NOT_GBZ80 },\n+  { \"out0\", 0xED, 0x01, emit_out0, INS_Z180|INS_EZ80 },\n+  { \"outd\", 0xED, 0xAB, emit_insn, INS_NOT_GBZ80 },\n+  { \"outd2\",0xED, 0xAC, emit_insn, INS_EZ80 },\n+  { \"outi\", 0xED, 0xA3, emit_insn, INS_NOT_GBZ80 },\n+  { \"outi2\",0xED, 0xA4, emit_insn, INS_EZ80 },\n+  { \"pea\",  0xED, 0x65, emit_pea,  INS_EZ80 },\n+  { \"pop\",  0x00, 0xC1, emit_pop,  INS_ALL },\n+  { \"push\", 0x00, 0xC5, emit_pop,  INS_ALL },\n+  { \"res\",  0xCB, 0x80, emit_bit,  INS_ALL },\n+  { \"ret\",  0xC9, 0xC0, emit_retcc,INS_ALL },\n+  { \"reti\", 0xED, 0x4D, emit_reti, INS_ALL }, /*GBZ80 has its own opcode for it*/\n+  { \"retn\", 0xED, 0x45, emit_insn, INS_NOT_GBZ80 },\n+  { \"rl\",   0xCB, 0x10, emit_mr,   INS_ALL },\n+  { \"rla\",  0x00, 0x17, emit_insn, INS_ALL },\n+  { \"rlc\",  0xCB, 0x00, emit_mr,   INS_ALL },\n+  { \"rlca\", 0x00, 0x07, emit_insn, INS_ALL },\n+  { \"rld\",  0xED, 0x6F, emit_insn, INS_NOT_GBZ80 },\n+  { \"rr\",   0xCB, 0x18, emit_mr,   INS_ALL },\n+  { \"rra\",  0x00, 0x1F, emit_insn, INS_ALL },\n+  { \"rrc\",  0xCB, 0x08, emit_mr,   INS_ALL },\n+  { \"rrca\", 0x00, 0x0F, emit_insn, INS_ALL },\n+  { \"rrd\",  0xED, 0x67, emit_insn, INS_NOT_GBZ80 },\n+  { \"rsmix\",0xED, 0x7E, emit_insn, INS_EZ80 },\n+  { \"rst\",  0x00, 0xC7, emit_rst,  INS_ALL },\n+  { \"sbc\",  0x98, 0x42, emit_adc,  INS_ALL },\n+  { \"scf\",  0x00, 0x37, emit_insn, INS_ALL },\n+  { \"set\",  0xCB, 0xC0, emit_bit,  INS_ALL },\n+  { \"sla\",  0xCB, 0x20, emit_mr,   INS_ALL },\n+  { \"sli\",  0xCB, 0x30, emit_mr,   INS_SLI },\n+  { \"sll\",  0xCB, 0x30, emit_mr,   INS_SLI },\n+  { \"slp\",  0xED, 0x76, emit_insn, INS_Z180|INS_EZ80 },\n+  { \"sra\",  0xCB, 0x28, emit_mr,   INS_ALL },\n+  { \"srl\",  0xCB, 0x38, emit_mr,   INS_ALL },\n+  { \"stmix\",0xED, 0x7D, emit_insn, INS_EZ80 },\n+  { \"stop\", 0x00, 0x10, emit_insn, INS_GBZ80 },\n+  { \"sub\",  0x00, 0x90, emit_s,    INS_ALL },\n+  { \"swap\", 0xCB, 0x30, emit_mr,   INS_GBZ80 },\n+  { \"tst\",  0xED, 0x04, emit_tst,  INS_Z180|INS_EZ80 },\n+  { \"tstio\",0xED, 0x74, emit_tstio,INS_Z180|INS_EZ80 },\n+  { \"xor\",  0x00, 0xA8, emit_s,    INS_ALL },\n } ;\n \n void\n@@ -1936,9 +3236,10 @@ md_assemble (char *str)\n   table_t *insp;\n \n   err_flag = 0;\n+  inst_mode = cpu_mode ? (INST_MODE_L | INST_MODE_IL) : (INST_MODE_S | INST_MODE_IS);\n   old_ptr = input_line_pointer;\n   p = skip_space (str);\n-  for (i = 0; (i < BUFLEN) && (ISALPHA (*p));)\n+  for (i = 0; (i < BUFLEN) && (ISALPHA (*p) || ISDIGIT (*p));)\n     buf[i++] = TOLOWER (*p++);\n \n   if (i == BUFLEN)\n@@ -1947,18 +3248,27 @@ md_assemble (char *str)\n       buf[BUFLEN-1] = 0;\n       as_bad (_(\"Unknown instruction '%s'\"), buf);\n     }\n-  else if ((*p) && (!ISSPACE (*p)))\n-    as_bad (_(\"syntax error\"));\n   else\n     {\n+      if ((*p) && (!ISSPACE (*p)))\n+        {\n+          if (*p != '.' || !(ins_ok & INS_EZ80) || !assemble_suffix(&p))\n+            {\n+              as_bad (_(\"syntax error\"));\n+              goto end;\n+            }\n+        }\n       buf[i] = 0;\n       p = skip_space (p);\n       key = buf;\n \n       insp = bsearch (&key, instab, ARRAY_SIZE (instab),\n \t\t    sizeof (instab[0]), key_cmp);\n-      if (!insp)\n-\tas_bad (_(\"Unknown instruction '%s'\"), buf);\n+      if (!insp || (insp->inss && !(insp->inss & ins_ok)))\n+        {\n+          as_bad (_(\"Unknown instruction '%s'\"), buf);\n+          *frag_more(1) = 0;\n+        }\n       else\n \t{\n \t  p = insp->fp (insp->prefix, insp->opcode, p);\n@@ -1968,6 +3278,7 @@ md_assemble (char *str)\n \t\t  *p);\n \t}\n     }\n+end:\n   input_line_pointer = old_ptr;\n }\n \n@@ -2013,6 +3324,34 @@ md_apply_fix (fixS * fixP, valueT* valP, segT seg ATTRIBUTE_UNUSED)\n         }\n       break;\n \n+    case BFD_RELOC_Z80_BYTE0:\n+      *p_lit++ = val;\n+      fixP->fx_no_overflow = 1;\n+      if (fixP->fx_addsy == NULL)\n+        fixP->fx_done = 1;\n+      break;\n+\n+    case BFD_RELOC_Z80_BYTE1:\n+      *p_lit++ = (val >> 8);\n+      fixP->fx_no_overflow = 1;\n+      if (fixP->fx_addsy == NULL)\n+        fixP->fx_done = 1;\n+      break;\n+\n+    case BFD_RELOC_Z80_BYTE2:\n+      *p_lit++ = (val >> 16);\n+      fixP->fx_no_overflow = 1;\n+      if (fixP->fx_addsy == NULL)\n+        fixP->fx_done = 1;\n+      break;\n+\n+    case BFD_RELOC_Z80_BYTE3:\n+      *p_lit++ = (val >> 24);\n+      fixP->fx_no_overflow = 1;\n+      if (fixP->fx_addsy == NULL)\n+        fixP->fx_done = 1;\n+      break;\n+\n     case BFD_RELOC_8:\n       if (val > 255 || val < -128)\n \tas_warn_where (fixP->fx_file, fixP->fx_line, _(\"overflow\"));\n@@ -2022,6 +3361,15 @@ md_apply_fix (fixS * fixP, valueT* valP, segT seg ATTRIBUTE_UNUSED)\n \tfixP->fx_done = 1;\n       break;\n \n+    case BFD_RELOC_Z80_WORD1:\n+      *p_lit++ = (val >> 16);\n+      *p_lit++ = (val >> 24);\n+      fixP->fx_no_overflow = 1;\n+      if (fixP->fx_addsy == NULL)\n+        fixP->fx_done = 1;\n+      break;\n+\n+    case BFD_RELOC_Z80_WORD0:\n     case BFD_RELOC_16:\n       *p_lit++ = val;\n       *p_lit++ = (val >> 8);\n@@ -2086,3 +3434,236 @@ tc_gen_reloc (asection *seg ATTRIBUTE_UNUSED , fixS *fixp)\n \n   return reloc;\n }\n+\n+int\n+z80_tc_label_is_local (const char *name)\n+{\n+  const char *n;\n+  const char *p;\n+  if (local_label_prefix == NULL)\n+    return 0;\n+  for (p = local_label_prefix, n = name; *p && *n && *n == *p; p++, n++)\n+    ;\n+  return *p == '\\0';\n+}\n+\n+/* Parse floating point number from string and compute mantissa and\n+   exponent. Mantissa is normalized.\n+*/\n+#define EXP_MIN -0x10000\n+#define EXP_MAX 0x10000\n+static int\n+str_to_broken_float (bfd_boolean *signP, bfd_uint64_t *mantissaP, int *expP)\n+{\n+  char *p;\n+  bfd_boolean sign;\n+  bfd_uint64_t mantissa = 0;\n+  int exponent = 0;\n+  int i;\n+\n+  p = (char*)skip_space (input_line_pointer);\n+  sign = (*p == '-');\n+  *signP = sign;\n+  if (sign || *p == '+')\n+    ++p;\n+  if (strncasecmp(p, \"NaN\", 3) == 0)\n+    {\n+      *mantissaP = 0;\n+      *expP = 0;\n+      input_line_pointer = p + 3;\n+      return 1;\n+    }\n+  if (strncasecmp(p, \"inf\", 3) == 0)\n+    {\n+      *mantissaP = 1ull << 63;\n+      *expP = EXP_MAX;\n+      input_line_pointer = p + 3;\n+      return 1;\n+    }\n+  for (; ISDIGIT(*p); ++p)\n+    {\n+      if (mantissa >> 60)\n+\t{\n+\t  if (*p >= '5')\n+\t    mantissa++;\n+\t  break;\n+\t}\n+      mantissa = mantissa * 10 + (*p - '0');\n+    }\n+  /* skip non-significant digits */\n+  for (; ISDIGIT(*p); ++p)\n+    exponent++;\n+\n+  if (*p == '.')\n+    {\n+      p++;\n+      if (!exponent) /* if no precission overflow */\n+\t{\n+\t  for (; ISDIGIT(*p); ++p, --exponent)\n+\t    {\n+\t      if (mantissa >> 60)\n+\t\t{\n+\t\t  if (*p >= '5')\n+\t\t    mantissa++;\n+\t\t  break;\n+\t\t}\n+\t      mantissa = mantissa * 10 + (*p - '0');\n+\t    }\n+\t}\n+      for (; ISDIGIT(*p); ++p)\n+\t;\n+    }\n+  if (*p == 'e' || *p == 'E')\n+    {\n+      int es;\n+      int t = 0;\n+      ++p;\n+      es = (*p == '-');\n+      if (es || *p == '+')\n+        p++;\n+      for (; ISDIGIT(*p); ++p)\n+\t{\n+\t  if (t < 100)\n+\t    t = t * 10 + (*p - '0');\n+\t}\n+      exponent += (es) ? -t : t;\n+    }\n+  if (ISALNUM(*p) || *p == '.')\n+    return 0;\n+  input_line_pointer = p;\n+  if (mantissa == 0)\n+    {\n+      *mantissaP = 1ull << 63;\n+      *expP = EXP_MIN;\n+      return 1; /* result is 0 */\n+    }\n+  /* normalization */\n+  for (; mantissa <= ~0ull/10; --exponent)\n+    mantissa *= 10;\n+  /*\n+     now we have sign, mantissa, and signed decimal exponent\n+     need to recompute to binary exponent\n+  */\n+  for (i = 64; exponent > 0; --exponent)\n+    {\n+      /* be sure that no integer overflow */\n+      while (mantissa > ~0ull/10)\n+\t{\n+\t  mantissa >>= 1;\n+\t  i += 1;\n+\t}\n+\tmantissa *= 10;\n+    }\n+  for (; exponent < 0; ++exponent)\n+    {\n+      while (!(mantissa >> 63))\n+\t{\n+\t  mantissa <<= 1;\n+\t  i -= 1;\n+\t}\n+\tmantissa /= 10;\n+    }\n+  /* normalization */\n+  for (; !(mantissa >> 63); --i)\n+    mantissa <<= 1;\n+  *mantissaP = mantissa;\n+  *expP = i;\n+  return 1;\n+}\n+\n+static const char *\n+str_to_zeda32(char *litP, int *sizeP)\n+{\n+  bfd_uint64_t mantissa;\n+  bfd_boolean sign;\n+  int exponent;\n+  unsigned i;\n+\n+  *sizeP = 4;\n+  if (!str_to_broken_float (&sign, &mantissa, &exponent))\n+    return _(\"invalid syntax\");\n+  /* I do not know why decrement is needed */\n+  --exponent;\n+  /* shift by 39 bits right keeping 25 bit mantissa for rounding */\n+  mantissa >>= 39;\n+  /* do rounding */\n+  ++mantissa;\n+  /* make 24 bit mantissa */\n+  mantissa >>= 1;\n+  /* check for overflow */\n+  if (mantissa >> 24)\n+    {\n+      mantissa >>= 1;\n+      ++exponent;\n+    }\n+  /* check for 0 */\n+  if (exponent < -127)\n+    {\n+      exponent = -128;\n+      mantissa = 0;\n+    }\n+  else if (exponent > 127)\n+    {\n+      exponent = -128;\n+      mantissa = sign ? 0xc00000 : 0x400000;\n+    }\n+  else if (mantissa == 0)\n+    {\n+      exponent = -128;\n+      mantissa = 0x200000;\n+    }\n+  else if (!sign)\n+    mantissa &= (1ull << 23) - 1;\n+  for (i = 0; i < 24; i += 8)\n+    *litP++ = (char)(mantissa >> i);\n+  *litP = (char)(0x80 + exponent);\n+  return NULL;\n+}\n+\n+/*\n+  Math48 by Anders Hejlsberg support.\n+  Mantissa is 39 bits wide, exponent 8 bit wide.\n+  Format is:\n+  bit 47: sign\n+  bit 46-8: normalized mantissa (bits 38-0, bit39 assumed to be 1)\n+  bit 7-0: exponent+128 (0 - value is null)\n+  MIN: 2.938735877e-39\n+  MAX: 1.701411835e+38\n+*/\n+static const char *\n+str_to_float48(char *litP, int *sizeP)\n+{\n+  bfd_uint64_t mantissa;\n+  bfd_boolean sign;\n+  int exponent;\n+  unsigned i;\n+\n+  *sizeP = 6;\n+  if (!str_to_broken_float (&sign, &mantissa, &exponent))\n+    return _(\"invalid syntax\");\n+  /* shift by 23 bits right keeping 41 bit mantissa for rounding */\n+  mantissa >>= 23;\n+  /* do rounding */\n+  ++mantissa;\n+  /* make 40 bit mantissa */\n+  mantissa >>= 1;\n+  /* check for overflow */\n+  if (mantissa >> 40)\n+    {\n+      mantissa >>= 1;\n+      ++exponent;\n+    }\n+  if (exponent < -127)\n+    {\n+      memset (litP, 0, 6);\n+      return NULL;\n+    }\n+  if (exponent > 127)\n+    return _(\"overflow\");\n+  if (!sign)\n+    mantissa &= (1ull << 39) - 1;\n+  *litP++ = (char)(0x80 + exponent);\n+  for (i = 0; i < 40; i += 8)\n+    *litP++ = (char)(mantissa >> i);\n+  return NULL;\n+}"
    },
    {
      "sha": "57490270913bb178b0cde066a1fad66ec18380b8",
      "filename": "gas/config/tc-z80.h",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/config/tc-z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/config/tc-z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -24,6 +24,9 @@\n #define TC_Z80\n \n #define TARGET_ARCH   bfd_arch_z80\n+#ifndef OBJ_COFF\n+#define TARGET_FORMAT \"elf32-z80\"\n+#endif\n #define BFD_ARCH      TARGET_ARCH\n #define COFF_MAGIC    0x5A80\n #define TARGET_MACH   0\n@@ -76,22 +79,23 @@ extern void z80_cons_fix_new (fragS *, int, int, expressionS *);\n /* Values passed to md_apply_fix3 don't include the symbol value.  */\n #define MD_APPLY_SYM_VALUE(FIX) 0\n \n-#define LISTING_WORD_SIZE 2\n+#define LISTING_WORD_SIZE 1\n \n /* A single '=' is accepted as a comparison operator.  */\n #define O_SINGLE_EQ O_eq\n \n /* A '$' is used to refer to the current location or as a hex. prefix.  */\n #define DOLLAR_DOT\n #define DOLLAR_AMBIGU                1\n+#define LOCAL_LABEL_PREFIX           '.'\n #define LOCAL_LABELS_FB              1\n+#define LOCAL_LABELS_DOLLAR          1\n #define LITERAL_PREFIXPERCENT_BIN\n #define NUMBERS_WITH_SUFFIX          1\n #define NO_PSEUDO_DOT                1\n /* We allow single quotes to delimit character constants as\n    well, but it is cleaner to handle that in tc-z80.c.  */\n #define SINGLE_QUOTE_STRINGS\n-#define NO_STRING_ESCAPES\n \n /* An `.lcomm' directive with no explicit alignment parameter will\n    use this macro to set P2VAR to the alignment that a request for\n@@ -106,4 +110,10 @@ extern void z80_cons_fix_new (fragS *, int, int, expressionS *);\n    we use to identify registers.  */\n #define md_register_arithmetic 0\n \n+#define TC_LABEL_IS_LOCAL z80_tc_label_is_local\n+extern int z80_tc_label_is_local (const char *name);\n+\n+#define elf_tc_final_processing\tz80_elf_final_processing\n+extern void z80_elf_final_processing (void);\n+\n #endif"
    },
    {
      "sha": "15b33fdf63cea1cdacf0c62dfb5610f74376b1dd",
      "filename": "gas/doc/as.texi",
      "status": "modified",
      "additions": 45,
      "deletions": 2,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/doc/as.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/doc/as.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/as.texi?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -630,7 +630,10 @@ gcc(1), ld(1), and the Info entries for @file{binutils} and @file{ld}.\n @ifset Z80\n \n @emph{Target Z80 options:}\n-  [@b{-z80}] [@b{-r800}]\n+  [@b{-z80}]|[@b{-z180}]|[@b{-r800}]|[@b{-ez80}]|[@b{-ez80-adl}]\n+  [@b{-strict}]|[@b{-full}]\n+  [@b{-with-inst=@var{INST}[,...]}] [@b{-Wnins @var{INST}[,...]}]\n+  [@b{-without-inst=@var{INST}[,...]}] [@b{-Fins @var{INST}[,...]}]\n   [@b{ -ignore-undocumented-instructions}] [@b{-Wnud}]\n   [@b{ -ignore-unportable-instructions}] [@b{-Wnup}]\n   [@b{ -warn-undocumented-instructions}] [@b{-Wud}]\n@@ -1943,10 +1946,34 @@ Xtensa processor.\n The following options are available when @value{AS} is configured for\n a Z80 family processor.\n @table @gcctabopt\n+\n @item -z80\n Assemble for Z80 processor.\n @item -r800\n Assemble for R800 processor.\n+@item -z180\n+Assemble for Z180 processor.\n+@item -ez80\n+Assemble for eZ80 processor in Z80 memory mode by default.\n+@item -ez80-adl\n+Assemble for eZ80 processor in ADL memory mode by default.\n+\n+@item  @code{-colonless}\n+Accept colonless labels. All names at line begin are treated as labels.\n+@item  @code{-sdcc}\n+Accept assembler code produces by SDCC.\n+\n+@item  @code{-strict}\n+Accept documented instructions only.\n+@item  @code{-full}\n+Accept all known Z80 instructions.\n+@item  @code{-with-inst=INST[,...]}\n+@itemx @code{-Wnins INST[,...]}\n+Enable specified undocumented instruction(s).\n+@item  @code{-without-inst=INST[,...]}\n+@itemx @code{-Fins INST[,...]}\n+Disable specified undocumented instruction(s).\n+\n @item  -ignore-undocumented-instructions\n @itemx -Wnud\n Assemble undocumented Z80 instructions that also work on R800 without warning.\n@@ -1966,6 +1993,22 @@ Treat all undocumented instructions as errors.\n @itemx -Fup\n Treat undocumented Z80 instructions that do not work on R800 as errors.\n @end table\n+\n+Folowing undocumented instructions may be enabled/disabled by\n+@code{-with-inst}/@code{-without-inst}:\n+@table @gcctabopt\n+@item  @code{idx-reg-halves}\n+All operations with halves of index registers (IXL, IXH, IYL, IYH).\n+@item  @code{sli}\n+SLI or SLL instruction.\n+@item  @code{op-ii-ld}\n+Istructions like @code{<op> (<ii>+<d>),<r>}, where @code{<op>}\n+is shift or bit manipulation instruction (RLC, SLA, SET, RES...).\n+@item @code{in-f-c}\n+Instruction @code{IN F,(C)}.\n+@item @code{out-c-0}\n+Instruction @code{OUT (C),0}\n+@end table\n @end ifset\n \n @c man end\n@@ -6770,7 +6813,7 @@ If you @code{.set} a global symbol, the value stored in the object\n file is the last value stored into it.\n \n @ifset Z80\n-On Z80 @code{set} is a real instruction, use\n+On Z80 @code{set} is a real instruction, use @code{.set} or\n @samp{@var{symbol} defl @var{expression}} instead.\n @end ifset\n "
    },
    {
      "sha": "a4366464046adc32d3c0a4b73d4bab43b840c035",
      "filename": "gas/doc/c-z80.texi",
      "status": "modified",
      "additions": 86,
      "deletions": 31,
      "changes": 117,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/doc/c-z80.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/doc/c-z80.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-z80.texi?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -27,41 +27,90 @@\n @section Options\n @cindex Z80 options\n @cindex options for Z80\n-The Zilog Z80 and Ascii R800 version of @code{@value{AS}} have a few machine\n-dependent options.\n @table @option\n @cindex @code{-z80} command-line option, Z80\n @item -z80\n-Produce code for the Z80 processor. There are additional options to\n-request warnings and error messages for undocumented instructions.\n-@item  -ignore-undocumented-instructions\n-@itemx -Wnud\n+Produce code for the Z80 processor. By default accepted undocumented\n+operations with halves of index registers (IXL, IXH, IYL, IYH) and\n+instuction IN F,(C). Other useful undocumented instructions produces\n+warnings. Undocumented instructions may not work on some CPUs, use\n+them on your own risk.\n+\n+@cindex @code{-r800} command-line option, R800\n+@item -r800\n+Produce code for the R800 processor.\n+\n+@cindex @code{-z180} command-line option, Z180\n+@item -z180\n+Produce code for the Z180 processor.\n+\n+@cindex @code{-ez80} command-line option, eZ80\n+@item -ez80\n+Produce code for the eZ80 processor in Z80 memory mode by default.\n+\n+@cindex @code{-ez80-adl} command-line option, eZ80\n+@item -ez80-adl\n+Produce code for the eZ80 processor in ADL memory mode by default.\n+\n+@cindex Compatibility options\n+@item  @code{-colonless}\n+Accept colonless labels. All names at line begin are treated as labels.\n+\n+@item  @code{-sdcc}\n+Accept assembler code produces by SDCC.\n+\n+@cindex Undocumented instruction control\n+@item  @code{-strict}\n+Accept documented instructions only.\n+\n+@item  @code{-full}\n+Accept all known Z80 instructions.\n+\n+@item  @code{-with-inst=INST[,...]}\n+@itemx @code{-Wnins INST[,...]}\n+Enable specified undocumented instruction(s).\n+\n+@item  @code{-without-inst=INST[,...]}\n+@itemx @code{-Fins INST[,...]}\n+Disable specified undocumented instruction(s).\n+\n+@cindex Obsolete options\n+@item  @code{-ignore-undocumented-instructions}\n+@itemx @code{-Wnud}\n Silently assemble undocumented Z80-instructions that have been adopted\n-as documented R800-instructions.\n-@item  -ignore-unportable-instructions\n-@itemx -Wnup\n+as documented R800-instructions .\n+@item  @code{-ignore-unportable-instructions}\n+@itemx @code{-Wnup}\n Silently assemble all undocumented Z80-instructions.\n-@item  -warn-undocumented-instructions\n-@itemx -Wud\n+@item  @code{-warn-undocumented-instructions}\n+@itemx @code{-Wud}\n Issue warnings for undocumented Z80-instructions that work on R800, do\n not assemble other undocumented instructions without warning.\n-@item  -warn-unportable-instructions\n-@itemx -Wup\n+@item  @code{-warn-unportable-instructions}\n+@itemx @code{-Wup}\n Issue warnings for other undocumented Z80-instructions, do not treat any\n undocumented instructions as errors.\n-@item  -forbid-undocumented-instructions\n-@itemx -Fud\n+@item  @code{-forbid-undocumented-instructions}\n+@itemx @code{-Fud}\n Treat all undocumented z80-instructions as errors.\n @item  -forbid-unportable-instructions\n-@itemx -Fup\n+@itemx @code{-Fup}\n Treat undocumented z80-instructions that do not work on R800 as errors.\n+@end table\n \n-@cindex @code{-r800} command-line option, Z80\n-@item -r800\n-Produce code for the R800 processor. The assembler does not support\n-undocumented instructions for the R800.\n-In line with common practice, @code{@value{AS}} uses Z80 instruction names\n-for the R800 processor, as far as they exist.\n+Known undocumented instructions.\n+@table @option\n+@cindex Known undocumented instructions\n+@item  @code{idx-reg-halves}\n+All operations with halves of index registers (IXL, IXH, IYL, IYH).\n+@item  @code{sli}\n+SLI or SLL instruction. Same as @code{SLA r; INC r}.\n+@item  @code{op-ii-ld}\n+Istructions like @code{<op> (<ii>+<d>),<r>}. For example: @code{RL (IX+5),C}\n+@item @code{in-f-c}\n+Instruction @code{IN F,(C)}.\n+@item @code{out-c-0}\n+Instruction @code{OUT (C),0}\n @end table\n \n @cindex Z80 Syntax\n@@ -158,6 +207,11 @@ compatibility with other assemblers.\n These are the additional directives in @code{@value{AS}} for the Z80:\n \n @table @code\n+@item assume @var{ADL}@samp{=}@var{expression}\n+Set ADL status for eZ80. Non-null value enable compilation ADL mode else\n+used Z80 mode. ADL and Z80 mode produces incompatible object code. Mixing\n+both of them within one binary may lead problems with disassembler.\n+\n @item db @var{expression}|@var{string}[,@var{expression}|@var{string}...]\n @itemx defb @var{expression}|@var{string}[,@var{expression}|@var{string}...]\n For each @var{string} the characters are copied to the object file, for\n@@ -192,9 +246,6 @@ These directives set the value of @var{symbol} to @var{expression}. If\n @code{equ} is used, it is an error if @var{symbol} is already defined.\n Symbols defined with @code{equ} are not protected from redefinition.\n \n-@item set\n-This is a normal instruction on Z80, and not an assembler directive.\n-\n @item psect @var{name}\n A synonym for @xref{Section}, no second argument should be given.\n @ignore\n@@ -223,18 +274,19 @@ The section is marked as read only.\n \n @node Z80 Opcodes\n @section Opcodes\n-In line with common practice, Z80 mnemonics are used for both the Z80 and\n-the R800.\n+In line with common practice, Z80 mnemonics are used for the Z80,\n+the Z180, eZ80 and the R800.\n \n In many instructions it is possible to use one of the half index\n registers (@samp{ixl},@samp{ixh},@samp{iyl},@samp{iyh}) in stead of an\n 8-bit general purpose register. This yields instructions that are\n-documented on the R800 and undocumented on the Z80.\n-Similarly @code{in f,(c)} is documented on the R800 and undocumented on\n-the Z80.\n+documented on the eZ80 and the R800, undocumented on the Z80 and\n+unsupported on the Z180.\n+Similarly @code{in f,(c)} is documented on the R800, undocumented on\n+the Z80 and unsupported on the Z180 and the eZ80.\n \n The assembler also supports the following undocumented Z80-instructions,\n-that have not been adopted in the R800 instruction set:\n+that have not been adopted in any other instruction set:\n @table @code\n @item out (c),0\n Sends zero to the port pointed to by register c.\n@@ -266,3 +318,6 @@ As above, but with @samp{iy} instead of @samp{ix}.\n The web site at @uref{http://www.z80.info} is a good starting place to\n find more information on programming the Z80.\n \n+You may enable or disable any of these instructions for any target CPU\n+even this instruction is not supported by any real CPU of this type.\n+Useful for custom CPU cores."
    },
    {
      "sha": "21dc23cd1d09c48aa27ab8ff728078d9c89af9e8",
      "filename": "gas/po/gas.pot",
      "status": "modified",
      "additions": 3667,
      "deletions": 2885,
      "changes": 6552,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/po/gas.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/po/gas.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/po/gas.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268"
    },
    {
      "sha": "dfd5eeefa3d2c39254818f5705e39b24b62ddab1",
      "filename": "gas/testsuite/gas/all/cond.l",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/cond.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/cond.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/cond.l?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -24,8 +24,8 @@\n   29[ \t]+.else\n   31[ \t]+.endif\n [ \t]*[1-9][0-9]*[ \t]+\n-[ \t]*[1-9][0-9]*[ \t]+\\.comm[ \t]+c,[ \t]*1[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.ifndef[ \t]+c[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.comm[ \t]+v_c,[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.ifndef[ \t]+v_c[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n [ \t]*[1-9][0-9]*[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+x[ \t]*<>[ \t]*x[ \t]*\n@@ -39,15 +39,15 @@\n [ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+y[ \t]*<>[ \t]*z[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n [ \t]*[1-9][0-9]*[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+a,[ \t]*y[ \t]*\\+[ \t]*1[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+b,[ \t]*z[ \t]*-[ \t]*1[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+a[ \t]*==[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+v_a,[ \t]*y[ \t]*\\+[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+v_b,[ \t]*z[ \t]*-[ \t]*1[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*==[ \t]*x[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+a[ \t]*-[ \t]*1[ \t]*<>[ \t]*x[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*-[ \t]*1[ \t]*<>[ \t]*x[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+a[ \t]*<>[ \t]*b[ \t]*\\+[ \t]*2[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*<>[ \t]*v_b[ \t]*\\+[ \t]*2[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n-[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+a[ \t]*-[ \t]*b[ \t]*<>[ \t]*2[ \t]*\n+[ \t]*[1-9][0-9]*[ \t]+\\.if[ \t]+v_a[ \t]*-[ \t]*v_b[ \t]*<>[ \t]*2[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.endif[ \t]*\n [ \t]*[1-9][0-9]*[ \t]*\n [ \t]*[1-9][0-9]*[ \t]+\\.equiv[ \t]+x,[ \t]*0[ \t]*"
    },
    {
      "sha": "9a7c6e3c1574b877e701fcaa77bd4072abbd97a1",
      "filename": "gas/testsuite/gas/all/cond.s",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/cond.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/cond.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/cond.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -30,8 +30,8 @@\n \t.long\t9\n \t.endif\n \n-\t.comm\tc, 1\n-\t.ifndef c\n+\t.comm\tv_c, 1\n+\t.ifndef v_c\n \t.err\n \t.endif\n \n@@ -50,18 +50,18 @@\n \t.err\n \t.endif\n \n-\t.equiv\ta, y + 1\n-\t.equiv\tb, z - 1\n-\t.if\ta == x\n+\t.equiv\tv_a, y + 1\n+\t.equiv\tv_b, z - 1\n+\t.if\tv_a == x\n \t.err\n \t.endif\n-\t.if\ta - 1 <> x\n+\t.if\tv_a - 1 <> x\n \t.err\n \t.endif\n-\t.if\ta <> b + 2\n+\t.if\tv_a <> v_b + 2\n \t.err\n \t.endif\n-\t.if\ta - b <> 2\n+\t.if\tv_a - v_b <> 2\n \t.err\n \t.endif\n "
    },
    {
      "sha": "211ab9f1c8b71019699429d311a570ed72470163",
      "filename": "gas/testsuite/gas/all/fwdexp.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/fwdexp.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/fwdexp.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/fwdexp.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -5,7 +5,7 @@\n \n RELOCATION RECORDS FOR .*\n OFFSET +TYPE +VALUE \n-0+ .*(\\.data|i)(|\\+0xf+e|\\+0xf+c|\\+0xf+8|-0x0*2|-0x0*4|-0x0*8)\n+0+ .*(\\.data|label_i)(|\\+0xf+e|\\+0xf+c|\\+0xf+8|-0x0*2|-0x0*4|-0x0*8)\n \n Contents of section .*\n  0+ (0+|feff|fffe|fcffffff|fffffffc|f8ffffff|f8ffffff ffffffff|ffffffff fffffff8|0+4) .*"
    },
    {
      "sha": "ecc7c4e37e4738a2e1138932313ccd7c9bba0057",
      "filename": "gas/testsuite/gas/all/fwdexp.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/fwdexp.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/all/fwdexp.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/all/fwdexp.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,6 +1,6 @@\n  .data\n-i:\n+label_i:\n \n  .text\n- .dc.a i + (. - .L1)\n+ .dc.a label_i + (. - .L1)\n .L1:"
    },
    {
      "sha": "f6eed4a34c6a3bfca1f38823ae9799b05191c1c1",
      "filename": "gas/testsuite/gas/elf/section2.e-mips",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.e-mips",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.e-mips",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section2.e-mips?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -5,7 +5,7 @@ Symbol table '.symtab' contains 9 entries:\n  +1: 0+0 +0 +SECTION +LOCAL +DEFAULT +1 (|\\.text)\n  +2: 0+0 +0 +SECTION +LOCAL +DEFAULT +2 (|\\.data)\n  +3: 0+0 +0 +SECTION +LOCAL +DEFAULT +3 (|\\.bss)\n- +4: 0+0 +0 +SECTION +LOCAL +DEFAULT +7 (|A)\n+ +4: 0+0 +0 +SECTION +LOCAL +DEFAULT +7 (|AAA)\n  +5: 0+0 +0 +SECTION +LOCAL +DEFAULT +4 (|\\.reginfo)\n  +6: 0+0 +0 +SECTION +LOCAL +DEFAULT +5 (|\\.MIPS\\.abiflags)\n  +7: 0+0 +0 +SECTION +LOCAL +DEFAULT +6 (|\\.pdr)"
    },
    {
      "sha": "c311ff94947cc0140c43d2ffcd53c5b6ca230f93",
      "filename": "gas/testsuite/gas/elf/section2.l",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section2.l?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -3,6 +3,6 @@\n .*GAS.*\n \n \n-[ \t]+1[ \t]+.section A\n-[ \t]+2[ \t]+.global A\n+[ \t]+1[ \t]+.section AAA\n+[ \t]+2[ \t]+.global AAA\n [ \t]+3 0000 31[ \t]+.byte 49"
    },
    {
      "sha": "2c181e5399111f295ba0e1bf963302ce87d3d2d0",
      "filename": "gas/testsuite/gas/elf/section2.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/elf/section2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section2.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,3 @@\n-          .section A\n-          .global A\n+          .section AAA\n+          .global AAA\n \t  .byte 49"
    },
    {
      "sha": "871dbec25269c2e5e715635cba089ec1d522623e",
      "filename": "gas/testsuite/gas/macros/app1.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app1.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,7 +1,7 @@\n #nm: -n\n #name: APP with macro without NO_APP\n #...\n-0+ T a\n+0+ T label_a\n #...\n-0+[1-f] T b\n+0+[1-f] T label_b\n #pass"
    },
    {
      "sha": "0d1aeac69a2dfdb1fd86662a7b151fa019c79246",
      "filename": "gas/testsuite/gas/macros/app1.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app1.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,12 +1,12 @@\n #NO_APP\n  .text\n  .macro foo\n- .globl a\n-a:\n+ .globl label_a\n+label_a:\n  .long 42\n  .endm\n #APP\n  foo\n- .globl b\n-b:\n+ .globl label_b\n+label_b:\n  .long 56"
    },
    {
      "sha": "7f71df39c77fb7be46eac6c58e38f7c6736abec9",
      "filename": "gas/testsuite/gas/macros/app2.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app2.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,7 +1,7 @@\n #nm: -n\n #name: APP with macro then NO_APP\n #...\n-0+ T a\n+0+ T label_a\n #...\n-0+[1-f] T b\n+0+[1-f] T label_b\n #pass"
    },
    {
      "sha": "843ed8e8ae49e630db21d4ee188889009a74f0bf",
      "filename": "gas/testsuite/gas/macros/app2.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app2.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,13 +1,13 @@\n #NO_APP\n  .text\n  .macro foo\n- .globl a\n-a:\n+ .globl label_a\n+label_a:\n  .long 42\n  .endm\n #APP\n  foo\n- .globl b\n-b:\n+ .globl label_b\n+label_b:\n  .long 56\n #NO_APP"
    },
    {
      "sha": "6e4f568646a6b85daadffdc63f4984cbd0562ff9",
      "filename": "gas/testsuite/gas/macros/app3.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app3.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,9 +1,9 @@\n #nm: -n\n #name: APP with macro then NO_APP then more code\n #...\n-0+ T a\n+0+ T label_a\n #...\n-0+[1-f] T b\n+0+[1-f] T label_b\n #...\n-0+[2-f] T c\n+0+[2-f] T label_c\n #pass"
    },
    {
      "sha": "3547aabc23f5e6dcd44a9cf04e6e9beaf787db6e",
      "filename": "gas/testsuite/gas/macros/app3.s",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app3.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,16 +1,16 @@\n #NO_APP\n  .text\n  .macro foo\n- .globl a\n-a:\n+ .globl label_a\n+label_a:\n  .long 42\n  .endm\n #APP\n  foo\n- .globl b\n-b:\n+ .globl label_b\n+label_b:\n  .long 56\n #NO_APP\n- .globl c\n-c:\n+ .globl label_c\n+label_c:\n  .long 78"
    },
    {
      "sha": "9797e19fe11757ef48d6ccd74033f1864b19b989",
      "filename": "gas/testsuite/gas/macros/app4.d",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app4.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -2,9 +2,9 @@\n #nm: -n\n #name: included file with .if 0 wrapped in APP/NO_APP, no final NO_APP, macro in main file\n #...\n-0+ T d\n+0+ T label_d\n #...\n-0+[1-f] T a\n+0+[1-f] T label_a\n #...\n-0+[2-f] T b\n+0+[2-f] T label_b\n #pass"
    },
    {
      "sha": "a4ed8227816166b605a4822fc232ddd00956271b",
      "filename": "gas/testsuite/gas/macros/app4.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app4.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,11 +1,11 @@\n  .text\n  .macro foo\n- .globl a\n-a:\n+ .globl label_a\n+label_a:\n  .long 42\n  .endm\n  .include \"app4b.s\"\n  foo\n- .globl b\n-b:\n+ .globl label_b\n+label_b:\n  .long 56"
    },
    {
      "sha": "626546bc637f289f2643349bed910c6815fc5f36",
      "filename": "gas/testsuite/gas/macros/app4b.s",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4b.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/macros/app4b.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/macros/app4b.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,12 +1,12 @@\n #NO_APP\n- .globl d\n-d:\n+ .globl label_d\n+label_d:\n  .long 21\n #APP\n  .if 0\n #NO_APP\n  .err\n- .globl x\n-x:\n+ .globl label_x\n+label_x:\n #APP\n  .endif"
    },
    {
      "sha": "a8af8ca1abcd4609b254ba41a6a36f9317c6a4d2",
      "filename": "gas/testsuite/gas/z80/colonless.d",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/colonless.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/colonless.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/colonless.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,21 @@\n+#name: colonless labels\n+#source: colonless.s -colonless\n+#objdump: -d\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+Disassembly of section \\.text:\n+\n+00000000 <start>:\n+[   ]+0:[ \t]+3e 00[       \t]+ld a,0x00\n+[   ]+2:[ \t]+28 0c[       \t]+jr z,0x0010\n+[   ]+4:[ \t]+3e 01[       \t]+ld a,0x01\n+[   ]+6:[ \t]+3e 02[       \t]+ld a,0x02\n+[   ]+8:[ \t]+3e 03[       \t]+ld a,0x03\n+[   ]+a:[ \t]+18 f4[       \t]+jr 0x0000\n+[   ]+c:[ \t]+18 f4[       \t]+jr 0x0002\n+[   ]+e:[ \t]+18 f6[       \t]+jr 0x0006\n+\n+00000010 <finish>:\n+[  ]+10:[ \t]+c9[          \t]+ret"
    },
    {
      "sha": "55410f8ed574f329aa2dd430a53f3de074b04c82",
      "filename": "gas/testsuite/gas/z80/colonless.s",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/colonless.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/colonless.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/colonless.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,14 @@\n+\t.text\n+\t;; colon less labels test\n+start\n+\tld\ta,0\n+.L_next\n+\tjr\tz,finish\n+\tld\ta,1\n+.L_xx\tld\ta,2\n+\tld\ta,3\n+\tjr\tstart\n+\tjr\t.L_next\n+\tjr\t.L_xx\n+finish\tret\n+\t.end"
    },
    {
      "sha": "f96cd40aa1f4e2830150868be7134d1a3720cdf3",
      "filename": "gas/testsuite/gas/z80/data.d",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/data.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/data.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/data.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,16 @@\n+#name: data definition\n+#objdump: -s -j .data\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Contents of section \\.data:\n+ 0000 007fff80 6d657373 61676500 0000ffff.*\n+ 0010 7fffffff 00008056 34120000 0000ffff.*\n+ 0020 ff7fffff ffff0000 00807856 34120000.*\n+ 0030 00ffff7f ffffff00 00805634 12000000.*\n+ 0040 00ffffff 7fffffff ff000000 80785634.*\n+ 0050 12007fff 80746578 746d6573 73616765.*\n+ 0060 00000000 00000000 000000ff 7f0080ff.*\n+ 0070 ff008034 12000000 00000000 000000ff.*\n+ 0080 7f0080ff ff008034 12.*\n+#pass"
    },
    {
      "sha": "ccbb55756670dbf466d1aedae2f35b2e849fd27f",
      "filename": "gas/testsuite/gas/z80/data.s",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/data.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/data.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/data.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,13 @@\n+\t.data\n+\t.db\t0, 127, -1, 0x80, \"message\"\n+\t.d24\t0, 8388607, -1, 0x800000, 0x123456\n+\t.d32\t0, 2147483647, -1, 0x80000000, 0x12345678\n+\tdef24\t0, 8388607, -1, 0x800000, 0x123456\n+\tdef32\t0, 2147483647, -1, 0x80000000, 0x12345678\n+\tdefb\t0, 127, -1, 0x80\n+\tdefm\t\"text\", \"message\", 0\n+\tdefs\t8\n+\tdefw\t0, 32767, 32768, -1, 0x8000, 0x1234\n+\t.ds\t8\n+\t.dw\t0, 32767, 32768, -1, 0x8000, 0x1234\n+\t.end"
    },
    {
      "sha": "24ad8a67ddb60a8fbb373951c929f5bd6b492726",
      "filename": "gas/testsuite/gas/z80/dollar.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/dollar.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/dollar.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/dollar.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,8 @@\n+#objdump: -s -j .data\n+#name: dollar labels\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Contents of section .data:\n+ 0000 00000000 00000000 00000000 00000000[  ]+.*\n+ 0010 12001200 18001600 18001600 1800[      ]+.*"
    },
    {
      "sha": "ffcb044632cc9a959b6ac21b3fe30ed3153fc1c2",
      "filename": "gas/testsuite/gas/z80/dollar.s",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/dollar.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/dollar.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/dollar.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,17 @@\n+\t.data\n+\t.org\t0x10\n+_label1:\n+\t.dw\t100$\n+100$:\n+\t.dw\t100$\n+_label2:\n+\t.dw\t110$\n+100$:\n+\t.dw\t100$\n+110$:\n+\t.dw\t110$\n+.L_label3:\n+\t.dw\t100$\n+\t.dw\t110$\n+\t.end\n+"
    },
    {
      "sha": "8d715c631d4ab1b65037c0b1738c78c4e6040d81",
      "filename": "gas/testsuite/gas/z80/ez80_adl_all.d",
      "status": "added",
      "additions": 961,
      "deletions": 0,
      "changes": 961,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_all.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,961 @@\n+#as: -ez80-adl\n+#objdump: -d\n+#name: All eZ80 instructions in ADL cpu mode\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+a7\\s+and a,a\n+\\s+1:\\s+a0\\s+and a,b\n+\\s+2:\\s+a1\\s+and a,c\n+\\s+3:\\s+a2\\s+and a,d\n+\\s+4:\\s+a3\\s+and a,e\n+\\s+5:\\s+a4\\s+and a,h\n+\\s+6:\\s+a5\\s+and a,l\n+\\s+7:\\s+a6\\s+and a,\\(hl\\)\n+\\s+8:\\s+e6 aa\\s+and a,0xaa\n+\\s+a:\\s+dd a6 05\\s+and a,\\(ix\\+5\\)\n+\\s+d:\\s+fd a6 fb\\s+and a,\\(iy\\-5\\)\n+\\s+10:\\s+bf\\s+cp a,a\n+\\s+11:\\s+b8\\s+cp a,b\n+\\s+12:\\s+b9\\s+cp a,c\n+\\s+13:\\s+ba\\s+cp a,d\n+\\s+14:\\s+bb\\s+cp a,e\n+\\s+15:\\s+bc\\s+cp a,h\n+\\s+16:\\s+bd\\s+cp a,l\n+\\s+17:\\s+be\\s+cp a,\\(hl\\)\n+\\s+18:\\s+fe aa\\s+cp a,0xaa\n+\\s+1a:\\s+dd be 05\\s+cp a,\\(ix\\+5\\)\n+\\s+1d:\\s+fd be fb\\s+cp a,\\(iy\\-5\\)\n+\\s+20:\\s+b7\\s+or a,a\n+\\s+21:\\s+b0\\s+or a,b\n+\\s+22:\\s+b1\\s+or a,c\n+\\s+23:\\s+b2\\s+or a,d\n+\\s+24:\\s+b3\\s+or a,e\n+\\s+25:\\s+b4\\s+or a,h\n+\\s+26:\\s+b5\\s+or a,l\n+\\s+27:\\s+b6\\s+or a,\\(hl\\)\n+\\s+28:\\s+f6 aa\\s+or a,0xaa\n+\\s+2a:\\s+dd b6 05\\s+or a,\\(ix\\+5\\)\n+\\s+2d:\\s+fd b6 fb\\s+or a,\\(iy\\-5\\)\n+\\s+30:\\s+97\\s+sub a,a\n+\\s+31:\\s+90\\s+sub a,b\n+\\s+32:\\s+91\\s+sub a,c\n+\\s+33:\\s+92\\s+sub a,d\n+\\s+34:\\s+93\\s+sub a,e\n+\\s+35:\\s+94\\s+sub a,h\n+\\s+36:\\s+95\\s+sub a,l\n+\\s+37:\\s+96\\s+sub a,\\(hl\\)\n+\\s+38:\\s+d6 aa\\s+sub a,0xaa\n+\\s+3a:\\s+dd 96 05\\s+sub a,\\(ix\\+5\\)\n+\\s+3d:\\s+fd 96 fb\\s+sub a,\\(iy\\-5\\)\n+\\s+40:\\s+ed 3c\\s+tst a,a\n+\\s+42:\\s+ed 04\\s+tst a,b\n+\\s+44:\\s+ed 0c\\s+tst a,c\n+\\s+46:\\s+ed 14\\s+tst a,d\n+\\s+48:\\s+ed 1c\\s+tst a,e\n+\\s+4a:\\s+ed 24\\s+tst a,h\n+\\s+4c:\\s+ed 2c\\s+tst a,l\n+\\s+4e:\\s+ed 34\\s+tst a,\\(hl\\)\n+\\s+50:\\s+ed 64 0f\\s+tst a,0x0f\n+\\s+53:\\s+af\\s+xor a,a\n+\\s+54:\\s+a8\\s+xor a,b\n+\\s+55:\\s+a9\\s+xor a,c\n+\\s+56:\\s+aa\\s+xor a,d\n+\\s+57:\\s+ab\\s+xor a,e\n+\\s+58:\\s+ac\\s+xor a,h\n+\\s+59:\\s+ad\\s+xor a,l\n+\\s+5a:\\s+ae\\s+xor a,\\(hl\\)\n+\\s+5b:\\s+ee aa\\s+xor a,0xaa\n+\\s+5d:\\s+dd ae 05\\s+xor a,\\(ix\\+5\\)\n+\\s+60:\\s+fd ae fb\\s+xor a,\\(iy\\-5\\)\n+\\s+63:\\s+ed 78\\s+in a,\\(bc\\)\n+\\s+65:\\s+ed 40\\s+in b,\\(bc\\)\n+\\s+67:\\s+ed 48\\s+in c,\\(bc\\)\n+\\s+69:\\s+ed 50\\s+in d,\\(bc\\)\n+\\s+6b:\\s+ed 58\\s+in e,\\(bc\\)\n+\\s+6d:\\s+ed 60\\s+in h,\\(bc\\)\n+\\s+6f:\\s+ed 68\\s+in l,\\(bc\\)\n+\\s+71:\\s+ed 79\\s+out \\(bc\\),a\n+\\s+73:\\s+ed 41\\s+out \\(bc\\),b\n+\\s+75:\\s+ed 49\\s+out \\(bc\\),c\n+\\s+77:\\s+ed 51\\s+out \\(bc\\),d\n+\\s+79:\\s+ed 59\\s+out \\(bc\\),e\n+\\s+7b:\\s+ed 61\\s+out \\(bc\\),h\n+\\s+7d:\\s+ed 69\\s+out \\(bc\\),l\n+\\s+7f:\\s+dd 07 f9\\s+ld bc,\\(ix\\-7\\)\n+\\s+82:\\s+dd 17 f9\\s+ld de,\\(ix\\-7\\)\n+\\s+85:\\s+dd 27 f9\\s+ld hl,\\(ix\\-7\\)\n+\\s+88:\\s+dd 37 f9\\s+ld ix,\\(ix\\-7\\)\n+\\s+8b:\\s+dd 31 f9\\s+ld iy,\\(ix\\-7\\)\n+\\s+8e:\\s+fd 07 26\\s+ld bc,\\(iy\\+38\\)\n+\\s+91:\\s+fd 17 26\\s+ld de,\\(iy\\+38\\)\n+\\s+94:\\s+fd 27 26\\s+ld hl,\\(iy\\+38\\)\n+\\s+97:\\s+fd 31 26\\s+ld ix,\\(iy\\+38\\)\n+\\s+9a:\\s+fd 37 26\\s+ld iy,\\(iy\\+38\\)\n+\\s+9d:\\s+dd 0f 7e\\s+ld \\(ix\\+126\\),bc\n+\\s+a0:\\s+dd 1f 7e\\s+ld \\(ix\\+126\\),de\n+\\s+a3:\\s+dd 2f 7e\\s+ld \\(ix\\+126\\),hl\n+\\s+a6:\\s+dd 3f 7e\\s+ld \\(ix\\+126\\),ix\n+\\s+a9:\\s+dd 3e 7e\\s+ld \\(ix\\+126\\),iy\n+\\s+ac:\\s+fd 0f 9e\\s+ld \\(iy\\-98\\),bc\n+\\s+af:\\s+fd 1f 9e\\s+ld \\(iy\\-98\\),de\n+\\s+b2:\\s+fd 2f 9e\\s+ld \\(iy\\-98\\),hl\n+\\s+b5:\\s+fd 3e 9e\\s+ld \\(iy\\-98\\),ix\n+\\s+b8:\\s+fd 3f 9e\\s+ld \\(iy\\-98\\),iy\n+\\s+bb:\\s+ed 02 e5\\s+lea bc,ix\\-27\n+\\s+be:\\s+ed 12 e5\\s+lea de,ix\\-27\n+\\s+c1:\\s+ed 22 e5\\s+lea hl,ix\\-27\n+\\s+c4:\\s+ed 32 e5\\s+lea ix,ix\\-27\n+\\s+c7:\\s+ed 55 e5\\s+lea iy,ix\\-27\n+\\s+ca:\\s+ed 03 0c\\s+lea bc,iy\\+12\n+\\s+cd:\\s+ed 13 0c\\s+lea de,iy\\+12\n+\\s+d0:\\s+ed 23 0c\\s+lea hl,iy\\+12\n+\\s+d3:\\s+ed 54 0c\\s+lea ix,iy\\+12\n+\\s+d6:\\s+ed 33 0c\\s+lea iy,iy\\+12\n+\\s+d9:\\s+ed 65 7f\\s+pea ix\\+127\n+\\s+dc:\\s+ed 66 80\\s+pea iy\\-128\n+\\s+df:\\s+ed 38 05\\s+in0 a,\\(0x05\\)\n+\\s+e2:\\s+ed 00 05\\s+in0 b,\\(0x05\\)\n+\\s+e5:\\s+ed 08 05\\s+in0 c,\\(0x05\\)\n+\\s+e8:\\s+ed 10 05\\s+in0 d,\\(0x05\\)\n+\\s+eb:\\s+ed 18 05\\s+in0 e,\\(0x05\\)\n+\\s+ee:\\s+ed 20 05\\s+in0 h,\\(0x05\\)\n+\\s+f1:\\s+ed 28 05\\s+in0 l,\\(0x05\\)\n+\\s+f4:\\s+ed 39 05\\s+out0 \\(0x05\\),a\n+\\s+f7:\\s+ed 01 05\\s+out0 \\(0x05\\),b\n+\\s+fa:\\s+ed 09 05\\s+out0 \\(0x05\\),c\n+\\s+fd:\\s+ed 11 05\\s+out0 \\(0x05\\),d\n+\\s+100:\\s+ed 19 05\\s+out0 \\(0x05\\),e\n+\\s+103:\\s+ed 21 05\\s+out0 \\(0x05\\),h\n+\\s+106:\\s+ed 29 05\\s+out0 \\(0x05\\),l\n+\\s+109:\\s+ed 4c\\s+mlt bc\n+\\s+10b:\\s+ed 5c\\s+mlt de\n+\\s+10d:\\s+ed 6c\\s+mlt hl\n+\\s+10f:\\s+ed 7c\\s+mlt sp\n+\\s+111:\\s+ed 74 f0\\s+tstio 0xf0\n+\\s+114:\\s+ed 76\\s+slp\n+\\s+116:\\s+ed 7d\\s+stmix\n+\\s+118:\\s+ed 7e\\s+rsmix\n+\\s+11a:\\s+ed 82\\s+inim\n+\\s+11c:\\s+ed 83\\s+otim\n+\\s+11e:\\s+ed 84\\s+ini2\n+\\s+120:\\s+ed 8a\\s+indm\n+\\s+122:\\s+ed 8b\\s+otdm\n+\\s+124:\\s+ed 8c\\s+ind2\n+\\s+126:\\s+ed 92\\s+inimr\n+\\s+128:\\s+ed 93\\s+otimr\n+\\s+12a:\\s+ed 94\\s+oti2r\n+\\s+12c:\\s+ed 9a\\s+indmr\n+\\s+12e:\\s+ed 9b\\s+otdmr\n+\\s+130:\\s+ed 9c\\s+otd2r\n+\\s+132:\\s+ed a4\\s+ini2\n+\\s+134:\\s+ed ac\\s+ind2\n+\\s+136:\\s+ed b4\\s+oti2r\n+\\s+138:\\s+ed bc\\s+otd2r\n+\\s+13a:\\s+ed c2\\s+inirx\n+\\s+13c:\\s+ed c3\\s+otirx\n+\\s+13e:\\s+ed ca\\s+indrx\n+\\s+140:\\s+ed cb\\s+otdrx\n+\\s+142:\\s+dd 7c\\s+ld a,ixh\n+\\s+144:\\s+dd 44\\s+ld b,ixh\n+\\s+146:\\s+dd 4c\\s+ld c,ixh\n+\\s+148:\\s+dd 54\\s+ld d,ixh\n+\\s+14a:\\s+dd 5c\\s+ld e,ixh\n+\\s+14c:\\s+dd 64\\s+ld ixh,ixh\n+\\s+14e:\\s+dd 6c\\s+ld ixl,ixh\n+\\s+150:\\s+dd 7d\\s+ld a,ixl\n+\\s+152:\\s+dd 45\\s+ld b,ixl\n+\\s+154:\\s+dd 4d\\s+ld c,ixl\n+\\s+156:\\s+dd 55\\s+ld d,ixl\n+\\s+158:\\s+dd 5d\\s+ld e,ixl\n+\\s+15a:\\s+dd 65\\s+ld ixh,ixl\n+\\s+15c:\\s+dd 6d\\s+ld ixl,ixl\n+\\s+15e:\\s+fd 7c\\s+ld a,iyh\n+\\s+160:\\s+fd 44\\s+ld b,iyh\n+\\s+162:\\s+fd 4c\\s+ld c,iyh\n+\\s+164:\\s+fd 54\\s+ld d,iyh\n+\\s+166:\\s+fd 5c\\s+ld e,iyh\n+\\s+168:\\s+fd 64\\s+ld iyh,iyh\n+\\s+16a:\\s+fd 6c\\s+ld iyl,iyh\n+\\s+16c:\\s+fd 7d\\s+ld a,iyl\n+\\s+16e:\\s+fd 45\\s+ld b,iyl\n+\\s+170:\\s+fd 4d\\s+ld c,iyl\n+\\s+172:\\s+fd 55\\s+ld d,iyl\n+\\s+174:\\s+fd 5d\\s+ld e,iyl\n+\\s+176:\\s+fd 65\\s+ld iyh,iyl\n+\\s+178:\\s+fd 6d\\s+ld iyl,iyl\n+\\s+17a:\\s+dd 67\\s+ld ixh,a\n+\\s+17c:\\s+dd 60\\s+ld ixh,b\n+\\s+17e:\\s+dd 61\\s+ld ixh,c\n+\\s+180:\\s+dd 62\\s+ld ixh,d\n+\\s+182:\\s+dd 63\\s+ld ixh,e\n+\\s+184:\\s+dd 64\\s+ld ixh,ixh\n+\\s+186:\\s+dd 65\\s+ld ixh,ixl\n+\\s+188:\\s+dd 26 19\\s+ld ixh,0x19\n+\\s+18b:\\s+dd 6f\\s+ld ixl,a\n+\\s+18d:\\s+dd 68\\s+ld ixl,b\n+\\s+18f:\\s+dd 69\\s+ld ixl,c\n+\\s+191:\\s+dd 6a\\s+ld ixl,d\n+\\s+193:\\s+dd 6b\\s+ld ixl,e\n+\\s+195:\\s+dd 6c\\s+ld ixl,ixh\n+\\s+197:\\s+dd 6d\\s+ld ixl,ixl\n+\\s+199:\\s+dd 2e 19\\s+ld ixl,0x19\n+\\s+19c:\\s+fd 67\\s+ld iyh,a\n+\\s+19e:\\s+fd 60\\s+ld iyh,b\n+\\s+1a0:\\s+fd 61\\s+ld iyh,c\n+\\s+1a2:\\s+fd 62\\s+ld iyh,d\n+\\s+1a4:\\s+fd 63\\s+ld iyh,e\n+\\s+1a6:\\s+fd 64\\s+ld iyh,iyh\n+\\s+1a8:\\s+fd 65\\s+ld iyh,iyl\n+\\s+1aa:\\s+fd 26 19\\s+ld iyh,0x19\n+\\s+1ad:\\s+fd 6f\\s+ld iyl,a\n+\\s+1af:\\s+fd 68\\s+ld iyl,b\n+\\s+1b1:\\s+fd 69\\s+ld iyl,c\n+\\s+1b3:\\s+fd 6a\\s+ld iyl,d\n+\\s+1b5:\\s+fd 6b\\s+ld iyl,e\n+\\s+1b7:\\s+fd 6c\\s+ld iyl,iyh\n+\\s+1b9:\\s+fd 6d\\s+ld iyl,iyl\n+\\s+1bb:\\s+fd 2e 19\\s+ld iyl,0x19\n+\\s+1be:\\s+dd 84\\s+add a,ixh\n+\\s+1c0:\\s+dd 85\\s+add a,ixl\n+\\s+1c2:\\s+fd 84\\s+add a,iyh\n+\\s+1c4:\\s+fd 85\\s+add a,iyl\n+\\s+1c6:\\s+dd 8c\\s+adc a,ixh\n+\\s+1c8:\\s+dd 8d\\s+adc a,ixl\n+\\s+1ca:\\s+fd 8c\\s+adc a,iyh\n+\\s+1cc:\\s+fd 8d\\s+adc a,iyl\n+\\s+1ce:\\s+dd bc\\s+cp a,ixh\n+\\s+1d0:\\s+dd bd\\s+cp a,ixl\n+\\s+1d2:\\s+fd bc\\s+cp a,iyh\n+\\s+1d4:\\s+fd bd\\s+cp a,iyl\n+\\s+1d6:\\s+dd 25\\s+dec ixh\n+\\s+1d8:\\s+dd 2d\\s+dec ixl\n+\\s+1da:\\s+fd 25\\s+dec iyh\n+\\s+1dc:\\s+fd 2d\\s+dec iyl\n+\\s+1de:\\s+dd 24\\s+inc ixh\n+\\s+1e0:\\s+dd 2c\\s+inc ixl\n+\\s+1e2:\\s+fd 24\\s+inc iyh\n+\\s+1e4:\\s+fd 2c\\s+inc iyl\n+\\s+1e6:\\s+dd 9c\\s+sbc a,ixh\n+\\s+1e8:\\s+dd 9d\\s+sbc a,ixl\n+\\s+1ea:\\s+fd 9c\\s+sbc a,iyh\n+\\s+1ec:\\s+fd 9d\\s+sbc a,iyl\n+\\s+1ee:\\s+dd 94\\s+sub a,ixh\n+\\s+1f0:\\s+dd 95\\s+sub a,ixl\n+\\s+1f2:\\s+fd 94\\s+sub a,iyh\n+\\s+1f4:\\s+fd 95\\s+sub a,iyl\n+\\s+1f6:\\s+dd a4\\s+and a,ixh\n+\\s+1f8:\\s+dd a5\\s+and a,ixl\n+\\s+1fa:\\s+fd a4\\s+and a,iyh\n+\\s+1fc:\\s+fd a5\\s+and a,iyl\n+\\s+1fe:\\s+dd b4\\s+or a,ixh\n+\\s+200:\\s+dd b5\\s+or a,ixl\n+\\s+202:\\s+fd b4\\s+or a,iyh\n+\\s+204:\\s+fd b5\\s+or a,iyl\n+\\s+206:\\s+dd ac\\s+xor a,ixh\n+\\s+208:\\s+dd ad\\s+xor a,ixl\n+\\s+20a:\\s+fd ac\\s+xor a,iyh\n+\\s+20c:\\s+fd ad\\s+xor a,iyl\n+\\s+20e:\\s+ed c7\\s+ld i,hl\n+\\s+210:\\s+ed d7\\s+ld hl,i\n+\\s+212:\\s+ed 6d\\s+ld mb,a\n+\\s+214:\\s+ed 6e\\s+ld a,mb\n+\\s+216:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+217:\\s+dd 8e 09\\s+adc a,\\(ix\\+9\\)\n+\\s+21a:\\s+fd 8e 09\\s+adc a,\\(iy\\+9\\)\n+\\s+21d:\\s+ce 03\\s+adc a,0x03\n+\\s+21f:\\s+8f\\s+adc a,a\n+\\s+220:\\s+88\\s+adc a,b\n+\\s+221:\\s+89\\s+adc a,c\n+\\s+222:\\s+8a\\s+adc a,d\n+\\s+223:\\s+8b\\s+adc a,e\n+\\s+224:\\s+8c\\s+adc a,h\n+\\s+225:\\s+8d\\s+adc a,l\n+\\s+226:\\s+ed 4a\\s+adc hl,bc\n+\\s+228:\\s+ed 5a\\s+adc hl,de\n+\\s+22a:\\s+ed 6a\\s+adc hl,hl\n+\\s+22c:\\s+ed 7a\\s+adc hl,sp\n+\\s+22e:\\s+86\\s+add a,\\(hl\\)\n+\\s+22f:\\s+dd 86 09\\s+add a,\\(ix\\+9\\)\n+\\s+232:\\s+fd 86 09\\s+add a,\\(iy\\+9\\)\n+\\s+235:\\s+c6 03\\s+add a,0x03\n+\\s+237:\\s+87\\s+add a,a\n+\\s+238:\\s+80\\s+add a,b\n+\\s+239:\\s+81\\s+add a,c\n+\\s+23a:\\s+82\\s+add a,d\n+\\s+23b:\\s+83\\s+add a,e\n+\\s+23c:\\s+84\\s+add a,h\n+\\s+23d:\\s+85\\s+add a,l\n+\\s+23e:\\s+09\\s+add hl,bc\n+\\s+23f:\\s+19\\s+add hl,de\n+\\s+240:\\s+29\\s+add hl,hl\n+\\s+241:\\s+39\\s+add hl,sp\n+\\s+242:\\s+dd 09\\s+add ix,bc\n+\\s+244:\\s+dd 19\\s+add ix,de\n+\\s+246:\\s+dd 29\\s+add ix,ix\n+\\s+248:\\s+dd 39\\s+add ix,sp\n+\\s+24a:\\s+fd 09\\s+add iy,bc\n+\\s+24c:\\s+fd 19\\s+add iy,de\n+\\s+24e:\\s+fd 29\\s+add iy,iy\n+\\s+250:\\s+fd 39\\s+add iy,sp\n+\\s+252:\\s+a6\\s+and a,\\(hl\\)\n+\\s+253:\\s+dd a6 09\\s+and a,\\(ix\\+9\\)\n+\\s+256:\\s+fd a6 09\\s+and a,\\(iy\\+9\\)\n+\\s+259:\\s+e6 03\\s+and a,0x03\n+\\s+25b:\\s+a7\\s+and a,a\n+\\s+25c:\\s+a0\\s+and a,b\n+\\s+25d:\\s+a1\\s+and a,c\n+\\s+25e:\\s+a2\\s+and a,d\n+\\s+25f:\\s+a3\\s+and a,e\n+\\s+260:\\s+a4\\s+and a,h\n+\\s+261:\\s+a5\\s+and a,l\n+\\s+262:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+264:\\s+dd cb 09 46\\s+bit 0,\\(ix\\+9\\)\n+\\s+268:\\s+fd cb 09 46\\s+bit 0,\\(iy\\+9\\)\n+\\s+26c:\\s+cb 47\\s+bit 0,a\n+\\s+26e:\\s+cb 40\\s+bit 0,b\n+\\s+270:\\s+cb 41\\s+bit 0,c\n+\\s+272:\\s+cb 42\\s+bit 0,d\n+\\s+274:\\s+cb 43\\s+bit 0,e\n+\\s+276:\\s+cb 44\\s+bit 0,h\n+\\s+278:\\s+cb 45\\s+bit 0,l\n+\\s+27a:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+27c:\\s+dd cb 09 4e\\s+bit 1,\\(ix\\+9\\)\n+\\s+280:\\s+fd cb 09 4e\\s+bit 1,\\(iy\\+9\\)\n+\\s+284:\\s+cb 4f\\s+bit 1,a\n+\\s+286:\\s+cb 48\\s+bit 1,b\n+\\s+288:\\s+cb 49\\s+bit 1,c\n+\\s+28a:\\s+cb 4a\\s+bit 1,d\n+\\s+28c:\\s+cb 4b\\s+bit 1,e\n+\\s+28e:\\s+cb 4c\\s+bit 1,h\n+\\s+290:\\s+cb 4d\\s+bit 1,l\n+\\s+292:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+294:\\s+dd cb 09 56\\s+bit 2,\\(ix\\+9\\)\n+\\s+298:\\s+fd cb 09 56\\s+bit 2,\\(iy\\+9\\)\n+\\s+29c:\\s+cb 57\\s+bit 2,a\n+\\s+29e:\\s+cb 50\\s+bit 2,b\n+\\s+2a0:\\s+cb 51\\s+bit 2,c\n+\\s+2a2:\\s+cb 52\\s+bit 2,d\n+\\s+2a4:\\s+cb 53\\s+bit 2,e\n+\\s+2a6:\\s+cb 54\\s+bit 2,h\n+\\s+2a8:\\s+cb 55\\s+bit 2,l\n+\\s+2aa:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+2ac:\\s+dd cb 09 5e\\s+bit 3,\\(ix\\+9\\)\n+\\s+2b0:\\s+fd cb 09 5e\\s+bit 3,\\(iy\\+9\\)\n+\\s+2b4:\\s+cb 5f\\s+bit 3,a\n+\\s+2b6:\\s+cb 58\\s+bit 3,b\n+\\s+2b8:\\s+cb 59\\s+bit 3,c\n+\\s+2ba:\\s+cb 5a\\s+bit 3,d\n+\\s+2bc:\\s+cb 5b\\s+bit 3,e\n+\\s+2be:\\s+cb 5c\\s+bit 3,h\n+\\s+2c0:\\s+cb 5d\\s+bit 3,l\n+\\s+2c2:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+2c4:\\s+dd cb 09 66\\s+bit 4,\\(ix\\+9\\)\n+\\s+2c8:\\s+fd cb 09 66\\s+bit 4,\\(iy\\+9\\)\n+\\s+2cc:\\s+cb 67\\s+bit 4,a\n+\\s+2ce:\\s+cb 60\\s+bit 4,b\n+\\s+2d0:\\s+cb 61\\s+bit 4,c\n+\\s+2d2:\\s+cb 62\\s+bit 4,d\n+\\s+2d4:\\s+cb 63\\s+bit 4,e\n+\\s+2d6:\\s+cb 64\\s+bit 4,h\n+\\s+2d8:\\s+cb 65\\s+bit 4,l\n+\\s+2da:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+2dc:\\s+dd cb 09 6e\\s+bit 5,\\(ix\\+9\\)\n+\\s+2e0:\\s+fd cb 09 6e\\s+bit 5,\\(iy\\+9\\)\n+\\s+2e4:\\s+cb 6f\\s+bit 5,a\n+\\s+2e6:\\s+cb 68\\s+bit 5,b\n+\\s+2e8:\\s+cb 69\\s+bit 5,c\n+\\s+2ea:\\s+cb 6a\\s+bit 5,d\n+\\s+2ec:\\s+cb 6b\\s+bit 5,e\n+\\s+2ee:\\s+cb 6c\\s+bit 5,h\n+\\s+2f0:\\s+cb 6d\\s+bit 5,l\n+\\s+2f2:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+2f4:\\s+dd cb 09 76\\s+bit 6,\\(ix\\+9\\)\n+\\s+2f8:\\s+fd cb 09 76\\s+bit 6,\\(iy\\+9\\)\n+\\s+2fc:\\s+cb 77\\s+bit 6,a\n+\\s+2fe:\\s+cb 70\\s+bit 6,b\n+\\s+300:\\s+cb 71\\s+bit 6,c\n+\\s+302:\\s+cb 72\\s+bit 6,d\n+\\s+304:\\s+cb 73\\s+bit 6,e\n+\\s+306:\\s+cb 74\\s+bit 6,h\n+\\s+308:\\s+cb 75\\s+bit 6,l\n+\\s+30a:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+30c:\\s+dd cb 09 7e\\s+bit 7,\\(ix\\+9\\)\n+\\s+310:\\s+fd cb 09 7e\\s+bit 7,\\(iy\\+9\\)\n+\\s+314:\\s+cb 7f\\s+bit 7,a\n+\\s+316:\\s+cb 78\\s+bit 7,b\n+\\s+318:\\s+cb 79\\s+bit 7,c\n+\\s+31a:\\s+cb 7a\\s+bit 7,d\n+\\s+31c:\\s+cb 7b\\s+bit 7,e\n+\\s+31e:\\s+cb 7c\\s+bit 7,h\n+\\s+320:\\s+cb 7d\\s+bit 7,l\n+\\s+322:\\s+cd 56 34 12\\s+call 0x123456\n+\\s+326:\\s+dc 56 34 12\\s+call c,0x123456\n+\\s+32a:\\s+fc 56 34 12\\s+call m,0x123456\n+\\s+32e:\\s+d4 56 34 12\\s+call nc,0x123456\n+\\s+332:\\s+c4 56 34 12\\s+call nz,0x123456\n+\\s+336:\\s+f4 56 34 12\\s+call p,0x123456\n+\\s+33a:\\s+ec 56 34 12\\s+call pe,0x123456\n+\\s+33e:\\s+e4 56 34 12\\s+call po,0x123456\n+\\s+342:\\s+cc 56 34 12\\s+call z,0x123456\n+\\s+346:\\s+3f\\s+ccf\n+\\s+347:\\s+be\\s+cp a,\\(hl\\)\n+\\s+348:\\s+dd be 09\\s+cp a,\\(ix\\+9\\)\n+\\s+34b:\\s+fd be 09\\s+cp a,\\(iy\\+9\\)\n+\\s+34e:\\s+fe 03\\s+cp a,0x03\n+\\s+350:\\s+bf\\s+cp a,a\n+\\s+351:\\s+b8\\s+cp a,b\n+\\s+352:\\s+b9\\s+cp a,c\n+\\s+353:\\s+ba\\s+cp a,d\n+\\s+354:\\s+bb\\s+cp a,e\n+\\s+355:\\s+bc\\s+cp a,h\n+\\s+356:\\s+bd\\s+cp a,l\n+\\s+357:\\s+ed a9\\s+cpd\n+\\s+359:\\s+ed b9\\s+cpdr\n+\\s+35b:\\s+ed a1\\s+cpi\n+\\s+35d:\\s+ed b1\\s+cpir\n+\\s+35f:\\s+2f\\s+cpl\n+\\s+360:\\s+27\\s+daa\n+\\s+361:\\s+35\\s+dec \\(hl\\)\n+\\s+362:\\s+dd 35 09\\s+dec \\(ix\\+9\\)\n+\\s+365:\\s+fd 35 09\\s+dec \\(iy\\+9\\)\n+\\s+368:\\s+3d\\s+dec a\n+\\s+369:\\s+05\\s+dec b\n+\\s+36a:\\s+0b\\s+dec bc\n+\\s+36b:\\s+0d\\s+dec c\n+\\s+36c:\\s+15\\s+dec d\n+\\s+36d:\\s+1b\\s+dec de\n+\\s+36e:\\s+1d\\s+dec e\n+\\s+36f:\\s+25\\s+dec h\n+\\s+370:\\s+2b\\s+dec hl\n+\\s+371:\\s+dd 2b\\s+dec ix\n+\\s+373:\\s+fd 2b\\s+dec iy\n+\\s+375:\\s+2d\\s+dec l\n+\\s+376:\\s+3b\\s+dec sp\n+\\s+377:\\s+f3\\s+di\n+\\s+378:\\s+10 05\\s+djnz 0x037f\n+\\s+37a:\\s+fb\\s+ei\n+\\s+37b:\\s+e3\\s+ex \\(sp\\),hl\n+\\s+37c:\\s+dd e3\\s+ex \\(sp\\),ix\n+\\s+37e:\\s+fd e3\\s+ex \\(sp\\),iy\n+\\s+380:\\s+08\\s+ex af,af'\n+\\s+381:\\s+eb\\s+ex de,hl\n+\\s+382:\\s+d9\\s+exx\n+\\s+383:\\s+76\\s+halt\n+\\s+384:\\s+ed 46\\s+im 0\n+\\s+386:\\s+ed 56\\s+im 1\n+\\s+388:\\s+ed 5e\\s+im 2\n+\\s+38a:\\s+ed 78\\s+in a,\\(bc\\)\n+\\s+38c:\\s+db 03\\s+in a,\\(0x03\\)\n+\\s+38e:\\s+ed 40\\s+in b,\\(bc\\)\n+\\s+390:\\s+ed 48\\s+in c,\\(bc\\)\n+\\s+392:\\s+ed 50\\s+in d,\\(bc\\)\n+\\s+394:\\s+ed 58\\s+in e,\\(bc\\)\n+\\s+396:\\s+ed 60\\s+in h,\\(bc\\)\n+\\s+398:\\s+ed 68\\s+in l,\\(bc\\)\n+\\s+39a:\\s+34\\s+inc \\(hl\\)\n+\\s+39b:\\s+dd 34 09\\s+inc \\(ix\\+9\\)\n+\\s+39e:\\s+fd 34 09\\s+inc \\(iy\\+9\\)\n+\\s+3a1:\\s+3c\\s+inc a\n+\\s+3a2:\\s+04\\s+inc b\n+\\s+3a3:\\s+03\\s+inc bc\n+\\s+3a4:\\s+0c\\s+inc c\n+\\s+3a5:\\s+14\\s+inc d\n+\\s+3a6:\\s+13\\s+inc de\n+\\s+3a7:\\s+1c\\s+inc e\n+\\s+3a8:\\s+24\\s+inc h\n+\\s+3a9:\\s+23\\s+inc hl\n+\\s+3aa:\\s+dd 23\\s+inc ix\n+\\s+3ac:\\s+fd 23\\s+inc iy\n+\\s+3ae:\\s+2c\\s+inc l\n+\\s+3af:\\s+33\\s+inc sp\n+\\s+3b0:\\s+ed aa\\s+ind\n+\\s+3b2:\\s+ed ba\\s+indr\n+\\s+3b4:\\s+ed a2\\s+ini\n+\\s+3b6:\\s+ed b2\\s+inir\n+\\s+3b8:\\s+e9\\s+jp \\(hl\\)\n+\\s+3b9:\\s+dd e9\\s+jp \\(ix\\)\n+\\s+3bb:\\s+fd e9\\s+jp \\(iy\\)\n+\\s+3bd:\\s+c3 56 34 12\\s+jp 0x123456\n+\\s+3c1:\\s+da 56 34 12\\s+jp c,0x123456\n+\\s+3c5:\\s+fa 56 34 12\\s+jp m,0x123456\n+\\s+3c9:\\s+d2 56 34 12\\s+jp nc,0x123456\n+\\s+3cd:\\s+c2 56 34 12\\s+jp nz,0x123456\n+\\s+3d1:\\s+f2 56 34 12\\s+jp p,0x123456\n+\\s+3d5:\\s+ea 56 34 12\\s+jp pe,0x123456\n+\\s+3d9:\\s+e2 56 34 12\\s+jp po,0x123456\n+\\s+3dd:\\s+ca 56 34 12\\s+jp z,0x123456\n+\\s+3e1:\\s+18 05\\s+jr 0x03e8\n+\\s+3e3:\\s+38 05\\s+jr c,0x03ea\n+\\s+3e5:\\s+30 05\\s+jr nc,0x03ec\n+\\s+3e7:\\s+20 05\\s+jr nz,0x03ee\n+\\s+3e9:\\s+28 05\\s+jr z,0x03f0\n+\\s+3eb:\\s+32 56 34 12\\s+ld \\(0x123456\\),a\n+\\s+3ef:\\s+ed 43 56 34 12\\s+ld \\(0x123456\\),bc\n+\\s+3f4:\\s+ed 53 56 34 12\\s+ld \\(0x123456\\),de\n+\\s+3f9:\\s+22 56 34 12\\s+ld \\(0x123456\\),hl\n+\\s+3fd:\\s+dd 22 56 34 12\\s+ld \\(0x123456\\),ix\n+\\s+402:\\s+fd 22 56 34 12\\s+ld \\(0x123456\\),iy\n+\\s+407:\\s+ed 73 56 34 12\\s+ld \\(0x123456\\),sp\n+\\s+40c:\\s+02\\s+ld \\(bc\\),a\n+\\s+40d:\\s+12\\s+ld \\(de\\),a\n+\\s+40e:\\s+36 03\\s+ld \\(hl\\),0x03\n+\\s+410:\\s+77\\s+ld \\(hl\\),a\n+\\s+411:\\s+70\\s+ld \\(hl\\),b\n+\\s+412:\\s+71\\s+ld \\(hl\\),c\n+\\s+413:\\s+72\\s+ld \\(hl\\),d\n+\\s+414:\\s+73\\s+ld \\(hl\\),e\n+\\s+415:\\s+74\\s+ld \\(hl\\),h\n+\\s+416:\\s+75\\s+ld \\(hl\\),l\n+\\s+417:\\s+dd 36 09 03\\s+ld \\(ix\\+9\\),0x03\n+\\s+41b:\\s+dd 77 09\\s+ld \\(ix\\+9\\),a\n+\\s+41e:\\s+dd 70 09\\s+ld \\(ix\\+9\\),b\n+\\s+421:\\s+dd 71 09\\s+ld \\(ix\\+9\\),c\n+\\s+424:\\s+dd 72 09\\s+ld \\(ix\\+9\\),d\n+\\s+427:\\s+dd 73 09\\s+ld \\(ix\\+9\\),e\n+\\s+42a:\\s+dd 74 09\\s+ld \\(ix\\+9\\),h\n+\\s+42d:\\s+dd 75 09\\s+ld \\(ix\\+9\\),l\n+\\s+430:\\s+fd 36 09 03\\s+ld \\(iy\\+9\\),0x03\n+\\s+434:\\s+fd 77 09\\s+ld \\(iy\\+9\\),a\n+\\s+437:\\s+fd 70 09\\s+ld \\(iy\\+9\\),b\n+\\s+43a:\\s+fd 71 09\\s+ld \\(iy\\+9\\),c\n+\\s+43d:\\s+fd 72 09\\s+ld \\(iy\\+9\\),d\n+\\s+440:\\s+fd 73 09\\s+ld \\(iy\\+9\\),e\n+\\s+443:\\s+fd 74 09\\s+ld \\(iy\\+9\\),h\n+\\s+446:\\s+fd 75 09\\s+ld \\(iy\\+9\\),l\n+\\s+449:\\s+3a 56 34 12\\s+ld a,\\(0x123456\\)\n+\\s+44d:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+44e:\\s+1a\\s+ld a,\\(de\\)\n+\\s+44f:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+450:\\s+dd 7e 09\\s+ld a,\\(ix\\+9\\)\n+\\s+453:\\s+fd 7e 09\\s+ld a,\\(iy\\+9\\)\n+\\s+456:\\s+3e 03\\s+ld a,0x03\n+\\s+458:\\s+7f\\s+ld a,a\n+\\s+459:\\s+78\\s+ld a,b\n+\\s+45a:\\s+79\\s+ld a,c\n+\\s+45b:\\s+7a\\s+ld a,d\n+\\s+45c:\\s+7b\\s+ld a,e\n+\\s+45d:\\s+7c\\s+ld a,h\n+\\s+45e:\\s+ed 57\\s+ld a,i\n+\\s+460:\\s+7d\\s+ld a,l\n+\\s+461:\\s+ed 5f\\s+ld a,r\n+\\s+463:\\s+46\\s+ld b,\\(hl\\)\n+\\s+464:\\s+dd 46 09\\s+ld b,\\(ix\\+9\\)\n+\\s+467:\\s+fd 46 09\\s+ld b,\\(iy\\+9\\)\n+\\s+46a:\\s+06 03\\s+ld b,0x03\n+\\s+46c:\\s+47\\s+ld b,a\n+\\s+46d:\\s+00\\s+nop\n+\\s+46e:\\s+41\\s+ld b,c\n+\\s+46f:\\s+42\\s+ld b,d\n+\\s+470:\\s+43\\s+ld b,e\n+\\s+471:\\s+44\\s+ld b,h\n+\\s+472:\\s+45\\s+ld b,l\n+\\s+473:\\s+ed 4b 56 34 12\\s+ld bc,\\(0x123456\\)\n+\\s+478:\\s+01 56 34 12\\s+ld bc,0x123456\n+\\s+47c:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+47d:\\s+dd 4e 09\\s+ld c,\\(ix\\+9\\)\n+\\s+480:\\s+fd 4e 09\\s+ld c,\\(iy\\+9\\)\n+\\s+483:\\s+0e 03\\s+ld c,0x03\n+\\s+485:\\s+4f\\s+ld c,a\n+\\s+486:\\s+48\\s+ld c,b\n+\\s+487:\\s+00\\s+nop\n+\\s+488:\\s+4a\\s+ld c,d\n+\\s+489:\\s+4b\\s+ld c,e\n+\\s+48a:\\s+4c\\s+ld c,h\n+\\s+48b:\\s+4d\\s+ld c,l\n+\\s+48c:\\s+56\\s+ld d,\\(hl\\)\n+\\s+48d:\\s+dd 56 09\\s+ld d,\\(ix\\+9\\)\n+\\s+490:\\s+fd 56 09\\s+ld d,\\(iy\\+9\\)\n+\\s+493:\\s+16 03\\s+ld d,0x03\n+\\s+495:\\s+57\\s+ld d,a\n+\\s+496:\\s+50\\s+ld d,b\n+\\s+497:\\s+51\\s+ld d,c\n+\\s+498:\\s+00\\s+nop\n+\\s+499:\\s+53\\s+ld d,e\n+\\s+49a:\\s+54\\s+ld d,h\n+\\s+49b:\\s+55\\s+ld d,l\n+\\s+49c:\\s+ed 5b 56 34 12\\s+ld de,\\(0x123456\\)\n+\\s+4a1:\\s+11 56 34 12\\s+ld de,0x123456\n+\\s+4a5:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+4a6:\\s+dd 5e 09\\s+ld e,\\(ix\\+9\\)\n+\\s+4a9:\\s+fd 5e 09\\s+ld e,\\(iy\\+9\\)\n+\\s+4ac:\\s+1e 03\\s+ld e,0x03\n+\\s+4ae:\\s+5f\\s+ld e,a\n+\\s+4af:\\s+58\\s+ld e,b\n+\\s+4b0:\\s+59\\s+ld e,c\n+\\s+4b1:\\s+5a\\s+ld e,d\n+\\s+4b2:\\s+00\\s+nop\n+\\s+4b3:\\s+5c\\s+ld e,h\n+\\s+4b4:\\s+5d\\s+ld e,l\n+\\s+4b5:\\s+66\\s+ld h,\\(hl\\)\n+\\s+4b6:\\s+dd 66 09\\s+ld h,\\(ix\\+9\\)\n+\\s+4b9:\\s+fd 66 09\\s+ld h,\\(iy\\+9\\)\n+\\s+4bc:\\s+26 03\\s+ld h,0x03\n+\\s+4be:\\s+67\\s+ld h,a\n+\\s+4bf:\\s+60\\s+ld h,b\n+\\s+4c0:\\s+61\\s+ld h,c\n+\\s+4c1:\\s+62\\s+ld h,d\n+\\s+4c2:\\s+63\\s+ld h,e\n+\\s+4c3:\\s+64\\s+ld h,h\n+\\s+4c4:\\s+65\\s+ld h,l\n+\\s+4c5:\\s+2a 56 34 12\\s+ld hl,\\(0x123456\\)\n+\\s+4c9:\\s+21 56 34 12\\s+ld hl,0x123456\n+\\s+4cd:\\s+ed 47\\s+ld i,a\n+\\s+4cf:\\s+dd 2a 56 34 12\\s+ld ix,\\(0x123456\\)\n+\\s+4d4:\\s+dd 21 56 34 12\\s+ld ix,0x123456\n+\\s+4d9:\\s+fd 2a 56 34 12\\s+ld iy,\\(0x123456\\)\n+\\s+4de:\\s+fd 21 56 34 12\\s+ld iy,0x123456\n+\\s+4e3:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+4e4:\\s+dd 6e 09\\s+ld l,\\(ix\\+9\\)\n+\\s+4e7:\\s+fd 6e 09\\s+ld l,\\(iy\\+9\\)\n+\\s+4ea:\\s+2e 03\\s+ld l,0x03\n+\\s+4ec:\\s+6f\\s+ld l,a\n+\\s+4ed:\\s+68\\s+ld l,b\n+\\s+4ee:\\s+69\\s+ld l,c\n+\\s+4ef:\\s+6a\\s+ld l,d\n+\\s+4f0:\\s+6b\\s+ld l,e\n+\\s+4f1:\\s+6c\\s+ld l,h\n+\\s+4f2:\\s+6d\\s+ld l,l\n+\\s+4f3:\\s+ed 4f\\s+ld r,a\n+\\s+4f5:\\s+ed 7b 56 34 12\\s+ld sp,\\(0x123456\\)\n+\\s+4fa:\\s+31 56 34 12\\s+ld sp,0x123456\n+\\s+4fe:\\s+f9\\s+ld sp,hl\n+\\s+4ff:\\s+dd f9\\s+ld sp,ix\n+\\s+501:\\s+fd f9\\s+ld sp,iy\n+\\s+503:\\s+ed a8\\s+ldd\n+\\s+505:\\s+ed b8\\s+lddr\n+\\s+507:\\s+ed a0\\s+ldi\n+\\s+509:\\s+ed b0\\s+ldir\n+\\s+50b:\\s+ed 44\\s+neg\n+\\s+50d:\\s+00\\s+nop\n+\\s+50e:\\s+b6\\s+or a,\\(hl\\)\n+\\s+50f:\\s+dd b6 09\\s+or a,\\(ix\\+9\\)\n+\\s+512:\\s+fd b6 09\\s+or a,\\(iy\\+9\\)\n+\\s+515:\\s+f6 03\\s+or a,0x03\n+\\s+517:\\s+b7\\s+or a,a\n+\\s+518:\\s+b0\\s+or a,b\n+\\s+519:\\s+b1\\s+or a,c\n+\\s+51a:\\s+b2\\s+or a,d\n+\\s+51b:\\s+b3\\s+or a,e\n+\\s+51c:\\s+b4\\s+or a,h\n+\\s+51d:\\s+b5\\s+or a,l\n+\\s+51e:\\s+ed bb\\s+otdr\n+\\s+520:\\s+ed b3\\s+otir\n+\\s+522:\\s+ed 79\\s+out \\(bc\\),a\n+\\s+524:\\s+ed 41\\s+out \\(bc\\),b\n+\\s+526:\\s+ed 49\\s+out \\(bc\\),c\n+\\s+528:\\s+ed 51\\s+out \\(bc\\),d\n+\\s+52a:\\s+ed 59\\s+out \\(bc\\),e\n+\\s+52c:\\s+ed 61\\s+out \\(bc\\),h\n+\\s+52e:\\s+ed 69\\s+out \\(bc\\),l\n+\\s+530:\\s+d3 03\\s+out \\(0x03\\),a\n+\\s+532:\\s+ed ab\\s+outd\n+\\s+534:\\s+ed a3\\s+outi\n+\\s+536:\\s+f1\\s+pop af\n+\\s+537:\\s+c1\\s+pop bc\n+\\s+538:\\s+d1\\s+pop de\n+\\s+539:\\s+e1\\s+pop hl\n+\\s+53a:\\s+dd e1\\s+pop ix\n+\\s+53c:\\s+fd e1\\s+pop iy\n+\\s+53e:\\s+f5\\s+push af\n+\\s+53f:\\s+c5\\s+push bc\n+\\s+540:\\s+d5\\s+push de\n+\\s+541:\\s+e5\\s+push hl\n+\\s+542:\\s+dd e5\\s+push ix\n+\\s+544:\\s+fd e5\\s+push iy\n+\\s+546:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+548:\\s+dd cb 09 86\\s+res 0,\\(ix\\+9\\)\n+\\s+54c:\\s+fd cb 09 86\\s+res 0,\\(iy\\+9\\)\n+\\s+550:\\s+cb 87\\s+res 0,a\n+\\s+552:\\s+cb 80\\s+res 0,b\n+\\s+554:\\s+cb 81\\s+res 0,c\n+\\s+556:\\s+cb 82\\s+res 0,d\n+\\s+558:\\s+cb 83\\s+res 0,e\n+\\s+55a:\\s+cb 84\\s+res 0,h\n+\\s+55c:\\s+cb 85\\s+res 0,l\n+\\s+55e:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+560:\\s+dd cb 09 8e\\s+res 1,\\(ix\\+9\\)\n+\\s+564:\\s+fd cb 09 8e\\s+res 1,\\(iy\\+9\\)\n+\\s+568:\\s+cb 8f\\s+res 1,a\n+\\s+56a:\\s+cb 88\\s+res 1,b\n+\\s+56c:\\s+cb 89\\s+res 1,c\n+\\s+56e:\\s+cb 8a\\s+res 1,d\n+\\s+570:\\s+cb 8b\\s+res 1,e\n+\\s+572:\\s+cb 8c\\s+res 1,h\n+\\s+574:\\s+cb 8d\\s+res 1,l\n+\\s+576:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+578:\\s+dd cb 09 96\\s+res 2,\\(ix\\+9\\)\n+\\s+57c:\\s+fd cb 09 96\\s+res 2,\\(iy\\+9\\)\n+\\s+580:\\s+cb 97\\s+res 2,a\n+\\s+582:\\s+cb 90\\s+res 2,b\n+\\s+584:\\s+cb 91\\s+res 2,c\n+\\s+586:\\s+cb 92\\s+res 2,d\n+\\s+588:\\s+cb 93\\s+res 2,e\n+\\s+58a:\\s+cb 94\\s+res 2,h\n+\\s+58c:\\s+cb 95\\s+res 2,l\n+\\s+58e:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+590:\\s+dd cb 09 9e\\s+res 3,\\(ix\\+9\\)\n+\\s+594:\\s+fd cb 09 9e\\s+res 3,\\(iy\\+9\\)\n+\\s+598:\\s+cb 9f\\s+res 3,a\n+\\s+59a:\\s+cb 98\\s+res 3,b\n+\\s+59c:\\s+cb 99\\s+res 3,c\n+\\s+59e:\\s+cb 9a\\s+res 3,d\n+\\s+5a0:\\s+cb 9b\\s+res 3,e\n+\\s+5a2:\\s+cb 9c\\s+res 3,h\n+\\s+5a4:\\s+cb 9d\\s+res 3,l\n+\\s+5a6:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+5a8:\\s+dd cb 09 a6\\s+res 4,\\(ix\\+9\\)\n+\\s+5ac:\\s+fd cb 09 a6\\s+res 4,\\(iy\\+9\\)\n+\\s+5b0:\\s+cb a7\\s+res 4,a\n+\\s+5b2:\\s+cb a0\\s+res 4,b\n+\\s+5b4:\\s+cb a1\\s+res 4,c\n+\\s+5b6:\\s+cb a2\\s+res 4,d\n+\\s+5b8:\\s+cb a3\\s+res 4,e\n+\\s+5ba:\\s+cb a4\\s+res 4,h\n+\\s+5bc:\\s+cb a5\\s+res 4,l\n+\\s+5be:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+5c0:\\s+dd cb 09 ae\\s+res 5,\\(ix\\+9\\)\n+\\s+5c4:\\s+fd cb 09 ae\\s+res 5,\\(iy\\+9\\)\n+\\s+5c8:\\s+cb af\\s+res 5,a\n+\\s+5ca:\\s+cb a8\\s+res 5,b\n+\\s+5cc:\\s+cb a9\\s+res 5,c\n+\\s+5ce:\\s+cb aa\\s+res 5,d\n+\\s+5d0:\\s+cb ab\\s+res 5,e\n+\\s+5d2:\\s+cb ac\\s+res 5,h\n+\\s+5d4:\\s+cb ad\\s+res 5,l\n+\\s+5d6:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+5d8:\\s+dd cb 09 b6\\s+res 6,\\(ix\\+9\\)\n+\\s+5dc:\\s+fd cb 09 b6\\s+res 6,\\(iy\\+9\\)\n+\\s+5e0:\\s+cb b7\\s+res 6,a\n+\\s+5e2:\\s+cb b0\\s+res 6,b\n+\\s+5e4:\\s+cb b1\\s+res 6,c\n+\\s+5e6:\\s+cb b2\\s+res 6,d\n+\\s+5e8:\\s+cb b3\\s+res 6,e\n+\\s+5ea:\\s+cb b4\\s+res 6,h\n+\\s+5ec:\\s+cb b5\\s+res 6,l\n+\\s+5ee:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+5f0:\\s+dd cb 09 be\\s+res 7,\\(ix\\+9\\)\n+\\s+5f4:\\s+fd cb 09 be\\s+res 7,\\(iy\\+9\\)\n+\\s+5f8:\\s+cb bf\\s+res 7,a\n+\\s+5fa:\\s+cb b8\\s+res 7,b\n+\\s+5fc:\\s+cb b9\\s+res 7,c\n+\\s+5fe:\\s+cb ba\\s+res 7,d\n+\\s+600:\\s+cb bb\\s+res 7,e\n+\\s+602:\\s+cb bc\\s+res 7,h\n+\\s+604:\\s+cb bd\\s+res 7,l\n+\\s+606:\\s+c9\\s+ret\n+\\s+607:\\s+d8\\s+ret c\n+\\s+608:\\s+f8\\s+ret m\n+\\s+609:\\s+d0\\s+ret nc\n+\\s+60a:\\s+c0\\s+ret nz\n+\\s+60b:\\s+f0\\s+ret p\n+\\s+60c:\\s+e8\\s+ret pe\n+\\s+60d:\\s+e0\\s+ret po\n+\\s+60e:\\s+c8\\s+ret z\n+\\s+60f:\\s+ed 4d\\s+reti\n+\\s+611:\\s+ed 45\\s+retn\n+\\s+613:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+615:\\s+dd cb 09 16\\s+rl \\(ix\\+9\\)\n+\\s+619:\\s+fd cb 09 16\\s+rl \\(iy\\+9\\)\n+\\s+61d:\\s+cb 17\\s+rl a\n+\\s+61f:\\s+cb 10\\s+rl b\n+\\s+621:\\s+cb 11\\s+rl c\n+\\s+623:\\s+cb 12\\s+rl d\n+\\s+625:\\s+cb 13\\s+rl e\n+\\s+627:\\s+cb 14\\s+rl h\n+\\s+629:\\s+cb 15\\s+rl l\n+\\s+62b:\\s+17\\s+rla\n+\\s+62c:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+62e:\\s+dd cb 09 06\\s+rlc \\(ix\\+9\\)\n+\\s+632:\\s+fd cb 09 06\\s+rlc \\(iy\\+9\\)\n+\\s+636:\\s+cb 07\\s+rlc a\n+\\s+638:\\s+cb 00\\s+rlc b\n+\\s+63a:\\s+cb 01\\s+rlc c\n+\\s+63c:\\s+cb 02\\s+rlc d\n+\\s+63e:\\s+cb 03\\s+rlc e\n+\\s+640:\\s+cb 04\\s+rlc h\n+\\s+642:\\s+cb 05\\s+rlc l\n+\\s+644:\\s+07\\s+rlca\n+\\s+645:\\s+ed 6f\\s+rld\n+\\s+647:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+649:\\s+dd cb 09 1e\\s+rr \\(ix\\+9\\)\n+\\s+64d:\\s+fd cb 09 1e\\s+rr \\(iy\\+9\\)\n+\\s+651:\\s+cb 1f\\s+rr a\n+\\s+653:\\s+cb 18\\s+rr b\n+\\s+655:\\s+cb 19\\s+rr c\n+\\s+657:\\s+cb 1a\\s+rr d\n+\\s+659:\\s+cb 1b\\s+rr e\n+\\s+65b:\\s+cb 1c\\s+rr h\n+\\s+65d:\\s+cb 1d\\s+rr l\n+\\s+65f:\\s+1f\\s+rra\n+\\s+660:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+662:\\s+dd cb 09 0e\\s+rrc \\(ix\\+9\\)\n+\\s+666:\\s+fd cb 09 0e\\s+rrc \\(iy\\+9\\)\n+\\s+66a:\\s+cb 0f\\s+rrc a\n+\\s+66c:\\s+cb 08\\s+rrc b\n+\\s+66e:\\s+cb 09\\s+rrc c\n+\\s+670:\\s+cb 0a\\s+rrc d\n+\\s+672:\\s+cb 0b\\s+rrc e\n+\\s+674:\\s+cb 0c\\s+rrc h\n+\\s+676:\\s+cb 0d\\s+rrc l\n+\\s+678:\\s+0f\\s+rrca\n+\\s+679:\\s+ed 67\\s+rrd\n+\\s+67b:\\s+c7\\s+rst 0x00\n+\\s+67c:\\s+cf\\s+rst 0x08\n+\\s+67d:\\s+d7\\s+rst 0x10\n+\\s+67e:\\s+df\\s+rst 0x18\n+\\s+67f:\\s+e7\\s+rst 0x20\n+\\s+680:\\s+ef\\s+rst 0x28\n+\\s+681:\\s+f7\\s+rst 0x30\n+\\s+682:\\s+ff\\s+rst 0x38\n+\\s+683:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+684:\\s+dd 9e 09\\s+sbc a,\\(ix\\+9\\)\n+\\s+687:\\s+fd 9e 09\\s+sbc a,\\(iy\\+9\\)\n+\\s+68a:\\s+de 03\\s+sbc a,0x03\n+\\s+68c:\\s+9f\\s+sbc a,a\n+\\s+68d:\\s+98\\s+sbc a,b\n+\\s+68e:\\s+99\\s+sbc a,c\n+\\s+68f:\\s+9a\\s+sbc a,d\n+\\s+690:\\s+9b\\s+sbc a,e\n+\\s+691:\\s+9c\\s+sbc a,h\n+\\s+692:\\s+9d\\s+sbc a,l\n+\\s+693:\\s+ed 42\\s+sbc hl,bc\n+\\s+695:\\s+ed 52\\s+sbc hl,de\n+\\s+697:\\s+ed 62\\s+sbc hl,hl\n+\\s+699:\\s+ed 72\\s+sbc hl,sp\n+\\s+69b:\\s+37\\s+scf\n+\\s+69c:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+69e:\\s+dd cb 09 c6\\s+set 0,\\(ix\\+9\\)\n+\\s+6a2:\\s+fd cb 09 c6\\s+set 0,\\(iy\\+9\\)\n+\\s+6a6:\\s+cb c7\\s+set 0,a\n+\\s+6a8:\\s+cb c0\\s+set 0,b\n+\\s+6aa:\\s+cb c1\\s+set 0,c\n+\\s+6ac:\\s+cb c2\\s+set 0,d\n+\\s+6ae:\\s+cb c3\\s+set 0,e\n+\\s+6b0:\\s+cb c4\\s+set 0,h\n+\\s+6b2:\\s+cb c5\\s+set 0,l\n+\\s+6b4:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+6b6:\\s+dd cb 09 ce\\s+set 1,\\(ix\\+9\\)\n+\\s+6ba:\\s+fd cb 09 ce\\s+set 1,\\(iy\\+9\\)\n+\\s+6be:\\s+cb cf\\s+set 1,a\n+\\s+6c0:\\s+cb c8\\s+set 1,b\n+\\s+6c2:\\s+cb c9\\s+set 1,c\n+\\s+6c4:\\s+cb ca\\s+set 1,d\n+\\s+6c6:\\s+cb cb\\s+set 1,e\n+\\s+6c8:\\s+cb cc\\s+set 1,h\n+\\s+6ca:\\s+cb cd\\s+set 1,l\n+\\s+6cc:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+6ce:\\s+dd cb 09 d6\\s+set 2,\\(ix\\+9\\)\n+\\s+6d2:\\s+fd cb 09 d6\\s+set 2,\\(iy\\+9\\)\n+\\s+6d6:\\s+cb d7\\s+set 2,a\n+\\s+6d8:\\s+cb d0\\s+set 2,b\n+\\s+6da:\\s+cb d1\\s+set 2,c\n+\\s+6dc:\\s+cb d2\\s+set 2,d\n+\\s+6de:\\s+cb d3\\s+set 2,e\n+\\s+6e0:\\s+cb d4\\s+set 2,h\n+\\s+6e2:\\s+cb d5\\s+set 2,l\n+\\s+6e4:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+6e6:\\s+dd cb 09 de\\s+set 3,\\(ix\\+9\\)\n+\\s+6ea:\\s+fd cb 09 de\\s+set 3,\\(iy\\+9\\)\n+\\s+6ee:\\s+cb df\\s+set 3,a\n+\\s+6f0:\\s+cb d8\\s+set 3,b\n+\\s+6f2:\\s+cb d9\\s+set 3,c\n+\\s+6f4:\\s+cb da\\s+set 3,d\n+\\s+6f6:\\s+cb db\\s+set 3,e\n+\\s+6f8:\\s+cb dc\\s+set 3,h\n+\\s+6fa:\\s+cb dd\\s+set 3,l\n+\\s+6fc:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+6fe:\\s+dd cb 09 e6\\s+set 4,\\(ix\\+9\\)\n+\\s+702:\\s+fd cb 09 e6\\s+set 4,\\(iy\\+9\\)\n+\\s+706:\\s+cb e7\\s+set 4,a\n+\\s+708:\\s+cb e0\\s+set 4,b\n+\\s+70a:\\s+cb e1\\s+set 4,c\n+\\s+70c:\\s+cb e2\\s+set 4,d\n+\\s+70e:\\s+cb e3\\s+set 4,e\n+\\s+710:\\s+cb e4\\s+set 4,h\n+\\s+712:\\s+cb e5\\s+set 4,l\n+\\s+714:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+716:\\s+dd cb 09 ee\\s+set 5,\\(ix\\+9\\)\n+\\s+71a:\\s+fd cb 09 ee\\s+set 5,\\(iy\\+9\\)\n+\\s+71e:\\s+cb ef\\s+set 5,a\n+\\s+720:\\s+cb e8\\s+set 5,b\n+\\s+722:\\s+cb e9\\s+set 5,c\n+\\s+724:\\s+cb ea\\s+set 5,d\n+\\s+726:\\s+cb eb\\s+set 5,e\n+\\s+728:\\s+cb ec\\s+set 5,h\n+\\s+72a:\\s+cb ed\\s+set 5,l\n+\\s+72c:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+72e:\\s+dd cb 09 f6\\s+set 6,\\(ix\\+9\\)\n+\\s+732:\\s+fd cb 09 f6\\s+set 6,\\(iy\\+9\\)\n+\\s+736:\\s+cb f7\\s+set 6,a\n+\\s+738:\\s+cb f0\\s+set 6,b\n+\\s+73a:\\s+cb f1\\s+set 6,c\n+\\s+73c:\\s+cb f2\\s+set 6,d\n+\\s+73e:\\s+cb f3\\s+set 6,e\n+\\s+740:\\s+cb f4\\s+set 6,h\n+\\s+742:\\s+cb f5\\s+set 6,l\n+\\s+744:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+746:\\s+dd cb 09 fe\\s+set 7,\\(ix\\+9\\)\n+\\s+74a:\\s+fd cb 09 fe\\s+set 7,\\(iy\\+9\\)\n+\\s+74e:\\s+cb ff\\s+set 7,a\n+\\s+750:\\s+cb f8\\s+set 7,b\n+\\s+752:\\s+cb f9\\s+set 7,c\n+\\s+754:\\s+cb fa\\s+set 7,d\n+\\s+756:\\s+cb fb\\s+set 7,e\n+\\s+758:\\s+cb fc\\s+set 7,h\n+\\s+75a:\\s+cb fd\\s+set 7,l\n+\\s+75c:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+75e:\\s+dd cb 09 26\\s+sla \\(ix\\+9\\)\n+\\s+762:\\s+fd cb 09 26\\s+sla \\(iy\\+9\\)\n+\\s+766:\\s+cb 27\\s+sla a\n+\\s+768:\\s+cb 20\\s+sla b\n+\\s+76a:\\s+cb 21\\s+sla c\n+\\s+76c:\\s+cb 22\\s+sla d\n+\\s+76e:\\s+cb 23\\s+sla e\n+\\s+770:\\s+cb 24\\s+sla h\n+\\s+772:\\s+cb 25\\s+sla l\n+\\s+774:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+776:\\s+dd cb 09 2e\\s+sra \\(ix\\+9\\)\n+\\s+77a:\\s+fd cb 09 2e\\s+sra \\(iy\\+9\\)\n+\\s+77e:\\s+cb 2f\\s+sra a\n+\\s+780:\\s+cb 28\\s+sra b\n+\\s+782:\\s+cb 29\\s+sra c\n+\\s+784:\\s+cb 2a\\s+sra d\n+\\s+786:\\s+cb 2b\\s+sra e\n+\\s+788:\\s+cb 2c\\s+sra h\n+\\s+78a:\\s+cb 2d\\s+sra l\n+\\s+78c:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+78e:\\s+dd cb 09 3e\\s+srl \\(ix\\+9\\)\n+\\s+792:\\s+fd cb 09 3e\\s+srl \\(iy\\+9\\)\n+\\s+796:\\s+cb 3f\\s+srl a\n+\\s+798:\\s+cb 38\\s+srl b\n+\\s+79a:\\s+cb 39\\s+srl c\n+\\s+79c:\\s+cb 3a\\s+srl d\n+\\s+79e:\\s+cb 3b\\s+srl e\n+\\s+7a0:\\s+cb 3c\\s+srl h\n+\\s+7a2:\\s+cb 3d\\s+srl l\n+\\s+7a4:\\s+96\\s+sub a,\\(hl\\)\n+\\s+7a5:\\s+dd 96 09\\s+sub a,\\(ix\\+9\\)\n+\\s+7a8:\\s+fd 96 09\\s+sub a,\\(iy\\+9\\)\n+\\s+7ab:\\s+d6 03\\s+sub a,0x03\n+\\s+7ad:\\s+97\\s+sub a,a\n+\\s+7ae:\\s+90\\s+sub a,b\n+\\s+7af:\\s+91\\s+sub a,c\n+\\s+7b0:\\s+92\\s+sub a,d\n+\\s+7b1:\\s+93\\s+sub a,e\n+\\s+7b2:\\s+94\\s+sub a,h\n+\\s+7b3:\\s+95\\s+sub a,l\n+\\s+7b4:\\s+ae\\s+xor a,\\(hl\\)\n+\\s+7b5:\\s+dd ae 09\\s+xor a,\\(ix\\+9\\)\n+\\s+7b8:\\s+fd ae 09\\s+xor a,\\(iy\\+9\\)\n+\\s+7bb:\\s+ee 03\\s+xor a,0x03\n+\\s+7bd:\\s+af\\s+xor a,a\n+\\s+7be:\\s+a8\\s+xor a,b\n+\\s+7bf:\\s+a9\\s+xor a,c\n+\\s+7c0:\\s+aa\\s+xor a,d\n+\\s+7c1:\\s+ab\\s+xor a,e\n+\\s+7c2:\\s+ac\\s+xor a,h\n+\\s+7c3:\\s+ad\\s+xor a,l"
    },
    {
      "sha": "2a895b1ab8955e72f7e6366c2e106157e3f75224",
      "filename": "gas/testsuite/gas/z80/ez80_adl_all.s",
      "status": "added",
      "additions": 1000,
      "deletions": 0,
      "changes": 1000,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_all.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_all.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_all.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,1000 @@\n+\t.text\n+\t.org 0\n+\t;; eZ80 instructions\n+\n+; AND A,x group\n+\tand\ta,a\n+\tand\ta,b\n+\tand\ta,c\n+\tand\ta,d\n+\tand\ta,e\n+\tand\ta,h\n+\tand\ta,l\n+\tand\ta,(hl)\n+\tand\ta,0xaa\n+\tand\ta,(ix+5)\n+\tand\ta,(iy-5)\n+; CP A,x group\n+\tcp\ta,a\n+\tcp\ta,b\n+\tcp\ta,c\n+\tcp\ta,d\n+\tcp\ta,e\n+\tcp\ta,h\n+\tcp\ta,l\n+\tcp\ta,(hl)\n+\tcp\ta,0xaa\n+\tcp\ta,(ix+5)\n+\tcp\ta,(iy-5)\n+\n+; OR A,x group\n+\tor\ta,a\n+\tor\ta,b\n+\tor\ta,c\n+\tor\ta,d\n+\tor\ta,e\n+\tor\ta,h\n+\tor\ta,l\n+\tor\ta,(hl)\n+\tor\ta,0xaa\n+\tor\ta,(ix+5)\n+\tor\ta,(iy-5)\n+\n+; SUB A,x group\n+\tsub\ta,a\n+\tsub\ta,b\n+\tsub\ta,c\n+\tsub\ta,d\n+\tsub\ta,e\n+\tsub\ta,h\n+\tsub\ta,l\n+\tsub\ta,(hl)\n+\tsub\ta,0xaa\n+\tsub\ta,(ix+5)\n+\tsub\ta,(iy-5)\n+\n+; TST A,x group\n+\ttst\ta,a\n+\ttst\ta,b\n+\ttst\ta,c\n+\ttst\ta,d\n+\ttst\ta,e\n+\ttst\ta,h\n+\ttst\ta,l\n+\ttst\ta,(hl)\n+\ttst\ta,0x0f\n+\n+; XOR A,x group\n+\txor\ta,a\n+\txor\ta,b\n+\txor\ta,c\n+\txor\ta,d\n+\txor\ta,e\n+\txor\ta,h\n+\txor\ta,l\n+\txor\ta,(hl)\n+\txor\ta,0xaa\n+\txor\ta,(ix+5)\n+\txor\ta,(iy-5)\n+\n+; IN r,(BC) group (new naming)\n+\tin a,(bc)\n+\tin b,(bc)\n+\tin c,(bc)\n+\tin d,(bc)\n+\tin e,(bc)\n+\tin h,(bc)\n+\tin l,(bc)\n+\n+; OUT (BC),r group (new naming)\n+\tout (bc),a\n+\tout (bc),b\n+\tout (bc),c\n+\tout (bc),d\n+\tout (bc),e\n+\tout (bc),h\n+\tout (bc),l\n+\n+; LD rr,(ii+d) group\n+\tld\tbc,(ix-7)\n+\tld\tde,(ix-7)\n+\tld\thl,(ix-7)\n+\tld\tix,(ix-7)\n+\tld\tiy,(ix-7)\n+\n+\tld\tbc,(iy+38)\n+\tld\tde,(iy+38)\n+\tld\thl,(iy+38)\n+\tld\tix,(iy+38)\n+\tld\tiy,(iy+38)\n+\n+; LD (ii+d),rr group\n+\tld\t(ix+126),bc\n+\tld\t(ix+126),de\n+\tld\t(ix+126),hl\n+\tld\t(ix+126),ix\n+\tld\t(ix+126),iy\n+\tld\t(iy-98),bc\n+\tld\t(iy-98),de\n+\tld\t(iy-98),hl\n+\tld\t(iy-98),ix\n+\tld\t(iy-98),iy\n+\n+; LEA rr,ii+d group\n+\tlea\tbc,ix-27\n+\tlea\tde,ix-27\n+\tlea\thl,ix-27\n+\tlea\tix,ix-27\n+\tlea\tiy,ix-27\n+\tlea\tbc,iy+12\n+\tlea\tde,iy+12\n+\tlea\thl,iy+12\n+\tlea\tix,iy+12\n+\tlea\tiy,iy+12\n+\n+; PEA ii+d group\n+\tpea\tix+127\n+\tpea\tiy-128\n+\n+; IN0 group\n+\tin0 a,(0x5)\n+\tin0 b,(0x5)\n+\tin0 c,(0x5)\n+\tin0 d,(0x5)\n+\tin0 e,(0x5)\n+\tin0 h,(0x5)\n+\tin0 l,(0x5)\n+\n+; OUT0 group\n+\tout0 (0x5),a\n+\tout0 (0x5),b\n+\tout0 (0x5),c\n+\tout0 (0x5),d\n+\tout0 (0x5),e\n+\tout0 (0x5),h\n+\tout0 (0x5),l\n+\n+; MLT group\n+\tmlt bc\n+\tmlt de\n+\tmlt hl\n+\tmlt sp\n+\n+; TSTIO instruction\n+\ttstio 0f0h\n+\n+; SLP instruction\n+\tslp\n+\n+; ADLMIX flag manipulation instructions\n+\tstmix\n+\trsmix\n+\n+; Additional block I/O instructions\n+\tinim\n+\totim\n+\tini2\n+\tindm\n+\totdm\n+\tind2\n+\tinimr\n+\totimr\n+\tini2r\n+\tindmr\n+\totdmr\n+\tind2r\n+\touti2\n+\toutd2\n+\toti2r\n+\totd2r\n+\tinirx\n+\totirx\n+\tindrx\n+\totdrx\n+\n+; Index registers halves\n+\tld a,ixh\n+\tld b,ixh\n+\tld c,ixh\n+\tld d,ixh\n+\tld e,ixh\n+\tld ixh,ixh\n+\tld ixl,ixh\n+\tld a,ixl\n+\tld b,ixl\n+\tld c,ixl\n+\tld d,ixl\n+\tld e,ixl\n+\tld ixh,ixl\n+\tld ixl,ixl\n+\tld a,iyh\n+\tld b,iyh\n+\tld c,iyh\n+\tld d,iyh\n+\tld e,iyh\n+\tld iyh,iyh\n+\tld iyl,iyh\n+\tld a,iyl\n+\tld b,iyl\n+\tld c,iyl\n+\tld d,iyl\n+\tld e,iyl\n+\tld iyh,iyl\n+\tld iyl,iyl\n+\tld ixh,a\n+\tld ixh,b\n+\tld ixh,c\n+\tld ixh,d\n+\tld ixh,e\n+\tld ixh,ixh\n+\tld ixh,ixl\n+\tld ixh,25\n+\tld ixl,a\n+\tld ixl,b\n+\tld ixl,c\n+\tld ixl,d\n+\tld ixl,e\n+\tld ixl,ixh\n+\tld ixl,ixl\n+\tld ixl,25\n+\tld iyh,a\n+\tld iyh,b\n+\tld iyh,c\n+\tld iyh,d\n+\tld iyh,e\n+\tld iyh,iyh\n+\tld iyh,iyl\n+\tld iyh,25\n+\tld iyl,a\n+\tld iyl,b\n+\tld iyl,c\n+\tld iyl,d\n+\tld iyl,e\n+\tld iyl,iyh\n+\tld iyl,iyl\n+\tld iyl,25\n+\tadd a,ixh\n+\tadd a,ixl\n+\tadd a,iyh\n+\tadd a,iyl\n+\tadc a,ixh\n+\tadc a,ixl\n+\tadc a,iyh\n+\tadc a,iyl\n+\tcp a,ixh\n+\tcp a,ixl\n+\tcp a,iyh\n+\tcp a,iyl\n+\tdec ixh\n+\tdec ixl\n+\tdec iyh\n+\tdec iyl\n+\tinc ixh\n+\tinc ixl\n+\tinc iyh\n+\tinc iyl\n+\tsbc a,ixh\n+\tsbc a,ixl\n+\tsbc a,iyh\n+\tsbc a,iyl\n+\tsub a,ixh\n+\tsub a,ixl\n+\tsub a,iyh\n+\tsub a,iyl\n+\tand a,ixh\n+\tand a,ixl\n+\tand a,iyh\n+\tand a,iyl\n+\tor a,ixh\n+\tor a,ixl\n+\tor a,iyh\n+\tor a,iyl\n+\txor a,ixh\n+\txor a,ixl\n+\txor a,iyh\n+\txor a,iyl\n+\n+; Special ADL mode only instructions\n+\tld i,hl\n+\tld hl,i\n+\tld mb,a\n+\tld a,mb\n+\n+; Standard Z80 instructions\n+\n+\tadc a,(hl)\n+\tadc a,(ix+9)\n+\tadc a,(iy+9)\n+\tadc a,3\n+\tadc a,a\n+\tadc a,b\n+\tadc a,c\n+\tadc a,d\n+\tadc a,e\n+\tadc a,h\n+\tadc a,l\n+\tadc hl,bc\n+\tadc hl,de\n+\tadc hl,hl\n+\tadc hl,sp\n+\tadd a,(hl)\n+\tadd a,(ix+9)\n+\tadd a,(iy+9)\n+\tadd a,3\n+\tadd a,a\n+\tadd a,b\n+\tadd a,c\n+\tadd a,d\n+\tadd a,e\n+\tadd a,h\n+\tadd a,l\n+\tadd hl,bc\n+\tadd hl,de\n+\tadd hl,hl\n+\tadd hl,sp\n+\tadd ix,bc\n+\tadd ix,de\n+\tadd ix,ix\n+\tadd ix,sp\n+\tadd iy,bc\n+\tadd iy,de\n+\tadd iy,iy\n+\tadd iy,sp\n+\tand (hl)\n+\tand (ix+9)\n+\tand (iy+9)\n+\tand 3\n+\tand a\n+\tand b\n+\tand c\n+\tand d\n+\tand e\n+\tand h\n+\tand l\n+\tbit 0,(hl)\n+\tbit 0,(ix+9)\n+\tbit 0,(iy+9)\n+\tbit 0,a\n+\tbit 0,b\n+\tbit 0,c\n+\tbit 0,d\n+\tbit 0,e\n+\tbit 0,h\n+\tbit 0,l\n+\tbit 1,(hl)\n+\tbit 1,(ix+9)\n+\tbit 1,(iy+9)\n+\tbit 1,a\n+\tbit 1,b\n+\tbit 1,c\n+\tbit 1,d\n+\tbit 1,e\n+\tbit 1,h\n+\tbit 1,l\n+\tbit 2,(hl)\n+\tbit 2,(ix+9)\n+\tbit 2,(iy+9)\n+\tbit 2,a\n+\tbit 2,b\n+\tbit 2,c\n+\tbit 2,d\n+\tbit 2,e\n+\tbit 2,h\n+\tbit 2,l\n+\tbit 3,(hl)\n+\tbit 3,(ix+9)\n+\tbit 3,(iy+9)\n+\tbit 3,a\n+\tbit 3,b\n+\tbit 3,c\n+\tbit 3,d\n+\tbit 3,e\n+\tbit 3,h\n+\tbit 3,l\n+\tbit 4,(hl)\n+\tbit 4,(ix+9)\n+\tbit 4,(iy+9)\n+\tbit 4,a\n+\tbit 4,b\n+\tbit 4,c\n+\tbit 4,d\n+\tbit 4,e\n+\tbit 4,h\n+\tbit 4,l\n+\tbit 5,(hl)\n+\tbit 5,(ix+9)\n+\tbit 5,(iy+9)\n+\tbit 5,a\n+\tbit 5,b\n+\tbit 5,c\n+\tbit 5,d\n+\tbit 5,e\n+\tbit 5,h\n+\tbit 5,l\n+\tbit 6,(hl)\n+\tbit 6,(ix+9)\n+\tbit 6,(iy+9)\n+\tbit 6,a\n+\tbit 6,b\n+\tbit 6,c\n+\tbit 6,d\n+\tbit 6,e\n+\tbit 6,h\n+\tbit 6,l\n+\tbit 7,(hl)\n+\tbit 7,(ix+9)\n+\tbit 7,(iy+9)\n+\tbit 7,a\n+\tbit 7,b\n+\tbit 7,c\n+\tbit 7,d\n+\tbit 7,e\n+\tbit 7,h\n+\tbit 7,l\n+\tcall 0x123456\n+\tcall c,0x123456\n+\tcall m,0x123456\n+\tcall nc,0x123456\n+\tcall nz,0x123456\n+\tcall p,0x123456\n+\tcall pe,0x123456\n+\tcall po,0x123456\n+\tcall z,0x123456\n+\tccf\n+\tcp (hl)\n+\tcp (ix+9)\n+\tcp (iy+9)\n+\tcp 03\n+\tcp a\n+\tcp b\n+\tcp c\n+\tcp d\n+\tcp e\n+\tcp h\n+\tcp l\n+\tcpd\n+\tcpdr\n+\tcpi\n+\tcpir\n+\tcpl\n+\tdaa\n+\tdec (hl)\n+\tdec (ix+9)\n+\tdec (iy+9)\n+\tdec a\n+\tdec b\n+\tdec bc\n+\tdec c\n+\tdec d\n+\tdec de\n+\tdec e\n+\tdec h\n+\tdec hl\n+\tdec ix\n+\tdec iy\n+\tdec l\n+\tdec sp\n+\tdi\n+\tdjnz .+7\n+\tei\n+\tex (sp),hl\n+\tex (sp),ix\n+\tex (sp),iy\n+\tex af,af'\n+\tex de,hl\n+\texx\n+\thalt\n+\tim 0\n+\tim 1\n+\tim 2\n+\tin a,(c)\n+\tin a,(3)\n+\tin b,(c)\n+\tin c,(c)\n+\tin d,(c)\n+\tin e,(c)\n+\tin h,(c)\n+\tin l,(c)\n+\tinc (hl)\n+\tinc (ix+9)\n+\tinc (iy+9)\n+\tinc a\n+\tinc b\n+\tinc bc\n+\tinc c\n+\tinc d\n+\tinc de\n+\tinc e\n+\tinc h\n+\tinc hl\n+\tinc ix\n+\tinc iy\n+\tinc l\n+\tinc sp\n+\tind\n+\tindr\n+\tini\n+\tinir\n+\tjp (hl)\n+\tjp (ix)\n+\tjp (iy)\n+\tjp 0x123456\n+\tjp c,0x123456\n+\tjp m,0x123456\n+\tjp nc,0x123456\n+\tjp nz,0x123456\n+\tjp p,0x123456\n+\tjp pe,0x123456\n+\tjp po,0x123456\n+\tjp z,0x123456\n+\tjr .+7\n+\tjr c,.+7\n+\tjr nc,.+7\n+\tjr nz,.+7\n+\tjr z,.+7\n+\tld (0x123456),a\n+\tld (0x123456),bc\n+\tld (0x123456),de\n+\tld (0x123456),hl\n+\tld (0x123456),ix\n+\tld (0x123456),iy\n+\tld (0x123456),sp\n+\tld (bc),a\n+\tld (de),a\n+\tld (hl),3\n+\tld (hl),a\n+\tld (hl),b\n+\tld (hl),c\n+\tld (hl),d\n+\tld (hl),e\n+\tld (hl),h\n+\tld (hl),l\n+\tld (ix+9),3\n+\tld (ix+9),a\n+\tld (ix+9),b\n+\tld (ix+9),c\n+\tld (ix+9),d\n+\tld (ix+9),e\n+\tld (ix+9),h\n+\tld (ix+9),l\n+\tld (iy+9),3\n+\tld (iy+9),a\n+\tld (iy+9),b\n+\tld (iy+9),c\n+\tld (iy+9),d\n+\tld (iy+9),e\n+\tld (iy+9),h\n+\tld (iy+9),l\n+\tld a,(0x123456)\n+\tld a,(bc)\n+\tld a,(de)\n+\tld a,(hl)\n+\tld a,(ix+9)\n+\tld a,(iy+9)\n+\tld a,3\n+\tld a,a\n+\tld a,b\n+\tld a,c\n+\tld a,d\n+\tld a,e\n+\tld a,h\n+\tld a,i\n+\tld a,l\n+\tld a,r\n+\tld b,(hl)\n+\tld b,(ix+9)\n+\tld b,(iy+9)\n+\tld b,3\n+\tld b,a\n+\tnop ;ld b,b\n+\tld b,c\n+\tld b,d\n+\tld b,e\n+\tld b,h\n+\tld b,l\n+\tld bc,(0x123456)\n+\tld bc,0x123456\n+\tld c,(hl)\n+\tld c,(ix+9)\n+\tld c,(iy+9)\n+\tld c,3\n+\tld c,a\n+\tld c,b\n+\tnop ;ld c,c\n+\tld c,d\n+\tld c,e\n+\tld c,h\n+\tld c,l\n+\tld d,(hl)\n+\tld d,(ix+9)\n+\tld d,(iy+9)\n+\tld d,3\n+\tld d,a\n+\tld d,b\n+\tld d,c\n+\tnop ;ld d,d\n+\tld d,e\n+\tld d,h\n+\tld d,l\n+\tld de,(0x123456)\n+\tld de,0x123456\n+\tld e,(hl)\n+\tld e,(ix+9)\n+\tld e,(iy+9)\n+\tld e,3\n+\tld e,a\n+\tld e,b\n+\tld e,c\n+\tld e,d\n+\tnop ;ld e,e\n+\tld e,h\n+\tld e,l\n+\tld h,(hl)\n+\tld h,(ix+9)\n+\tld h,(iy+9)\n+\tld h,3\n+\tld h,a\n+\tld h,b\n+\tld h,c\n+\tld h,d\n+\tld h,e\n+\tld h,h\n+\tld h,l\n+\tld hl,(0x123456)\n+\tld hl,0x123456\n+\tld i,a\n+\tld ix,(0x123456)\n+\tld ix,0x123456\n+\tld iy,(0x123456)\n+\tld iy,0x123456\n+\tld l,(hl)\n+\tld l,(ix+9)\n+\tld l,(iy+9)\n+\tld l,3\n+\tld l,a\n+\tld l,b\n+\tld l,c\n+\tld l,d\n+\tld l,e\n+\tld l,h\n+\tld l,l\n+\tld r,a\n+\tld sp,(0x123456)\n+\tld sp,0x123456\n+\tld sp,hl\n+\tld sp,ix\n+\tld sp,iy\n+\tldd\n+\tlddr\n+\tldi\n+\tldir\n+\tneg\n+\tnop\n+\tor (hl)\n+\tor (ix+9)\n+\tor (iy+9)\n+\tor 3\n+\tor a\n+\tor b\n+\tor c\n+\tor d\n+\tor e\n+\tor h\n+\tor l\n+\totdr\n+\totir\n+\tout (c),a\n+\tout (c),b\n+\tout (c),c\n+\tout (c),d\n+\tout (c),e\n+\tout (c),h\n+\tout (c),l\n+\tout (3),a\n+\toutd\n+\touti\n+\tpop af\n+\tpop bc\n+\tpop de\n+\tpop hl\n+\tpop ix\n+\tpop iy\n+\tpush af\n+\tpush bc\n+\tpush de\n+\tpush hl\n+\tpush ix\n+\tpush iy\n+\tres 0,(hl)\n+\tres 0,(ix+9)\n+\tres 0,(iy+9)\n+\tres 0,a\n+\tres 0,b\n+\tres 0,c\n+\tres 0,d\n+\tres 0,e\n+\tres 0,h\n+\tres 0,l\n+\tres 1,(hl)\n+\tres 1,(ix+9)\n+\tres 1,(iy+9)\n+\tres 1,a\n+\tres 1,b\n+\tres 1,c\n+\tres 1,d\n+\tres 1,e\n+\tres 1,h\n+\tres 1,l\n+\tres 2,(hl)\n+\tres 2,(ix+9)\n+\tres 2,(iy+9)\n+\tres 2,a\n+\tres 2,b\n+\tres 2,c\n+\tres 2,d\n+\tres 2,e\n+\tres 2,h\n+\tres 2,l\n+\tres 3,(hl)\n+\tres 3,(ix+9)\n+\tres 3,(iy+9)\n+\tres 3,a\n+\tres 3,b\n+\tres 3,c\n+\tres 3,d\n+\tres 3,e\n+\tres 3,h\n+\tres 3,l\n+\tres 4,(hl)\n+\tres 4,(ix+9)\n+\tres 4,(iy+9)\n+\tres 4,a\n+\tres 4,b\n+\tres 4,c\n+\tres 4,d\n+\tres 4,e\n+\tres 4,h\n+\tres 4,l\n+\tres 5,(hl)\n+\tres 5,(ix+9)\n+\tres 5,(iy+9)\n+\tres 5,a\n+\tres 5,b\n+\tres 5,c\n+\tres 5,d\n+\tres 5,e\n+\tres 5,h\n+\tres 5,l\n+\tres 6,(hl)\n+\tres 6,(ix+9)\n+\tres 6,(iy+9)\n+\tres 6,a\n+\tres 6,b\n+\tres 6,c\n+\tres 6,d\n+\tres 6,e\n+\tres 6,h\n+\tres 6,l\n+\tres 7,(hl)\n+\tres 7,(ix+9)\n+\tres 7,(iy+9)\n+\tres 7,a\n+\tres 7,b\n+\tres 7,c\n+\tres 7,d\n+\tres 7,e\n+\tres 7,h\n+\tres 7,l\n+\tret\n+\tret c\n+\tret m\n+\tret nc\n+\tret nz\n+\tret p\n+\tret pe\n+\tret po\n+\tret z\n+\treti\n+\tretn\n+\trl (hl)\n+\trl (ix+9)\n+\trl (iy+9)\n+\trl a\n+\trl b\n+\trl c\n+\trl d\n+\trl e\n+\trl h\n+\trl l\n+\trla\n+\trlc (hl)\n+\trlc (ix+9)\n+\trlc (iy+9)\n+\trlc a\n+\trlc b\n+\trlc c\n+\trlc d\n+\trlc e\n+\trlc h\n+\trlc l\n+\trlca\n+\trld\n+\trr (hl)\n+\trr (ix+9)\n+\trr (iy+9)\n+\trr a\n+\trr b\n+\trr c\n+\trr d\n+\trr e\n+\trr h\n+\trr l\n+\trra\n+\trrc (hl)\n+\trrc (ix+9)\n+\trrc (iy+9)\n+\trrc a\n+\trrc b\n+\trrc c\n+\trrc d\n+\trrc e\n+\trrc h\n+\trrc l\n+\trrca\n+\trrd\n+\trst 0x00\n+\trst 0x08\n+\trst 0x10\n+\trst 0x18\n+\trst 0x20\n+\trst 0x28\n+\trst 0x30\n+\trst 0x38\n+\tsbc a,(hl)\n+\tsbc a,(ix+9)\n+\tsbc a,(iy+9)\n+\tsbc a,3\n+\tsbc a,a\n+\tsbc a,b\n+\tsbc a,c\n+\tsbc a,d\n+\tsbc a,e\n+\tsbc a,h\n+\tsbc a,l\n+\tsbc hl,bc\n+\tsbc hl,de\n+\tsbc hl,hl\n+\tsbc hl,sp\n+\tscf\n+\tset 0,(hl)\n+\tset 0,(ix+9)\n+\tset 0,(iy+9)\n+\tset 0,a\n+\tset 0,b\n+\tset 0,c\n+\tset 0,d\n+\tset 0,e\n+\tset 0,h\n+\tset 0,l\n+\tset 1,(hl)\n+\tset 1,(ix+9)\n+\tset 1,(iy+9)\n+\tset 1,a\n+\tset 1,b\n+\tset 1,c\n+\tset 1,d\n+\tset 1,e\n+\tset 1,h\n+\tset 1,l\n+\tset 2,(hl)\n+\tset 2,(ix+9)\n+\tset 2,(iy+9)\n+\tset 2,a\n+\tset 2,b\n+\tset 2,c\n+\tset 2,d\n+\tset 2,e\n+\tset 2,h\n+\tset 2,l\n+\tset 3,(hl)\n+\tset 3,(ix+9)\n+\tset 3,(iy+9)\n+\tset 3,a\n+\tset 3,b\n+\tset 3,c\n+\tset 3,d\n+\tset 3,e\n+\tset 3,h\n+\tset 3,l\n+\tset 4,(hl)\n+\tset 4,(ix+9)\n+\tset 4,(iy+9)\n+\tset 4,a\n+\tset 4,b\n+\tset 4,c\n+\tset 4,d\n+\tset 4,e\n+\tset 4,h\n+\tset 4,l\n+\tset 5,(hl)\n+\tset 5,(ix+9)\n+\tset 5,(iy+9)\n+\tset 5,a\n+\tset 5,b\n+\tset 5,c\n+\tset 5,d\n+\tset 5,e\n+\tset 5,h\n+\tset 5,l\n+\tset 6,(hl)\n+\tset 6,(ix+9)\n+\tset 6,(iy+9)\n+\tset 6,a\n+\tset 6,b\n+\tset 6,c\n+\tset 6,d\n+\tset 6,e\n+\tset 6,h\n+\tset 6,l\n+\tset 7,(hl)\n+\tset 7,(ix+9)\n+\tset 7,(iy+9)\n+\tset 7,a\n+\tset 7,b\n+\tset 7,c\n+\tset 7,d\n+\tset 7,e\n+\tset 7,h\n+\tset 7,l\n+\tsla (hl)\n+\tsla (ix+9)\n+\tsla (iy+9)\n+\tsla a\n+\tsla b\n+\tsla c\n+\tsla d\n+\tsla e\n+\tsla h\n+\tsla l\n+\tsra (hl)\n+\tsra (ix+9)\n+\tsra (iy+9)\n+\tsra a\n+\tsra b\n+\tsra c\n+\tsra d\n+\tsra e\n+\tsra h\n+\tsra l\n+\tsrl (hl)\n+\tsrl (ix+9)\n+\tsrl (iy+9)\n+\tsrl a\n+\tsrl b\n+\tsrl c\n+\tsrl d\n+\tsrl e\n+\tsrl h\n+\tsrl l\n+\tsub (hl)\n+\tsub (ix+9)\n+\tsub (iy+9)\n+\tsub 3\n+\tsub a\n+\tsub b\n+\tsub c\n+\tsub d\n+\tsub e\n+\tsub h\n+\tsub l\n+\txor (hl)\n+\txor (ix+9)\n+\txor (iy+9)\n+\txor 3\n+\txor a\n+\txor b\n+\txor c\n+\txor d\n+\txor e\n+\txor h\n+\txor l"
    },
    {
      "sha": "e6d9d3412a5d638e55159ee88a50f0ba46f0f9f1",
      "filename": "gas/testsuite/gas/z80/ez80_adl_suf.d",
      "status": "added",
      "additions": 314,
      "deletions": 0,
      "changes": 314,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_suf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_adl_suf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_adl_suf.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,314 @@\n+#as: -ez80-adl\n+#objdump: -d\n+#name: eZ80 instructions with sufficies in ADL cpu mode\n+#source: ez80_isuf.s\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+[0-9a-f]+:[\t]52 cd 56 34 12[    \t]+call\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 dc 56 34 12[    \t]+call\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fc 56 34 12[    \t]+call\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d4 56 34 12[    \t]+call\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c4 56 34 12[    \t]+call\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f4 56 34 12[    \t]+call\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ec 56 34 12[    \t]+call\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e4 56 34 12[    \t]+call\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 cc 56 34 12[    \t]+call\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 c3 56 34 12[    \t]+jp\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 da 56 34 12[    \t]+jp\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fa 56 34 12[    \t]+jp\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d2 56 34 12[    \t]+jp\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c2 56 34 12[    \t]+jp\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f2 56 34 12[    \t]+jp\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ea 56 34 12[    \t]+jp\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e2 56 34 12[    \t]+jp\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 ca 56 34 12[    \t]+jp\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 32 56 34 12[    \t]+ld\\.sil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]52 ed 43 56 34 12[ \t]+ld\\.sil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]52 ed 53 56 34 12[ \t]+ld\\.sil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]52 22 56 34 12[    \t]+ld\\.sil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]52 dd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]52 fd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]52 ed 73 56 34 12[ \t]+ld\\.sil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]52 3a 56 34 12[    \t]+ld\\.sil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 ed 4b 56 34 12[ \t]+ld\\.sil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 01 56 34 12[    \t]+ld\\.sil bc,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 5b 56 34 12[ \t]+ld\\.sil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 11 56 34 12[    \t]+ld\\.sil de,0x123456\n+\\s+[0-9a-f]+:[\t]52 2a 56 34 12[    \t]+ld\\.sil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 21 56 34 12[    \t]+ld\\.sil hl,0x123456\n+\\s+[0-9a-f]+:[\t]52 dd 2a 56 34 12[ \t]+ld\\.sil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 dd 21 56 34 12[ \t]+ld\\.sil ix,0x123456\n+\\s+[0-9a-f]+:[\t]52 fd 2a 56 34 12[ \t]+ld\\.sil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 fd 21 56 34 12[ \t]+ld\\.sil iy,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 7b 56 34 12[ \t]+ld\\.sil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 31 56 34 12[    \t]+ld\\.sil sp,0x123456\n+\\s+[0-9a-f]+:[\t]5b cd 56 34 12[    \t]+call\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b dc 56 34 12[    \t]+call\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fc 56 34 12[    \t]+call\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d4 56 34 12[    \t]+call\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c4 56 34 12[    \t]+call\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f4 56 34 12[    \t]+call\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ec 56 34 12[    \t]+call\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e4 56 34 12[    \t]+call\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b cc 56 34 12[    \t]+call\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b c3 56 34 12[    \t]+jp\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b da 56 34 12[    \t]+jp\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fa 56 34 12[    \t]+jp\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d2 56 34 12[    \t]+jp\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c2 56 34 12[    \t]+jp\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f2 56 34 12[    \t]+jp\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ea 56 34 12[    \t]+jp\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e2 56 34 12[    \t]+jp\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b ca 56 34 12[    \t]+jp\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b 32 56 34 12[    \t]+ld\\.lil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]5b ed 43 56 34 12[ \t]+ld\\.lil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]5b ed 53 56 34 12[ \t]+ld\\.lil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]5b 22 56 34 12[    \t]+ld\\.lil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]5b dd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]5b fd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]5b ed 73 56 34 12[ \t]+ld\\.lil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]5b 3a 56 34 12[    \t]+ld\\.lil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b ed 4b 56 34 12[ \t]+ld\\.lil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 01 56 34 12[    \t]+ld\\.lil bc,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 5b 56 34 12[ \t]+ld\\.lil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 11 56 34 12[    \t]+ld\\.lil de,0x123456\n+\\s+[0-9a-f]+:[\t]5b 2a 56 34 12[    \t]+ld\\.lil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 21 56 34 12[    \t]+ld\\.lil hl,0x123456\n+\\s+[0-9a-f]+:[\t]5b dd 2a 56 34 12[ \t]+ld\\.lil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b dd 21 56 34 12[ \t]+ld\\.lil ix,0x123456\n+\\s+[0-9a-f]+:[\t]5b fd 2a 56 34 12[ \t]+ld\\.lil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b fd 21 56 34 12[ \t]+ld\\.lil iy,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 7b 56 34 12[ \t]+ld\\.lil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 31 56 34 12[    \t]+ld\\.lil sp,0x123456\n+\\s+[0-9a-f]+:[\t]49 cd 56 34[       \t]+call\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 dc 56 34[       \t]+call\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fc 56 34[       \t]+call\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d4 56 34[       \t]+call\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c4 56 34[       \t]+call\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f4 56 34[       \t]+call\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ec 56 34[       \t]+call\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e4 56 34[       \t]+call\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 cc 56 34[       \t]+call\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 c3 56 34[       \t]+jp\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 da 56 34[       \t]+jp\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fa 56 34[       \t]+jp\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d2 56 34[       \t]+jp\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c2 56 34[       \t]+jp\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f2 56 34[       \t]+jp\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ea 56 34[       \t]+jp\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e2 56 34[       \t]+jp\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 ca 56 34[       \t]+jp\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 32 56 34[       \t]+ld\\.lis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]49 ed 43 56 34[    \t]+ld\\.lis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]49 ed 53 56 34[    \t]+ld\\.lis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]49 22 56 34[       \t]+ld\\.lis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]49 dd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]49 fd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]49 ed 73 56 34[    \t]+ld\\.lis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]49 3a 56 34[       \t]+ld\\.lis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 ed 4b 56 34[    \t]+ld\\.lis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 01 56 34[       \t]+ld\\.lis bc,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 5b 56 34[    \t]+ld\\.lis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 11 56 34[       \t]+ld\\.lis de,0x3456\n+\\s+[0-9a-f]+:[\t]49 2a 56 34[       \t]+ld\\.lis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 21 56 34[       \t]+ld\\.lis hl,0x3456\n+\\s+[0-9a-f]+:[\t]49 dd 2a 56 34[    \t]+ld\\.lis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 dd 21 56 34[    \t]+ld\\.lis ix,0x3456\n+\\s+[0-9a-f]+:[\t]49 fd 2a 56 34[    \t]+ld\\.lis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 fd 21 56 34[    \t]+ld\\.lis iy,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 7b 56 34[    \t]+ld\\.lis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 31 56 34[       \t]+ld\\.lis sp,0x3456\n+\\s+[0-9a-f]+:[\t]5b cd 56 34 12[    \t]+call\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b dc 56 34 12[    \t]+call\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fc 56 34 12[    \t]+call\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d4 56 34 12[    \t]+call\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c4 56 34 12[    \t]+call\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f4 56 34 12[    \t]+call\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ec 56 34 12[    \t]+call\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e4 56 34 12[    \t]+call\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b cc 56 34 12[    \t]+call\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b c3 56 34 12[    \t]+jp\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b da 56 34 12[    \t]+jp\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fa 56 34 12[    \t]+jp\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d2 56 34 12[    \t]+jp\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c2 56 34 12[    \t]+jp\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f2 56 34 12[    \t]+jp\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ea 56 34 12[    \t]+jp\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e2 56 34 12[    \t]+jp\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b ca 56 34 12[    \t]+jp\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b 32 56 34 12[    \t]+ld\\.lil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]5b ed 43 56 34 12[ \t]+ld\\.lil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]5b ed 53 56 34 12[ \t]+ld\\.lil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]5b 22 56 34 12[    \t]+ld\\.lil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]5b dd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]5b fd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]5b ed 73 56 34 12[ \t]+ld\\.lil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]5b 3a 56 34 12[    \t]+ld\\.lil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b ed 4b 56 34 12[ \t]+ld\\.lil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 01 56 34 12[    \t]+ld\\.lil bc,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 5b 56 34 12[ \t]+ld\\.lil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 11 56 34 12[    \t]+ld\\.lil de,0x123456\n+\\s+[0-9a-f]+:[\t]5b 2a 56 34 12[    \t]+ld\\.lil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 21 56 34 12[    \t]+ld\\.lil hl,0x123456\n+\\s+[0-9a-f]+:[\t]5b dd 2a 56 34 12[ \t]+ld\\.lil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b dd 21 56 34 12[ \t]+ld\\.lil ix,0x123456\n+\\s+[0-9a-f]+:[\t]5b fd 2a 56 34 12[ \t]+ld\\.lil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b fd 21 56 34 12[ \t]+ld\\.lil iy,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 7b 56 34 12[ \t]+ld\\.lil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 31 56 34 12[    \t]+ld\\.lil sp,0x123456\n+\\s+[0-9a-f]+:[\t]40 cd 56 34[       \t]+call\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 dc 56 34[       \t]+call\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fc 56 34[       \t]+call\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d4 56 34[       \t]+call\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c4 56 34[       \t]+call\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f4 56 34[       \t]+call\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ec 56 34[       \t]+call\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e4 56 34[       \t]+call\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 cc 56 34[       \t]+call\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 c3 56 34[       \t]+jp\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 da 56 34[       \t]+jp\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fa 56 34[       \t]+jp\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d2 56 34[       \t]+jp\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c2 56 34[       \t]+jp\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f2 56 34[       \t]+jp\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ea 56 34[       \t]+jp\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e2 56 34[       \t]+jp\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 ca 56 34[       \t]+jp\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 32 56 34[       \t]+ld\\.sis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]40 ed 43 56 34[    \t]+ld\\.sis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]40 ed 53 56 34[    \t]+ld\\.sis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]40 22 56 34[       \t]+ld\\.sis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]40 dd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]40 fd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]40 ed 73 56 34[    \t]+ld\\.sis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]40 3a 56 34[       \t]+ld\\.sis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 ed 4b 56 34[    \t]+ld\\.sis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 01 56 34[       \t]+ld\\.sis bc,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 5b 56 34[    \t]+ld\\.sis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 11 56 34[       \t]+ld\\.sis de,0x3456\n+\\s+[0-9a-f]+:[\t]40 2a 56 34[       \t]+ld\\.sis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 21 56 34[       \t]+ld\\.sis hl,0x3456\n+\\s+[0-9a-f]+:[\t]40 dd 2a 56 34[    \t]+ld\\.sis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 dd 21 56 34[    \t]+ld\\.sis ix,0x3456\n+\\s+[0-9a-f]+:[\t]40 fd 2a 56 34[    \t]+ld\\.sis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 fd 21 56 34[    \t]+ld\\.sis iy,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 7b 56 34[    \t]+ld\\.sis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 31 56 34[       \t]+ld\\.sis sp,0x3456\n+\\s+[0-9a-f]+:[\t]49 cd 56 34[       \t]+call\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 dc 56 34[       \t]+call\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fc 56 34[       \t]+call\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d4 56 34[       \t]+call\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c4 56 34[       \t]+call\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f4 56 34[       \t]+call\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ec 56 34[       \t]+call\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e4 56 34[       \t]+call\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 cc 56 34[       \t]+call\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 c3 56 34[       \t]+jp\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 da 56 34[       \t]+jp\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fa 56 34[       \t]+jp\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d2 56 34[       \t]+jp\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c2 56 34[       \t]+jp\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f2 56 34[       \t]+jp\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ea 56 34[       \t]+jp\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e2 56 34[       \t]+jp\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 ca 56 34[       \t]+jp\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 32 56 34[       \t]+ld\\.lis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]49 ed 43 56 34[    \t]+ld\\.lis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]49 ed 53 56 34[    \t]+ld\\.lis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]49 22 56 34[       \t]+ld\\.lis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]49 dd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]49 fd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]49 ed 73 56 34[    \t]+ld\\.lis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]49 3a 56 34[       \t]+ld\\.lis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 ed 4b 56 34[    \t]+ld\\.lis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 01 56 34[       \t]+ld\\.lis bc,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 5b 56 34[    \t]+ld\\.lis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 11 56 34[       \t]+ld\\.lis de,0x3456\n+\\s+[0-9a-f]+:[\t]49 2a 56 34[       \t]+ld\\.lis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 21 56 34[       \t]+ld\\.lis hl,0x3456\n+\\s+[0-9a-f]+:[\t]49 dd 2a 56 34[    \t]+ld\\.lis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 dd 21 56 34[    \t]+ld\\.lis ix,0x3456\n+\\s+[0-9a-f]+:[\t]49 fd 2a 56 34[    \t]+ld\\.lis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 fd 21 56 34[    \t]+ld\\.lis iy,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 7b 56 34[    \t]+ld\\.lis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 31 56 34[       \t]+ld\\.lis sp,0x3456\n+\\s+[0-9a-f]+:[\t]52 cd 56 34 12[    \t]+call\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 dc 56 34 12[    \t]+call\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fc 56 34 12[    \t]+call\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d4 56 34 12[    \t]+call\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c4 56 34 12[    \t]+call\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f4 56 34 12[    \t]+call\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ec 56 34 12[    \t]+call\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e4 56 34 12[    \t]+call\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 cc 56 34 12[    \t]+call\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 c3 56 34 12[    \t]+jp\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 da 56 34 12[    \t]+jp\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fa 56 34 12[    \t]+jp\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d2 56 34 12[    \t]+jp\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c2 56 34 12[    \t]+jp\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f2 56 34 12[    \t]+jp\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ea 56 34 12[    \t]+jp\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e2 56 34 12[    \t]+jp\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 ca 56 34 12[    \t]+jp\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 32 56 34 12[    \t]+ld\\.sil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]52 ed 43 56 34 12[ \t]+ld\\.sil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]52 ed 53 56 34 12[ \t]+ld\\.sil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]52 22 56 34 12[    \t]+ld\\.sil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]52 dd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]52 fd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]52 ed 73 56 34 12[ \t]+ld\\.sil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]52 3a 56 34 12[    \t]+ld\\.sil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 ed 4b 56 34 12[ \t]+ld\\.sil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 01 56 34 12[    \t]+ld\\.sil bc,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 5b 56 34 12[ \t]+ld\\.sil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 11 56 34 12[    \t]+ld\\.sil de,0x123456\n+\\s+[0-9a-f]+:[\t]52 2a 56 34 12[    \t]+ld\\.sil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 21 56 34 12[    \t]+ld\\.sil hl,0x123456\n+\\s+[0-9a-f]+:[\t]52 dd 2a 56 34 12[ \t]+ld\\.sil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 dd 21 56 34 12[ \t]+ld\\.sil ix,0x123456\n+\\s+[0-9a-f]+:[\t]52 fd 2a 56 34 12[ \t]+ld\\.sil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 fd 21 56 34 12[ \t]+ld\\.sil iy,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 7b 56 34 12[ \t]+ld\\.sil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 31 56 34 12[    \t]+ld\\.sil sp,0x123456\n+\\s+[0-9a-f]+:[\t]5b cd 56 34 12[    \t]+call\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b dc 56 34 12[    \t]+call\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fc 56 34 12[    \t]+call\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d4 56 34 12[    \t]+call\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c4 56 34 12[    \t]+call\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f4 56 34 12[    \t]+call\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ec 56 34 12[    \t]+call\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e4 56 34 12[    \t]+call\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b cc 56 34 12[    \t]+call\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b c3 56 34 12[    \t]+jp\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b da 56 34 12[    \t]+jp\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fa 56 34 12[    \t]+jp\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d2 56 34 12[    \t]+jp\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c2 56 34 12[    \t]+jp\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f2 56 34 12[    \t]+jp\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ea 56 34 12[    \t]+jp\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e2 56 34 12[    \t]+jp\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b ca 56 34 12[    \t]+jp\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b 32 56 34 12[    \t]+ld\\.lil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]5b ed 43 56 34 12[ \t]+ld\\.lil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]5b ed 53 56 34 12[ \t]+ld\\.lil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]5b 22 56 34 12[    \t]+ld\\.lil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]5b dd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]5b fd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]5b ed 73 56 34 12[ \t]+ld\\.lil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]5b 3a 56 34 12[    \t]+ld\\.lil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b ed 4b 56 34 12[ \t]+ld\\.lil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 01 56 34 12[    \t]+ld\\.lil bc,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 5b 56 34 12[ \t]+ld\\.lil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 11 56 34 12[    \t]+ld\\.lil de,0x123456\n+\\s+[0-9a-f]+:[\t]5b 2a 56 34 12[    \t]+ld\\.lil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 21 56 34 12[    \t]+ld\\.lil hl,0x123456\n+\\s+[0-9a-f]+:[\t]5b dd 2a 56 34 12[ \t]+ld\\.lil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b dd 21 56 34 12[ \t]+ld\\.lil ix,0x123456\n+\\s+[0-9a-f]+:[\t]5b fd 2a 56 34 12[ \t]+ld\\.lil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b fd 21 56 34 12[ \t]+ld\\.lil iy,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 7b 56 34 12[ \t]+ld\\.lil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 31 56 34 12[    \t]+ld\\.lil sp,0x123456"
    },
    {
      "sha": "8b20852a28fa1859d8e53f0900773e694525843b",
      "filename": "gas/testsuite/gas/z80/ez80_isuf.s",
      "status": "added",
      "additions": 318,
      "deletions": 0,
      "changes": 318,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_isuf.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_isuf.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_isuf.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,318 @@\n+\tcall.s 0x123456\n+\tcall.s c,0x123456\n+\tcall.s m,0x123456\n+\tcall.s nc,0x123456\n+\tcall.s nz,0x123456\n+\tcall.s p,0x123456\n+\tcall.s pe,0x123456\n+\tcall.s po,0x123456\n+\tcall.s z,0x123456\n+\tjp.s 0x123456\n+\tjp.s c,0x123456\n+\tjp.s m,0x123456\n+\tjp.s nc,0x123456\n+\tjp.s nz,0x123456\n+\tjp.s p,0x123456\n+\tjp.s pe,0x123456\n+\tjp.s po,0x123456\n+\tjp.s z,0x123456\n+\tld.s (0x123456),a\n+\tld.s (0x123456),bc\n+\tld.s (0x123456),de\n+\tld.s (0x123456),hl\n+\tld.s (0x123456),ix\n+\tld.s (0x123456),iy\n+\tld.s (0x123456),sp\n+\tld.s a,(0x123456)\n+\tld.s bc,(0x123456)\n+\tld.s bc,0x123456\n+\tld.s de,(0x123456)\n+\tld.s de,0x123456\n+\tld.s hl,(0x123456)\n+\tld.s hl,0x123456\n+\tld.s ix,(0x123456)\n+\tld.s ix,0x123456\n+\tld.s iy,(0x123456)\n+\tld.s iy,0x123456\n+\tld.s sp,(0x123456)\n+\tld.s sp,0x123456\n+\n+\t.page\n+\tcall.l 0x123456\n+\tcall.l c,0x123456\n+\tcall.l m,0x123456\n+\tcall.l nc,0x123456\n+\tcall.l nz,0x123456\n+\tcall.l p,0x123456\n+\tcall.l pe,0x123456\n+\tcall.l po,0x123456\n+\tcall.l z,0x123456\n+\tjp.l 0x123456\n+\tjp.l c,0x123456\n+\tjp.l m,0x123456\n+\tjp.l nc,0x123456\n+\tjp.l nz,0x123456\n+\tjp.l p,0x123456\n+\tjp.l pe,0x123456\n+\tjp.l po,0x123456\n+\tjp.l z,0x123456\n+\tld.l (0x123456),a\n+\tld.l (0x123456),bc\n+\tld.l (0x123456),de\n+\tld.l (0x123456),hl\n+\tld.l (0x123456),ix\n+\tld.l (0x123456),iy\n+\tld.l (0x123456),sp\n+\tld.l a,(0x123456)\n+\tld.l bc,(0x123456)\n+\tld.l bc,0x123456\n+\tld.l de,(0x123456)\n+\tld.l de,0x123456\n+\tld.l hl,(0x123456)\n+\tld.l hl,0x123456\n+\tld.l ix,(0x123456)\n+\tld.l ix,0x123456\n+\tld.l iy,(0x123456)\n+\tld.l iy,0x123456\n+\tld.l sp,(0x123456)\n+\tld.l sp,0x123456\n+\n+\t.page\n+\tcall.is 0x123456\n+\tcall.is c,0x123456\n+\tcall.is m,0x123456\n+\tcall.is nc,0x123456\n+\tcall.is nz,0x123456\n+\tcall.is p,0x123456\n+\tcall.is pe,0x123456\n+\tcall.is po,0x123456\n+\tcall.is z,0x123456\n+\tjp.is 0x123456\n+\tjp.is c,0x123456\n+\tjp.is m,0x123456\n+\tjp.is nc,0x123456\n+\tjp.is nz,0x123456\n+\tjp.is p,0x123456\n+\tjp.is pe,0x123456\n+\tjp.is po,0x123456\n+\tjp.is z,0x123456\n+\tld.is (0x123456),a\n+\tld.is (0x123456),bc\n+\tld.is (0x123456),de\n+\tld.is (0x123456),hl\n+\tld.is (0x123456),ix\n+\tld.is (0x123456),iy\n+\tld.is (0x123456),sp\n+\tld.is a,(0x123456)\n+\tld.is bc,(0x123456)\n+\tld.is bc,0x123456\n+\tld.is de,(0x123456)\n+\tld.is de,0x123456\n+\tld.is hl,(0x123456)\n+\tld.is hl,0x123456\n+\tld.is ix,(0x123456)\n+\tld.is ix,0x123456\n+\tld.is iy,(0x123456)\n+\tld.is iy,0x123456\n+\tld.is sp,(0x123456)\n+\tld.is sp,0x123456\n+\n+\t.page\n+\tcall.il 0x123456\n+\tcall.il c,0x123456\n+\tcall.il m,0x123456\n+\tcall.il nc,0x123456\n+\tcall.il nz,0x123456\n+\tcall.il p,0x123456\n+\tcall.il pe,0x123456\n+\tcall.il po,0x123456\n+\tcall.il z,0x123456\n+\tjp.il 0x123456\n+\tjp.il c,0x123456\n+\tjp.il m,0x123456\n+\tjp.il nc,0x123456\n+\tjp.il nz,0x123456\n+\tjp.il p,0x123456\n+\tjp.il pe,0x123456\n+\tjp.il po,0x123456\n+\tjp.il z,0x123456\n+\tld.il (0x123456),a\n+\tld.il (0x123456),bc\n+\tld.il (0x123456),de\n+\tld.il (0x123456),hl\n+\tld.il (0x123456),ix\n+\tld.il (0x123456),iy\n+\tld.il (0x123456),sp\n+\tld.il a,(0x123456)\n+\tld.il bc,(0x123456)\n+\tld.il bc,0x123456\n+\tld.il de,(0x123456)\n+\tld.il de,0x123456\n+\tld.il hl,(0x123456)\n+\tld.il hl,0x123456\n+\tld.il ix,(0x123456)\n+\tld.il ix,0x123456\n+\tld.il iy,(0x123456)\n+\tld.il iy,0x123456\n+\tld.il sp,(0x123456)\n+\tld.il sp,0x123456\n+\n+\t.page\n+\tcall.sis 0x123456\n+\tcall.sis c,0x123456\n+\tcall.sis m,0x123456\n+\tcall.sis nc,0x123456\n+\tcall.sis nz,0x123456\n+\tcall.sis p,0x123456\n+\tcall.sis pe,0x123456\n+\tcall.sis po,0x123456\n+\tcall.sis z,0x123456\n+\tjp.sis 0x123456\n+\tjp.sis c,0x123456\n+\tjp.sis m,0x123456\n+\tjp.sis nc,0x123456\n+\tjp.sis nz,0x123456\n+\tjp.sis p,0x123456\n+\tjp.sis pe,0x123456\n+\tjp.sis po,0x123456\n+\tjp.sis z,0x123456\n+\tld.sis (0x123456),a\n+\tld.sis (0x123456),bc\n+\tld.sis (0x123456),de\n+\tld.sis (0x123456),hl\n+\tld.sis (0x123456),ix\n+\tld.sis (0x123456),iy\n+\tld.sis (0x123456),sp\n+\tld.sis a,(0x123456)\n+\tld.sis bc,(0x123456)\n+\tld.sis bc,0x123456\n+\tld.sis de,(0x123456)\n+\tld.sis de,0x123456\n+\tld.sis hl,(0x123456)\n+\tld.sis hl,0x123456\n+\tld.sis ix,(0x123456)\n+\tld.sis ix,0x123456\n+\tld.sis iy,(0x123456)\n+\tld.sis iy,0x123456\n+\tld.sis sp,(0x123456)\n+\tld.sis sp,0x123456\n+\n+\t.page\n+\tcall.lis 0x123456\n+\tcall.lis c,0x123456\n+\tcall.lis m,0x123456\n+\tcall.lis nc,0x123456\n+\tcall.lis nz,0x123456\n+\tcall.lis p,0x123456\n+\tcall.lis pe,0x123456\n+\tcall.lis po,0x123456\n+\tcall.lis z,0x123456\n+\tjp.lis 0x123456\n+\tjp.lis c,0x123456\n+\tjp.lis m,0x123456\n+\tjp.lis nc,0x123456\n+\tjp.lis nz,0x123456\n+\tjp.lis p,0x123456\n+\tjp.lis pe,0x123456\n+\tjp.lis po,0x123456\n+\tjp.lis z,0x123456\n+\tld.lis (0x123456),a\n+\tld.lis (0x123456),bc\n+\tld.lis (0x123456),de\n+\tld.lis (0x123456),hl\n+\tld.lis (0x123456),ix\n+\tld.lis (0x123456),iy\n+\tld.lis (0x123456),sp\n+\tld.lis a,(0x123456)\n+\tld.lis bc,(0x123456)\n+\tld.lis bc,0x123456\n+\tld.lis de,(0x123456)\n+\tld.lis de,0x123456\n+\tld.lis hl,(0x123456)\n+\tld.lis hl,0x123456\n+\tld.lis ix,(0x123456)\n+\tld.lis ix,0x123456\n+\tld.lis iy,(0x123456)\n+\tld.lis iy,0x123456\n+\tld.lis sp,(0x123456)\n+\tld.lis sp,0x123456\n+\n+\t.page\n+\tcall.sil 0x123456\n+\tcall.sil c,0x123456\n+\tcall.sil m,0x123456\n+\tcall.sil nc,0x123456\n+\tcall.sil nz,0x123456\n+\tcall.sil p,0x123456\n+\tcall.sil pe,0x123456\n+\tcall.sil po,0x123456\n+\tcall.sil z,0x123456\n+\tjp.sil 0x123456\n+\tjp.sil c,0x123456\n+\tjp.sil m,0x123456\n+\tjp.sil nc,0x123456\n+\tjp.sil nz,0x123456\n+\tjp.sil p,0x123456\n+\tjp.sil pe,0x123456\n+\tjp.sil po,0x123456\n+\tjp.sil z,0x123456\n+\tld.sil (0x123456),a\n+\tld.sil (0x123456),bc\n+\tld.sil (0x123456),de\n+\tld.sil (0x123456),hl\n+\tld.sil (0x123456),ix\n+\tld.sil (0x123456),iy\n+\tld.sil (0x123456),sp\n+\tld.sil a,(0x123456)\n+\tld.sil bc,(0x123456)\n+\tld.sil bc,0x123456\n+\tld.sil de,(0x123456)\n+\tld.sil de,0x123456\n+\tld.sil hl,(0x123456)\n+\tld.sil hl,0x123456\n+\tld.sil ix,(0x123456)\n+\tld.sil ix,0x123456\n+\tld.sil iy,(0x123456)\n+\tld.sil iy,0x123456\n+\tld.sil sp,(0x123456)\n+\tld.sil sp,0x123456\n+\n+\t.page\n+\tcall.lil 0x123456\n+\tcall.lil c,0x123456\n+\tcall.lil m,0x123456\n+\tcall.lil nc,0x123456\n+\tcall.lil nz,0x123456\n+\tcall.lil p,0x123456\n+\tcall.lil pe,0x123456\n+\tcall.lil po,0x123456\n+\tcall.lil z,0x123456\n+\tjp.lil 0x123456\n+\tjp.lil c,0x123456\n+\tjp.lil m,0x123456\n+\tjp.lil nc,0x123456\n+\tjp.lil nz,0x123456\n+\tjp.lil p,0x123456\n+\tjp.lil pe,0x123456\n+\tjp.lil po,0x123456\n+\tjp.lil z,0x123456\n+\tld.lil (0x123456),a\n+\tld.lil (0x123456),bc\n+\tld.lil (0x123456),de\n+\tld.lil (0x123456),hl\n+\tld.lil (0x123456),ix\n+\tld.lil (0x123456),iy\n+\tld.lil (0x123456),sp\n+\tld.lil a,(0x123456)\n+\tld.lil bc,(0x123456)\n+\tld.lil bc,0x123456\n+\tld.lil de,(0x123456)\n+\tld.lil de,0x123456\n+\tld.lil hl,(0x123456)\n+\tld.lil hl,0x123456\n+\tld.lil ix,(0x123456)\n+\tld.lil ix,0x123456\n+\tld.lil iy,(0x123456)\n+\tld.lil iy,0x123456\n+\tld.lil sp,(0x123456)\n+\tld.lil sp,0x123456"
    },
    {
      "sha": "0cf7f9a3bf843be6304783e59c66bafa4c1fa083",
      "filename": "gas/testsuite/gas/z80/ez80_z80_all.d",
      "status": "added",
      "additions": 957,
      "deletions": 0,
      "changes": 957,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_all.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_all.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_all.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,957 @@\n+#as: -ez80\n+#objdump: -d\n+#name: All eZ80 instructions in Z80 cpu mode\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+a7\\s+and a,a\n+\\s+1:\\s+a0\\s+and a,b\n+\\s+2:\\s+a1\\s+and a,c\n+\\s+3:\\s+a2\\s+and a,d\n+\\s+4:\\s+a3\\s+and a,e\n+\\s+5:\\s+a4\\s+and a,h\n+\\s+6:\\s+a5\\s+and a,l\n+\\s+7:\\s+a6\\s+and a,\\(hl\\)\n+\\s+8:\\s+e6 aa\\s+and a,0xaa\n+\\s+a:\\s+dd a6 05\\s+and a,\\(ix\\+5\\)\n+\\s+d:\\s+fd a6 fb\\s+and a,\\(iy-5\\)\n+\\s+10:\\s+bf\\s+cp a,a\n+\\s+11:\\s+b8\\s+cp a,b\n+\\s+12:\\s+b9\\s+cp a,c\n+\\s+13:\\s+ba\\s+cp a,d\n+\\s+14:\\s+bb\\s+cp a,e\n+\\s+15:\\s+bc\\s+cp a,h\n+\\s+16:\\s+bd\\s+cp a,l\n+\\s+17:\\s+be\\s+cp a,\\(hl\\)\n+\\s+18:\\s+fe aa\\s+cp a,0xaa\n+\\s+1a:\\s+dd be 05\\s+cp a,\\(ix\\+5\\)\n+\\s+1d:\\s+fd be fb\\s+cp a,\\(iy-5\\)\n+\\s+20:\\s+b7\\s+or a,a\n+\\s+21:\\s+b0\\s+or a,b\n+\\s+22:\\s+b1\\s+or a,c\n+\\s+23:\\s+b2\\s+or a,d\n+\\s+24:\\s+b3\\s+or a,e\n+\\s+25:\\s+b4\\s+or a,h\n+\\s+26:\\s+b5\\s+or a,l\n+\\s+27:\\s+b6\\s+or a,\\(hl\\)\n+\\s+28:\\s+f6 aa\\s+or a,0xaa\n+\\s+2a:\\s+dd b6 05\\s+or a,\\(ix\\+5\\)\n+\\s+2d:\\s+fd b6 fb\\s+or a,\\(iy-5\\)\n+\\s+30:\\s+97\\s+sub a,a\n+\\s+31:\\s+90\\s+sub a,b\n+\\s+32:\\s+91\\s+sub a,c\n+\\s+33:\\s+92\\s+sub a,d\n+\\s+34:\\s+93\\s+sub a,e\n+\\s+35:\\s+94\\s+sub a,h\n+\\s+36:\\s+95\\s+sub a,l\n+\\s+37:\\s+96\\s+sub a,\\(hl\\)\n+\\s+38:\\s+d6 aa\\s+sub a,0xaa\n+\\s+3a:\\s+dd 96 05\\s+sub a,\\(ix\\+5\\)\n+\\s+3d:\\s+fd 96 fb\\s+sub a,\\(iy-5\\)\n+\\s+40:\\s+ed 3c\\s+tst a,a\n+\\s+42:\\s+ed 04\\s+tst a,b\n+\\s+44:\\s+ed 0c\\s+tst a,c\n+\\s+46:\\s+ed 14\\s+tst a,d\n+\\s+48:\\s+ed 1c\\s+tst a,e\n+\\s+4a:\\s+ed 24\\s+tst a,h\n+\\s+4c:\\s+ed 2c\\s+tst a,l\n+\\s+4e:\\s+ed 34\\s+tst a,\\(hl\\)\n+\\s+50:\\s+ed 64 0f\\s+tst a,0x0f\n+\\s+53:\\s+af\\s+xor a,a\n+\\s+54:\\s+a8\\s+xor a,b\n+\\s+55:\\s+a9\\s+xor a,c\n+\\s+56:\\s+aa\\s+xor a,d\n+\\s+57:\\s+ab\\s+xor a,e\n+\\s+58:\\s+ac\\s+xor a,h\n+\\s+59:\\s+ad\\s+xor a,l\n+\\s+5a:\\s+ae\\s+xor a,\\(hl\\)\n+\\s+5b:\\s+ee aa\\s+xor a,0xaa\n+\\s+5d:\\s+dd ae 05\\s+xor a,\\(ix\\+5\\)\n+\\s+60:\\s+fd ae fb\\s+xor a,\\(iy-5\\)\n+\\s+63:\\s+ed 78\\s+in a,\\(bc\\)\n+\\s+65:\\s+ed 40\\s+in b,\\(bc\\)\n+\\s+67:\\s+ed 48\\s+in c,\\(bc\\)\n+\\s+69:\\s+ed 50\\s+in d,\\(bc\\)\n+\\s+6b:\\s+ed 58\\s+in e,\\(bc\\)\n+\\s+6d:\\s+ed 60\\s+in h,\\(bc\\)\n+\\s+6f:\\s+ed 68\\s+in l,\\(bc\\)\n+\\s+71:\\s+ed 79\\s+out \\(bc\\),a\n+\\s+73:\\s+ed 41\\s+out \\(bc\\),b\n+\\s+75:\\s+ed 49\\s+out \\(bc\\),c\n+\\s+77:\\s+ed 51\\s+out \\(bc\\),d\n+\\s+79:\\s+ed 59\\s+out \\(bc\\),e\n+\\s+7b:\\s+ed 61\\s+out \\(bc\\),h\n+\\s+7d:\\s+ed 69\\s+out \\(bc\\),l\n+\\s+7f:\\s+dd 07 f9\\s+ld bc,\\(ix-7\\)\n+\\s+82:\\s+dd 17 f9\\s+ld de,\\(ix-7\\)\n+\\s+85:\\s+dd 27 f9\\s+ld hl,\\(ix-7\\)\n+\\s+88:\\s+dd 37 f9\\s+ld ix,\\(ix-7\\)\n+\\s+8b:\\s+dd 31 f9\\s+ld iy,\\(ix-7\\)\n+\\s+8e:\\s+fd 07 26\\s+ld bc,\\(iy\\+38\\)\n+\\s+91:\\s+fd 17 26\\s+ld de,\\(iy\\+38\\)\n+\\s+94:\\s+fd 27 26\\s+ld hl,\\(iy\\+38\\)\n+\\s+97:\\s+fd 31 26\\s+ld ix,\\(iy\\+38\\)\n+\\s+9a:\\s+fd 37 26\\s+ld iy,\\(iy\\+38\\)\n+\\s+9d:\\s+dd 0f 7e\\s+ld \\(ix\\+126\\),bc\n+\\s+a0:\\s+dd 1f 7e\\s+ld \\(ix\\+126\\),de\n+\\s+a3:\\s+dd 2f 7e\\s+ld \\(ix\\+126\\),hl\n+\\s+a6:\\s+dd 3f 7e\\s+ld \\(ix\\+126\\),ix\n+\\s+a9:\\s+dd 3e 7e\\s+ld \\(ix\\+126\\),iy\n+\\s+ac:\\s+fd 0f 9e\\s+ld \\(iy-98\\),bc\n+\\s+af:\\s+fd 1f 9e\\s+ld \\(iy-98\\),de\n+\\s+b2:\\s+fd 2f 9e\\s+ld \\(iy-98\\),hl\n+\\s+b5:\\s+fd 3e 9e\\s+ld \\(iy-98\\),ix\n+\\s+b8:\\s+fd 3f 9e\\s+ld \\(iy-98\\),iy\n+\\s+bb:\\s+ed 02 e5\\s+lea bc,ix-27\n+\\s+be:\\s+ed 12 e5\\s+lea de,ix-27\n+\\s+c1:\\s+ed 22 e5\\s+lea hl,ix-27\n+\\s+c4:\\s+ed 32 e5\\s+lea ix,ix-27\n+\\s+c7:\\s+ed 55 e5\\s+lea iy,ix-27\n+\\s+ca:\\s+ed 03 0c\\s+lea bc,iy\\+12\n+\\s+cd:\\s+ed 13 0c\\s+lea de,iy\\+12\n+\\s+d0:\\s+ed 23 0c\\s+lea hl,iy\\+12\n+\\s+d3:\\s+ed 54 0c\\s+lea ix,iy\\+12\n+\\s+d6:\\s+ed 33 0c\\s+lea iy,iy\\+12\n+\\s+d9:\\s+ed 65 7f\\s+pea ix\\+127\n+\\s+dc:\\s+ed 66 80\\s+pea iy-128\n+\\s+df:\\s+ed 38 05\\s+in0 a,\\(0x05\\)\n+\\s+e2:\\s+ed 00 05\\s+in0 b,\\(0x05\\)\n+\\s+e5:\\s+ed 08 05\\s+in0 c,\\(0x05\\)\n+\\s+e8:\\s+ed 10 05\\s+in0 d,\\(0x05\\)\n+\\s+eb:\\s+ed 18 05\\s+in0 e,\\(0x05\\)\n+\\s+ee:\\s+ed 20 05\\s+in0 h,\\(0x05\\)\n+\\s+f1:\\s+ed 28 05\\s+in0 l,\\(0x05\\)\n+\\s+f4:\\s+ed 39 05\\s+out0 \\(0x05\\),a\n+\\s+f7:\\s+ed 01 05\\s+out0 \\(0x05\\),b\n+\\s+fa:\\s+ed 09 05\\s+out0 \\(0x05\\),c\n+\\s+fd:\\s+ed 11 05\\s+out0 \\(0x05\\),d\n+\\s+100:\\s+ed 19 05\\s+out0 \\(0x05\\),e\n+\\s+103:\\s+ed 21 05\\s+out0 \\(0x05\\),h\n+\\s+106:\\s+ed 29 05\\s+out0 \\(0x05\\),l\n+\\s+109:\\s+ed 4c\\s+mlt bc\n+\\s+10b:\\s+ed 5c\\s+mlt de\n+\\s+10d:\\s+ed 6c\\s+mlt hl\n+\\s+10f:\\s+ed 7c\\s+mlt sp\n+\\s+111:\\s+ed 74 f0\\s+tstio 0xf0\n+\\s+114:\\s+ed 76\\s+slp\n+\\s+116:\\s+ed 7d\\s+stmix\n+\\s+118:\\s+ed 7e\\s+rsmix\n+\\s+11a:\\s+ed 82\\s+inim\n+\\s+11c:\\s+ed 83\\s+otim\n+\\s+11e:\\s+ed 84\\s+ini2\n+\\s+120:\\s+ed 8a\\s+indm\n+\\s+122:\\s+ed 8b\\s+otdm\n+\\s+124:\\s+ed 8c\\s+ind2\n+\\s+126:\\s+ed 92\\s+inimr\n+\\s+128:\\s+ed 93\\s+otimr\n+\\s+12a:\\s+ed 94\\s+oti2r\n+\\s+12c:\\s+ed 9a\\s+indmr\n+\\s+12e:\\s+ed 9b\\s+otdmr\n+\\s+130:\\s+ed 9c\\s+otd2r\n+\\s+132:\\s+ed a4\\s+ini2\n+\\s+134:\\s+ed ac\\s+ind2\n+\\s+136:\\s+ed b4\\s+oti2r\n+\\s+138:\\s+ed bc\\s+otd2r\n+\\s+13a:\\s+ed c2\\s+inirx\n+\\s+13c:\\s+ed c3\\s+otirx\n+\\s+13e:\\s+ed ca\\s+indrx\n+\\s+140:\\s+ed cb\\s+otdrx\n+\\s+142:\\s+dd 7c\\s+ld a,ixh\n+\\s+144:\\s+dd 44\\s+ld b,ixh\n+\\s+146:\\s+dd 4c\\s+ld c,ixh\n+\\s+148:\\s+dd 54\\s+ld d,ixh\n+\\s+14a:\\s+dd 5c\\s+ld e,ixh\n+\\s+14c:\\s+dd 64\\s+ld ixh,ixh\n+\\s+14e:\\s+dd 6c\\s+ld ixl,ixh\n+\\s+150:\\s+dd 7d\\s+ld a,ixl\n+\\s+152:\\s+dd 45\\s+ld b,ixl\n+\\s+154:\\s+dd 4d\\s+ld c,ixl\n+\\s+156:\\s+dd 55\\s+ld d,ixl\n+\\s+158:\\s+dd 5d\\s+ld e,ixl\n+\\s+15a:\\s+dd 65\\s+ld ixh,ixl\n+\\s+15c:\\s+dd 6d\\s+ld ixl,ixl\n+\\s+15e:\\s+fd 7c\\s+ld a,iyh\n+\\s+160:\\s+fd 44\\s+ld b,iyh\n+\\s+162:\\s+fd 4c\\s+ld c,iyh\n+\\s+164:\\s+fd 54\\s+ld d,iyh\n+\\s+166:\\s+fd 5c\\s+ld e,iyh\n+\\s+168:\\s+fd 64\\s+ld iyh,iyh\n+\\s+16a:\\s+fd 6c\\s+ld iyl,iyh\n+\\s+16c:\\s+fd 7d\\s+ld a,iyl\n+\\s+16e:\\s+fd 45\\s+ld b,iyl\n+\\s+170:\\s+fd 4d\\s+ld c,iyl\n+\\s+172:\\s+fd 55\\s+ld d,iyl\n+\\s+174:\\s+fd 5d\\s+ld e,iyl\n+\\s+176:\\s+fd 65\\s+ld iyh,iyl\n+\\s+178:\\s+fd 6d\\s+ld iyl,iyl\n+\\s+17a:\\s+dd 67\\s+ld ixh,a\n+\\s+17c:\\s+dd 60\\s+ld ixh,b\n+\\s+17e:\\s+dd 61\\s+ld ixh,c\n+\\s+180:\\s+dd 62\\s+ld ixh,d\n+\\s+182:\\s+dd 63\\s+ld ixh,e\n+\\s+184:\\s+dd 64\\s+ld ixh,ixh\n+\\s+186:\\s+dd 65\\s+ld ixh,ixl\n+\\s+188:\\s+dd 26 19\\s+ld ixh,0x19\n+\\s+18b:\\s+dd 6f\\s+ld ixl,a\n+\\s+18d:\\s+dd 68\\s+ld ixl,b\n+\\s+18f:\\s+dd 69\\s+ld ixl,c\n+\\s+191:\\s+dd 6a\\s+ld ixl,d\n+\\s+193:\\s+dd 6b\\s+ld ixl,e\n+\\s+195:\\s+dd 6c\\s+ld ixl,ixh\n+\\s+197:\\s+dd 6d\\s+ld ixl,ixl\n+\\s+199:\\s+dd 2e 19\\s+ld ixl,0x19\n+\\s+19c:\\s+fd 67\\s+ld iyh,a\n+\\s+19e:\\s+fd 60\\s+ld iyh,b\n+\\s+1a0:\\s+fd 61\\s+ld iyh,c\n+\\s+1a2:\\s+fd 62\\s+ld iyh,d\n+\\s+1a4:\\s+fd 63\\s+ld iyh,e\n+\\s+1a6:\\s+fd 64\\s+ld iyh,iyh\n+\\s+1a8:\\s+fd 65\\s+ld iyh,iyl\n+\\s+1aa:\\s+fd 26 19\\s+ld iyh,0x19\n+\\s+1ad:\\s+fd 6f\\s+ld iyl,a\n+\\s+1af:\\s+fd 68\\s+ld iyl,b\n+\\s+1b1:\\s+fd 69\\s+ld iyl,c\n+\\s+1b3:\\s+fd 6a\\s+ld iyl,d\n+\\s+1b5:\\s+fd 6b\\s+ld iyl,e\n+\\s+1b7:\\s+fd 6c\\s+ld iyl,iyh\n+\\s+1b9:\\s+fd 6d\\s+ld iyl,iyl\n+\\s+1bb:\\s+fd 2e 19\\s+ld iyl,0x19\n+\\s+1be:\\s+dd 84\\s+add a,ixh\n+\\s+1c0:\\s+dd 85\\s+add a,ixl\n+\\s+1c2:\\s+fd 84\\s+add a,iyh\n+\\s+1c4:\\s+fd 85\\s+add a,iyl\n+\\s+1c6:\\s+dd 8c\\s+adc a,ixh\n+\\s+1c8:\\s+dd 8d\\s+adc a,ixl\n+\\s+1ca:\\s+fd 8c\\s+adc a,iyh\n+\\s+1cc:\\s+fd 8d\\s+adc a,iyl\n+\\s+1ce:\\s+dd bc\\s+cp a,ixh\n+\\s+1d0:\\s+dd bd\\s+cp a,ixl\n+\\s+1d2:\\s+fd bc\\s+cp a,iyh\n+\\s+1d4:\\s+fd bd\\s+cp a,iyl\n+\\s+1d6:\\s+dd 25\\s+dec ixh\n+\\s+1d8:\\s+dd 2d\\s+dec ixl\n+\\s+1da:\\s+fd 25\\s+dec iyh\n+\\s+1dc:\\s+fd 2d\\s+dec iyl\n+\\s+1de:\\s+dd 24\\s+inc ixh\n+\\s+1e0:\\s+dd 2c\\s+inc ixl\n+\\s+1e2:\\s+fd 24\\s+inc iyh\n+\\s+1e4:\\s+fd 2c\\s+inc iyl\n+\\s+1e6:\\s+dd 9c\\s+sbc a,ixh\n+\\s+1e8:\\s+dd 9d\\s+sbc a,ixl\n+\\s+1ea:\\s+fd 9c\\s+sbc a,iyh\n+\\s+1ec:\\s+fd 9d\\s+sbc a,iyl\n+\\s+1ee:\\s+dd 94\\s+sub a,ixh\n+\\s+1f0:\\s+dd 95\\s+sub a,ixl\n+\\s+1f2:\\s+fd 94\\s+sub a,iyh\n+\\s+1f4:\\s+fd 95\\s+sub a,iyl\n+\\s+1f6:\\s+dd a4\\s+and a,ixh\n+\\s+1f8:\\s+dd a5\\s+and a,ixl\n+\\s+1fa:\\s+fd a4\\s+and a,iyh\n+\\s+1fc:\\s+fd a5\\s+and a,iyl\n+\\s+1fe:\\s+dd b4\\s+or a,ixh\n+\\s+200:\\s+dd b5\\s+or a,ixl\n+\\s+202:\\s+fd b4\\s+or a,iyh\n+\\s+204:\\s+fd b5\\s+or a,iyl\n+\\s+206:\\s+dd ac\\s+xor a,ixh\n+\\s+208:\\s+dd ad\\s+xor a,ixl\n+\\s+20a:\\s+fd ac\\s+xor a,iyh\n+\\s+20c:\\s+fd ad\\s+xor a,iyl\n+\\s+20e:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+20f:\\s+dd 8e 09\\s+adc a,\\(ix\\+9\\)\n+\\s+212:\\s+fd 8e 09\\s+adc a,\\(iy\\+9\\)\n+\\s+215:\\s+ce 03\\s+adc a,0x03\n+\\s+217:\\s+8f\\s+adc a,a\n+\\s+218:\\s+88\\s+adc a,b\n+\\s+219:\\s+89\\s+adc a,c\n+\\s+21a:\\s+8a\\s+adc a,d\n+\\s+21b:\\s+8b\\s+adc a,e\n+\\s+21c:\\s+8c\\s+adc a,h\n+\\s+21d:\\s+8d\\s+adc a,l\n+\\s+21e:\\s+ed 4a\\s+adc hl,bc\n+\\s+220:\\s+ed 5a\\s+adc hl,de\n+\\s+222:\\s+ed 6a\\s+adc hl,hl\n+\\s+224:\\s+ed 7a\\s+adc hl,sp\n+\\s+226:\\s+86\\s+add a,\\(hl\\)\n+\\s+227:\\s+dd 86 09\\s+add a,\\(ix\\+9\\)\n+\\s+22a:\\s+fd 86 09\\s+add a,\\(iy\\+9\\)\n+\\s+22d:\\s+c6 03\\s+add a,0x03\n+\\s+22f:\\s+87\\s+add a,a\n+\\s+230:\\s+80\\s+add a,b\n+\\s+231:\\s+81\\s+add a,c\n+\\s+232:\\s+82\\s+add a,d\n+\\s+233:\\s+83\\s+add a,e\n+\\s+234:\\s+84\\s+add a,h\n+\\s+235:\\s+85\\s+add a,l\n+\\s+236:\\s+09\\s+add hl,bc\n+\\s+237:\\s+19\\s+add hl,de\n+\\s+238:\\s+29\\s+add hl,hl\n+\\s+239:\\s+39\\s+add hl,sp\n+\\s+23a:\\s+dd 09\\s+add ix,bc\n+\\s+23c:\\s+dd 19\\s+add ix,de\n+\\s+23e:\\s+dd 29\\s+add ix,ix\n+\\s+240:\\s+dd 39\\s+add ix,sp\n+\\s+242:\\s+fd 09\\s+add iy,bc\n+\\s+244:\\s+fd 19\\s+add iy,de\n+\\s+246:\\s+fd 29\\s+add iy,iy\n+\\s+248:\\s+fd 39\\s+add iy,sp\n+\\s+24a:\\s+a6\\s+and a,\\(hl\\)\n+\\s+24b:\\s+dd a6 09\\s+and a,\\(ix\\+9\\)\n+\\s+24e:\\s+fd a6 09\\s+and a,\\(iy\\+9\\)\n+\\s+251:\\s+e6 03\\s+and a,0x03\n+\\s+253:\\s+a7\\s+and a,a\n+\\s+254:\\s+a0\\s+and a,b\n+\\s+255:\\s+a1\\s+and a,c\n+\\s+256:\\s+a2\\s+and a,d\n+\\s+257:\\s+a3\\s+and a,e\n+\\s+258:\\s+a4\\s+and a,h\n+\\s+259:\\s+a5\\s+and a,l\n+\\s+25a:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+25c:\\s+dd cb 09 46\\s+bit 0,\\(ix\\+9\\)\n+\\s+260:\\s+fd cb 09 46\\s+bit 0,\\(iy\\+9\\)\n+\\s+264:\\s+cb 47\\s+bit 0,a\n+\\s+266:\\s+cb 40\\s+bit 0,b\n+\\s+268:\\s+cb 41\\s+bit 0,c\n+\\s+26a:\\s+cb 42\\s+bit 0,d\n+\\s+26c:\\s+cb 43\\s+bit 0,e\n+\\s+26e:\\s+cb 44\\s+bit 0,h\n+\\s+270:\\s+cb 45\\s+bit 0,l\n+\\s+272:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+274:\\s+dd cb 09 4e\\s+bit 1,\\(ix\\+9\\)\n+\\s+278:\\s+fd cb 09 4e\\s+bit 1,\\(iy\\+9\\)\n+\\s+27c:\\s+cb 4f\\s+bit 1,a\n+\\s+27e:\\s+cb 48\\s+bit 1,b\n+\\s+280:\\s+cb 49\\s+bit 1,c\n+\\s+282:\\s+cb 4a\\s+bit 1,d\n+\\s+284:\\s+cb 4b\\s+bit 1,e\n+\\s+286:\\s+cb 4c\\s+bit 1,h\n+\\s+288:\\s+cb 4d\\s+bit 1,l\n+\\s+28a:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+28c:\\s+dd cb 09 56\\s+bit 2,\\(ix\\+9\\)\n+\\s+290:\\s+fd cb 09 56\\s+bit 2,\\(iy\\+9\\)\n+\\s+294:\\s+cb 57\\s+bit 2,a\n+\\s+296:\\s+cb 50\\s+bit 2,b\n+\\s+298:\\s+cb 51\\s+bit 2,c\n+\\s+29a:\\s+cb 52\\s+bit 2,d\n+\\s+29c:\\s+cb 53\\s+bit 2,e\n+\\s+29e:\\s+cb 54\\s+bit 2,h\n+\\s+2a0:\\s+cb 55\\s+bit 2,l\n+\\s+2a2:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+2a4:\\s+dd cb 09 5e\\s+bit 3,\\(ix\\+9\\)\n+\\s+2a8:\\s+fd cb 09 5e\\s+bit 3,\\(iy\\+9\\)\n+\\s+2ac:\\s+cb 5f\\s+bit 3,a\n+\\s+2ae:\\s+cb 58\\s+bit 3,b\n+\\s+2b0:\\s+cb 59\\s+bit 3,c\n+\\s+2b2:\\s+cb 5a\\s+bit 3,d\n+\\s+2b4:\\s+cb 5b\\s+bit 3,e\n+\\s+2b6:\\s+cb 5c\\s+bit 3,h\n+\\s+2b8:\\s+cb 5d\\s+bit 3,l\n+\\s+2ba:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+2bc:\\s+dd cb 09 66\\s+bit 4,\\(ix\\+9\\)\n+\\s+2c0:\\s+fd cb 09 66\\s+bit 4,\\(iy\\+9\\)\n+\\s+2c4:\\s+cb 67\\s+bit 4,a\n+\\s+2c6:\\s+cb 60\\s+bit 4,b\n+\\s+2c8:\\s+cb 61\\s+bit 4,c\n+\\s+2ca:\\s+cb 62\\s+bit 4,d\n+\\s+2cc:\\s+cb 63\\s+bit 4,e\n+\\s+2ce:\\s+cb 64\\s+bit 4,h\n+\\s+2d0:\\s+cb 65\\s+bit 4,l\n+\\s+2d2:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+2d4:\\s+dd cb 09 6e\\s+bit 5,\\(ix\\+9\\)\n+\\s+2d8:\\s+fd cb 09 6e\\s+bit 5,\\(iy\\+9\\)\n+\\s+2dc:\\s+cb 6f\\s+bit 5,a\n+\\s+2de:\\s+cb 68\\s+bit 5,b\n+\\s+2e0:\\s+cb 69\\s+bit 5,c\n+\\s+2e2:\\s+cb 6a\\s+bit 5,d\n+\\s+2e4:\\s+cb 6b\\s+bit 5,e\n+\\s+2e6:\\s+cb 6c\\s+bit 5,h\n+\\s+2e8:\\s+cb 6d\\s+bit 5,l\n+\\s+2ea:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+2ec:\\s+dd cb 09 76\\s+bit 6,\\(ix\\+9\\)\n+\\s+2f0:\\s+fd cb 09 76\\s+bit 6,\\(iy\\+9\\)\n+\\s+2f4:\\s+cb 77\\s+bit 6,a\n+\\s+2f6:\\s+cb 70\\s+bit 6,b\n+\\s+2f8:\\s+cb 71\\s+bit 6,c\n+\\s+2fa:\\s+cb 72\\s+bit 6,d\n+\\s+2fc:\\s+cb 73\\s+bit 6,e\n+\\s+2fe:\\s+cb 74\\s+bit 6,h\n+\\s+300:\\s+cb 75\\s+bit 6,l\n+\\s+302:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+304:\\s+dd cb 09 7e\\s+bit 7,\\(ix\\+9\\)\n+\\s+308:\\s+fd cb 09 7e\\s+bit 7,\\(iy\\+9\\)\n+\\s+30c:\\s+cb 7f\\s+bit 7,a\n+\\s+30e:\\s+cb 78\\s+bit 7,b\n+\\s+310:\\s+cb 79\\s+bit 7,c\n+\\s+312:\\s+cb 7a\\s+bit 7,d\n+\\s+314:\\s+cb 7b\\s+bit 7,e\n+\\s+316:\\s+cb 7c\\s+bit 7,h\n+\\s+318:\\s+cb 7d\\s+bit 7,l\n+\\s+31a:\\s+cd 34 12\\s+call 0x1234\n+\\s+31d:\\s+dc 34 12\\s+call c,0x1234\n+\\s+320:\\s+fc 34 12\\s+call m,0x1234\n+\\s+323:\\s+d4 34 12\\s+call nc,0x1234\n+\\s+326:\\s+c4 34 12\\s+call nz,0x1234\n+\\s+329:\\s+f4 34 12\\s+call p,0x1234\n+\\s+32c:\\s+ec 34 12\\s+call pe,0x1234\n+\\s+32f:\\s+e4 34 12\\s+call po,0x1234\n+\\s+332:\\s+cc 34 12\\s+call z,0x1234\n+\\s+335:\\s+3f\\s+ccf\n+\\s+336:\\s+be\\s+cp a,\\(hl\\)\n+\\s+337:\\s+dd be 09\\s+cp a,\\(ix\\+9\\)\n+\\s+33a:\\s+fd be 09\\s+cp a,\\(iy\\+9\\)\n+\\s+33d:\\s+fe 03\\s+cp a,0x03\n+\\s+33f:\\s+bf\\s+cp a,a\n+\\s+340:\\s+b8\\s+cp a,b\n+\\s+341:\\s+b9\\s+cp a,c\n+\\s+342:\\s+ba\\s+cp a,d\n+\\s+343:\\s+bb\\s+cp a,e\n+\\s+344:\\s+bc\\s+cp a,h\n+\\s+345:\\s+bd\\s+cp a,l\n+\\s+346:\\s+ed a9\\s+cpd\n+\\s+348:\\s+ed b9\\s+cpdr\n+\\s+34a:\\s+ed a1\\s+cpi\n+\\s+34c:\\s+ed b1\\s+cpir\n+\\s+34e:\\s+2f\\s+cpl\n+\\s+34f:\\s+27\\s+daa\n+\\s+350:\\s+35\\s+dec \\(hl\\)\n+\\s+351:\\s+dd 35 09\\s+dec \\(ix\\+9\\)\n+\\s+354:\\s+fd 35 09\\s+dec \\(iy\\+9\\)\n+\\s+357:\\s+3d\\s+dec a\n+\\s+358:\\s+05\\s+dec b\n+\\s+359:\\s+0b\\s+dec bc\n+\\s+35a:\\s+0d\\s+dec c\n+\\s+35b:\\s+15\\s+dec d\n+\\s+35c:\\s+1b\\s+dec de\n+\\s+35d:\\s+1d\\s+dec e\n+\\s+35e:\\s+25\\s+dec h\n+\\s+35f:\\s+2b\\s+dec hl\n+\\s+360:\\s+dd 2b\\s+dec ix\n+\\s+362:\\s+fd 2b\\s+dec iy\n+\\s+364:\\s+2d\\s+dec l\n+\\s+365:\\s+3b\\s+dec sp\n+\\s+366:\\s+f3\\s+di\n+\\s+367:\\s+10 05\\s+djnz 0x036e\n+\\s+369:\\s+fb\\s+ei\n+\\s+36a:\\s+e3\\s+ex \\(sp\\),hl\n+\\s+36b:\\s+dd e3\\s+ex \\(sp\\),ix\n+\\s+36d:\\s+fd e3\\s+ex \\(sp\\),iy\n+\\s+36f:\\s+08\\s+ex af,af'\n+\\s+370:\\s+eb\\s+ex de,hl\n+\\s+371:\\s+d9\\s+exx\n+\\s+372:\\s+76\\s+halt\n+\\s+373:\\s+ed 46\\s+im 0\n+\\s+375:\\s+ed 56\\s+im 1\n+\\s+377:\\s+ed 5e\\s+im 2\n+\\s+379:\\s+ed 78\\s+in a,\\(bc\\)\n+\\s+37b:\\s+db 03\\s+in a,\\(0x03\\)\n+\\s+37d:\\s+ed 40\\s+in b,\\(bc\\)\n+\\s+37f:\\s+ed 48\\s+in c,\\(bc\\)\n+\\s+381:\\s+ed 50\\s+in d,\\(bc\\)\n+\\s+383:\\s+ed 58\\s+in e,\\(bc\\)\n+\\s+385:\\s+ed 60\\s+in h,\\(bc\\)\n+\\s+387:\\s+ed 68\\s+in l,\\(bc\\)\n+\\s+389:\\s+34\\s+inc \\(hl\\)\n+\\s+38a:\\s+dd 34 09\\s+inc \\(ix\\+9\\)\n+\\s+38d:\\s+fd 34 09\\s+inc \\(iy\\+9\\)\n+\\s+390:\\s+3c\\s+inc a\n+\\s+391:\\s+04\\s+inc b\n+\\s+392:\\s+03\\s+inc bc\n+\\s+393:\\s+0c\\s+inc c\n+\\s+394:\\s+14\\s+inc d\n+\\s+395:\\s+13\\s+inc de\n+\\s+396:\\s+1c\\s+inc e\n+\\s+397:\\s+24\\s+inc h\n+\\s+398:\\s+23\\s+inc hl\n+\\s+399:\\s+dd 23\\s+inc ix\n+\\s+39b:\\s+fd 23\\s+inc iy\n+\\s+39d:\\s+2c\\s+inc l\n+\\s+39e:\\s+33\\s+inc sp\n+\\s+39f:\\s+ed aa\\s+ind\n+\\s+3a1:\\s+ed ba\\s+indr\n+\\s+3a3:\\s+ed a2\\s+ini\n+\\s+3a5:\\s+ed b2\\s+inir\n+\\s+3a7:\\s+e9\\s+jp \\(hl\\)\n+\\s+3a8:\\s+dd e9\\s+jp \\(ix\\)\n+\\s+3aa:\\s+fd e9\\s+jp \\(iy\\)\n+\\s+3ac:\\s+c3 34 12\\s+jp 0x1234\n+\\s+3af:\\s+da 34 12\\s+jp c,0x1234\n+\\s+3b2:\\s+fa 34 12\\s+jp m,0x1234\n+\\s+3b5:\\s+d2 34 12\\s+jp nc,0x1234\n+\\s+3b8:\\s+c2 34 12\\s+jp nz,0x1234\n+\\s+3bb:\\s+f2 34 12\\s+jp p,0x1234\n+\\s+3be:\\s+ea 34 12\\s+jp pe,0x1234\n+\\s+3c1:\\s+e2 34 12\\s+jp po,0x1234\n+\\s+3c4:\\s+ca 34 12\\s+jp z,0x1234\n+\\s+3c7:\\s+18 05\\s+jr 0x03ce\n+\\s+3c9:\\s+38 05\\s+jr c,0x03d0\n+\\s+3cb:\\s+30 05\\s+jr nc,0x03d2\n+\\s+3cd:\\s+20 05\\s+jr nz,0x03d4\n+\\s+3cf:\\s+28 05\\s+jr z,0x03d6\n+\\s+3d1:\\s+32 34 12\\s+ld \\(0x1234\\),a\n+\\s+3d4:\\s+ed 43 34 12\\s+ld \\(0x1234\\),bc\n+\\s+3d8:\\s+ed 53 34 12\\s+ld \\(0x1234\\),de\n+\\s+3dc:\\s+22 34 12\\s+ld \\(0x1234\\),hl\n+\\s+3df:\\s+dd 22 34 12\\s+ld \\(0x1234\\),ix\n+\\s+3e3:\\s+fd 22 34 12\\s+ld \\(0x1234\\),iy\n+\\s+3e7:\\s+ed 73 34 12\\s+ld \\(0x1234\\),sp\n+\\s+3eb:\\s+02\\s+ld \\(bc\\),a\n+\\s+3ec:\\s+12\\s+ld \\(de\\),a\n+\\s+3ed:\\s+36 03\\s+ld \\(hl\\),0x03\n+\\s+3ef:\\s+77\\s+ld \\(hl\\),a\n+\\s+3f0:\\s+70\\s+ld \\(hl\\),b\n+\\s+3f1:\\s+71\\s+ld \\(hl\\),c\n+\\s+3f2:\\s+72\\s+ld \\(hl\\),d\n+\\s+3f3:\\s+73\\s+ld \\(hl\\),e\n+\\s+3f4:\\s+74\\s+ld \\(hl\\),h\n+\\s+3f5:\\s+75\\s+ld \\(hl\\),l\n+\\s+3f6:\\s+dd 36 09 03\\s+ld \\(ix\\+9\\),0x03\n+\\s+3fa:\\s+dd 77 09\\s+ld \\(ix\\+9\\),a\n+\\s+3fd:\\s+dd 70 09\\s+ld \\(ix\\+9\\),b\n+\\s+400:\\s+dd 71 09\\s+ld \\(ix\\+9\\),c\n+\\s+403:\\s+dd 72 09\\s+ld \\(ix\\+9\\),d\n+\\s+406:\\s+dd 73 09\\s+ld \\(ix\\+9\\),e\n+\\s+409:\\s+dd 74 09\\s+ld \\(ix\\+9\\),h\n+\\s+40c:\\s+dd 75 09\\s+ld \\(ix\\+9\\),l\n+\\s+40f:\\s+fd 36 09 03\\s+ld \\(iy\\+9\\),0x03\n+\\s+413:\\s+fd 77 09\\s+ld \\(iy\\+9\\),a\n+\\s+416:\\s+fd 70 09\\s+ld \\(iy\\+9\\),b\n+\\s+419:\\s+fd 71 09\\s+ld \\(iy\\+9\\),c\n+\\s+41c:\\s+fd 72 09\\s+ld \\(iy\\+9\\),d\n+\\s+41f:\\s+fd 73 09\\s+ld \\(iy\\+9\\),e\n+\\s+422:\\s+fd 74 09\\s+ld \\(iy\\+9\\),h\n+\\s+425:\\s+fd 75 09\\s+ld \\(iy\\+9\\),l\n+\\s+428:\\s+3a 34 12\\s+ld a,\\(0x1234\\)\n+\\s+42b:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+42c:\\s+1a\\s+ld a,\\(de\\)\n+\\s+42d:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+42e:\\s+dd 7e 09\\s+ld a,\\(ix\\+9\\)\n+\\s+431:\\s+fd 7e 09\\s+ld a,\\(iy\\+9\\)\n+\\s+434:\\s+3e 03\\s+ld a,0x03\n+\\s+436:\\s+7f\\s+ld a,a\n+\\s+437:\\s+78\\s+ld a,b\n+\\s+438:\\s+79\\s+ld a,c\n+\\s+439:\\s+7a\\s+ld a,d\n+\\s+43a:\\s+7b\\s+ld a,e\n+\\s+43b:\\s+7c\\s+ld a,h\n+\\s+43c:\\s+ed 57\\s+ld a,i\n+\\s+43e:\\s+7d\\s+ld a,l\n+\\s+43f:\\s+ed 5f\\s+ld a,r\n+\\s+441:\\s+46\\s+ld b,\\(hl\\)\n+\\s+442:\\s+dd 46 09\\s+ld b,\\(ix\\+9\\)\n+\\s+445:\\s+fd 46 09\\s+ld b,\\(iy\\+9\\)\n+\\s+448:\\s+06 03\\s+ld b,0x03\n+\\s+44a:\\s+47\\s+ld b,a\n+\\s+44b:\\s+00\\s+nop\n+\\s+44c:\\s+41\\s+ld b,c\n+\\s+44d:\\s+42\\s+ld b,d\n+\\s+44e:\\s+43\\s+ld b,e\n+\\s+44f:\\s+44\\s+ld b,h\n+\\s+450:\\s+45\\s+ld b,l\n+\\s+451:\\s+ed 4b 34 12\\s+ld bc,\\(0x1234\\)\n+\\s+455:\\s+01 34 12\\s+ld bc,0x1234\n+\\s+458:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+459:\\s+dd 4e 09\\s+ld c,\\(ix\\+9\\)\n+\\s+45c:\\s+fd 4e 09\\s+ld c,\\(iy\\+9\\)\n+\\s+45f:\\s+0e 03\\s+ld c,0x03\n+\\s+461:\\s+4f\\s+ld c,a\n+\\s+462:\\s+48\\s+ld c,b\n+\\s+463:\\s+00\\s+nop\n+\\s+464:\\s+4a\\s+ld c,d\n+\\s+465:\\s+4b\\s+ld c,e\n+\\s+466:\\s+4c\\s+ld c,h\n+\\s+467:\\s+4d\\s+ld c,l\n+\\s+468:\\s+56\\s+ld d,\\(hl\\)\n+\\s+469:\\s+dd 56 09\\s+ld d,\\(ix\\+9\\)\n+\\s+46c:\\s+fd 56 09\\s+ld d,\\(iy\\+9\\)\n+\\s+46f:\\s+16 03\\s+ld d,0x03\n+\\s+471:\\s+57\\s+ld d,a\n+\\s+472:\\s+50\\s+ld d,b\n+\\s+473:\\s+51\\s+ld d,c\n+\\s+474:\\s+00\\s+nop\n+\\s+475:\\s+53\\s+ld d,e\n+\\s+476:\\s+54\\s+ld d,h\n+\\s+477:\\s+55\\s+ld d,l\n+\\s+478:\\s+ed 5b 34 12\\s+ld de,\\(0x1234\\)\n+\\s+47c:\\s+11 34 12\\s+ld de,0x1234\n+\\s+47f:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+480:\\s+dd 5e 09\\s+ld e,\\(ix\\+9\\)\n+\\s+483:\\s+fd 5e 09\\s+ld e,\\(iy\\+9\\)\n+\\s+486:\\s+1e 03\\s+ld e,0x03\n+\\s+488:\\s+5f\\s+ld e,a\n+\\s+489:\\s+58\\s+ld e,b\n+\\s+48a:\\s+59\\s+ld e,c\n+\\s+48b:\\s+5a\\s+ld e,d\n+\\s+48c:\\s+00\\s+nop\n+\\s+48d:\\s+5c\\s+ld e,h\n+\\s+48e:\\s+5d\\s+ld e,l\n+\\s+48f:\\s+66\\s+ld h,\\(hl\\)\n+\\s+490:\\s+dd 66 09\\s+ld h,\\(ix\\+9\\)\n+\\s+493:\\s+fd 66 09\\s+ld h,\\(iy\\+9\\)\n+\\s+496:\\s+26 03\\s+ld h,0x03\n+\\s+498:\\s+67\\s+ld h,a\n+\\s+499:\\s+60\\s+ld h,b\n+\\s+49a:\\s+61\\s+ld h,c\n+\\s+49b:\\s+62\\s+ld h,d\n+\\s+49c:\\s+63\\s+ld h,e\n+\\s+49d:\\s+64\\s+ld h,h\n+\\s+49e:\\s+65\\s+ld h,l\n+\\s+49f:\\s+2a 34 12\\s+ld hl,\\(0x1234\\)\n+\\s+4a2:\\s+21 34 12\\s+ld hl,0x1234\n+\\s+4a5:\\s+ed 47\\s+ld i,a\n+\\s+4a7:\\s+dd 2a 34 12\\s+ld ix,\\(0x1234\\)\n+\\s+4ab:\\s+dd 21 34 12\\s+ld ix,0x1234\n+\\s+4af:\\s+fd 2a 34 12\\s+ld iy,\\(0x1234\\)\n+\\s+4b3:\\s+fd 21 34 12\\s+ld iy,0x1234\n+\\s+4b7:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+4b8:\\s+dd 6e 09\\s+ld l,\\(ix\\+9\\)\n+\\s+4bb:\\s+fd 6e 09\\s+ld l,\\(iy\\+9\\)\n+\\s+4be:\\s+2e 03\\s+ld l,0x03\n+\\s+4c0:\\s+6f\\s+ld l,a\n+\\s+4c1:\\s+68\\s+ld l,b\n+\\s+4c2:\\s+69\\s+ld l,c\n+\\s+4c3:\\s+6a\\s+ld l,d\n+\\s+4c4:\\s+6b\\s+ld l,e\n+\\s+4c5:\\s+6c\\s+ld l,h\n+\\s+4c6:\\s+6d\\s+ld l,l\n+\\s+4c7:\\s+ed 4f\\s+ld r,a\n+\\s+4c9:\\s+ed 7b 34 12\\s+ld sp,\\(0x1234\\)\n+\\s+4cd:\\s+31 34 12\\s+ld sp,0x1234\n+\\s+4d0:\\s+f9\\s+ld sp,hl\n+\\s+4d1:\\s+dd f9\\s+ld sp,ix\n+\\s+4d3:\\s+fd f9\\s+ld sp,iy\n+\\s+4d5:\\s+ed a8\\s+ldd\n+\\s+4d7:\\s+ed b8\\s+lddr\n+\\s+4d9:\\s+ed a0\\s+ldi\n+\\s+4db:\\s+ed b0\\s+ldir\n+\\s+4dd:\\s+ed 44\\s+neg\n+\\s+4df:\\s+00\\s+nop\n+\\s+4e0:\\s+b6\\s+or a,\\(hl\\)\n+\\s+4e1:\\s+dd b6 09\\s+or a,\\(ix\\+9\\)\n+\\s+4e4:\\s+fd b6 09\\s+or a,\\(iy\\+9\\)\n+\\s+4e7:\\s+f6 03\\s+or a,0x03\n+\\s+4e9:\\s+b7\\s+or a,a\n+\\s+4ea:\\s+b0\\s+or a,b\n+\\s+4eb:\\s+b1\\s+or a,c\n+\\s+4ec:\\s+b2\\s+or a,d\n+\\s+4ed:\\s+b3\\s+or a,e\n+\\s+4ee:\\s+b4\\s+or a,h\n+\\s+4ef:\\s+b5\\s+or a,l\n+\\s+4f0:\\s+ed bb\\s+otdr\n+\\s+4f2:\\s+ed b3\\s+otir\n+\\s+4f4:\\s+ed 79\\s+out \\(bc\\),a\n+\\s+4f6:\\s+ed 41\\s+out \\(bc\\),b\n+\\s+4f8:\\s+ed 49\\s+out \\(bc\\),c\n+\\s+4fa:\\s+ed 51\\s+out \\(bc\\),d\n+\\s+4fc:\\s+ed 59\\s+out \\(bc\\),e\n+\\s+4fe:\\s+ed 61\\s+out \\(bc\\),h\n+\\s+500:\\s+ed 69\\s+out \\(bc\\),l\n+\\s+502:\\s+d3 03\\s+out \\(0x03\\),a\n+\\s+504:\\s+ed ab\\s+outd\n+\\s+506:\\s+ed a3\\s+outi\n+\\s+508:\\s+f1\\s+pop af\n+\\s+509:\\s+c1\\s+pop bc\n+\\s+50a:\\s+d1\\s+pop de\n+\\s+50b:\\s+e1\\s+pop hl\n+\\s+50c:\\s+dd e1\\s+pop ix\n+\\s+50e:\\s+fd e1\\s+pop iy\n+\\s+510:\\s+f5\\s+push af\n+\\s+511:\\s+c5\\s+push bc\n+\\s+512:\\s+d5\\s+push de\n+\\s+513:\\s+e5\\s+push hl\n+\\s+514:\\s+dd e5\\s+push ix\n+\\s+516:\\s+fd e5\\s+push iy\n+\\s+518:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+51a:\\s+dd cb 09 86\\s+res 0,\\(ix\\+9\\)\n+\\s+51e:\\s+fd cb 09 86\\s+res 0,\\(iy\\+9\\)\n+\\s+522:\\s+cb 87\\s+res 0,a\n+\\s+524:\\s+cb 80\\s+res 0,b\n+\\s+526:\\s+cb 81\\s+res 0,c\n+\\s+528:\\s+cb 82\\s+res 0,d\n+\\s+52a:\\s+cb 83\\s+res 0,e\n+\\s+52c:\\s+cb 84\\s+res 0,h\n+\\s+52e:\\s+cb 85\\s+res 0,l\n+\\s+530:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+532:\\s+dd cb 09 8e\\s+res 1,\\(ix\\+9\\)\n+\\s+536:\\s+fd cb 09 8e\\s+res 1,\\(iy\\+9\\)\n+\\s+53a:\\s+cb 8f\\s+res 1,a\n+\\s+53c:\\s+cb 88\\s+res 1,b\n+\\s+53e:\\s+cb 89\\s+res 1,c\n+\\s+540:\\s+cb 8a\\s+res 1,d\n+\\s+542:\\s+cb 8b\\s+res 1,e\n+\\s+544:\\s+cb 8c\\s+res 1,h\n+\\s+546:\\s+cb 8d\\s+res 1,l\n+\\s+548:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+54a:\\s+dd cb 09 96\\s+res 2,\\(ix\\+9\\)\n+\\s+54e:\\s+fd cb 09 96\\s+res 2,\\(iy\\+9\\)\n+\\s+552:\\s+cb 97\\s+res 2,a\n+\\s+554:\\s+cb 90\\s+res 2,b\n+\\s+556:\\s+cb 91\\s+res 2,c\n+\\s+558:\\s+cb 92\\s+res 2,d\n+\\s+55a:\\s+cb 93\\s+res 2,e\n+\\s+55c:\\s+cb 94\\s+res 2,h\n+\\s+55e:\\s+cb 95\\s+res 2,l\n+\\s+560:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+562:\\s+dd cb 09 9e\\s+res 3,\\(ix\\+9\\)\n+\\s+566:\\s+fd cb 09 9e\\s+res 3,\\(iy\\+9\\)\n+\\s+56a:\\s+cb 9f\\s+res 3,a\n+\\s+56c:\\s+cb 98\\s+res 3,b\n+\\s+56e:\\s+cb 99\\s+res 3,c\n+\\s+570:\\s+cb 9a\\s+res 3,d\n+\\s+572:\\s+cb 9b\\s+res 3,e\n+\\s+574:\\s+cb 9c\\s+res 3,h\n+\\s+576:\\s+cb 9d\\s+res 3,l\n+\\s+578:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+57a:\\s+dd cb 09 a6\\s+res 4,\\(ix\\+9\\)\n+\\s+57e:\\s+fd cb 09 a6\\s+res 4,\\(iy\\+9\\)\n+\\s+582:\\s+cb a7\\s+res 4,a\n+\\s+584:\\s+cb a0\\s+res 4,b\n+\\s+586:\\s+cb a1\\s+res 4,c\n+\\s+588:\\s+cb a2\\s+res 4,d\n+\\s+58a:\\s+cb a3\\s+res 4,e\n+\\s+58c:\\s+cb a4\\s+res 4,h\n+\\s+58e:\\s+cb a5\\s+res 4,l\n+\\s+590:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+592:\\s+dd cb 09 ae\\s+res 5,\\(ix\\+9\\)\n+\\s+596:\\s+fd cb 09 ae\\s+res 5,\\(iy\\+9\\)\n+\\s+59a:\\s+cb af\\s+res 5,a\n+\\s+59c:\\s+cb a8\\s+res 5,b\n+\\s+59e:\\s+cb a9\\s+res 5,c\n+\\s+5a0:\\s+cb aa\\s+res 5,d\n+\\s+5a2:\\s+cb ab\\s+res 5,e\n+\\s+5a4:\\s+cb ac\\s+res 5,h\n+\\s+5a6:\\s+cb ad\\s+res 5,l\n+\\s+5a8:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+5aa:\\s+dd cb 09 b6\\s+res 6,\\(ix\\+9\\)\n+\\s+5ae:\\s+fd cb 09 b6\\s+res 6,\\(iy\\+9\\)\n+\\s+5b2:\\s+cb b7\\s+res 6,a\n+\\s+5b4:\\s+cb b0\\s+res 6,b\n+\\s+5b6:\\s+cb b1\\s+res 6,c\n+\\s+5b8:\\s+cb b2\\s+res 6,d\n+\\s+5ba:\\s+cb b3\\s+res 6,e\n+\\s+5bc:\\s+cb b4\\s+res 6,h\n+\\s+5be:\\s+cb b5\\s+res 6,l\n+\\s+5c0:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+5c2:\\s+dd cb 09 be\\s+res 7,\\(ix\\+9\\)\n+\\s+5c6:\\s+fd cb 09 be\\s+res 7,\\(iy\\+9\\)\n+\\s+5ca:\\s+cb bf\\s+res 7,a\n+\\s+5cc:\\s+cb b8\\s+res 7,b\n+\\s+5ce:\\s+cb b9\\s+res 7,c\n+\\s+5d0:\\s+cb ba\\s+res 7,d\n+\\s+5d2:\\s+cb bb\\s+res 7,e\n+\\s+5d4:\\s+cb bc\\s+res 7,h\n+\\s+5d6:\\s+cb bd\\s+res 7,l\n+\\s+5d8:\\s+c9\\s+ret\n+\\s+5d9:\\s+d8\\s+ret c\n+\\s+5da:\\s+f8\\s+ret m\n+\\s+5db:\\s+d0\\s+ret nc\n+\\s+5dc:\\s+c0\\s+ret nz\n+\\s+5dd:\\s+f0\\s+ret p\n+\\s+5de:\\s+e8\\s+ret pe\n+\\s+5df:\\s+e0\\s+ret po\n+\\s+5e0:\\s+c8\\s+ret z\n+\\s+5e1:\\s+ed 4d\\s+reti\n+\\s+5e3:\\s+ed 45\\s+retn\n+\\s+5e5:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+5e7:\\s+dd cb 09 16\\s+rl \\(ix\\+9\\)\n+\\s+5eb:\\s+fd cb 09 16\\s+rl \\(iy\\+9\\)\n+\\s+5ef:\\s+cb 17\\s+rl a\n+\\s+5f1:\\s+cb 10\\s+rl b\n+\\s+5f3:\\s+cb 11\\s+rl c\n+\\s+5f5:\\s+cb 12\\s+rl d\n+\\s+5f7:\\s+cb 13\\s+rl e\n+\\s+5f9:\\s+cb 14\\s+rl h\n+\\s+5fb:\\s+cb 15\\s+rl l\n+\\s+5fd:\\s+17\\s+rla\n+\\s+5fe:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+600:\\s+dd cb 09 06\\s+rlc \\(ix\\+9\\)\n+\\s+604:\\s+fd cb 09 06\\s+rlc \\(iy\\+9\\)\n+\\s+608:\\s+cb 07\\s+rlc a\n+\\s+60a:\\s+cb 00\\s+rlc b\n+\\s+60c:\\s+cb 01\\s+rlc c\n+\\s+60e:\\s+cb 02\\s+rlc d\n+\\s+610:\\s+cb 03\\s+rlc e\n+\\s+612:\\s+cb 04\\s+rlc h\n+\\s+614:\\s+cb 05\\s+rlc l\n+\\s+616:\\s+07\\s+rlca\n+\\s+617:\\s+ed 6f\\s+rld\n+\\s+619:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+61b:\\s+dd cb 09 1e\\s+rr \\(ix\\+9\\)\n+\\s+61f:\\s+fd cb 09 1e\\s+rr \\(iy\\+9\\)\n+\\s+623:\\s+cb 1f\\s+rr a\n+\\s+625:\\s+cb 18\\s+rr b\n+\\s+627:\\s+cb 19\\s+rr c\n+\\s+629:\\s+cb 1a\\s+rr d\n+\\s+62b:\\s+cb 1b\\s+rr e\n+\\s+62d:\\s+cb 1c\\s+rr h\n+\\s+62f:\\s+cb 1d\\s+rr l\n+\\s+631:\\s+1f\\s+rra\n+\\s+632:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+634:\\s+dd cb 09 0e\\s+rrc \\(ix\\+9\\)\n+\\s+638:\\s+fd cb 09 0e\\s+rrc \\(iy\\+9\\)\n+\\s+63c:\\s+cb 0f\\s+rrc a\n+\\s+63e:\\s+cb 08\\s+rrc b\n+\\s+640:\\s+cb 09\\s+rrc c\n+\\s+642:\\s+cb 0a\\s+rrc d\n+\\s+644:\\s+cb 0b\\s+rrc e\n+\\s+646:\\s+cb 0c\\s+rrc h\n+\\s+648:\\s+cb 0d\\s+rrc l\n+\\s+64a:\\s+0f\\s+rrca\n+\\s+64b:\\s+ed 67\\s+rrd\n+\\s+64d:\\s+c7\\s+rst 0x00\n+\\s+64e:\\s+cf\\s+rst 0x08\n+\\s+64f:\\s+d7\\s+rst 0x10\n+\\s+650:\\s+df\\s+rst 0x18\n+\\s+651:\\s+e7\\s+rst 0x20\n+\\s+652:\\s+ef\\s+rst 0x28\n+\\s+653:\\s+f7\\s+rst 0x30\n+\\s+654:\\s+ff\\s+rst 0x38\n+\\s+655:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+656:\\s+dd 9e 09\\s+sbc a,\\(ix\\+9\\)\n+\\s+659:\\s+fd 9e 09\\s+sbc a,\\(iy\\+9\\)\n+\\s+65c:\\s+de 03\\s+sbc a,0x03\n+\\s+65e:\\s+9f\\s+sbc a,a\n+\\s+65f:\\s+98\\s+sbc a,b\n+\\s+660:\\s+99\\s+sbc a,c\n+\\s+661:\\s+9a\\s+sbc a,d\n+\\s+662:\\s+9b\\s+sbc a,e\n+\\s+663:\\s+9c\\s+sbc a,h\n+\\s+664:\\s+9d\\s+sbc a,l\n+\\s+665:\\s+ed 42\\s+sbc hl,bc\n+\\s+667:\\s+ed 52\\s+sbc hl,de\n+\\s+669:\\s+ed 62\\s+sbc hl,hl\n+\\s+66b:\\s+ed 72\\s+sbc hl,sp\n+\\s+66d:\\s+37\\s+scf\n+\\s+66e:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+670:\\s+dd cb 09 c6\\s+set 0,\\(ix\\+9\\)\n+\\s+674:\\s+fd cb 09 c6\\s+set 0,\\(iy\\+9\\)\n+\\s+678:\\s+cb c7\\s+set 0,a\n+\\s+67a:\\s+cb c0\\s+set 0,b\n+\\s+67c:\\s+cb c1\\s+set 0,c\n+\\s+67e:\\s+cb c2\\s+set 0,d\n+\\s+680:\\s+cb c3\\s+set 0,e\n+\\s+682:\\s+cb c4\\s+set 0,h\n+\\s+684:\\s+cb c5\\s+set 0,l\n+\\s+686:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+688:\\s+dd cb 09 ce\\s+set 1,\\(ix\\+9\\)\n+\\s+68c:\\s+fd cb 09 ce\\s+set 1,\\(iy\\+9\\)\n+\\s+690:\\s+cb cf\\s+set 1,a\n+\\s+692:\\s+cb c8\\s+set 1,b\n+\\s+694:\\s+cb c9\\s+set 1,c\n+\\s+696:\\s+cb ca\\s+set 1,d\n+\\s+698:\\s+cb cb\\s+set 1,e\n+\\s+69a:\\s+cb cc\\s+set 1,h\n+\\s+69c:\\s+cb cd\\s+set 1,l\n+\\s+69e:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+6a0:\\s+dd cb 09 d6\\s+set 2,\\(ix\\+9\\)\n+\\s+6a4:\\s+fd cb 09 d6\\s+set 2,\\(iy\\+9\\)\n+\\s+6a8:\\s+cb d7\\s+set 2,a\n+\\s+6aa:\\s+cb d0\\s+set 2,b\n+\\s+6ac:\\s+cb d1\\s+set 2,c\n+\\s+6ae:\\s+cb d2\\s+set 2,d\n+\\s+6b0:\\s+cb d3\\s+set 2,e\n+\\s+6b2:\\s+cb d4\\s+set 2,h\n+\\s+6b4:\\s+cb d5\\s+set 2,l\n+\\s+6b6:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+6b8:\\s+dd cb 09 de\\s+set 3,\\(ix\\+9\\)\n+\\s+6bc:\\s+fd cb 09 de\\s+set 3,\\(iy\\+9\\)\n+\\s+6c0:\\s+cb df\\s+set 3,a\n+\\s+6c2:\\s+cb d8\\s+set 3,b\n+\\s+6c4:\\s+cb d9\\s+set 3,c\n+\\s+6c6:\\s+cb da\\s+set 3,d\n+\\s+6c8:\\s+cb db\\s+set 3,e\n+\\s+6ca:\\s+cb dc\\s+set 3,h\n+\\s+6cc:\\s+cb dd\\s+set 3,l\n+\\s+6ce:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+6d0:\\s+dd cb 09 e6\\s+set 4,\\(ix\\+9\\)\n+\\s+6d4:\\s+fd cb 09 e6\\s+set 4,\\(iy\\+9\\)\n+\\s+6d8:\\s+cb e7\\s+set 4,a\n+\\s+6da:\\s+cb e0\\s+set 4,b\n+\\s+6dc:\\s+cb e1\\s+set 4,c\n+\\s+6de:\\s+cb e2\\s+set 4,d\n+\\s+6e0:\\s+cb e3\\s+set 4,e\n+\\s+6e2:\\s+cb e4\\s+set 4,h\n+\\s+6e4:\\s+cb e5\\s+set 4,l\n+\\s+6e6:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+6e8:\\s+dd cb 09 ee\\s+set 5,\\(ix\\+9\\)\n+\\s+6ec:\\s+fd cb 09 ee\\s+set 5,\\(iy\\+9\\)\n+\\s+6f0:\\s+cb ef\\s+set 5,a\n+\\s+6f2:\\s+cb e8\\s+set 5,b\n+\\s+6f4:\\s+cb e9\\s+set 5,c\n+\\s+6f6:\\s+cb ea\\s+set 5,d\n+\\s+6f8:\\s+cb eb\\s+set 5,e\n+\\s+6fa:\\s+cb ec\\s+set 5,h\n+\\s+6fc:\\s+cb ed\\s+set 5,l\n+\\s+6fe:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+700:\\s+dd cb 09 f6\\s+set 6,\\(ix\\+9\\)\n+\\s+704:\\s+fd cb 09 f6\\s+set 6,\\(iy\\+9\\)\n+\\s+708:\\s+cb f7\\s+set 6,a\n+\\s+70a:\\s+cb f0\\s+set 6,b\n+\\s+70c:\\s+cb f1\\s+set 6,c\n+\\s+70e:\\s+cb f2\\s+set 6,d\n+\\s+710:\\s+cb f3\\s+set 6,e\n+\\s+712:\\s+cb f4\\s+set 6,h\n+\\s+714:\\s+cb f5\\s+set 6,l\n+\\s+716:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+718:\\s+dd cb 09 fe\\s+set 7,\\(ix\\+9\\)\n+\\s+71c:\\s+fd cb 09 fe\\s+set 7,\\(iy\\+9\\)\n+\\s+720:\\s+cb ff\\s+set 7,a\n+\\s+722:\\s+cb f8\\s+set 7,b\n+\\s+724:\\s+cb f9\\s+set 7,c\n+\\s+726:\\s+cb fa\\s+set 7,d\n+\\s+728:\\s+cb fb\\s+set 7,e\n+\\s+72a:\\s+cb fc\\s+set 7,h\n+\\s+72c:\\s+cb fd\\s+set 7,l\n+\\s+72e:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+730:\\s+dd cb 09 26\\s+sla \\(ix\\+9\\)\n+\\s+734:\\s+fd cb 09 26\\s+sla \\(iy\\+9\\)\n+\\s+738:\\s+cb 27\\s+sla a\n+\\s+73a:\\s+cb 20\\s+sla b\n+\\s+73c:\\s+cb 21\\s+sla c\n+\\s+73e:\\s+cb 22\\s+sla d\n+\\s+740:\\s+cb 23\\s+sla e\n+\\s+742:\\s+cb 24\\s+sla h\n+\\s+744:\\s+cb 25\\s+sla l\n+\\s+746:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+748:\\s+dd cb 09 2e\\s+sra \\(ix\\+9\\)\n+\\s+74c:\\s+fd cb 09 2e\\s+sra \\(iy\\+9\\)\n+\\s+750:\\s+cb 2f\\s+sra a\n+\\s+752:\\s+cb 28\\s+sra b\n+\\s+754:\\s+cb 29\\s+sra c\n+\\s+756:\\s+cb 2a\\s+sra d\n+\\s+758:\\s+cb 2b\\s+sra e\n+\\s+75a:\\s+cb 2c\\s+sra h\n+\\s+75c:\\s+cb 2d\\s+sra l\n+\\s+75e:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+760:\\s+dd cb 09 3e\\s+srl \\(ix\\+9\\)\n+\\s+764:\\s+fd cb 09 3e\\s+srl \\(iy\\+9\\)\n+\\s+768:\\s+cb 3f\\s+srl a\n+\\s+76a:\\s+cb 38\\s+srl b\n+\\s+76c:\\s+cb 39\\s+srl c\n+\\s+76e:\\s+cb 3a\\s+srl d\n+\\s+770:\\s+cb 3b\\s+srl e\n+\\s+772:\\s+cb 3c\\s+srl h\n+\\s+774:\\s+cb 3d\\s+srl l\n+\\s+776:\\s+96\\s+sub a,\\(hl\\)\n+\\s+777:\\s+dd 96 09\\s+sub a,\\(ix\\+9\\)\n+\\s+77a:\\s+fd 96 09\\s+sub a,\\(iy\\+9\\)\n+\\s+77d:\\s+d6 03\\s+sub a,0x03\n+\\s+77f:\\s+97\\s+sub a,a\n+\\s+780:\\s+90\\s+sub a,b\n+\\s+781:\\s+91\\s+sub a,c\n+\\s+782:\\s+92\\s+sub a,d\n+\\s+783:\\s+93\\s+sub a,e\n+\\s+784:\\s+94\\s+sub a,h\n+\\s+785:\\s+95\\s+sub a,l\n+\\s+786:\\s+ae\\s+xor a,\\(hl\\)\n+\\s+787:\\s+dd ae 09\\s+xor a,\\(ix\\+9\\)\n+\\s+78a:\\s+fd ae 09\\s+xor a,\\(iy\\+9\\)\n+\\s+78d:\\s+ee 03\\s+xor a,0x03\n+\\s+78f:\\s+af\\s+xor a,a\n+\\s+790:\\s+a8\\s+xor a,b\n+\\s+791:\\s+a9\\s+xor a,c\n+\\s+792:\\s+aa\\s+xor a,d\n+\\s+793:\\s+ab\\s+xor a,e\n+\\s+794:\\s+ac\\s+xor a,h\n+\\s+795:\\s+ad\\s+xor a,l"
    },
    {
      "sha": "76992c7634c27ececbdf7742b7f9d2140e846f1d",
      "filename": "gas/testsuite/gas/z80/ez80_z80_all.s",
      "status": "added",
      "additions": 994,
      "deletions": 0,
      "changes": 994,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_all.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_all.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_all.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,994 @@\n+\t.text\n+\t.org 0\n+\t;; eZ80 instructions\n+\n+; AND A,x group\n+\tand\ta,a\n+\tand\ta,b\n+\tand\ta,c\n+\tand\ta,d\n+\tand\ta,e\n+\tand\ta,h\n+\tand\ta,l\n+\tand\ta,(hl)\n+\tand\ta,0xaa\n+\tand\ta,(ix+5)\n+\tand\ta,(iy-5)\n+; CP A,x group\n+\tcp\ta,a\n+\tcp\ta,b\n+\tcp\ta,c\n+\tcp\ta,d\n+\tcp\ta,e\n+\tcp\ta,h\n+\tcp\ta,l\n+\tcp\ta,(hl)\n+\tcp\ta,0xaa\n+\tcp\ta,(ix+5)\n+\tcp\ta,(iy-5)\n+\n+; OR A,x group\n+\tor\ta,a\n+\tor\ta,b\n+\tor\ta,c\n+\tor\ta,d\n+\tor\ta,e\n+\tor\ta,h\n+\tor\ta,l\n+\tor\ta,(hl)\n+\tor\ta,0xaa\n+\tor\ta,(ix+5)\n+\tor\ta,(iy-5)\n+\n+; SUB A,x group\n+\tsub\ta,a\n+\tsub\ta,b\n+\tsub\ta,c\n+\tsub\ta,d\n+\tsub\ta,e\n+\tsub\ta,h\n+\tsub\ta,l\n+\tsub\ta,(hl)\n+\tsub\ta,0xaa\n+\tsub\ta,(ix+5)\n+\tsub\ta,(iy-5)\n+\n+; TST A,x group\n+\ttst\ta,a\n+\ttst\ta,b\n+\ttst\ta,c\n+\ttst\ta,d\n+\ttst\ta,e\n+\ttst\ta,h\n+\ttst\ta,l\n+\ttst\ta,(hl)\n+\ttst\ta,0x0f\n+\n+; XOR A,x group\n+\txor\ta,a\n+\txor\ta,b\n+\txor\ta,c\n+\txor\ta,d\n+\txor\ta,e\n+\txor\ta,h\n+\txor\ta,l\n+\txor\ta,(hl)\n+\txor\ta,0xaa\n+\txor\ta,(ix+5)\n+\txor\ta,(iy-5)\n+\n+; IN r,(BC) group (new naming)\n+\tin a,(bc)\n+\tin b,(bc)\n+\tin c,(bc)\n+\tin d,(bc)\n+\tin e,(bc)\n+\tin h,(bc)\n+\tin l,(bc)\n+\n+; OUT (BC),r group (new naming)\n+\tout (bc),a\n+\tout (bc),b\n+\tout (bc),c\n+\tout (bc),d\n+\tout (bc),e\n+\tout (bc),h\n+\tout (bc),l\n+\n+; LD rr,(ii+d) group\n+\tld\tbc,(ix-7)\n+\tld\tde,(ix-7)\n+\tld\thl,(ix-7)\n+\tld\tix,(ix-7)\n+\tld\tiy,(ix-7)\n+\n+\tld\tbc,(iy+38)\n+\tld\tde,(iy+38)\n+\tld\thl,(iy+38)\n+\tld\tix,(iy+38)\n+\tld\tiy,(iy+38)\n+\n+; LD (ii+d),rr group\n+\tld\t(ix+126),bc\n+\tld\t(ix+126),de\n+\tld\t(ix+126),hl\n+\tld\t(ix+126),ix\n+\tld\t(ix+126),iy\n+\tld\t(iy-98),bc\n+\tld\t(iy-98),de\n+\tld\t(iy-98),hl\n+\tld\t(iy-98),ix\n+\tld\t(iy-98),iy\n+\n+; LEA rr,ii+d group\n+\tlea\tbc,ix-27\n+\tlea\tde,ix-27\n+\tlea\thl,ix-27\n+\tlea\tix,ix-27\n+\tlea\tiy,ix-27\n+\tlea\tbc,iy+12\n+\tlea\tde,iy+12\n+\tlea\thl,iy+12\n+\tlea\tix,iy+12\n+\tlea\tiy,iy+12\n+\n+; PEA ii+d group\n+\tpea\tix+127\n+\tpea\tiy-128\n+\n+; IN0 group\n+\tin0 a,(0x5)\n+\tin0 b,(0x5)\n+\tin0 c,(0x5)\n+\tin0 d,(0x5)\n+\tin0 e,(0x5)\n+\tin0 h,(0x5)\n+\tin0 l,(0x5)\n+\n+; OUT0 group\n+\tout0 (0x5),a\n+\tout0 (0x5),b\n+\tout0 (0x5),c\n+\tout0 (0x5),d\n+\tout0 (0x5),e\n+\tout0 (0x5),h\n+\tout0 (0x5),l\n+\n+; MLT group\n+\tmlt bc\n+\tmlt de\n+\tmlt hl\n+\tmlt sp\n+\n+; TSTIO instruction\n+\ttstio 0f0h\n+\n+; SLP instruction\n+\tslp\n+\n+; ADLMIX flag manipulation instructions\n+\tstmix\n+\trsmix\n+\n+; Additional block I/O instructions\n+\tinim\n+\totim\n+\tini2\n+\tindm\n+\totdm\n+\tind2\n+\tinimr\n+\totimr\n+\tini2r\n+\tindmr\n+\totdmr\n+\tind2r\n+\touti2\n+\toutd2\n+\toti2r\n+\totd2r\n+\tinirx\n+\totirx\n+\tindrx\n+\totdrx\n+\n+; Index registers halves\n+\tld a,ixh\n+\tld b,ixh\n+\tld c,ixh\n+\tld d,ixh\n+\tld e,ixh\n+\tld ixh,ixh\n+\tld ixl,ixh\n+\tld a,ixl\n+\tld b,ixl\n+\tld c,ixl\n+\tld d,ixl\n+\tld e,ixl\n+\tld ixh,ixl\n+\tld ixl,ixl\n+\tld a,iyh\n+\tld b,iyh\n+\tld c,iyh\n+\tld d,iyh\n+\tld e,iyh\n+\tld iyh,iyh\n+\tld iyl,iyh\n+\tld a,iyl\n+\tld b,iyl\n+\tld c,iyl\n+\tld d,iyl\n+\tld e,iyl\n+\tld iyh,iyl\n+\tld iyl,iyl\n+\tld ixh,a\n+\tld ixh,b\n+\tld ixh,c\n+\tld ixh,d\n+\tld ixh,e\n+\tld ixh,ixh\n+\tld ixh,ixl\n+\tld ixh,25\n+\tld ixl,a\n+\tld ixl,b\n+\tld ixl,c\n+\tld ixl,d\n+\tld ixl,e\n+\tld ixl,ixh\n+\tld ixl,ixl\n+\tld ixl,25\n+\tld iyh,a\n+\tld iyh,b\n+\tld iyh,c\n+\tld iyh,d\n+\tld iyh,e\n+\tld iyh,iyh\n+\tld iyh,iyl\n+\tld iyh,25\n+\tld iyl,a\n+\tld iyl,b\n+\tld iyl,c\n+\tld iyl,d\n+\tld iyl,e\n+\tld iyl,iyh\n+\tld iyl,iyl\n+\tld iyl,25\n+\tadd a,ixh\n+\tadd a,ixl\n+\tadd a,iyh\n+\tadd a,iyl\n+\tadc a,ixh\n+\tadc a,ixl\n+\tadc a,iyh\n+\tadc a,iyl\n+\tcp a,ixh\n+\tcp a,ixl\n+\tcp a,iyh\n+\tcp a,iyl\n+\tdec ixh\n+\tdec ixl\n+\tdec iyh\n+\tdec iyl\n+\tinc ixh\n+\tinc ixl\n+\tinc iyh\n+\tinc iyl\n+\tsbc a,ixh\n+\tsbc a,ixl\n+\tsbc a,iyh\n+\tsbc a,iyl\n+\tsub a,ixh\n+\tsub a,ixl\n+\tsub a,iyh\n+\tsub a,iyl\n+\tand a,ixh\n+\tand a,ixl\n+\tand a,iyh\n+\tand a,iyl\n+\tor a,ixh\n+\tor a,ixl\n+\tor a,iyh\n+\tor a,iyl\n+\txor a,ixh\n+\txor a,ixl\n+\txor a,iyh\n+\txor a,iyl\n+\n+; Standard Z80 instructions\n+\n+\tadc a,(hl)\n+\tadc a,(ix+9)\n+\tadc a,(iy+9)\n+\tadc a,3\n+\tadc a,a\n+\tadc a,b\n+\tadc a,c\n+\tadc a,d\n+\tadc a,e\n+\tadc a,h\n+\tadc a,l\n+\tadc hl,bc\n+\tadc hl,de\n+\tadc hl,hl\n+\tadc hl,sp\n+\tadd a,(hl)\n+\tadd a,(ix+9)\n+\tadd a,(iy+9)\n+\tadd a,3\n+\tadd a,a\n+\tadd a,b\n+\tadd a,c\n+\tadd a,d\n+\tadd a,e\n+\tadd a,h\n+\tadd a,l\n+\tadd hl,bc\n+\tadd hl,de\n+\tadd hl,hl\n+\tadd hl,sp\n+\tadd ix,bc\n+\tadd ix,de\n+\tadd ix,ix\n+\tadd ix,sp\n+\tadd iy,bc\n+\tadd iy,de\n+\tadd iy,iy\n+\tadd iy,sp\n+\tand (hl)\n+\tand (ix+9)\n+\tand (iy+9)\n+\tand 3\n+\tand a\n+\tand b\n+\tand c\n+\tand d\n+\tand e\n+\tand h\n+\tand l\n+\tbit 0,(hl)\n+\tbit 0,(ix+9)\n+\tbit 0,(iy+9)\n+\tbit 0,a\n+\tbit 0,b\n+\tbit 0,c\n+\tbit 0,d\n+\tbit 0,e\n+\tbit 0,h\n+\tbit 0,l\n+\tbit 1,(hl)\n+\tbit 1,(ix+9)\n+\tbit 1,(iy+9)\n+\tbit 1,a\n+\tbit 1,b\n+\tbit 1,c\n+\tbit 1,d\n+\tbit 1,e\n+\tbit 1,h\n+\tbit 1,l\n+\tbit 2,(hl)\n+\tbit 2,(ix+9)\n+\tbit 2,(iy+9)\n+\tbit 2,a\n+\tbit 2,b\n+\tbit 2,c\n+\tbit 2,d\n+\tbit 2,e\n+\tbit 2,h\n+\tbit 2,l\n+\tbit 3,(hl)\n+\tbit 3,(ix+9)\n+\tbit 3,(iy+9)\n+\tbit 3,a\n+\tbit 3,b\n+\tbit 3,c\n+\tbit 3,d\n+\tbit 3,e\n+\tbit 3,h\n+\tbit 3,l\n+\tbit 4,(hl)\n+\tbit 4,(ix+9)\n+\tbit 4,(iy+9)\n+\tbit 4,a\n+\tbit 4,b\n+\tbit 4,c\n+\tbit 4,d\n+\tbit 4,e\n+\tbit 4,h\n+\tbit 4,l\n+\tbit 5,(hl)\n+\tbit 5,(ix+9)\n+\tbit 5,(iy+9)\n+\tbit 5,a\n+\tbit 5,b\n+\tbit 5,c\n+\tbit 5,d\n+\tbit 5,e\n+\tbit 5,h\n+\tbit 5,l\n+\tbit 6,(hl)\n+\tbit 6,(ix+9)\n+\tbit 6,(iy+9)\n+\tbit 6,a\n+\tbit 6,b\n+\tbit 6,c\n+\tbit 6,d\n+\tbit 6,e\n+\tbit 6,h\n+\tbit 6,l\n+\tbit 7,(hl)\n+\tbit 7,(ix+9)\n+\tbit 7,(iy+9)\n+\tbit 7,a\n+\tbit 7,b\n+\tbit 7,c\n+\tbit 7,d\n+\tbit 7,e\n+\tbit 7,h\n+\tbit 7,l\n+\tcall 0x1234\n+\tcall c,0x1234\n+\tcall m,0x1234\n+\tcall nc,0x1234\n+\tcall nz,0x1234\n+\tcall p,0x1234\n+\tcall pe,0x1234\n+\tcall po,0x1234\n+\tcall z,0x1234\n+\tccf\n+\tcp (hl)\n+\tcp (ix+9)\n+\tcp (iy+9)\n+\tcp 03\n+\tcp a\n+\tcp b\n+\tcp c\n+\tcp d\n+\tcp e\n+\tcp h\n+\tcp l\n+\tcpd\n+\tcpdr\n+\tcpi\n+\tcpir\n+\tcpl\n+\tdaa\n+\tdec (hl)\n+\tdec (ix+9)\n+\tdec (iy+9)\n+\tdec a\n+\tdec b\n+\tdec bc\n+\tdec c\n+\tdec d\n+\tdec de\n+\tdec e\n+\tdec h\n+\tdec hl\n+\tdec ix\n+\tdec iy\n+\tdec l\n+\tdec sp\n+\tdi\n+\tdjnz .+7\n+\tei\n+\tex (sp),hl\n+\tex (sp),ix\n+\tex (sp),iy\n+\tex af,af'\n+\tex de,hl\n+\texx\n+\thalt\n+\tim 0\n+\tim 1\n+\tim 2\n+\tin a,(c)\n+\tin a,(3)\n+\tin b,(c)\n+\tin c,(c)\n+\tin d,(c)\n+\tin e,(c)\n+\tin h,(c)\n+\tin l,(c)\n+\tinc (hl)\n+\tinc (ix+9)\n+\tinc (iy+9)\n+\tinc a\n+\tinc b\n+\tinc bc\n+\tinc c\n+\tinc d\n+\tinc de\n+\tinc e\n+\tinc h\n+\tinc hl\n+\tinc ix\n+\tinc iy\n+\tinc l\n+\tinc sp\n+\tind\n+\tindr\n+\tini\n+\tinir\n+\tjp (hl)\n+\tjp (ix)\n+\tjp (iy)\n+\tjp 0x1234\n+\tjp c,0x1234\n+\tjp m,0x1234\n+\tjp nc,0x1234\n+\tjp nz,0x1234\n+\tjp p,0x1234\n+\tjp pe,0x1234\n+\tjp po,0x1234\n+\tjp z,0x1234\n+\tjr .+7\n+\tjr c,.+7\n+\tjr nc,.+7\n+\tjr nz,.+7\n+\tjr z,.+7\n+\tld (0x1234),a\n+\tld (0x1234),bc\n+\tld (0x1234),de\n+\tld (0x1234),hl\n+\tld (0x1234),ix\n+\tld (0x1234),iy\n+\tld (0x1234),sp\n+\tld (bc),a\n+\tld (de),a\n+\tld (hl),3\n+\tld (hl),a\n+\tld (hl),b\n+\tld (hl),c\n+\tld (hl),d\n+\tld (hl),e\n+\tld (hl),h\n+\tld (hl),l\n+\tld (ix+9),3\n+\tld (ix+9),a\n+\tld (ix+9),b\n+\tld (ix+9),c\n+\tld (ix+9),d\n+\tld (ix+9),e\n+\tld (ix+9),h\n+\tld (ix+9),l\n+\tld (iy+9),3\n+\tld (iy+9),a\n+\tld (iy+9),b\n+\tld (iy+9),c\n+\tld (iy+9),d\n+\tld (iy+9),e\n+\tld (iy+9),h\n+\tld (iy+9),l\n+\tld a,(0x1234)\n+\tld a,(bc)\n+\tld a,(de)\n+\tld a,(hl)\n+\tld a,(ix+9)\n+\tld a,(iy+9)\n+\tld a,3\n+\tld a,a\n+\tld a,b\n+\tld a,c\n+\tld a,d\n+\tld a,e\n+\tld a,h\n+\tld a,i\n+\tld a,l\n+\tld a,r\n+\tld b,(hl)\n+\tld b,(ix+9)\n+\tld b,(iy+9)\n+\tld b,3\n+\tld b,a\n+\tnop\t;ld b,b\n+\tld b,c\n+\tld b,d\n+\tld b,e\n+\tld b,h\n+\tld b,l\n+\tld bc,(0x1234)\n+\tld bc,0x1234\n+\tld c,(hl)\n+\tld c,(ix+9)\n+\tld c,(iy+9)\n+\tld c,3\n+\tld c,a\n+\tld c,b\n+\tnop\t;ld c,c\n+\tld c,d\n+\tld c,e\n+\tld c,h\n+\tld c,l\n+\tld d,(hl)\n+\tld d,(ix+9)\n+\tld d,(iy+9)\n+\tld d,3\n+\tld d,a\n+\tld d,b\n+\tld d,c\n+\tnop ;ld d,d\n+\tld d,e\n+\tld d,h\n+\tld d,l\n+\tld de,(0x1234)\n+\tld de,0x1234\n+\tld e,(hl)\n+\tld e,(ix+9)\n+\tld e,(iy+9)\n+\tld e,3\n+\tld e,a\n+\tld e,b\n+\tld e,c\n+\tld e,d\n+\tnop ;ld e,e\n+\tld e,h\n+\tld e,l\n+\tld h,(hl)\n+\tld h,(ix+9)\n+\tld h,(iy+9)\n+\tld h,3\n+\tld h,a\n+\tld h,b\n+\tld h,c\n+\tld h,d\n+\tld h,e\n+\tld h,h\n+\tld h,l\n+\tld hl,(0x1234)\n+\tld hl,0x1234\n+\tld i,a\n+\tld ix,(0x1234)\n+\tld ix,0x1234\n+\tld iy,(0x1234)\n+\tld iy,0x1234\n+\tld l,(hl)\n+\tld l,(ix+9)\n+\tld l,(iy+9)\n+\tld l,3\n+\tld l,a\n+\tld l,b\n+\tld l,c\n+\tld l,d\n+\tld l,e\n+\tld l,h\n+\tld l,l\n+\tld r,a\n+\tld sp,(0x1234)\n+\tld sp,0x1234\n+\tld sp,hl\n+\tld sp,ix\n+\tld sp,iy\n+\tldd\n+\tlddr\n+\tldi\n+\tldir\n+\tneg\n+\tnop\n+\tor (hl)\n+\tor (ix+9)\n+\tor (iy+9)\n+\tor 3\n+\tor a\n+\tor b\n+\tor c\n+\tor d\n+\tor e\n+\tor h\n+\tor l\n+\totdr\n+\totir\n+\tout (c),a\n+\tout (c),b\n+\tout (c),c\n+\tout (c),d\n+\tout (c),e\n+\tout (c),h\n+\tout (c),l\n+\tout (3),a\n+\toutd\n+\touti\n+\tpop af\n+\tpop bc\n+\tpop de\n+\tpop hl\n+\tpop ix\n+\tpop iy\n+\tpush af\n+\tpush bc\n+\tpush de\n+\tpush hl\n+\tpush ix\n+\tpush iy\n+\tres 0,(hl)\n+\tres 0,(ix+9)\n+\tres 0,(iy+9)\n+\tres 0,a\n+\tres 0,b\n+\tres 0,c\n+\tres 0,d\n+\tres 0,e\n+\tres 0,h\n+\tres 0,l\n+\tres 1,(hl)\n+\tres 1,(ix+9)\n+\tres 1,(iy+9)\n+\tres 1,a\n+\tres 1,b\n+\tres 1,c\n+\tres 1,d\n+\tres 1,e\n+\tres 1,h\n+\tres 1,l\n+\tres 2,(hl)\n+\tres 2,(ix+9)\n+\tres 2,(iy+9)\n+\tres 2,a\n+\tres 2,b\n+\tres 2,c\n+\tres 2,d\n+\tres 2,e\n+\tres 2,h\n+\tres 2,l\n+\tres 3,(hl)\n+\tres 3,(ix+9)\n+\tres 3,(iy+9)\n+\tres 3,a\n+\tres 3,b\n+\tres 3,c\n+\tres 3,d\n+\tres 3,e\n+\tres 3,h\n+\tres 3,l\n+\tres 4,(hl)\n+\tres 4,(ix+9)\n+\tres 4,(iy+9)\n+\tres 4,a\n+\tres 4,b\n+\tres 4,c\n+\tres 4,d\n+\tres 4,e\n+\tres 4,h\n+\tres 4,l\n+\tres 5,(hl)\n+\tres 5,(ix+9)\n+\tres 5,(iy+9)\n+\tres 5,a\n+\tres 5,b\n+\tres 5,c\n+\tres 5,d\n+\tres 5,e\n+\tres 5,h\n+\tres 5,l\n+\tres 6,(hl)\n+\tres 6,(ix+9)\n+\tres 6,(iy+9)\n+\tres 6,a\n+\tres 6,b\n+\tres 6,c\n+\tres 6,d\n+\tres 6,e\n+\tres 6,h\n+\tres 6,l\n+\tres 7,(hl)\n+\tres 7,(ix+9)\n+\tres 7,(iy+9)\n+\tres 7,a\n+\tres 7,b\n+\tres 7,c\n+\tres 7,d\n+\tres 7,e\n+\tres 7,h\n+\tres 7,l\n+\tret\n+\tret c\n+\tret m\n+\tret nc\n+\tret nz\n+\tret p\n+\tret pe\n+\tret po\n+\tret z\n+\treti\n+\tretn\n+\trl (hl)\n+\trl (ix+9)\n+\trl (iy+9)\n+\trl a\n+\trl b\n+\trl c\n+\trl d\n+\trl e\n+\trl h\n+\trl l\n+\trla\n+\trlc (hl)\n+\trlc (ix+9)\n+\trlc (iy+9)\n+\trlc a\n+\trlc b\n+\trlc c\n+\trlc d\n+\trlc e\n+\trlc h\n+\trlc l\n+\trlca\n+\trld\n+\trr (hl)\n+\trr (ix+9)\n+\trr (iy+9)\n+\trr a\n+\trr b\n+\trr c\n+\trr d\n+\trr e\n+\trr h\n+\trr l\n+\trra\n+\trrc (hl)\n+\trrc (ix+9)\n+\trrc (iy+9)\n+\trrc a\n+\trrc b\n+\trrc c\n+\trrc d\n+\trrc e\n+\trrc h\n+\trrc l\n+\trrca\n+\trrd\n+\trst 0x00\n+\trst 0x08\n+\trst 0x10\n+\trst 0x18\n+\trst 0x20\n+\trst 0x28\n+\trst 0x30\n+\trst 0x38\n+\tsbc a,(hl)\n+\tsbc a,(ix+9)\n+\tsbc a,(iy+9)\n+\tsbc a,3\n+\tsbc a,a\n+\tsbc a,b\n+\tsbc a,c\n+\tsbc a,d\n+\tsbc a,e\n+\tsbc a,h\n+\tsbc a,l\n+\tsbc hl,bc\n+\tsbc hl,de\n+\tsbc hl,hl\n+\tsbc hl,sp\n+\tscf\n+\tset 0,(hl)\n+\tset 0,(ix+9)\n+\tset 0,(iy+9)\n+\tset 0,a\n+\tset 0,b\n+\tset 0,c\n+\tset 0,d\n+\tset 0,e\n+\tset 0,h\n+\tset 0,l\n+\tset 1,(hl)\n+\tset 1,(ix+9)\n+\tset 1,(iy+9)\n+\tset 1,a\n+\tset 1,b\n+\tset 1,c\n+\tset 1,d\n+\tset 1,e\n+\tset 1,h\n+\tset 1,l\n+\tset 2,(hl)\n+\tset 2,(ix+9)\n+\tset 2,(iy+9)\n+\tset 2,a\n+\tset 2,b\n+\tset 2,c\n+\tset 2,d\n+\tset 2,e\n+\tset 2,h\n+\tset 2,l\n+\tset 3,(hl)\n+\tset 3,(ix+9)\n+\tset 3,(iy+9)\n+\tset 3,a\n+\tset 3,b\n+\tset 3,c\n+\tset 3,d\n+\tset 3,e\n+\tset 3,h\n+\tset 3,l\n+\tset 4,(hl)\n+\tset 4,(ix+9)\n+\tset 4,(iy+9)\n+\tset 4,a\n+\tset 4,b\n+\tset 4,c\n+\tset 4,d\n+\tset 4,e\n+\tset 4,h\n+\tset 4,l\n+\tset 5,(hl)\n+\tset 5,(ix+9)\n+\tset 5,(iy+9)\n+\tset 5,a\n+\tset 5,b\n+\tset 5,c\n+\tset 5,d\n+\tset 5,e\n+\tset 5,h\n+\tset 5,l\n+\tset 6,(hl)\n+\tset 6,(ix+9)\n+\tset 6,(iy+9)\n+\tset 6,a\n+\tset 6,b\n+\tset 6,c\n+\tset 6,d\n+\tset 6,e\n+\tset 6,h\n+\tset 6,l\n+\tset 7,(hl)\n+\tset 7,(ix+9)\n+\tset 7,(iy+9)\n+\tset 7,a\n+\tset 7,b\n+\tset 7,c\n+\tset 7,d\n+\tset 7,e\n+\tset 7,h\n+\tset 7,l\n+\tsla (hl)\n+\tsla (ix+9)\n+\tsla (iy+9)\n+\tsla a\n+\tsla b\n+\tsla c\n+\tsla d\n+\tsla e\n+\tsla h\n+\tsla l\n+\tsra (hl)\n+\tsra (ix+9)\n+\tsra (iy+9)\n+\tsra a\n+\tsra b\n+\tsra c\n+\tsra d\n+\tsra e\n+\tsra h\n+\tsra l\n+\tsrl (hl)\n+\tsrl (ix+9)\n+\tsrl (iy+9)\n+\tsrl a\n+\tsrl b\n+\tsrl c\n+\tsrl d\n+\tsrl e\n+\tsrl h\n+\tsrl l\n+\tsub (hl)\n+\tsub (ix+9)\n+\tsub (iy+9)\n+\tsub 3\n+\tsub a\n+\tsub b\n+\tsub c\n+\tsub d\n+\tsub e\n+\tsub h\n+\tsub l\n+\txor (hl)\n+\txor (ix+9)\n+\txor (iy+9)\n+\txor 3\n+\txor a\n+\txor b\n+\txor c\n+\txor d\n+\txor e\n+\txor h\n+\txor l"
    },
    {
      "sha": "af35f0bee0bd40113b109413d082e3a891adea4d",
      "filename": "gas/testsuite/gas/z80/ez80_z80_suf.d",
      "status": "added",
      "additions": 314,
      "deletions": 0,
      "changes": 314,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_suf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/ez80_z80_suf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/ez80_z80_suf.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,314 @@\n+#as: -ez80\n+#objdump: -d\n+#name: eZ80 instructions with sufficies in Z80 cpu mode\n+#source: ez80_isuf.s\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+[0-9a-f]+:[\t]40 cd 56 34[       \t]+call\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 dc 56 34[       \t]+call\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fc 56 34[       \t]+call\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d4 56 34[       \t]+call\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c4 56 34[       \t]+call\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f4 56 34[       \t]+call\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ec 56 34[       \t]+call\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e4 56 34[       \t]+call\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 cc 56 34[       \t]+call\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 c3 56 34[       \t]+jp\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 da 56 34[       \t]+jp\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fa 56 34[       \t]+jp\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d2 56 34[       \t]+jp\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c2 56 34[       \t]+jp\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f2 56 34[       \t]+jp\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ea 56 34[       \t]+jp\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e2 56 34[       \t]+jp\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 ca 56 34[       \t]+jp\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 32 56 34[       \t]+ld\\.sis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]40 ed 43 56 34[    \t]+ld\\.sis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]40 ed 53 56 34[    \t]+ld\\.sis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]40 22 56 34[       \t]+ld\\.sis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]40 dd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]40 fd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]40 ed 73 56 34[    \t]+ld\\.sis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]40 3a 56 34[       \t]+ld\\.sis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 ed 4b 56 34[    \t]+ld\\.sis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 01 56 34[       \t]+ld\\.sis bc,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 5b 56 34[    \t]+ld\\.sis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 11 56 34[       \t]+ld\\.sis de,0x3456\n+\\s+[0-9a-f]+:[\t]40 2a 56 34[       \t]+ld\\.sis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 21 56 34[       \t]+ld\\.sis hl,0x3456\n+\\s+[0-9a-f]+:[\t]40 dd 2a 56 34[    \t]+ld\\.sis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 dd 21 56 34[    \t]+ld\\.sis ix,0x3456\n+\\s+[0-9a-f]+:[\t]40 fd 2a 56 34[    \t]+ld\\.sis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 fd 21 56 34[    \t]+ld\\.sis iy,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 7b 56 34[    \t]+ld\\.sis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 31 56 34[       \t]+ld\\.sis sp,0x3456\n+\\s+[0-9a-f]+:[\t]49 cd 56 34[       \t]+call\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 dc 56 34[       \t]+call\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fc 56 34[       \t]+call\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d4 56 34[       \t]+call\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c4 56 34[       \t]+call\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f4 56 34[       \t]+call\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ec 56 34[       \t]+call\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e4 56 34[       \t]+call\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 cc 56 34[       \t]+call\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 c3 56 34[       \t]+jp\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 da 56 34[       \t]+jp\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fa 56 34[       \t]+jp\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d2 56 34[       \t]+jp\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c2 56 34[       \t]+jp\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f2 56 34[       \t]+jp\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ea 56 34[       \t]+jp\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e2 56 34[       \t]+jp\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 ca 56 34[       \t]+jp\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 32 56 34[       \t]+ld\\.lis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]49 ed 43 56 34[    \t]+ld\\.lis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]49 ed 53 56 34[    \t]+ld\\.lis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]49 22 56 34[       \t]+ld\\.lis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]49 dd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]49 fd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]49 ed 73 56 34[    \t]+ld\\.lis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]49 3a 56 34[       \t]+ld\\.lis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 ed 4b 56 34[    \t]+ld\\.lis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 01 56 34[       \t]+ld\\.lis bc,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 5b 56 34[    \t]+ld\\.lis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 11 56 34[       \t]+ld\\.lis de,0x3456\n+\\s+[0-9a-f]+:[\t]49 2a 56 34[       \t]+ld\\.lis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 21 56 34[       \t]+ld\\.lis hl,0x3456\n+\\s+[0-9a-f]+:[\t]49 dd 2a 56 34[    \t]+ld\\.lis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 dd 21 56 34[    \t]+ld\\.lis ix,0x3456\n+\\s+[0-9a-f]+:[\t]49 fd 2a 56 34[    \t]+ld\\.lis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 fd 21 56 34[    \t]+ld\\.lis iy,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 7b 56 34[    \t]+ld\\.lis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 31 56 34[       \t]+ld\\.lis sp,0x3456\n+\\s+[0-9a-f]+:[\t]40 cd 56 34[       \t]+call\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 dc 56 34[       \t]+call\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fc 56 34[       \t]+call\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d4 56 34[       \t]+call\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c4 56 34[       \t]+call\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f4 56 34[       \t]+call\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ec 56 34[       \t]+call\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e4 56 34[       \t]+call\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 cc 56 34[       \t]+call\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 c3 56 34[       \t]+jp\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 da 56 34[       \t]+jp\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fa 56 34[       \t]+jp\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d2 56 34[       \t]+jp\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c2 56 34[       \t]+jp\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f2 56 34[       \t]+jp\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ea 56 34[       \t]+jp\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e2 56 34[       \t]+jp\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 ca 56 34[       \t]+jp\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 32 56 34[       \t]+ld\\.sis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]40 ed 43 56 34[    \t]+ld\\.sis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]40 ed 53 56 34[    \t]+ld\\.sis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]40 22 56 34[       \t]+ld\\.sis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]40 dd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]40 fd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]40 ed 73 56 34[    \t]+ld\\.sis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]40 3a 56 34[       \t]+ld\\.sis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 ed 4b 56 34[    \t]+ld\\.sis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 01 56 34[       \t]+ld\\.sis bc,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 5b 56 34[    \t]+ld\\.sis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 11 56 34[       \t]+ld\\.sis de,0x3456\n+\\s+[0-9a-f]+:[\t]40 2a 56 34[       \t]+ld\\.sis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 21 56 34[       \t]+ld\\.sis hl,0x3456\n+\\s+[0-9a-f]+:[\t]40 dd 2a 56 34[    \t]+ld\\.sis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 dd 21 56 34[    \t]+ld\\.sis ix,0x3456\n+\\s+[0-9a-f]+:[\t]40 fd 2a 56 34[    \t]+ld\\.sis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 fd 21 56 34[    \t]+ld\\.sis iy,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 7b 56 34[    \t]+ld\\.sis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 31 56 34[       \t]+ld\\.sis sp,0x3456\n+\\s+[0-9a-f]+:[\t]52 cd 56 34 12[    \t]+call\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 dc 56 34 12[    \t]+call\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fc 56 34 12[    \t]+call\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d4 56 34 12[    \t]+call\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c4 56 34 12[    \t]+call\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f4 56 34 12[    \t]+call\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ec 56 34 12[    \t]+call\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e4 56 34 12[    \t]+call\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 cc 56 34 12[    \t]+call\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 c3 56 34 12[    \t]+jp\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 da 56 34 12[    \t]+jp\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fa 56 34 12[    \t]+jp\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d2 56 34 12[    \t]+jp\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c2 56 34 12[    \t]+jp\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f2 56 34 12[    \t]+jp\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ea 56 34 12[    \t]+jp\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e2 56 34 12[    \t]+jp\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 ca 56 34 12[    \t]+jp\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 32 56 34 12[    \t]+ld\\.sil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]52 ed 43 56 34 12[ \t]+ld\\.sil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]52 ed 53 56 34 12[ \t]+ld\\.sil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]52 22 56 34 12[    \t]+ld\\.sil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]52 dd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]52 fd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]52 ed 73 56 34 12[ \t]+ld\\.sil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]52 3a 56 34 12[    \t]+ld\\.sil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 ed 4b 56 34 12[ \t]+ld\\.sil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 01 56 34 12[    \t]+ld\\.sil bc,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 5b 56 34 12[ \t]+ld\\.sil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 11 56 34 12[    \t]+ld\\.sil de,0x123456\n+\\s+[0-9a-f]+:[\t]52 2a 56 34 12[    \t]+ld\\.sil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 21 56 34 12[    \t]+ld\\.sil hl,0x123456\n+\\s+[0-9a-f]+:[\t]52 dd 2a 56 34 12[ \t]+ld\\.sil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 dd 21 56 34 12[ \t]+ld\\.sil ix,0x123456\n+\\s+[0-9a-f]+:[\t]52 fd 2a 56 34 12[ \t]+ld\\.sil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 fd 21 56 34 12[ \t]+ld\\.sil iy,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 7b 56 34 12[ \t]+ld\\.sil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 31 56 34 12[    \t]+ld\\.sil sp,0x123456\n+\\s+[0-9a-f]+:[\t]40 cd 56 34[       \t]+call\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 dc 56 34[       \t]+call\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fc 56 34[       \t]+call\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d4 56 34[       \t]+call\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c4 56 34[       \t]+call\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f4 56 34[       \t]+call\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ec 56 34[       \t]+call\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e4 56 34[       \t]+call\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 cc 56 34[       \t]+call\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 c3 56 34[       \t]+jp\\.sis 0x3456\n+\\s+[0-9a-f]+:[\t]40 da 56 34[       \t]+jp\\.sis c,0x3456\n+\\s+[0-9a-f]+:[\t]40 fa 56 34[       \t]+jp\\.sis m,0x3456\n+\\s+[0-9a-f]+:[\t]40 d2 56 34[       \t]+jp\\.sis nc,0x3456\n+\\s+[0-9a-f]+:[\t]40 c2 56 34[       \t]+jp\\.sis nz,0x3456\n+\\s+[0-9a-f]+:[\t]40 f2 56 34[       \t]+jp\\.sis p,0x3456\n+\\s+[0-9a-f]+:[\t]40 ea 56 34[       \t]+jp\\.sis pe,0x3456\n+\\s+[0-9a-f]+:[\t]40 e2 56 34[       \t]+jp\\.sis po,0x3456\n+\\s+[0-9a-f]+:[\t]40 ca 56 34[       \t]+jp\\.sis z,0x3456\n+\\s+[0-9a-f]+:[\t]40 32 56 34[       \t]+ld\\.sis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]40 ed 43 56 34[    \t]+ld\\.sis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]40 ed 53 56 34[    \t]+ld\\.sis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]40 22 56 34[       \t]+ld\\.sis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]40 dd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]40 fd 22 56 34[    \t]+ld\\.sis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]40 ed 73 56 34[    \t]+ld\\.sis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]40 3a 56 34[       \t]+ld\\.sis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 ed 4b 56 34[    \t]+ld\\.sis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 01 56 34[       \t]+ld\\.sis bc,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 5b 56 34[    \t]+ld\\.sis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 11 56 34[       \t]+ld\\.sis de,0x3456\n+\\s+[0-9a-f]+:[\t]40 2a 56 34[       \t]+ld\\.sis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 21 56 34[       \t]+ld\\.sis hl,0x3456\n+\\s+[0-9a-f]+:[\t]40 dd 2a 56 34[    \t]+ld\\.sis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 dd 21 56 34[    \t]+ld\\.sis ix,0x3456\n+\\s+[0-9a-f]+:[\t]40 fd 2a 56 34[    \t]+ld\\.sis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 fd 21 56 34[    \t]+ld\\.sis iy,0x3456\n+\\s+[0-9a-f]+:[\t]40 ed 7b 56 34[    \t]+ld\\.sis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]40 31 56 34[       \t]+ld\\.sis sp,0x3456\n+\\s+[0-9a-f]+:[\t]49 cd 56 34[       \t]+call\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 dc 56 34[       \t]+call\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fc 56 34[       \t]+call\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d4 56 34[       \t]+call\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c4 56 34[       \t]+call\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f4 56 34[       \t]+call\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ec 56 34[       \t]+call\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e4 56 34[       \t]+call\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 cc 56 34[       \t]+call\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 c3 56 34[       \t]+jp\\.lis 0x3456\n+\\s+[0-9a-f]+:[\t]49 da 56 34[       \t]+jp\\.lis c,0x3456\n+\\s+[0-9a-f]+:[\t]49 fa 56 34[       \t]+jp\\.lis m,0x3456\n+\\s+[0-9a-f]+:[\t]49 d2 56 34[       \t]+jp\\.lis nc,0x3456\n+\\s+[0-9a-f]+:[\t]49 c2 56 34[       \t]+jp\\.lis nz,0x3456\n+\\s+[0-9a-f]+:[\t]49 f2 56 34[       \t]+jp\\.lis p,0x3456\n+\\s+[0-9a-f]+:[\t]49 ea 56 34[       \t]+jp\\.lis pe,0x3456\n+\\s+[0-9a-f]+:[\t]49 e2 56 34[       \t]+jp\\.lis po,0x3456\n+\\s+[0-9a-f]+:[\t]49 ca 56 34[       \t]+jp\\.lis z,0x3456\n+\\s+[0-9a-f]+:[\t]49 32 56 34[       \t]+ld\\.lis \\(0x3456\\),a\n+\\s+[0-9a-f]+:[\t]49 ed 43 56 34[    \t]+ld\\.lis \\(0x3456\\),bc\n+\\s+[0-9a-f]+:[\t]49 ed 53 56 34[    \t]+ld\\.lis \\(0x3456\\),de\n+\\s+[0-9a-f]+:[\t]49 22 56 34[       \t]+ld\\.lis \\(0x3456\\),hl\n+\\s+[0-9a-f]+:[\t]49 dd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),ix\n+\\s+[0-9a-f]+:[\t]49 fd 22 56 34[    \t]+ld\\.lis \\(0x3456\\),iy\n+\\s+[0-9a-f]+:[\t]49 ed 73 56 34[    \t]+ld\\.lis \\(0x3456\\),sp\n+\\s+[0-9a-f]+:[\t]49 3a 56 34[       \t]+ld\\.lis a,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 ed 4b 56 34[    \t]+ld\\.lis bc,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 01 56 34[       \t]+ld\\.lis bc,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 5b 56 34[    \t]+ld\\.lis de,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 11 56 34[       \t]+ld\\.lis de,0x3456\n+\\s+[0-9a-f]+:[\t]49 2a 56 34[       \t]+ld\\.lis hl,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 21 56 34[       \t]+ld\\.lis hl,0x3456\n+\\s+[0-9a-f]+:[\t]49 dd 2a 56 34[    \t]+ld\\.lis ix,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 dd 21 56 34[    \t]+ld\\.lis ix,0x3456\n+\\s+[0-9a-f]+:[\t]49 fd 2a 56 34[    \t]+ld\\.lis iy,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 fd 21 56 34[    \t]+ld\\.lis iy,0x3456\n+\\s+[0-9a-f]+:[\t]49 ed 7b 56 34[    \t]+ld\\.lis sp,\\(0x3456\\)\n+\\s+[0-9a-f]+:[\t]49 31 56 34[       \t]+ld\\.lis sp,0x3456\n+\\s+[0-9a-f]+:[\t]52 cd 56 34 12[    \t]+call\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 dc 56 34 12[    \t]+call\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fc 56 34 12[    \t]+call\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d4 56 34 12[    \t]+call\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c4 56 34 12[    \t]+call\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f4 56 34 12[    \t]+call\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ec 56 34 12[    \t]+call\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e4 56 34 12[    \t]+call\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 cc 56 34 12[    \t]+call\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 c3 56 34 12[    \t]+jp\\.sil 0x123456\n+\\s+[0-9a-f]+:[\t]52 da 56 34 12[    \t]+jp\\.sil c,0x123456\n+\\s+[0-9a-f]+:[\t]52 fa 56 34 12[    \t]+jp\\.sil m,0x123456\n+\\s+[0-9a-f]+:[\t]52 d2 56 34 12[    \t]+jp\\.sil nc,0x123456\n+\\s+[0-9a-f]+:[\t]52 c2 56 34 12[    \t]+jp\\.sil nz,0x123456\n+\\s+[0-9a-f]+:[\t]52 f2 56 34 12[    \t]+jp\\.sil p,0x123456\n+\\s+[0-9a-f]+:[\t]52 ea 56 34 12[    \t]+jp\\.sil pe,0x123456\n+\\s+[0-9a-f]+:[\t]52 e2 56 34 12[    \t]+jp\\.sil po,0x123456\n+\\s+[0-9a-f]+:[\t]52 ca 56 34 12[    \t]+jp\\.sil z,0x123456\n+\\s+[0-9a-f]+:[\t]52 32 56 34 12[    \t]+ld\\.sil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]52 ed 43 56 34 12[ \t]+ld\\.sil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]52 ed 53 56 34 12[ \t]+ld\\.sil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]52 22 56 34 12[    \t]+ld\\.sil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]52 dd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]52 fd 22 56 34 12[ \t]+ld\\.sil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]52 ed 73 56 34 12[ \t]+ld\\.sil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]52 3a 56 34 12[    \t]+ld\\.sil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 ed 4b 56 34 12[ \t]+ld\\.sil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 01 56 34 12[    \t]+ld\\.sil bc,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 5b 56 34 12[ \t]+ld\\.sil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 11 56 34 12[    \t]+ld\\.sil de,0x123456\n+\\s+[0-9a-f]+:[\t]52 2a 56 34 12[    \t]+ld\\.sil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 21 56 34 12[    \t]+ld\\.sil hl,0x123456\n+\\s+[0-9a-f]+:[\t]52 dd 2a 56 34 12[ \t]+ld\\.sil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 dd 21 56 34 12[ \t]+ld\\.sil ix,0x123456\n+\\s+[0-9a-f]+:[\t]52 fd 2a 56 34 12[ \t]+ld\\.sil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 fd 21 56 34 12[ \t]+ld\\.sil iy,0x123456\n+\\s+[0-9a-f]+:[\t]52 ed 7b 56 34 12[ \t]+ld\\.sil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]52 31 56 34 12[    \t]+ld\\.sil sp,0x123456\n+\\s+[0-9a-f]+:[\t]5b cd 56 34 12[    \t]+call\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b dc 56 34 12[    \t]+call\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fc 56 34 12[    \t]+call\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d4 56 34 12[    \t]+call\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c4 56 34 12[    \t]+call\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f4 56 34 12[    \t]+call\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ec 56 34 12[    \t]+call\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e4 56 34 12[    \t]+call\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b cc 56 34 12[    \t]+call\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b c3 56 34 12[    \t]+jp\\.lil 0x123456\n+\\s+[0-9a-f]+:[\t]5b da 56 34 12[    \t]+jp\\.lil c,0x123456\n+\\s+[0-9a-f]+:[\t]5b fa 56 34 12[    \t]+jp\\.lil m,0x123456\n+\\s+[0-9a-f]+:[\t]5b d2 56 34 12[    \t]+jp\\.lil nc,0x123456\n+\\s+[0-9a-f]+:[\t]5b c2 56 34 12[    \t]+jp\\.lil nz,0x123456\n+\\s+[0-9a-f]+:[\t]5b f2 56 34 12[    \t]+jp\\.lil p,0x123456\n+\\s+[0-9a-f]+:[\t]5b ea 56 34 12[    \t]+jp\\.lil pe,0x123456\n+\\s+[0-9a-f]+:[\t]5b e2 56 34 12[    \t]+jp\\.lil po,0x123456\n+\\s+[0-9a-f]+:[\t]5b ca 56 34 12[    \t]+jp\\.lil z,0x123456\n+\\s+[0-9a-f]+:[\t]5b 32 56 34 12[    \t]+ld\\.lil \\(0x123456\\),a\n+\\s+[0-9a-f]+:[\t]5b ed 43 56 34 12[ \t]+ld\\.lil \\(0x123456\\),bc\n+\\s+[0-9a-f]+:[\t]5b ed 53 56 34 12[ \t]+ld\\.lil \\(0x123456\\),de\n+\\s+[0-9a-f]+:[\t]5b 22 56 34 12[    \t]+ld\\.lil \\(0x123456\\),hl\n+\\s+[0-9a-f]+:[\t]5b dd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),ix\n+\\s+[0-9a-f]+:[\t]5b fd 22 56 34 12[ \t]+ld\\.lil \\(0x123456\\),iy\n+\\s+[0-9a-f]+:[\t]5b ed 73 56 34 12[ \t]+ld\\.lil \\(0x123456\\),sp\n+\\s+[0-9a-f]+:[\t]5b 3a 56 34 12[    \t]+ld\\.lil a,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b ed 4b 56 34 12[ \t]+ld\\.lil bc,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 01 56 34 12[    \t]+ld\\.lil bc,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 5b 56 34 12[ \t]+ld\\.lil de,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 11 56 34 12[    \t]+ld\\.lil de,0x123456\n+\\s+[0-9a-f]+:[\t]5b 2a 56 34 12[    \t]+ld\\.lil hl,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 21 56 34 12[    \t]+ld\\.lil hl,0x123456\n+\\s+[0-9a-f]+:[\t]5b dd 2a 56 34 12[ \t]+ld\\.lil ix,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b dd 21 56 34 12[ \t]+ld\\.lil ix,0x123456\n+\\s+[0-9a-f]+:[\t]5b fd 2a 56 34 12[ \t]+ld\\.lil iy,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b fd 21 56 34 12[ \t]+ld\\.lil iy,0x123456\n+\\s+[0-9a-f]+:[\t]5b ed 7b 56 34 12[ \t]+ld\\.lil sp,\\(0x123456\\)\n+\\s+[0-9a-f]+:[\t]5b 31 56 34 12[    \t]+ld\\.lil sp,0x123456"
    },
    {
      "sha": "afd8927c678c1f743c7e541400e77debd26bc317",
      "filename": "gas/testsuite/gas/z80/fp_math48.d",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_math48.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_math48.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/fp_math48.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,23 @@\n+#name: Math48 floating point numbers\n+#objdump: -s -j .data\n+#as: -float=math48\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Contents of section \\.data:\n+ 0000 00000000 00000000 00000000 81000000[ ]+.*\n+ 0010 00008100 00000080 82000000 00008200[ ]+.*\n+ 0020 00000080 84000000 00708400 000000f0[ ]+.*\n+ 0030 87000000 00488700 000000c8 7dcdcccc[ ]+.*\n+ 0040 cc4c7dcd cccccccc 01000000 0000ffff[ ]+.*\n+ 0050 ffffff7f 01000000 0080ffff ffffffff[ ]+.*\n+ 0060 7b951235 fa0e8400 00000020 89000000[ ]+.*\n+ 0070 00347faa aaaaaa2a 87000000 00dc8d00[ ]+.*\n+ 0080 00008077 93000000 6ca29700 0000074b[ ]+.*\n+ 0090 9a000040 45987f37 a9d85b5e 80fa33f3[ ]+.*\n+ 00a0 04357e4c 8ee9cf06 8321a2da 0f4980d2[ ]+.*\n+ 00b0 f7177231 81000000 00008e00 0000401c[ ]+.*\n+ 00c0 9b000020 bc3ea800 10a5d468 b604bfc9[ ]+.*\n+ 00d0 1b0ec3ac c5eb782d d0cdce1b c253def9[ ]+.*\n+ 00e0 78393f01 eb2ba8ad c51df8c9 7bce9740[ ]+.*\n+#pass"
    },
    {
      "sha": "d415697f9511643b8931f11b9cddcf8ed88ddde4",
      "filename": "gas/testsuite/gas/z80/fp_math48.s",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_math48.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_math48.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/fp_math48.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,39 @@\n+\t.data\n+\t.float\t0, -0\n+\t.float\t1, -1\n+\t.float\t2, -2\n+\t.float\t15, -15\n+\t.float\t100, -100\n+\t.float\t0.1, -0.1\n+\t.float\t2.938735877056E-39\t;smallest positive number\n+\t.float\t1.701411834603E+38\t;largest positive number\n+\t.float\t-2.938735877056E-39\t;largest negative number\n+\t.float\t-1.701411834603E+38\t;smallest negative number\n+; constants present as binaries in Math48 library\n+\t.float\t0.0174532925199433\t;7b 95 12 35 fa 0e - PI/180\n+\t.float\t10\t;84 00 00 00 00 20\n+\t.float\t360\t;89 00 00 00 00 34\n+\t.float\t0.333333333333\t;7f aa aa aa aa 2a\n+\t.float\t-110\t\t;87 00 00 00 00 dc\n+\t.float\t7920\t\t;8d 00 00 00 80 77\n+\t.float\t-332640\t\t;93 00 00 00 6c a2\n+\t.float\t6652800\t\t;97 00 00 00 07 4b\n+\t.float\t-39916800\t;9a 00 00 40 45 98\n+\t.float\t0.4342944819033\t;7f 36 a9 d8 5b 5e - 1/ln(10)\n+\t.float\t0.7071067811865\t;80 fb 33 f3 04 35 - sqrt(2)/2\n+\t.float\t0.1316524975874\t;7e 4a 8e e9 cf 06 - TAN(PI/24)\n+\t.float\t6.2831853071796\t;82 21 a2 da 0f 49 - 2*PI\n+\t.float\t0.69314718056\t;80 d2 f7 17 72 31 - ln(2)\n+\t.float\t1e+0\t;81 00 00 00 00 00\n+\t.float\t1e+4\t;8e 00 00 00 40 1c\n+\t.float\t1e+8\t;9b 00 00 20 bc 3e\n+\t.float\t1e+12\t;a8 00 10 a5 4d 68\n+\t.float\t1e+16\t;b6 04 bf c9 1b 0e\n+\t.float\t1e+20\t;c3 ac c5 eb 78 2d\n+\t.float\t1e+24\t;d0 cd ce 1b c2 53\n+\t.float\t1e+28\t;de f9 78 39 3f 01\n+\t.float\t1e+32\t;eb 2b a8 ad c5 1d\n+\t.float\t1e+36\t;f8 c9 7b ce 97 40\n+\t.float\t1.2\n+\t.float\t1337\n+\t.end"
    },
    {
      "sha": "38f568cd7181a5f83f75c05383095e4cacaf7070",
      "filename": "gas/testsuite/gas/z80/fp_zeda32.d",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_zeda32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_zeda32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/fp_zeda32.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,13 @@\n+#name: Zeda32 floating point numbers\n+#as: -float=zeda32\n+#objdump: -s -j .data\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Contents of section \\.data:\n+ 0000 db0f4981 54f82d81 3baa3880 1872317f[  ]+.*\n+ 0010 9b201a7e 789a5481 00000000 00000080[  ]+.*\n+ 0020 00004000 0000c000 00002000 d95b5e7e[  ]+.*\n+ 0030 db0f4982 83f9227d 0000007e 0000007f[  ]+.*\n+ 0040 00000001 00008001 ffff7fff ffffffff[  ]+.*\n+#pass"
    },
    {
      "sha": "d1c1ba6069d9febb868a029e8fd609da4d3c6f5f",
      "filename": "gas/testsuite/gas/z80/fp_zeda32.s",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_zeda32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/fp_zeda32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/fp_zeda32.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,26 @@\n+\t.data\n+\t.float\t3.14159265358979\t;PI\n+\t.float\t2.71828182845904\t;e\n+\t.float\t1.44269504088896\t;log2(e)\n+\t.float\t0.693147180559945\t;ln(2)\n+\t.float\t0.301029995663981\t;log10(2)\n+\t.float\t3.32192809488736\t;log2(10)\n+\t.float\t0\n+\t.float\t1\n+\t.float\t+inf\n+\t.float\t-inf\n+\t.float\tNaN\n+\t.float\t0.434294481903252\t;1/ln(10) = log10(e)\n+\t.float\t6.28318530717958\t;2*PI\n+\t.float\t0.159154943091896\t;1/(2*PI)\n+\t.float\t0.25\n+\t.float\t0.5\n+\t.float\t5.87747175411144E-39\t;min positive number\n+\t.float\t-5.87747175411144E-39\t;max negative number\n+\t.float\t3.4028235e+38\t;max positive number\n+\t.float\t-3.4028235e+38\t;min negative number\n+\t.end\n+\n+\n+\n+"
    },
    {
      "sha": "c700c1f07c64be1176f9da6cc76f59d3e23f1bda",
      "filename": "gas/testsuite/gas/z80/r800_extra.d",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_extra.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_extra.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_extra.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,16 @@\n+#as: -r800\n+#objdump: -d\n+#name: R800 specific instructions\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+[0-9a-f]+:[\t]ed 70[       \t]+in f,\\(c\\)\n+\\s+[0-9a-f]+:[\t]ed c5[       \t]+mulub a,b\n+\\s+[0-9a-f]+:[\t]ed cd[       \t]+mulub a,c\n+\\s+[0-9a-f]+:[\t]ed d5[       \t]+mulub a,d\n+\\s+[0-9a-f]+:[\t]ed dd[       \t]+mulub a,e\n+\\s+[0-9a-f]+:[\t]ed c3[       \t]+muluw hl,bc\n+\\s+[0-9a-f]+:[\t]ed f3[       \t]+muluw hl,sp"
    },
    {
      "sha": "e280523904042a60359e431c466f1f9c79947b01",
      "filename": "gas/testsuite/gas/z80/r800_extra.s",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_extra.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_extra.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_extra.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,13 @@\n+\t.text\n+\t.org\t0\n+\t;; R800 extra instructions\n+\n+\tin f,(c)\n+\n+\tmulub a,b\n+\tmulub a,c\n+\tmulub a,d\n+\tmulub a,e\n+\n+\tmuluw hl,bc\n+\tmuluw hl,sp"
    },
    {
      "sha": "c4b6ca210b4854600a3ed43f5e445efa99474538",
      "filename": "gas/testsuite/gas/z80/r800_ii8.d",
      "status": "added",
      "additions": 110,
      "deletions": 0,
      "changes": 110,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_ii8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_ii8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_ii8.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,110 @@\n+#as: -r800\n+#objdump: -d\n+#name: halves of index register for R800\n+#source: z80_ii8.s\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+[  ]+0:[ \t]+dd 7c[       \t]+ld a,ixh\n+[  ]+2:[ \t]+dd 44[       \t]+ld b,ixh\n+[  ]+4:[ \t]+dd 4c[       \t]+ld c,ixh\n+[  ]+6:[ \t]+dd 54[       \t]+ld d,ixh\n+[  ]+8:[ \t]+dd 5c[       \t]+ld e,ixh\n+[  ]+a:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[  ]+c:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[  ]+e:[ \t]+dd 7d[       \t]+ld a,ixl\n+[ ]+10:[ \t]+dd 45[       \t]+ld b,ixl\n+[ ]+12:[ \t]+dd 4d[       \t]+ld c,ixl\n+[ ]+14:[ \t]+dd 55[       \t]+ld d,ixl\n+[ ]+16:[ \t]+dd 5d[       \t]+ld e,ixl\n+[ ]+18:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+1a:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+1c:[ \t]+fd 7c[       \t]+ld a,iyh\n+[ ]+1e:[ \t]+fd 44[       \t]+ld b,iyh\n+[ ]+20:[ \t]+fd 4c[       \t]+ld c,iyh\n+[ ]+22:[ \t]+fd 54[       \t]+ld d,iyh\n+[ ]+24:[ \t]+fd 5c[       \t]+ld e,iyh\n+[ ]+26:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+28:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+2a:[ \t]+fd 7d[       \t]+ld a,iyl\n+[ ]+2c:[ \t]+fd 45[       \t]+ld b,iyl\n+[ ]+2e:[ \t]+fd 4d[       \t]+ld c,iyl\n+[ ]+30:[ \t]+fd 55[       \t]+ld d,iyl\n+[ ]+32:[ \t]+fd 5d[       \t]+ld e,iyl\n+[ ]+34:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+36:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+38:[ \t]+dd 67[       \t]+ld ixh,a\n+[ ]+3a:[ \t]+dd 60[       \t]+ld ixh,b\n+[ ]+3c:[ \t]+dd 61[       \t]+ld ixh,c\n+[ ]+3e:[ \t]+dd 62[       \t]+ld ixh,d\n+[ ]+40:[ \t]+dd 63[       \t]+ld ixh,e\n+[ ]+42:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[ ]+44:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+46:[ \t]+dd 26 19[    \t]+ld ixh,0x19\n+[ ]+49:[ \t]+dd 6f[       \t]+ld ixl,a\n+[ ]+4b:[ \t]+dd 68[       \t]+ld ixl,b\n+[ ]+4d:[ \t]+dd 69[       \t]+ld ixl,c\n+[ ]+4f:[ \t]+dd 6a[       \t]+ld ixl,d\n+[ ]+51:[ \t]+dd 6b[       \t]+ld ixl,e\n+[ ]+53:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[ ]+55:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+57:[ \t]+dd 2e 19[    \t]+ld ixl,0x19\n+[ ]+5a:[ \t]+fd 67[       \t]+ld iyh,a\n+[ ]+5c:[ \t]+fd 60[       \t]+ld iyh,b\n+[ ]+5e:[ \t]+fd 61[       \t]+ld iyh,c\n+[ ]+60:[ \t]+fd 62[       \t]+ld iyh,d\n+[ ]+62:[ \t]+fd 63[       \t]+ld iyh,e\n+[ ]+64:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+66:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+68:[ \t]+fd 26 19[    \t]+ld iyh,0x19\n+[ ]+6b:[ \t]+fd 6f[       \t]+ld iyl,a\n+[ ]+6d:[ \t]+fd 68[       \t]+ld iyl,b\n+[ ]+6f:[ \t]+fd 69[       \t]+ld iyl,c\n+[ ]+71:[ \t]+fd 6a[       \t]+ld iyl,d\n+[ ]+73:[ \t]+fd 6b[       \t]+ld iyl,e\n+[ ]+75:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+77:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+79:[ \t]+fd 2e 19[    \t]+ld iyl,0x19\n+[ ]+7c:[ \t]+dd 84[       \t]+add a,ixh\n+[ ]+7e:[ \t]+dd 85[       \t]+add a,ixl\n+[ ]+80:[ \t]+fd 84[       \t]+add a,iyh\n+[ ]+82:[ \t]+fd 85[       \t]+add a,iyl\n+[ ]+84:[ \t]+dd 8c[       \t]+adc a,ixh\n+[ ]+86:[ \t]+dd 8d[       \t]+adc a,ixl\n+[ ]+88:[ \t]+fd 8c[       \t]+adc a,iyh\n+[ ]+8a:[ \t]+fd 8d[       \t]+adc a,iyl\n+[ ]+8c:[ \t]+dd bc[       \t]+cp ixh\n+[ ]+8e:[ \t]+dd bd[       \t]+cp ixl\n+[ ]+90:[ \t]+fd bc[       \t]+cp iyh\n+[ ]+92:[ \t]+fd bd[       \t]+cp iyl\n+[ ]+94:[ \t]+dd 25[       \t]+dec ixh\n+[ ]+96:[ \t]+dd 2d[       \t]+dec ixl\n+[ ]+98:[ \t]+fd 25[       \t]+dec iyh\n+[ ]+9a:[ \t]+fd 2d[       \t]+dec iyl\n+[ ]+9c:[ \t]+dd 24[       \t]+inc ixh\n+[ ]+9e:[ \t]+dd 2c[       \t]+inc ixl\n+[ ]+a0:[ \t]+fd 24[       \t]+inc iyh\n+[ ]+a2:[ \t]+fd 2c[       \t]+inc iyl\n+[ ]+a4:[ \t]+dd 9c[       \t]+sbc a,ixh\n+[ ]+a6:[ \t]+dd 9d[       \t]+sbc a,ixl\n+[ ]+a8:[ \t]+fd 9c[       \t]+sbc a,iyh\n+[ ]+aa:[ \t]+fd 9d[       \t]+sbc a,iyl\n+[ ]+ac:[ \t]+dd 94[       \t]+sub ixh\n+[ ]+ae:[ \t]+dd 95[       \t]+sub ixl\n+[ ]+b0:[ \t]+fd 94[       \t]+sub iyh\n+[ ]+b2:[ \t]+fd 95[       \t]+sub iyl\n+[ ]+b4:[ \t]+dd a4[       \t]+and ixh\n+[ ]+b6:[ \t]+dd a5[       \t]+and ixl\n+[ ]+b8:[ \t]+fd a4[       \t]+and iyh\n+[ ]+ba:[ \t]+fd a5[       \t]+and iyl\n+[ ]+bc:[ \t]+dd b4[       \t]+or ixh\n+[ ]+be:[ \t]+dd b5[       \t]+or ixl\n+[ ]+c0:[ \t]+fd b4[       \t]+or iyh\n+[ ]+c2:[ \t]+fd b5[       \t]+or iyl\n+[ ]+c4:[ \t]+dd ac[       \t]+xor ixh\n+[ ]+c6:[ \t]+dd ad[       \t]+xor ixl\n+[ ]+c8:[ \t]+fd ac[       \t]+xor iyh\n+[ ]+ca:[ \t]+fd ad[       \t]+xor iyl"
    },
    {
      "sha": "3a1d434e94db9eaf6df5b343085cff55b20a62f8",
      "filename": "gas/testsuite/gas/z80/r800_z80_doc.d",
      "status": "added",
      "additions": 706,
      "deletions": 0,
      "changes": 706,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/r800_z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/r800_z80_doc.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,706 @@\n+#as: -r800\n+#objdump: -d\n+#name: All Z80 documented instructions for R800\n+#source: z80_doc.s\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+1:\\s+dd 8e 09\\s+adc a,\\(ix\\+9\\)\n+\\s+4:\\s+fd 8e 09\\s+adc a,\\(iy\\+9\\)\n+\\s+7:\\s+ce 03\\s+adc a,0x03\n+\\s+9:\\s+8f\\s+adc a,a\n+\\s+a:\\s+88\\s+adc a,b\n+\\s+b:\\s+89\\s+adc a,c\n+\\s+c:\\s+8a\\s+adc a,d\n+\\s+d:\\s+8b\\s+adc a,e\n+\\s+e:\\s+8c\\s+adc a,h\n+\\s+f:\\s+8d\\s+adc a,l\n+\\s+10:\\s+ed 4a\\s+adc hl,bc\n+\\s+12:\\s+ed 5a\\s+adc hl,de\n+\\s+14:\\s+ed 6a\\s+adc hl,hl\n+\\s+16:\\s+ed 7a\\s+adc hl,sp\n+\\s+18:\\s+86\\s+add a,\\(hl\\)\n+\\s+19:\\s+dd 86 09\\s+add a,\\(ix\\+9\\)\n+\\s+1c:\\s+fd 86 09\\s+add a,\\(iy\\+9\\)\n+\\s+1f:\\s+c6 03\\s+add a,0x03\n+\\s+21:\\s+87\\s+add a,a\n+\\s+22:\\s+80\\s+add a,b\n+\\s+23:\\s+81\\s+add a,c\n+\\s+24:\\s+82\\s+add a,d\n+\\s+25:\\s+83\\s+add a,e\n+\\s+26:\\s+84\\s+add a,h\n+\\s+27:\\s+85\\s+add a,l\n+\\s+28:\\s+09\\s+add hl,bc\n+\\s+29:\\s+19\\s+add hl,de\n+\\s+2a:\\s+29\\s+add hl,hl\n+\\s+2b:\\s+39\\s+add hl,sp\n+\\s+2c:\\s+dd 09\\s+add ix,bc\n+\\s+2e:\\s+dd 19\\s+add ix,de\n+\\s+30:\\s+dd 29\\s+add ix,ix\n+\\s+32:\\s+dd 39\\s+add ix,sp\n+\\s+34:\\s+fd 09\\s+add iy,bc\n+\\s+36:\\s+fd 19\\s+add iy,de\n+\\s+38:\\s+fd 29\\s+add iy,iy\n+\\s+3a:\\s+fd 39\\s+add iy,sp\n+\\s+3c:\\s+a6\\s+and \\(hl\\)\n+\\s+3d:\\s+dd a6 09\\s+and \\(ix\\+9\\)\n+\\s+40:\\s+fd a6 09\\s+and \\(iy\\+9\\)\n+\\s+43:\\s+e6 03\\s+and 0x03\n+\\s+45:\\s+a7\\s+and a\n+\\s+46:\\s+a0\\s+and b\n+\\s+47:\\s+a1\\s+and c\n+\\s+48:\\s+a2\\s+and d\n+\\s+49:\\s+a3\\s+and e\n+\\s+4a:\\s+a4\\s+and h\n+\\s+4b:\\s+a5\\s+and l\n+\\s+4c:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+4e:\\s+dd cb 09 46\\s+bit 0,\\(ix\\+9\\)\n+\\s+52:\\s+fd cb 09 46\\s+bit 0,\\(iy\\+9\\)\n+\\s+56:\\s+cb 47\\s+bit 0,a\n+\\s+58:\\s+cb 40\\s+bit 0,b\n+\\s+5a:\\s+cb 41\\s+bit 0,c\n+\\s+5c:\\s+cb 42\\s+bit 0,d\n+\\s+5e:\\s+cb 43\\s+bit 0,e\n+\\s+60:\\s+cb 44\\s+bit 0,h\n+\\s+62:\\s+cb 45\\s+bit 0,l\n+\\s+64:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+66:\\s+dd cb 09 4e\\s+bit 1,\\(ix\\+9\\)\n+\\s+6a:\\s+fd cb 09 4e\\s+bit 1,\\(iy\\+9\\)\n+\\s+6e:\\s+cb 4f\\s+bit 1,a\n+\\s+70:\\s+cb 48\\s+bit 1,b\n+\\s+72:\\s+cb 49\\s+bit 1,c\n+\\s+74:\\s+cb 4a\\s+bit 1,d\n+\\s+76:\\s+cb 4b\\s+bit 1,e\n+\\s+78:\\s+cb 4c\\s+bit 1,h\n+\\s+7a:\\s+cb 4d\\s+bit 1,l\n+\\s+7c:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+7e:\\s+dd cb 09 56\\s+bit 2,\\(ix\\+9\\)\n+\\s+82:\\s+fd cb 09 56\\s+bit 2,\\(iy\\+9\\)\n+\\s+86:\\s+cb 57\\s+bit 2,a\n+\\s+88:\\s+cb 50\\s+bit 2,b\n+\\s+8a:\\s+cb 51\\s+bit 2,c\n+\\s+8c:\\s+cb 52\\s+bit 2,d\n+\\s+8e:\\s+cb 53\\s+bit 2,e\n+\\s+90:\\s+cb 54\\s+bit 2,h\n+\\s+92:\\s+cb 55\\s+bit 2,l\n+\\s+94:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+96:\\s+dd cb 09 5e\\s+bit 3,\\(ix\\+9\\)\n+\\s+9a:\\s+fd cb 09 5e\\s+bit 3,\\(iy\\+9\\)\n+\\s+9e:\\s+cb 5f\\s+bit 3,a\n+\\s+a0:\\s+cb 58\\s+bit 3,b\n+\\s+a2:\\s+cb 59\\s+bit 3,c\n+\\s+a4:\\s+cb 5a\\s+bit 3,d\n+\\s+a6:\\s+cb 5b\\s+bit 3,e\n+\\s+a8:\\s+cb 5c\\s+bit 3,h\n+\\s+aa:\\s+cb 5d\\s+bit 3,l\n+\\s+ac:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+ae:\\s+dd cb 09 66\\s+bit 4,\\(ix\\+9\\)\n+\\s+b2:\\s+fd cb 09 66\\s+bit 4,\\(iy\\+9\\)\n+\\s+b6:\\s+cb 67\\s+bit 4,a\n+\\s+b8:\\s+cb 60\\s+bit 4,b\n+\\s+ba:\\s+cb 61\\s+bit 4,c\n+\\s+bc:\\s+cb 62\\s+bit 4,d\n+\\s+be:\\s+cb 63\\s+bit 4,e\n+\\s+c0:\\s+cb 64\\s+bit 4,h\n+\\s+c2:\\s+cb 65\\s+bit 4,l\n+\\s+c4:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+c6:\\s+dd cb 09 6e\\s+bit 5,\\(ix\\+9\\)\n+\\s+ca:\\s+fd cb 09 6e\\s+bit 5,\\(iy\\+9\\)\n+\\s+ce:\\s+cb 6f\\s+bit 5,a\n+\\s+d0:\\s+cb 68\\s+bit 5,b\n+\\s+d2:\\s+cb 69\\s+bit 5,c\n+\\s+d4:\\s+cb 6a\\s+bit 5,d\n+\\s+d6:\\s+cb 6b\\s+bit 5,e\n+\\s+d8:\\s+cb 6c\\s+bit 5,h\n+\\s+da:\\s+cb 6d\\s+bit 5,l\n+\\s+dc:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+de:\\s+dd cb 09 76\\s+bit 6,\\(ix\\+9\\)\n+\\s+e2:\\s+fd cb 09 76\\s+bit 6,\\(iy\\+9\\)\n+\\s+e6:\\s+cb 77\\s+bit 6,a\n+\\s+e8:\\s+cb 70\\s+bit 6,b\n+\\s+ea:\\s+cb 71\\s+bit 6,c\n+\\s+ec:\\s+cb 72\\s+bit 6,d\n+\\s+ee:\\s+cb 73\\s+bit 6,e\n+\\s+f0:\\s+cb 74\\s+bit 6,h\n+\\s+f2:\\s+cb 75\\s+bit 6,l\n+\\s+f4:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+f6:\\s+dd cb 09 7e\\s+bit 7,\\(ix\\+9\\)\n+\\s+fa:\\s+fd cb 09 7e\\s+bit 7,\\(iy\\+9\\)\n+\\s+fe:\\s+cb 7f\\s+bit 7,a\n+\\s+100:\\s+cb 78\\s+bit 7,b\n+\\s+102:\\s+cb 79\\s+bit 7,c\n+\\s+104:\\s+cb 7a\\s+bit 7,d\n+\\s+106:\\s+cb 7b\\s+bit 7,e\n+\\s+108:\\s+cb 7c\\s+bit 7,h\n+\\s+10a:\\s+cb 7d\\s+bit 7,l\n+\\s+10c:\\s+cd 34 12\\s+call 0x1234\n+\\s+10f:\\s+dc 34 12\\s+call c,0x1234\n+\\s+112:\\s+fc 34 12\\s+call m,0x1234\n+\\s+115:\\s+d4 34 12\\s+call nc,0x1234\n+\\s+118:\\s+c4 34 12\\s+call nz,0x1234\n+\\s+11b:\\s+f4 34 12\\s+call p,0x1234\n+\\s+11e:\\s+ec 34 12\\s+call pe,0x1234\n+\\s+121:\\s+e4 34 12\\s+call po,0x1234\n+\\s+124:\\s+cc 34 12\\s+call z,0x1234\n+\\s+127:\\s+3f\\s+ccf\n+\\s+128:\\s+be\\s+cp \\(hl\\)\n+\\s+129:\\s+dd be 09\\s+cp \\(ix\\+9\\)\n+\\s+12c:\\s+fd be 09\\s+cp \\(iy\\+9\\)\n+\\s+12f:\\s+fe 03\\s+cp 0x03\n+\\s+131:\\s+bf\\s+cp a\n+\\s+132:\\s+b8\\s+cp b\n+\\s+133:\\s+b9\\s+cp c\n+\\s+134:\\s+ba\\s+cp d\n+\\s+135:\\s+bb\\s+cp e\n+\\s+136:\\s+bc\\s+cp h\n+\\s+137:\\s+bd\\s+cp l\n+\\s+138:\\s+ed a9\\s+cpd\n+\\s+13a:\\s+ed b9\\s+cpdr\n+\\s+13c:\\s+ed a1\\s+cpi\n+\\s+13e:\\s+ed b1\\s+cpir\n+\\s+140:\\s+2f\\s+cpl\n+\\s+141:\\s+27\\s+daa\n+\\s+142:\\s+35\\s+dec \\(hl\\)\n+\\s+143:\\s+dd 35 09\\s+dec \\(ix\\+9\\)\n+\\s+146:\\s+fd 35 09\\s+dec \\(iy\\+9\\)\n+\\s+149:\\s+3d\\s+dec a\n+\\s+14a:\\s+05\\s+dec b\n+\\s+14b:\\s+0b\\s+dec bc\n+\\s+14c:\\s+0d\\s+dec c\n+\\s+14d:\\s+15\\s+dec d\n+\\s+14e:\\s+1b\\s+dec de\n+\\s+14f:\\s+1d\\s+dec e\n+\\s+150:\\s+25\\s+dec h\n+\\s+151:\\s+2b\\s+dec hl\n+\\s+152:\\s+dd 2b\\s+dec ix\n+\\s+154:\\s+fd 2b\\s+dec iy\n+\\s+156:\\s+2d\\s+dec l\n+\\s+157:\\s+3b\\s+dec sp\n+\\s+158:\\s+f3\\s+di\n+\\s+159:\\s+10 05\\s+djnz 0x0160\n+\\s+15b:\\s+fb\\s+ei\n+\\s+15c:\\s+e3\\s+ex \\(sp\\),hl\n+\\s+15d:\\s+dd e3\\s+ex \\(sp\\),ix\n+\\s+15f:\\s+fd e3\\s+ex \\(sp\\),iy\n+\\s+161:\\s+08\\s+ex af,af'\n+\\s+162:\\s+eb\\s+ex de,hl\n+\\s+163:\\s+d9\\s+exx\n+\\s+164:\\s+76\\s+halt\n+\\s+165:\\s+ed 46\\s+im 0\n+\\s+167:\\s+ed 56\\s+im 1\n+\\s+169:\\s+ed 5e\\s+im 2\n+\\s+16b:\\s+ed 78\\s+in a,\\(c\\)\n+\\s+16d:\\s+db 03\\s+in a,\\(0x03\\)\n+\\s+16f:\\s+ed 40\\s+in b,\\(c\\)\n+\\s+171:\\s+ed 48\\s+in c,\\(c\\)\n+\\s+173:\\s+ed 50\\s+in d,\\(c\\)\n+\\s+175:\\s+ed 58\\s+in e,\\(c\\)\n+\\s+177:\\s+ed 60\\s+in h,\\(c\\)\n+\\s+179:\\s+ed 68\\s+in l,\\(c\\)\n+\\s+17b:\\s+34\\s+inc \\(hl\\)\n+\\s+17c:\\s+dd 34 09\\s+inc \\(ix\\+9\\)\n+\\s+17f:\\s+fd 34 09\\s+inc \\(iy\\+9\\)\n+\\s+182:\\s+3c\\s+inc a\n+\\s+183:\\s+04\\s+inc b\n+\\s+184:\\s+03\\s+inc bc\n+\\s+185:\\s+0c\\s+inc c\n+\\s+186:\\s+14\\s+inc d\n+\\s+187:\\s+13\\s+inc de\n+\\s+188:\\s+1c\\s+inc e\n+\\s+189:\\s+24\\s+inc h\n+\\s+18a:\\s+23\\s+inc hl\n+\\s+18b:\\s+dd 23\\s+inc ix\n+\\s+18d:\\s+fd 23\\s+inc iy\n+\\s+18f:\\s+2c\\s+inc l\n+\\s+190:\\s+33\\s+inc sp\n+\\s+191:\\s+ed aa\\s+ind\n+\\s+193:\\s+ed ba\\s+indr\n+\\s+195:\\s+ed a2\\s+ini\n+\\s+197:\\s+ed b2\\s+inir\n+\\s+199:\\s+e9\\s+jp \\(hl\\)\n+\\s+19a:\\s+dd e9\\s+jp \\(ix\\)\n+\\s+19c:\\s+fd e9\\s+jp \\(iy\\)\n+\\s+19e:\\s+c3 34 12\\s+jp 0x1234\n+\\s+1a1:\\s+da 34 12\\s+jp c,0x1234\n+\\s+1a4:\\s+fa 34 12\\s+jp m,0x1234\n+\\s+1a7:\\s+d2 34 12\\s+jp nc,0x1234\n+\\s+1aa:\\s+c2 34 12\\s+jp nz,0x1234\n+\\s+1ad:\\s+f2 34 12\\s+jp p,0x1234\n+\\s+1b0:\\s+ea 34 12\\s+jp pe,0x1234\n+\\s+1b3:\\s+e2 34 12\\s+jp po,0x1234\n+\\s+1b6:\\s+ca 34 12\\s+jp z,0x1234\n+\\s+1b9:\\s+18 05\\s+jr 0x01c0\n+\\s+1bb:\\s+38 05\\s+jr c,0x01c2\n+\\s+1bd:\\s+30 05\\s+jr nc,0x01c4\n+\\s+1bf:\\s+20 05\\s+jr nz,0x01c6\n+\\s+1c1:\\s+28 05\\s+jr z,0x01c8\n+\\s+1c3:\\s+32 34 12\\s+ld \\(0x1234\\),a\n+\\s+1c6:\\s+ed 43 34 12\\s+ld \\(0x1234\\),bc\n+\\s+1ca:\\s+ed 53 34 12\\s+ld \\(0x1234\\),de\n+\\s+1ce:\\s+22 34 12\\s+ld \\(0x1234\\),hl\n+\\s+1d1:\\s+dd 22 34 12\\s+ld \\(0x1234\\),ix\n+\\s+1d5:\\s+fd 22 34 12\\s+ld \\(0x1234\\),iy\n+\\s+1d9:\\s+ed 73 34 12\\s+ld \\(0x1234\\),sp\n+\\s+1dd:\\s+02\\s+ld \\(bc\\),a\n+\\s+1de:\\s+12\\s+ld \\(de\\),a\n+\\s+1df:\\s+36 03\\s+ld \\(hl\\),0x03\n+\\s+1e1:\\s+77\\s+ld \\(hl\\),a\n+\\s+1e2:\\s+70\\s+ld \\(hl\\),b\n+\\s+1e3:\\s+71\\s+ld \\(hl\\),c\n+\\s+1e4:\\s+72\\s+ld \\(hl\\),d\n+\\s+1e5:\\s+73\\s+ld \\(hl\\),e\n+\\s+1e6:\\s+74\\s+ld \\(hl\\),h\n+\\s+1e7:\\s+75\\s+ld \\(hl\\),l\n+\\s+1e8:\\s+dd 36 09 03\\s+ld \\(ix\\+9\\),0x03\n+\\s+1ec:\\s+dd 77 09\\s+ld \\(ix\\+9\\),a\n+\\s+1ef:\\s+dd 70 09\\s+ld \\(ix\\+9\\),b\n+\\s+1f2:\\s+dd 71 09\\s+ld \\(ix\\+9\\),c\n+\\s+1f5:\\s+dd 72 09\\s+ld \\(ix\\+9\\),d\n+\\s+1f8:\\s+dd 73 09\\s+ld \\(ix\\+9\\),e\n+\\s+1fb:\\s+dd 74 09\\s+ld \\(ix\\+9\\),h\n+\\s+1fe:\\s+dd 75 09\\s+ld \\(ix\\+9\\),l\n+\\s+201:\\s+fd 36 09 03\\s+ld \\(iy\\+9\\),0x03\n+\\s+205:\\s+fd 77 09\\s+ld \\(iy\\+9\\),a\n+\\s+208:\\s+fd 70 09\\s+ld \\(iy\\+9\\),b\n+\\s+20b:\\s+fd 71 09\\s+ld \\(iy\\+9\\),c\n+\\s+20e:\\s+fd 72 09\\s+ld \\(iy\\+9\\),d\n+\\s+211:\\s+fd 73 09\\s+ld \\(iy\\+9\\),e\n+\\s+214:\\s+fd 74 09\\s+ld \\(iy\\+9\\),h\n+\\s+217:\\s+fd 75 09\\s+ld \\(iy\\+9\\),l\n+\\s+21a:\\s+3a 34 12\\s+ld a,\\(0x1234\\)\n+\\s+21d:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+21e:\\s+1a\\s+ld a,\\(de\\)\n+\\s+21f:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+220:\\s+dd 7e 09\\s+ld a,\\(ix\\+9\\)\n+\\s+223:\\s+fd 7e 09\\s+ld a,\\(iy\\+9\\)\n+\\s+226:\\s+3e 03\\s+ld a,0x03\n+\\s+228:\\s+7f\\s+ld a,a\n+\\s+229:\\s+78\\s+ld a,b\n+\\s+22a:\\s+79\\s+ld a,c\n+\\s+22b:\\s+7a\\s+ld a,d\n+\\s+22c:\\s+7b\\s+ld a,e\n+\\s+22d:\\s+7c\\s+ld a,h\n+\\s+22e:\\s+ed 57\\s+ld a,i\n+\\s+230:\\s+7d\\s+ld a,l\n+\\s+231:\\s+ed 5f\\s+ld a,r\n+\\s+233:\\s+46\\s+ld b,\\(hl\\)\n+\\s+234:\\s+dd 46 09\\s+ld b,\\(ix\\+9\\)\n+\\s+237:\\s+fd 46 09\\s+ld b,\\(iy\\+9\\)\n+\\s+23a:\\s+06 03\\s+ld b,0x03\n+\\s+23c:\\s+47\\s+ld b,a\n+\\s+23d:\\s+40\\s+ld b,b\n+\\s+23e:\\s+41\\s+ld b,c\n+\\s+23f:\\s+42\\s+ld b,d\n+\\s+240:\\s+43\\s+ld b,e\n+\\s+241:\\s+44\\s+ld b,h\n+\\s+242:\\s+45\\s+ld b,l\n+\\s+243:\\s+ed 4b 34 12\\s+ld bc,\\(0x1234\\)\n+\\s+247:\\s+01 34 12\\s+ld bc,0x1234\n+\\s+24a:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+24b:\\s+dd 4e 09\\s+ld c,\\(ix\\+9\\)\n+\\s+24e:\\s+fd 4e 09\\s+ld c,\\(iy\\+9\\)\n+\\s+251:\\s+0e 03\\s+ld c,0x03\n+\\s+253:\\s+4f\\s+ld c,a\n+\\s+254:\\s+48\\s+ld c,b\n+\\s+255:\\s+49\\s+ld c,c\n+\\s+256:\\s+4a\\s+ld c,d\n+\\s+257:\\s+4b\\s+ld c,e\n+\\s+258:\\s+4c\\s+ld c,h\n+\\s+259:\\s+4d\\s+ld c,l\n+\\s+25a:\\s+56\\s+ld d,\\(hl\\)\n+\\s+25b:\\s+dd 56 09\\s+ld d,\\(ix\\+9\\)\n+\\s+25e:\\s+fd 56 09\\s+ld d,\\(iy\\+9\\)\n+\\s+261:\\s+16 03\\s+ld d,0x03\n+\\s+263:\\s+57\\s+ld d,a\n+\\s+264:\\s+50\\s+ld d,b\n+\\s+265:\\s+51\\s+ld d,c\n+\\s+266:\\s+52\\s+ld d,d\n+\\s+267:\\s+53\\s+ld d,e\n+\\s+268:\\s+54\\s+ld d,h\n+\\s+269:\\s+55\\s+ld d,l\n+\\s+26a:\\s+ed 5b 34 12\\s+ld de,\\(0x1234\\)\n+\\s+26e:\\s+11 34 12\\s+ld de,0x1234\n+\\s+271:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+272:\\s+dd 5e 09\\s+ld e,\\(ix\\+9\\)\n+\\s+275:\\s+fd 5e 09\\s+ld e,\\(iy\\+9\\)\n+\\s+278:\\s+1e 03\\s+ld e,0x03\n+\\s+27a:\\s+5f\\s+ld e,a\n+\\s+27b:\\s+58\\s+ld e,b\n+\\s+27c:\\s+59\\s+ld e,c\n+\\s+27d:\\s+5a\\s+ld e,d\n+\\s+27e:\\s+5b\\s+ld e,e\n+\\s+27f:\\s+5c\\s+ld e,h\n+\\s+280:\\s+5d\\s+ld e,l\n+\\s+281:\\s+66\\s+ld h,\\(hl\\)\n+\\s+282:\\s+dd 66 09\\s+ld h,\\(ix\\+9\\)\n+\\s+285:\\s+fd 66 09\\s+ld h,\\(iy\\+9\\)\n+\\s+288:\\s+26 03\\s+ld h,0x03\n+\\s+28a:\\s+67\\s+ld h,a\n+\\s+28b:\\s+60\\s+ld h,b\n+\\s+28c:\\s+61\\s+ld h,c\n+\\s+28d:\\s+62\\s+ld h,d\n+\\s+28e:\\s+63\\s+ld h,e\n+\\s+28f:\\s+64\\s+ld h,h\n+\\s+290:\\s+65\\s+ld h,l\n+\\s+291:\\s+2a 34 12\\s+ld hl,\\(0x1234\\)\n+\\s+294:\\s+21 34 12\\s+ld hl,0x1234\n+\\s+297:\\s+ed 47\\s+ld i,a\n+\\s+299:\\s+dd 2a 34 12\\s+ld ix,\\(0x1234\\)\n+\\s+29d:\\s+dd 21 34 12\\s+ld ix,0x1234\n+\\s+2a1:\\s+fd 2a 34 12\\s+ld iy,\\(0x1234\\)\n+\\s+2a5:\\s+fd 21 34 12\\s+ld iy,0x1234\n+\\s+2a9:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+2aa:\\s+dd 6e 09\\s+ld l,\\(ix\\+9\\)\n+\\s+2ad:\\s+fd 6e 09\\s+ld l,\\(iy\\+9\\)\n+\\s+2b0:\\s+2e 03\\s+ld l,0x03\n+\\s+2b2:\\s+6f\\s+ld l,a\n+\\s+2b3:\\s+68\\s+ld l,b\n+\\s+2b4:\\s+69\\s+ld l,c\n+\\s+2b5:\\s+6a\\s+ld l,d\n+\\s+2b6:\\s+6b\\s+ld l,e\n+\\s+2b7:\\s+6c\\s+ld l,h\n+\\s+2b8:\\s+6d\\s+ld l,l\n+\\s+2b9:\\s+ed 4f\\s+ld r,a\n+\\s+2bb:\\s+ed 7b 34 12\\s+ld sp,\\(0x1234\\)\n+\\s+2bf:\\s+31 34 12\\s+ld sp,0x1234\n+\\s+2c2:\\s+f9\\s+ld sp,hl\n+\\s+2c3:\\s+dd f9\\s+ld sp,ix\n+\\s+2c5:\\s+fd f9\\s+ld sp,iy\n+\\s+2c7:\\s+ed a8\\s+ldd\n+\\s+2c9:\\s+ed b8\\s+lddr\n+\\s+2cb:\\s+ed a0\\s+ldi\n+\\s+2cd:\\s+ed b0\\s+ldir\n+\\s+2cf:\\s+ed 44\\s+neg\n+\\s+2d1:\\s+00\\s+nop\n+\\s+2d2:\\s+b6\\s+or \\(hl\\)\n+\\s+2d3:\\s+dd b6 09\\s+or \\(ix\\+9\\)\n+\\s+2d6:\\s+fd b6 09\\s+or \\(iy\\+9\\)\n+\\s+2d9:\\s+f6 03\\s+or 0x03\n+\\s+2db:\\s+b7\\s+or a\n+\\s+2dc:\\s+b0\\s+or b\n+\\s+2dd:\\s+b1\\s+or c\n+\\s+2de:\\s+b2\\s+or d\n+\\s+2df:\\s+b3\\s+or e\n+\\s+2e0:\\s+b4\\s+or h\n+\\s+2e1:\\s+b5\\s+or l\n+\\s+2e2:\\s+ed bb\\s+otdr\n+\\s+2e4:\\s+ed b3\\s+otir\n+\\s+2e6:\\s+ed 79\\s+out \\(c\\),a\n+\\s+2e8:\\s+ed 41\\s+out \\(c\\),b\n+\\s+2ea:\\s+ed 49\\s+out \\(c\\),c\n+\\s+2ec:\\s+ed 51\\s+out \\(c\\),d\n+\\s+2ee:\\s+ed 59\\s+out \\(c\\),e\n+\\s+2f0:\\s+ed 61\\s+out \\(c\\),h\n+\\s+2f2:\\s+ed 69\\s+out \\(c\\),l\n+\\s+2f4:\\s+d3 03\\s+out \\(0x03\\),a\n+\\s+2f6:\\s+ed ab\\s+outd\n+\\s+2f8:\\s+ed a3\\s+outi\n+\\s+2fa:\\s+f1\\s+pop af\n+\\s+2fb:\\s+c1\\s+pop bc\n+\\s+2fc:\\s+d1\\s+pop de\n+\\s+2fd:\\s+e1\\s+pop hl\n+\\s+2fe:\\s+dd e1\\s+pop ix\n+\\s+300:\\s+fd e1\\s+pop iy\n+\\s+302:\\s+f5\\s+push af\n+\\s+303:\\s+c5\\s+push bc\n+\\s+304:\\s+d5\\s+push de\n+\\s+305:\\s+e5\\s+push hl\n+\\s+306:\\s+dd e5\\s+push ix\n+\\s+308:\\s+fd e5\\s+push iy\n+\\s+30a:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+30c:\\s+dd cb 09 86\\s+res 0,\\(ix\\+9\\)\n+\\s+310:\\s+fd cb 09 86\\s+res 0,\\(iy\\+9\\)\n+\\s+314:\\s+cb 87\\s+res 0,a\n+\\s+316:\\s+cb 80\\s+res 0,b\n+\\s+318:\\s+cb 81\\s+res 0,c\n+\\s+31a:\\s+cb 82\\s+res 0,d\n+\\s+31c:\\s+cb 83\\s+res 0,e\n+\\s+31e:\\s+cb 84\\s+res 0,h\n+\\s+320:\\s+cb 85\\s+res 0,l\n+\\s+322:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+324:\\s+dd cb 09 8e\\s+res 1,\\(ix\\+9\\)\n+\\s+328:\\s+fd cb 09 8e\\s+res 1,\\(iy\\+9\\)\n+\\s+32c:\\s+cb 8f\\s+res 1,a\n+\\s+32e:\\s+cb 88\\s+res 1,b\n+\\s+330:\\s+cb 89\\s+res 1,c\n+\\s+332:\\s+cb 8a\\s+res 1,d\n+\\s+334:\\s+cb 8b\\s+res 1,e\n+\\s+336:\\s+cb 8c\\s+res 1,h\n+\\s+338:\\s+cb 8d\\s+res 1,l\n+\\s+33a:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+33c:\\s+dd cb 09 96\\s+res 2,\\(ix\\+9\\)\n+\\s+340:\\s+fd cb 09 96\\s+res 2,\\(iy\\+9\\)\n+\\s+344:\\s+cb 97\\s+res 2,a\n+\\s+346:\\s+cb 90\\s+res 2,b\n+\\s+348:\\s+cb 91\\s+res 2,c\n+\\s+34a:\\s+cb 92\\s+res 2,d\n+\\s+34c:\\s+cb 93\\s+res 2,e\n+\\s+34e:\\s+cb 94\\s+res 2,h\n+\\s+350:\\s+cb 95\\s+res 2,l\n+\\s+352:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+354:\\s+dd cb 09 9e\\s+res 3,\\(ix\\+9\\)\n+\\s+358:\\s+fd cb 09 9e\\s+res 3,\\(iy\\+9\\)\n+\\s+35c:\\s+cb 9f\\s+res 3,a\n+\\s+35e:\\s+cb 98\\s+res 3,b\n+\\s+360:\\s+cb 99\\s+res 3,c\n+\\s+362:\\s+cb 9a\\s+res 3,d\n+\\s+364:\\s+cb 9b\\s+res 3,e\n+\\s+366:\\s+cb 9c\\s+res 3,h\n+\\s+368:\\s+cb 9d\\s+res 3,l\n+\\s+36a:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+36c:\\s+dd cb 09 a6\\s+res 4,\\(ix\\+9\\)\n+\\s+370:\\s+fd cb 09 a6\\s+res 4,\\(iy\\+9\\)\n+\\s+374:\\s+cb a7\\s+res 4,a\n+\\s+376:\\s+cb a0\\s+res 4,b\n+\\s+378:\\s+cb a1\\s+res 4,c\n+\\s+37a:\\s+cb a2\\s+res 4,d\n+\\s+37c:\\s+cb a3\\s+res 4,e\n+\\s+37e:\\s+cb a4\\s+res 4,h\n+\\s+380:\\s+cb a5\\s+res 4,l\n+\\s+382:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+384:\\s+dd cb 09 ae\\s+res 5,\\(ix\\+9\\)\n+\\s+388:\\s+fd cb 09 ae\\s+res 5,\\(iy\\+9\\)\n+\\s+38c:\\s+cb af\\s+res 5,a\n+\\s+38e:\\s+cb a8\\s+res 5,b\n+\\s+390:\\s+cb a9\\s+res 5,c\n+\\s+392:\\s+cb aa\\s+res 5,d\n+\\s+394:\\s+cb ab\\s+res 5,e\n+\\s+396:\\s+cb ac\\s+res 5,h\n+\\s+398:\\s+cb ad\\s+res 5,l\n+\\s+39a:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+39c:\\s+dd cb 09 b6\\s+res 6,\\(ix\\+9\\)\n+\\s+3a0:\\s+fd cb 09 b6\\s+res 6,\\(iy\\+9\\)\n+\\s+3a4:\\s+cb b7\\s+res 6,a\n+\\s+3a6:\\s+cb b0\\s+res 6,b\n+\\s+3a8:\\s+cb b1\\s+res 6,c\n+\\s+3aa:\\s+cb b2\\s+res 6,d\n+\\s+3ac:\\s+cb b3\\s+res 6,e\n+\\s+3ae:\\s+cb b4\\s+res 6,h\n+\\s+3b0:\\s+cb b5\\s+res 6,l\n+\\s+3b2:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+3b4:\\s+dd cb 09 be\\s+res 7,\\(ix\\+9\\)\n+\\s+3b8:\\s+fd cb 09 be\\s+res 7,\\(iy\\+9\\)\n+\\s+3bc:\\s+cb bf\\s+res 7,a\n+\\s+3be:\\s+cb b8\\s+res 7,b\n+\\s+3c0:\\s+cb b9\\s+res 7,c\n+\\s+3c2:\\s+cb ba\\s+res 7,d\n+\\s+3c4:\\s+cb bb\\s+res 7,e\n+\\s+3c6:\\s+cb bc\\s+res 7,h\n+\\s+3c8:\\s+cb bd\\s+res 7,l\n+\\s+3ca:\\s+c9\\s+ret\n+\\s+3cb:\\s+d8\\s+ret c\n+\\s+3cc:\\s+f8\\s+ret m\n+\\s+3cd:\\s+d0\\s+ret nc\n+\\s+3ce:\\s+c0\\s+ret nz\n+\\s+3cf:\\s+f0\\s+ret p\n+\\s+3d0:\\s+e8\\s+ret pe\n+\\s+3d1:\\s+e0\\s+ret po\n+\\s+3d2:\\s+c8\\s+ret z\n+\\s+3d3:\\s+ed 4d\\s+reti\n+\\s+3d5:\\s+ed 45\\s+retn\n+\\s+3d7:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+3d9:\\s+dd cb 09 16\\s+rl \\(ix\\+9\\)\n+\\s+3dd:\\s+fd cb 09 16\\s+rl \\(iy\\+9\\)\n+\\s+3e1:\\s+cb 17\\s+rl a\n+\\s+3e3:\\s+cb 10\\s+rl b\n+\\s+3e5:\\s+cb 11\\s+rl c\n+\\s+3e7:\\s+cb 12\\s+rl d\n+\\s+3e9:\\s+cb 13\\s+rl e\n+\\s+3eb:\\s+cb 14\\s+rl h\n+\\s+3ed:\\s+cb 15\\s+rl l\n+\\s+3ef:\\s+17\\s+rla\n+\\s+3f0:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+3f2:\\s+dd cb 09 06\\s+rlc \\(ix\\+9\\)\n+\\s+3f6:\\s+fd cb 09 06\\s+rlc \\(iy\\+9\\)\n+\\s+3fa:\\s+cb 07\\s+rlc a\n+\\s+3fc:\\s+cb 00\\s+rlc b\n+\\s+3fe:\\s+cb 01\\s+rlc c\n+\\s+400:\\s+cb 02\\s+rlc d\n+\\s+402:\\s+cb 03\\s+rlc e\n+\\s+404:\\s+cb 04\\s+rlc h\n+\\s+406:\\s+cb 05\\s+rlc l\n+\\s+408:\\s+07\\s+rlca\n+\\s+409:\\s+ed 6f\\s+rld\n+\\s+40b:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+40d:\\s+dd cb 09 1e\\s+rr \\(ix\\+9\\)\n+\\s+411:\\s+fd cb 09 1e\\s+rr \\(iy\\+9\\)\n+\\s+415:\\s+cb 1f\\s+rr a\n+\\s+417:\\s+cb 18\\s+rr b\n+\\s+419:\\s+cb 19\\s+rr c\n+\\s+41b:\\s+cb 1a\\s+rr d\n+\\s+41d:\\s+cb 1b\\s+rr e\n+\\s+41f:\\s+cb 1c\\s+rr h\n+\\s+421:\\s+cb 1d\\s+rr l\n+\\s+423:\\s+1f\\s+rra\n+\\s+424:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+426:\\s+dd cb 09 0e\\s+rrc \\(ix\\+9\\)\n+\\s+42a:\\s+fd cb 09 0e\\s+rrc \\(iy\\+9\\)\n+\\s+42e:\\s+cb 0f\\s+rrc a\n+\\s+430:\\s+cb 08\\s+rrc b\n+\\s+432:\\s+cb 09\\s+rrc c\n+\\s+434:\\s+cb 0a\\s+rrc d\n+\\s+436:\\s+cb 0b\\s+rrc e\n+\\s+438:\\s+cb 0c\\s+rrc h\n+\\s+43a:\\s+cb 0d\\s+rrc l\n+\\s+43c:\\s+0f\\s+rrca\n+\\s+43d:\\s+ed 67\\s+rrd\n+\\s+43f:\\s+c7\\s+rst 0x00\n+\\s+440:\\s+cf\\s+rst 0x08\n+\\s+441:\\s+d7\\s+rst 0x10\n+\\s+442:\\s+df\\s+rst 0x18\n+\\s+443:\\s+e7\\s+rst 0x20\n+\\s+444:\\s+ef\\s+rst 0x28\n+\\s+445:\\s+f7\\s+rst 0x30\n+\\s+446:\\s+ff\\s+rst 0x38\n+\\s+447:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+448:\\s+dd 9e 09\\s+sbc a,\\(ix\\+9\\)\n+\\s+44b:\\s+fd 9e 09\\s+sbc a,\\(iy\\+9\\)\n+\\s+44e:\\s+de 03\\s+sbc a,0x03\n+\\s+450:\\s+9f\\s+sbc a,a\n+\\s+451:\\s+98\\s+sbc a,b\n+\\s+452:\\s+99\\s+sbc a,c\n+\\s+453:\\s+9a\\s+sbc a,d\n+\\s+454:\\s+9b\\s+sbc a,e\n+\\s+455:\\s+9c\\s+sbc a,h\n+\\s+456:\\s+9d\\s+sbc a,l\n+\\s+457:\\s+ed 42\\s+sbc hl,bc\n+\\s+459:\\s+ed 52\\s+sbc hl,de\n+\\s+45b:\\s+ed 62\\s+sbc hl,hl\n+\\s+45d:\\s+ed 72\\s+sbc hl,sp\n+\\s+45f:\\s+37\\s+scf\n+\\s+460:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+462:\\s+dd cb 09 c6\\s+set 0,\\(ix\\+9\\)\n+\\s+466:\\s+fd cb 09 c6\\s+set 0,\\(iy\\+9\\)\n+\\s+46a:\\s+cb c7\\s+set 0,a\n+\\s+46c:\\s+cb c0\\s+set 0,b\n+\\s+46e:\\s+cb c1\\s+set 0,c\n+\\s+470:\\s+cb c2\\s+set 0,d\n+\\s+472:\\s+cb c3\\s+set 0,e\n+\\s+474:\\s+cb c4\\s+set 0,h\n+\\s+476:\\s+cb c5\\s+set 0,l\n+\\s+478:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+47a:\\s+dd cb 09 ce\\s+set 1,\\(ix\\+9\\)\n+\\s+47e:\\s+fd cb 09 ce\\s+set 1,\\(iy\\+9\\)\n+\\s+482:\\s+cb cf\\s+set 1,a\n+\\s+484:\\s+cb c8\\s+set 1,b\n+\\s+486:\\s+cb c9\\s+set 1,c\n+\\s+488:\\s+cb ca\\s+set 1,d\n+\\s+48a:\\s+cb cb\\s+set 1,e\n+\\s+48c:\\s+cb cc\\s+set 1,h\n+\\s+48e:\\s+cb cd\\s+set 1,l\n+\\s+490:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+492:\\s+dd cb 09 d6\\s+set 2,\\(ix\\+9\\)\n+\\s+496:\\s+fd cb 09 d6\\s+set 2,\\(iy\\+9\\)\n+\\s+49a:\\s+cb d7\\s+set 2,a\n+\\s+49c:\\s+cb d0\\s+set 2,b\n+\\s+49e:\\s+cb d1\\s+set 2,c\n+\\s+4a0:\\s+cb d2\\s+set 2,d\n+\\s+4a2:\\s+cb d3\\s+set 2,e\n+\\s+4a4:\\s+cb d4\\s+set 2,h\n+\\s+4a6:\\s+cb d5\\s+set 2,l\n+\\s+4a8:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+4aa:\\s+dd cb 09 de\\s+set 3,\\(ix\\+9\\)\n+\\s+4ae:\\s+fd cb 09 de\\s+set 3,\\(iy\\+9\\)\n+\\s+4b2:\\s+cb df\\s+set 3,a\n+\\s+4b4:\\s+cb d8\\s+set 3,b\n+\\s+4b6:\\s+cb d9\\s+set 3,c\n+\\s+4b8:\\s+cb da\\s+set 3,d\n+\\s+4ba:\\s+cb db\\s+set 3,e\n+\\s+4bc:\\s+cb dc\\s+set 3,h\n+\\s+4be:\\s+cb dd\\s+set 3,l\n+\\s+4c0:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+4c2:\\s+dd cb 09 e6\\s+set 4,\\(ix\\+9\\)\n+\\s+4c6:\\s+fd cb 09 e6\\s+set 4,\\(iy\\+9\\)\n+\\s+4ca:\\s+cb e7\\s+set 4,a\n+\\s+4cc:\\s+cb e0\\s+set 4,b\n+\\s+4ce:\\s+cb e1\\s+set 4,c\n+\\s+4d0:\\s+cb e2\\s+set 4,d\n+\\s+4d2:\\s+cb e3\\s+set 4,e\n+\\s+4d4:\\s+cb e4\\s+set 4,h\n+\\s+4d6:\\s+cb e5\\s+set 4,l\n+\\s+4d8:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+4da:\\s+dd cb 09 ee\\s+set 5,\\(ix\\+9\\)\n+\\s+4de:\\s+fd cb 09 ee\\s+set 5,\\(iy\\+9\\)\n+\\s+4e2:\\s+cb ef\\s+set 5,a\n+\\s+4e4:\\s+cb e8\\s+set 5,b\n+\\s+4e6:\\s+cb e9\\s+set 5,c\n+\\s+4e8:\\s+cb ea\\s+set 5,d\n+\\s+4ea:\\s+cb eb\\s+set 5,e\n+\\s+4ec:\\s+cb ec\\s+set 5,h\n+\\s+4ee:\\s+cb ed\\s+set 5,l\n+\\s+4f0:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+4f2:\\s+dd cb 09 f6\\s+set 6,\\(ix\\+9\\)\n+\\s+4f6:\\s+fd cb 09 f6\\s+set 6,\\(iy\\+9\\)\n+\\s+4fa:\\s+cb f7\\s+set 6,a\n+\\s+4fc:\\s+cb f0\\s+set 6,b\n+\\s+4fe:\\s+cb f1\\s+set 6,c\n+\\s+500:\\s+cb f2\\s+set 6,d\n+\\s+502:\\s+cb f3\\s+set 6,e\n+\\s+504:\\s+cb f4\\s+set 6,h\n+\\s+506:\\s+cb f5\\s+set 6,l\n+\\s+508:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+50a:\\s+dd cb 09 fe\\s+set 7,\\(ix\\+9\\)\n+\\s+50e:\\s+fd cb 09 fe\\s+set 7,\\(iy\\+9\\)\n+\\s+512:\\s+cb ff\\s+set 7,a\n+\\s+514:\\s+cb f8\\s+set 7,b\n+\\s+516:\\s+cb f9\\s+set 7,c\n+\\s+518:\\s+cb fa\\s+set 7,d\n+\\s+51a:\\s+cb fb\\s+set 7,e\n+\\s+51c:\\s+cb fc\\s+set 7,h\n+\\s+51e:\\s+cb fd\\s+set 7,l\n+\\s+520:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+522:\\s+dd cb 09 26\\s+sla \\(ix\\+9\\)\n+\\s+526:\\s+fd cb 09 26\\s+sla \\(iy\\+9\\)\n+\\s+52a:\\s+cb 27\\s+sla a\n+\\s+52c:\\s+cb 20\\s+sla b\n+\\s+52e:\\s+cb 21\\s+sla c\n+\\s+530:\\s+cb 22\\s+sla d\n+\\s+532:\\s+cb 23\\s+sla e\n+\\s+534:\\s+cb 24\\s+sla h\n+\\s+536:\\s+cb 25\\s+sla l\n+\\s+538:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+53a:\\s+dd cb 09 2e\\s+sra \\(ix\\+9\\)\n+\\s+53e:\\s+fd cb 09 2e\\s+sra \\(iy\\+9\\)\n+\\s+542:\\s+cb 2f\\s+sra a\n+\\s+544:\\s+cb 28\\s+sra b\n+\\s+546:\\s+cb 29\\s+sra c\n+\\s+548:\\s+cb 2a\\s+sra d\n+\\s+54a:\\s+cb 2b\\s+sra e\n+\\s+54c:\\s+cb 2c\\s+sra h\n+\\s+54e:\\s+cb 2d\\s+sra l\n+\\s+550:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+552:\\s+dd cb 09 3e\\s+srl \\(ix\\+9\\)\n+\\s+556:\\s+fd cb 09 3e\\s+srl \\(iy\\+9\\)\n+\\s+55a:\\s+cb 3f\\s+srl a\n+\\s+55c:\\s+cb 38\\s+srl b\n+\\s+55e:\\s+cb 39\\s+srl c\n+\\s+560:\\s+cb 3a\\s+srl d\n+\\s+562:\\s+cb 3b\\s+srl e\n+\\s+564:\\s+cb 3c\\s+srl h\n+\\s+566:\\s+cb 3d\\s+srl l\n+\\s+568:\\s+96\\s+sub \\(hl\\)\n+\\s+569:\\s+dd 96 09\\s+sub \\(ix\\+9\\)\n+\\s+56c:\\s+fd 96 09\\s+sub \\(iy\\+9\\)\n+\\s+56f:\\s+d6 03\\s+sub 0x03\n+\\s+571:\\s+97\\s+sub a\n+\\s+572:\\s+90\\s+sub b\n+\\s+573:\\s+91\\s+sub c\n+\\s+574:\\s+92\\s+sub d\n+\\s+575:\\s+93\\s+sub e\n+\\s+576:\\s+94\\s+sub h\n+\\s+577:\\s+95\\s+sub l\n+\\s+578:\\s+ae\\s+xor \\(hl\\)\n+\\s+579:\\s+dd ae 09\\s+xor \\(ix\\+9\\)\n+\\s+57c:\\s+fd ae 09\\s+xor \\(iy\\+9\\)\n+\\s+57f:\\s+ee 03\\s+xor 0x03\n+\\s+581:\\s+af\\s+xor a\n+\\s+582:\\s+a8\\s+xor b\n+\\s+583:\\s+a9\\s+xor c\n+\\s+584:\\s+aa\\s+xor d\n+\\s+585:\\s+ab\\s+xor e\n+\\s+586:\\s+ac\\s+xor h\n+\\s+587:\\s+ad\\s+xor l"
    },
    {
      "sha": "53c630be9cf332f43f520c962b7fa51598206bf9",
      "filename": "gas/testsuite/gas/z80/sdcc.d",
      "status": "added",
      "additions": 152,
      "deletions": 0,
      "changes": 152,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/sdcc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/sdcc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/sdcc.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,152 @@\n+#name: SDCC compatibility mode\n+#source: sdcc.s -z80 -sdcc\n+#objdump: -d -j _CODE\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Disassembly of section _CODE:\n+\n+00000000 <_start>:\n+[   ]+0:[ \t]+21 04 00[    \t]+ld hl,0x0004\n+[   ]+3:[ \t]+8f[          \t]+adc a,a\n+[   ]+4:[ \t]+88[          \t]+adc a,b\n+[   ]+5:[ \t]+89[          \t]+adc a,c\n+[   ]+6:[ \t]+8a[          \t]+adc a,d\n+[   ]+7:[ \t]+8b[          \t]+adc a,e\n+[   ]+8:[ \t]+8c[          \t]+adc a,h\n+[   ]+9:[ \t]+8d[          \t]+adc a,l\n+[   ]+a:[ \t]+dd 8c[       \t]+adc a,ixh\n+[   ]+c:[ \t]+dd 8d[       \t]+adc a,ixl\n+[   ]+e:[ \t]+fd 8c[       \t]+adc a,iyh\n+[  ]+10:[ \t]+fd 8d[       \t]+adc a,iyl\n+[  ]+12:[ \t]+ce a5[       \t]+adc a,0xa5\n+[  ]+14:[ \t]+8e[          \t]+adc a,\\(hl\\)\n+[  ]+15:[ \t]+dd 8e 05[    \t]+adc a,\\(ix\\+5\\)\n+[  ]+18:[ \t]+fd 8e fe[    \t]+adc a,\\(iy\\-2\\)\n+[  ]+1b:[ \t]+87[          \t]+add a,a\n+[  ]+1c:[ \t]+80[          \t]+add a,b\n+[  ]+1d:[ \t]+81[          \t]+add a,c\n+[  ]+1e:[ \t]+82[          \t]+add a,d\n+[  ]+1f:[ \t]+83[          \t]+add a,e\n+[  ]+20:[ \t]+84[          \t]+add a,h\n+[  ]+21:[ \t]+85[          \t]+add a,l\n+[  ]+22:[ \t]+dd 84[       \t]+add a,ixh\n+[  ]+24:[ \t]+dd 85[       \t]+add a,ixl\n+[  ]+26:[ \t]+fd 84[       \t]+add a,iyh\n+[  ]+28:[ \t]+fd 85[       \t]+add a,iyl\n+[  ]+2a:[ \t]+c6 a5[       \t]+add a,0xa5\n+[  ]+2c:[ \t]+86[          \t]+add a,\\(hl\\)\n+[  ]+2d:[ \t]+dd 86 05[    \t]+add a,\\(ix\\+5\\)\n+[  ]+30:[ \t]+fd 86 fe[    \t]+add a,\\(iy\\-2\\)\n+[  ]+33:[ \t]+a7[          \t]+and a\n+[  ]+34:[ \t]+a0[          \t]+and b\n+[  ]+35:[ \t]+a1[          \t]+and c\n+[  ]+36:[ \t]+a2[          \t]+and d\n+[  ]+37:[ \t]+a3[          \t]+and e\n+[  ]+38:[ \t]+a4[          \t]+and h\n+[  ]+39:[ \t]+a5[          \t]+and l\n+[  ]+3a:[ \t]+dd a4[       \t]+and ixh\n+[  ]+3c:[ \t]+dd a5[       \t]+and ixl\n+[  ]+3e:[ \t]+fd a4[       \t]+and iyh\n+[  ]+40:[ \t]+fd a5[       \t]+and iyl\n+[  ]+42:[ \t]+e6 a5[       \t]+and 0xa5\n+[  ]+44:[ \t]+a6[          \t]+and \\(hl\\)\n+[  ]+45:[ \t]+dd a6 05[    \t]+and \\(ix\\+5\\)\n+[  ]+48:[ \t]+fd a6 fe[    \t]+and \\(iy\\-2\\)\n+[  ]+4b:[ \t]+bf[          \t]+cp a\n+[  ]+4c:[ \t]+b8[          \t]+cp b\n+[  ]+4d:[ \t]+b9[          \t]+cp c\n+[  ]+4e:[ \t]+ba[          \t]+cp d\n+[  ]+4f:[ \t]+bb[          \t]+cp e\n+[  ]+50:[ \t]+bc[          \t]+cp h\n+[  ]+51:[ \t]+bd[          \t]+cp l\n+[  ]+52:[ \t]+dd bc[       \t]+cp ixh\n+[  ]+54:[ \t]+dd bd[       \t]+cp ixl\n+[  ]+56:[ \t]+fd bc[       \t]+cp iyh\n+[  ]+58:[ \t]+fd bd[       \t]+cp iyl\n+[  ]+5a:[ \t]+fe a5[       \t]+cp 0xa5\n+[  ]+5c:[ \t]+be[          \t]+cp \\(hl\\)\n+[  ]+5d:[ \t]+dd be 05[    \t]+cp \\(ix\\+5\\)\n+[  ]+60:[ \t]+fd be fe[    \t]+cp \\(iy\\-2\\)\n+[  ]+63:[ \t]+b7[          \t]+or a\n+[  ]+64:[ \t]+b0[          \t]+or b\n+[  ]+65:[ \t]+b1[          \t]+or c\n+[  ]+66:[ \t]+b2[          \t]+or d\n+[  ]+67:[ \t]+b3[          \t]+or e\n+[  ]+68:[ \t]+b4[          \t]+or h\n+[  ]+69:[ \t]+b5[          \t]+or l\n+[  ]+6a:[ \t]+dd b4[       \t]+or ixh\n+[  ]+6c:[ \t]+dd b5[       \t]+or ixl\n+[  ]+6e:[ \t]+fd b4[       \t]+or iyh\n+[  ]+70:[ \t]+fd b5[       \t]+or iyl\n+[  ]+72:[ \t]+f6 a5[       \t]+or 0xa5\n+[  ]+74:[ \t]+b6[          \t]+or \\(hl\\)\n+[  ]+75:[ \t]+dd b6 05[    \t]+or \\(ix\\+5\\)\n+[  ]+78:[ \t]+fd b6 fe[    \t]+or \\(iy\\-2\\)\n+[  ]+7b:[ \t]+9f[          \t]+sbc a,a\n+[  ]+7c:[ \t]+98[          \t]+sbc a,b\n+[  ]+7d:[ \t]+99[          \t]+sbc a,c\n+[  ]+7e:[ \t]+9a[          \t]+sbc a,d\n+[  ]+7f:[ \t]+9b[          \t]+sbc a,e\n+[  ]+80:[ \t]+9c[          \t]+sbc a,h\n+[  ]+81:[ \t]+9d[          \t]+sbc a,l\n+[  ]+82:[ \t]+dd 9c[       \t]+sbc a,ixh\n+[  ]+84:[ \t]+dd 9d[       \t]+sbc a,ixl\n+[  ]+86:[ \t]+fd 9c[       \t]+sbc a,iyh\n+[  ]+88:[ \t]+fd 9d[       \t]+sbc a,iyl\n+[  ]+8a:[ \t]+de a5[       \t]+sbc a,0xa5\n+[  ]+8c:[ \t]+9e[          \t]+sbc a,\\(hl\\)\n+[  ]+8d:[ \t]+dd 9e 05[    \t]+sbc a,\\(ix\\+5\\)\n+[  ]+90:[ \t]+fd 9e fe[    \t]+sbc a,\\(iy\\-2\\)\n+[  ]+93:[ \t]+97[          \t]+sub a\n+[  ]+94:[ \t]+90[          \t]+sub b\n+[  ]+95:[ \t]+91[          \t]+sub c\n+[  ]+96:[ \t]+92[          \t]+sub d\n+[  ]+97:[ \t]+93[          \t]+sub e\n+[  ]+98:[ \t]+94[          \t]+sub h\n+[  ]+99:[ \t]+95[          \t]+sub l\n+[  ]+9a:[ \t]+dd 94[       \t]+sub ixh\n+[  ]+9c:[ \t]+dd 95[       \t]+sub ixl\n+[  ]+9e:[ \t]+fd 94[       \t]+sub iyh\n+[  ]+a0:[ \t]+fd 95[       \t]+sub iyl\n+[  ]+a2:[ \t]+d6 a5[       \t]+sub 0xa5\n+[  ]+a4:[ \t]+96[          \t]+sub \\(hl\\)\n+[  ]+a5:[ \t]+dd 96 05[    \t]+sub \\(ix\\+5\\)\n+[  ]+a8:[ \t]+fd 96 fe[    \t]+sub \\(iy\\-2\\)\n+[  ]+ab:[ \t]+af[          \t]+xor a\n+[  ]+ac:[ \t]+a8[          \t]+xor b\n+[  ]+ad:[ \t]+a9[          \t]+xor c\n+[  ]+ae:[ \t]+aa[          \t]+xor d\n+[  ]+af:[ \t]+ab[          \t]+xor e\n+[  ]+b0:[ \t]+ac[          \t]+xor h\n+[  ]+b1:[ \t]+ad[          \t]+xor l\n+[  ]+b2:[ \t]+dd ac[       \t]+xor ixh\n+[  ]+b4:[ \t]+dd ad[       \t]+xor ixl\n+[  ]+b6:[ \t]+fd ac[       \t]+xor iyh\n+[  ]+b8:[ \t]+fd ad[       \t]+xor iyl\n+[  ]+ba:[ \t]+ee a5[       \t]+xor 0xa5\n+[  ]+bc:[ \t]+ae[          \t]+xor \\(hl\\)\n+[  ]+bd:[ \t]+dd ae 05[    \t]+xor \\(ix\\+5\\)\n+[  ]+c0:[ \t]+fd ae fe[    \t]+xor \\(iy\\-2\\)\n+[  ]+c3:[ \t]+c3 03 00[    \t]+jp 0x0003\n+[  ]+c6:[ \t]+c3 1b 00[    \t]+jp 0x001b\n+[  ]+c9:[ \t]+c3 33 00[    \t]+jp 0x0033\n+[  ]+cc:[ \t]+c3 4b 00[    \t]+jp 0x004b\n+[  ]+cf:[ \t]+c3 7b 00[    \t]+jp 0x007b\n+[  ]+d2:[ \t]+c3 93 00[    \t]+jp 0x0093\n+[  ]+d5:[ \t]+c3 ab 00[    \t]+jp 0x00ab\n+[  ]+d8:[ \t]+21 00 00[    \t]+ld hl,0x0000\n+[  ]+db:[ \t]+36 00[       \t]+ld \\(hl\\),0x00\n+[  ]+dd:[ \t]+23[          \t]+inc hl\n+[  ]+de:[ \t]+36 00[       \t]+ld \\(hl\\),0x00\n+[  ]+e0:[ \t]+18 fb[       \t]+jr 0x00dd\n+\n+000000e2 <_finish>:\n+[  ]+e2:[ \t]+fd 7e 02[    \t]+ld a,\\(iy\\+2\\)\n+[  ]+e5:[ \t]+dd 77 ff[    \t]+ld \\(ix\\-1\\),a\n+[  ]+e8:[ \t]+3a 34 12[    \t]+ld a,\\(0x1234\\)\n+\n+[  ]+eb:[ \t]+c9[          \t]+ret\n+[  ]+ec:[ \t]+27[          \t]+daa\n+[  ]+ed:[ \t]+1f[          \t]+rra\n+[  ]+ee:[ \t]+2f[          \t]+cpl"
    },
    {
      "sha": "dae75c5f317865b74155719ccc1e69a51bc3201e",
      "filename": "gas/testsuite/gas/z80/sdcc.s",
      "status": "added",
      "additions": 167,
      "deletions": 0,
      "changes": 167,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/sdcc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/sdcc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/sdcc.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,167 @@\n+        .module longpolls\n+        .optsdcc -mz80\n+\n+valueadr = 0x1234\n+\n+\t.globl\tfunction\n+\t.globl\t_start\n+\t.globl\t_finish\n+\n+\t.area\t_DABS (ABS)\n+\t.area\t_HOME\n+\t.area\t_CODE\n+_start::\n+;comment\n+\tld      hl, #4+0\n+00000$:\n+\tadc\ta, a\n+\tadc\ta, b\n+\tadc\ta, c\n+\tadc\ta, d\n+\tadc\ta, e\n+\tadc\ta, h\n+\tadc\ta, l\n+\tadc\ta, ixh\n+\tadc\ta, ixl\n+\tadc\ta, iyh\n+\tadc\ta, iyl\n+\tadc\ta, #0xa5\n+\tadc\ta, (hl)\n+\tadc\ta, 5 (ix)\n+\tadc\ta, -2 (iy)\n+00100$:\n+\tadd\ta, a\n+\tadd\ta, b\n+\tadd\ta, c\n+\tadd\ta, d\n+\tadd\ta, e\n+\tadd\ta, h\n+\tadd\ta, l\n+\tadd\ta, ixh\n+\tadd\ta, ixl\n+\tadd\ta, iyh\n+\tadd\ta, iyl\n+\tadd\ta, #0xa5\n+\tadd\ta, (hl)\n+\tadd\ta, 5 (ix)\n+\tadd\ta, -2 (iy)\n+00200$:\n+\tand\ta, a\n+\tand\ta, b\n+\tand\ta, c\n+\tand\ta, d\n+\tand\ta, e\n+\tand\ta, h\n+\tand\ta, l\n+\tand\ta, ixh\n+\tand\ta, ixl\n+\tand\ta, iyh\n+\tand\ta, iyl\n+\tand\ta, #0xa5\n+\tand\ta, (hl)\n+\tand\ta, 5 (ix)\n+\tand\ta, -2 (iy)\n+00300$:\n+\tcp\ta, a\n+\tcp\ta, b\n+\tcp\ta, c\n+\tcp\ta, d\n+\tcp\ta, e\n+\tcp\ta, h\n+\tcp\ta, l\n+\tcp\ta, ixh\n+\tcp\ta, ixl\n+\tcp\ta, iyh\n+\tcp\ta, iyl\n+\tcp\ta, #0xa5\n+\tcp\ta, (hl)\n+\tcp\ta, 5 (ix)\n+\tcp\ta, -2 (iy)\n+00400$:\n+\tor\ta, a\n+\tor\ta, b\n+\tor\ta, c\n+\tor\ta, d\n+\tor\ta, e\n+\tor\ta, h\n+\tor\ta, l\n+\tor\ta, ixh\n+\tor\ta, ixl\n+\tor\ta, iyh\n+\tor\ta, iyl\n+\tor\ta, #0xa5\n+\tor\ta, (hl)\n+\tor\ta, 5 (ix)\n+\tor\ta, -2 (iy)\n+00500$:\n+\tsbc\ta, a\n+\tsbc\ta, b\n+\tsbc\ta, c\n+\tsbc\ta, d\n+\tsbc\ta, e\n+\tsbc\ta, h\n+\tsbc\ta, l\n+\tsbc\ta, ixh\n+\tsbc\ta, ixl\n+\tsbc\ta, iyh\n+\tsbc\ta, iyl\n+\tsbc\ta, #0xa5\n+\tsbc\ta, (hl)\n+\tsbc\ta, 5 (ix)\n+\tsbc\ta, -2 (iy)\n+00600$:\n+\tsub\ta, a\n+\tsub\ta, b\n+\tsub\ta, c\n+\tsub\ta, d\n+\tsub\ta, e\n+\tsub\ta, h\n+\tsub\ta, l\n+\tsub\ta, ixh\n+\tsub\ta, ixl\n+\tsub\ta, iyh\n+\tsub\ta, iyl\n+\tsub\ta, #0xa5\n+\tsub\ta, (hl)\n+\tsub\ta, 5 (ix)\n+\tsub\ta, -2 (iy)\n+00700$:\n+\txor\ta, a\n+\txor\ta, b\n+\txor\ta, c\n+\txor\ta, d\n+\txor\ta, e\n+\txor\ta, h\n+\txor\ta, l\n+\txor\ta, ixh\n+\txor\ta, ixl\n+\txor\ta, iyh\n+\txor\ta, iyl\n+\txor\ta, #0xa5\n+\txor\ta, (hl)\n+\txor\ta, 5 (ix)\n+\txor\ta, -2 (iy)\n+\n+\tjp\t0$\n+\tjp\t100$\n+\tjp\t200$\n+\tjp\t300$\n+\tjp\t500$\n+\tjp\t600$\n+\tjp\t700$\n+.L_func:\n+\tld\thl,0\n+\tld\t(hl),#<function\n+00100$:\n+\tinc\thl\n+\tld\t(hl),#>function\n+00600$:\n+\tjr\t100$\n+_finish::\n+\tld\ta, 2 (iy)\n+\tld\t-1 (ix), a\n+\tld\ta, (#valueadr+#0)\n+\tret\n+\t.dw\t#0x1f27\n+\t.db\t#0x2f\n+\t.end"
    },
    {
      "sha": "c83197cc3b0ad269fa6b957857d70815ab012b56",
      "filename": "gas/testsuite/gas/z80/set.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/set.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/set.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/set.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,8 @@\n+#objdump: -s -j .data\n+#name: .set redefinitions\n+\n+.*: .*\n+\n+Contents of section .data:\n+ 0000 00000000 04000000 08000000 0c000000[ \t]+................[ \t]*\n+#pass"
    },
    {
      "sha": "75fddc5e6ffaf52db634e79901803ccc0d0ab07a",
      "filename": "gas/testsuite/gas/z80/set.s",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/set.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/set.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/set.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+\t.data\n+_start:\n+.set\tx, .-_start\n+.long\tx\n+.balign 4\n+\t.set\tx, .-_start\n+\t.long\tx\n+.L_xx:\t.set\tx, .-_start\n+\t.long\tx\n+.L_yy:.set\tx, .-_start\n+\t.long\tx"
    },
    {
      "sha": "cd4223098e531140b853d5f5a4ab1a7e7785d2ce",
      "filename": "gas/testsuite/gas/z80/strings.d",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/strings.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/strings.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/strings.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,14 @@\n+#name: strings test\n+#objdump: -s -j .data\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+Contents of section \\.data:\n+ 0000 2e646220 74657874 5c6e3833 37343830.*\n+ 0010 44454642 20746578 745c6e64 38373833.*\n+ 0020 4445464d 20746578 745c6e33 37383537.*\n+ 0030 44422074 6578745c 6e333837 39383337.*\n+ 0040 2e617363 69692074 6578743a bf0c0a00.*\n+ 0050 2e617363 697a2074 6578740a 39393900.*\n+ 0060 2e737472 696e6720 74657874 0a090000.*\n+#pass"
    },
    {
      "sha": "3859de2653a63438b87e84f34adbca1c51b15a6b",
      "filename": "gas/testsuite/gas/z80/strings.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/strings.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/strings.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/strings.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,9 @@\n+\t.data\n+\t.db\t\".db text\\n837480\"\n+\tDEFB\t\"DEFB text\\nd8783\"\n+\tDEFM\t\"DEFM text\\n37857\"\n+\tDB\t\"DB text\\n3879837\"\n+\t.ascii\t\".ascii text\\72\\277\\f\\n\\0\"\n+\t.asciz\t\".asciz text\\n999\"\n+\t.string\t\".string text\\n\\t\\0\"\n+\t.end"
    },
    {
      "sha": "5c2182a22bc305f7dc83de7d28f5898029853c91",
      "filename": "gas/testsuite/gas/z80/suffix.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/suffix.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/suffix.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/suffix.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -6,7 +6,7 @@\n RELOCATION RECORDS FOR \\[.data\\]:\n OFFSET[ \t]+TYPE[ \t]+VALUE[ \t]*\n 00000002[ \t]+r_imm16[ \t]+.data[ \t]*\n-00000014[ \t]+r_imm16[ \t]+.data[ \t]*\n+00000014[ \t]+r_imm16[ \t]+.data(\\+0x00000016)?[ \t]*\n \n \n Contents of section .data:"
    },
    {
      "sha": "6f3f8f9afcf70de38b777c31c89a0128a2944177",
      "filename": "gas/testsuite/gas/z80/z180.d",
      "status": "added",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,42 @@\n+#as: -z180\n+#objdump: -d\n+#name: Z180 specific instructions\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+ed 38 05\\s+in0 a,\\(0x05\\)\n+\\s+3:\\s+ed 00 05\\s+in0 b,\\(0x05\\)\n+\\s+6:\\s+ed 08 05\\s+in0 c,\\(0x05\\)\n+\\s+9:\\s+ed 10 05\\s+in0 d,\\(0x05\\)\n+\\s+c:\\s+ed 18 05\\s+in0 e,\\(0x05\\)\n+\\s+f:\\s+ed 20 05\\s+in0 h,\\(0x05\\)\n+\\s+12:\\s+ed 28 05\\s+in0 l,\\(0x05\\)\n+\\s+15:\\s+ed 39 05\\s+out0 \\(0x05\\),a\n+\\s+18:\\s+ed 01 05\\s+out0 \\(0x05\\),b\n+\\s+1b:\\s+ed 09 05\\s+out0 \\(0x05\\),c\n+\\s+1e:\\s+ed 11 05\\s+out0 \\(0x05\\),d\n+\\s+21:\\s+ed 19 05\\s+out0 \\(0x05\\),e\n+\\s+24:\\s+ed 21 05\\s+out0 \\(0x05\\),h\n+\\s+27:\\s+ed 29 05\\s+out0 \\(0x05\\),l\n+\\s+2a:\\s+ed 4c\\s+mlt bc\n+\\s+2c:\\s+ed 5c\\s+mlt de\n+\\s+2e:\\s+ed 6c\\s+mlt hl\n+\\s+30:\\s+ed 7c\\s+mlt sp\n+\\s+32:\\s+ed 3c\\s+tst a\n+\\s+34:\\s+ed 04\\s+tst b\n+\\s+36:\\s+ed 0c\\s+tst c\n+\\s+38:\\s+ed 14\\s+tst d\n+\\s+3a:\\s+ed 1c\\s+tst e\n+\\s+3c:\\s+ed 24\\s+tst h\n+\\s+3e:\\s+ed 2c\\s+tst l\n+\\s+40:\\s+ed 34\\s+tst \\(hl\\)\n+\\s+42:\\s+ed 64 0f\\s+tst 0x0f\n+\\s+45:\\s+ed 74 f0\\s+tstio 0xf0\n+\\s+48:\\s+ed 76\\s+slp\n+\\s+4a:\\s+ed 83\\s+otim\n+\\s+4c:\\s+ed 8b\\s+otdm\n+\\s+4e:\\s+ed 93\\s+otimr\n+\\s+50:\\s+ed 9b\\s+otdmr"
    },
    {
      "sha": "e4ef13a8b99935ee7fdbe8b337825abf5bb3c2a3",
      "filename": "gas/testsuite/gas/z80/z180.s",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,50 @@\n+\t.text\n+\t.org\t0\n+\t;; Zylog Z180 instructions\n+\n+; IN0 group\n+\tin0 a,(0x5)\n+\tin0 b,(0x5)\n+\tin0 c,(0x5)\n+\tin0 d,(0x5)\n+\tin0 e,(0x5)\n+\tin0 h,(0x5)\n+\tin0 l,(0x5)\n+\n+; OUT0 group\n+\tout0 (0x5),a\n+\tout0 (0x5),b\n+\tout0 (0x5),c\n+\tout0 (0x5),d\n+\tout0 (0x5),e\n+\tout0 (0x5),h\n+\tout0 (0x5),l\n+\n+; MLT group\n+\tmlt bc\n+\tmlt de\n+\tmlt hl\n+\tmlt sp\n+\n+; TST group\n+\ttst a\n+\ttst b\n+\ttst c\n+\ttst d\n+\ttst e\n+\ttst h\n+\ttst l\n+\ttst (hl)\n+\ttst 0fh\n+\n+; TSTIO instruction\n+\ttstio   0f0h\n+\n+; SLP instruction\n+\tslp\n+\n+; Additional block I/O instructions\n+\tOTIM\n+\tOTDM\n+\tOTIMR\n+\tOTDMR"
    },
    {
      "sha": "e6211b6dcb3406e2e1db7f71329ecb3bd2a8c3bc",
      "filename": "gas/testsuite/gas/z80/z180_z80_doc.d",
      "status": "added",
      "additions": 707,
      "deletions": 0,
      "changes": 707,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180_z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z180_z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z180_z80_doc.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,707 @@\n+#as: -z180\n+#objdump: -d\n+#name: All Z80 documented instructions for Z180\n+#source: z80_doc.s\n+#source: z180.s\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+1:\\s+dd 8e 09\\s+adc a,\\(ix\\+9\\)\n+\\s+4:\\s+fd 8e 09\\s+adc a,\\(iy\\+9\\)\n+\\s+7:\\s+ce 03\\s+adc a,0x03\n+\\s+9:\\s+8f\\s+adc a,a\n+\\s+a:\\s+88\\s+adc a,b\n+\\s+b:\\s+89\\s+adc a,c\n+\\s+c:\\s+8a\\s+adc a,d\n+\\s+d:\\s+8b\\s+adc a,e\n+\\s+e:\\s+8c\\s+adc a,h\n+\\s+f:\\s+8d\\s+adc a,l\n+\\s+10:\\s+ed 4a\\s+adc hl,bc\n+\\s+12:\\s+ed 5a\\s+adc hl,de\n+\\s+14:\\s+ed 6a\\s+adc hl,hl\n+\\s+16:\\s+ed 7a\\s+adc hl,sp\n+\\s+18:\\s+86\\s+add a,\\(hl\\)\n+\\s+19:\\s+dd 86 09\\s+add a,\\(ix\\+9\\)\n+\\s+1c:\\s+fd 86 09\\s+add a,\\(iy\\+9\\)\n+\\s+1f:\\s+c6 03\\s+add a,0x03\n+\\s+21:\\s+87\\s+add a,a\n+\\s+22:\\s+80\\s+add a,b\n+\\s+23:\\s+81\\s+add a,c\n+\\s+24:\\s+82\\s+add a,d\n+\\s+25:\\s+83\\s+add a,e\n+\\s+26:\\s+84\\s+add a,h\n+\\s+27:\\s+85\\s+add a,l\n+\\s+28:\\s+09\\s+add hl,bc\n+\\s+29:\\s+19\\s+add hl,de\n+\\s+2a:\\s+29\\s+add hl,hl\n+\\s+2b:\\s+39\\s+add hl,sp\n+\\s+2c:\\s+dd 09\\s+add ix,bc\n+\\s+2e:\\s+dd 19\\s+add ix,de\n+\\s+30:\\s+dd 29\\s+add ix,ix\n+\\s+32:\\s+dd 39\\s+add ix,sp\n+\\s+34:\\s+fd 09\\s+add iy,bc\n+\\s+36:\\s+fd 19\\s+add iy,de\n+\\s+38:\\s+fd 29\\s+add iy,iy\n+\\s+3a:\\s+fd 39\\s+add iy,sp\n+\\s+3c:\\s+a6\\s+and \\(hl\\)\n+\\s+3d:\\s+dd a6 09\\s+and \\(ix\\+9\\)\n+\\s+40:\\s+fd a6 09\\s+and \\(iy\\+9\\)\n+\\s+43:\\s+e6 03\\s+and 0x03\n+\\s+45:\\s+a7\\s+and a\n+\\s+46:\\s+a0\\s+and b\n+\\s+47:\\s+a1\\s+and c\n+\\s+48:\\s+a2\\s+and d\n+\\s+49:\\s+a3\\s+and e\n+\\s+4a:\\s+a4\\s+and h\n+\\s+4b:\\s+a5\\s+and l\n+\\s+4c:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+4e:\\s+dd cb 09 46\\s+bit 0,\\(ix\\+9\\)\n+\\s+52:\\s+fd cb 09 46\\s+bit 0,\\(iy\\+9\\)\n+\\s+56:\\s+cb 47\\s+bit 0,a\n+\\s+58:\\s+cb 40\\s+bit 0,b\n+\\s+5a:\\s+cb 41\\s+bit 0,c\n+\\s+5c:\\s+cb 42\\s+bit 0,d\n+\\s+5e:\\s+cb 43\\s+bit 0,e\n+\\s+60:\\s+cb 44\\s+bit 0,h\n+\\s+62:\\s+cb 45\\s+bit 0,l\n+\\s+64:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+66:\\s+dd cb 09 4e\\s+bit 1,\\(ix\\+9\\)\n+\\s+6a:\\s+fd cb 09 4e\\s+bit 1,\\(iy\\+9\\)\n+\\s+6e:\\s+cb 4f\\s+bit 1,a\n+\\s+70:\\s+cb 48\\s+bit 1,b\n+\\s+72:\\s+cb 49\\s+bit 1,c\n+\\s+74:\\s+cb 4a\\s+bit 1,d\n+\\s+76:\\s+cb 4b\\s+bit 1,e\n+\\s+78:\\s+cb 4c\\s+bit 1,h\n+\\s+7a:\\s+cb 4d\\s+bit 1,l\n+\\s+7c:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+7e:\\s+dd cb 09 56\\s+bit 2,\\(ix\\+9\\)\n+\\s+82:\\s+fd cb 09 56\\s+bit 2,\\(iy\\+9\\)\n+\\s+86:\\s+cb 57\\s+bit 2,a\n+\\s+88:\\s+cb 50\\s+bit 2,b\n+\\s+8a:\\s+cb 51\\s+bit 2,c\n+\\s+8c:\\s+cb 52\\s+bit 2,d\n+\\s+8e:\\s+cb 53\\s+bit 2,e\n+\\s+90:\\s+cb 54\\s+bit 2,h\n+\\s+92:\\s+cb 55\\s+bit 2,l\n+\\s+94:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+96:\\s+dd cb 09 5e\\s+bit 3,\\(ix\\+9\\)\n+\\s+9a:\\s+fd cb 09 5e\\s+bit 3,\\(iy\\+9\\)\n+\\s+9e:\\s+cb 5f\\s+bit 3,a\n+\\s+a0:\\s+cb 58\\s+bit 3,b\n+\\s+a2:\\s+cb 59\\s+bit 3,c\n+\\s+a4:\\s+cb 5a\\s+bit 3,d\n+\\s+a6:\\s+cb 5b\\s+bit 3,e\n+\\s+a8:\\s+cb 5c\\s+bit 3,h\n+\\s+aa:\\s+cb 5d\\s+bit 3,l\n+\\s+ac:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+ae:\\s+dd cb 09 66\\s+bit 4,\\(ix\\+9\\)\n+\\s+b2:\\s+fd cb 09 66\\s+bit 4,\\(iy\\+9\\)\n+\\s+b6:\\s+cb 67\\s+bit 4,a\n+\\s+b8:\\s+cb 60\\s+bit 4,b\n+\\s+ba:\\s+cb 61\\s+bit 4,c\n+\\s+bc:\\s+cb 62\\s+bit 4,d\n+\\s+be:\\s+cb 63\\s+bit 4,e\n+\\s+c0:\\s+cb 64\\s+bit 4,h\n+\\s+c2:\\s+cb 65\\s+bit 4,l\n+\\s+c4:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+c6:\\s+dd cb 09 6e\\s+bit 5,\\(ix\\+9\\)\n+\\s+ca:\\s+fd cb 09 6e\\s+bit 5,\\(iy\\+9\\)\n+\\s+ce:\\s+cb 6f\\s+bit 5,a\n+\\s+d0:\\s+cb 68\\s+bit 5,b\n+\\s+d2:\\s+cb 69\\s+bit 5,c\n+\\s+d4:\\s+cb 6a\\s+bit 5,d\n+\\s+d6:\\s+cb 6b\\s+bit 5,e\n+\\s+d8:\\s+cb 6c\\s+bit 5,h\n+\\s+da:\\s+cb 6d\\s+bit 5,l\n+\\s+dc:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+de:\\s+dd cb 09 76\\s+bit 6,\\(ix\\+9\\)\n+\\s+e2:\\s+fd cb 09 76\\s+bit 6,\\(iy\\+9\\)\n+\\s+e6:\\s+cb 77\\s+bit 6,a\n+\\s+e8:\\s+cb 70\\s+bit 6,b\n+\\s+ea:\\s+cb 71\\s+bit 6,c\n+\\s+ec:\\s+cb 72\\s+bit 6,d\n+\\s+ee:\\s+cb 73\\s+bit 6,e\n+\\s+f0:\\s+cb 74\\s+bit 6,h\n+\\s+f2:\\s+cb 75\\s+bit 6,l\n+\\s+f4:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+f6:\\s+dd cb 09 7e\\s+bit 7,\\(ix\\+9\\)\n+\\s+fa:\\s+fd cb 09 7e\\s+bit 7,\\(iy\\+9\\)\n+\\s+fe:\\s+cb 7f\\s+bit 7,a\n+\\s+100:\\s+cb 78\\s+bit 7,b\n+\\s+102:\\s+cb 79\\s+bit 7,c\n+\\s+104:\\s+cb 7a\\s+bit 7,d\n+\\s+106:\\s+cb 7b\\s+bit 7,e\n+\\s+108:\\s+cb 7c\\s+bit 7,h\n+\\s+10a:\\s+cb 7d\\s+bit 7,l\n+\\s+10c:\\s+cd 34 12\\s+call 0x1234\n+\\s+10f:\\s+dc 34 12\\s+call c,0x1234\n+\\s+112:\\s+fc 34 12\\s+call m,0x1234\n+\\s+115:\\s+d4 34 12\\s+call nc,0x1234\n+\\s+118:\\s+c4 34 12\\s+call nz,0x1234\n+\\s+11b:\\s+f4 34 12\\s+call p,0x1234\n+\\s+11e:\\s+ec 34 12\\s+call pe,0x1234\n+\\s+121:\\s+e4 34 12\\s+call po,0x1234\n+\\s+124:\\s+cc 34 12\\s+call z,0x1234\n+\\s+127:\\s+3f\\s+ccf\n+\\s+128:\\s+be\\s+cp \\(hl\\)\n+\\s+129:\\s+dd be 09\\s+cp \\(ix\\+9\\)\n+\\s+12c:\\s+fd be 09\\s+cp \\(iy\\+9\\)\n+\\s+12f:\\s+fe 03\\s+cp 0x03\n+\\s+131:\\s+bf\\s+cp a\n+\\s+132:\\s+b8\\s+cp b\n+\\s+133:\\s+b9\\s+cp c\n+\\s+134:\\s+ba\\s+cp d\n+\\s+135:\\s+bb\\s+cp e\n+\\s+136:\\s+bc\\s+cp h\n+\\s+137:\\s+bd\\s+cp l\n+\\s+138:\\s+ed a9\\s+cpd\n+\\s+13a:\\s+ed b9\\s+cpdr\n+\\s+13c:\\s+ed a1\\s+cpi\n+\\s+13e:\\s+ed b1\\s+cpir\n+\\s+140:\\s+2f\\s+cpl\n+\\s+141:\\s+27\\s+daa\n+\\s+142:\\s+35\\s+dec \\(hl\\)\n+\\s+143:\\s+dd 35 09\\s+dec \\(ix\\+9\\)\n+\\s+146:\\s+fd 35 09\\s+dec \\(iy\\+9\\)\n+\\s+149:\\s+3d\\s+dec a\n+\\s+14a:\\s+05\\s+dec b\n+\\s+14b:\\s+0b\\s+dec bc\n+\\s+14c:\\s+0d\\s+dec c\n+\\s+14d:\\s+15\\s+dec d\n+\\s+14e:\\s+1b\\s+dec de\n+\\s+14f:\\s+1d\\s+dec e\n+\\s+150:\\s+25\\s+dec h\n+\\s+151:\\s+2b\\s+dec hl\n+\\s+152:\\s+dd 2b\\s+dec ix\n+\\s+154:\\s+fd 2b\\s+dec iy\n+\\s+156:\\s+2d\\s+dec l\n+\\s+157:\\s+3b\\s+dec sp\n+\\s+158:\\s+f3\\s+di\n+\\s+159:\\s+10 05\\s+djnz 0x0160\n+\\s+15b:\\s+fb\\s+ei\n+\\s+15c:\\s+e3\\s+ex \\(sp\\),hl\n+\\s+15d:\\s+dd e3\\s+ex \\(sp\\),ix\n+\\s+15f:\\s+fd e3\\s+ex \\(sp\\),iy\n+\\s+161:\\s+08\\s+ex af,af'\n+\\s+162:\\s+eb\\s+ex de,hl\n+\\s+163:\\s+d9\\s+exx\n+\\s+164:\\s+76\\s+halt\n+\\s+165:\\s+ed 46\\s+im 0\n+\\s+167:\\s+ed 56\\s+im 1\n+\\s+169:\\s+ed 5e\\s+im 2\n+\\s+16b:\\s+ed 78\\s+in a,\\(c\\)\n+\\s+16d:\\s+db 03\\s+in a,\\(0x03\\)\n+\\s+16f:\\s+ed 40\\s+in b,\\(c\\)\n+\\s+171:\\s+ed 48\\s+in c,\\(c\\)\n+\\s+173:\\s+ed 50\\s+in d,\\(c\\)\n+\\s+175:\\s+ed 58\\s+in e,\\(c\\)\n+\\s+177:\\s+ed 60\\s+in h,\\(c\\)\n+\\s+179:\\s+ed 68\\s+in l,\\(c\\)\n+\\s+17b:\\s+34\\s+inc \\(hl\\)\n+\\s+17c:\\s+dd 34 09\\s+inc \\(ix\\+9\\)\n+\\s+17f:\\s+fd 34 09\\s+inc \\(iy\\+9\\)\n+\\s+182:\\s+3c\\s+inc a\n+\\s+183:\\s+04\\s+inc b\n+\\s+184:\\s+03\\s+inc bc\n+\\s+185:\\s+0c\\s+inc c\n+\\s+186:\\s+14\\s+inc d\n+\\s+187:\\s+13\\s+inc de\n+\\s+188:\\s+1c\\s+inc e\n+\\s+189:\\s+24\\s+inc h\n+\\s+18a:\\s+23\\s+inc hl\n+\\s+18b:\\s+dd 23\\s+inc ix\n+\\s+18d:\\s+fd 23\\s+inc iy\n+\\s+18f:\\s+2c\\s+inc l\n+\\s+190:\\s+33\\s+inc sp\n+\\s+191:\\s+ed aa\\s+ind\n+\\s+193:\\s+ed ba\\s+indr\n+\\s+195:\\s+ed a2\\s+ini\n+\\s+197:\\s+ed b2\\s+inir\n+\\s+199:\\s+e9\\s+jp \\(hl\\)\n+\\s+19a:\\s+dd e9\\s+jp \\(ix\\)\n+\\s+19c:\\s+fd e9\\s+jp \\(iy\\)\n+\\s+19e:\\s+c3 34 12\\s+jp 0x1234\n+\\s+1a1:\\s+da 34 12\\s+jp c,0x1234\n+\\s+1a4:\\s+fa 34 12\\s+jp m,0x1234\n+\\s+1a7:\\s+d2 34 12\\s+jp nc,0x1234\n+\\s+1aa:\\s+c2 34 12\\s+jp nz,0x1234\n+\\s+1ad:\\s+f2 34 12\\s+jp p,0x1234\n+\\s+1b0:\\s+ea 34 12\\s+jp pe,0x1234\n+\\s+1b3:\\s+e2 34 12\\s+jp po,0x1234\n+\\s+1b6:\\s+ca 34 12\\s+jp z,0x1234\n+\\s+1b9:\\s+18 05\\s+jr 0x01c0\n+\\s+1bb:\\s+38 05\\s+jr c,0x01c2\n+\\s+1bd:\\s+30 05\\s+jr nc,0x01c4\n+\\s+1bf:\\s+20 05\\s+jr nz,0x01c6\n+\\s+1c1:\\s+28 05\\s+jr z,0x01c8\n+\\s+1c3:\\s+32 34 12\\s+ld \\(0x1234\\),a\n+\\s+1c6:\\s+ed 43 34 12\\s+ld \\(0x1234\\),bc\n+\\s+1ca:\\s+ed 53 34 12\\s+ld \\(0x1234\\),de\n+\\s+1ce:\\s+22 34 12\\s+ld \\(0x1234\\),hl\n+\\s+1d1:\\s+dd 22 34 12\\s+ld \\(0x1234\\),ix\n+\\s+1d5:\\s+fd 22 34 12\\s+ld \\(0x1234\\),iy\n+\\s+1d9:\\s+ed 73 34 12\\s+ld \\(0x1234\\),sp\n+\\s+1dd:\\s+02\\s+ld \\(bc\\),a\n+\\s+1de:\\s+12\\s+ld \\(de\\),a\n+\\s+1df:\\s+36 03\\s+ld \\(hl\\),0x03\n+\\s+1e1:\\s+77\\s+ld \\(hl\\),a\n+\\s+1e2:\\s+70\\s+ld \\(hl\\),b\n+\\s+1e3:\\s+71\\s+ld \\(hl\\),c\n+\\s+1e4:\\s+72\\s+ld \\(hl\\),d\n+\\s+1e5:\\s+73\\s+ld \\(hl\\),e\n+\\s+1e6:\\s+74\\s+ld \\(hl\\),h\n+\\s+1e7:\\s+75\\s+ld \\(hl\\),l\n+\\s+1e8:\\s+dd 36 09 03\\s+ld \\(ix\\+9\\),0x03\n+\\s+1ec:\\s+dd 77 09\\s+ld \\(ix\\+9\\),a\n+\\s+1ef:\\s+dd 70 09\\s+ld \\(ix\\+9\\),b\n+\\s+1f2:\\s+dd 71 09\\s+ld \\(ix\\+9\\),c\n+\\s+1f5:\\s+dd 72 09\\s+ld \\(ix\\+9\\),d\n+\\s+1f8:\\s+dd 73 09\\s+ld \\(ix\\+9\\),e\n+\\s+1fb:\\s+dd 74 09\\s+ld \\(ix\\+9\\),h\n+\\s+1fe:\\s+dd 75 09\\s+ld \\(ix\\+9\\),l\n+\\s+201:\\s+fd 36 09 03\\s+ld \\(iy\\+9\\),0x03\n+\\s+205:\\s+fd 77 09\\s+ld \\(iy\\+9\\),a\n+\\s+208:\\s+fd 70 09\\s+ld \\(iy\\+9\\),b\n+\\s+20b:\\s+fd 71 09\\s+ld \\(iy\\+9\\),c\n+\\s+20e:\\s+fd 72 09\\s+ld \\(iy\\+9\\),d\n+\\s+211:\\s+fd 73 09\\s+ld \\(iy\\+9\\),e\n+\\s+214:\\s+fd 74 09\\s+ld \\(iy\\+9\\),h\n+\\s+217:\\s+fd 75 09\\s+ld \\(iy\\+9\\),l\n+\\s+21a:\\s+3a 34 12\\s+ld a,\\(0x1234\\)\n+\\s+21d:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+21e:\\s+1a\\s+ld a,\\(de\\)\n+\\s+21f:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+220:\\s+dd 7e 09\\s+ld a,\\(ix\\+9\\)\n+\\s+223:\\s+fd 7e 09\\s+ld a,\\(iy\\+9\\)\n+\\s+226:\\s+3e 03\\s+ld a,0x03\n+\\s+228:\\s+7f\\s+ld a,a\n+\\s+229:\\s+78\\s+ld a,b\n+\\s+22a:\\s+79\\s+ld a,c\n+\\s+22b:\\s+7a\\s+ld a,d\n+\\s+22c:\\s+7b\\s+ld a,e\n+\\s+22d:\\s+7c\\s+ld a,h\n+\\s+22e:\\s+ed 57\\s+ld a,i\n+\\s+230:\\s+7d\\s+ld a,l\n+\\s+231:\\s+ed 5f\\s+ld a,r\n+\\s+233:\\s+46\\s+ld b,\\(hl\\)\n+\\s+234:\\s+dd 46 09\\s+ld b,\\(ix\\+9\\)\n+\\s+237:\\s+fd 46 09\\s+ld b,\\(iy\\+9\\)\n+\\s+23a:\\s+06 03\\s+ld b,0x03\n+\\s+23c:\\s+47\\s+ld b,a\n+\\s+23d:\\s+40\\s+ld b,b\n+\\s+23e:\\s+41\\s+ld b,c\n+\\s+23f:\\s+42\\s+ld b,d\n+\\s+240:\\s+43\\s+ld b,e\n+\\s+241:\\s+44\\s+ld b,h\n+\\s+242:\\s+45\\s+ld b,l\n+\\s+243:\\s+ed 4b 34 12\\s+ld bc,\\(0x1234\\)\n+\\s+247:\\s+01 34 12\\s+ld bc,0x1234\n+\\s+24a:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+24b:\\s+dd 4e 09\\s+ld c,\\(ix\\+9\\)\n+\\s+24e:\\s+fd 4e 09\\s+ld c,\\(iy\\+9\\)\n+\\s+251:\\s+0e 03\\s+ld c,0x03\n+\\s+253:\\s+4f\\s+ld c,a\n+\\s+254:\\s+48\\s+ld c,b\n+\\s+255:\\s+49\\s+ld c,c\n+\\s+256:\\s+4a\\s+ld c,d\n+\\s+257:\\s+4b\\s+ld c,e\n+\\s+258:\\s+4c\\s+ld c,h\n+\\s+259:\\s+4d\\s+ld c,l\n+\\s+25a:\\s+56\\s+ld d,\\(hl\\)\n+\\s+25b:\\s+dd 56 09\\s+ld d,\\(ix\\+9\\)\n+\\s+25e:\\s+fd 56 09\\s+ld d,\\(iy\\+9\\)\n+\\s+261:\\s+16 03\\s+ld d,0x03\n+\\s+263:\\s+57\\s+ld d,a\n+\\s+264:\\s+50\\s+ld d,b\n+\\s+265:\\s+51\\s+ld d,c\n+\\s+266:\\s+52\\s+ld d,d\n+\\s+267:\\s+53\\s+ld d,e\n+\\s+268:\\s+54\\s+ld d,h\n+\\s+269:\\s+55\\s+ld d,l\n+\\s+26a:\\s+ed 5b 34 12\\s+ld de,\\(0x1234\\)\n+\\s+26e:\\s+11 34 12\\s+ld de,0x1234\n+\\s+271:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+272:\\s+dd 5e 09\\s+ld e,\\(ix\\+9\\)\n+\\s+275:\\s+fd 5e 09\\s+ld e,\\(iy\\+9\\)\n+\\s+278:\\s+1e 03\\s+ld e,0x03\n+\\s+27a:\\s+5f\\s+ld e,a\n+\\s+27b:\\s+58\\s+ld e,b\n+\\s+27c:\\s+59\\s+ld e,c\n+\\s+27d:\\s+5a\\s+ld e,d\n+\\s+27e:\\s+5b\\s+ld e,e\n+\\s+27f:\\s+5c\\s+ld e,h\n+\\s+280:\\s+5d\\s+ld e,l\n+\\s+281:\\s+66\\s+ld h,\\(hl\\)\n+\\s+282:\\s+dd 66 09\\s+ld h,\\(ix\\+9\\)\n+\\s+285:\\s+fd 66 09\\s+ld h,\\(iy\\+9\\)\n+\\s+288:\\s+26 03\\s+ld h,0x03\n+\\s+28a:\\s+67\\s+ld h,a\n+\\s+28b:\\s+60\\s+ld h,b\n+\\s+28c:\\s+61\\s+ld h,c\n+\\s+28d:\\s+62\\s+ld h,d\n+\\s+28e:\\s+63\\s+ld h,e\n+\\s+28f:\\s+64\\s+ld h,h\n+\\s+290:\\s+65\\s+ld h,l\n+\\s+291:\\s+2a 34 12\\s+ld hl,\\(0x1234\\)\n+\\s+294:\\s+21 34 12\\s+ld hl,0x1234\n+\\s+297:\\s+ed 47\\s+ld i,a\n+\\s+299:\\s+dd 2a 34 12\\s+ld ix,\\(0x1234\\)\n+\\s+29d:\\s+dd 21 34 12\\s+ld ix,0x1234\n+\\s+2a1:\\s+fd 2a 34 12\\s+ld iy,\\(0x1234\\)\n+\\s+2a5:\\s+fd 21 34 12\\s+ld iy,0x1234\n+\\s+2a9:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+2aa:\\s+dd 6e 09\\s+ld l,\\(ix\\+9\\)\n+\\s+2ad:\\s+fd 6e 09\\s+ld l,\\(iy\\+9\\)\n+\\s+2b0:\\s+2e 03\\s+ld l,0x03\n+\\s+2b2:\\s+6f\\s+ld l,a\n+\\s+2b3:\\s+68\\s+ld l,b\n+\\s+2b4:\\s+69\\s+ld l,c\n+\\s+2b5:\\s+6a\\s+ld l,d\n+\\s+2b6:\\s+6b\\s+ld l,e\n+\\s+2b7:\\s+6c\\s+ld l,h\n+\\s+2b8:\\s+6d\\s+ld l,l\n+\\s+2b9:\\s+ed 4f\\s+ld r,a\n+\\s+2bb:\\s+ed 7b 34 12\\s+ld sp,\\(0x1234\\)\n+\\s+2bf:\\s+31 34 12\\s+ld sp,0x1234\n+\\s+2c2:\\s+f9\\s+ld sp,hl\n+\\s+2c3:\\s+dd f9\\s+ld sp,ix\n+\\s+2c5:\\s+fd f9\\s+ld sp,iy\n+\\s+2c7:\\s+ed a8\\s+ldd\n+\\s+2c9:\\s+ed b8\\s+lddr\n+\\s+2cb:\\s+ed a0\\s+ldi\n+\\s+2cd:\\s+ed b0\\s+ldir\n+\\s+2cf:\\s+ed 44\\s+neg\n+\\s+2d1:\\s+00\\s+nop\n+\\s+2d2:\\s+b6\\s+or \\(hl\\)\n+\\s+2d3:\\s+dd b6 09\\s+or \\(ix\\+9\\)\n+\\s+2d6:\\s+fd b6 09\\s+or \\(iy\\+9\\)\n+\\s+2d9:\\s+f6 03\\s+or 0x03\n+\\s+2db:\\s+b7\\s+or a\n+\\s+2dc:\\s+b0\\s+or b\n+\\s+2dd:\\s+b1\\s+or c\n+\\s+2de:\\s+b2\\s+or d\n+\\s+2df:\\s+b3\\s+or e\n+\\s+2e0:\\s+b4\\s+or h\n+\\s+2e1:\\s+b5\\s+or l\n+\\s+2e2:\\s+ed bb\\s+otdr\n+\\s+2e4:\\s+ed b3\\s+otir\n+\\s+2e6:\\s+ed 79\\s+out \\(c\\),a\n+\\s+2e8:\\s+ed 41\\s+out \\(c\\),b\n+\\s+2ea:\\s+ed 49\\s+out \\(c\\),c\n+\\s+2ec:\\s+ed 51\\s+out \\(c\\),d\n+\\s+2ee:\\s+ed 59\\s+out \\(c\\),e\n+\\s+2f0:\\s+ed 61\\s+out \\(c\\),h\n+\\s+2f2:\\s+ed 69\\s+out \\(c\\),l\n+\\s+2f4:\\s+d3 03\\s+out \\(0x03\\),a\n+\\s+2f6:\\s+ed ab\\s+outd\n+\\s+2f8:\\s+ed a3\\s+outi\n+\\s+2fa:\\s+f1\\s+pop af\n+\\s+2fb:\\s+c1\\s+pop bc\n+\\s+2fc:\\s+d1\\s+pop de\n+\\s+2fd:\\s+e1\\s+pop hl\n+\\s+2fe:\\s+dd e1\\s+pop ix\n+\\s+300:\\s+fd e1\\s+pop iy\n+\\s+302:\\s+f5\\s+push af\n+\\s+303:\\s+c5\\s+push bc\n+\\s+304:\\s+d5\\s+push de\n+\\s+305:\\s+e5\\s+push hl\n+\\s+306:\\s+dd e5\\s+push ix\n+\\s+308:\\s+fd e5\\s+push iy\n+\\s+30a:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+30c:\\s+dd cb 09 86\\s+res 0,\\(ix\\+9\\)\n+\\s+310:\\s+fd cb 09 86\\s+res 0,\\(iy\\+9\\)\n+\\s+314:\\s+cb 87\\s+res 0,a\n+\\s+316:\\s+cb 80\\s+res 0,b\n+\\s+318:\\s+cb 81\\s+res 0,c\n+\\s+31a:\\s+cb 82\\s+res 0,d\n+\\s+31c:\\s+cb 83\\s+res 0,e\n+\\s+31e:\\s+cb 84\\s+res 0,h\n+\\s+320:\\s+cb 85\\s+res 0,l\n+\\s+322:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+324:\\s+dd cb 09 8e\\s+res 1,\\(ix\\+9\\)\n+\\s+328:\\s+fd cb 09 8e\\s+res 1,\\(iy\\+9\\)\n+\\s+32c:\\s+cb 8f\\s+res 1,a\n+\\s+32e:\\s+cb 88\\s+res 1,b\n+\\s+330:\\s+cb 89\\s+res 1,c\n+\\s+332:\\s+cb 8a\\s+res 1,d\n+\\s+334:\\s+cb 8b\\s+res 1,e\n+\\s+336:\\s+cb 8c\\s+res 1,h\n+\\s+338:\\s+cb 8d\\s+res 1,l\n+\\s+33a:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+33c:\\s+dd cb 09 96\\s+res 2,\\(ix\\+9\\)\n+\\s+340:\\s+fd cb 09 96\\s+res 2,\\(iy\\+9\\)\n+\\s+344:\\s+cb 97\\s+res 2,a\n+\\s+346:\\s+cb 90\\s+res 2,b\n+\\s+348:\\s+cb 91\\s+res 2,c\n+\\s+34a:\\s+cb 92\\s+res 2,d\n+\\s+34c:\\s+cb 93\\s+res 2,e\n+\\s+34e:\\s+cb 94\\s+res 2,h\n+\\s+350:\\s+cb 95\\s+res 2,l\n+\\s+352:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+354:\\s+dd cb 09 9e\\s+res 3,\\(ix\\+9\\)\n+\\s+358:\\s+fd cb 09 9e\\s+res 3,\\(iy\\+9\\)\n+\\s+35c:\\s+cb 9f\\s+res 3,a\n+\\s+35e:\\s+cb 98\\s+res 3,b\n+\\s+360:\\s+cb 99\\s+res 3,c\n+\\s+362:\\s+cb 9a\\s+res 3,d\n+\\s+364:\\s+cb 9b\\s+res 3,e\n+\\s+366:\\s+cb 9c\\s+res 3,h\n+\\s+368:\\s+cb 9d\\s+res 3,l\n+\\s+36a:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+36c:\\s+dd cb 09 a6\\s+res 4,\\(ix\\+9\\)\n+\\s+370:\\s+fd cb 09 a6\\s+res 4,\\(iy\\+9\\)\n+\\s+374:\\s+cb a7\\s+res 4,a\n+\\s+376:\\s+cb a0\\s+res 4,b\n+\\s+378:\\s+cb a1\\s+res 4,c\n+\\s+37a:\\s+cb a2\\s+res 4,d\n+\\s+37c:\\s+cb a3\\s+res 4,e\n+\\s+37e:\\s+cb a4\\s+res 4,h\n+\\s+380:\\s+cb a5\\s+res 4,l\n+\\s+382:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+384:\\s+dd cb 09 ae\\s+res 5,\\(ix\\+9\\)\n+\\s+388:\\s+fd cb 09 ae\\s+res 5,\\(iy\\+9\\)\n+\\s+38c:\\s+cb af\\s+res 5,a\n+\\s+38e:\\s+cb a8\\s+res 5,b\n+\\s+390:\\s+cb a9\\s+res 5,c\n+\\s+392:\\s+cb aa\\s+res 5,d\n+\\s+394:\\s+cb ab\\s+res 5,e\n+\\s+396:\\s+cb ac\\s+res 5,h\n+\\s+398:\\s+cb ad\\s+res 5,l\n+\\s+39a:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+39c:\\s+dd cb 09 b6\\s+res 6,\\(ix\\+9\\)\n+\\s+3a0:\\s+fd cb 09 b6\\s+res 6,\\(iy\\+9\\)\n+\\s+3a4:\\s+cb b7\\s+res 6,a\n+\\s+3a6:\\s+cb b0\\s+res 6,b\n+\\s+3a8:\\s+cb b1\\s+res 6,c\n+\\s+3aa:\\s+cb b2\\s+res 6,d\n+\\s+3ac:\\s+cb b3\\s+res 6,e\n+\\s+3ae:\\s+cb b4\\s+res 6,h\n+\\s+3b0:\\s+cb b5\\s+res 6,l\n+\\s+3b2:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+3b4:\\s+dd cb 09 be\\s+res 7,\\(ix\\+9\\)\n+\\s+3b8:\\s+fd cb 09 be\\s+res 7,\\(iy\\+9\\)\n+\\s+3bc:\\s+cb bf\\s+res 7,a\n+\\s+3be:\\s+cb b8\\s+res 7,b\n+\\s+3c0:\\s+cb b9\\s+res 7,c\n+\\s+3c2:\\s+cb ba\\s+res 7,d\n+\\s+3c4:\\s+cb bb\\s+res 7,e\n+\\s+3c6:\\s+cb bc\\s+res 7,h\n+\\s+3c8:\\s+cb bd\\s+res 7,l\n+\\s+3ca:\\s+c9\\s+ret\n+\\s+3cb:\\s+d8\\s+ret c\n+\\s+3cc:\\s+f8\\s+ret m\n+\\s+3cd:\\s+d0\\s+ret nc\n+\\s+3ce:\\s+c0\\s+ret nz\n+\\s+3cf:\\s+f0\\s+ret p\n+\\s+3d0:\\s+e8\\s+ret pe\n+\\s+3d1:\\s+e0\\s+ret po\n+\\s+3d2:\\s+c8\\s+ret z\n+\\s+3d3:\\s+ed 4d\\s+reti\n+\\s+3d5:\\s+ed 45\\s+retn\n+\\s+3d7:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+3d9:\\s+dd cb 09 16\\s+rl \\(ix\\+9\\)\n+\\s+3dd:\\s+fd cb 09 16\\s+rl \\(iy\\+9\\)\n+\\s+3e1:\\s+cb 17\\s+rl a\n+\\s+3e3:\\s+cb 10\\s+rl b\n+\\s+3e5:\\s+cb 11\\s+rl c\n+\\s+3e7:\\s+cb 12\\s+rl d\n+\\s+3e9:\\s+cb 13\\s+rl e\n+\\s+3eb:\\s+cb 14\\s+rl h\n+\\s+3ed:\\s+cb 15\\s+rl l\n+\\s+3ef:\\s+17\\s+rla\n+\\s+3f0:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+3f2:\\s+dd cb 09 06\\s+rlc \\(ix\\+9\\)\n+\\s+3f6:\\s+fd cb 09 06\\s+rlc \\(iy\\+9\\)\n+\\s+3fa:\\s+cb 07\\s+rlc a\n+\\s+3fc:\\s+cb 00\\s+rlc b\n+\\s+3fe:\\s+cb 01\\s+rlc c\n+\\s+400:\\s+cb 02\\s+rlc d\n+\\s+402:\\s+cb 03\\s+rlc e\n+\\s+404:\\s+cb 04\\s+rlc h\n+\\s+406:\\s+cb 05\\s+rlc l\n+\\s+408:\\s+07\\s+rlca\n+\\s+409:\\s+ed 6f\\s+rld\n+\\s+40b:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+40d:\\s+dd cb 09 1e\\s+rr \\(ix\\+9\\)\n+\\s+411:\\s+fd cb 09 1e\\s+rr \\(iy\\+9\\)\n+\\s+415:\\s+cb 1f\\s+rr a\n+\\s+417:\\s+cb 18\\s+rr b\n+\\s+419:\\s+cb 19\\s+rr c\n+\\s+41b:\\s+cb 1a\\s+rr d\n+\\s+41d:\\s+cb 1b\\s+rr e\n+\\s+41f:\\s+cb 1c\\s+rr h\n+\\s+421:\\s+cb 1d\\s+rr l\n+\\s+423:\\s+1f\\s+rra\n+\\s+424:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+426:\\s+dd cb 09 0e\\s+rrc \\(ix\\+9\\)\n+\\s+42a:\\s+fd cb 09 0e\\s+rrc \\(iy\\+9\\)\n+\\s+42e:\\s+cb 0f\\s+rrc a\n+\\s+430:\\s+cb 08\\s+rrc b\n+\\s+432:\\s+cb 09\\s+rrc c\n+\\s+434:\\s+cb 0a\\s+rrc d\n+\\s+436:\\s+cb 0b\\s+rrc e\n+\\s+438:\\s+cb 0c\\s+rrc h\n+\\s+43a:\\s+cb 0d\\s+rrc l\n+\\s+43c:\\s+0f\\s+rrca\n+\\s+43d:\\s+ed 67\\s+rrd\n+\\s+43f:\\s+c7\\s+rst 0x00\n+\\s+440:\\s+cf\\s+rst 0x08\n+\\s+441:\\s+d7\\s+rst 0x10\n+\\s+442:\\s+df\\s+rst 0x18\n+\\s+443:\\s+e7\\s+rst 0x20\n+\\s+444:\\s+ef\\s+rst 0x28\n+\\s+445:\\s+f7\\s+rst 0x30\n+\\s+446:\\s+ff\\s+rst 0x38\n+\\s+447:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+448:\\s+dd 9e 09\\s+sbc a,\\(ix\\+9\\)\n+\\s+44b:\\s+fd 9e 09\\s+sbc a,\\(iy\\+9\\)\n+\\s+44e:\\s+de 03\\s+sbc a,0x03\n+\\s+450:\\s+9f\\s+sbc a,a\n+\\s+451:\\s+98\\s+sbc a,b\n+\\s+452:\\s+99\\s+sbc a,c\n+\\s+453:\\s+9a\\s+sbc a,d\n+\\s+454:\\s+9b\\s+sbc a,e\n+\\s+455:\\s+9c\\s+sbc a,h\n+\\s+456:\\s+9d\\s+sbc a,l\n+\\s+457:\\s+ed 42\\s+sbc hl,bc\n+\\s+459:\\s+ed 52\\s+sbc hl,de\n+\\s+45b:\\s+ed 62\\s+sbc hl,hl\n+\\s+45d:\\s+ed 72\\s+sbc hl,sp\n+\\s+45f:\\s+37\\s+scf\n+\\s+460:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+462:\\s+dd cb 09 c6\\s+set 0,\\(ix\\+9\\)\n+\\s+466:\\s+fd cb 09 c6\\s+set 0,\\(iy\\+9\\)\n+\\s+46a:\\s+cb c7\\s+set 0,a\n+\\s+46c:\\s+cb c0\\s+set 0,b\n+\\s+46e:\\s+cb c1\\s+set 0,c\n+\\s+470:\\s+cb c2\\s+set 0,d\n+\\s+472:\\s+cb c3\\s+set 0,e\n+\\s+474:\\s+cb c4\\s+set 0,h\n+\\s+476:\\s+cb c5\\s+set 0,l\n+\\s+478:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+47a:\\s+dd cb 09 ce\\s+set 1,\\(ix\\+9\\)\n+\\s+47e:\\s+fd cb 09 ce\\s+set 1,\\(iy\\+9\\)\n+\\s+482:\\s+cb cf\\s+set 1,a\n+\\s+484:\\s+cb c8\\s+set 1,b\n+\\s+486:\\s+cb c9\\s+set 1,c\n+\\s+488:\\s+cb ca\\s+set 1,d\n+\\s+48a:\\s+cb cb\\s+set 1,e\n+\\s+48c:\\s+cb cc\\s+set 1,h\n+\\s+48e:\\s+cb cd\\s+set 1,l\n+\\s+490:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+492:\\s+dd cb 09 d6\\s+set 2,\\(ix\\+9\\)\n+\\s+496:\\s+fd cb 09 d6\\s+set 2,\\(iy\\+9\\)\n+\\s+49a:\\s+cb d7\\s+set 2,a\n+\\s+49c:\\s+cb d0\\s+set 2,b\n+\\s+49e:\\s+cb d1\\s+set 2,c\n+\\s+4a0:\\s+cb d2\\s+set 2,d\n+\\s+4a2:\\s+cb d3\\s+set 2,e\n+\\s+4a4:\\s+cb d4\\s+set 2,h\n+\\s+4a6:\\s+cb d5\\s+set 2,l\n+\\s+4a8:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+4aa:\\s+dd cb 09 de\\s+set 3,\\(ix\\+9\\)\n+\\s+4ae:\\s+fd cb 09 de\\s+set 3,\\(iy\\+9\\)\n+\\s+4b2:\\s+cb df\\s+set 3,a\n+\\s+4b4:\\s+cb d8\\s+set 3,b\n+\\s+4b6:\\s+cb d9\\s+set 3,c\n+\\s+4b8:\\s+cb da\\s+set 3,d\n+\\s+4ba:\\s+cb db\\s+set 3,e\n+\\s+4bc:\\s+cb dc\\s+set 3,h\n+\\s+4be:\\s+cb dd\\s+set 3,l\n+\\s+4c0:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+4c2:\\s+dd cb 09 e6\\s+set 4,\\(ix\\+9\\)\n+\\s+4c6:\\s+fd cb 09 e6\\s+set 4,\\(iy\\+9\\)\n+\\s+4ca:\\s+cb e7\\s+set 4,a\n+\\s+4cc:\\s+cb e0\\s+set 4,b\n+\\s+4ce:\\s+cb e1\\s+set 4,c\n+\\s+4d0:\\s+cb e2\\s+set 4,d\n+\\s+4d2:\\s+cb e3\\s+set 4,e\n+\\s+4d4:\\s+cb e4\\s+set 4,h\n+\\s+4d6:\\s+cb e5\\s+set 4,l\n+\\s+4d8:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+4da:\\s+dd cb 09 ee\\s+set 5,\\(ix\\+9\\)\n+\\s+4de:\\s+fd cb 09 ee\\s+set 5,\\(iy\\+9\\)\n+\\s+4e2:\\s+cb ef\\s+set 5,a\n+\\s+4e4:\\s+cb e8\\s+set 5,b\n+\\s+4e6:\\s+cb e9\\s+set 5,c\n+\\s+4e8:\\s+cb ea\\s+set 5,d\n+\\s+4ea:\\s+cb eb\\s+set 5,e\n+\\s+4ec:\\s+cb ec\\s+set 5,h\n+\\s+4ee:\\s+cb ed\\s+set 5,l\n+\\s+4f0:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+4f2:\\s+dd cb 09 f6\\s+set 6,\\(ix\\+9\\)\n+\\s+4f6:\\s+fd cb 09 f6\\s+set 6,\\(iy\\+9\\)\n+\\s+4fa:\\s+cb f7\\s+set 6,a\n+\\s+4fc:\\s+cb f0\\s+set 6,b\n+\\s+4fe:\\s+cb f1\\s+set 6,c\n+\\s+500:\\s+cb f2\\s+set 6,d\n+\\s+502:\\s+cb f3\\s+set 6,e\n+\\s+504:\\s+cb f4\\s+set 6,h\n+\\s+506:\\s+cb f5\\s+set 6,l\n+\\s+508:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+50a:\\s+dd cb 09 fe\\s+set 7,\\(ix\\+9\\)\n+\\s+50e:\\s+fd cb 09 fe\\s+set 7,\\(iy\\+9\\)\n+\\s+512:\\s+cb ff\\s+set 7,a\n+\\s+514:\\s+cb f8\\s+set 7,b\n+\\s+516:\\s+cb f9\\s+set 7,c\n+\\s+518:\\s+cb fa\\s+set 7,d\n+\\s+51a:\\s+cb fb\\s+set 7,e\n+\\s+51c:\\s+cb fc\\s+set 7,h\n+\\s+51e:\\s+cb fd\\s+set 7,l\n+\\s+520:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+522:\\s+dd cb 09 26\\s+sla \\(ix\\+9\\)\n+\\s+526:\\s+fd cb 09 26\\s+sla \\(iy\\+9\\)\n+\\s+52a:\\s+cb 27\\s+sla a\n+\\s+52c:\\s+cb 20\\s+sla b\n+\\s+52e:\\s+cb 21\\s+sla c\n+\\s+530:\\s+cb 22\\s+sla d\n+\\s+532:\\s+cb 23\\s+sla e\n+\\s+534:\\s+cb 24\\s+sla h\n+\\s+536:\\s+cb 25\\s+sla l\n+\\s+538:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+53a:\\s+dd cb 09 2e\\s+sra \\(ix\\+9\\)\n+\\s+53e:\\s+fd cb 09 2e\\s+sra \\(iy\\+9\\)\n+\\s+542:\\s+cb 2f\\s+sra a\n+\\s+544:\\s+cb 28\\s+sra b\n+\\s+546:\\s+cb 29\\s+sra c\n+\\s+548:\\s+cb 2a\\s+sra d\n+\\s+54a:\\s+cb 2b\\s+sra e\n+\\s+54c:\\s+cb 2c\\s+sra h\n+\\s+54e:\\s+cb 2d\\s+sra l\n+\\s+550:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+552:\\s+dd cb 09 3e\\s+srl \\(ix\\+9\\)\n+\\s+556:\\s+fd cb 09 3e\\s+srl \\(iy\\+9\\)\n+\\s+55a:\\s+cb 3f\\s+srl a\n+\\s+55c:\\s+cb 38\\s+srl b\n+\\s+55e:\\s+cb 39\\s+srl c\n+\\s+560:\\s+cb 3a\\s+srl d\n+\\s+562:\\s+cb 3b\\s+srl e\n+\\s+564:\\s+cb 3c\\s+srl h\n+\\s+566:\\s+cb 3d\\s+srl l\n+\\s+568:\\s+96\\s+sub \\(hl\\)\n+\\s+569:\\s+dd 96 09\\s+sub \\(ix\\+9\\)\n+\\s+56c:\\s+fd 96 09\\s+sub \\(iy\\+9\\)\n+\\s+56f:\\s+d6 03\\s+sub 0x03\n+\\s+571:\\s+97\\s+sub a\n+\\s+572:\\s+90\\s+sub b\n+\\s+573:\\s+91\\s+sub c\n+\\s+574:\\s+92\\s+sub d\n+\\s+575:\\s+93\\s+sub e\n+\\s+576:\\s+94\\s+sub h\n+\\s+577:\\s+95\\s+sub l\n+\\s+578:\\s+ae\\s+xor \\(hl\\)\n+\\s+579:\\s+dd ae 09\\s+xor \\(ix\\+9\\)\n+\\s+57c:\\s+fd ae 09\\s+xor \\(iy\\+9\\)\n+\\s+57f:\\s+ee 03\\s+xor 0x03\n+\\s+581:\\s+af\\s+xor a\n+\\s+582:\\s+a8\\s+xor b\n+\\s+583:\\s+a9\\s+xor c\n+\\s+584:\\s+aa\\s+xor d\n+\\s+585:\\s+ab\\s+xor e\n+\\s+586:\\s+ac\\s+xor h\n+\\s+587:\\s+ad\\s+xor l"
    },
    {
      "sha": "334d7f9e50da7bbb1c72a51fee852014db339dbb",
      "filename": "gas/testsuite/gas/z80/z80.exp",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80.exp?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -19,10 +19,14 @@\n if [istarget z80-*-*] then {\n # test redefinitions\n     run_dump_test \"redef\"\n+# test .set redefinitions\n+    run_dump_test \"set\"\n # test parsing of equ definitions\n     run_dump_test \"equ\"\n # test parsing of \" and '\n     run_dump_test \"quotes\"\n+# test data definition directives\n+    run_dump_test \"data\"\n # test suffixes\n     run_dump_test \"suffix\"\n # test assembling and disassembling instructions involving offsets\n@@ -47,7 +51,51 @@ if [istarget z80-*-*] then {\n     run_dump_test \"branch\"\n # test for input and output instructions\n     run_dump_test \"inout\"\n+# test for strings\n+    run_dump_test \"strings\"\n+# test for dollar labels\n+    run_dump_test \"dollar\"\n+# test for relocations\n+    run_dump_test \"z80_reloc\"\n+# test for absolutely all documented instructions of Z80\n+    run_dump_test \"z80_doc\"\n+# test for undocumented instructions like RLC (IX+3),A\n+    run_dump_test \"z80_op_ii_ld\"\n+# test for undocumented instructions SLI/SLL\n+    run_dump_test \"z80_sli\"\n+# test for undocumented instruction IN F,(C)\n+    run_dump_test \"z80_in_f_c\"\n+# test for undocumented instruction OUT (C),0\n+    run_dump_test \"z80_out_c_0\"\n+# test for instructions with index register halves\n+    run_dump_test \"z80_ii8\"\n #test for other instructions\n     run_dump_test \"misc\"\n     gas_test_error \"ill_op.s\" \"\" \"Illegal operand: ld hl,(sp+0)\"\n+# test for all Z80 documented instructions for R800\n+    run_dump_test \"r800_z80_doc\"\n+# test for R800 instructions with index register halves\n+    run_dump_test \"r800_ii8\"\n+# test for R800 extra instructions\n+    run_dump_test \"r800_extra\"\n+#test for Z180 instructions\n+    run_dump_test \"z180\"\n+#test for Z80 instructions while compiling for Z180\n+    run_dump_test \"z180_z80_doc\"\n+#test for eZ80 instructions in Z80 mode\n+    run_dump_test \"ez80_z80_all\"\n+#test for eZ80 instructions with sufficies in Z80 mode\n+    run_dump_test \"ez80_z80_suf\"\n+#test for eZ80 instructions in ADL mode\n+    run_dump_test \"ez80_adl_all\"\n+#test for eZ80 instructions with sufficies in ADL mode\n+    run_dump_test \"ez80_adl_suf\"\n+# test for SDCC compatibility mode\n+    run_dump_test \"sdcc\"\n+# test for colonless labels\n+    run_dump_test \"colonless\"\n+# test for FP math48\n+    run_dump_test \"fp_math48\"\n+# test for FP zeda32\n+    run_dump_test \"fp_zeda32\"\n }"
    },
    {
      "sha": "935f68eb2cf37975e7592d6b9762885b43ecbaec",
      "filename": "gas/testsuite/gas/z80/z80_doc.d",
      "status": "added",
      "additions": 705,
      "deletions": 0,
      "changes": 705,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_doc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_doc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_doc.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,705 @@\n+#as: -z80 -without-inst=sli,op-ii-ld,idx-reg-halves,in-f-c,out-c-0\n+#objdump: -d\n+#name: All Z80 documented instructions\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+8e\\s+adc a,\\(hl\\)\n+\\s+1:\\s+dd 8e 09\\s+adc a,\\(ix\\+9\\)\n+\\s+4:\\s+fd 8e 09\\s+adc a,\\(iy\\+9\\)\n+\\s+7:\\s+ce 03\\s+adc a,0x03\n+\\s+9:\\s+8f\\s+adc a,a\n+\\s+a:\\s+88\\s+adc a,b\n+\\s+b:\\s+89\\s+adc a,c\n+\\s+c:\\s+8a\\s+adc a,d\n+\\s+d:\\s+8b\\s+adc a,e\n+\\s+e:\\s+8c\\s+adc a,h\n+\\s+f:\\s+8d\\s+adc a,l\n+\\s+10:\\s+ed 4a\\s+adc hl,bc\n+\\s+12:\\s+ed 5a\\s+adc hl,de\n+\\s+14:\\s+ed 6a\\s+adc hl,hl\n+\\s+16:\\s+ed 7a\\s+adc hl,sp\n+\\s+18:\\s+86\\s+add a,\\(hl\\)\n+\\s+19:\\s+dd 86 09\\s+add a,\\(ix\\+9\\)\n+\\s+1c:\\s+fd 86 09\\s+add a,\\(iy\\+9\\)\n+\\s+1f:\\s+c6 03\\s+add a,0x03\n+\\s+21:\\s+87\\s+add a,a\n+\\s+22:\\s+80\\s+add a,b\n+\\s+23:\\s+81\\s+add a,c\n+\\s+24:\\s+82\\s+add a,d\n+\\s+25:\\s+83\\s+add a,e\n+\\s+26:\\s+84\\s+add a,h\n+\\s+27:\\s+85\\s+add a,l\n+\\s+28:\\s+09\\s+add hl,bc\n+\\s+29:\\s+19\\s+add hl,de\n+\\s+2a:\\s+29\\s+add hl,hl\n+\\s+2b:\\s+39\\s+add hl,sp\n+\\s+2c:\\s+dd 09\\s+add ix,bc\n+\\s+2e:\\s+dd 19\\s+add ix,de\n+\\s+30:\\s+dd 29\\s+add ix,ix\n+\\s+32:\\s+dd 39\\s+add ix,sp\n+\\s+34:\\s+fd 09\\s+add iy,bc\n+\\s+36:\\s+fd 19\\s+add iy,de\n+\\s+38:\\s+fd 29\\s+add iy,iy\n+\\s+3a:\\s+fd 39\\s+add iy,sp\n+\\s+3c:\\s+a6\\s+and \\(hl\\)\n+\\s+3d:\\s+dd a6 09\\s+and \\(ix\\+9\\)\n+\\s+40:\\s+fd a6 09\\s+and \\(iy\\+9\\)\n+\\s+43:\\s+e6 03\\s+and 0x03\n+\\s+45:\\s+a7\\s+and a\n+\\s+46:\\s+a0\\s+and b\n+\\s+47:\\s+a1\\s+and c\n+\\s+48:\\s+a2\\s+and d\n+\\s+49:\\s+a3\\s+and e\n+\\s+4a:\\s+a4\\s+and h\n+\\s+4b:\\s+a5\\s+and l\n+\\s+4c:\\s+cb 46\\s+bit 0,\\(hl\\)\n+\\s+4e:\\s+dd cb 09 46\\s+bit 0,\\(ix\\+9\\)\n+\\s+52:\\s+fd cb 09 46\\s+bit 0,\\(iy\\+9\\)\n+\\s+56:\\s+cb 47\\s+bit 0,a\n+\\s+58:\\s+cb 40\\s+bit 0,b\n+\\s+5a:\\s+cb 41\\s+bit 0,c\n+\\s+5c:\\s+cb 42\\s+bit 0,d\n+\\s+5e:\\s+cb 43\\s+bit 0,e\n+\\s+60:\\s+cb 44\\s+bit 0,h\n+\\s+62:\\s+cb 45\\s+bit 0,l\n+\\s+64:\\s+cb 4e\\s+bit 1,\\(hl\\)\n+\\s+66:\\s+dd cb 09 4e\\s+bit 1,\\(ix\\+9\\)\n+\\s+6a:\\s+fd cb 09 4e\\s+bit 1,\\(iy\\+9\\)\n+\\s+6e:\\s+cb 4f\\s+bit 1,a\n+\\s+70:\\s+cb 48\\s+bit 1,b\n+\\s+72:\\s+cb 49\\s+bit 1,c\n+\\s+74:\\s+cb 4a\\s+bit 1,d\n+\\s+76:\\s+cb 4b\\s+bit 1,e\n+\\s+78:\\s+cb 4c\\s+bit 1,h\n+\\s+7a:\\s+cb 4d\\s+bit 1,l\n+\\s+7c:\\s+cb 56\\s+bit 2,\\(hl\\)\n+\\s+7e:\\s+dd cb 09 56\\s+bit 2,\\(ix\\+9\\)\n+\\s+82:\\s+fd cb 09 56\\s+bit 2,\\(iy\\+9\\)\n+\\s+86:\\s+cb 57\\s+bit 2,a\n+\\s+88:\\s+cb 50\\s+bit 2,b\n+\\s+8a:\\s+cb 51\\s+bit 2,c\n+\\s+8c:\\s+cb 52\\s+bit 2,d\n+\\s+8e:\\s+cb 53\\s+bit 2,e\n+\\s+90:\\s+cb 54\\s+bit 2,h\n+\\s+92:\\s+cb 55\\s+bit 2,l\n+\\s+94:\\s+cb 5e\\s+bit 3,\\(hl\\)\n+\\s+96:\\s+dd cb 09 5e\\s+bit 3,\\(ix\\+9\\)\n+\\s+9a:\\s+fd cb 09 5e\\s+bit 3,\\(iy\\+9\\)\n+\\s+9e:\\s+cb 5f\\s+bit 3,a\n+\\s+a0:\\s+cb 58\\s+bit 3,b\n+\\s+a2:\\s+cb 59\\s+bit 3,c\n+\\s+a4:\\s+cb 5a\\s+bit 3,d\n+\\s+a6:\\s+cb 5b\\s+bit 3,e\n+\\s+a8:\\s+cb 5c\\s+bit 3,h\n+\\s+aa:\\s+cb 5d\\s+bit 3,l\n+\\s+ac:\\s+cb 66\\s+bit 4,\\(hl\\)\n+\\s+ae:\\s+dd cb 09 66\\s+bit 4,\\(ix\\+9\\)\n+\\s+b2:\\s+fd cb 09 66\\s+bit 4,\\(iy\\+9\\)\n+\\s+b6:\\s+cb 67\\s+bit 4,a\n+\\s+b8:\\s+cb 60\\s+bit 4,b\n+\\s+ba:\\s+cb 61\\s+bit 4,c\n+\\s+bc:\\s+cb 62\\s+bit 4,d\n+\\s+be:\\s+cb 63\\s+bit 4,e\n+\\s+c0:\\s+cb 64\\s+bit 4,h\n+\\s+c2:\\s+cb 65\\s+bit 4,l\n+\\s+c4:\\s+cb 6e\\s+bit 5,\\(hl\\)\n+\\s+c6:\\s+dd cb 09 6e\\s+bit 5,\\(ix\\+9\\)\n+\\s+ca:\\s+fd cb 09 6e\\s+bit 5,\\(iy\\+9\\)\n+\\s+ce:\\s+cb 6f\\s+bit 5,a\n+\\s+d0:\\s+cb 68\\s+bit 5,b\n+\\s+d2:\\s+cb 69\\s+bit 5,c\n+\\s+d4:\\s+cb 6a\\s+bit 5,d\n+\\s+d6:\\s+cb 6b\\s+bit 5,e\n+\\s+d8:\\s+cb 6c\\s+bit 5,h\n+\\s+da:\\s+cb 6d\\s+bit 5,l\n+\\s+dc:\\s+cb 76\\s+bit 6,\\(hl\\)\n+\\s+de:\\s+dd cb 09 76\\s+bit 6,\\(ix\\+9\\)\n+\\s+e2:\\s+fd cb 09 76\\s+bit 6,\\(iy\\+9\\)\n+\\s+e6:\\s+cb 77\\s+bit 6,a\n+\\s+e8:\\s+cb 70\\s+bit 6,b\n+\\s+ea:\\s+cb 71\\s+bit 6,c\n+\\s+ec:\\s+cb 72\\s+bit 6,d\n+\\s+ee:\\s+cb 73\\s+bit 6,e\n+\\s+f0:\\s+cb 74\\s+bit 6,h\n+\\s+f2:\\s+cb 75\\s+bit 6,l\n+\\s+f4:\\s+cb 7e\\s+bit 7,\\(hl\\)\n+\\s+f6:\\s+dd cb 09 7e\\s+bit 7,\\(ix\\+9\\)\n+\\s+fa:\\s+fd cb 09 7e\\s+bit 7,\\(iy\\+9\\)\n+\\s+fe:\\s+cb 7f\\s+bit 7,a\n+\\s+100:\\s+cb 78\\s+bit 7,b\n+\\s+102:\\s+cb 79\\s+bit 7,c\n+\\s+104:\\s+cb 7a\\s+bit 7,d\n+\\s+106:\\s+cb 7b\\s+bit 7,e\n+\\s+108:\\s+cb 7c\\s+bit 7,h\n+\\s+10a:\\s+cb 7d\\s+bit 7,l\n+\\s+10c:\\s+cd 34 12\\s+call 0x1234\n+\\s+10f:\\s+dc 34 12\\s+call c,0x1234\n+\\s+112:\\s+fc 34 12\\s+call m,0x1234\n+\\s+115:\\s+d4 34 12\\s+call nc,0x1234\n+\\s+118:\\s+c4 34 12\\s+call nz,0x1234\n+\\s+11b:\\s+f4 34 12\\s+call p,0x1234\n+\\s+11e:\\s+ec 34 12\\s+call pe,0x1234\n+\\s+121:\\s+e4 34 12\\s+call po,0x1234\n+\\s+124:\\s+cc 34 12\\s+call z,0x1234\n+\\s+127:\\s+3f\\s+ccf\n+\\s+128:\\s+be\\s+cp \\(hl\\)\n+\\s+129:\\s+dd be 09\\s+cp \\(ix\\+9\\)\n+\\s+12c:\\s+fd be 09\\s+cp \\(iy\\+9\\)\n+\\s+12f:\\s+fe 03\\s+cp 0x03\n+\\s+131:\\s+bf\\s+cp a\n+\\s+132:\\s+b8\\s+cp b\n+\\s+133:\\s+b9\\s+cp c\n+\\s+134:\\s+ba\\s+cp d\n+\\s+135:\\s+bb\\s+cp e\n+\\s+136:\\s+bc\\s+cp h\n+\\s+137:\\s+bd\\s+cp l\n+\\s+138:\\s+ed a9\\s+cpd\n+\\s+13a:\\s+ed b9\\s+cpdr\n+\\s+13c:\\s+ed a1\\s+cpi\n+\\s+13e:\\s+ed b1\\s+cpir\n+\\s+140:\\s+2f\\s+cpl\n+\\s+141:\\s+27\\s+daa\n+\\s+142:\\s+35\\s+dec \\(hl\\)\n+\\s+143:\\s+dd 35 09\\s+dec \\(ix\\+9\\)\n+\\s+146:\\s+fd 35 09\\s+dec \\(iy\\+9\\)\n+\\s+149:\\s+3d\\s+dec a\n+\\s+14a:\\s+05\\s+dec b\n+\\s+14b:\\s+0b\\s+dec bc\n+\\s+14c:\\s+0d\\s+dec c\n+\\s+14d:\\s+15\\s+dec d\n+\\s+14e:\\s+1b\\s+dec de\n+\\s+14f:\\s+1d\\s+dec e\n+\\s+150:\\s+25\\s+dec h\n+\\s+151:\\s+2b\\s+dec hl\n+\\s+152:\\s+dd 2b\\s+dec ix\n+\\s+154:\\s+fd 2b\\s+dec iy\n+\\s+156:\\s+2d\\s+dec l\n+\\s+157:\\s+3b\\s+dec sp\n+\\s+158:\\s+f3\\s+di\n+\\s+159:\\s+10 05\\s+djnz 0x0160\n+\\s+15b:\\s+fb\\s+ei\n+\\s+15c:\\s+e3\\s+ex \\(sp\\),hl\n+\\s+15d:\\s+dd e3\\s+ex \\(sp\\),ix\n+\\s+15f:\\s+fd e3\\s+ex \\(sp\\),iy\n+\\s+161:\\s+08\\s+ex af,af'\n+\\s+162:\\s+eb\\s+ex de,hl\n+\\s+163:\\s+d9\\s+exx\n+\\s+164:\\s+76\\s+halt\n+\\s+165:\\s+ed 46\\s+im 0\n+\\s+167:\\s+ed 56\\s+im 1\n+\\s+169:\\s+ed 5e\\s+im 2\n+\\s+16b:\\s+ed 78\\s+in a,\\(c\\)\n+\\s+16d:\\s+db 03\\s+in a,\\(0x03\\)\n+\\s+16f:\\s+ed 40\\s+in b,\\(c\\)\n+\\s+171:\\s+ed 48\\s+in c,\\(c\\)\n+\\s+173:\\s+ed 50\\s+in d,\\(c\\)\n+\\s+175:\\s+ed 58\\s+in e,\\(c\\)\n+\\s+177:\\s+ed 60\\s+in h,\\(c\\)\n+\\s+179:\\s+ed 68\\s+in l,\\(c\\)\n+\\s+17b:\\s+34\\s+inc \\(hl\\)\n+\\s+17c:\\s+dd 34 09\\s+inc \\(ix\\+9\\)\n+\\s+17f:\\s+fd 34 09\\s+inc \\(iy\\+9\\)\n+\\s+182:\\s+3c\\s+inc a\n+\\s+183:\\s+04\\s+inc b\n+\\s+184:\\s+03\\s+inc bc\n+\\s+185:\\s+0c\\s+inc c\n+\\s+186:\\s+14\\s+inc d\n+\\s+187:\\s+13\\s+inc de\n+\\s+188:\\s+1c\\s+inc e\n+\\s+189:\\s+24\\s+inc h\n+\\s+18a:\\s+23\\s+inc hl\n+\\s+18b:\\s+dd 23\\s+inc ix\n+\\s+18d:\\s+fd 23\\s+inc iy\n+\\s+18f:\\s+2c\\s+inc l\n+\\s+190:\\s+33\\s+inc sp\n+\\s+191:\\s+ed aa\\s+ind\n+\\s+193:\\s+ed ba\\s+indr\n+\\s+195:\\s+ed a2\\s+ini\n+\\s+197:\\s+ed b2\\s+inir\n+\\s+199:\\s+e9\\s+jp \\(hl\\)\n+\\s+19a:\\s+dd e9\\s+jp \\(ix\\)\n+\\s+19c:\\s+fd e9\\s+jp \\(iy\\)\n+\\s+19e:\\s+c3 34 12\\s+jp 0x1234\n+\\s+1a1:\\s+da 34 12\\s+jp c,0x1234\n+\\s+1a4:\\s+fa 34 12\\s+jp m,0x1234\n+\\s+1a7:\\s+d2 34 12\\s+jp nc,0x1234\n+\\s+1aa:\\s+c2 34 12\\s+jp nz,0x1234\n+\\s+1ad:\\s+f2 34 12\\s+jp p,0x1234\n+\\s+1b0:\\s+ea 34 12\\s+jp pe,0x1234\n+\\s+1b3:\\s+e2 34 12\\s+jp po,0x1234\n+\\s+1b6:\\s+ca 34 12\\s+jp z,0x1234\n+\\s+1b9:\\s+18 05\\s+jr 0x01c0\n+\\s+1bb:\\s+38 05\\s+jr c,0x01c2\n+\\s+1bd:\\s+30 05\\s+jr nc,0x01c4\n+\\s+1bf:\\s+20 05\\s+jr nz,0x01c6\n+\\s+1c1:\\s+28 05\\s+jr z,0x01c8\n+\\s+1c3:\\s+32 34 12\\s+ld \\(0x1234\\),a\n+\\s+1c6:\\s+ed 43 34 12\\s+ld \\(0x1234\\),bc\n+\\s+1ca:\\s+ed 53 34 12\\s+ld \\(0x1234\\),de\n+\\s+1ce:\\s+22 34 12\\s+ld \\(0x1234\\),hl\n+\\s+1d1:\\s+dd 22 34 12\\s+ld \\(0x1234\\),ix\n+\\s+1d5:\\s+fd 22 34 12\\s+ld \\(0x1234\\),iy\n+\\s+1d9:\\s+ed 73 34 12\\s+ld \\(0x1234\\),sp\n+\\s+1dd:\\s+02\\s+ld \\(bc\\),a\n+\\s+1de:\\s+12\\s+ld \\(de\\),a\n+\\s+1df:\\s+36 03\\s+ld \\(hl\\),0x03\n+\\s+1e1:\\s+77\\s+ld \\(hl\\),a\n+\\s+1e2:\\s+70\\s+ld \\(hl\\),b\n+\\s+1e3:\\s+71\\s+ld \\(hl\\),c\n+\\s+1e4:\\s+72\\s+ld \\(hl\\),d\n+\\s+1e5:\\s+73\\s+ld \\(hl\\),e\n+\\s+1e6:\\s+74\\s+ld \\(hl\\),h\n+\\s+1e7:\\s+75\\s+ld \\(hl\\),l\n+\\s+1e8:\\s+dd 36 09 03\\s+ld \\(ix\\+9\\),0x03\n+\\s+1ec:\\s+dd 77 09\\s+ld \\(ix\\+9\\),a\n+\\s+1ef:\\s+dd 70 09\\s+ld \\(ix\\+9\\),b\n+\\s+1f2:\\s+dd 71 09\\s+ld \\(ix\\+9\\),c\n+\\s+1f5:\\s+dd 72 09\\s+ld \\(ix\\+9\\),d\n+\\s+1f8:\\s+dd 73 09\\s+ld \\(ix\\+9\\),e\n+\\s+1fb:\\s+dd 74 09\\s+ld \\(ix\\+9\\),h\n+\\s+1fe:\\s+dd 75 09\\s+ld \\(ix\\+9\\),l\n+\\s+201:\\s+fd 36 09 03\\s+ld \\(iy\\+9\\),0x03\n+\\s+205:\\s+fd 77 09\\s+ld \\(iy\\+9\\),a\n+\\s+208:\\s+fd 70 09\\s+ld \\(iy\\+9\\),b\n+\\s+20b:\\s+fd 71 09\\s+ld \\(iy\\+9\\),c\n+\\s+20e:\\s+fd 72 09\\s+ld \\(iy\\+9\\),d\n+\\s+211:\\s+fd 73 09\\s+ld \\(iy\\+9\\),e\n+\\s+214:\\s+fd 74 09\\s+ld \\(iy\\+9\\),h\n+\\s+217:\\s+fd 75 09\\s+ld \\(iy\\+9\\),l\n+\\s+21a:\\s+3a 34 12\\s+ld a,\\(0x1234\\)\n+\\s+21d:\\s+0a\\s+ld a,\\(bc\\)\n+\\s+21e:\\s+1a\\s+ld a,\\(de\\)\n+\\s+21f:\\s+7e\\s+ld a,\\(hl\\)\n+\\s+220:\\s+dd 7e 09\\s+ld a,\\(ix\\+9\\)\n+\\s+223:\\s+fd 7e 09\\s+ld a,\\(iy\\+9\\)\n+\\s+226:\\s+3e 03\\s+ld a,0x03\n+\\s+228:\\s+7f\\s+ld a,a\n+\\s+229:\\s+78\\s+ld a,b\n+\\s+22a:\\s+79\\s+ld a,c\n+\\s+22b:\\s+7a\\s+ld a,d\n+\\s+22c:\\s+7b\\s+ld a,e\n+\\s+22d:\\s+7c\\s+ld a,h\n+\\s+22e:\\s+ed 57\\s+ld a,i\n+\\s+230:\\s+7d\\s+ld a,l\n+\\s+231:\\s+ed 5f\\s+ld a,r\n+\\s+233:\\s+46\\s+ld b,\\(hl\\)\n+\\s+234:\\s+dd 46 09\\s+ld b,\\(ix\\+9\\)\n+\\s+237:\\s+fd 46 09\\s+ld b,\\(iy\\+9\\)\n+\\s+23a:\\s+06 03\\s+ld b,0x03\n+\\s+23c:\\s+47\\s+ld b,a\n+\\s+23d:\\s+40\\s+ld b,b\n+\\s+23e:\\s+41\\s+ld b,c\n+\\s+23f:\\s+42\\s+ld b,d\n+\\s+240:\\s+43\\s+ld b,e\n+\\s+241:\\s+44\\s+ld b,h\n+\\s+242:\\s+45\\s+ld b,l\n+\\s+243:\\s+ed 4b 34 12\\s+ld bc,\\(0x1234\\)\n+\\s+247:\\s+01 34 12\\s+ld bc,0x1234\n+\\s+24a:\\s+4e\\s+ld c,\\(hl\\)\n+\\s+24b:\\s+dd 4e 09\\s+ld c,\\(ix\\+9\\)\n+\\s+24e:\\s+fd 4e 09\\s+ld c,\\(iy\\+9\\)\n+\\s+251:\\s+0e 03\\s+ld c,0x03\n+\\s+253:\\s+4f\\s+ld c,a\n+\\s+254:\\s+48\\s+ld c,b\n+\\s+255:\\s+49\\s+ld c,c\n+\\s+256:\\s+4a\\s+ld c,d\n+\\s+257:\\s+4b\\s+ld c,e\n+\\s+258:\\s+4c\\s+ld c,h\n+\\s+259:\\s+4d\\s+ld c,l\n+\\s+25a:\\s+56\\s+ld d,\\(hl\\)\n+\\s+25b:\\s+dd 56 09\\s+ld d,\\(ix\\+9\\)\n+\\s+25e:\\s+fd 56 09\\s+ld d,\\(iy\\+9\\)\n+\\s+261:\\s+16 03\\s+ld d,0x03\n+\\s+263:\\s+57\\s+ld d,a\n+\\s+264:\\s+50\\s+ld d,b\n+\\s+265:\\s+51\\s+ld d,c\n+\\s+266:\\s+52\\s+ld d,d\n+\\s+267:\\s+53\\s+ld d,e\n+\\s+268:\\s+54\\s+ld d,h\n+\\s+269:\\s+55\\s+ld d,l\n+\\s+26a:\\s+ed 5b 34 12\\s+ld de,\\(0x1234\\)\n+\\s+26e:\\s+11 34 12\\s+ld de,0x1234\n+\\s+271:\\s+5e\\s+ld e,\\(hl\\)\n+\\s+272:\\s+dd 5e 09\\s+ld e,\\(ix\\+9\\)\n+\\s+275:\\s+fd 5e 09\\s+ld e,\\(iy\\+9\\)\n+\\s+278:\\s+1e 03\\s+ld e,0x03\n+\\s+27a:\\s+5f\\s+ld e,a\n+\\s+27b:\\s+58\\s+ld e,b\n+\\s+27c:\\s+59\\s+ld e,c\n+\\s+27d:\\s+5a\\s+ld e,d\n+\\s+27e:\\s+5b\\s+ld e,e\n+\\s+27f:\\s+5c\\s+ld e,h\n+\\s+280:\\s+5d\\s+ld e,l\n+\\s+281:\\s+66\\s+ld h,\\(hl\\)\n+\\s+282:\\s+dd 66 09\\s+ld h,\\(ix\\+9\\)\n+\\s+285:\\s+fd 66 09\\s+ld h,\\(iy\\+9\\)\n+\\s+288:\\s+26 03\\s+ld h,0x03\n+\\s+28a:\\s+67\\s+ld h,a\n+\\s+28b:\\s+60\\s+ld h,b\n+\\s+28c:\\s+61\\s+ld h,c\n+\\s+28d:\\s+62\\s+ld h,d\n+\\s+28e:\\s+63\\s+ld h,e\n+\\s+28f:\\s+64\\s+ld h,h\n+\\s+290:\\s+65\\s+ld h,l\n+\\s+291:\\s+2a 34 12\\s+ld hl,\\(0x1234\\)\n+\\s+294:\\s+21 34 12\\s+ld hl,0x1234\n+\\s+297:\\s+ed 47\\s+ld i,a\n+\\s+299:\\s+dd 2a 34 12\\s+ld ix,\\(0x1234\\)\n+\\s+29d:\\s+dd 21 34 12\\s+ld ix,0x1234\n+\\s+2a1:\\s+fd 2a 34 12\\s+ld iy,\\(0x1234\\)\n+\\s+2a5:\\s+fd 21 34 12\\s+ld iy,0x1234\n+\\s+2a9:\\s+6e\\s+ld l,\\(hl\\)\n+\\s+2aa:\\s+dd 6e 09\\s+ld l,\\(ix\\+9\\)\n+\\s+2ad:\\s+fd 6e 09\\s+ld l,\\(iy\\+9\\)\n+\\s+2b0:\\s+2e 03\\s+ld l,0x03\n+\\s+2b2:\\s+6f\\s+ld l,a\n+\\s+2b3:\\s+68\\s+ld l,b\n+\\s+2b4:\\s+69\\s+ld l,c\n+\\s+2b5:\\s+6a\\s+ld l,d\n+\\s+2b6:\\s+6b\\s+ld l,e\n+\\s+2b7:\\s+6c\\s+ld l,h\n+\\s+2b8:\\s+6d\\s+ld l,l\n+\\s+2b9:\\s+ed 4f\\s+ld r,a\n+\\s+2bb:\\s+ed 7b 34 12\\s+ld sp,\\(0x1234\\)\n+\\s+2bf:\\s+31 34 12\\s+ld sp,0x1234\n+\\s+2c2:\\s+f9\\s+ld sp,hl\n+\\s+2c3:\\s+dd f9\\s+ld sp,ix\n+\\s+2c5:\\s+fd f9\\s+ld sp,iy\n+\\s+2c7:\\s+ed a8\\s+ldd\n+\\s+2c9:\\s+ed b8\\s+lddr\n+\\s+2cb:\\s+ed a0\\s+ldi\n+\\s+2cd:\\s+ed b0\\s+ldir\n+\\s+2cf:\\s+ed 44\\s+neg\n+\\s+2d1:\\s+00\\s+nop\n+\\s+2d2:\\s+b6\\s+or \\(hl\\)\n+\\s+2d3:\\s+dd b6 09\\s+or \\(ix\\+9\\)\n+\\s+2d6:\\s+fd b6 09\\s+or \\(iy\\+9\\)\n+\\s+2d9:\\s+f6 03\\s+or 0x03\n+\\s+2db:\\s+b7\\s+or a\n+\\s+2dc:\\s+b0\\s+or b\n+\\s+2dd:\\s+b1\\s+or c\n+\\s+2de:\\s+b2\\s+or d\n+\\s+2df:\\s+b3\\s+or e\n+\\s+2e0:\\s+b4\\s+or h\n+\\s+2e1:\\s+b5\\s+or l\n+\\s+2e2:\\s+ed bb\\s+otdr\n+\\s+2e4:\\s+ed b3\\s+otir\n+\\s+2e6:\\s+ed 79\\s+out \\(c\\),a\n+\\s+2e8:\\s+ed 41\\s+out \\(c\\),b\n+\\s+2ea:\\s+ed 49\\s+out \\(c\\),c\n+\\s+2ec:\\s+ed 51\\s+out \\(c\\),d\n+\\s+2ee:\\s+ed 59\\s+out \\(c\\),e\n+\\s+2f0:\\s+ed 61\\s+out \\(c\\),h\n+\\s+2f2:\\s+ed 69\\s+out \\(c\\),l\n+\\s+2f4:\\s+d3 03\\s+out \\(0x03\\),a\n+\\s+2f6:\\s+ed ab\\s+outd\n+\\s+2f8:\\s+ed a3\\s+outi\n+\\s+2fa:\\s+f1\\s+pop af\n+\\s+2fb:\\s+c1\\s+pop bc\n+\\s+2fc:\\s+d1\\s+pop de\n+\\s+2fd:\\s+e1\\s+pop hl\n+\\s+2fe:\\s+dd e1\\s+pop ix\n+\\s+300:\\s+fd e1\\s+pop iy\n+\\s+302:\\s+f5\\s+push af\n+\\s+303:\\s+c5\\s+push bc\n+\\s+304:\\s+d5\\s+push de\n+\\s+305:\\s+e5\\s+push hl\n+\\s+306:\\s+dd e5\\s+push ix\n+\\s+308:\\s+fd e5\\s+push iy\n+\\s+30a:\\s+cb 86\\s+res 0,\\(hl\\)\n+\\s+30c:\\s+dd cb 09 86\\s+res 0,\\(ix\\+9\\)\n+\\s+310:\\s+fd cb 09 86\\s+res 0,\\(iy\\+9\\)\n+\\s+314:\\s+cb 87\\s+res 0,a\n+\\s+316:\\s+cb 80\\s+res 0,b\n+\\s+318:\\s+cb 81\\s+res 0,c\n+\\s+31a:\\s+cb 82\\s+res 0,d\n+\\s+31c:\\s+cb 83\\s+res 0,e\n+\\s+31e:\\s+cb 84\\s+res 0,h\n+\\s+320:\\s+cb 85\\s+res 0,l\n+\\s+322:\\s+cb 8e\\s+res 1,\\(hl\\)\n+\\s+324:\\s+dd cb 09 8e\\s+res 1,\\(ix\\+9\\)\n+\\s+328:\\s+fd cb 09 8e\\s+res 1,\\(iy\\+9\\)\n+\\s+32c:\\s+cb 8f\\s+res 1,a\n+\\s+32e:\\s+cb 88\\s+res 1,b\n+\\s+330:\\s+cb 89\\s+res 1,c\n+\\s+332:\\s+cb 8a\\s+res 1,d\n+\\s+334:\\s+cb 8b\\s+res 1,e\n+\\s+336:\\s+cb 8c\\s+res 1,h\n+\\s+338:\\s+cb 8d\\s+res 1,l\n+\\s+33a:\\s+cb 96\\s+res 2,\\(hl\\)\n+\\s+33c:\\s+dd cb 09 96\\s+res 2,\\(ix\\+9\\)\n+\\s+340:\\s+fd cb 09 96\\s+res 2,\\(iy\\+9\\)\n+\\s+344:\\s+cb 97\\s+res 2,a\n+\\s+346:\\s+cb 90\\s+res 2,b\n+\\s+348:\\s+cb 91\\s+res 2,c\n+\\s+34a:\\s+cb 92\\s+res 2,d\n+\\s+34c:\\s+cb 93\\s+res 2,e\n+\\s+34e:\\s+cb 94\\s+res 2,h\n+\\s+350:\\s+cb 95\\s+res 2,l\n+\\s+352:\\s+cb 9e\\s+res 3,\\(hl\\)\n+\\s+354:\\s+dd cb 09 9e\\s+res 3,\\(ix\\+9\\)\n+\\s+358:\\s+fd cb 09 9e\\s+res 3,\\(iy\\+9\\)\n+\\s+35c:\\s+cb 9f\\s+res 3,a\n+\\s+35e:\\s+cb 98\\s+res 3,b\n+\\s+360:\\s+cb 99\\s+res 3,c\n+\\s+362:\\s+cb 9a\\s+res 3,d\n+\\s+364:\\s+cb 9b\\s+res 3,e\n+\\s+366:\\s+cb 9c\\s+res 3,h\n+\\s+368:\\s+cb 9d\\s+res 3,l\n+\\s+36a:\\s+cb a6\\s+res 4,\\(hl\\)\n+\\s+36c:\\s+dd cb 09 a6\\s+res 4,\\(ix\\+9\\)\n+\\s+370:\\s+fd cb 09 a6\\s+res 4,\\(iy\\+9\\)\n+\\s+374:\\s+cb a7\\s+res 4,a\n+\\s+376:\\s+cb a0\\s+res 4,b\n+\\s+378:\\s+cb a1\\s+res 4,c\n+\\s+37a:\\s+cb a2\\s+res 4,d\n+\\s+37c:\\s+cb a3\\s+res 4,e\n+\\s+37e:\\s+cb a4\\s+res 4,h\n+\\s+380:\\s+cb a5\\s+res 4,l\n+\\s+382:\\s+cb ae\\s+res 5,\\(hl\\)\n+\\s+384:\\s+dd cb 09 ae\\s+res 5,\\(ix\\+9\\)\n+\\s+388:\\s+fd cb 09 ae\\s+res 5,\\(iy\\+9\\)\n+\\s+38c:\\s+cb af\\s+res 5,a\n+\\s+38e:\\s+cb a8\\s+res 5,b\n+\\s+390:\\s+cb a9\\s+res 5,c\n+\\s+392:\\s+cb aa\\s+res 5,d\n+\\s+394:\\s+cb ab\\s+res 5,e\n+\\s+396:\\s+cb ac\\s+res 5,h\n+\\s+398:\\s+cb ad\\s+res 5,l\n+\\s+39a:\\s+cb b6\\s+res 6,\\(hl\\)\n+\\s+39c:\\s+dd cb 09 b6\\s+res 6,\\(ix\\+9\\)\n+\\s+3a0:\\s+fd cb 09 b6\\s+res 6,\\(iy\\+9\\)\n+\\s+3a4:\\s+cb b7\\s+res 6,a\n+\\s+3a6:\\s+cb b0\\s+res 6,b\n+\\s+3a8:\\s+cb b1\\s+res 6,c\n+\\s+3aa:\\s+cb b2\\s+res 6,d\n+\\s+3ac:\\s+cb b3\\s+res 6,e\n+\\s+3ae:\\s+cb b4\\s+res 6,h\n+\\s+3b0:\\s+cb b5\\s+res 6,l\n+\\s+3b2:\\s+cb be\\s+res 7,\\(hl\\)\n+\\s+3b4:\\s+dd cb 09 be\\s+res 7,\\(ix\\+9\\)\n+\\s+3b8:\\s+fd cb 09 be\\s+res 7,\\(iy\\+9\\)\n+\\s+3bc:\\s+cb bf\\s+res 7,a\n+\\s+3be:\\s+cb b8\\s+res 7,b\n+\\s+3c0:\\s+cb b9\\s+res 7,c\n+\\s+3c2:\\s+cb ba\\s+res 7,d\n+\\s+3c4:\\s+cb bb\\s+res 7,e\n+\\s+3c6:\\s+cb bc\\s+res 7,h\n+\\s+3c8:\\s+cb bd\\s+res 7,l\n+\\s+3ca:\\s+c9\\s+ret\n+\\s+3cb:\\s+d8\\s+ret c\n+\\s+3cc:\\s+f8\\s+ret m\n+\\s+3cd:\\s+d0\\s+ret nc\n+\\s+3ce:\\s+c0\\s+ret nz\n+\\s+3cf:\\s+f0\\s+ret p\n+\\s+3d0:\\s+e8\\s+ret pe\n+\\s+3d1:\\s+e0\\s+ret po\n+\\s+3d2:\\s+c8\\s+ret z\n+\\s+3d3:\\s+ed 4d\\s+reti\n+\\s+3d5:\\s+ed 45\\s+retn\n+\\s+3d7:\\s+cb 16\\s+rl \\(hl\\)\n+\\s+3d9:\\s+dd cb 09 16\\s+rl \\(ix\\+9\\)\n+\\s+3dd:\\s+fd cb 09 16\\s+rl \\(iy\\+9\\)\n+\\s+3e1:\\s+cb 17\\s+rl a\n+\\s+3e3:\\s+cb 10\\s+rl b\n+\\s+3e5:\\s+cb 11\\s+rl c\n+\\s+3e7:\\s+cb 12\\s+rl d\n+\\s+3e9:\\s+cb 13\\s+rl e\n+\\s+3eb:\\s+cb 14\\s+rl h\n+\\s+3ed:\\s+cb 15\\s+rl l\n+\\s+3ef:\\s+17\\s+rla\n+\\s+3f0:\\s+cb 06\\s+rlc \\(hl\\)\n+\\s+3f2:\\s+dd cb 09 06\\s+rlc \\(ix\\+9\\)\n+\\s+3f6:\\s+fd cb 09 06\\s+rlc \\(iy\\+9\\)\n+\\s+3fa:\\s+cb 07\\s+rlc a\n+\\s+3fc:\\s+cb 00\\s+rlc b\n+\\s+3fe:\\s+cb 01\\s+rlc c\n+\\s+400:\\s+cb 02\\s+rlc d\n+\\s+402:\\s+cb 03\\s+rlc e\n+\\s+404:\\s+cb 04\\s+rlc h\n+\\s+406:\\s+cb 05\\s+rlc l\n+\\s+408:\\s+07\\s+rlca\n+\\s+409:\\s+ed 6f\\s+rld\n+\\s+40b:\\s+cb 1e\\s+rr \\(hl\\)\n+\\s+40d:\\s+dd cb 09 1e\\s+rr \\(ix\\+9\\)\n+\\s+411:\\s+fd cb 09 1e\\s+rr \\(iy\\+9\\)\n+\\s+415:\\s+cb 1f\\s+rr a\n+\\s+417:\\s+cb 18\\s+rr b\n+\\s+419:\\s+cb 19\\s+rr c\n+\\s+41b:\\s+cb 1a\\s+rr d\n+\\s+41d:\\s+cb 1b\\s+rr e\n+\\s+41f:\\s+cb 1c\\s+rr h\n+\\s+421:\\s+cb 1d\\s+rr l\n+\\s+423:\\s+1f\\s+rra\n+\\s+424:\\s+cb 0e\\s+rrc \\(hl\\)\n+\\s+426:\\s+dd cb 09 0e\\s+rrc \\(ix\\+9\\)\n+\\s+42a:\\s+fd cb 09 0e\\s+rrc \\(iy\\+9\\)\n+\\s+42e:\\s+cb 0f\\s+rrc a\n+\\s+430:\\s+cb 08\\s+rrc b\n+\\s+432:\\s+cb 09\\s+rrc c\n+\\s+434:\\s+cb 0a\\s+rrc d\n+\\s+436:\\s+cb 0b\\s+rrc e\n+\\s+438:\\s+cb 0c\\s+rrc h\n+\\s+43a:\\s+cb 0d\\s+rrc l\n+\\s+43c:\\s+0f\\s+rrca\n+\\s+43d:\\s+ed 67\\s+rrd\n+\\s+43f:\\s+c7\\s+rst 0x00\n+\\s+440:\\s+cf\\s+rst 0x08\n+\\s+441:\\s+d7\\s+rst 0x10\n+\\s+442:\\s+df\\s+rst 0x18\n+\\s+443:\\s+e7\\s+rst 0x20\n+\\s+444:\\s+ef\\s+rst 0x28\n+\\s+445:\\s+f7\\s+rst 0x30\n+\\s+446:\\s+ff\\s+rst 0x38\n+\\s+447:\\s+9e\\s+sbc a,\\(hl\\)\n+\\s+448:\\s+dd 9e 09\\s+sbc a,\\(ix\\+9\\)\n+\\s+44b:\\s+fd 9e 09\\s+sbc a,\\(iy\\+9\\)\n+\\s+44e:\\s+de 03\\s+sbc a,0x03\n+\\s+450:\\s+9f\\s+sbc a,a\n+\\s+451:\\s+98\\s+sbc a,b\n+\\s+452:\\s+99\\s+sbc a,c\n+\\s+453:\\s+9a\\s+sbc a,d\n+\\s+454:\\s+9b\\s+sbc a,e\n+\\s+455:\\s+9c\\s+sbc a,h\n+\\s+456:\\s+9d\\s+sbc a,l\n+\\s+457:\\s+ed 42\\s+sbc hl,bc\n+\\s+459:\\s+ed 52\\s+sbc hl,de\n+\\s+45b:\\s+ed 62\\s+sbc hl,hl\n+\\s+45d:\\s+ed 72\\s+sbc hl,sp\n+\\s+45f:\\s+37\\s+scf\n+\\s+460:\\s+cb c6\\s+set 0,\\(hl\\)\n+\\s+462:\\s+dd cb 09 c6\\s+set 0,\\(ix\\+9\\)\n+\\s+466:\\s+fd cb 09 c6\\s+set 0,\\(iy\\+9\\)\n+\\s+46a:\\s+cb c7\\s+set 0,a\n+\\s+46c:\\s+cb c0\\s+set 0,b\n+\\s+46e:\\s+cb c1\\s+set 0,c\n+\\s+470:\\s+cb c2\\s+set 0,d\n+\\s+472:\\s+cb c3\\s+set 0,e\n+\\s+474:\\s+cb c4\\s+set 0,h\n+\\s+476:\\s+cb c5\\s+set 0,l\n+\\s+478:\\s+cb ce\\s+set 1,\\(hl\\)\n+\\s+47a:\\s+dd cb 09 ce\\s+set 1,\\(ix\\+9\\)\n+\\s+47e:\\s+fd cb 09 ce\\s+set 1,\\(iy\\+9\\)\n+\\s+482:\\s+cb cf\\s+set 1,a\n+\\s+484:\\s+cb c8\\s+set 1,b\n+\\s+486:\\s+cb c9\\s+set 1,c\n+\\s+488:\\s+cb ca\\s+set 1,d\n+\\s+48a:\\s+cb cb\\s+set 1,e\n+\\s+48c:\\s+cb cc\\s+set 1,h\n+\\s+48e:\\s+cb cd\\s+set 1,l\n+\\s+490:\\s+cb d6\\s+set 2,\\(hl\\)\n+\\s+492:\\s+dd cb 09 d6\\s+set 2,\\(ix\\+9\\)\n+\\s+496:\\s+fd cb 09 d6\\s+set 2,\\(iy\\+9\\)\n+\\s+49a:\\s+cb d7\\s+set 2,a\n+\\s+49c:\\s+cb d0\\s+set 2,b\n+\\s+49e:\\s+cb d1\\s+set 2,c\n+\\s+4a0:\\s+cb d2\\s+set 2,d\n+\\s+4a2:\\s+cb d3\\s+set 2,e\n+\\s+4a4:\\s+cb d4\\s+set 2,h\n+\\s+4a6:\\s+cb d5\\s+set 2,l\n+\\s+4a8:\\s+cb de\\s+set 3,\\(hl\\)\n+\\s+4aa:\\s+dd cb 09 de\\s+set 3,\\(ix\\+9\\)\n+\\s+4ae:\\s+fd cb 09 de\\s+set 3,\\(iy\\+9\\)\n+\\s+4b2:\\s+cb df\\s+set 3,a\n+\\s+4b4:\\s+cb d8\\s+set 3,b\n+\\s+4b6:\\s+cb d9\\s+set 3,c\n+\\s+4b8:\\s+cb da\\s+set 3,d\n+\\s+4ba:\\s+cb db\\s+set 3,e\n+\\s+4bc:\\s+cb dc\\s+set 3,h\n+\\s+4be:\\s+cb dd\\s+set 3,l\n+\\s+4c0:\\s+cb e6\\s+set 4,\\(hl\\)\n+\\s+4c2:\\s+dd cb 09 e6\\s+set 4,\\(ix\\+9\\)\n+\\s+4c6:\\s+fd cb 09 e6\\s+set 4,\\(iy\\+9\\)\n+\\s+4ca:\\s+cb e7\\s+set 4,a\n+\\s+4cc:\\s+cb e0\\s+set 4,b\n+\\s+4ce:\\s+cb e1\\s+set 4,c\n+\\s+4d0:\\s+cb e2\\s+set 4,d\n+\\s+4d2:\\s+cb e3\\s+set 4,e\n+\\s+4d4:\\s+cb e4\\s+set 4,h\n+\\s+4d6:\\s+cb e5\\s+set 4,l\n+\\s+4d8:\\s+cb ee\\s+set 5,\\(hl\\)\n+\\s+4da:\\s+dd cb 09 ee\\s+set 5,\\(ix\\+9\\)\n+\\s+4de:\\s+fd cb 09 ee\\s+set 5,\\(iy\\+9\\)\n+\\s+4e2:\\s+cb ef\\s+set 5,a\n+\\s+4e4:\\s+cb e8\\s+set 5,b\n+\\s+4e6:\\s+cb e9\\s+set 5,c\n+\\s+4e8:\\s+cb ea\\s+set 5,d\n+\\s+4ea:\\s+cb eb\\s+set 5,e\n+\\s+4ec:\\s+cb ec\\s+set 5,h\n+\\s+4ee:\\s+cb ed\\s+set 5,l\n+\\s+4f0:\\s+cb f6\\s+set 6,\\(hl\\)\n+\\s+4f2:\\s+dd cb 09 f6\\s+set 6,\\(ix\\+9\\)\n+\\s+4f6:\\s+fd cb 09 f6\\s+set 6,\\(iy\\+9\\)\n+\\s+4fa:\\s+cb f7\\s+set 6,a\n+\\s+4fc:\\s+cb f0\\s+set 6,b\n+\\s+4fe:\\s+cb f1\\s+set 6,c\n+\\s+500:\\s+cb f2\\s+set 6,d\n+\\s+502:\\s+cb f3\\s+set 6,e\n+\\s+504:\\s+cb f4\\s+set 6,h\n+\\s+506:\\s+cb f5\\s+set 6,l\n+\\s+508:\\s+cb fe\\s+set 7,\\(hl\\)\n+\\s+50a:\\s+dd cb 09 fe\\s+set 7,\\(ix\\+9\\)\n+\\s+50e:\\s+fd cb 09 fe\\s+set 7,\\(iy\\+9\\)\n+\\s+512:\\s+cb ff\\s+set 7,a\n+\\s+514:\\s+cb f8\\s+set 7,b\n+\\s+516:\\s+cb f9\\s+set 7,c\n+\\s+518:\\s+cb fa\\s+set 7,d\n+\\s+51a:\\s+cb fb\\s+set 7,e\n+\\s+51c:\\s+cb fc\\s+set 7,h\n+\\s+51e:\\s+cb fd\\s+set 7,l\n+\\s+520:\\s+cb 26\\s+sla \\(hl\\)\n+\\s+522:\\s+dd cb 09 26\\s+sla \\(ix\\+9\\)\n+\\s+526:\\s+fd cb 09 26\\s+sla \\(iy\\+9\\)\n+\\s+52a:\\s+cb 27\\s+sla a\n+\\s+52c:\\s+cb 20\\s+sla b\n+\\s+52e:\\s+cb 21\\s+sla c\n+\\s+530:\\s+cb 22\\s+sla d\n+\\s+532:\\s+cb 23\\s+sla e\n+\\s+534:\\s+cb 24\\s+sla h\n+\\s+536:\\s+cb 25\\s+sla l\n+\\s+538:\\s+cb 2e\\s+sra \\(hl\\)\n+\\s+53a:\\s+dd cb 09 2e\\s+sra \\(ix\\+9\\)\n+\\s+53e:\\s+fd cb 09 2e\\s+sra \\(iy\\+9\\)\n+\\s+542:\\s+cb 2f\\s+sra a\n+\\s+544:\\s+cb 28\\s+sra b\n+\\s+546:\\s+cb 29\\s+sra c\n+\\s+548:\\s+cb 2a\\s+sra d\n+\\s+54a:\\s+cb 2b\\s+sra e\n+\\s+54c:\\s+cb 2c\\s+sra h\n+\\s+54e:\\s+cb 2d\\s+sra l\n+\\s+550:\\s+cb 3e\\s+srl \\(hl\\)\n+\\s+552:\\s+dd cb 09 3e\\s+srl \\(ix\\+9\\)\n+\\s+556:\\s+fd cb 09 3e\\s+srl \\(iy\\+9\\)\n+\\s+55a:\\s+cb 3f\\s+srl a\n+\\s+55c:\\s+cb 38\\s+srl b\n+\\s+55e:\\s+cb 39\\s+srl c\n+\\s+560:\\s+cb 3a\\s+srl d\n+\\s+562:\\s+cb 3b\\s+srl e\n+\\s+564:\\s+cb 3c\\s+srl h\n+\\s+566:\\s+cb 3d\\s+srl l\n+\\s+568:\\s+96\\s+sub \\(hl\\)\n+\\s+569:\\s+dd 96 09\\s+sub \\(ix\\+9\\)\n+\\s+56c:\\s+fd 96 09\\s+sub \\(iy\\+9\\)\n+\\s+56f:\\s+d6 03\\s+sub 0x03\n+\\s+571:\\s+97\\s+sub a\n+\\s+572:\\s+90\\s+sub b\n+\\s+573:\\s+91\\s+sub c\n+\\s+574:\\s+92\\s+sub d\n+\\s+575:\\s+93\\s+sub e\n+\\s+576:\\s+94\\s+sub h\n+\\s+577:\\s+95\\s+sub l\n+\\s+578:\\s+ae\\s+xor \\(hl\\)\n+\\s+579:\\s+dd ae 09\\s+xor \\(ix\\+9\\)\n+\\s+57c:\\s+fd ae 09\\s+xor \\(iy\\+9\\)\n+\\s+57f:\\s+ee 03\\s+xor 0x03\n+\\s+581:\\s+af\\s+xor a\n+\\s+582:\\s+a8\\s+xor b\n+\\s+583:\\s+a9\\s+xor c\n+\\s+584:\\s+aa\\s+xor d\n+\\s+585:\\s+ab\\s+xor e\n+\\s+586:\\s+ac\\s+xor h\n+\\s+587:\\s+ad\\s+xor l"
    },
    {
      "sha": "5f0a1591c0fb90690485067a791fe5fd9fb1a6bf",
      "filename": "gas/testsuite/gas/z80/z80_doc.s",
      "status": "added",
      "additions": 699,
      "deletions": 0,
      "changes": 699,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_doc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_doc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_doc.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,699 @@\n+\t.text\n+\t.org 0\n+\n+\tadc a,(hl)\n+\tadc a,(ix+9)\n+\tadc a,(iy+9)\n+\tadc a,3\n+\tadc a,a\n+\tadc a,b\n+\tadc a,c\n+\tadc a,d\n+\tadc a,e\n+\tadc a,h\n+\tadc a,l\n+\tadc hl,bc\n+\tadc hl,de\n+\tadc hl,hl\n+\tadc hl,sp\n+\tadd a,(hl)\n+\tadd a,(ix+9)\n+\tadd a,(iy+9)\n+\tadd a,3\n+\tadd a,a\n+\tadd a,b\n+\tadd a,c\n+\tadd a,d\n+\tadd a,e\n+\tadd a,h\n+\tadd a,l\n+\tadd hl,bc\n+\tadd hl,de\n+\tadd hl,hl\n+\tadd hl,sp\n+\tadd ix,bc\n+\tadd ix,de\n+\tadd ix,ix\n+\tadd ix,sp\n+\tadd iy,bc\n+\tadd iy,de\n+\tadd iy,iy\n+\tadd iy,sp\n+\tand (hl)\n+\tand (ix+9)\n+\tand (iy+9)\n+\tand 3\n+\tand a\n+\tand b\n+\tand c\n+\tand d\n+\tand e\n+\tand h\n+\tand l\n+\tbit 0,(hl)\n+\tbit 0,(ix+9)\n+\tbit 0,(iy+9)\n+\tbit 0,a\n+\tbit 0,b\n+\tbit 0,c\n+\tbit 0,d\n+\tbit 0,e\n+\tbit 0,h\n+\tbit 0,l\n+\tbit 1,(hl)\n+\tbit 1,(ix+9)\n+\tbit 1,(iy+9)\n+\tbit 1,a\n+\tbit 1,b\n+\tbit 1,c\n+\tbit 1,d\n+\tbit 1,e\n+\tbit 1,h\n+\tbit 1,l\n+\tbit 2,(hl)\n+\tbit 2,(ix+9)\n+\tbit 2,(iy+9)\n+\tbit 2,a\n+\tbit 2,b\n+\tbit 2,c\n+\tbit 2,d\n+\tbit 2,e\n+\tbit 2,h\n+\tbit 2,l\n+\tbit 3,(hl)\n+\tbit 3,(ix+9)\n+\tbit 3,(iy+9)\n+\tbit 3,a\n+\tbit 3,b\n+\tbit 3,c\n+\tbit 3,d\n+\tbit 3,e\n+\tbit 3,h\n+\tbit 3,l\n+\tbit 4,(hl)\n+\tbit 4,(ix+9)\n+\tbit 4,(iy+9)\n+\tbit 4,a\n+\tbit 4,b\n+\tbit 4,c\n+\tbit 4,d\n+\tbit 4,e\n+\tbit 4,h\n+\tbit 4,l\n+\tbit 5,(hl)\n+\tbit 5,(ix+9)\n+\tbit 5,(iy+9)\n+\tbit 5,a\n+\tbit 5,b\n+\tbit 5,c\n+\tbit 5,d\n+\tbit 5,e\n+\tbit 5,h\n+\tbit 5,l\n+\tbit 6,(hl)\n+\tbit 6,(ix+9)\n+\tbit 6,(iy+9)\n+\tbit 6,a\n+\tbit 6,b\n+\tbit 6,c\n+\tbit 6,d\n+\tbit 6,e\n+\tbit 6,h\n+\tbit 6,l\n+\tbit 7,(hl)\n+\tbit 7,(ix+9)\n+\tbit 7,(iy+9)\n+\tbit 7,a\n+\tbit 7,b\n+\tbit 7,c\n+\tbit 7,d\n+\tbit 7,e\n+\tbit 7,h\n+\tbit 7,l\n+\tcall 0x1234\n+\tcall c,0x1234\n+\tcall m,0x1234\n+\tcall nc,0x1234\n+\tcall nz,0x1234\n+\tcall p,0x1234\n+\tcall pe,0x1234\n+\tcall po,0x1234\n+\tcall z,0x1234\n+\tccf\n+\tcp (hl)\n+\tcp (ix+9)\n+\tcp (iy+9)\n+\tcp 03\n+\tcp a\n+\tcp b\n+\tcp c\n+\tcp d\n+\tcp e\n+\tcp h\n+\tcp l\n+\tcpd\n+\tcpdr\n+\tcpi\n+\tcpir\n+\tcpl\n+\tdaa\n+\tdec (hl)\n+\tdec (ix+9)\n+\tdec (iy+9)\n+\tdec a\n+\tdec b\n+\tdec bc\n+\tdec c\n+\tdec d\n+\tdec de\n+\tdec e\n+\tdec h\n+\tdec hl\n+\tdec ix\n+\tdec iy\n+\tdec l\n+\tdec sp\n+\tdi\n+\tdjnz .+7\n+\tei\n+\tex (sp),hl\n+\tex (sp),ix\n+\tex (sp),iy\n+\tex af,af'\n+\tex de,hl\n+\texx\n+\thalt\n+\tim 0\n+\tim 1\n+\tim 2\n+\tin a,(c)\n+\tin a,(3)\n+\tin b,(c)\n+\tin c,(c)\n+\tin d,(c)\n+\tin e,(c)\n+\tin h,(c)\n+\tin l,(c)\n+\tinc (hl)\n+\tinc (ix+9)\n+\tinc (iy+9)\n+\tinc a\n+\tinc b\n+\tinc bc\n+\tinc c\n+\tinc d\n+\tinc de\n+\tinc e\n+\tinc h\n+\tinc hl\n+\tinc ix\n+\tinc iy\n+\tinc l\n+\tinc sp\n+\tind\n+\tindr\n+\tini\n+\tinir\n+\tjp (hl)\n+\tjp (ix)\n+\tjp (iy)\n+\tjp 0x1234\n+\tjp c,0x1234\n+\tjp m,0x1234\n+\tjp nc,0x1234\n+\tjp nz,0x1234\n+\tjp p,0x1234\n+\tjp pe,0x1234\n+\tjp po,0x1234\n+\tjp z,0x1234\n+\tjr .+7\n+\tjr c,.+7\n+\tjr nc,.+7\n+\tjr nz,.+7\n+\tjr z,.+7\n+\tld (0x1234),a\n+\tld (0x1234),bc\n+\tld (0x1234),de\n+\tld (0x1234),hl\n+\tld (0x1234),ix\n+\tld (0x1234),iy\n+\tld (0x1234),sp\n+\tld (bc),a\n+\tld (de),a\n+\tld (hl),3\n+\tld (hl),a\n+\tld (hl),b\n+\tld (hl),c\n+\tld (hl),d\n+\tld (hl),e\n+\tld (hl),h\n+\tld (hl),l\n+\tld (ix+9),3\n+\tld (ix+9),a\n+\tld (ix+9),b\n+\tld (ix+9),c\n+\tld (ix+9),d\n+\tld (ix+9),e\n+\tld (ix+9),h\n+\tld (ix+9),l\n+\tld (iy+9),3\n+\tld (iy+9),a\n+\tld (iy+9),b\n+\tld (iy+9),c\n+\tld (iy+9),d\n+\tld (iy+9),e\n+\tld (iy+9),h\n+\tld (iy+9),l\n+\tld a,(0x1234)\n+\tld a,(bc)\n+\tld a,(de)\n+\tld a,(hl)\n+\tld a,(ix+9)\n+\tld a,(iy+9)\n+\tld a,3\n+\tld a,a\n+\tld a,b\n+\tld a,c\n+\tld a,d\n+\tld a,e\n+\tld a,h\n+\tld a,i\n+\tld a,l\n+\tld a,r\n+\tld b,(hl)\n+\tld b,(ix+9)\n+\tld b,(iy+9)\n+\tld b,3\n+\tld b,a\n+\tld b,b\n+\tld b,c\n+\tld b,d\n+\tld b,e\n+\tld b,h\n+\tld b,l\n+\tld bc,(0x1234)\n+\tld bc,0x1234\n+\tld c,(hl)\n+\tld c,(ix+9)\n+\tld c,(iy+9)\n+\tld c,3\n+\tld c,a\n+\tld c,b\n+\tld c,c\n+\tld c,d\n+\tld c,e\n+\tld c,h\n+\tld c,l\n+\tld d,(hl)\n+\tld d,(ix+9)\n+\tld d,(iy+9)\n+\tld d,3\n+\tld d,a\n+\tld d,b\n+\tld d,c\n+\tld d,d\n+\tld d,e\n+\tld d,h\n+\tld d,l\n+\tld de,(0x1234)\n+\tld de,0x1234\n+\tld e,(hl)\n+\tld e,(ix+9)\n+\tld e,(iy+9)\n+\tld e,3\n+\tld e,a\n+\tld e,b\n+\tld e,c\n+\tld e,d\n+\tld e,e\n+\tld e,h\n+\tld e,l\n+\tld h,(hl)\n+\tld h,(ix+9)\n+\tld h,(iy+9)\n+\tld h,3\n+\tld h,a\n+\tld h,b\n+\tld h,c\n+\tld h,d\n+\tld h,e\n+\tld h,h\n+\tld h,l\n+\tld hl,(0x1234)\n+\tld hl,0x1234\n+\tld i,a\n+\tld ix,(0x1234)\n+\tld ix,0x1234\n+\tld iy,(0x1234)\n+\tld iy,0x1234\n+\tld l,(hl)\n+\tld l,(ix+9)\n+\tld l,(iy+9)\n+\tld l,3\n+\tld l,a\n+\tld l,b\n+\tld l,c\n+\tld l,d\n+\tld l,e\n+\tld l,h\n+\tld l,l\n+\tld r,a\n+\tld sp,(0x1234)\n+\tld sp,0x1234\n+\tld sp,hl\n+\tld sp,ix\n+\tld sp,iy\n+\tldd\n+\tlddr\n+\tldi\n+\tldir\n+\tneg\n+\tnop\n+\tor (hl)\n+\tor (ix+9)\n+\tor (iy+9)\n+\tor 3\n+\tor a\n+\tor b\n+\tor c\n+\tor d\n+\tor e\n+\tor h\n+\tor l\n+\totdr\n+\totir\n+\tout (c),a\n+\tout (c),b\n+\tout (c),c\n+\tout (c),d\n+\tout (c),e\n+\tout (c),h\n+\tout (c),l\n+\tout (3),a\n+\toutd\n+\touti\n+\tpop af\n+\tpop bc\n+\tpop de\n+\tpop hl\n+\tpop ix\n+\tpop iy\n+\tpush af\n+\tpush bc\n+\tpush de\n+\tpush hl\n+\tpush ix\n+\tpush iy\n+\tres 0,(hl)\n+\tres 0,(ix+9)\n+\tres 0,(iy+9)\n+\tres 0,a\n+\tres 0,b\n+\tres 0,c\n+\tres 0,d\n+\tres 0,e\n+\tres 0,h\n+\tres 0,l\n+\tres 1,(hl)\n+\tres 1,(ix+9)\n+\tres 1,(iy+9)\n+\tres 1,a\n+\tres 1,b\n+\tres 1,c\n+\tres 1,d\n+\tres 1,e\n+\tres 1,h\n+\tres 1,l\n+\tres 2,(hl)\n+\tres 2,(ix+9)\n+\tres 2,(iy+9)\n+\tres 2,a\n+\tres 2,b\n+\tres 2,c\n+\tres 2,d\n+\tres 2,e\n+\tres 2,h\n+\tres 2,l\n+\tres 3,(hl)\n+\tres 3,(ix+9)\n+\tres 3,(iy+9)\n+\tres 3,a\n+\tres 3,b\n+\tres 3,c\n+\tres 3,d\n+\tres 3,e\n+\tres 3,h\n+\tres 3,l\n+\tres 4,(hl)\n+\tres 4,(ix+9)\n+\tres 4,(iy+9)\n+\tres 4,a\n+\tres 4,b\n+\tres 4,c\n+\tres 4,d\n+\tres 4,e\n+\tres 4,h\n+\tres 4,l\n+\tres 5,(hl)\n+\tres 5,(ix+9)\n+\tres 5,(iy+9)\n+\tres 5,a\n+\tres 5,b\n+\tres 5,c\n+\tres 5,d\n+\tres 5,e\n+\tres 5,h\n+\tres 5,l\n+\tres 6,(hl)\n+\tres 6,(ix+9)\n+\tres 6,(iy+9)\n+\tres 6,a\n+\tres 6,b\n+\tres 6,c\n+\tres 6,d\n+\tres 6,e\n+\tres 6,h\n+\tres 6,l\n+\tres 7,(hl)\n+\tres 7,(ix+9)\n+\tres 7,(iy+9)\n+\tres 7,a\n+\tres 7,b\n+\tres 7,c\n+\tres 7,d\n+\tres 7,e\n+\tres 7,h\n+\tres 7,l\n+\tret\n+\tret c\n+\tret m\n+\tret nc\n+\tret nz\n+\tret p\n+\tret pe\n+\tret po\n+\tret z\n+\treti\n+\tretn\n+\trl (hl)\n+\trl (ix+9)\n+\trl (iy+9)\n+\trl a\n+\trl b\n+\trl c\n+\trl d\n+\trl e\n+\trl h\n+\trl l\n+\trla\n+\trlc (hl)\n+\trlc (ix+9)\n+\trlc (iy+9)\n+\trlc a\n+\trlc b\n+\trlc c\n+\trlc d\n+\trlc e\n+\trlc h\n+\trlc l\n+\trlca\n+\trld\n+\trr (hl)\n+\trr (ix+9)\n+\trr (iy+9)\n+\trr a\n+\trr b\n+\trr c\n+\trr d\n+\trr e\n+\trr h\n+\trr l\n+\trra\n+\trrc (hl)\n+\trrc (ix+9)\n+\trrc (iy+9)\n+\trrc a\n+\trrc b\n+\trrc c\n+\trrc d\n+\trrc e\n+\trrc h\n+\trrc l\n+\trrca\n+\trrd\n+\trst 0x00\n+\trst 0x08\n+\trst 0x10\n+\trst 0x18\n+\trst 0x20\n+\trst 0x28\n+\trst 0x30\n+\trst 0x38\n+\tsbc a,(hl)\n+\tsbc a,(ix+9)\n+\tsbc a,(iy+9)\n+\tsbc a,3\n+\tsbc a,a\n+\tsbc a,b\n+\tsbc a,c\n+\tsbc a,d\n+\tsbc a,e\n+\tsbc a,h\n+\tsbc a,l\n+\tsbc hl,bc\n+\tsbc hl,de\n+\tsbc hl,hl\n+\tsbc hl,sp\n+\tscf\n+\tset 0,(hl)\n+\tset 0,(ix+9)\n+\tset 0,(iy+9)\n+\tset 0,a\n+\tset 0,b\n+\tset 0,c\n+\tset 0,d\n+\tset 0,e\n+\tset 0,h\n+\tset 0,l\n+\tset 1,(hl)\n+\tset 1,(ix+9)\n+\tset 1,(iy+9)\n+\tset 1,a\n+\tset 1,b\n+\tset 1,c\n+\tset 1,d\n+\tset 1,e\n+\tset 1,h\n+\tset 1,l\n+\tset 2,(hl)\n+\tset 2,(ix+9)\n+\tset 2,(iy+9)\n+\tset 2,a\n+\tset 2,b\n+\tset 2,c\n+\tset 2,d\n+\tset 2,e\n+\tset 2,h\n+\tset 2,l\n+\tset 3,(hl)\n+\tset 3,(ix+9)\n+\tset 3,(iy+9)\n+\tset 3,a\n+\tset 3,b\n+\tset 3,c\n+\tset 3,d\n+\tset 3,e\n+\tset 3,h\n+\tset 3,l\n+\tset 4,(hl)\n+\tset 4,(ix+9)\n+\tset 4,(iy+9)\n+\tset 4,a\n+\tset 4,b\n+\tset 4,c\n+\tset 4,d\n+\tset 4,e\n+\tset 4,h\n+\tset 4,l\n+\tset 5,(hl)\n+\tset 5,(ix+9)\n+\tset 5,(iy+9)\n+\tset 5,a\n+\tset 5,b\n+\tset 5,c\n+\tset 5,d\n+\tset 5,e\n+\tset 5,h\n+\tset 5,l\n+\tset 6,(hl)\n+\tset 6,(ix+9)\n+\tset 6,(iy+9)\n+\tset 6,a\n+\tset 6,b\n+\tset 6,c\n+\tset 6,d\n+\tset 6,e\n+\tset 6,h\n+\tset 6,l\n+\tset 7,(hl)\n+\tset 7,(ix+9)\n+\tset 7,(iy+9)\n+\tset 7,a\n+\tset 7,b\n+\tset 7,c\n+\tset 7,d\n+\tset 7,e\n+\tset 7,h\n+\tset 7,l\n+\tsla (hl)\n+\tsla (ix+9)\n+\tsla (iy+9)\n+\tsla a\n+\tsla b\n+\tsla c\n+\tsla d\n+\tsla e\n+\tsla h\n+\tsla l\n+\tsra (hl)\n+\tsra (ix+9)\n+\tsra (iy+9)\n+\tsra a\n+\tsra b\n+\tsra c\n+\tsra d\n+\tsra e\n+\tsra h\n+\tsra l\n+\tsrl (hl)\n+\tsrl (ix+9)\n+\tsrl (iy+9)\n+\tsrl a\n+\tsrl b\n+\tsrl c\n+\tsrl d\n+\tsrl e\n+\tsrl h\n+\tsrl l\n+\tsub (hl)\n+\tsub (ix+9)\n+\tsub (iy+9)\n+\tsub 3\n+\tsub a\n+\tsub b\n+\tsub c\n+\tsub d\n+\tsub e\n+\tsub h\n+\tsub l\n+\txor (hl)\n+\txor (ix+9)\n+\txor (iy+9)\n+\txor 3\n+\txor a\n+\txor b\n+\txor c\n+\txor d\n+\txor e\n+\txor h\n+\txor l"
    },
    {
      "sha": "db668b6c48359eebca942eadecc8d1323d7918c0",
      "filename": "gas/testsuite/gas/z80/z80_ii8.d",
      "status": "added",
      "additions": 109,
      "deletions": 0,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_ii8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_ii8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_ii8.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,109 @@\n+#as: --with-inst=idx-reg-halves\n+#objdump: -d\n+#name: halves of index register\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+[  ]+0:[ \t]+dd 7c[       \t]+ld a,ixh\n+[  ]+2:[ \t]+dd 44[       \t]+ld b,ixh\n+[  ]+4:[ \t]+dd 4c[       \t]+ld c,ixh\n+[  ]+6:[ \t]+dd 54[       \t]+ld d,ixh\n+[  ]+8:[ \t]+dd 5c[       \t]+ld e,ixh\n+[  ]+a:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[  ]+c:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[  ]+e:[ \t]+dd 7d[       \t]+ld a,ixl\n+[ ]+10:[ \t]+dd 45[       \t]+ld b,ixl\n+[ ]+12:[ \t]+dd 4d[       \t]+ld c,ixl\n+[ ]+14:[ \t]+dd 55[       \t]+ld d,ixl\n+[ ]+16:[ \t]+dd 5d[       \t]+ld e,ixl\n+[ ]+18:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+1a:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+1c:[ \t]+fd 7c[       \t]+ld a,iyh\n+[ ]+1e:[ \t]+fd 44[       \t]+ld b,iyh\n+[ ]+20:[ \t]+fd 4c[       \t]+ld c,iyh\n+[ ]+22:[ \t]+fd 54[       \t]+ld d,iyh\n+[ ]+24:[ \t]+fd 5c[       \t]+ld e,iyh\n+[ ]+26:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+28:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+2a:[ \t]+fd 7d[       \t]+ld a,iyl\n+[ ]+2c:[ \t]+fd 45[       \t]+ld b,iyl\n+[ ]+2e:[ \t]+fd 4d[       \t]+ld c,iyl\n+[ ]+30:[ \t]+fd 55[       \t]+ld d,iyl\n+[ ]+32:[ \t]+fd 5d[       \t]+ld e,iyl\n+[ ]+34:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+36:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+38:[ \t]+dd 67[       \t]+ld ixh,a\n+[ ]+3a:[ \t]+dd 60[       \t]+ld ixh,b\n+[ ]+3c:[ \t]+dd 61[       \t]+ld ixh,c\n+[ ]+3e:[ \t]+dd 62[       \t]+ld ixh,d\n+[ ]+40:[ \t]+dd 63[       \t]+ld ixh,e\n+[ ]+42:[ \t]+dd 64[       \t]+ld ixh,ixh\n+[ ]+44:[ \t]+dd 65[       \t]+ld ixh,ixl\n+[ ]+46:[ \t]+dd 26 19[    \t]+ld ixh,0x19\n+[ ]+49:[ \t]+dd 6f[       \t]+ld ixl,a\n+[ ]+4b:[ \t]+dd 68[       \t]+ld ixl,b\n+[ ]+4d:[ \t]+dd 69[       \t]+ld ixl,c\n+[ ]+4f:[ \t]+dd 6a[       \t]+ld ixl,d\n+[ ]+51:[ \t]+dd 6b[       \t]+ld ixl,e\n+[ ]+53:[ \t]+dd 6c[       \t]+ld ixl,ixh\n+[ ]+55:[ \t]+dd 6d[       \t]+ld ixl,ixl\n+[ ]+57:[ \t]+dd 2e 19[    \t]+ld ixl,0x19\n+[ ]+5a:[ \t]+fd 67[       \t]+ld iyh,a\n+[ ]+5c:[ \t]+fd 60[       \t]+ld iyh,b\n+[ ]+5e:[ \t]+fd 61[       \t]+ld iyh,c\n+[ ]+60:[ \t]+fd 62[       \t]+ld iyh,d\n+[ ]+62:[ \t]+fd 63[       \t]+ld iyh,e\n+[ ]+64:[ \t]+fd 64[       \t]+ld iyh,iyh\n+[ ]+66:[ \t]+fd 65[       \t]+ld iyh,iyl\n+[ ]+68:[ \t]+fd 26 19[    \t]+ld iyh,0x19\n+[ ]+6b:[ \t]+fd 6f[       \t]+ld iyl,a\n+[ ]+6d:[ \t]+fd 68[       \t]+ld iyl,b\n+[ ]+6f:[ \t]+fd 69[       \t]+ld iyl,c\n+[ ]+71:[ \t]+fd 6a[       \t]+ld iyl,d\n+[ ]+73:[ \t]+fd 6b[       \t]+ld iyl,e\n+[ ]+75:[ \t]+fd 6c[       \t]+ld iyl,iyh\n+[ ]+77:[ \t]+fd 6d[       \t]+ld iyl,iyl\n+[ ]+79:[ \t]+fd 2e 19[    \t]+ld iyl,0x19\n+[ ]+7c:[ \t]+dd 84[       \t]+add a,ixh\n+[ ]+7e:[ \t]+dd 85[       \t]+add a,ixl\n+[ ]+80:[ \t]+fd 84[       \t]+add a,iyh\n+[ ]+82:[ \t]+fd 85[       \t]+add a,iyl\n+[ ]+84:[ \t]+dd 8c[       \t]+adc a,ixh\n+[ ]+86:[ \t]+dd 8d[       \t]+adc a,ixl\n+[ ]+88:[ \t]+fd 8c[       \t]+adc a,iyh\n+[ ]+8a:[ \t]+fd 8d[       \t]+adc a,iyl\n+[ ]+8c:[ \t]+dd bc[       \t]+cp ixh\n+[ ]+8e:[ \t]+dd bd[       \t]+cp ixl\n+[ ]+90:[ \t]+fd bc[       \t]+cp iyh\n+[ ]+92:[ \t]+fd bd[       \t]+cp iyl\n+[ ]+94:[ \t]+dd 25[       \t]+dec ixh\n+[ ]+96:[ \t]+dd 2d[       \t]+dec ixl\n+[ ]+98:[ \t]+fd 25[       \t]+dec iyh\n+[ ]+9a:[ \t]+fd 2d[       \t]+dec iyl\n+[ ]+9c:[ \t]+dd 24[       \t]+inc ixh\n+[ ]+9e:[ \t]+dd 2c[       \t]+inc ixl\n+[ ]+a0:[ \t]+fd 24[       \t]+inc iyh\n+[ ]+a2:[ \t]+fd 2c[       \t]+inc iyl\n+[ ]+a4:[ \t]+dd 9c[       \t]+sbc a,ixh\n+[ ]+a6:[ \t]+dd 9d[       \t]+sbc a,ixl\n+[ ]+a8:[ \t]+fd 9c[       \t]+sbc a,iyh\n+[ ]+aa:[ \t]+fd 9d[       \t]+sbc a,iyl\n+[ ]+ac:[ \t]+dd 94[       \t]+sub ixh\n+[ ]+ae:[ \t]+dd 95[       \t]+sub ixl\n+[ ]+b0:[ \t]+fd 94[       \t]+sub iyh\n+[ ]+b2:[ \t]+fd 95[       \t]+sub iyl\n+[ ]+b4:[ \t]+dd a4[       \t]+and ixh\n+[ ]+b6:[ \t]+dd a5[       \t]+and ixl\n+[ ]+b8:[ \t]+fd a4[       \t]+and iyh\n+[ ]+ba:[ \t]+fd a5[       \t]+and iyl\n+[ ]+bc:[ \t]+dd b4[       \t]+or ixh\n+[ ]+be:[ \t]+dd b5[       \t]+or ixl\n+[ ]+c0:[ \t]+fd b4[       \t]+or iyh\n+[ ]+c2:[ \t]+fd b5[       \t]+or iyl\n+[ ]+c4:[ \t]+dd ac[       \t]+xor ixh\n+[ ]+c6:[ \t]+dd ad[       \t]+xor ixl\n+[ ]+c8:[ \t]+fd ac[       \t]+xor iyh\n+[ ]+ca:[ \t]+fd ad[       \t]+xor iyl"
    },
    {
      "sha": "c043b408a2c005f0dcc0ffbeac21ef4727fda9ef",
      "filename": "gas/testsuite/gas/z80/z80_ii8.s",
      "status": "added",
      "additions": 123,
      "deletions": 0,
      "changes": 123,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_ii8.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_ii8.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_ii8.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,123 @@\n+        .text\n+        .org    0\n+\n+; load group\n+        ld    a,ixh\n+        ld    b,ixh\n+        ld    c,ixh\n+        ld    d,ixh\n+        ld    e,ixh\n+        ld    ixh,ixh\n+        ld    ixl,ixh\n+\n+        ld    a,ixl\n+        ld    b,ixl\n+        ld    c,ixl\n+        ld    d,ixl\n+        ld    e,ixl\n+        ld    ixh,ixl\n+        ld    ixl,ixl\n+\n+        ld    a,iyh\n+        ld    b,iyh\n+        ld    c,iyh\n+        ld    d,iyh\n+        ld    e,iyh\n+        ld    iyh,iyh\n+        ld    iyl,iyh\n+\n+        ld    a,iyl\n+        ld    b,iyl\n+        ld    c,iyl\n+        ld    d,iyl\n+        ld    e,iyl\n+        ld    iyh,iyl\n+        ld    iyl,iyl\n+\n+        ld    ixh,a\n+        ld    ixh,b\n+        ld    ixh,c\n+        ld    ixh,d\n+        ld    ixh,e\n+        ld    ixh,ixh\n+        ld    ixh,ixl\n+        ld    ixh,25\n+\n+        ld    ixl,a\n+        ld    ixl,b\n+        ld    ixl,c\n+        ld    ixl,d\n+        ld    ixl,e\n+        ld    ixl,ixh\n+        ld    ixl,ixl\n+        ld    ixl,25\n+\n+        ld    iyh,a\n+        ld    iyh,b\n+        ld    iyh,c\n+        ld    iyh,d\n+        ld    iyh,e\n+        ld    iyh,iyh\n+        ld    iyh,iyl\n+        ld    iyh,25\n+\n+        ld    iyl,a\n+        ld    iyl,b\n+        ld    iyl,c\n+        ld    iyl,d\n+        ld    iyl,e\n+        ld    iyl,iyh\n+        ld    iyl,iyl\n+        ld    iyl,25\n+\n+; arithmetic group\n+        add   a,ixh\n+        add   a,ixl\n+        add   a,iyh\n+        add   a,iyl\n+\n+        adc   a,ixh\n+        adc   a,ixl\n+        adc   a,iyh\n+        adc   a,iyl\n+\n+        cp    ixh\n+        cp    ixl\n+        cp    iyh\n+        cp    iyl\n+\n+        dec   ixh\n+        dec   ixl\n+        dec   iyh\n+        dec   iyl\n+\n+        inc   ixh\n+        inc   ixl\n+        inc   iyh\n+        inc   iyl\n+\n+        sbc   a,ixh\n+        sbc   a,ixl\n+        sbc   a,iyh\n+        sbc   a,iyl\n+\n+        sub   ixh\n+        sub   ixl\n+        sub   iyh\n+        sub   iyl\n+\n+; logic group\n+        and   ixh\n+        and   ixl\n+        and   iyh\n+        and   iyl\n+\n+        or    ixh\n+        or    ixl\n+        or    iyh\n+        or    iyl\n+\n+        xor   ixh\n+        xor   ixl\n+        xor   iyh\n+        xor   iyl"
    },
    {
      "sha": "e9c2d91657cece99042db5b793de5512ca046d18",
      "filename": "gas/testsuite/gas/z80/z80_in_f_c.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_in_f_c.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_in_f_c.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_in_f_c.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,10 @@\n+#as: --with-inst=in-f-c\n+#objdump: -d\n+#name: Z80 undocumented instruction IN F,(C)\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+ed 70\\s+in f,\\(c\\)"
    },
    {
      "sha": "f048096fffd3cb0a3f58f4024eb7ca1352f949c9",
      "filename": "gas/testsuite/gas/z80/z80_in_f_c.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_in_f_c.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_in_f_c.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_in_f_c.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,4 @@\n+\t.text\n+\t.org\t0\n+\n+\tin\tf,(c)"
    },
    {
      "sha": "42d917a37e46c41bd4a752cf5af11a36e87c1f02",
      "filename": "gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "status": "added",
      "additions": 345,
      "deletions": 0,
      "changes": 345,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_op_ii_ld.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_op_ii_ld.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,345 @@\n+#as: -z80 -with-inst=sli,op-ii-ld\n+#objdump: -d\n+#name: Z80 undocumented instructions DD/FD CB dis op\n+\n+.*: .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+dd cb 08 07\\s+rlc \\(ix\\+8\\),a\n+\\s+4:\\s+dd cb 08 00\\s+rlc \\(ix\\+8\\),b\n+\\s+8:\\s+dd cb 08 01\\s+rlc \\(ix\\+8\\),c\n+\\s+c:\\s+dd cb 08 02\\s+rlc \\(ix\\+8\\),d\n+\\s+10:\\s+dd cb 08 03\\s+rlc \\(ix\\+8\\),e\n+\\s+14:\\s+dd cb 08 04\\s+rlc \\(ix\\+8\\),h\n+\\s+18:\\s+dd cb 08 05\\s+rlc \\(ix\\+8\\),l\n+\\s+1c:\\s+fd cb 08 07\\s+rlc \\(iy\\+8\\),a\n+\\s+20:\\s+fd cb 08 00\\s+rlc \\(iy\\+8\\),b\n+\\s+24:\\s+fd cb 08 01\\s+rlc \\(iy\\+8\\),c\n+\\s+28:\\s+fd cb 08 02\\s+rlc \\(iy\\+8\\),d\n+\\s+2c:\\s+fd cb 08 03\\s+rlc \\(iy\\+8\\),e\n+\\s+30:\\s+fd cb 08 04\\s+rlc \\(iy\\+8\\),h\n+\\s+34:\\s+fd cb 08 05\\s+rlc \\(iy\\+8\\),l\n+\\s+38:\\s+dd cb 08 0f\\s+rrc \\(ix\\+8\\),a\n+\\s+3c:\\s+dd cb 08 08\\s+rrc \\(ix\\+8\\),b\n+\\s+40:\\s+dd cb 08 09\\s+rrc \\(ix\\+8\\),c\n+\\s+44:\\s+dd cb 08 0a\\s+rrc \\(ix\\+8\\),d\n+\\s+48:\\s+dd cb 08 0b\\s+rrc \\(ix\\+8\\),e\n+\\s+4c:\\s+dd cb 08 0c\\s+rrc \\(ix\\+8\\),h\n+\\s+50:\\s+dd cb 08 0d\\s+rrc \\(ix\\+8\\),l\n+\\s+54:\\s+fd cb 08 0f\\s+rrc \\(iy\\+8\\),a\n+\\s+58:\\s+fd cb 08 08\\s+rrc \\(iy\\+8\\),b\n+\\s+5c:\\s+fd cb 08 09\\s+rrc \\(iy\\+8\\),c\n+\\s+60:\\s+fd cb 08 0a\\s+rrc \\(iy\\+8\\),d\n+\\s+64:\\s+fd cb 08 0b\\s+rrc \\(iy\\+8\\),e\n+\\s+68:\\s+fd cb 08 0c\\s+rrc \\(iy\\+8\\),h\n+\\s+6c:\\s+fd cb 08 0d\\s+rrc \\(iy\\+8\\),l\n+\\s+70:\\s+dd cb 08 17\\s+rl \\(ix\\+8\\),a\n+\\s+74:\\s+dd cb 08 10\\s+rl \\(ix\\+8\\),b\n+\\s+78:\\s+dd cb 08 11\\s+rl \\(ix\\+8\\),c\n+\\s+7c:\\s+dd cb 08 12\\s+rl \\(ix\\+8\\),d\n+\\s+80:\\s+dd cb 08 13\\s+rl \\(ix\\+8\\),e\n+\\s+84:\\s+dd cb 08 14\\s+rl \\(ix\\+8\\),h\n+\\s+88:\\s+dd cb 08 15\\s+rl \\(ix\\+8\\),l\n+\\s+8c:\\s+fd cb 08 17\\s+rl \\(iy\\+8\\),a\n+\\s+90:\\s+fd cb 08 10\\s+rl \\(iy\\+8\\),b\n+\\s+94:\\s+fd cb 08 11\\s+rl \\(iy\\+8\\),c\n+\\s+98:\\s+fd cb 08 12\\s+rl \\(iy\\+8\\),d\n+\\s+9c:\\s+fd cb 08 13\\s+rl \\(iy\\+8\\),e\n+\\s+a0:\\s+fd cb 08 14\\s+rl \\(iy\\+8\\),h\n+\\s+a4:\\s+fd cb 08 15\\s+rl \\(iy\\+8\\),l\n+\\s+a8:\\s+dd cb 08 1f\\s+rr \\(ix\\+8\\),a\n+\\s+ac:\\s+dd cb 08 18\\s+rr \\(ix\\+8\\),b\n+\\s+b0:\\s+dd cb 08 19\\s+rr \\(ix\\+8\\),c\n+\\s+b4:\\s+dd cb 08 1a\\s+rr \\(ix\\+8\\),d\n+\\s+b8:\\s+dd cb 08 1b\\s+rr \\(ix\\+8\\),e\n+\\s+bc:\\s+dd cb 08 1c\\s+rr \\(ix\\+8\\),h\n+\\s+c0:\\s+dd cb 08 1d\\s+rr \\(ix\\+8\\),l\n+\\s+c4:\\s+fd cb 08 1f\\s+rr \\(iy\\+8\\),a\n+\\s+c8:\\s+fd cb 08 18\\s+rr \\(iy\\+8\\),b\n+\\s+cc:\\s+fd cb 08 19\\s+rr \\(iy\\+8\\),c\n+\\s+d0:\\s+fd cb 08 1a\\s+rr \\(iy\\+8\\),d\n+\\s+d4:\\s+fd cb 08 1b\\s+rr \\(iy\\+8\\),e\n+\\s+d8:\\s+fd cb 08 1c\\s+rr \\(iy\\+8\\),h\n+\\s+dc:\\s+fd cb 08 1d\\s+rr \\(iy\\+8\\),l\n+\\s+e0:\\s+dd cb 08 27\\s+sla \\(ix\\+8\\),a\n+\\s+e4:\\s+dd cb 08 20\\s+sla \\(ix\\+8\\),b\n+\\s+e8:\\s+dd cb 08 21\\s+sla \\(ix\\+8\\),c\n+\\s+ec:\\s+dd cb 08 22\\s+sla \\(ix\\+8\\),d\n+\\s+f0:\\s+dd cb 08 23\\s+sla \\(ix\\+8\\),e\n+\\s+f4:\\s+dd cb 08 24\\s+sla \\(ix\\+8\\),h\n+\\s+f8:\\s+dd cb 08 25\\s+sla \\(ix\\+8\\),l\n+\\s+fc:\\s+fd cb 08 27\\s+sla \\(iy\\+8\\),a\n+\\s+100:\\s+fd cb 08 20\\s+sla \\(iy\\+8\\),b\n+\\s+104:\\s+fd cb 08 21\\s+sla \\(iy\\+8\\),c\n+\\s+108:\\s+fd cb 08 22\\s+sla \\(iy\\+8\\),d\n+\\s+10c:\\s+fd cb 08 23\\s+sla \\(iy\\+8\\),e\n+\\s+110:\\s+fd cb 08 24\\s+sla \\(iy\\+8\\),h\n+\\s+114:\\s+fd cb 08 25\\s+sla \\(iy\\+8\\),l\n+\\s+118:\\s+dd cb 08 2f\\s+sra \\(ix\\+8\\),a\n+\\s+11c:\\s+dd cb 08 28\\s+sra \\(ix\\+8\\),b\n+\\s+120:\\s+dd cb 08 29\\s+sra \\(ix\\+8\\),c\n+\\s+124:\\s+dd cb 08 2a\\s+sra \\(ix\\+8\\),d\n+\\s+128:\\s+dd cb 08 2b\\s+sra \\(ix\\+8\\),e\n+\\s+12c:\\s+dd cb 08 2c\\s+sra \\(ix\\+8\\),h\n+\\s+130:\\s+dd cb 08 2d\\s+sra \\(ix\\+8\\),l\n+\\s+134:\\s+fd cb 08 2f\\s+sra \\(iy\\+8\\),a\n+\\s+138:\\s+fd cb 08 28\\s+sra \\(iy\\+8\\),b\n+\\s+13c:\\s+fd cb 08 29\\s+sra \\(iy\\+8\\),c\n+\\s+140:\\s+fd cb 08 2a\\s+sra \\(iy\\+8\\),d\n+\\s+144:\\s+fd cb 08 2b\\s+sra \\(iy\\+8\\),e\n+\\s+148:\\s+fd cb 08 2c\\s+sra \\(iy\\+8\\),h\n+\\s+14c:\\s+fd cb 08 2d\\s+sra \\(iy\\+8\\),l\n+\\s+150:\\s+dd cb 08 37\\s+sli \\(ix\\+8\\),a\n+\\s+154:\\s+dd cb 08 30\\s+sli \\(ix\\+8\\),b\n+\\s+158:\\s+dd cb 08 31\\s+sli \\(ix\\+8\\),c\n+\\s+15c:\\s+dd cb 08 32\\s+sli \\(ix\\+8\\),d\n+\\s+160:\\s+dd cb 08 33\\s+sli \\(ix\\+8\\),e\n+\\s+164:\\s+dd cb 08 34\\s+sli \\(ix\\+8\\),h\n+\\s+168:\\s+dd cb 08 35\\s+sli \\(ix\\+8\\),l\n+\\s+16c:\\s+fd cb 08 37\\s+sli \\(iy\\+8\\),a\n+\\s+170:\\s+fd cb 08 30\\s+sli \\(iy\\+8\\),b\n+\\s+174:\\s+fd cb 08 31\\s+sli \\(iy\\+8\\),c\n+\\s+178:\\s+fd cb 08 32\\s+sli \\(iy\\+8\\),d\n+\\s+17c:\\s+fd cb 08 33\\s+sli \\(iy\\+8\\),e\n+\\s+180:\\s+fd cb 08 34\\s+sli \\(iy\\+8\\),h\n+\\s+184:\\s+fd cb 08 35\\s+sli \\(iy\\+8\\),l\n+\\s+188:\\s+dd cb 08 3f\\s+srl \\(ix\\+8\\),a\n+\\s+18c:\\s+dd cb 08 38\\s+srl \\(ix\\+8\\),b\n+\\s+190:\\s+dd cb 08 39\\s+srl \\(ix\\+8\\),c\n+\\s+194:\\s+dd cb 08 3a\\s+srl \\(ix\\+8\\),d\n+\\s+198:\\s+dd cb 08 3b\\s+srl \\(ix\\+8\\),e\n+\\s+19c:\\s+dd cb 08 3c\\s+srl \\(ix\\+8\\),h\n+\\s+1a0:\\s+dd cb 08 3d\\s+srl \\(ix\\+8\\),l\n+\\s+1a4:\\s+fd cb 08 3f\\s+srl \\(iy\\+8\\),a\n+\\s+1a8:\\s+fd cb 08 38\\s+srl \\(iy\\+8\\),b\n+\\s+1ac:\\s+fd cb 08 39\\s+srl \\(iy\\+8\\),c\n+\\s+1b0:\\s+fd cb 08 3a\\s+srl \\(iy\\+8\\),d\n+\\s+1b4:\\s+fd cb 08 3b\\s+srl \\(iy\\+8\\),e\n+\\s+1b8:\\s+fd cb 08 3c\\s+srl \\(iy\\+8\\),h\n+\\s+1bc:\\s+fd cb 08 3d\\s+srl \\(iy\\+8\\),l\n+\\s+1c0:\\s+dd cb 08 87\\s+res 0,\\(ix\\+8\\),a\n+\\s+1c4:\\s+dd cb 08 80\\s+res 0,\\(ix\\+8\\),b\n+\\s+1c8:\\s+dd cb 08 81\\s+res 0,\\(ix\\+8\\),c\n+\\s+1cc:\\s+dd cb 08 82\\s+res 0,\\(ix\\+8\\),d\n+\\s+1d0:\\s+dd cb 08 83\\s+res 0,\\(ix\\+8\\),e\n+\\s+1d4:\\s+dd cb 08 84\\s+res 0,\\(ix\\+8\\),h\n+\\s+1d8:\\s+dd cb 08 85\\s+res 0,\\(ix\\+8\\),l\n+\\s+1dc:\\s+fd cb 08 87\\s+res 0,\\(iy\\+8\\),a\n+\\s+1e0:\\s+fd cb 08 80\\s+res 0,\\(iy\\+8\\),b\n+\\s+1e4:\\s+fd cb 08 81\\s+res 0,\\(iy\\+8\\),c\n+\\s+1e8:\\s+fd cb 08 82\\s+res 0,\\(iy\\+8\\),d\n+\\s+1ec:\\s+fd cb 08 83\\s+res 0,\\(iy\\+8\\),e\n+\\s+1f0:\\s+fd cb 08 84\\s+res 0,\\(iy\\+8\\),h\n+\\s+1f4:\\s+fd cb 08 85\\s+res 0,\\(iy\\+8\\),l\n+\\s+1f8:\\s+dd cb 08 8f\\s+res 1,\\(ix\\+8\\),a\n+\\s+1fc:\\s+dd cb 08 88\\s+res 1,\\(ix\\+8\\),b\n+\\s+200:\\s+dd cb 08 89\\s+res 1,\\(ix\\+8\\),c\n+\\s+204:\\s+dd cb 08 8a\\s+res 1,\\(ix\\+8\\),d\n+\\s+208:\\s+dd cb 08 8b\\s+res 1,\\(ix\\+8\\),e\n+\\s+20c:\\s+dd cb 08 8c\\s+res 1,\\(ix\\+8\\),h\n+\\s+210:\\s+dd cb 08 8d\\s+res 1,\\(ix\\+8\\),l\n+\\s+214:\\s+fd cb 08 8f\\s+res 1,\\(iy\\+8\\),a\n+\\s+218:\\s+fd cb 08 88\\s+res 1,\\(iy\\+8\\),b\n+\\s+21c:\\s+fd cb 08 89\\s+res 1,\\(iy\\+8\\),c\n+\\s+220:\\s+fd cb 08 8a\\s+res 1,\\(iy\\+8\\),d\n+\\s+224:\\s+fd cb 08 8b\\s+res 1,\\(iy\\+8\\),e\n+\\s+228:\\s+fd cb 08 8c\\s+res 1,\\(iy\\+8\\),h\n+\\s+22c:\\s+fd cb 08 8d\\s+res 1,\\(iy\\+8\\),l\n+\\s+230:\\s+dd cb 08 97\\s+res 2,\\(ix\\+8\\),a\n+\\s+234:\\s+dd cb 08 90\\s+res 2,\\(ix\\+8\\),b\n+\\s+238:\\s+dd cb 08 91\\s+res 2,\\(ix\\+8\\),c\n+\\s+23c:\\s+dd cb 08 92\\s+res 2,\\(ix\\+8\\),d\n+\\s+240:\\s+dd cb 08 93\\s+res 2,\\(ix\\+8\\),e\n+\\s+244:\\s+dd cb 08 94\\s+res 2,\\(ix\\+8\\),h\n+\\s+248:\\s+dd cb 08 95\\s+res 2,\\(ix\\+8\\),l\n+\\s+24c:\\s+fd cb 08 97\\s+res 2,\\(iy\\+8\\),a\n+\\s+250:\\s+fd cb 08 90\\s+res 2,\\(iy\\+8\\),b\n+\\s+254:\\s+fd cb 08 91\\s+res 2,\\(iy\\+8\\),c\n+\\s+258:\\s+fd cb 08 92\\s+res 2,\\(iy\\+8\\),d\n+\\s+25c:\\s+fd cb 08 93\\s+res 2,\\(iy\\+8\\),e\n+\\s+260:\\s+fd cb 08 94\\s+res 2,\\(iy\\+8\\),h\n+\\s+264:\\s+fd cb 08 95\\s+res 2,\\(iy\\+8\\),l\n+\\s+268:\\s+dd cb 08 9f\\s+res 3,\\(ix\\+8\\),a\n+\\s+26c:\\s+dd cb 08 98\\s+res 3,\\(ix\\+8\\),b\n+\\s+270:\\s+dd cb 08 99\\s+res 3,\\(ix\\+8\\),c\n+\\s+274:\\s+dd cb 08 9a\\s+res 3,\\(ix\\+8\\),d\n+\\s+278:\\s+dd cb 08 9b\\s+res 3,\\(ix\\+8\\),e\n+\\s+27c:\\s+dd cb 08 9c\\s+res 3,\\(ix\\+8\\),h\n+\\s+280:\\s+dd cb 08 9d\\s+res 3,\\(ix\\+8\\),l\n+\\s+284:\\s+fd cb 08 9f\\s+res 3,\\(iy\\+8\\),a\n+\\s+288:\\s+fd cb 08 98\\s+res 3,\\(iy\\+8\\),b\n+\\s+28c:\\s+fd cb 08 99\\s+res 3,\\(iy\\+8\\),c\n+\\s+290:\\s+fd cb 08 9a\\s+res 3,\\(iy\\+8\\),d\n+\\s+294:\\s+fd cb 08 9b\\s+res 3,\\(iy\\+8\\),e\n+\\s+298:\\s+fd cb 08 9c\\s+res 3,\\(iy\\+8\\),h\n+\\s+29c:\\s+fd cb 08 9d\\s+res 3,\\(iy\\+8\\),l\n+\\s+2a0:\\s+dd cb 08 a7\\s+res 4,\\(ix\\+8\\),a\n+\\s+2a4:\\s+dd cb 08 a0\\s+res 4,\\(ix\\+8\\),b\n+\\s+2a8:\\s+dd cb 08 a1\\s+res 4,\\(ix\\+8\\),c\n+\\s+2ac:\\s+dd cb 08 a2\\s+res 4,\\(ix\\+8\\),d\n+\\s+2b0:\\s+dd cb 08 a3\\s+res 4,\\(ix\\+8\\),e\n+\\s+2b4:\\s+dd cb 08 a4\\s+res 4,\\(ix\\+8\\),h\n+\\s+2b8:\\s+dd cb 08 a5\\s+res 4,\\(ix\\+8\\),l\n+\\s+2bc:\\s+fd cb 08 a7\\s+res 4,\\(iy\\+8\\),a\n+\\s+2c0:\\s+fd cb 08 a0\\s+res 4,\\(iy\\+8\\),b\n+\\s+2c4:\\s+fd cb 08 a1\\s+res 4,\\(iy\\+8\\),c\n+\\s+2c8:\\s+fd cb 08 a2\\s+res 4,\\(iy\\+8\\),d\n+\\s+2cc:\\s+fd cb 08 a3\\s+res 4,\\(iy\\+8\\),e\n+\\s+2d0:\\s+fd cb 08 a4\\s+res 4,\\(iy\\+8\\),h\n+\\s+2d4:\\s+fd cb 08 a5\\s+res 4,\\(iy\\+8\\),l\n+\\s+2d8:\\s+dd cb 08 af\\s+res 5,\\(ix\\+8\\),a\n+\\s+2dc:\\s+dd cb 08 a8\\s+res 5,\\(ix\\+8\\),b\n+\\s+2e0:\\s+dd cb 08 a9\\s+res 5,\\(ix\\+8\\),c\n+\\s+2e4:\\s+dd cb 08 aa\\s+res 5,\\(ix\\+8\\),d\n+\\s+2e8:\\s+dd cb 08 ab\\s+res 5,\\(ix\\+8\\),e\n+\\s+2ec:\\s+dd cb 08 ac\\s+res 5,\\(ix\\+8\\),h\n+\\s+2f0:\\s+dd cb 08 ad\\s+res 5,\\(ix\\+8\\),l\n+\\s+2f4:\\s+fd cb 08 af\\s+res 5,\\(iy\\+8\\),a\n+\\s+2f8:\\s+fd cb 08 a8\\s+res 5,\\(iy\\+8\\),b\n+\\s+2fc:\\s+fd cb 08 a9\\s+res 5,\\(iy\\+8\\),c\n+\\s+300:\\s+fd cb 08 aa\\s+res 5,\\(iy\\+8\\),d\n+\\s+304:\\s+fd cb 08 ab\\s+res 5,\\(iy\\+8\\),e\n+\\s+308:\\s+fd cb 08 ac\\s+res 5,\\(iy\\+8\\),h\n+\\s+30c:\\s+fd cb 08 ad\\s+res 5,\\(iy\\+8\\),l\n+\\s+310:\\s+dd cb 08 b7\\s+res 6,\\(ix\\+8\\),a\n+\\s+314:\\s+dd cb 08 b0\\s+res 6,\\(ix\\+8\\),b\n+\\s+318:\\s+dd cb 08 b1\\s+res 6,\\(ix\\+8\\),c\n+\\s+31c:\\s+dd cb 08 b2\\s+res 6,\\(ix\\+8\\),d\n+\\s+320:\\s+dd cb 08 b3\\s+res 6,\\(ix\\+8\\),e\n+\\s+324:\\s+dd cb 08 b4\\s+res 6,\\(ix\\+8\\),h\n+\\s+328:\\s+dd cb 08 b5\\s+res 6,\\(ix\\+8\\),l\n+\\s+32c:\\s+fd cb 08 b7\\s+res 6,\\(iy\\+8\\),a\n+\\s+330:\\s+fd cb 08 b0\\s+res 6,\\(iy\\+8\\),b\n+\\s+334:\\s+fd cb 08 b1\\s+res 6,\\(iy\\+8\\),c\n+\\s+338:\\s+fd cb 08 b2\\s+res 6,\\(iy\\+8\\),d\n+\\s+33c:\\s+fd cb 08 b3\\s+res 6,\\(iy\\+8\\),e\n+\\s+340:\\s+fd cb 08 b4\\s+res 6,\\(iy\\+8\\),h\n+\\s+344:\\s+fd cb 08 b5\\s+res 6,\\(iy\\+8\\),l\n+\\s+348:\\s+dd cb 08 bf\\s+res 7,\\(ix\\+8\\),a\n+\\s+34c:\\s+dd cb 08 b8\\s+res 7,\\(ix\\+8\\),b\n+\\s+350:\\s+dd cb 08 b9\\s+res 7,\\(ix\\+8\\),c\n+\\s+354:\\s+dd cb 08 ba\\s+res 7,\\(ix\\+8\\),d\n+\\s+358:\\s+dd cb 08 bb\\s+res 7,\\(ix\\+8\\),e\n+\\s+35c:\\s+dd cb 08 bc\\s+res 7,\\(ix\\+8\\),h\n+\\s+360:\\s+dd cb 08 bd\\s+res 7,\\(ix\\+8\\),l\n+\\s+364:\\s+fd cb 08 bf\\s+res 7,\\(iy\\+8\\),a\n+\\s+368:\\s+fd cb 08 b8\\s+res 7,\\(iy\\+8\\),b\n+\\s+36c:\\s+fd cb 08 b9\\s+res 7,\\(iy\\+8\\),c\n+\\s+370:\\s+fd cb 08 ba\\s+res 7,\\(iy\\+8\\),d\n+\\s+374:\\s+fd cb 08 bb\\s+res 7,\\(iy\\+8\\),e\n+\\s+378:\\s+fd cb 08 bc\\s+res 7,\\(iy\\+8\\),h\n+\\s+37c:\\s+fd cb 08 bd\\s+res 7,\\(iy\\+8\\),l\n+\\s+380:\\s+dd cb 08 c7\\s+set 0,\\(ix\\+8\\),a\n+\\s+384:\\s+dd cb 08 c0\\s+set 0,\\(ix\\+8\\),b\n+\\s+388:\\s+dd cb 08 c1\\s+set 0,\\(ix\\+8\\),c\n+\\s+38c:\\s+dd cb 08 c2\\s+set 0,\\(ix\\+8\\),d\n+\\s+390:\\s+dd cb 08 c3\\s+set 0,\\(ix\\+8\\),e\n+\\s+394:\\s+dd cb 08 c4\\s+set 0,\\(ix\\+8\\),h\n+\\s+398:\\s+dd cb 08 c5\\s+set 0,\\(ix\\+8\\),l\n+\\s+39c:\\s+fd cb 08 c7\\s+set 0,\\(iy\\+8\\),a\n+\\s+3a0:\\s+fd cb 08 c0\\s+set 0,\\(iy\\+8\\),b\n+\\s+3a4:\\s+fd cb 08 c1\\s+set 0,\\(iy\\+8\\),c\n+\\s+3a8:\\s+fd cb 08 c2\\s+set 0,\\(iy\\+8\\),d\n+\\s+3ac:\\s+fd cb 08 c3\\s+set 0,\\(iy\\+8\\),e\n+\\s+3b0:\\s+fd cb 08 c4\\s+set 0,\\(iy\\+8\\),h\n+\\s+3b4:\\s+fd cb 08 c5\\s+set 0,\\(iy\\+8\\),l\n+\\s+3b8:\\s+dd cb 08 cf\\s+set 1,\\(ix\\+8\\),a\n+\\s+3bc:\\s+dd cb 08 c8\\s+set 1,\\(ix\\+8\\),b\n+\\s+3c0:\\s+dd cb 08 c9\\s+set 1,\\(ix\\+8\\),c\n+\\s+3c4:\\s+dd cb 08 ca\\s+set 1,\\(ix\\+8\\),d\n+\\s+3c8:\\s+dd cb 08 cb\\s+set 1,\\(ix\\+8\\),e\n+\\s+3cc:\\s+dd cb 08 cc\\s+set 1,\\(ix\\+8\\),h\n+\\s+3d0:\\s+dd cb 08 cd\\s+set 1,\\(ix\\+8\\),l\n+\\s+3d4:\\s+fd cb 08 cf\\s+set 1,\\(iy\\+8\\),a\n+\\s+3d8:\\s+fd cb 08 c8\\s+set 1,\\(iy\\+8\\),b\n+\\s+3dc:\\s+fd cb 08 c9\\s+set 1,\\(iy\\+8\\),c\n+\\s+3e0:\\s+fd cb 08 ca\\s+set 1,\\(iy\\+8\\),d\n+\\s+3e4:\\s+fd cb 08 cb\\s+set 1,\\(iy\\+8\\),e\n+\\s+3e8:\\s+fd cb 08 cc\\s+set 1,\\(iy\\+8\\),h\n+\\s+3ec:\\s+fd cb 08 cd\\s+set 1,\\(iy\\+8\\),l\n+\\s+3f0:\\s+dd cb 08 d7\\s+set 2,\\(ix\\+8\\),a\n+\\s+3f4:\\s+dd cb 08 d0\\s+set 2,\\(ix\\+8\\),b\n+\\s+3f8:\\s+dd cb 08 d1\\s+set 2,\\(ix\\+8\\),c\n+\\s+3fc:\\s+dd cb 08 d2\\s+set 2,\\(ix\\+8\\),d\n+\\s+400:\\s+dd cb 08 d3\\s+set 2,\\(ix\\+8\\),e\n+\\s+404:\\s+dd cb 08 d4\\s+set 2,\\(ix\\+8\\),h\n+\\s+408:\\s+dd cb 08 d5\\s+set 2,\\(ix\\+8\\),l\n+\\s+40c:\\s+fd cb 08 d7\\s+set 2,\\(iy\\+8\\),a\n+\\s+410:\\s+fd cb 08 d0\\s+set 2,\\(iy\\+8\\),b\n+\\s+414:\\s+fd cb 08 d1\\s+set 2,\\(iy\\+8\\),c\n+\\s+418:\\s+fd cb 08 d2\\s+set 2,\\(iy\\+8\\),d\n+\\s+41c:\\s+fd cb 08 d3\\s+set 2,\\(iy\\+8\\),e\n+\\s+420:\\s+fd cb 08 d4\\s+set 2,\\(iy\\+8\\),h\n+\\s+424:\\s+fd cb 08 d5\\s+set 2,\\(iy\\+8\\),l\n+\\s+428:\\s+dd cb 08 df\\s+set 3,\\(ix\\+8\\),a\n+\\s+42c:\\s+dd cb 08 d8\\s+set 3,\\(ix\\+8\\),b\n+\\s+430:\\s+dd cb 08 d9\\s+set 3,\\(ix\\+8\\),c\n+\\s+434:\\s+dd cb 08 da\\s+set 3,\\(ix\\+8\\),d\n+\\s+438:\\s+dd cb 08 db\\s+set 3,\\(ix\\+8\\),e\n+\\s+43c:\\s+dd cb 08 dc\\s+set 3,\\(ix\\+8\\),h\n+\\s+440:\\s+dd cb 08 dd\\s+set 3,\\(ix\\+8\\),l\n+\\s+444:\\s+fd cb 08 df\\s+set 3,\\(iy\\+8\\),a\n+\\s+448:\\s+fd cb 08 d8\\s+set 3,\\(iy\\+8\\),b\n+\\s+44c:\\s+fd cb 08 d9\\s+set 3,\\(iy\\+8\\),c\n+\\s+450:\\s+fd cb 08 da\\s+set 3,\\(iy\\+8\\),d\n+\\s+454:\\s+fd cb 08 db\\s+set 3,\\(iy\\+8\\),e\n+\\s+458:\\s+fd cb 08 dc\\s+set 3,\\(iy\\+8\\),h\n+\\s+45c:\\s+fd cb 08 dd\\s+set 3,\\(iy\\+8\\),l\n+\\s+460:\\s+dd cb 08 e7\\s+set 4,\\(ix\\+8\\),a\n+\\s+464:\\s+dd cb 08 e0\\s+set 4,\\(ix\\+8\\),b\n+\\s+468:\\s+dd cb 08 e1\\s+set 4,\\(ix\\+8\\),c\n+\\s+46c:\\s+dd cb 08 e2\\s+set 4,\\(ix\\+8\\),d\n+\\s+470:\\s+dd cb 08 e3\\s+set 4,\\(ix\\+8\\),e\n+\\s+474:\\s+dd cb 08 e4\\s+set 4,\\(ix\\+8\\),h\n+\\s+478:\\s+dd cb 08 e5\\s+set 4,\\(ix\\+8\\),l\n+\\s+47c:\\s+fd cb 08 e7\\s+set 4,\\(iy\\+8\\),a\n+\\s+480:\\s+fd cb 08 e0\\s+set 4,\\(iy\\+8\\),b\n+\\s+484:\\s+fd cb 08 e1\\s+set 4,\\(iy\\+8\\),c\n+\\s+488:\\s+fd cb 08 e2\\s+set 4,\\(iy\\+8\\),d\n+\\s+48c:\\s+fd cb 08 e3\\s+set 4,\\(iy\\+8\\),e\n+\\s+490:\\s+fd cb 08 e4\\s+set 4,\\(iy\\+8\\),h\n+\\s+494:\\s+fd cb 08 e5\\s+set 4,\\(iy\\+8\\),l\n+\\s+498:\\s+dd cb 08 ef\\s+set 5,\\(ix\\+8\\),a\n+\\s+49c:\\s+dd cb 08 e8\\s+set 5,\\(ix\\+8\\),b\n+\\s+4a0:\\s+dd cb 08 e9\\s+set 5,\\(ix\\+8\\),c\n+\\s+4a4:\\s+dd cb 08 ea\\s+set 5,\\(ix\\+8\\),d\n+\\s+4a8:\\s+dd cb 08 eb\\s+set 5,\\(ix\\+8\\),e\n+\\s+4ac:\\s+dd cb 08 ec\\s+set 5,\\(ix\\+8\\),h\n+\\s+4b0:\\s+dd cb 08 ed\\s+set 5,\\(ix\\+8\\),l\n+\\s+4b4:\\s+fd cb 08 ef\\s+set 5,\\(iy\\+8\\),a\n+\\s+4b8:\\s+fd cb 08 e8\\s+set 5,\\(iy\\+8\\),b\n+\\s+4bc:\\s+fd cb 08 e9\\s+set 5,\\(iy\\+8\\),c\n+\\s+4c0:\\s+fd cb 08 ea\\s+set 5,\\(iy\\+8\\),d\n+\\s+4c4:\\s+fd cb 08 eb\\s+set 5,\\(iy\\+8\\),e\n+\\s+4c8:\\s+fd cb 08 ec\\s+set 5,\\(iy\\+8\\),h\n+\\s+4cc:\\s+fd cb 08 ed\\s+set 5,\\(iy\\+8\\),l\n+\\s+4d0:\\s+dd cb 08 f7\\s+set 6,\\(ix\\+8\\),a\n+\\s+4d4:\\s+dd cb 08 f0\\s+set 6,\\(ix\\+8\\),b\n+\\s+4d8:\\s+dd cb 08 f1\\s+set 6,\\(ix\\+8\\),c\n+\\s+4dc:\\s+dd cb 08 f2\\s+set 6,\\(ix\\+8\\),d\n+\\s+4e0:\\s+dd cb 08 f3\\s+set 6,\\(ix\\+8\\),e\n+\\s+4e4:\\s+dd cb 08 f4\\s+set 6,\\(ix\\+8\\),h\n+\\s+4e8:\\s+dd cb 08 f5\\s+set 6,\\(ix\\+8\\),l\n+\\s+4ec:\\s+fd cb 08 f7\\s+set 6,\\(iy\\+8\\),a\n+\\s+4f0:\\s+fd cb 08 f0\\s+set 6,\\(iy\\+8\\),b\n+\\s+4f4:\\s+fd cb 08 f1\\s+set 6,\\(iy\\+8\\),c\n+\\s+4f8:\\s+fd cb 08 f2\\s+set 6,\\(iy\\+8\\),d\n+\\s+4fc:\\s+fd cb 08 f3\\s+set 6,\\(iy\\+8\\),e\n+\\s+500:\\s+fd cb 08 f4\\s+set 6,\\(iy\\+8\\),h\n+\\s+504:\\s+fd cb 08 f5\\s+set 6,\\(iy\\+8\\),l\n+\\s+508:\\s+dd cb 08 ff\\s+set 7,\\(ix\\+8\\),a\n+\\s+50c:\\s+dd cb 08 f8\\s+set 7,\\(ix\\+8\\),b\n+\\s+510:\\s+dd cb 08 f9\\s+set 7,\\(ix\\+8\\),c\n+\\s+514:\\s+dd cb 08 fa\\s+set 7,\\(ix\\+8\\),d\n+\\s+518:\\s+dd cb 08 fb\\s+set 7,\\(ix\\+8\\),e\n+\\s+51c:\\s+dd cb 08 fc\\s+set 7,\\(ix\\+8\\),h\n+\\s+520:\\s+dd cb 08 fd\\s+set 7,\\(ix\\+8\\),l\n+\\s+524:\\s+fd cb 08 ff\\s+set 7,\\(iy\\+8\\),a\n+\\s+528:\\s+fd cb 08 f8\\s+set 7,\\(iy\\+8\\),b\n+\\s+52c:\\s+fd cb 08 f9\\s+set 7,\\(iy\\+8\\),c\n+\\s+530:\\s+fd cb 08 fa\\s+set 7,\\(iy\\+8\\),d\n+\\s+534:\\s+fd cb 08 fb\\s+set 7,\\(iy\\+8\\),e\n+\\s+538:\\s+fd cb 08 fc\\s+set 7,\\(iy\\+8\\),h\n+\\s+53c:\\s+fd cb 08 fd\\s+set 7,\\(iy\\+8\\),l"
    },
    {
      "sha": "7ae83ec0c15f4095ff03f736a24ec8e4366d31c0",
      "filename": "gas/testsuite/gas/z80/z80_op_ii_ld.s",
      "status": "added",
      "additions": 350,
      "deletions": 0,
      "changes": 350,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_op_ii_ld.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_op_ii_ld.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_op_ii_ld.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,350 @@\n+\t.text\n+\t.org\t0\n+\n+\t;; rare unportable instructions which do operation on memory byte\n+\t;; changing this byte and copying result to specified register\n+\tRLC\t(ix+8),a\n+\tRLC\t(ix+8),b\n+\tRLC\t(ix+8),c\n+\tRLC\t(ix+8),d\n+\tRLC\t(ix+8),e\n+\tRLC\t(ix+8),h\n+\tRLC\t(ix+8),l\n+\tRLC\t(iy+8),a\n+\tRLC\t(iy+8),b\n+\tRLC\t(iy+8),c\n+\tRLC\t(iy+8),d\n+\tRLC\t(iy+8),e\n+\tRLC\t(iy+8),h\n+\tRLC\t(iy+8),l\n+\n+\tRRC\t(ix+8),a\n+\tRRC\t(ix+8),b\n+\tRRC\t(ix+8),c\n+\tRRC\t(ix+8),d\n+\tRRC\t(ix+8),e\n+\tRRC\t(ix+8),h\n+\tRRC\t(ix+8),l\n+\tRRC\t(iy+8),a\n+\tRRC\t(iy+8),b\n+\tRRC\t(iy+8),c\n+\tRRC\t(iy+8),d\n+\tRRC\t(iy+8),e\n+\tRRC\t(iy+8),h\n+\tRRC\t(iy+8),l\n+\n+\tRL\t(ix+8),a\n+\tRL\t(ix+8),b\n+\tRL\t(ix+8),c\n+\tRL\t(ix+8),d\n+\tRL\t(ix+8),e\n+\tRL\t(ix+8),h\n+\tRL\t(ix+8),l\n+\tRL\t(iy+8),a\n+\tRL\t(iy+8),b\n+\tRL\t(iy+8),c\n+\tRL\t(iy+8),d\n+\tRL\t(iy+8),e\n+\tRL\t(iy+8),h\n+\tRL\t(iy+8),l\n+\n+\tRR\t(ix+8),a\n+\tRR\t(ix+8),b\n+\tRR\t(ix+8),c\n+\tRR\t(ix+8),d\n+\tRR\t(ix+8),e\n+\tRR\t(ix+8),h\n+\tRR\t(ix+8),l\n+\tRR\t(iy+8),a\n+\tRR\t(iy+8),b\n+\tRR\t(iy+8),c\n+\tRR\t(iy+8),d\n+\tRR\t(iy+8),e\n+\tRR\t(iy+8),h\n+\tRR\t(iy+8),l\n+\n+\tSLA\t(ix+8),a\n+\tSLA\t(ix+8),b\n+\tSLA\t(ix+8),c\n+\tSLA\t(ix+8),d\n+\tSLA\t(ix+8),e\n+\tSLA\t(ix+8),h\n+\tSLA\t(ix+8),l\n+\tSLA\t(iy+8),a\n+\tSLA\t(iy+8),b\n+\tSLA\t(iy+8),c\n+\tSLA\t(iy+8),d\n+\tSLA\t(iy+8),e\n+\tSLA\t(iy+8),h\n+\tSLA\t(iy+8),l\n+\n+\tSRA\t(ix+8),a\n+\tSRA\t(ix+8),b\n+\tSRA\t(ix+8),c\n+\tSRA\t(ix+8),d\n+\tSRA\t(ix+8),e\n+\tSRA\t(ix+8),h\n+\tSRA\t(ix+8),l\n+\tSRA\t(iy+8),a\n+\tSRA\t(iy+8),b\n+\tSRA\t(iy+8),c\n+\tSRA\t(iy+8),d\n+\tSRA\t(iy+8),e\n+\tSRA\t(iy+8),h\n+\tSRA\t(iy+8),l\n+\n+\tSLI\t(ix+8),a\n+\tSLI\t(ix+8),b\n+\tSLI\t(ix+8),c\n+\tSLI\t(ix+8),d\n+\tSLI\t(ix+8),e\n+\tSLI\t(ix+8),h\n+\tSLI\t(ix+8),l\n+\tSLI\t(iy+8),a\n+\tSLI\t(iy+8),b\n+\tSLI\t(iy+8),c\n+\tSLI\t(iy+8),d\n+\tSLI\t(iy+8),e\n+\tSLI\t(iy+8),h\n+\tSLI\t(iy+8),l\n+\n+\tSRL\t(ix+8),a\n+\tSRL\t(ix+8),b\n+\tSRL\t(ix+8),c\n+\tSRL\t(ix+8),d\n+\tSRL\t(ix+8),e\n+\tSRL\t(ix+8),h\n+\tSRL\t(ix+8),l\n+\tSRL\t(iy+8),a\n+\tSRL\t(iy+8),b\n+\tSRL\t(iy+8),c\n+\tSRL\t(iy+8),d\n+\tSRL\t(iy+8),e\n+\tSRL\t(iy+8),h\n+\tSRL\t(iy+8),l\n+\n+\tRES\t0,(ix+8),a\n+\tRES\t0,(ix+8),b\n+\tRES\t0,(ix+8),c\n+\tRES\t0,(ix+8),d\n+\tRES\t0,(ix+8),e\n+\tRES\t0,(ix+8),h\n+\tRES\t0,(ix+8),l\n+\tRES\t0,(iy+8),a\n+\tRES\t0,(iy+8),b\n+\tRES\t0,(iy+8),c\n+\tRES\t0,(iy+8),d\n+\tRES\t0,(iy+8),e\n+\tRES\t0,(iy+8),h\n+\tRES\t0,(iy+8),l\n+\tRES\t1,(ix+8),a\n+\tRES\t1,(ix+8),b\n+\tRES\t1,(ix+8),c\n+\tRES\t1,(ix+8),d\n+\tRES\t1,(ix+8),e\n+\tRES\t1,(ix+8),h\n+\tRES\t1,(ix+8),l\n+\tRES\t1,(iy+8),a\n+\tRES\t1,(iy+8),b\n+\tRES\t1,(iy+8),c\n+\tRES\t1,(iy+8),d\n+\tRES\t1,(iy+8),e\n+\tRES\t1,(iy+8),h\n+\tRES\t1,(iy+8),l\n+\tRES\t2,(ix+8),a\n+\tRES\t2,(ix+8),b\n+\tRES\t2,(ix+8),c\n+\tRES\t2,(ix+8),d\n+\tRES\t2,(ix+8),e\n+\tRES\t2,(ix+8),h\n+\tRES\t2,(ix+8),l\n+\tRES\t2,(iy+8),a\n+\tRES\t2,(iy+8),b\n+\tRES\t2,(iy+8),c\n+\tRES\t2,(iy+8),d\n+\tRES\t2,(iy+8),e\n+\tRES\t2,(iy+8),h\n+\tRES\t2,(iy+8),l\n+\tRES\t3,(ix+8),a\n+\tRES\t3,(ix+8),b\n+\tRES\t3,(ix+8),c\n+\tRES\t3,(ix+8),d\n+\tRES\t3,(ix+8),e\n+\tRES\t3,(ix+8),h\n+\tRES\t3,(ix+8),l\n+\tRES\t3,(iy+8),a\n+\tRES\t3,(iy+8),b\n+\tRES\t3,(iy+8),c\n+\tRES\t3,(iy+8),d\n+\tRES\t3,(iy+8),e\n+\tRES\t3,(iy+8),h\n+\tRES\t3,(iy+8),l\n+\tRES\t4,(ix+8),a\n+\tRES\t4,(ix+8),b\n+\tRES\t4,(ix+8),c\n+\tRES\t4,(ix+8),d\n+\tRES\t4,(ix+8),e\n+\tRES\t4,(ix+8),h\n+\tRES\t4,(ix+8),l\n+\tRES\t4,(iy+8),a\n+\tRES\t4,(iy+8),b\n+\tRES\t4,(iy+8),c\n+\tRES\t4,(iy+8),d\n+\tRES\t4,(iy+8),e\n+\tRES\t4,(iy+8),h\n+\tRES\t4,(iy+8),l\n+\tRES\t5,(ix+8),a\n+\tRES\t5,(ix+8),b\n+\tRES\t5,(ix+8),c\n+\tRES\t5,(ix+8),d\n+\tRES\t5,(ix+8),e\n+\tRES\t5,(ix+8),h\n+\tRES\t5,(ix+8),l\n+\tRES\t5,(iy+8),a\n+\tRES\t5,(iy+8),b\n+\tRES\t5,(iy+8),c\n+\tRES\t5,(iy+8),d\n+\tRES\t5,(iy+8),e\n+\tRES\t5,(iy+8),h\n+\tRES\t5,(iy+8),l\n+\tRES\t6,(ix+8),a\n+\tRES\t6,(ix+8),b\n+\tRES\t6,(ix+8),c\n+\tRES\t6,(ix+8),d\n+\tRES\t6,(ix+8),e\n+\tRES\t6,(ix+8),h\n+\tRES\t6,(ix+8),l\n+\tRES\t6,(iy+8),a\n+\tRES\t6,(iy+8),b\n+\tRES\t6,(iy+8),c\n+\tRES\t6,(iy+8),d\n+\tRES\t6,(iy+8),e\n+\tRES\t6,(iy+8),h\n+\tRES\t6,(iy+8),l\n+\tRES\t7,(ix+8),a\n+\tRES\t7,(ix+8),b\n+\tRES\t7,(ix+8),c\n+\tRES\t7,(ix+8),d\n+\tRES\t7,(ix+8),e\n+\tRES\t7,(ix+8),h\n+\tRES\t7,(ix+8),l\n+\tRES\t7,(iy+8),a\n+\tRES\t7,(iy+8),b\n+\tRES\t7,(iy+8),c\n+\tRES\t7,(iy+8),d\n+\tRES\t7,(iy+8),e\n+\tRES\t7,(iy+8),h\n+\tRES\t7,(iy+8),l\n+\n+\tSET\t0,(ix+8),a\n+\tSET\t0,(ix+8),b\n+\tSET\t0,(ix+8),c\n+\tSET\t0,(ix+8),d\n+\tSET\t0,(ix+8),e\n+\tSET\t0,(ix+8),h\n+\tSET\t0,(ix+8),l\n+\tSET\t0,(iy+8),a\n+\tSET\t0,(iy+8),b\n+\tSET\t0,(iy+8),c\n+\tSET\t0,(iy+8),d\n+\tSET\t0,(iy+8),e\n+\tSET\t0,(iy+8),h\n+\tSET\t0,(iy+8),l\n+\tSET\t1,(ix+8),a\n+\tSET\t1,(ix+8),b\n+\tSET\t1,(ix+8),c\n+\tSET\t1,(ix+8),d\n+\tSET\t1,(ix+8),e\n+\tSET\t1,(ix+8),h\n+\tSET\t1,(ix+8),l\n+\tSET\t1,(iy+8),a\n+\tSET\t1,(iy+8),b\n+\tSET\t1,(iy+8),c\n+\tSET\t1,(iy+8),d\n+\tSET\t1,(iy+8),e\n+\tSET\t1,(iy+8),h\n+\tSET\t1,(iy+8),l\n+\tSET\t2,(ix+8),a\n+\tSET\t2,(ix+8),b\n+\tSET\t2,(ix+8),c\n+\tSET\t2,(ix+8),d\n+\tSET\t2,(ix+8),e\n+\tSET\t2,(ix+8),h\n+\tSET\t2,(ix+8),l\n+\tSET\t2,(iy+8),a\n+\tSET\t2,(iy+8),b\n+\tSET\t2,(iy+8),c\n+\tSET\t2,(iy+8),d\n+\tSET\t2,(iy+8),e\n+\tSET\t2,(iy+8),h\n+\tSET\t2,(iy+8),l\n+\tSET\t3,(ix+8),a\n+\tSET\t3,(ix+8),b\n+\tSET\t3,(ix+8),c\n+\tSET\t3,(ix+8),d\n+\tSET\t3,(ix+8),e\n+\tSET\t3,(ix+8),h\n+\tSET\t3,(ix+8),l\n+\tSET\t3,(iy+8),a\n+\tSET\t3,(iy+8),b\n+\tSET\t3,(iy+8),c\n+\tSET\t3,(iy+8),d\n+\tSET\t3,(iy+8),e\n+\tSET\t3,(iy+8),h\n+\tSET\t3,(iy+8),l\n+\tSET\t4,(ix+8),a\n+\tSET\t4,(ix+8),b\n+\tSET\t4,(ix+8),c\n+\tSET\t4,(ix+8),d\n+\tSET\t4,(ix+8),e\n+\tSET\t4,(ix+8),h\n+\tSET\t4,(ix+8),l\n+\tSET\t4,(iy+8),a\n+\tSET\t4,(iy+8),b\n+\tSET\t4,(iy+8),c\n+\tSET\t4,(iy+8),d\n+\tSET\t4,(iy+8),e\n+\tSET\t4,(iy+8),h\n+\tSET\t4,(iy+8),l\n+\tSET\t5,(ix+8),a\n+\tSET\t5,(ix+8),b\n+\tSET\t5,(ix+8),c\n+\tSET\t5,(ix+8),d\n+\tSET\t5,(ix+8),e\n+\tSET\t5,(ix+8),h\n+\tSET\t5,(ix+8),l\n+\tSET\t5,(iy+8),a\n+\tSET\t5,(iy+8),b\n+\tSET\t5,(iy+8),c\n+\tSET\t5,(iy+8),d\n+\tSET\t5,(iy+8),e\n+\tSET\t5,(iy+8),h\n+\tSET\t5,(iy+8),l\n+\tSET\t6,(ix+8),a\n+\tSET\t6,(ix+8),b\n+\tSET\t6,(ix+8),c\n+\tSET\t6,(ix+8),d\n+\tSET\t6,(ix+8),e\n+\tSET\t6,(ix+8),h\n+\tSET\t6,(ix+8),l\n+\tSET\t6,(iy+8),a\n+\tSET\t6,(iy+8),b\n+\tSET\t6,(iy+8),c\n+\tSET\t6,(iy+8),d\n+\tSET\t6,(iy+8),e\n+\tSET\t6,(iy+8),h\n+\tSET\t6,(iy+8),l\n+\tSET\t7,(ix+8),a\n+\tSET\t7,(ix+8),b\n+\tSET\t7,(ix+8),c\n+\tSET\t7,(ix+8),d\n+\tSET\t7,(ix+8),e\n+\tSET\t7,(ix+8),h\n+\tSET\t7,(ix+8),l\n+\tSET\t7,(iy+8),a\n+\tSET\t7,(iy+8),b\n+\tSET\t7,(iy+8),c\n+\tSET\t7,(iy+8),d\n+\tSET\t7,(iy+8),e\n+\tSET\t7,(iy+8),h\n+\tSET\t7,(iy+8),l"
    },
    {
      "sha": "b6002292f597c6083f20d57ea856422ebe48f781",
      "filename": "gas/testsuite/gas/z80/z80_out_c_0.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_out_c_0.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_out_c_0.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_out_c_0.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,10 @@\n+#as: --with-inst=out-c-0\n+#objdump: -d\n+#name: Z80 undocumented instruction OUT (C),0\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+ed 71\\s+out \\(c\\),0"
    },
    {
      "sha": "da62ae8da076583f032eea6656adb1bff52cf6e5",
      "filename": "gas/testsuite/gas/z80/z80_out_c_0.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_out_c_0.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_out_c_0.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_out_c_0.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,3 @@\n+\t.text\n+\t.org\t0\n+\tout\t(c),0"
    },
    {
      "sha": "7a17617ebacf4e72f13fa13debad613820974b84",
      "filename": "gas/testsuite/gas/z80/z80_reloc.d",
      "status": "added",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_reloc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_reloc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_reloc.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,27 @@\n+#objdump: -r\n+#name: Z80 relocations\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+RELOCATION RECORDS FOR \\[\\.text\\]:\n+OFFSET[   ]+TYPE[              ]+VALUE\\s*\n+00000001[ ]+r_byte0[           ]+\\.text\n+00000004[ ]+r_byte1[           ]+\\.text\n+00000007[ ]+r_byte0[           ]+glb_proc\n+0000000a[ ]+r_byte1[           ]+glb_proc\n+0000000d[ ]+r_byte2[           ]+glb_proc\n+00000010[ ]+r_byte3[           ]+glb_proc\n+00000012[ ]+r_imm16[           ]+\\.text(\\+0x0000001f)?\n+00000015[ ]+r_word0[           ]+glb_proc\n+00000018[ ]+r_word1[           ]+glb_proc\n+0000001b[ ]+r_jr[              ]+start(\\+0xffffffff)|(\\-0x00000001)\n+0000001d[ ]+r_imm8[            ]+data8\n+0000001f[ ]+r_imm8[            ]+data8\n+00000020[ ]+r_imm16[           ]+data16\n+00000022[ ]+r_imm24[           ]+data24\n+00000025[ ]+r_imm32[           ]+data32\n+00000029[ ]+r_byte0[           ]+data16\n+0000002a[ ]+r_byte1[           ]+data16\n+0000002b[ ]+r_word0[           ]+data32\n+0000002d[ ]+r_word1[           ]+data32\n+#pass"
    },
    {
      "sha": "52d0335365e0635ad39cc75bde47dc900b56517b",
      "filename": "gas/testsuite/gas/z80/z80_reloc.s",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_reloc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_reloc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_reloc.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,34 @@\n+\t.text\n+\t.globl\tglb_proc\n+\t.globl\tdata8\n+\t.globl\tdata16\n+\t.globl\tdata24\n+\t.globl\tdata32\n+.L_proc:\n+\tld\t(hl),.L_proc >> 0\n+\tinc\thl\n+\tld\t(hl),.L_proc >> 8\n+\tinc\thl\n+\tld\t(hl),(glb_proc) & 0xff\n+\tinc\thl\n+\tld\t(hl),glb_proc >> 8\n+\tinc\thl\n+\tld\t(hl),glb_proc >> 16\n+\tinc\thl\n+\tld\t(hl),glb_proc >> 24\n+\tld\tbc,.L_label\n+\tld\tde,glb_proc >> 0\n+\tld\thl,glb_proc >> 16\n+\tdjnz\tstart\n+\tld\ta,data8\n+\tret\n+.L_label:\n+\t.db\tdata8\n+\t.dw\tdata16\n+\t.d24 data24\n+\t.d32 data32\n+\t.db\tdata16 & 0xff\n+\t.db\tdata16 >> 8\n+\t.dw\tdata32 & 0xffff\n+\t.dw\tdata32 >> 16\n+\t.end"
    },
    {
      "sha": "af5cd96e49725aacba9d31d731a9969d18de5166",
      "filename": "gas/testsuite/gas/z80/z80_sli.d",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_sli.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_sli.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_sli.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,29 @@\n+#as: --with-inst=sli\n+#objdump: -d\n+#name: Z80 instruction SLI/SLL\n+\n+.*:.*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+\\s+0:\\s+cb 37\\s+sli a\n+\\s+2:\\s+cb 30\\s+sli b\n+\\s+4:\\s+cb 31\\s+sli c\n+\\s+6:\\s+cb 32\\s+sli d\n+\\s+8:\\s+cb 33\\s+sli e\n+\\s+a:\\s+cb 34\\s+sli h\n+\\s+c:\\s+cb 35\\s+sli l\n+\\s+e:\\s+cb 36\\s+sli \\(hl\\)\n+\\s+10:\\s+dd cb 07 36\\s+sli \\(ix\\+7\\)\n+\\s+14:\\s+fd cb f7 36\\s+sli \\(iy\\-9\\)\n+\\s+18:\\s+cb 37\\s+sli a\n+\\s+1a:\\s+cb 30\\s+sli b\n+\\s+1c:\\s+cb 31\\s+sli c\n+\\s+1e:\\s+cb 32\\s+sli d\n+\\s+20:\\s+cb 33\\s+sli e\n+\\s+22:\\s+cb 34\\s+sli h\n+\\s+24:\\s+cb 35\\s+sli l\n+\\s+26:\\s+cb 36\\s+sli \\(hl\\)\n+\\s+28:\\s+dd cb 07 36\\s+sli \\(ix\\+7\\)\n+\\s+2c:\\s+fd cb f7 36\\s+sli \\(iy\\-9\\)"
    },
    {
      "sha": "8d0f39f262e4e44e13f47ff27b6202ae9a8d1a20",
      "filename": "gas/testsuite/gas/z80/z80_sli.s",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_sli.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gas/testsuite/gas/z80/z80_sli.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/z80/z80_sli.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,28 @@\n+\t.text\n+\t.org 0\n+\n+\t;; SLI/SLL instruction test\n+\n+;SLI\n+\tsli a\n+\tsli b\n+\tsli c\n+\tsli d\n+\tsli e\n+\tsli h\n+\tsli l\n+\tsli (hl)\n+\tsli (ix+7)\n+\tsli (iy-9)\n+\n+;SLL is alias for SLI\n+\tsll a\n+\tsll b\n+\tsll c\n+\tsll d\n+\tsll e\n+\tsll h\n+\tsll l\n+\tsll (hl)\n+\tsll (ix+7)\n+\tsll (iy-9)"
    },
    {
      "sha": "3a0def9bf97de406286a92def0ed64016bfb77eb",
      "filename": "gprof/po/gprof.pot",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/gprof/po/gprof.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/gprof/po/gprof.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/po/gprof.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: bug-binutils@gnu.org\\n\"\n-\"POT-Creation-Date: 2019-01-19 16:40+0000\\n\"\n+\"POT-Creation-Date: 2020-01-02 11:13+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -216,47 +216,47 @@ msgstr \"\"\n msgid \"%s: unable to parse mapping file %s.\\n\"\n msgstr \"\"\n \n-#: corefile.c:89 corefile.c:521\n+#: corefile.c:89 corefile.c:523\n #, c-format\n msgid \"%s: could not open %s.\\n\"\n msgstr \"\"\n \n-#: corefile.c:191\n+#: corefile.c:193\n #, c-format\n msgid \"%s: %s: not in executable format\\n\"\n msgstr \"\"\n \n-#: corefile.c:202\n+#: corefile.c:204\n #, c-format\n msgid \"%s: can't find .text section in %s\\n\"\n msgstr \"\"\n \n-#: corefile.c:276\n+#: corefile.c:278\n #, c-format\n msgid \"%s: ran out room for %lu bytes of text space\\n\"\n msgstr \"\"\n \n-#: corefile.c:290\n+#: corefile.c:292\n #, c-format\n msgid \"%s: can't do -c\\n\"\n msgstr \"\"\n \n-#: corefile.c:329\n+#: corefile.c:331\n #, c-format\n msgid \"%s: -c not supported on architecture %s\\n\"\n msgstr \"\"\n \n-#: corefile.c:530 corefile.c:635\n+#: corefile.c:532 corefile.c:637\n #, c-format\n msgid \"%s: file `%s' has no symbols\\n\"\n msgstr \"\"\n \n-#: corefile.c:535\n+#: corefile.c:537\n #, c-format\n msgid \"%s: file `%s' has too many symbols\\n\"\n msgstr \"\"\n \n-#: corefile.c:902\n+#: corefile.c:904\n #, c-format\n msgid \"%s: somebody miscounted: ltab.len=%d instead of %ld\\n\"\n msgstr \"\"\n@@ -354,7 +354,7 @@ msgstr \"\"\n #: gprof.c:162\n #, c-format\n msgid \"\"\n-\"Usage: %s [-[abcDhilLsTvwxyz]] [-[ACeEfFJnNOpPqSQZ][name]] [-I dirs]\\n\"\n+\"Usage: %s [-[abcDhilLrsTvwxyz]] [-[ACeEfFJnNOpPqQRStZ][name]] [-I dirs]\\n\"\n \"\\t[-d[num]] [-k from/to] [-m min-count] [-t table-length]\\n\"\n \"\\t[--[no-]annotated-source[=name]] [--[no-]exec-counts[=name]]\\n\"\n \"\\t[--[no-]flat-profile[=name]] [--[no-]graph[=name]]\\n\"\n@@ -380,51 +380,51 @@ msgstr \"\"\n msgid \"%s: debugging not supported; -d ignored\\n\"\n msgstr \"\"\n \n-#: gprof.c:336\n+#: gprof.c:340\n #, c-format\n msgid \"%s: unknown file format %s\\n\"\n msgstr \"\"\n \n #. This output is intended to follow the GNU standards document.\n-#: gprof.c:424\n+#: gprof.c:428\n #, c-format\n msgid \"GNU gprof %s\\n\"\n msgstr \"\"\n \n-#: gprof.c:425\n+#: gprof.c:429\n #, c-format\n msgid \"\"\n \"Based on BSD gprof, copyright 1983 Regents of the University of California.\\n\"\n msgstr \"\"\n \n-#: gprof.c:426\n+#: gprof.c:430\n #, c-format\n msgid \"\"\n \"This program is free software.  This program has absolutely no warranty.\\n\"\n msgstr \"\"\n \n-#: gprof.c:467\n+#: gprof.c:471\n #, c-format\n msgid \"%s: unknown demangling style `%s'\\n\"\n msgstr \"\"\n \n-#: gprof.c:490\n+#: gprof.c:494\n #, c-format\n msgid \"\"\n \"%s: Only one of --function-ordering and --file-ordering may be specified.\\n\"\n msgstr \"\"\n \n-#: gprof.c:542\n+#: gprof.c:546\n #, c-format\n msgid \"%s: sorry, file format `prof' is not yet supported\\n\"\n msgstr \"\"\n \n-#: gprof.c:596\n+#: gprof.c:600\n #, c-format\n msgid \"%s: gmon.out file is missing histogram\\n\"\n msgstr \"\"\n \n-#: gprof.c:603\n+#: gprof.c:607\n #, c-format\n msgid \"%s: gmon.out file is missing call-graph data\\n\"\n msgstr \"\""
    },
    {
      "sha": "e28c168f5596f8e07728d522a3e0eb1e880944bc",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* coff/internal.h: Add defintions of Z80 reloc names.\n+\n 2020-01-02  Christian Biesinger  <cbiesinger@google.com>\n \n \t* opcode/s12z.h: Undef REG_Y."
    },
    {
      "sha": "24ac1dc75ce77f7fc3bb432780a6b2f64b85e688",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -808,5 +808,11 @@ struct internal_reloc\n #define R_OFF8    0x32\t\t/* 8 bit signed abs, for (i[xy]+d) */\n #define R_IMM24   0x33          /* 24 bit abs */\n /* R_JR, R_IMM8, R_IMM16, R_IMM32 - as for Z8k */\n+#define R_BYTE0  0x34\t\t/* first (lowest) 8 bits of multibyte value */\n+#define R_BYTE1  0x35\t\t/* second 8 bits of multibyte value */\n+#define R_BYTE2  0x36\t\t/* third 8 bits of multibyte value */\n+#define R_BYTE3  0x37\t\t/* fourth (highest) 8 bits of multibyte value */\n+#define R_WORD0  0x38\t\t/* lowest 16 bits of 32 or 24 bit value */\n+#define R_WORD1  0x39\t\t/* highest 16 bits of 32 or 24 bit value */\n \n #endif /* GNU_COFF_INTERNAL_H */"
    },
    {
      "sha": "a7f72c95bb633552d3f5d15d3e71982b1cf831fb",
      "filename": "include/elf/z80.h",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/include/elf/z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/include/elf/z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/elf/z80.h?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,52 @@\n+/* Z80 ELF support for BFD.\n+   Copyright (C) 1999-2019 Free Software Foundation, Inc.\n+   Contributed by Sergey Belyashov <sergey.belyashov@gmail.com>\n+\n+   This file is part of BFD, the Binary File Descriptor library.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */\n+\n+#ifndef _ELF_Z80_H\n+#define _ELF_Z80_H\n+\n+#include \"elf/reloc-macros.h\"\n+\n+/* Processor specific flags for the ELF header e_flags field.  */\n+#define EF_Z80_MACH_Z80      0x01\n+#define EF_Z80_MACH_Z180     0x02\n+#define EF_Z80_MACH_R800     0x03\n+#define EF_Z80_MACH_EZ80_Z80 0x04\n+#define EF_Z80_MACH_EZ80_ADL 0x84\n+#define EF_Z80_MACH_GBZ80    0x05\n+#define EF_Z80_MACH_MSK      0xff\n+\n+/* Relocations.  */\n+START_RELOC_NUMBERS (elf_z80_reloc_type)\n+     RELOC_NUMBER (R_Z80_NONE,\t\t0)\n+     RELOC_NUMBER (R_Z80_8, \t\t1)\n+     RELOC_NUMBER (R_Z80_8_DIS,\t\t2)\n+     RELOC_NUMBER (R_Z80_8_PCREL,\t3)\n+     RELOC_NUMBER (R_Z80_16, \t\t4)\n+     RELOC_NUMBER (R_Z80_24, \t\t5)\n+     RELOC_NUMBER (R_Z80_32, \t\t6)\n+     RELOC_NUMBER (R_Z80_BYTE0,\t\t7)\n+     RELOC_NUMBER (R_Z80_BYTE1,\t\t8)\n+     RELOC_NUMBER (R_Z80_BYTE2,\t\t9)\n+     RELOC_NUMBER (R_Z80_BYTE3,\t\t10)\n+     RELOC_NUMBER (R_Z80_WORD0,\t\t11)\n+     RELOC_NUMBER (R_Z80_WORD1,\t\t12)\n+END_RELOC_NUMBERS (R_Z80_max)\n+\n+#endif /* _ELF_Z80_H */"
    },
    {
      "sha": "e0aa3ea44ed2cfe0daa8e217d5f24620061b6acc",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,29 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* Makefile.am: Add new target z80-elf\n+\t* configure.tgt: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* emultempl/z80.em: Add support for eZ80 and Z180 architectures.\n+\t* emulparams/elf32z80.sh: New file.\n+\t* emultempl/z80elf.em: Likewise.\n+\t* testsuite/ld-elf/comm-data4.s: Fix for Z80.\n+\t* testsuite/ld-elf/comm-data5.s: Fix for Z80.\n+\t* testsuite/ld-scripts/fill16.d: Fix for Z80.\n+\t* testsuite/ld-z80/arch_ez80_adl.d: Likewise.\n+\t* testsuite/ld-z80/arch_ez80_z80.d: Likewise.\n+\t* testsuite/ld-z80/arch_r800.d: Likewise.\n+\t* testsuite/ld-z80/arch_z180.d: Likewise.\n+\t* testsuite/ld-z80/arch_z80.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_ez80_z80.d: Likewise.\n+\t* testsuite/ld-z80/comb_arch_z180.d: Likewise.\n+\t* testsuite/ld-z80/labels.s: Likewise.\n+\t* testsuite/ld-z80/relocs.s: Likewise.\n+\t* testsuite/ld-z80/relocs_b_ez80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_b_z80.d: Likewise.\n+\t* testsuite/ld-z80/relocs_f_z80.d: Likewise.\n+\t* testsuite/ld-z80/z80.exp: Likewise.\n+\t* NEWS: Mention the new support.\n+\n 2020-01-02  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR 25210"
    },
    {
      "sha": "2c7e337cea2d893a83dab7225f9a70643c3e45bb",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -289,6 +289,7 @@ ALL_EMULATION_SOURCES = \\\n \teelf32xc16xs.c \\\n \teelf32xstormy16.c \\\n \teelf32xtensa.c \\\n+\teelf32z80.c \\\n \teelf_i386.c \\\n \teelf_i386_be.c \\\n \teelf_i386_fbsd.c \\\n@@ -876,6 +877,7 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8001.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8002.Pc@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80elf32.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Pc@am__quote@"
    },
    {
      "sha": "e79a8c855b76d6fcb0b16c70ddcc4ae6db678bfa",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -779,6 +779,7 @@ ALL_EMULATION_SOURCES = \\\n \teelf32xc16xs.c \\\n \teelf32xstormy16.c \\\n \teelf32xtensa.c \\\n+\teelf32z80.c \\\n \teelf_i386.c \\\n \teelf_i386_be.c \\\n \teelf_i386_fbsd.c \\\n@@ -1358,6 +1359,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xc16xs.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xstormy16.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32xtensa.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf32z80.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_aix.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eelf64_ia64_fbsd.Po@am__quote@\n@@ -2481,6 +2483,7 @@ $(ALL_EMULATION_SOURCES) $(ALL_64_EMULATION_SOURCES): $(GEN_DEPENDS)\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8001.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez8002.Pc@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ez80elf32.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elf32.Pc@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eaarch64elfb.Pc@am__quote@"
    },
    {
      "sha": "98dfd332027aaeffc487dabf257ea2910e73b125",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -2,6 +2,13 @@\n \n * cr16c support removed.\n \n+* Add support for z80-elf.\n+\n+* Add support for relocation of each byte or word of multibyte value to Z80\n+  targets.\n+\n+* Add support for Zilog eZ80 (both ADL and Z80 mode) and Zilog Z180 CPUs.\n+\n Changes in 2.33:\n \n * Add command-line option --no-print-map-discarded."
    },
    {
      "sha": "18c3ba4c4d43539974ac0c758beb124b72202867",
      "filename": "ld/configure.tgt",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.tgt?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1012,6 +1012,9 @@ xstormy16-*-*)\t\ttarg_emul=elf32xstormy16\n \t\t\t;;\n xtensa*-*-*)\t\ttarg_emul=elf32xtensa\n \t\t\t;;\n+z80-*-elf*)\t\ttarg_emul=elf32z80\n+\t\t\ttarg_extra_ofiles=\"ldelf.o ldelfgen.o\"\n+\t\t\t;;\n z80-*-coff)\t\ttarg_emul=z80\n \t\t\ttarg_extra_ofiles=\n \t\t\t;;"
    },
    {
      "sha": "c4aa444694f2a1aa8d9bc952fd14dc3c5083aace",
      "filename": "ld/emulparams/elf32z80.sh",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emulparams/elf32z80.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emulparams/elf32z80.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/elf32z80.sh?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,22 @@\n+ARCH=z80\n+MACHINE=\n+SCRIPT_NAME=z80\n+#OUTPUT_ARCH=\"z80\"\n+OUTPUT_FORMAT=\"elf32-z80\"\n+MAXPAGESIZE=1\n+EMBEDDED=yes\n+TEMPLATE_NAME=elf\n+\n+TEXT_START_ADDR=0x100\n+#TEXT_LENGTH=0\n+#DATA_ORIGIN=0\n+#DATA_LENGTH=0\n+EXTRA_EM_FILE=z80elf\n+\n+#FUSE_NAME=fuse\n+\n+#EEPROM_LENGTH=64K\n+#FUSE_LENGTH=1K\n+#LOCK_LENGTH=1K\n+#SIGNATURE_LENGTH=1K\n+#USER_SIGNATURE_LENGTH=1K"
    },
    {
      "sha": "4c36cd8465ebd46faaef06c53619de8c703788d6",
      "filename": "ld/emultempl/z80.em",
      "status": "modified",
      "additions": 61,
      "deletions": 18,
      "changes": 79,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emultempl/z80.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emultempl/z80.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/z80.em?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -27,11 +27,16 @@ fragment <<EOF\n /* --- \\begin{z80.em} */\n /* Codes for machine types, bitwise or gives the code to use for the\n    output.  */\n-#define M_Z80STRICT 1\n-#define M_Z80 3\n-#define M_Z80FULL 7\n-#define M_R800 11\n-#define M_Z80ANY 15\n+#define M_Z80STRICT 0x01\n+#define M_Z80       0x03\n+#define M_Z80FULL   0x07\n+#define M_R800      0x10\n+#define M_Z80ANY    0x0f\n+#define M_GBZ80     0x20\n+#define M_Z180      0x40\n+#define M_EZ80_Z80  0x80\n+#define M_EZ80_ADL  0x100\n+#define M_ARCH_MASK 0xFF0\n \n /* Bitwise or of the machine types seen so far.  */\n static int result_mach_type;\n@@ -42,7 +47,7 @@ ${LDEMUL_BEFORE_PARSE} (void)\n #ifndef TARGET_\t\t\t/* I.e., if not generic.  */\n   ldfile_set_output_arch (\"`echo ${ARCH}`\", bfd_arch_unknown);\n #endif /* not TARGET_ */\n-  result_mach_type = M_Z80STRICT;\n+  result_mach_type = 0;\n }\n \n \n@@ -67,7 +72,20 @@ ${LDEMUL_RECOGNIZED_FILE} (lang_input_statement_type *entry)\n     case bfd_mach_r800:\n       result_mach_type |= M_R800;\n       break;\n+    case bfd_mach_gbz80:\n+      result_mach_type |= M_GBZ80;\n+      break;\n+    case bfd_mach_z180:\n+      result_mach_type |= M_Z180;\n+      break;\n+    case bfd_mach_ez80_z80:\n+      result_mach_type |= M_EZ80_Z80;\n+      break;\n+    case bfd_mach_ez80_adl:\n+      result_mach_type |= M_EZ80_ADL;\n+      break;\n     default:\n+      einfo (_(\"%P: warning: unknown machine type %u\"), (unsigned)mach_type);\n       result_mach_type |= M_Z80ANY;\n     }\n   return FALSE;\n@@ -81,23 +99,48 @@ gldz80_after_open (void)\n \n   after_open_default ();\n \n-  switch (result_mach_type)\n+  switch (result_mach_type & M_ARCH_MASK)\n     {\n-    case M_Z80STRICT:\n-      mach_type = bfd_mach_z80strict;\n-      break;\n-    case M_Z80:\n-      mach_type = bfd_mach_z80;\n-      break;\n-    case M_Z80FULL:\n-      mach_type = bfd_mach_z80full;\n-      break;\n+    case M_Z80 & M_ARCH_MASK:\n     case M_R800:\n-      mach_type = bfd_mach_r800;\n+    case M_Z180:\n+    case M_GBZ80:\n+    case M_EZ80_Z80:\n+    case M_EZ80_ADL:\n+    case M_EZ80_Z80 | M_Z180:\n+      /* valid combination */\n+      break;\n+    case M_EZ80_Z80 | M_EZ80_ADL:\n+    case M_EZ80_Z80 | M_EZ80_ADL | M_Z180:\n+    case M_EZ80_ADL | M_Z180:\n+      /* combination may cause invalid objdump output */\n+      /* but it is possible for mixed ADL/Z80 code */\n+      einfo (_(\"%P: warning: mixing ADL and Z80 mode binaries, objdump may generate invalid output\"));\n       break;\n     default:\n-      mach_type = 0;\n+      /* invalid combination: for example Z180 + R800 */\n+      einfo (_(\"%P: warning: incompatible object files linked, result code might not work\"));\n     }\n+\n+  if ((result_mach_type & M_EZ80_ADL) == M_EZ80_ADL)\n+    mach_type = bfd_mach_ez80_adl;\n+  else if ((result_mach_type & M_EZ80_Z80) == M_EZ80_Z80)\n+    mach_type = bfd_mach_ez80_z80;\n+  else if ((result_mach_type & M_Z180) == M_Z180)\n+    mach_type = bfd_mach_z180;\n+  else if ((result_mach_type & M_R800) == M_R800)\n+    mach_type = bfd_mach_r800;\n+  else if ((result_mach_type & M_GBZ80) == M_GBZ80)\n+    mach_type = bfd_mach_gbz80;\n+  else if ((result_mach_type & M_Z80FULL) == M_Z80FULL)\n+    mach_type = bfd_mach_z80full; /* TODO: remove it */\n+  else if ((result_mach_type & M_Z80) == M_Z80)\n+    mach_type = bfd_mach_z80;\n+  else if ((result_mach_type & M_Z80STRICT) == M_Z80STRICT)\n+    mach_type = bfd_mach_z80strict; /* TODO: remove this */\n+  else\n+    mach_type = bfd_arch_unknown;\n+\n   bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach_type);\n }\n /* --- \\end{z80.em} */"
    },
    {
      "sha": "7a55fff92183369d93cf578f21c1bb921bf0d467",
      "filename": "ld/emultempl/z80elf.em",
      "status": "added",
      "additions": 133,
      "deletions": 0,
      "changes": 133,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emultempl/z80elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/emultempl/z80elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/z80elf.em?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,133 @@\n+# This shell script emits C code -*- C -*-\n+# to keep track of the machine type of Z80 object files\n+# It does some substitutions.\n+#   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+\n+fragment <<EOF\n+/* --- \\begin{z80.em} */\n+\n+#include \"elf/z80.h\"\n+\n+static void\n+gld${EMULATION_NAME}_after_open (void);\n+\n+static int result_mach_type;\n+\n+/* Set the machine type of the output file based on result_mach_type.  */\n+static void\n+z80_elf_after_open (void)\n+{\n+  unsigned int mach = 0;\n+  bfd *abfd;\n+\n+  /* For now, make sure all object files are of the same architecture.\n+     We may try to merge object files with different architecture together.  */\n+  for (abfd = link_info.input_bfds; abfd != NULL; abfd = abfd->link.next)\n+    {\n+      unsigned long new_mach;\n+      new_mach = elf_elfheader (abfd)->e_flags & 0xff;\n+      if (!mach)\n+\tmach = new_mach;\n+      else if (mach != new_mach)\n+\t{\n+\t  if ((new_mach == EF_Z80_MACH_R800 || mach == EF_Z80_MACH_R800) ||\n+\t      (new_mach == EF_Z80_MACH_GBZ80 || mach == EF_Z80_MACH_GBZ80))\n+\t    einfo (_(\"%F%P: %pB: Istruction set of object files mismatched\\n\"),\n+\t\t   abfd);\n+\t  else if (mach < new_mach)\n+\t    mach = new_mach;\n+\t}\n+    }\n+  switch (mach & 0xff)\n+    {\n+    case EF_Z80_MACH_Z80:\n+      mach = bfd_mach_z80;\n+      break;\n+    case EF_Z80_MACH_Z180:\n+      mach = bfd_mach_z180;\n+      break;\n+    case EF_Z80_MACH_R800:\n+      mach = bfd_mach_r800;\n+      break;\n+    case EF_Z80_MACH_EZ80_Z80:\n+      mach = bfd_mach_ez80_z80;\n+      break;\n+    case EF_Z80_MACH_EZ80_ADL:\n+      mach = bfd_mach_ez80_adl;\n+      break;\n+    case EF_Z80_MACH_GBZ80:\n+      mach = bfd_mach_gbz80;\n+      break;\n+    default:\n+      mach = (unsigned)-1;\n+    }\n+\n+  bfd_set_arch_mach (link_info.output_bfd, bfd_arch_z80, mach);\n+  result_mach_type = mach;\n+\n+  /* Call the standard elf routine.  */\n+  gld${EMULATION_NAME}_after_open ();\n+}\n+\n+static void\n+z80_elf_finish (void)\n+{\n+  bfd *abfd;\n+\n+  abfd = link_info.output_bfd;\n+\n+  if (bfd_get_flavour (abfd) == bfd_target_elf_flavour)\n+    {\n+      unsigned e_flags;\n+      switch (result_mach_type)\n+\t{\n+\tcase bfd_mach_z80strict:\n+\tcase bfd_mach_z80:\n+\tcase bfd_mach_z80full:\n+\t  e_flags = EF_Z80_MACH_Z80;\n+\t  break;\n+\tcase bfd_mach_r800:\n+\t  e_flags = EF_Z80_MACH_R800;\n+\t  break;\n+\tcase bfd_mach_gbz80:\n+\t  e_flags = EF_Z80_MACH_GBZ80;\n+\t  break;\n+\tcase bfd_mach_z180:\n+\t  e_flags = EF_Z80_MACH_Z180;\n+\t  break;\n+\tcase bfd_mach_ez80_z80:\n+\t  e_flags = EF_Z80_MACH_EZ80_Z80;\n+\t  break;\n+\tcase bfd_mach_ez80_adl:\n+\t  e_flags = EF_Z80_MACH_EZ80_ADL;\n+\t  break;\n+\tdefault:\n+\t  e_flags = ~0;\n+\t}\n+      elf_elfheader (abfd)->e_flags = (elf_elfheader (abfd)->e_flags & ~0xff) | e_flags;\n+    }\n+\n+  finish_default ();\n+}\n+\n+/* --- \\end{z80.em} */\n+EOF\n+\n+LDEMUL_AFTER_OPEN=z80_elf_after_open\n+LDEMUL_FINISH=z80_elf_finish"
    },
    {
      "sha": "768f25a3752cd32884ab5e58db4c040607ed7bf6",
      "filename": "ld/po/BLD-POTFILES.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/po/BLD-POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/po/BLD-POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/po/BLD-POTFILES.in?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -161,6 +161,7 @@ eelf32xc16xl.c\n eelf32xc16xs.c\n eelf32xstormy16.c\n eelf32xtensa.c\n+eelf32z80.c\n eelf64_aix.c\n eelf64_ia64.c\n eelf64_ia64_fbsd.c"
    },
    {
      "sha": "243cdf05115b51281a71a795190f57451df6a4ba",
      "filename": "ld/po/ld.pot",
      "status": "modified",
      "additions": 2169,
      "deletions": 3862,
      "changes": 6031,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/po/ld.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/po/ld.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/po/ld.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268"
    },
    {
      "sha": "fdafcf5561ea93703dd01e705e83062a15c9064c",
      "filename": "ld/scripttempl/z80.sc",
      "status": "modified",
      "additions": 19,
      "deletions": 13,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/scripttempl/z80.sc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/scripttempl/z80.sc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/scripttempl/z80.sc?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -4,29 +4,35 @@\n # are permitted in any medium without royalty provided the copyright\n # notice and this notice are preserved.\n \n-if [ x${LD_FLAG} = x ]\n-then\n+if test \"${OUTPUT_FORMAT}\" = \"elf32-z80\"; then\n+  NO_REL_RELOCS=1\n+  NO_RELA_RELOCS=1\n+  NO_SMALL_DATA=1\n+  EMBEDDED=1\n+  ALIGNMENT=1\n+  . $srcdir/scripttempl/elf.sc\n+  return 0\n+fi\n+\n cat << EOF\n /* Copyright (C) 2014-2020 Free Software Foundation, Inc.\n \n    Copying and distribution of this script, with or without modification,\n    are permitted in any medium without royalty provided the copyright\n    notice and this notice are preserved.  */\n \n-/* Create a cp/m executable; load and execute at 0x100.  */\n-OUTPUT_FORMAT(\"binary\")\n-. = 0x100;\n-__Ltext = .;\n-ENTRY (__Ltext)\n-EOF\n-else\n-    echo \"OUTPUT_FORMAT(\\\"${OUTPUT_FORMAT}\\\")\"\n-fi\n-cat <<EOF\n-OUTPUT_ARCH(\"${OUTPUT_ARCH}\")\n+OUTPUT_FORMAT(\"${OUTPUT_FORMAT}\")\n+OUTPUT_ARCH(\"${ARCH}\")\n SECTIONS\n {\n+.isr :\t{\n+\t${RELOCATING+ __Labs = .;}\n+\t*(.isr)\n+\t*(isr)\n+\t${RELOCATING+ __Habs = .;}\n+\t}\n .text :\t{\n+\t${RELOCATING+ __Ltext = .;}\n \t*(.text)\n \t*(text)\n \t${RELOCATING+ __Htext = .;}"
    },
    {
      "sha": "c4ac53f69f484e1c1434a8ad1728c160c944fd13",
      "filename": "ld/testsuite/ld-elf/comm-data4.s",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-elf/comm-data4.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-elf/comm-data4.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/comm-data4.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,11 +1,11 @@\n  .ifdef HPUX\n-i .comm 4\n+v_i .comm 4\n  .else\n-  .comm i,4,4\n+  .comm v_i,4,4\n  .endif\n \n  .data\n- .dc.a i\n+ .dc.a v_i\n \n  .globl main\n  .globl _main"
    },
    {
      "sha": "91e57b4b882ec9c18205d7cccde01ec3fcc49b21",
      "filename": "ld/testsuite/ld-elf/comm-data5.s",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-elf/comm-data5.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-elf/comm-data5.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/comm-data5.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,11 +1,11 @@\n  .ifdef HPUX\n-i .comm 4\n+v_i .comm 4\n  .else\n-  .comm i,4,4\n+  .comm v_i,4,4\n  .endif\n \n  .section .rodata,\"a\",%progbits\n- .dc.a i\n+ .dc.a v_i\n \n  .globl main\n  .globl _main"
    },
    {
      "sha": "6ff109993210e113d24436f0e4b9635a2d0e0e31",
      "filename": "ld/testsuite/ld-scripts/fill16.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-scripts/fill16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-scripts/fill16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/fill16.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -6,6 +6,7 @@\n #skip: arm-*-coff i[3-7]86-*-coff\n #xfail: alpha*-*-*ecoff sh-*-pe sparc*-*-coff\n #xfail: tic30-*-coff tic4x-*-* tic54x-*-* z8k-*-*\n+#xfail: z80-*-coff\n #\n # See also fill.d.  We use `skip' for configurations unsupported\n # here that are covered there, and `xfail' for configurations that work\n@@ -21,6 +22,7 @@\n # tic4x has 4 octet bytes\n # tic54x doesn't support .p2align\n # z8k-coff aligns to 2 bytes\n+# z80-coff aligns to 2 bytes\n \n .*:     file format .*\n "
    },
    {
      "sha": "8c8527b2cf8d751fb88325077b3dfe520a451b25",
      "filename": "ld/testsuite/ld-z80/arch_default.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_default.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_default.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_default.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: default arch test\n+#source: dummy1.s\n+#source: dummy2.s\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: z80, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "aa9bd4432fef3c22f062fac761adf0f2fa040044",
      "filename": "ld/testsuite/ld-z80/arch_ez80_adl.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_ez80_adl.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_ez80_adl.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_ez80_adl.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: eZ80 ADL mode arch test\n+#source: dummy1.s -ez80-adl\n+#source: dummy2.s -ez80-adl\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: ez80-adl, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "72c03e8d3a4a00d90818c328910432ae13cff0a9",
      "filename": "ld/testsuite/ld-z80/arch_ez80_z80.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_ez80_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_ez80_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_ez80_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: eZ80 Z80 mode arch test\n+#source: dummy1.s -ez80\n+#source: dummy2.s -ez80\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: ez80-z80, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "c079be1ae44d9755f7471c35db284a0ca3d22415",
      "filename": "ld/testsuite/ld-z80/arch_r800.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_r800.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_r800.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_r800.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: R800 arch test\n+#source: dummy1.s -r800\n+#source: dummy2.s -r800\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: r800, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "d63ce23dad7e51c9bdd22222990cec4c2849462d",
      "filename": "ld/testsuite/ld-z80/arch_z180.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_z180.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z180 arch test\n+#source: dummy1.s -z180\n+#source: dummy2.s -z180\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: z180, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "a92b13b1f720cf1bc9416c91dea44893638d4867",
      "filename": "ld/testsuite/ld-z80/arch_z80.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/arch_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/arch_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z80 arch test\n+#source: dummy1.s -z80\n+#source: dummy2.s -z80\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: z80, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "318a055f26708c854ca19c25dceb0494cf0dac68",
      "filename": "ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_ez80_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_ez80_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: eZ80/Z80 arch combination test\n+#source: dummy1.s -ez80\n+#source: dummy2.s -z80\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: ez80-z80, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "f7a420c731199dd37d8d8149643b4cc5eb286ea8",
      "filename": "ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z180_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z180_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z180/Z80 arch combination test \n+#source: dummy1.s -z180\n+#source: dummy2.s -z80\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: z180, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "18f9f0b98c106f1bc57726f8cb9857f42ad61266",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z80_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_ez80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z80/eZ80 arch combination test\n+#source: dummy1.s -z80\n+#source: dummy2.s -ez80\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: ez80-z80, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "1f3e092ff8782bf7dbb9324ac08e7086563e3dec",
      "filename": "ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/comb_arch_z80_z180.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/comb_arch_z80_z180.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,11 @@\n+#name: Z80/Z180 arch combination test\n+#source: dummy1.s -z80\n+#source: dummy2.s -z180\n+#ld: -e 0\n+#objdump: -f\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+architecture: z180, flags 0x[0-9a-fA-F]+:\n+.*\n+.*\n+"
    },
    {
      "sha": "5e27477e4f74218b3eac9e06c491910895c97072",
      "filename": "ld/testsuite/ld-z80/dummy1.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/dummy1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/dummy1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/dummy1.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,6 @@\n+\t.text\n+_start:\n+\tld\ta,a\n+\t.data\n+\t.db\t0\n+\t.end"
    },
    {
      "sha": "43ca80cfa7706cb8c85708b8a519d4374938e707",
      "filename": "ld/testsuite/ld-z80/dummy2.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/dummy2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/dummy2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/dummy2.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,5 @@\n+\t.text\n+\tld\ta,a\n+\t.data\n+\t.db\t0\n+\t.end"
    },
    {
      "sha": "aaf978ab8b594b8330eec5e8c169e09791e3268b",
      "filename": "ld/testsuite/ld-z80/jr.s",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/jr.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,58 @@\n+\t.text\n+;\t.org\t0\n+\n+\t.globl\tlabel1\n+\t.globl\tlabel2\n+\t.globl\tlabel3\n+\t.globl\tlabel4\n+\t.globl\tlabel5\n+\t.globl\tlabel6\n+\n+\tdjnz\tlabel1\n+\n+\tjr\tlabel2\n+\tjr\tnz,label3\n+\tjr\tz,label4\n+\tjr\tnc,label5\n+\tjr\tc,label6\n+\n+\tdjnz\t.\n+\tjr\t.\n+\tjr\tnz,.\n+\tjr\tz,.\n+\tjr\tnc,.\n+\tjr\tc,.\n+\n+.Ll1:\n+\tdjnz\t.Ll1\n+.Ll2:\n+\tjr\t.Ll2\n+.Ll3:\n+\tjr\tnz,.Ll3\n+.Ll4:\n+\tjr\tz,.Ll4\n+.Ll5:\n+\tjr\tnc,.Ll5\n+.Ll6:\n+\tjr\tc,.Ll6\n+\n+\tdjnz\t.Lf1\n+\tjr\t.Lf2\n+\tjr\tnz,.Lf3\n+\tjr\tz,.Lf4\n+\tjr\tnc,.Lf5\n+\tjr\tc,.Lf6\n+\n+.Lf1:\n+\tret\n+.Lf2:\n+\tret\n+.Lf3:\n+\tret\n+.Lf4:\n+\tret\n+.Lf5:\n+\tret\n+.Lf6:\n+\tret\n+\t.end"
    },
    {
      "sha": "9349d4fb41d43937d63e5d2565b87d1b1b3f1b92",
      "filename": "ld/testsuite/ld-z80/jr_b.d",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr_b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr_b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/jr_b.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,51 @@\n+#name: Z80 backward PC relative relocations\n+#source: labels.s -z80\n+#source: jr.s -z80\n+#ld: -e 0 -Ttext 0 -Tdata 0x100 -s\n+#objdump: -d\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000000 <.*>:\n+[   ]+0:[ \t]+78[          \t]+ld a,b\n+[   ]+1:[ \t]+79[          \t]+ld a,c\n+[   ]+2:[ \t]+7a[          \t]+ld a,d\n+[   ]+3:[ \t]+7b[          \t]+ld a,e\n+[   ]+4:[ \t]+7c[          \t]+ld a,h\n+[   ]+5:[ \t]+7d[          \t]+ld a,l\n+[   ]+6:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+[   ]+7:[ \t]+7f[          \t]+ld a,a\n+[   ]+8:[ \t]+2f[          \t]+cpl\n+[   ]+9:[ \t]+10 f5[       \t]+djnz 0x0000\n+[   ]+b:[ \t]+18 f4[       \t]+jr 0x0001\n+[   ]+d:[ \t]+20 f3[       \t]+jr nz,0x0002\n+[   ]+f:[ \t]+28 f2[       \t]+jr z,0x0003\n+[  ]+11:[ \t]+30 f1[       \t]+jr nc,0x0004\n+[  ]+13:[ \t]+38 f0[       \t]+jr c,0x0005\n+[  ]+15:[ \t]+10 fe[       \t]+djnz 0x0015\n+[  ]+17:[ \t]+18 fe[       \t]+jr 0x0017\n+[  ]+19:[ \t]+20 fe[       \t]+jr nz,0x0019\n+[  ]+1b:[ \t]+28 fe[       \t]+jr z,0x001b\n+[  ]+1d:[ \t]+30 fe[       \t]+jr nc,0x001d\n+[  ]+1f:[ \t]+38 fe[       \t]+jr c,0x001f\n+[  ]+21:[ \t]+10 fe[       \t]+djnz 0x0021\n+[  ]+23:[ \t]+18 fe[       \t]+jr 0x0023\n+[  ]+25:[ \t]+20 fe[       \t]+jr nz,0x0025\n+[  ]+27:[ \t]+28 fe[       \t]+jr z,0x0027\n+[  ]+29:[ \t]+30 fe[       \t]+jr nc,0x0029\n+[  ]+2b:[ \t]+38 fe[       \t]+jr c,0x002b\n+[  ]+2d:[ \t]+10 0a[       \t]+djnz 0x0039\n+[  ]+2f:[ \t]+18 09[       \t]+jr 0x003a\n+[  ]+31:[ \t]+20 08[       \t]+jr nz,0x003b\n+[  ]+33:[ \t]+28 07[       \t]+jr z,0x003c\n+[  ]+35:[ \t]+30 06[       \t]+jr nc,0x003d\n+[  ]+37:[ \t]+38 05[       \t]+jr c,0x003e\n+[  ]+39:[ \t]+c9[          \t]+ret\n+[  ]+3a:[ \t]+c9[          \t]+ret\n+[  ]+3b:[ \t]+c9[          \t]+ret\n+[  ]+3c:[ \t]+c9[          \t]+ret\n+[  ]+3d:[ \t]+c9[          \t]+ret\n+[  ]+3e:[ \t]+c9[          \t]+ret"
    },
    {
      "sha": "5a107c3e8cff915873565cc37f2532ee1b7bb356",
      "filename": "ld/testsuite/ld-z80/jr_f.d",
      "status": "added",
      "additions": 70,
      "deletions": 0,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr_f.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/jr_f.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/jr_f.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,70 @@\n+#name: Z80 forward PC relative relocations\n+#source: jr.s -z80\n+#source: labels.s -z80\n+#ld: -e 0 -Ttext 0 -Tdata 0x100\n+#objdump: -d\n+\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000000 <.*>:\n+[   ]+0:[ \t]+10 34[       \t]+djnz 0x0036\n+[   ]+2:[ \t]+18 33[       \t]+jr 0x0037\n+[   ]+4:[ \t]+20 32[       \t]+jr nz,0x0038\n+[   ]+6:[ \t]+28 31[       \t]+jr z,0x0039\n+[   ]+8:[ \t]+30 30[       \t]+jr nc,0x003a\n+[   ]+a:[ \t]+38 2f[       \t]+jr c,0x003b\n+[   ]+c:[ \t]+10 fe[       \t]+djnz 0x000c\n+[   ]+e:[ \t]+18 fe[       \t]+jr 0x000e\n+[  ]+10:[ \t]+20 fe[       \t]+jr nz,0x0010\n+[  ]+12:[ \t]+28 fe[       \t]+jr z,0x0012\n+[  ]+14:[ \t]+30 fe[       \t]+jr nc,0x0014\n+[  ]+16:[ \t]+38 fe[       \t]+jr c,0x0016\n+[  ]+18:[ \t]+10 fe[       \t]+djnz 0x0018\n+[  ]+1a:[ \t]+18 fe[       \t]+jr 0x001a\n+[  ]+1c:[ \t]+20 fe[       \t]+jr nz,0x001c\n+[  ]+1e:[ \t]+28 fe[       \t]+jr z,0x001e\n+[  ]+20:[ \t]+30 fe[       \t]+jr nc,0x0020\n+[  ]+22:[ \t]+38 fe[       \t]+jr c,0x0022\n+[  ]+24:[ \t]+10 0a[       \t]+djnz 0x0030\n+[  ]+26:[ \t]+18 09[       \t]+jr 0x0031\n+[  ]+28:[ \t]+20 08[       \t]+jr nz,0x0032\n+[  ]+2a:[ \t]+28 07[       \t]+jr z,0x0033\n+[  ]+2c:[ \t]+30 06[       \t]+jr nc,0x0034\n+[  ]+2e:[ \t]+38 05[       \t]+jr c,0x0035\n+[  ]+30:[ \t]+c9[          \t]+ret\n+[  ]+31:[ \t]+c9[          \t]+ret\n+[  ]+32:[ \t]+c9[          \t]+ret\n+[  ]+33:[ \t]+c9[          \t]+ret\n+[  ]+34:[ \t]+c9[          \t]+ret\n+[  ]+35:[ \t]+c9[          \t]+ret\n+\n+00000036 <label1>:\n+[  ]+36:[ \t]+78[          \t]+ld a,b\n+\n+00000037 <label2>:\n+[  ]+37:[ \t]+79[          \t]+ld a,c\n+\n+00000038 <label3>:\n+[  ]+38:[ \t]+7a[          \t]+ld a,d\n+\n+00000039 <label4>:\n+[  ]+39:[ \t]+7b[          \t]+ld a,e\n+\n+0000003a <label5>:\n+[  ]+3a:[ \t]+7c[          \t]+ld a,h\n+\n+0000003b <label6>:\n+[  ]+3b:[ \t]+7d[          \t]+ld a,l\n+\n+0000003c <label7>:\n+[  ]+3c:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+\n+0000003d <label8>:\n+[  ]+3d:[ \t]+7f[          \t]+ld a,a\n+\n+0000003e <label9>:\n+[  ]+3e:[ \t]+2f[          \t]+cpl"
    },
    {
      "sha": "a957fef7829fc492b2c83fba846521d6df2cedca",
      "filename": "ld/testsuite/ld-z80/labels.s",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/labels.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/labels.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/labels.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,43 @@\n+\t.text\n+\t.globl\tlabel1\n+\t.globl\tlabel2\n+\t.globl\tlabel3\n+\t.globl\tlabel4\n+\t.globl\tlabel5\n+\t.globl\tlabel6\n+\t.globl\tlabel7\n+\t.globl\tlabel8\n+\t.globl\tlabel9\n+\t.globl\tvalue8\n+\t.globl\tvalue16\n+\t.globl\tvalue24\n+\t.globl\tvalue32\n+\t.globl\tfield_0\n+\t.globl\tfield_1\n+_start:\n+label1:\n+\tld\ta,b\n+label2:\n+\tld\ta,c\n+label3:\n+\tld\ta,d\n+label4:\n+\tld\ta,e\n+label5:\n+\tld\ta,h\n+label6:\n+\tld\ta,l\n+label7:\n+\tld\ta,(hl)\n+label8:\n+\tld\ta,a\n+label9:\n+\tcpl\n+\n+value8\t.equ 0x12\n+value16\t.equ\t0x1234\n+value24\t.equ\t0x123456\n+value32\t.equ\t0x12345678\n+\n+field_0\t.equ\t3\n+field_1\t.equ\tfield_0 + 1"
    },
    {
      "sha": "131a702158cc95ff48ce9b09aa54b6f438c678a4",
      "filename": "ld/testsuite/ld-z80/relocs.s",
      "status": "added",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs.s?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,81 @@\n+\t.text\n+;\t.org\t0\n+\n+\t.globl\tlabel1\n+\t.globl\tlabel2\n+\t.globl\tlabel3\n+\t.globl\tlabel4\n+\t.globl\tlabel5\n+\t.globl\tlabel6\n+\t.globl\tlabel7\n+\t.globl\tlabel8\n+\t.globl\tlabel9\n+\n+\t.globl\tvalue8\n+\t.globl\tvalue16\n+\t.globl\tvalue24\n+\t.globl\tvalue32\n+\n+\t.globl\tfield_0\n+\t.globl\tfield_1\n+\n+\tcall\tlabel1\n+\tcall\tnz,label2\n+\tcall\tz,label3\n+\tcall\tnc,label4\n+\tcall\tc,label5\n+\tcall\tpo,label6\n+\tcall\tpe,label7\n+\tcall\tp,label8\n+\tcall\tm,label9\n+\n+\tjp\tlabel1\n+\tjp\tnz,label2\n+\tjp\tz,label3\n+\tjp\tnc,label4\n+\tjp\tc,label5\n+\tjp\tpo,label6\n+\tjp\tpe,label7\n+\tjp\tp,label8\n+\tjp\tm,label9\n+\n+\tld\tl,(ix+5)\n+\tld\ta,(ix+field_0)\n+\tld\tc,(ix+field_1-10)\n+\tld\tb,(ix+field_1-11)\n+\n+field_0_1\t.equ\tfield_0+90\n+\n+\tld\t(iy-5),l\n+\tld\t(iy+field_0),a\n+\tld\t(iy+field_1+10),c\n+\tld\t(iy+field_1+11),b\n+\tld\th,(iy+field_0_1)\n+\n+\t.ifdef ADLMODE\n+\tld.is\tde,value32 >> 16\n+\tld.is\thl,value32 & 0xffff\n+\tld.is\tde,(value32 + 0x12345678) >> 16\n+\tld.is\thl,(value32 + 0x12345678) & 0xffff\n+\t.else\n+\tld\tde,value32 >> 16\n+\tld\thl,value32 & 0xffff\n+\tld\tde,(value32 + 0x12345678) >> 16\n+\tld\thl,(value32 + 0x12345678) & 0xffff\n+\t.endif\n+\n+\tld\td,value32 >> 24\n+\tld\te,value32 >> 16\n+\tld\th,value32 >> 8\n+\tld\tl,value32 >> 0\n+\n+\tld\td,(value32 + 0x12345678) >> 24\n+\tld\te,(value32 + 0x12345678) >> 16\n+\tld\th,(value32 + 0x12345678) >> 8\n+\tld\tl,(value32 + 0x12345678) >> 0\n+\n+\t.data\n+\t.db\tvalue8\n+\t.dw\tvalue16\n+\t.d24\tvalue24\n+\t.d32\tvalue32"
    },
    {
      "sha": "a421ce8d13b52a30d52af0f68d0f07e60f0b291a",
      "filename": "ld/testsuite/ld-z80/relocs_b_ez80.d",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_b_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_b_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_b_ez80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,60 @@\n+#name: eZ80 backward relocation in ADL mode\n+#source: labels.s -ez80-adl\n+#source: relocs.s -ez80-adl --defsym ADLMODE=1\n+#ld: -e 0 -Ttext 0x100 -Tdata 0x200 -s\n+#objdump: -d\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000100 <.*>:\n+ 100:[ \t]+78[                \t]+ld a,b\n+ 101:[ \t]+79[                \t]+ld a,c\n+ 102:[ \t]+7a[                \t]+ld a,d\n+ 103:[ \t]+7b[                \t]+ld a,e\n+ 104:[ \t]+7c[                \t]+ld a,h\n+ 105:[ \t]+7d[                \t]+ld a,l\n+ 106:[ \t]+7e[                \t]+ld a,\\(hl\\)\n+ 107:[ \t]+7f[                \t]+ld a,a\n+ 108:[ \t]+2f[                \t]+cpl\n+ 109:[ \t]+cd 00 01 00[       \t]+call 0x0100\n+ 10d:[ \t]+c4 01 01 00[       \t]+call nz,0x0101\n+ 111:[ \t]+cc 02 01 00[       \t]+call z,0x0102\n+ 115:[ \t]+d4 03 01 00[       \t]+call nc,0x0103\n+ 119:[ \t]+dc 04 01 00[       \t]+call c,0x0104\n+ 11d:[ \t]+e4 05 01 00[       \t]+call po,0x0105\n+ 121:[ \t]+ec 06 01 00[       \t]+call pe,0x0106\n+ 125:[ \t]+f4 07 01 00[       \t]+call p,0x0107\n+ 129:[ \t]+fc 08 01 00[       \t]+call m,0x0108\n+ 12d:[ \t]+c3 00 01 00[       \t]+jp 0x0100\n+ 131:[ \t]+c2 01 01 00[       \t]+jp nz,0x0101\n+ 135:[ \t]+ca 02 01 00[       \t]+jp z,0x0102\n+ 139:[ \t]+d2 03 01 00[       \t]+jp nc,0x0103\n+ 13d:[ \t]+da 04 01 00[       \t]+jp c,0x0104\n+ 141:[ \t]+e2 05 01 00[       \t]+jp po,0x0105\n+ 145:[ \t]+ea 06 01 00[       \t]+jp pe,0x0106\n+ 149:[ \t]+f2 07 01 00[       \t]+jp p,0x0107\n+ 14d:[ \t]+fa 08 01 00[       \t]+jp m,0x0108\n+ 151:[ \t]+dd 6e 05[          \t]+ld l,\\(ix\\+5\\)\n+ 154:[ \t]+dd 7e 03[          \t]+ld a,\\(ix\\+3\\)\n+ 157:[ \t]+dd 4e fa[          \t]+ld c,\\(ix\\-6\\)\n+ 15a:[ \t]+dd 46 f9[          \t]+ld b,\\(ix\\-7\\)\n+ 15d:[ \t]+fd 75 fb[          \t]+ld \\(iy\\-5\\),l\n+ 160:[ \t]+fd 77 03[          \t]+ld \\(iy\\+3\\),a\n+ 163:[ \t]+fd 71 0e[          \t]+ld \\(iy\\+14\\),c\n+ 166:[ \t]+fd 70 0f[          \t]+ld \\(iy\\+15\\),b\n+ 169:[ \t]+fd 66 5d[          \t]+ld h,\\(iy\\+93\\)\n+ 16c:[ \t]+49 11 34 12[       \t]+ld\\.lis de,0x1234\n+ 170:[ \t]+49 21 78 56[       \t]+ld\\.lis hl,0x5678\n+ 174:[ \t]+49 11 68 24[       \t]+ld\\.lis de,0x2468\n+ 178:[ \t]+49 21 f0 ac[       \t]+ld\\.lis hl,0xacf0\n+ 17c:[ \t]+16 12[             \t]+ld d,0x12\n+ 17e:[ \t]+1e 34[             \t]+ld e,0x34\n+ 180:[ \t]+26 56[             \t]+ld h,0x56\n+ 182:[ \t]+2e 78[             \t]+ld l,0x78\n+ 184:[ \t]+16 24[             \t]+ld d,0x24\n+ 186:[ \t]+1e 68[             \t]+ld e,0x68\n+ 188:[ \t]+26 ac[             \t]+ld h,0xac\n+ 18a:[ \t]+2e f0[             \t]+ld l,0xf0"
    },
    {
      "sha": "14176500601161650d0f4bae1d9213969634b746",
      "filename": "ld/testsuite/ld-z80/relocs_b_z80.d",
      "status": "added",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_b_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_b_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_b_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,60 @@\n+#name: Z80 backward relocation\n+#source: labels.s -z80\n+#source: relocs.s -z80\n+#ld: -e 0 -Ttext 0x100 -Tdata 0x200 -s\n+#objdump: -d\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000100 <.*>:\n+ 100:[ \t]+78[          \t]+ld a,b\n+ 101:[ \t]+79[          \t]+ld a,c\n+ 102:[ \t]+7a[          \t]+ld a,d\n+ 103:[ \t]+7b[          \t]+ld a,e\n+ 104:[ \t]+7c[          \t]+ld a,h\n+ 105:[ \t]+7d[          \t]+ld a,l\n+ 106:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+ 107:[ \t]+7f[          \t]+ld a,a\n+ 108:[ \t]+2f[          \t]+cpl\n+ 109:[ \t]+cd 00 01[    \t]+call 0x0100\n+ 10c:[ \t]+c4 01 01[    \t]+call nz,0x0101\n+ 10f:[ \t]+cc 02 01[    \t]+call z,0x0102\n+ 112:[ \t]+d4 03 01[    \t]+call nc,0x0103\n+ 115:[ \t]+dc 04 01[    \t]+call c,0x0104\n+ 118:[ \t]+e4 05 01[    \t]+call po,0x0105\n+ 11b:[ \t]+ec 06 01[    \t]+call pe,0x0106\n+ 11e:[ \t]+f4 07 01[    \t]+call p,0x0107\n+ 121:[ \t]+fc 08 01[    \t]+call m,0x0108\n+ 124:[ \t]+c3 00 01[    \t]+jp 0x0100\n+ 127:[ \t]+c2 01 01[    \t]+jp nz,0x0101\n+ 12a:[ \t]+ca 02 01[    \t]+jp z,0x0102\n+ 12d:[ \t]+d2 03 01[    \t]+jp nc,0x0103\n+ 130:[ \t]+da 04 01[    \t]+jp c,0x0104\n+ 133:[ \t]+e2 05 01[    \t]+jp po,0x0105\n+ 136:[ \t]+ea 06 01[    \t]+jp pe,0x0106\n+ 139:[ \t]+f2 07 01[    \t]+jp p,0x0107\n+ 13c:[ \t]+fa 08 01[    \t]+jp m,0x0108\n+ 13f:[ \t]+dd 6e 05[    \t]+ld l,\\(ix\\+5\\)\n+ 142:[ \t]+dd 7e 03[    \t]+ld a,\\(ix\\+3\\)\n+ 145:[ \t]+dd 4e fa[    \t]+ld c,\\(ix\\-6\\)\n+ 148:[ \t]+dd 46 f9[    \t]+ld b,\\(ix\\-7\\)\n+ 14b:[ \t]+fd 75 fb[    \t]+ld \\(iy\\-5\\),l\n+ 14e:[ \t]+fd 77 03[    \t]+ld \\(iy\\+3\\),a\n+ 151:[ \t]+fd 71 0e[    \t]+ld \\(iy\\+14\\),c\n+ 154:[ \t]+fd 70 0f[    \t]+ld \\(iy\\+15\\),b\n+ 157:[ \t]+fd 66 5d[    \t]+ld h,\\(iy\\+93\\)\n+ 15a:[ \t]+11 34 12[    \t]+ld de,0x1234\n+ 15d:[ \t]+21 78 56[    \t]+ld hl,0x5678\n+ 160:[ \t]+11 68 24[    \t]+ld de,0x2468\n+ 163:[ \t]+21 f0 ac[    \t]+ld hl,0xacf0\n+ 166:[ \t]+16 12[       \t]+ld d,0x12\n+ 168:[ \t]+1e 34[       \t]+ld e,0x34\n+ 16a:[ \t]+26 56[       \t]+ld h,0x56\n+ 16c:[ \t]+2e 78[       \t]+ld l,0x78\n+ 16e:[ \t]+16 24[       \t]+ld d,0x24\n+ 170:[ \t]+1e 68[       \t]+ld e,0x68\n+ 172:[ \t]+26 ac[       \t]+ld h,0xac\n+ 174:[ \t]+2e f0[       \t]+ld l,0xf0"
    },
    {
      "sha": "323156bd7f23cc0f3fb6849a8c94b01b83e91d0f",
      "filename": "ld/testsuite/ld-z80/relocs_f_ez80.d",
      "status": "added",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_f_ez80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_f_ez80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_ez80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,78 @@\n+#name: eZ80 forward relocation in ADL mode\n+#source: relocs.s -ez80-adl --defsym ADLMODE=1\n+#source: labels.s -ez80-adl\n+#ld: -e 0 -Ttext 0x100 -Tdata 0x200\n+#objdump: -d\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000100 <.*>:\n+ 100:[ \t]+cd 83 01 00[       \t]+call 0x0183\n+ 104:[ \t]+c4 84 01 00[       \t]+call nz,0x0184\n+ 108:[ \t]+cc 85 01 00[       \t]+call z,0x0185\n+ 10c:[ \t]+d4 86 01 00[       \t]+call nc,0x0186\n+ 110:[ \t]+dc 87 01 00[       \t]+call c,0x0187\n+ 114:[ \t]+e4 88 01 00[       \t]+call po,0x0188\n+ 118:[ \t]+ec 89 01 00[       \t]+call pe,0x0189\n+ 11c:[ \t]+f4 8a 01 00[       \t]+call p,0x018a\n+ 120:[ \t]+fc 8b 01 00[       \t]+call m,0x018b\n+ 124:[ \t]+c3 83 01 00[       \t]+jp 0x0183\n+ 128:[ \t]+c2 84 01 00[       \t]+jp nz,0x0184\n+ 12c:[ \t]+ca 85 01 00[       \t]+jp z,0x0185\n+ 130:[ \t]+d2 86 01 00[       \t]+jp nc,0x0186\n+ 134:[ \t]+da 87 01 00[       \t]+jp c,0x0187\n+ 138:[ \t]+e2 88 01 00[       \t]+jp po,0x0188\n+ 13c:[ \t]+ea 89 01 00[       \t]+jp pe,0x0189\n+ 140:[ \t]+f2 8a 01 00[       \t]+jp p,0x018a\n+ 144:[ \t]+fa 8b 01 00[       \t]+jp m,0x018b\n+ 148:[ \t]+dd 6e 05[          \t]+ld l,\\(ix\\+5\\)\n+ 14b:[ \t]+dd 7e 03[          \t]+ld a,\\(ix\\+3\\)\n+ 14e:[ \t]+dd 4e fa[          \t]+ld c,\\(ix\\-6\\)\n+ 151:[ \t]+dd 46 f9[          \t]+ld b,\\(ix\\-7\\)\n+ 154:[ \t]+fd 75 fb[          \t]+ld \\(iy\\-5\\),l\n+ 157:[ \t]+fd 77 03[          \t]+ld \\(iy\\+3\\),a\n+ 15a:[ \t]+fd 71 0e[          \t]+ld \\(iy\\+14\\),c\n+ 15d:[ \t]+fd 70 0f[          \t]+ld \\(iy\\+15\\),b\n+ 160:[ \t]+fd 66 5d[          \t]+ld h,\\(iy\\+93\\)\n+ 163:[ \t]+49 11 34 12[       \t]+ld\\.lis de,0x1234\n+ 167:[ \t]+49 21 78 56[       \t]+ld\\.lis hl,0x5678\n+ 16b:[ \t]+49 11 68 24[       \t]+ld\\.lis de,0x2468\n+ 16f:[ \t]+49 21 f0 ac[       \t]+ld\\.lis hl,0xacf0\n+ 173:[ \t]+16 12[             \t]+ld d,0x12\n+ 175:[ \t]+1e 34[             \t]+ld e,0x34\n+ 177:[ \t]+26 56[             \t]+ld h,0x56\n+ 179:[ \t]+2e 78[             \t]+ld l,0x78\n+ 17b:[ \t]+16 24[             \t]+ld d,0x24\n+ 17d:[ \t]+1e 68[             \t]+ld e,0x68\n+ 17f:[ \t]+26 ac[             \t]+ld h,0xac\n+ 181:[ \t]+2e f0[             \t]+ld l,0xf0\n+\n+00000183 <label1>:\n+ 183:[ \t]+78[                \t]+ld a,b\n+\n+00000184 <label2>:\n+ 184:[ \t]+79[                \t]+ld a,c\n+\n+00000185 <label3>:\n+ 185:[ \t]+7a[                \t]+ld a,d\n+\n+00000186 <label4>:\n+ 186:[ \t]+7b[                \t]+ld a,e\n+\n+00000187 <label5>:\n+ 187:[ \t]+7c[                \t]+ld a,h\n+\n+00000188 <label6>:\n+ 188:[ \t]+7d[                \t]+ld a,l\n+\n+00000189 <label7>:\n+ 189:[ \t]+7e[                \t]+ld a,\\(hl\\)\n+\n+0000018a <label8>:\n+ 18a:[ \t]+7f[                \t]+ld a,a\n+\n+0000018b <label9>:\n+ 18b:[ \t]+2f[                \t]+cpl"
    },
    {
      "sha": "462da8a3b5d26868f2401466a8cdebc03b997162",
      "filename": "ld/testsuite/ld-z80/relocs_f_z80.d",
      "status": "added",
      "additions": 79,
      "deletions": 0,
      "changes": 79,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_f_z80.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/relocs_f_z80.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/relocs_f_z80.d?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,79 @@\n+#name: Z80 forward relocation\n+#source: relocs.s -z80\n+#source: labels.s -z80\n+#ld: -e 0 -Ttext 0x100 -Tdata 0x200\n+#objdump: -d\n+\n+\n+.*:[     ]+file format (coff)|(elf32)\\-z80\n+\n+\n+.* \\.text:\n+\n+00000100 <.*>:\n+ 100:[ \t]+cd 6d 01[    \t]+call 0x016d\n+ 103:[ \t]+c4 6e 01[    \t]+call nz,0x016e\n+ 106:[ \t]+cc 6f 01[    \t]+call z,0x016f\n+ 109:[ \t]+d4 70 01[    \t]+call nc,0x0170\n+ 10c:[ \t]+dc 71 01[    \t]+call c,0x0171\n+ 10f:[ \t]+e4 72 01[    \t]+call po,0x0172\n+ 112:[ \t]+ec 73 01[    \t]+call pe,0x0173\n+ 115:[ \t]+f4 74 01[    \t]+call p,0x0174\n+ 118:[ \t]+fc 75 01[    \t]+call m,0x0175\n+ 11b:[ \t]+c3 6d 01[    \t]+jp 0x016d\n+ 11e:[ \t]+c2 6e 01[    \t]+jp nz,0x016e\n+ 121:[ \t]+ca 6f 01[    \t]+jp z,0x016f\n+ 124:[ \t]+d2 70 01[    \t]+jp nc,0x0170\n+ 127:[ \t]+da 71 01[    \t]+jp c,0x0171\n+ 12a:[ \t]+e2 72 01[    \t]+jp po,0x0172\n+ 12d:[ \t]+ea 73 01[    \t]+jp pe,0x0173\n+ 130:[ \t]+f2 74 01[    \t]+jp p,0x0174\n+ 133:[ \t]+fa 75 01[    \t]+jp m,0x0175\n+ 136:[ \t]+dd 6e 05[    \t]+ld l,\\(ix\\+5\\)\n+ 139:[ \t]+dd 7e 03[    \t]+ld a,\\(ix\\+3\\)\n+ 13c:[ \t]+dd 4e fa[    \t]+ld c,\\(ix\\-6\\)\n+ 13f:[ \t]+dd 46 f9[    \t]+ld b,\\(ix\\-7\\)\n+ 142:[ \t]+fd 75 fb[    \t]+ld \\(iy\\-5\\),l\n+ 145:[ \t]+fd 77 03[    \t]+ld \\(iy\\+3\\),a\n+ 148:[ \t]+fd 71 0e[    \t]+ld \\(iy\\+14\\),c\n+ 14b:[ \t]+fd 70 0f[    \t]+ld \\(iy\\+15\\),b\n+ 14e:[ \t]+fd 66 5d[    \t]+ld h,\\(iy\\+93\\)\n+ 151:[ \t]+11 34 12[    \t]+ld de,0x1234\n+ 154:[ \t]+21 78 56[    \t]+ld hl,0x5678\n+ 157:[ \t]+11 68 24[    \t]+ld de,0x2468\n+ 15a:[ \t]+21 f0 ac[    \t]+ld hl,0xacf0\n+ 15d:[ \t]+16 12[       \t]+ld d,0x12\n+ 15f:[ \t]+1e 34[       \t]+ld e,0x34\n+ 161:[ \t]+26 56[       \t]+ld h,0x56\n+ 163:[ \t]+2e 78[       \t]+ld l,0x78\n+ 165:[ \t]+16 24[       \t]+ld d,0x24\n+ 167:[ \t]+1e 68[       \t]+ld e,0x68\n+ 169:[ \t]+26 ac[       \t]+ld h,0xac\n+ 16b:[ \t]+2e f0[       \t]+ld l,0xf0\n+\n+0000016d <label1>:\n+ 16d:[ \t]+78[          \t]+ld a,b\n+\n+0000016e <label2>:\n+ 16e:[ \t]+79[          \t]+ld a,c\n+\n+0000016f <label3>:\n+ 16f:[ \t]+7a[          \t]+ld a,d\n+\n+00000170 <label4>:\n+ 170:[ \t]+7b[          \t]+ld a,e\n+\n+00000171 <label5>:\n+ 171:[ \t]+7c[          \t]+ld a,h\n+\n+00000172 <label6>:\n+ 172:[ \t]+7d[          \t]+ld a,l\n+\n+00000173 <label7>:\n+ 173:[ \t]+7e[          \t]+ld a,\\(hl\\)\n+\n+00000174 <label8>:\n+ 174:[ \t]+7f[          \t]+ld a,a\n+\n+00000175 <label9>:\n+ 175:[ \t]+2f[          \t]+cpl"
    },
    {
      "sha": "d141ab815461e753c33e1e29668faee648a8a340",
      "filename": "ld/testsuite/ld-z80/z80.exp",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/z80.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/ld/testsuite/ld-z80/z80.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-z80/z80.exp?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -0,0 +1,33 @@\n+# Expect script for ld-z80 tests\n+#   Copyright (C) 2016-2019 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+# Test z80 linking; all types of relocs.  This tests the assembler\n+# and tools like objdump as well as the main target, the linker.\n+\n+if ![istarget \"z80-*-*\"] then {\n+    return\n+}\n+\n+set z80_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+foreach z80_test $z80_test_list {\n+    verbose [file rootname $z80_test]\n+    run_dump_test [file rootname $z80_test]\n+}"
    },
    {
      "sha": "e3be019ec9d6fbfee99a506776ed50d49339d0e7",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\t* z80-dis.c: Add support for eZ80 and Z80 instructions.\n+\n 2020-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "11de499d7a14c7806d91e5a142634227cf43edee",
      "filename": "opcodes/po/opcodes.pot",
      "status": "modified",
      "additions": 443,
      "deletions": 339,
      "changes": 782,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/po/opcodes.pot",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/po/opcodes.pot",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/po/opcodes.pot?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: bug-binutils@gnu.org\\n\"\n-\"POT-Creation-Date: 2019-01-19 16:35+0000\\n\"\n+\"POT-Creation-Date: 2020-01-02 11:10+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -17,321 +17,321 @@ msgstr \"\"\n \"Content-Type: text/plain; charset=CHARSET\\n\"\n \"Content-Transfer-Encoding: 8bit\\n\"\n \n-#: aarch64-asm.c:819\n+#: aarch64-asm.c:809\n msgid \"specified register cannot be read from\"\n msgstr \"\"\n \n-#: aarch64-asm.c:828\n+#: aarch64-asm.c:818\n msgid \"specified register cannot be written to\"\n msgstr \"\"\n \n #. Invalid option.\n-#: aarch64-dis.c:92 arc-dis.c:782 arm-dis.c:6174\n+#: aarch64-dis.c:93 arc-dis.c:801 arm-dis.c:11328\n #, c-format\n msgid \"unrecognised disassembler option: %s\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3448\n+#: aarch64-dis.c:3521\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following AARCH64 specific disassembler options are supported for use\\n\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3452\n+#: aarch64-dis.c:3525\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  no-aliases         Don't print instruction aliases.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3455\n+#: aarch64-dis.c:3528\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  aliases            Do print instruction aliases.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3458\n+#: aarch64-dis.c:3531\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  no-notes         Don't print instruction notes.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3461\n+#: aarch64-dis.c:3534\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  notes            Do print instruction notes.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3465\n+#: aarch64-dis.c:3538\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  debug_dump         Temp switch for debug trace.\\n\"\n msgstr \"\"\n \n-#: aarch64-dis.c:3469 mips-dis.c:2773 mips-dis.c:2783 mips-dis.c:2786\n-#: nfp-dis.c:2981 riscv-dis.c:552\n+#: aarch64-dis.c:3542 mips-dis.c:2778 mips-dis.c:2788 mips-dis.c:2791\n+#: nfp-dis.c:2981 riscv-dis.c:556\n #, c-format\n msgid \"\\n\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1339\n+#: aarch64-opc.c:1346\n msgid \"immediate value\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1349\n+#: aarch64-opc.c:1356\n msgid \"immediate offset\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1359\n+#: aarch64-opc.c:1366\n msgid \"register number\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1369\n+#: aarch64-opc.c:1376\n msgid \"register element index\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1379\n+#: aarch64-opc.c:1386\n msgid \"shift amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1391\n+#: aarch64-opc.c:1398\n msgid \"multiplier\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1464\n+#: aarch64-opc.c:1471\n msgid \"reg pair must start from even reg\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1470\n+#: aarch64-opc.c:1477\n msgid \"reg pair must be contiguous\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1484\n+#: aarch64-opc.c:1491\n msgid \"extraneous register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1490\n+#: aarch64-opc.c:1497\n msgid \"missing register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1501\n+#: aarch64-opc.c:1508\n msgid \"stack pointer register expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1524\n+#: aarch64-opc.c:1533\n msgid \"z0-z15 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1525\n+#: aarch64-opc.c:1534\n msgid \"z0-z7 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1551\n+#: aarch64-opc.c:1560\n msgid \"invalid register list\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1565\n+#: aarch64-opc.c:1574\n msgid \"p0-p7 expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1591 aarch64-opc.c:1599\n+#: aarch64-opc.c:1600 aarch64-opc.c:1608\n msgid \"unexpected address writeback\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1611\n+#: aarch64-opc.c:1619\n msgid \"address writeback expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1658\n+#: aarch64-opc.c:1666\n msgid \"negative or unaligned offset expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1715\n+#: aarch64-opc.c:1723\n msgid \"invalid register offset\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1737\n+#: aarch64-opc.c:1745\n msgid \"invalid post-increment amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1753 aarch64-opc.c:2247\n+#: aarch64-opc.c:1761 aarch64-opc.c:2269\n msgid \"invalid shift amount\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1766\n+#: aarch64-opc.c:1774\n msgid \"invalid extend/shift operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1812 aarch64-opc.c:2052 aarch64-opc.c:2087 aarch64-opc.c:2106\n-#: aarch64-opc.c:2114 aarch64-opc.c:2201 aarch64-opc.c:2377 aarch64-opc.c:2477\n-#: aarch64-opc.c:2490\n+#: aarch64-opc.c:1820 aarch64-opc.c:2072 aarch64-opc.c:2107 aarch64-opc.c:2126\n+#: aarch64-opc.c:2134 aarch64-opc.c:2222 aarch64-opc.c:2399 aarch64-opc.c:2499\n+#: aarch64-opc.c:2512\n msgid \"immediate out of range\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1834 aarch64-opc.c:1876 aarch64-opc.c:1926 aarch64-opc.c:1960\n+#: aarch64-opc.c:1842 aarch64-opc.c:1884 aarch64-opc.c:1946 aarch64-opc.c:1980\n msgid \"invalid addressing mode\"\n msgstr \"\"\n \n-#: aarch64-opc.c:1918\n+#: aarch64-opc.c:1938\n msgid \"index register xzr is not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2040 aarch64-opc.c:2062 aarch64-opc.c:2280 aarch64-opc.c:2288\n-#: aarch64-opc.c:2354 aarch64-opc.c:2383\n+#: aarch64-opc.c:2060 aarch64-opc.c:2082 aarch64-opc.c:2302 aarch64-opc.c:2310\n+#: aarch64-opc.c:2376 aarch64-opc.c:2405\n msgid \"invalid shift operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2046\n+#: aarch64-opc.c:2066\n msgid \"shift amount must be 0 or 12\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2069\n+#: aarch64-opc.c:2089\n msgid \"shift amount must be a multiple of 16\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2081\n+#: aarch64-opc.c:2101\n msgid \"negative immediate value not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2212\n+#: aarch64-opc.c:2233\n msgid \"immediate zero expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2226\n+#: aarch64-opc.c:2247\n msgid \"rotate expected to be 0, 90, 180 or 270\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2236\n+#: aarch64-opc.c:2258\n msgid \"rotate expected to be 90 or 270\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2296\n+#: aarch64-opc.c:2318\n msgid \"shift is not permitted\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2321\n+#: aarch64-opc.c:2343\n msgid \"invalid value for immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2346\n+#: aarch64-opc.c:2368\n msgid \"shift amount must be 0 or 16\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2367\n+#: aarch64-opc.c:2389\n msgid \"floating-point immediate expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2401\n+#: aarch64-opc.c:2423\n msgid \"no shift amount allowed for 8-bit constants\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2411\n+#: aarch64-opc.c:2433\n msgid \"shift amount must be 0 or 8\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2424\n+#: aarch64-opc.c:2446\n msgid \"immediate too big for element size\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2431\n+#: aarch64-opc.c:2453\n msgid \"invalid arithmetic immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2445\n+#: aarch64-opc.c:2467\n msgid \"floating-point value must be 0.5 or 1.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2455\n+#: aarch64-opc.c:2477\n msgid \"floating-point value must be 0.5 or 2.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2465\n+#: aarch64-opc.c:2487\n msgid \"floating-point value must be 0.0 or 1.0\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2496\n+#: aarch64-opc.c:2518\n msgid \"invalid replicated MOV immediate\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2614\n+#: aarch64-opc.c:2639\n msgid \"extend operator expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2627\n+#: aarch64-opc.c:2652\n msgid \"missing extend operator\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2633\n+#: aarch64-opc.c:2658\n msgid \"'LSL' operator not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2654\n+#: aarch64-opc.c:2679\n msgid \"W register expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2665\n+#: aarch64-opc.c:2690\n msgid \"shift operator expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:2672\n+#: aarch64-opc.c:2697\n msgid \"'ROR' operator not allowed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:3671\n+#: aarch64-opc.c:3711\n msgid \"reading from a write-only register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:3673\n+#: aarch64-opc.c:3713\n msgid \"writing to a read-only register\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4815\n+#: aarch64-opc.c:4880\n msgid \"instruction opens new dependency sequence without ending previous one\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4835\n+#: aarch64-opc.c:4900\n msgid \"previous `movprfx' sequence not closed\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4852\n+#: aarch64-opc.c:4919\n msgid \"SVE instruction expected after `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4865\n+#: aarch64-opc.c:4932\n msgid \"SVE `movprfx' compatible instruction expected\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4956\n+#: aarch64-opc.c:5019\n msgid \"predicated instruction expected after `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4968\n+#: aarch64-opc.c:5031\n msgid \"merging predicate expected due to preceding `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4980\n+#: aarch64-opc.c:5043\n msgid \"predicate register differs from that in preceding `movprfx'\"\n msgstr \"\"\n \n-#: aarch64-opc.c:4999\n+#: aarch64-opc.c:5062\n msgid \"output register of preceding `movprfx' not used in current instruction\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5012\n+#: aarch64-opc.c:5075\n msgid \"output register of preceding `movprfx' expected as output\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5024\n+#: aarch64-opc.c:5087\n msgid \"output register of preceding `movprfx' used as input\"\n msgstr \"\"\n \n-#: aarch64-opc.c:5040\n+#: aarch64-opc.c:5103\n msgid \"register size not compatible with previous `movprfx'\"\n msgstr \"\"\n \n@@ -343,63 +343,68 @@ msgstr \"\"\n msgid \"jump hint unaligned\"\n msgstr \"\"\n \n-#: arc-dis.c:377\n+#: arc-dis.c:379\n msgid \"\"\n \"\\n\"\n \"Warning: disassembly may be wrong due to guessed opcode class choice.\\n\"\n \"Use -M<class[,class]> to select the correct opcode class(es).\\n\"\n \"\\t\\t\\t\\t\"\n msgstr \"\"\n \n-#: arc-dis.c:825\n+#: arc-dis.c:844\n #, c-format\n msgid \"unrecognised disassembler CPU option: %s\"\n msgstr \"\"\n \n-#: arc-dis.c:1387\n+#: arc-dis.c:1411\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following ARC specific disassembler options are supported for use \\n\"\n \"with -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1399\n+#: arc-dis.c:1423\n #, c-format\n msgid \"  dsp             Recognize DSP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1401\n+#: arc-dis.c:1425\n #, c-format\n msgid \"  spfp            Recognize FPX SP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1403\n+#: arc-dis.c:1427\n #, c-format\n msgid \"  dpfp            Recognize FPX DP instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1405\n+#: arc-dis.c:1429\n #, c-format\n msgid \"  quarkse_em      Recognize FPU QuarkSE-EM instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1407\n+#: arc-dis.c:1431\n #, c-format\n msgid \"  fpuda           Recognize double assist FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1409\n+#: arc-dis.c:1433\n #, c-format\n msgid \"  fpus            Recognize single precision FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1411\n+#: arc-dis.c:1435\n #, c-format\n msgid \"  fpud            Recognize double precision FPU instructions.\\n\"\n msgstr \"\"\n \n-#: arc-dis.c:1413\n+#: arc-dis.c:1437\n+#, c-format\n+msgid \"  nps400          Recognize NPS400 instructions.\\n\"\n+msgstr \"\"\n+\n+#: arc-dis.c:1439\n #, c-format\n msgid \"  hex             Use only hexadecimal number to print immediates.\\n\"\n msgstr \"\"\n@@ -565,48 +570,48 @@ msgstr \"\"\n msgid \"invalid position, should be one of: 0,4,8,...124.\"\n msgstr \"\"\n \n-#: arm-dis.c:3242\n+#: arm-dis.c:5105\n msgid \"Select raw register names\"\n msgstr \"\"\n \n-#: arm-dis.c:3244\n+#: arm-dis.c:5107\n msgid \"Select register names used by GCC\"\n msgstr \"\"\n \n-#: arm-dis.c:3246\n+#: arm-dis.c:5109\n msgid \"Select register names used in ARM's ISA documentation\"\n msgstr \"\"\n \n-#: arm-dis.c:3248\n+#: arm-dis.c:5111\n msgid \"Assume all insns are Thumb insns\"\n msgstr \"\"\n \n-#: arm-dis.c:3249\n+#: arm-dis.c:5112\n msgid \"Examine preceding label to determine an insn's type\"\n msgstr \"\"\n \n-#: arm-dis.c:3250\n+#: arm-dis.c:5113\n msgid \"Select register names used in the APCS\"\n msgstr \"\"\n \n-#: arm-dis.c:3252\n+#: arm-dis.c:5115\n msgid \"Select register names used in the ATPCS\"\n msgstr \"\"\n \n-#: arm-dis.c:3254\n+#: arm-dis.c:5117\n msgid \"Select special register names used in the ATPCS\"\n msgstr \"\"\n \n-#: arm-dis.c:3652\n+#: arm-dis.c:8286\n msgid \"<illegal precision>\"\n msgstr \"\"\n \n-#: arm-dis.c:6165\n+#: arm-dis.c:11319\n #, c-format\n msgid \"unrecognised register name set: %s\"\n msgstr \"\"\n \n-#: arm-dis.c:6906\n+#: arm-dis.c:12018\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -619,257 +624,280 @@ msgstr \"\"\n msgid \"undefined\"\n msgstr \"\"\n \n-#: avr-dis.c:216\n+#: avr-dis.c:218\n #, c-format\n msgid \"internal disassembler error\"\n msgstr \"\"\n \n-#: avr-dis.c:270\n+#: avr-dis.c:272\n #, c-format\n msgid \"unknown constraint `%c'\"\n msgstr \"\"\n \n-#: cgen-asm.c:351 epiphany-ibld.c:201 fr30-ibld.c:201 frv-ibld.c:201\n-#: ip2k-ibld.c:201 iq2000-ibld.c:201 lm32-ibld.c:201 m32c-ibld.c:201\n-#: m32r-ibld.c:201 mep-ibld.c:201 mt-ibld.c:201 or1k-ibld.c:201\n-#: xc16x-ibld.c:201 xstormy16-ibld.c:201\n-#, c-format\n-msgid \"operand out of range (%ld not between %ld and %ld)\"\n-msgstr \"\"\n-\n-#: cgen-asm.c:373\n-#, c-format\n-msgid \"operand out of range (%lu not between %lu and %lu)\"\n-msgstr \"\"\n-\n-#: d30v-dis.c:229\n-#, c-format\n-msgid \"illegal id (%d)\"\n-msgstr \"\"\n-\n-#: d30v-dis.c:256\n-#, c-format\n-msgid \"<unknown register %d>\"\n-msgstr \"\"\n-\n-#. Can't happen.\n-#: dis-buf.c:61\n-#, c-format\n-msgid \"Unknown error %d\\n\"\n-msgstr \"\"\n-\n-#: dis-buf.c:70\n-#, c-format\n-msgid \"Address 0x%s is out of bounds.\\n\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:68\n-msgid \"register unavailable for short instructions\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:115\n-msgid \"register name used as immediate value\"\n-msgstr \"\"\n-\n-#. Don't treat \"mov ip,ip\" as a move-immediate.\n-#: epiphany-asm.c:178 epiphany-asm.c:234\n-msgid \"register source in immediate move\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:187\n-msgid \"byte relocation unsupported\"\n+#: bpf-asm.c:97\n+msgid \"expected 16, 32 or 64 in\"\n msgstr \"\"\n \n-#. -- assembler routines inserted here.\n-#. -- asm.c\n-#: epiphany-asm.c:193 frv-asm.c:972 iq2000-asm.c:56 lm32-asm.c:95\n-#: lm32-asm.c:127 lm32-asm.c:157 lm32-asm.c:187 lm32-asm.c:217 lm32-asm.c:247\n-#: m32c-asm.c:140 m32c-asm.c:235 m32c-asm.c:276 m32c-asm.c:334 m32c-asm.c:355\n-#: m32r-asm.c:53 mep-asm.c:241 mep-asm.c:259 mep-asm.c:274 mep-asm.c:289\n-#: mep-asm.c:301 or1k-asm.c:54\n-msgid \"missing `)'\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:270\n-msgid \"ABORT: unknown operand\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:296\n-msgid \"Not a pc-relative address.\"\n-msgstr \"\"\n-\n-#: epiphany-asm.c:456 fr30-asm.c:311 frv-asm.c:1264 ip2k-asm.c:512\n-#: iq2000-asm.c:460 lm32-asm.c:350 m32c-asm.c:1585 m32r-asm.c:329\n-#: mep-asm.c:1288 mt-asm.c:596 or1k-asm.c:512 xc16x-asm.c:377\n+#: bpf-asm.c:181 epiphany-asm.c:456 fr30-asm.c:311 frv-asm.c:1264\n+#: ip2k-asm.c:512 iq2000-asm.c:460 lm32-asm.c:350 m32c-asm.c:1585\n+#: m32r-asm.c:329 mep-asm.c:1288 mt-asm.c:596 or1k-asm.c:580 xc16x-asm.c:377\n #: xstormy16-asm.c:277\n #, c-format\n msgid \"internal error: unrecognized field %d while parsing\"\n msgstr \"\"\n \n-#: epiphany-asm.c:508 fr30-asm.c:363 frv-asm.c:1316 ip2k-asm.c:564\n-#: iq2000-asm.c:512 lm32-asm.c:402 m32c-asm.c:1637 m32r-asm.c:381\n-#: mep-asm.c:1340 mt-asm.c:648 or1k-asm.c:564 xc16x-asm.c:429\n+#: bpf-asm.c:233 epiphany-asm.c:508 fr30-asm.c:363 frv-asm.c:1316\n+#: ip2k-asm.c:564 iq2000-asm.c:512 lm32-asm.c:402 m32c-asm.c:1637\n+#: m32r-asm.c:381 mep-asm.c:1340 mt-asm.c:648 or1k-asm.c:632 xc16x-asm.c:429\n #: xstormy16-asm.c:329\n msgid \"missing mnemonic in syntax string\"\n msgstr \"\"\n \n #. We couldn't parse it.\n-#: epiphany-asm.c:643 epiphany-asm.c:647 epiphany-asm.c:736 epiphany-asm.c:843\n-#: fr30-asm.c:498 fr30-asm.c:502 fr30-asm.c:591 fr30-asm.c:698 frv-asm.c:1451\n-#: frv-asm.c:1455 frv-asm.c:1544 frv-asm.c:1651 ip2k-asm.c:699 ip2k-asm.c:703\n-#: ip2k-asm.c:792 ip2k-asm.c:899 iq2000-asm.c:647 iq2000-asm.c:651\n-#: iq2000-asm.c:740 iq2000-asm.c:847 lm32-asm.c:537 lm32-asm.c:541\n-#: lm32-asm.c:630 lm32-asm.c:737 m32c-asm.c:1772 m32c-asm.c:1776\n-#: m32c-asm.c:1865 m32c-asm.c:1972 m32r-asm.c:516 m32r-asm.c:520 m32r-asm.c:609\n-#: m32r-asm.c:716 mep-asm.c:1475 mep-asm.c:1479 mep-asm.c:1568 mep-asm.c:1675\n-#: mt-asm.c:783 mt-asm.c:787 mt-asm.c:876 mt-asm.c:983 or1k-asm.c:699\n-#: or1k-asm.c:703 or1k-asm.c:792 or1k-asm.c:899 xc16x-asm.c:564 xc16x-asm.c:568\n-#: xc16x-asm.c:657 xc16x-asm.c:764 xstormy16-asm.c:464 xstormy16-asm.c:468\n-#: xstormy16-asm.c:557 xstormy16-asm.c:664\n+#: bpf-asm.c:368 bpf-asm.c:372 bpf-asm.c:461 bpf-asm.c:568 epiphany-asm.c:643\n+#: epiphany-asm.c:647 epiphany-asm.c:736 epiphany-asm.c:843 fr30-asm.c:498\n+#: fr30-asm.c:502 fr30-asm.c:591 fr30-asm.c:698 frv-asm.c:1451 frv-asm.c:1455\n+#: frv-asm.c:1544 frv-asm.c:1651 ip2k-asm.c:699 ip2k-asm.c:703 ip2k-asm.c:792\n+#: ip2k-asm.c:899 iq2000-asm.c:647 iq2000-asm.c:651 iq2000-asm.c:740\n+#: iq2000-asm.c:847 lm32-asm.c:537 lm32-asm.c:541 lm32-asm.c:630 lm32-asm.c:737\n+#: m32c-asm.c:1772 m32c-asm.c:1776 m32c-asm.c:1865 m32c-asm.c:1972\n+#: m32r-asm.c:516 m32r-asm.c:520 m32r-asm.c:609 m32r-asm.c:716 mep-asm.c:1475\n+#: mep-asm.c:1479 mep-asm.c:1568 mep-asm.c:1675 mt-asm.c:783 mt-asm.c:787\n+#: mt-asm.c:876 mt-asm.c:983 or1k-asm.c:767 or1k-asm.c:771 or1k-asm.c:860\n+#: or1k-asm.c:967 xc16x-asm.c:564 xc16x-asm.c:568 xc16x-asm.c:657\n+#: xc16x-asm.c:764 xstormy16-asm.c:464 xstormy16-asm.c:468 xstormy16-asm.c:557\n+#: xstormy16-asm.c:664\n msgid \"unrecognized instruction\"\n msgstr \"\"\n \n-#: epiphany-asm.c:690 fr30-asm.c:545 frv-asm.c:1498 ip2k-asm.c:746\n-#: iq2000-asm.c:694 lm32-asm.c:584 m32c-asm.c:1819 m32r-asm.c:563\n-#: mep-asm.c:1522 mt-asm.c:830 or1k-asm.c:746 xc16x-asm.c:611\n+#: bpf-asm.c:415 epiphany-asm.c:690 fr30-asm.c:545 frv-asm.c:1498\n+#: ip2k-asm.c:746 iq2000-asm.c:694 lm32-asm.c:584 m32c-asm.c:1819\n+#: m32r-asm.c:563 mep-asm.c:1522 mt-asm.c:830 or1k-asm.c:814 xc16x-asm.c:611\n #: xstormy16-asm.c:511\n #, c-format\n msgid \"syntax error (expected char `%c', found `%c')\"\n msgstr \"\"\n \n-#: epiphany-asm.c:700 fr30-asm.c:555 frv-asm.c:1508 ip2k-asm.c:756\n-#: iq2000-asm.c:704 lm32-asm.c:594 m32c-asm.c:1829 m32r-asm.c:573\n-#: mep-asm.c:1532 mt-asm.c:840 or1k-asm.c:756 xc16x-asm.c:621\n+#: bpf-asm.c:425 epiphany-asm.c:700 fr30-asm.c:555 frv-asm.c:1508\n+#: ip2k-asm.c:756 iq2000-asm.c:704 lm32-asm.c:594 m32c-asm.c:1829\n+#: m32r-asm.c:573 mep-asm.c:1532 mt-asm.c:840 or1k-asm.c:824 xc16x-asm.c:621\n #: xstormy16-asm.c:521\n #, c-format\n msgid \"syntax error (expected char `%c', found end of instruction)\"\n msgstr \"\"\n \n-#: epiphany-asm.c:730 fr30-asm.c:585 frv-asm.c:1538 ip2k-asm.c:786\n-#: iq2000-asm.c:734 lm32-asm.c:624 m32c-asm.c:1859 m32r-asm.c:603\n-#: mep-asm.c:1562 mt-asm.c:870 or1k-asm.c:786 xc16x-asm.c:651\n+#: bpf-asm.c:455 epiphany-asm.c:730 fr30-asm.c:585 frv-asm.c:1538\n+#: ip2k-asm.c:786 iq2000-asm.c:734 lm32-asm.c:624 m32c-asm.c:1859\n+#: m32r-asm.c:603 mep-asm.c:1562 mt-asm.c:870 or1k-asm.c:854 xc16x-asm.c:651\n #: xstormy16-asm.c:551\n msgid \"junk at end of line\"\n msgstr \"\"\n \n-#: epiphany-asm.c:842 fr30-asm.c:697 frv-asm.c:1650 ip2k-asm.c:898\n-#: iq2000-asm.c:846 lm32-asm.c:736 m32c-asm.c:1971 m32r-asm.c:715\n-#: mep-asm.c:1674 mt-asm.c:982 or1k-asm.c:898 xc16x-asm.c:763\n+#: bpf-asm.c:567 epiphany-asm.c:842 fr30-asm.c:697 frv-asm.c:1650\n+#: ip2k-asm.c:898 iq2000-asm.c:846 lm32-asm.c:736 m32c-asm.c:1971\n+#: m32r-asm.c:715 mep-asm.c:1674 mt-asm.c:982 or1k-asm.c:966 xc16x-asm.c:763\n #: xstormy16-asm.c:663\n msgid \"unrecognized form of instruction\"\n msgstr \"\"\n \n-#: epiphany-asm.c:856 fr30-asm.c:711 frv-asm.c:1664 ip2k-asm.c:912\n-#: iq2000-asm.c:860 lm32-asm.c:750 m32c-asm.c:1985 m32r-asm.c:729\n-#: mep-asm.c:1688 mt-asm.c:996 or1k-asm.c:912 xc16x-asm.c:777\n+#: bpf-asm.c:581 epiphany-asm.c:856 fr30-asm.c:711 frv-asm.c:1664\n+#: ip2k-asm.c:912 iq2000-asm.c:860 lm32-asm.c:750 m32c-asm.c:1985\n+#: m32r-asm.c:729 mep-asm.c:1688 mt-asm.c:996 or1k-asm.c:980 xc16x-asm.c:777\n #: xstormy16-asm.c:677\n #, c-format\n msgid \"bad instruction `%.50s...'\"\n msgstr \"\"\n \n-#: epiphany-asm.c:859 fr30-asm.c:714 frv-asm.c:1667 ip2k-asm.c:915\n-#: iq2000-asm.c:863 lm32-asm.c:753 m32c-asm.c:1988 m32r-asm.c:732\n-#: mep-asm.c:1691 mt-asm.c:999 or1k-asm.c:915 xc16x-asm.c:780\n+#: bpf-asm.c:584 epiphany-asm.c:859 fr30-asm.c:714 frv-asm.c:1667\n+#: ip2k-asm.c:915 iq2000-asm.c:863 lm32-asm.c:753 m32c-asm.c:1988\n+#: m32r-asm.c:732 mep-asm.c:1691 mt-asm.c:999 or1k-asm.c:983 xc16x-asm.c:780\n #: xstormy16-asm.c:680\n #, c-format\n msgid \"bad instruction `%.50s'\"\n msgstr \"\"\n \n-#: epiphany-desc.c:2109\n+#: bpf-desc.c:1441\n #, c-format\n msgid \"\"\n-\"internal error: epiphany_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n+\"internal error: bpf_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n \"values: `%d' vs. `%d'\"\n msgstr \"\"\n \n-#: epiphany-desc.c:2192\n+#: bpf-desc.c:1524\n #, c-format\n-msgid \"internal error: epiphany_cgen_cpu_open: unsupported argument `%d'\"\n+msgid \"internal error: bpf_cgen_cpu_open: unsupported argument `%d'\"\n msgstr \"\"\n \n-#: epiphany-desc.c:2211\n+#: bpf-desc.c:1543\n #, c-format\n-msgid \"internal error: epiphany_cgen_cpu_open: no endianness specified\"\n+msgid \"internal error: bpf_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n \n #. Default text to print if an instruction isn't recognized.\n-#: epiphany-dis.c:41 fr30-dis.c:41 frv-dis.c:41 ip2k-dis.c:41 iq2000-dis.c:41\n-#: lm32-dis.c:41 m32c-dis.c:41 m32r-dis.c:41 mep-dis.c:41 mmix-dis.c:275\n-#: mt-dis.c:41 nds32-dis.c:64 or1k-dis.c:41 xc16x-dis.c:41 xstormy16-dis.c:41\n+#: bpf-dis.c:41 epiphany-dis.c:41 fr30-dis.c:41 frv-dis.c:41 ip2k-dis.c:41\n+#: iq2000-dis.c:41 lm32-dis.c:41 m32c-dis.c:41 m32r-dis.c:41 mep-dis.c:41\n+#: mmix-dis.c:293 mt-dis.c:41 nds32-dis.c:64 or1k-dis.c:41 xc16x-dis.c:41\n+#: xstormy16-dis.c:41\n msgid \"*unknown*\"\n msgstr \"\"\n \n-#: epiphany-dis.c:279 fr30-dis.c:300 frv-dis.c:397 ip2k-dis.c:289\n+#: bpf-dis.c:203 epiphany-dis.c:279 fr30-dis.c:300 frv-dis.c:397 ip2k-dis.c:289\n #: iq2000-dis.c:190 lm32-dis.c:148 m32c-dis.c:892 m32r-dis.c:280 mep-dis.c:1188\n-#: mt-dis.c:291 or1k-dis.c:145 xc16x-dis.c:421 xstormy16-dis.c:169\n+#: mt-dis.c:291 or1k-dis.c:184 xc16x-dis.c:421 xstormy16-dis.c:169\n #, c-format\n msgid \"internal error: unrecognized field %d while printing insn\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:164 fr30-ibld.c:164 frv-ibld.c:164 ip2k-ibld.c:164\n-#: iq2000-ibld.c:164 lm32-ibld.c:164 m32c-ibld.c:164 m32r-ibld.c:164\n-#: mep-ibld.c:164 mt-ibld.c:164 or1k-ibld.c:164 xc16x-ibld.c:164\n-#: xstormy16-ibld.c:164\n+#: bpf-ibld.c:164 epiphany-ibld.c:164 fr30-ibld.c:164 frv-ibld.c:164\n+#: ip2k-ibld.c:164 iq2000-ibld.c:164 lm32-ibld.c:164 m32c-ibld.c:164\n+#: m32r-ibld.c:164 mep-ibld.c:164 mt-ibld.c:164 or1k-ibld.c:164\n+#: xc16x-ibld.c:164 xstormy16-ibld.c:164\n #, c-format\n msgid \"operand out of range (%ld not between %ld and %lu)\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:185 fr30-ibld.c:185 frv-ibld.c:185 ip2k-ibld.c:185\n-#: iq2000-ibld.c:185 lm32-ibld.c:185 m32c-ibld.c:185 m32r-ibld.c:185\n-#: mep-ibld.c:185 mt-ibld.c:185 or1k-ibld.c:185 xc16x-ibld.c:185\n-#: xstormy16-ibld.c:185\n+#: bpf-ibld.c:185 epiphany-ibld.c:185 fr30-ibld.c:185 frv-ibld.c:185\n+#: ip2k-ibld.c:185 iq2000-ibld.c:185 lm32-ibld.c:185 m32c-ibld.c:185\n+#: m32r-ibld.c:185 mep-ibld.c:185 mt-ibld.c:185 or1k-ibld.c:185\n+#: xc16x-ibld.c:185 xstormy16-ibld.c:185\n #, c-format\n msgid \"operand out of range (0x%lx not between 0 and 0x%lx)\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:880 fr30-ibld.c:735 frv-ibld.c:861 ip2k-ibld.c:612\n-#: iq2000-ibld.c:718 lm32-ibld.c:639 m32c-ibld.c:1736 m32r-ibld.c:670\n-#: mep-ibld.c:1213 mt-ibld.c:754 or1k-ibld.c:658 xc16x-ibld.c:757\n-#: xstormy16-ibld.c:683\n+#: bpf-ibld.c:201 cgen-asm.c:351 epiphany-ibld.c:201 fr30-ibld.c:201\n+#: frv-ibld.c:201 ip2k-ibld.c:201 iq2000-ibld.c:201 lm32-ibld.c:201\n+#: m32c-ibld.c:201 m32r-ibld.c:201 mep-ibld.c:201 mt-ibld.c:201 or1k-ibld.c:201\n+#: xc16x-ibld.c:201 xstormy16-ibld.c:201\n+#, c-format\n+msgid \"operand out of range (%ld not between %ld and %ld)\"\n+msgstr \"\"\n+\n+#: bpf-ibld.c:625 epiphany-ibld.c:880 fr30-ibld.c:735 frv-ibld.c:861\n+#: ip2k-ibld.c:612 iq2000-ibld.c:718 lm32-ibld.c:639 m32c-ibld.c:1736\n+#: m32r-ibld.c:670 mep-ibld.c:1213 mt-ibld.c:754 or1k-ibld.c:742\n+#: xc16x-ibld.c:757 xstormy16-ibld.c:683\n #, c-format\n msgid \"internal error: unrecognized field %d while building insn\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:1175 fr30-ibld.c:941 frv-ibld.c:1179 ip2k-ibld.c:688\n-#: iq2000-ibld.c:894 lm32-ibld.c:744 m32c-ibld.c:2898 m32r-ibld.c:808\n-#: mep-ibld.c:1813 mt-ibld.c:975 or1k-ibld.c:772 xc16x-ibld.c:978\n-#: xstormy16-ibld.c:830\n+#: bpf-ibld.c:709 epiphany-ibld.c:1175 fr30-ibld.c:941 frv-ibld.c:1179\n+#: ip2k-ibld.c:688 iq2000-ibld.c:894 lm32-ibld.c:744 m32c-ibld.c:2898\n+#: m32r-ibld.c:808 mep-ibld.c:1813 mt-ibld.c:975 or1k-ibld.c:910\n+#: xc16x-ibld.c:978 xstormy16-ibld.c:830\n #, c-format\n msgid \"internal error: unrecognized field %d while decoding insn\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:1319 fr30-ibld.c:1088 frv-ibld.c:1458 ip2k-ibld.c:763\n-#: iq2000-ibld.c:1026 lm32-ibld.c:834 m32c-ibld.c:3516 m32r-ibld.c:922\n-#: mep-ibld.c:2284 mt-ibld.c:1176 or1k-ibld.c:859 xc16x-ibld.c:1200\n-#: xstormy16-ibld.c:941\n+#: bpf-ibld.c:778 epiphany-ibld.c:1319 fr30-ibld.c:1088 frv-ibld.c:1458\n+#: ip2k-ibld.c:763 iq2000-ibld.c:1026 lm32-ibld.c:834 m32c-ibld.c:3516\n+#: m32r-ibld.c:922 mep-ibld.c:2284 mt-ibld.c:1176 or1k-ibld.c:1015\n+#: xc16x-ibld.c:1200 xstormy16-ibld.c:941\n #, c-format\n msgid \"internal error: unrecognized field %d while getting int operand\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:1445 fr30-ibld.c:1217 frv-ibld.c:1719 ip2k-ibld.c:820\n-#: iq2000-ibld.c:1140 lm32-ibld.c:906 m32c-ibld.c:4116 m32r-ibld.c:1018\n-#: mep-ibld.c:2737 mt-ibld.c:1359 or1k-ibld.c:928 xc16x-ibld.c:1404\n-#: xstormy16-ibld.c:1034\n+#: bpf-ibld.c:829 epiphany-ibld.c:1445 fr30-ibld.c:1217 frv-ibld.c:1719\n+#: ip2k-ibld.c:820 iq2000-ibld.c:1140 lm32-ibld.c:906 m32c-ibld.c:4116\n+#: m32r-ibld.c:1018 mep-ibld.c:2737 mt-ibld.c:1359 or1k-ibld.c:1102\n+#: xc16x-ibld.c:1404 xstormy16-ibld.c:1034\n #, c-format\n msgid \"internal error: unrecognized field %d while getting vma operand\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:1578 fr30-ibld.c:1349 frv-ibld.c:1987 ip2k-ibld.c:880\n-#: iq2000-ibld.c:1261 lm32-ibld.c:985 m32c-ibld.c:4704 m32r-ibld.c:1120\n-#: mep-ibld.c:3151 mt-ibld.c:1549 or1k-ibld.c:1004 xc16x-ibld.c:1609\n-#: xstormy16-ibld.c:1134\n+#: bpf-ibld.c:887 epiphany-ibld.c:1578 fr30-ibld.c:1349 frv-ibld.c:1987\n+#: ip2k-ibld.c:880 iq2000-ibld.c:1261 lm32-ibld.c:985 m32c-ibld.c:4704\n+#: m32r-ibld.c:1120 mep-ibld.c:3151 mt-ibld.c:1549 or1k-ibld.c:1196\n+#: xc16x-ibld.c:1609 xstormy16-ibld.c:1134\n #, c-format\n msgid \"internal error: unrecognized field %d while setting int operand\"\n msgstr \"\"\n \n-#: epiphany-ibld.c:1701 fr30-ibld.c:1471 frv-ibld.c:2245 ip2k-ibld.c:930\n-#: iq2000-ibld.c:1372 lm32-ibld.c:1054 m32c-ibld.c:5282 m32r-ibld.c:1212\n-#: mep-ibld.c:3555 mt-ibld.c:1729 or1k-ibld.c:1070 xc16x-ibld.c:1804\n-#: xstormy16-ibld.c:1224\n+#: bpf-ibld.c:935 epiphany-ibld.c:1701 fr30-ibld.c:1471 frv-ibld.c:2245\n+#: ip2k-ibld.c:930 iq2000-ibld.c:1372 lm32-ibld.c:1054 m32c-ibld.c:5282\n+#: m32r-ibld.c:1212 mep-ibld.c:3555 mt-ibld.c:1729 or1k-ibld.c:1280\n+#: xc16x-ibld.c:1804 xstormy16-ibld.c:1224\n #, c-format\n msgid \"internal error: unrecognized field %d while setting vma operand\"\n msgstr \"\"\n \n+#: cgen-asm.c:373\n+#, c-format\n+msgid \"operand out of range (%lu not between %lu and %lu)\"\n+msgstr \"\"\n+\n+#: d30v-dis.c:232\n+#, c-format\n+msgid \"illegal id (%d)\"\n+msgstr \"\"\n+\n+#: d30v-dis.c:259\n+#, c-format\n+msgid \"<unknown register %d>\"\n+msgstr \"\"\n+\n+#. Can't happen.\n+#: dis-buf.c:61\n+#, c-format\n+msgid \"Unknown error %d\\n\"\n+msgstr \"\"\n+\n+#: dis-buf.c:70\n+#, c-format\n+msgid \"Address 0x%s is out of bounds.\\n\"\n+msgstr \"\"\n+\n+#: epiphany-asm.c:68\n+msgid \"register unavailable for short instructions\"\n+msgstr \"\"\n+\n+#: epiphany-asm.c:115\n+msgid \"register name used as immediate value\"\n+msgstr \"\"\n+\n+#. Don't treat \"mov ip,ip\" as a move-immediate.\n+#: epiphany-asm.c:178 epiphany-asm.c:234\n+msgid \"register source in immediate move\"\n+msgstr \"\"\n+\n+#: epiphany-asm.c:187\n+msgid \"byte relocation unsupported\"\n+msgstr \"\"\n+\n+#. -- assembler routines inserted here.\n+#. -- asm.c\n+#: epiphany-asm.c:193 frv-asm.c:972 iq2000-asm.c:56 lm32-asm.c:95\n+#: lm32-asm.c:127 lm32-asm.c:157 lm32-asm.c:187 lm32-asm.c:217 lm32-asm.c:247\n+#: m32c-asm.c:140 m32c-asm.c:235 m32c-asm.c:276 m32c-asm.c:334 m32c-asm.c:355\n+#: m32r-asm.c:53 mep-asm.c:241 mep-asm.c:259 mep-asm.c:274 mep-asm.c:289\n+#: mep-asm.c:301 or1k-asm.c:54\n+msgid \"missing `)'\"\n+msgstr \"\"\n+\n+#: epiphany-asm.c:270\n+msgid \"ABORT: unknown operand\"\n+msgstr \"\"\n+\n+#: epiphany-asm.c:296\n+msgid \"Not a pc-relative address.\"\n+msgstr \"\"\n+\n+#: epiphany-desc.c:2109\n+#, c-format\n+msgid \"\"\n+\"internal error: epiphany_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n+\"values: `%d' vs. `%d'\"\n+msgstr \"\"\n+\n+#: epiphany-desc.c:2192\n+#, c-format\n+msgid \"internal error: epiphany_cgen_cpu_open: unsupported argument `%d'\"\n+msgstr \"\"\n+\n+#: epiphany-desc.c:2211\n+#, c-format\n+msgid \"internal error: epiphany_cgen_cpu_open: no endianness specified\"\n+msgstr \"\"\n+\n #: fr30-asm.c:93 m32c-asm.c:872 m32c-asm.c:879\n msgid \"Register number is not valid\"\n msgstr \"\"\n@@ -956,21 +984,21 @@ msgstr \"\"\n msgid \"internal error, h8_disassemble_init\"\n msgstr \"\"\n \n-#: h8300-dis.c:314\n+#: h8300-dis.c:315\n #, c-format\n msgid \"Hmmmm 0x%x\"\n msgstr \"\"\n \n-#: h8300-dis.c:691\n+#: h8300-dis.c:692\n #, c-format\n msgid \"Don't understand 0x%x \\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11058\n+#: i386-dis.c:11060\n msgid \"<internal disassembler error>\"\n msgstr \"\"\n \n-#: i386-dis.c:11353\n+#: i386-dis.c:11355\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -979,145 +1007,145 @@ msgid \"\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11357\n+#: i386-dis.c:11359\n #, c-format\n msgid \"  x86-64      Disassemble in 64bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11358\n+#: i386-dis.c:11360\n #, c-format\n msgid \"  i386        Disassemble in 32bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11359\n+#: i386-dis.c:11361\n #, c-format\n msgid \"  i8086       Disassemble in 16bit mode\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11360\n+#: i386-dis.c:11362\n #, c-format\n msgid \"  att         Display instruction in AT&T syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11361\n+#: i386-dis.c:11363\n #, c-format\n msgid \"  intel       Display instruction in Intel syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11362\n+#: i386-dis.c:11364\n #, c-format\n msgid \"\"\n \"  att-mnemonic\\n\"\n \"              Display instruction in AT&T mnemonic\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11364\n+#: i386-dis.c:11366\n #, c-format\n msgid \"\"\n \"  intel-mnemonic\\n\"\n \"              Display instruction in Intel mnemonic\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11366\n+#: i386-dis.c:11368\n #, c-format\n msgid \"  addr64      Assume 64bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11367\n+#: i386-dis.c:11369\n #, c-format\n msgid \"  addr32      Assume 32bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11368\n+#: i386-dis.c:11370\n #, c-format\n msgid \"  addr16      Assume 16bit address size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11369\n+#: i386-dis.c:11371\n #, c-format\n msgid \"  data32      Assume 32bit data size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11370\n+#: i386-dis.c:11372\n #, c-format\n msgid \"  data16      Assume 16bit data size\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11371\n+#: i386-dis.c:11373\n #, c-format\n msgid \"  suffix      Always display instruction suffix in AT&T syntax\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11372\n+#: i386-dis.c:11374\n #, c-format\n msgid \"  amd64       Display instruction in AMD64 ISA\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11373\n+#: i386-dis.c:11375\n #, c-format\n msgid \"  intel64     Display instruction in Intel64 ISA\\n\"\n msgstr \"\"\n \n-#: i386-dis.c:11936\n+#: i386-dis.c:11938\n msgid \"64-bit address is disabled\"\n msgstr \"\"\n \n-#: i386-gen.c:732\n+#: i386-gen.c:754\n #, c-format\n msgid \"%s: error: \"\n msgstr \"\"\n \n-#: i386-gen.c:911\n+#: i386-gen.c:917\n #, c-format\n msgid \"%s: %d: unknown bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:913\n+#: i386-gen.c:919\n #, c-format\n msgid \"unknown bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:976\n+#: i386-gen.c:982\n #, c-format\n msgid \"%s: %d: missing `)' in bitfield: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1077\n+#: i386-gen.c:1083\n #, c-format\n msgid \"unknown broadcast operand: %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1478\n+#: i386-gen.c:1538\n #, c-format\n msgid \"can't find i386-reg.tbl for reading, errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1556\n+#: i386-gen.c:1616\n #, c-format\n msgid \"can't create i386-init.h, errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1646 ia64-gen.c:2829\n+#: i386-gen.c:1706 ia64-gen.c:2829\n #, c-format\n msgid \"unable to change directory to \\\"%s\\\", errno = %s\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1658 i386-gen.c:1661\n+#: i386-gen.c:1720 i386-gen.c:1725\n #, c-format\n msgid \"CpuMax != %d!\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1665\n+#: i386-gen.c:1729\n #, c-format\n msgid \"%d unused bits in i386_cpu_flags.\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1672\n+#: i386-gen.c:1744\n #, c-format\n msgid \"%d unused bits in i386_operand_type.\\n\"\n msgstr \"\"\n \n-#: i386-gen.c:1686\n+#: i386-gen.c:1758\n #, c-format\n msgid \"can't create i386-tbl.h, errno = %s\\n\"\n msgstr \"\"\n@@ -1477,12 +1505,12 @@ msgstr \"\"\n msgid \"internal error: m32r_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n \n-#: m68k-dis.c:1292\n+#: m68k-dis.c:1294\n #, c-format\n msgid \"<function code %d>\"\n msgstr \"\"\n \n-#: m68k-dis.c:1455\n+#: m68k-dis.c:1457\n #, c-format\n msgid \"<internal error in opcode table: %s %s>\\n\"\n msgstr \"\"\n@@ -1537,86 +1565,86 @@ msgstr \"\"\n msgid \"internal error: mep_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n \n-#: mips-dis.c:1800 mips-dis.c:2026\n+#: mips-dis.c:1805 mips-dis.c:2031\n #, c-format\n msgid \"# internal error, undefined operand in `%s %s'\"\n msgstr \"\"\n \n-#: mips-dis.c:2615\n+#: mips-dis.c:2620\n msgid \"Use canonical instruction forms.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2617\n+#: mips-dis.c:2622\n msgid \"Recognize MSA instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2619\n+#: mips-dis.c:2624\n msgid \"Recognize the virtualization ASE instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2621\n+#: mips-dis.c:2626\n msgid \"\"\n \"Recognize the eXtended Physical Address (XPA) ASE\\n\"\n \"                  instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2624\n+#: mips-dis.c:2629\n msgid \"Recognize the Global INValidate (GINV) ASE instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2628\n+#: mips-dis.c:2633\n msgid \"\"\n \"Recognize the Loongson MultiMedia extensions Instructions (MMI) ASE \"\n \"instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2632\n+#: mips-dis.c:2637\n msgid \"Recognize the Loongson Content Address Memory (CAM)  instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2636\n+#: mips-dis.c:2641\n msgid \"Recognize the Loongson EXTensions (EXT)  instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2640\n+#: mips-dis.c:2645\n msgid \"Recognize the Loongson EXTensions R2 (EXT2)  instructions.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2643\n+#: mips-dis.c:2648\n msgid \"\"\n \"Print GPR names according to specified ABI.\\n\"\n \"                  Default: based on binary being disassembled.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2646\n+#: mips-dis.c:2651\n msgid \"\"\n \"Print FPR names according to specified ABI.\\n\"\n \"                  Default: numeric.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2649\n+#: mips-dis.c:2654\n msgid \"\"\n \"Print CP0 register names according to specified architecture.\\n\"\n \"                  Default: based on binary being disassembled.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2653\n+#: mips-dis.c:2658\n msgid \"\"\n \"Print HWR names according to specified architecture.\\n\"\n \"                  Default: based on binary being disassembled.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2656\n+#: mips-dis.c:2661\n msgid \"Print GPR and FPR names according to specified ABI.\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2658\n+#: mips-dis.c:2663\n msgid \"\"\n \"Print CP0 register and HWR names according to specified\\n\"\n \"                  architecture.\"\n msgstr \"\"\n \n-#: mips-dis.c:2744\n+#: mips-dis.c:2749\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -1625,7 +1653,7 @@ msgid \"\"\n \"\\n\"\n msgstr \"\"\n \n-#: mips-dis.c:2778\n+#: mips-dis.c:2783\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -1647,7 +1675,11 @@ msgstr \"\"\n msgid \"(unknown)\"\n msgstr \"\"\n \n-#: mmix-dis.c:510\n+#: mmix-dis.c:247 mmix-dis.c:255\n+msgid \"*illegal*\"\n+msgstr \"\"\n+\n+#: mmix-dis.c:529\n #, c-format\n msgid \"*unknown operands type: %d*\"\n msgstr \"\"\n@@ -1805,7 +1837,7 @@ msgstr \"\"\n #. an immediate either. We don't know how much to increase\n #. aoffsetp by since whatever generated this is broken\n #. anyway!\n-#: ns32k-dis.c:533\n+#: ns32k-dis.c:537\n #, c-format\n msgid \"$<undefined>\"\n msgstr \"\"\n@@ -1818,29 +1850,29 @@ msgstr \"\"\n msgid \"internal relocation type invalid\"\n msgstr \"\"\n \n-#: or1k-desc.c:1978\n+#: or1k-desc.c:2213\n #, c-format\n msgid \"\"\n \"internal error: or1k_cgen_rebuild_tables: conflicting insn-chunk-bitsize \"\n \"values: `%d' vs. `%d'\"\n msgstr \"\"\n \n-#: or1k-desc.c:2061\n+#: or1k-desc.c:2296\n #, c-format\n msgid \"internal error: or1k_cgen_cpu_open: unsupported argument `%d'\"\n msgstr \"\"\n \n-#: or1k-desc.c:2080\n+#: or1k-desc.c:2315\n #, c-format\n msgid \"internal error: or1k_cgen_cpu_open: no endianness specified\"\n msgstr \"\"\n \n-#: ppc-dis.c:370\n+#: ppc-dis.c:376\n #, c-format\n msgid \"warning: ignoring unknown -M%s option\"\n msgstr \"\"\n \n-#: ppc-dis.c:858\n+#: ppc-dis.c:957\n #, c-format\n msgid \"\"\n \"\\n\"\n@@ -1852,95 +1884,107 @@ msgstr \"\"\n msgid \"invalid register\"\n msgstr \"\"\n \n-#: ppc-opc.c:384 ppc-opc.c:412\n+#: ppc-opc.c:396\n msgid \"invalid conditional option\"\n msgstr \"\"\n \n-#: ppc-opc.c:386 ppc-opc.c:414\n+#: ppc-opc.c:399\n msgid \"invalid counter access\"\n msgstr \"\"\n \n-#: ppc-opc.c:416\n+#: ppc-opc.c:463\n+msgid \"BO value implies no branch hint, when using + or - modifier\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:468\n msgid \"attempt to set y bit when using + or - modifier\"\n msgstr \"\"\n \n-#: ppc-opc.c:507\n+#: ppc-opc.c:470\n+msgid \"attempt to set 'at' bits when using + or - modifier\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:658\n+msgid \"invalid R operand\"\n+msgstr \"\"\n+\n+#: ppc-opc.c:713\n msgid \"invalid mask field\"\n msgstr \"\"\n \n-#: ppc-opc.c:530\n+#: ppc-opc.c:736\n msgid \"invalid mfcr mask\"\n msgstr \"\"\n \n-#: ppc-opc.c:606\n+#: ppc-opc.c:812\n msgid \"illegal L operand value\"\n msgstr \"\"\n \n-#: ppc-opc.c:645\n+#: ppc-opc.c:851\n msgid \"incompatible L operand value\"\n msgstr \"\"\n \n-#: ppc-opc.c:684 ppc-opc.c:719\n+#: ppc-opc.c:891 ppc-opc.c:926\n msgid \"illegal bitmask\"\n msgstr \"\"\n \n-#: ppc-opc.c:806\n+#: ppc-opc.c:1013\n msgid \"address register in load range\"\n msgstr \"\"\n \n-#: ppc-opc.c:872\n+#: ppc-opc.c:1079\n msgid \"index register in load range\"\n msgstr \"\"\n \n-#: ppc-opc.c:901 ppc-opc.c:986\n+#: ppc-opc.c:1108 ppc-opc.c:1194\n msgid \"source and target register operands must be different\"\n msgstr \"\"\n \n-#: ppc-opc.c:931\n+#: ppc-opc.c:1139\n msgid \"invalid register operand when updating\"\n msgstr \"\"\n \n-#: ppc-opc.c:1049\n+#: ppc-opc.c:1257\n msgid \"illegal immediate value\"\n msgstr \"\"\n \n-#: ppc-opc.c:1154\n+#: ppc-opc.c:1362\n msgid \"invalid bat number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1189\n+#: ppc-opc.c:1397\n msgid \"invalid sprg number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1226\n+#: ppc-opc.c:1434\n msgid \"invalid tbr number\"\n msgstr \"\"\n \n-#: ppc-opc.c:1372\n+#: ppc-opc.c:1581\n msgid \"invalid constant\"\n msgstr \"\"\n \n-#: ppc-opc.c:1474 ppc-opc.c:1497 ppc-opc.c:1520 ppc-opc.c:1543\n+#: ppc-opc.c:1683 ppc-opc.c:1706 ppc-opc.c:1729 ppc-opc.c:1752\n msgid \"UIMM = 00000 is illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1566\n+#: ppc-opc.c:1775\n msgid \"UIMM values >7 are illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1589\n+#: ppc-opc.c:1798\n msgid \"UIMM values >15 are illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1612\n+#: ppc-opc.c:1821\n msgid \"GPR odd is illegal\"\n msgstr \"\"\n \n-#: ppc-opc.c:1635 ppc-opc.c:1658\n+#: ppc-opc.c:1844 ppc-opc.c:1867\n msgid \"invalid offset\"\n msgstr \"\"\n \n-#: ppc-opc.c:1681\n+#: ppc-opc.c:1890\n msgid \"invalid Ddd value\"\n msgstr \"\"\n \n@@ -1954,29 +1998,61 @@ msgstr \"\"\n msgid \"# internal error, undefined modifier (%c)\"\n msgstr \"\"\n \n-#: riscv-dis.c:541\n+#: riscv-dis.c:545\n #, c-format\n msgid \"\"\n \"\\n\"\n \"The following RISC-V-specific disassembler options are supported for use\\n\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: riscv-dis.c:545\n+#: riscv-dis.c:549\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  numeric       Print numeric register names, rather than ABI names.\\n\"\n msgstr \"\"\n \n-#: riscv-dis.c:548\n+#: riscv-dis.c:552\n #, c-format\n msgid \"\"\n \"\\n\"\n \"  no-aliases    Disassemble only into canonical instructions, rather\\n\"\n \"                than into pseudoinstructions.\\n\"\n msgstr \"\"\n \n+#: rx-dis.c:139 rx-dis.c:163 rx-dis.c:171 rx-dis.c:179 rx-dis.c:187\n+msgid \"<invalid register number>\"\n+msgstr \"\"\n+\n+#: rx-dis.c:147 rx-dis.c:195\n+msgid \"<invalid condition code>\"\n+msgstr \"\"\n+\n+#: rx-dis.c:155\n+msgid \"<invalid flag>\"\n+msgstr \"\"\n+\n+#: rx-dis.c:203\n+msgid \"<invalid opsize>\"\n+msgstr \"\"\n+\n+#: rx-dis.c:211\n+msgid \"<invalid size>\"\n+msgstr \"\"\n+\n+#: s12z-dis.c:258 s12z-dis.c:315 s12z-dis.c:326\n+msgid \"<illegal reg num>\"\n+msgstr \"\"\n+\n+#: s12z-dis.c:389\n+msgid \"<bad>\"\n+msgstr \"\"\n+\n+#: s12z-dis.c:400\n+msgid \".<bad>\"\n+msgstr \"\"\n+\n #: s390-dis.c:42\n msgid \"Disassemble in ESA architecture mode\"\n msgstr \"\"\n@@ -2002,8 +2078,8 @@ msgid \"\"\n \"with the -M switch (multiple options should be separated by commas):\\n\"\n msgstr \"\"\n \n-#: score-dis.c:663 score-dis.c:870 score-dis.c:1031 score-dis.c:1145\n-#: score-dis.c:1152 score-dis.c:1159 score7-dis.c:695 score7-dis.c:858\n+#: score-dis.c:660 score-dis.c:867 score-dis.c:1026 score-dis.c:1140\n+#: score-dis.c:1147 score-dis.c:1154 score7-dis.c:695 score7-dis.c:858\n msgid \"<illegal instruction>\"\n msgstr \"\"\n \n@@ -2018,16 +2094,44 @@ msgid \"internal error: bad sparc-opcode.h: \\\"%s\\\" == \\\"%s\\\"\\n\"\n msgstr \"\"\n \n #. Mark as non-valid instruction.\n-#: sparc-dis.c:1098\n+#: sparc-dis.c:1095\n msgid \"unknown\"\n msgstr \"\"\n \n-#: v850-dis.c:453\n+#: v850-dis.c:190\n+msgid \"<invalid s-reg number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:206\n+msgid \"<invalid reg number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:222\n+msgid \"<invalid v-reg number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:236\n+msgid \"<invalid CC-reg number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:250\n+msgid \"<invalid float-CC-reg number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:264\n+msgid \"<invalid cacheop number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:275\n+msgid \"<invalid prefop number>\"\n+msgstr \"\"\n+\n+#: v850-dis.c:510\n #, c-format\n msgid \"unknown operand shift: %x\"\n msgstr \"\"\n \n-#: v850-dis.c:469\n+#: v850-dis.c:526\n #, c-format\n msgid \"unknown reg: %d\"\n msgstr \"\"\n@@ -2109,7 +2213,7 @@ msgstr \"\"\n msgid \"Name well-known globals\"\n msgstr \"\"\n \n-#: wasm32-dis.c:503\n+#: wasm32-dis.c:510\n #, c-format\n msgid \"\"\n \"The following WebAssembly-specific disassembler options are supported for \""
    },
    {
      "sha": "99be7f8abcfdcbcaffba2021f6bc24a29f872efe",
      "filename": "opcodes/z80-dis.c",
      "status": "modified",
      "additions": 431,
      "deletions": 193,
      "changes": 624,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/z80-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6655dba246bd164d953fe220a0e3d4eed85bb268/opcodes/z80-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/z80-dis.c?ref=6655dba246bd164d953fe220a0e3d4eed85bb268",
      "patch": "@@ -1,4 +1,4 @@\n-/* Print Z80 and R800 instructions\n+/* Print Z80, Z180, EZ80 and R800 instructions\n    Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Contributed by Arnold Metselaar <arnold_m@operamail.com>\n \n@@ -28,38 +28,61 @@ struct buffer\n   bfd_vma base;\n   int n_fetch;\n   int n_used;\n-  signed char data[4];\n+  signed char data[6];\n+  long inss; /* instruction set bit mask, taken from bfd_mach */\n+  int nn_len; /* address length: 2 - Z80 mode, 3 - ADL mode*/\n } ;\n \n-typedef int (*func)(struct buffer *, disassemble_info *, char *);\n+typedef int (*func)(struct buffer *, disassemble_info *, const char *);\n \n struct tab_elt\n {\n   unsigned char val;\n   unsigned char mask;\n   func          fp;\n-  char *        text;\n+  const char *  text;\n+  unsigned      inss; /* bit mask of supported bfd_mach_* or 0 for all mach */\n } ;\n \n+#define INSS_ALL 0\n+#define INSS_Z80 ((1 << bfd_mach_z80) | (1 << bfd_mach_z80strict) | (1 << bfd_mach_z80full))\n+#define INSS_R800 (1 << bfd_mach_r800)\n+#define INSS_GBZ80 (1 << bfd_mach_gbz80)\n+#define INSS_Z180 (1 << bfd_mach_z180)\n+#define INSS_EZ80_Z80 (1 << bfd_mach_ez80_z80)\n+#define INSS_EZ80_ADL (1 << bfd_mach_ez80_adl)\n+#define INSS_EZ80 (INSS_EZ80_ADL | INSS_EZ80_Z80)\n+\n #define TXTSIZ 24\n /* Names of 16-bit registers.  */\n-static char * rr_str[] = { \"bc\", \"de\", \"hl\", \"sp\" };\n+static const char * rr_str[] = { \"bc\", \"de\", \"hl\", \"sp\" };\n /* Names of 8-bit registers.  */\n-static char * r_str[]  = { \"b\", \"c\", \"d\", \"e\", \"h\", \"l\", \"(hl)\", \"a\" };\n+static const char * r_str[]  = { \"b\", \"c\", \"d\", \"e\", \"h\", \"l\", \"(hl)\", \"a\" };\n /* Texts for condition codes.  */\n-static char * cc_str[] = { \"nz\", \"z\", \"nc\", \"c\", \"po\", \"pe\", \"p\", \"m\" };\n+static const char * cc_str[] = { \"nz\", \"z\", \"nc\", \"c\", \"po\", \"pe\", \"p\", \"m\" };\n /* Instruction names for 8-bit arithmetic, operand \"a\" is often implicit */\n-static char * arit_str[] =\n+static const char * arit_str[] =\n {\n   \"add a,\", \"adc a,\", \"sub \", \"sbc a,\", \"and \", \"xor \", \"or \", \"cp \"\n } ;\n+static const char * arit_str_ez80[] =\n+{\n+  \"add a,\", \"adc a,\", \"sub a,\", \"sbc a,\", \"and a,\", \"xor a,\", \"or a,\", \"cp a,\"\n+} ;\n+\n \f\n+static int\n+mach_inst (struct buffer *buf, struct tab_elt *p)\n+{\n+  return !p->inss || (p->inss & buf->inss);\n+}\n+\n static int\n fetch_data (struct buffer *buf, disassemble_info * info, int n)\n {\n   int r;\n \n-  if (buf->n_fetch + n > 4)\n+  if (buf->n_fetch + n > (int)sizeof(buf->data))\n     abort ();\n \n   r = info->read_memory_func (buf->base + buf->n_fetch,\n@@ -71,15 +94,15 @@ fetch_data (struct buffer *buf, disassemble_info * info, int n)\n }\n \n static int\n-prt (struct buffer *buf, disassemble_info * info, char *txt)\n+prt (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, \"%s\", txt);\n   buf->n_used = buf->n_fetch;\n   return 1;\n }\n \n static int\n-prt_e (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_e (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char e;\n   int target_addr;\n@@ -98,7 +121,7 @@ prt_e (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-jr_cc (struct buffer *buf, disassemble_info * info, char *txt)\n+jr_cc (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n \n@@ -107,15 +130,19 @@ jr_cc (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-prt_nn (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_nn (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   int nn;\n   unsigned char *p;\n+  int i;\n \n   p = (unsigned char*) buf->data + buf->n_fetch;\n-  if (fetch_data (buf, info, 2))\n+  if (fetch_data (buf, info, buf->nn_len))\n     {\n-      nn = p[0] + (p[1] << 8);\n+      nn = 0;\n+      i = buf->nn_len;\n+      while (i--)\n+        nn = nn * 0x100 + p[i];\n       info->fprintf_func (info->stream, txt, nn);\n       buf->n_used = buf->n_fetch;\n     }\n@@ -125,7 +152,7 @@ prt_nn (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-prt_rr_nn (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_rr_nn (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n   int rr;\n@@ -136,7 +163,7 @@ prt_rr_nn (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-prt_rr (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_rr (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, \"%s%s\", txt,\n \t\t      rr_str[(buf->data[buf->n_fetch - 1] >> 4) & 3]);\n@@ -145,7 +172,7 @@ prt_rr (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-prt_n (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_n (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   int n;\n   unsigned char *p;\n@@ -165,16 +192,27 @@ prt_n (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-ld_r_n (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_r_n (struct buffer *buf, disassemble_info * info, const char *txt)\n+{\n+  char mytxt[TXTSIZ];\n+  int r;\n+\n+  r = (buf->data[buf->n_fetch - 1] >> 3) & 7;\n+  snprintf (mytxt, TXTSIZ, txt, r_str[r]);\n+  return prt_n (buf, info, mytxt);\n+}\n+\n+static int\n+ld_r_n (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n \n-  snprintf (mytxt, TXTSIZ, txt, r_str[(buf->data[0] >> 3) & 7]);\n+  snprintf (mytxt, TXTSIZ, txt, r_str[(buf->data[buf->n_fetch - 1] >> 3) & 7]);\n   return prt_n (buf, info, mytxt);\n }\n \n static int\n-prt_r (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_r (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, txt,\n \t\t      r_str[(buf->data[buf->n_fetch - 1] >> 3) & 7]);\n@@ -183,7 +221,7 @@ prt_r (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-ld_r_r (struct buffer *buf, disassemble_info * info, char *txt)\n+ld_r_r (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, txt,\n \t\t      r_str[(buf->data[buf->n_fetch - 1] >> 3) & 7],\n@@ -193,17 +231,53 @@ ld_r_r (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-arit_r (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_d (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n+  int d;\n+  signed char *p;\n+\n+  p = buf->data + buf->n_fetch;\n+\n+  if (fetch_data (buf, info, 1))\n+    {\n+      d = p[0];\n+      info->fprintf_func (info->stream, txt, d);\n+      buf->n_used = buf->n_fetch;\n+    }\n+  else\n+    buf->n_used = -1;\n+\n+  return buf->n_used;\n+}\n+\n+static int\n+prt_rr_d (struct buffer *buf, disassemble_info * info, const char *txt)\n+{\n+  char mytxt[TXTSIZ];\n+  int rr;\n+\n+  rr = (buf->data[buf->n_fetch - 1] >> 4) & 3;\n+  if (rr == 3) /* SP is not supported */\n+    return 0;\n+\n+  snprintf (mytxt, TXTSIZ, txt, rr_str[rr]);\n+  return prt_d (buf, info, mytxt);\n+}\n+\n+static int\n+arit_r (struct buffer *buf, disassemble_info * info, const char *txt)\n+{\n+  const char * const *arit;\n+  arit = (buf->inss & INSS_EZ80) ? arit_str_ez80 : arit_str;\n   info->fprintf_func (info->stream, txt,\n-\t\t      arit_str[(buf->data[buf->n_fetch - 1] >> 3) & 7],\n-\t\t      r_str[buf->data[buf->n_fetch - 1] & 7]);\n+                      arit[(buf->data[buf->n_fetch - 1] >> 3) & 7],\n+                      r_str[buf->data[buf->n_fetch - 1] & 7]);\n   buf->n_used = buf->n_fetch;\n   return buf->n_used;\n }\n \n static int\n-prt_cc (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_cc (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, \"%s%s\", txt,\n \t\t      cc_str[(buf->data[0] >> 3) & 7]);\n@@ -212,7 +286,7 @@ prt_cc (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-pop_rr (struct buffer *buf, disassemble_info * info, char *txt)\n+pop_rr (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   static char *rr_stack[] = { \"bc\",\"de\",\"hl\",\"af\"};\n \n@@ -224,7 +298,7 @@ pop_rr (struct buffer *buf, disassemble_info * info, char *txt)\n \n \n static int\n-jp_cc_nn (struct buffer *buf, disassemble_info * info, char *txt)\n+jp_cc_nn (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n \n@@ -234,16 +308,18 @@ jp_cc_nn (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-arit_n (struct buffer *buf, disassemble_info * info, char *txt)\n+arit_n (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n+  const char * const *arit;\n \n-  snprintf (mytxt,TXTSIZ, txt, arit_str[(buf->data[0] >> 3) & 7]);\n+  arit = (buf->inss & INSS_EZ80) ? arit_str_ez80 : arit_str;\n+  snprintf (mytxt,TXTSIZ, txt, arit[(buf->data[0] >> 3) & 7]);\n   return prt_n (buf, info, mytxt);\n }\n \n static int\n-rst (struct buffer *buf, disassemble_info * info, char *txt)\n+rst (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, txt, buf->data[0] & 0x38);\n   buf->n_used = buf->n_fetch;\n@@ -252,7 +328,7 @@ rst (struct buffer *buf, disassemble_info * info, char *txt)\n \n \f\n static int\n-cis (struct buffer *buf, disassemble_info * info, char *txt ATTRIBUTE_UNUSED)\n+cis (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNUSED)\n {\n   static char * opar[] = { \"ld\", \"cp\", \"in\", \"out\" };\n   char * op;\n@@ -269,7 +345,42 @@ cis (struct buffer *buf, disassemble_info * info, char *txt ATTRIBUTE_UNUSED)\n }\n \n static int\n-dump (struct buffer *buf, disassemble_info * info, char *txt)\n+cism (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNUSED)\n+{\n+  static char * opar[] = { \"in%cm%s\", \"ot%cm%s\" };\n+  char * op;\n+  char c;\n+\n+  c = buf->data[1];\n+  op = opar[c & 1];\n+  info->fprintf_func (info->stream,\n+                      op,\n+                      (c & 0x08) ? 'd' : 'i',\n+                      (c & 0x10) ? \"r\" : \"\");\n+  buf->n_used = 2;\n+  return buf->n_used;\n+}\n+\n+static int\n+cis2 (struct buffer *buf, disassemble_info * info, const char *txt ATTRIBUTE_UNUSED)\n+{\n+  static char * opar[] = { \"in\", \"out\" };\n+  char * op;\n+  char c;\n+\n+  c = buf->data[1];\n+  op = ((0x14 & c) == 0x14) ? \"ot\" : (opar[c & 1]);\n+  info->fprintf_func (info->stream,\n+                      \"%s%c2%s\",\n+                      op,\n+                      (c & 0x08) ? 'd' : 'i',\n+                      (c & 0x10) ? \"r\" : \"\");\n+  buf->n_used = 2;\n+  return buf->n_used;\n+}\n+\n+static int\n+dump (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   int i;\n \n@@ -284,45 +395,85 @@ dump (struct buffer *buf, disassemble_info * info, char *txt)\n /* Table to disassemble machine codes with prefix 0xED.  */\n struct tab_elt opc_ed[] =\n {\n-  { 0x70, 0xFF, prt, \"in f,(c)\" },\n-  { 0x70, 0xFF, dump, \"xx\" },\n-  { 0x40, 0xC7, prt_r, \"in %s,(c)\" },\n-  { 0x71, 0xFF, prt, \"out (c),0\" },\n-  { 0x70, 0xFF, dump, \"xx\" },\n-  { 0x41, 0xC7, prt_r, \"out (c),%s\" },\n-  { 0x42, 0xCF, prt_rr, \"sbc hl,\" },\n-  { 0x43, 0xCF, prt_rr_nn, \"ld (0x%%04x),%s\" },\n-  { 0x44, 0xFF, prt, \"neg\" },\n-  { 0x45, 0xFF, prt, \"retn\" },\n-  { 0x46, 0xFF, prt, \"im 0\" },\n-  { 0x47, 0xFF, prt, \"ld i,a\" },\n-  { 0x4A, 0xCF, prt_rr, \"adc hl,\" },\n-  { 0x4B, 0xCF, prt_rr_nn, \"ld %s,(0x%%04x)\" },\n-  { 0x4D, 0xFF, prt, \"reti\" },\n-  { 0x4F, 0xFF, prt, \"ld r,a\" },\n-  { 0x56, 0xFF, prt, \"im 1\" },\n-  { 0x57, 0xFF, prt, \"ld a,i\" },\n-  { 0x5E, 0xFF, prt, \"im 2\" },\n-  { 0x5F, 0xFF, prt, \"ld a,r\" },\n-  { 0x67, 0xFF, prt, \"rrd\" },\n-  { 0x6F, 0xFF, prt, \"rld\" },\n-  { 0xA0, 0xE4, cis, \"\" },\n-  { 0xC3, 0xFF, prt, \"muluw hl,bc\" },\n-  { 0xC5, 0xE7, prt_r, \"mulub a,%s\" },\n-  { 0xF3, 0xFF, prt, \"muluw hl,sp\" },\n-  { 0x00, 0x00, dump, \"xx\" }\n+  { 0x30, 0xFE, dump, \"xx\", INSS_ALL },\n+  { 0x00, 0xC7, prt_r_n, \"in0 %s,(0x%%02x)\", INSS_Z180|INSS_EZ80 },\n+  { 0x01, 0xC7, prt_r_n, \"out0 (0x%%02x),%s\", INSS_Z180|INSS_EZ80 },\n+  { 0x32, 0xFF, prt_d, \"lea ix,ix%+d\", INSS_EZ80 },\n+  { 0x33, 0xFF, prt_d, \"lea iy,iy%+d\", INSS_EZ80 },\n+  { 0x02, 0xCF, prt_rr_d, \"lea %s,ix%%+d\", INSS_EZ80 },\n+  { 0x03, 0xCF, prt_rr_d, \"lea %s,iy%%+d\", INSS_EZ80 },\n+  { 0x04, 0xC7, prt_r, \"tst %s\", INSS_Z180},\n+  { 0x04, 0xC7, prt_r, \"tst a,%s\", INSS_EZ80 },\n+  { 0x07, 0xFF, prt, \"ld bc,(hl)\", INSS_EZ80 },\n+  { 0x0F, 0xCF, prt_rr, \"ld (hl),\", INSS_EZ80 },\n+  { 0x17, 0xFF, prt, \"ld de,(hl)\", INSS_EZ80 },\n+  { 0x27, 0xFF, prt, \"ld hl,(hl)\", INSS_EZ80 },\n+  { 0x36, 0xFF, prt, \"ld iy,(hl)\", INSS_EZ80 },\n+  { 0x37, 0xFF, prt, \"ld ix,(hl)\", INSS_EZ80 },\n+  { 0x3E, 0xFF, prt, \"ld (hl),iy\", INSS_EZ80 },\n+  { 0x3F, 0xFF, prt, \"ld (hl),ix\", INSS_EZ80 },\n+  { 0x70, 0xFF, prt, \"in f,(c)\", INSS_Z80 | INSS_R800 },\n+  { 0x70, 0xFF, dump, \"xx\", INSS_ALL },\n+  { 0x40, 0xC7, prt_r, \"in %s,(bc)\", INSS_EZ80 },\n+  { 0x40, 0xC7, prt_r, \"in %s,(c)\", INSS_ALL },\n+  { 0x71, 0xFF, prt, \"out (c),0\", INSS_Z80 },\n+  { 0x70, 0xFF, dump, \"xx\", INSS_ALL },\n+  { 0x41, 0xC7, prt_r, \"out (bc),%s\", INSS_EZ80 },\n+  { 0x41, 0xC7, prt_r, \"out (c),%s\", INSS_ALL },\n+  { 0x42, 0xCF, prt_rr, \"sbc hl,\", INSS_ALL },\n+  { 0x43, 0xCF, prt_rr_nn, \"ld (0x%%04x),%s\", INSS_ALL },\n+  { 0x44, 0xFF, prt, \"neg\", INSS_ALL },\n+  { 0x45, 0xFF, prt, \"retn\", INSS_ALL },\n+  { 0x46, 0xFF, prt, \"im 0\", INSS_ALL },\n+  { 0x47, 0xFF, prt, \"ld i,a\", INSS_ALL },\n+  { 0x4A, 0xCF, prt_rr, \"adc hl,\", INSS_ALL },\n+  { 0x4B, 0xCF, prt_rr_nn, \"ld %s,(0x%%04x)\", INSS_ALL },\n+  { 0x4C, 0xCF, prt_rr, \"mlt \", INSS_Z180|INSS_EZ80 },\n+  { 0x4D, 0xFF, prt, \"reti\", INSS_ALL },\n+  { 0x4F, 0xFF, prt, \"ld r,a\", INSS_ALL },\n+  { 0x54, 0xFF, prt_d, \"lea ix,iy%+d\", INSS_EZ80 },\n+  { 0x55, 0xFF, prt_d, \"lea iy,ix%+d\", INSS_EZ80 },\n+  { 0x56, 0xFF, prt, \"im 1\", INSS_ALL },\n+  { 0x57, 0xFF, prt, \"ld a,i\", INSS_ALL },\n+  { 0x5E, 0xFF, prt, \"im 2\", INSS_ALL },\n+  { 0x5F, 0xFF, prt, \"ld a,r\", INSS_ALL },\n+  { 0x64, 0xFF, prt_n, \"tst 0x%02x\", INSS_Z180 },\n+  { 0x64, 0xFF, prt_n, \"tst a,0x%02x\", INSS_EZ80 },\n+  { 0x65, 0xFF, prt_d, \"pea ix%+d\", INSS_EZ80 },\n+  { 0x66, 0xFF, prt_d, \"pea iy%+d\", INSS_EZ80 },\n+  { 0x67, 0xFF, prt, \"rrd\", INSS_ALL },\n+  { 0x6F, 0xFF, prt, \"rld\", INSS_ALL },\n+  { 0x74, 0xFF, prt_n, \"tstio 0x%02x\", INSS_Z180|INSS_EZ80 },\n+  { 0x76, 0xFF, prt, \"slp\", INSS_Z180|INSS_EZ80 },\n+  { 0x82, 0xE6, cism, \"\", INSS_Z180|INSS_EZ80 },\n+  { 0x84, 0xC7, cis2, \"\", INSS_EZ80 },\n+  { 0xA0, 0xE4, cis, \"\", INSS_ALL },\n+  { 0x7D, 0xFF, prt, \"stmix\", INSS_EZ80 },\n+  { 0x7E, 0xFF, prt, \"rsmix\", INSS_EZ80 },\n+  { 0x6D, 0xFF, prt, \"ld mb,a\", INSS_EZ80 },\n+  { 0x6E, 0xFF, prt, \"ld a,mb\", INSS_EZ80 },\n+  { 0xC7, 0xFF, prt, \"ld i,hl\", INSS_EZ80 },\n+  { 0xD7, 0xFF, prt, \"ld hl,i\", INSS_EZ80 },\n+  { 0xC2, 0xFF, prt, \"inirx\", INSS_EZ80 },\n+  { 0xC3, 0xFF, prt, \"otirx\", INSS_EZ80 },\n+  { 0xCA, 0xFF, prt, \"indrx\", INSS_EZ80 },\n+  { 0xCB, 0xFF, prt, \"otdrx\", INSS_EZ80 },\n+  { 0xC3, 0xFF, prt, \"muluw hl,bc\", INSS_R800 },\n+  { 0xC5, 0xE7, prt_r, \"mulub a,%s\", INSS_R800 },\n+  { 0xF3, 0xFF, prt, \"muluw hl,sp\", INSS_R800 },\n+  { 0x00, 0x00, dump, \"xx\", INSS_ALL }\n };\n \n static int\n-pref_ed (struct buffer * buf, disassemble_info * info,\n-\t char* txt ATTRIBUTE_UNUSED)\n+pref_ed (struct buffer *buf, disassemble_info *info,\n+         const char *txt ATTRIBUTE_UNUSED)\n {\n   struct tab_elt *p;\n \n   if (fetch_data(buf, info, 1))\n     {\n-      for (p = opc_ed; p->val != (buf->data[1] & p->mask); ++p)\n-\t;\n+      for (p = opc_ed; p->val != (buf->data[1] & p->mask) || !mach_inst(buf, p); ++p)\n+        ;\n       p->fp (buf, info, p->text);\n     }\n   else\n@@ -340,16 +491,25 @@ static char *cb2_str[] =\n };\n \n static int\n-pref_cb (struct buffer * buf, disassemble_info * info,\n-\t char* txt ATTRIBUTE_UNUSED)\n+pref_cb (struct buffer *buf, disassemble_info *info,\n+         const char *txt ATTRIBUTE_UNUSED)\n {\n+  const char *op_txt;\n+  int idx;\n   if (fetch_data (buf, info, 1))\n     {\n       buf->n_used = 2;\n       if ((buf->data[1] & 0xc0) == 0)\n-\tinfo->fprintf_func (info->stream, \"%s %s\",\n-\t\t\t    cb2_str[(buf->data[1] >> 3) & 7],\n-\t\t\t    r_str[buf->data[1] & 7]);\n+        {\n+          idx = (buf->data[1] >> 3) & 7;\n+          if ((buf->inss & INSS_GBZ80) && (idx == 6))\n+            op_txt = \"swap\";\n+          else\n+            op_txt = cb2_str[idx];\n+          info->fprintf_func (info->stream, \"%s %s\",\n+                              op_txt,\n+                              r_str[buf->data[1] & 7]);\n+        }\n       else\n \tinfo->fprintf_func (info->stream, \"%s %d,%s\",\n \t\t\t    cb1_str[(buf->data[1] >> 6) & 3],\n@@ -363,15 +523,15 @@ pref_cb (struct buffer * buf, disassemble_info * info,\n }\n \f\n static int\n-addvv (struct buffer * buf, disassemble_info * info, char* txt)\n+addvv (struct buffer * buf, disassemble_info * info, const char *txt)\n {\n   info->fprintf_func (info->stream, \"add %s,%s\", txt, txt);\n \n   return buf->n_used = buf->n_fetch;\n }\n \n static int\n-ld_v_v (struct buffer * buf, disassemble_info * info, char* txt)\n+ld_v_v (struct buffer * buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n \n@@ -380,8 +540,9 @@ ld_v_v (struct buffer * buf, disassemble_info * info, char* txt)\n }\n \n static int\n-prt_d (struct buffer *buf, disassemble_info * info, char *txt)\n+prt_d_n (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n+  char mytxt[TXTSIZ];\n   int d;\n   signed char *p;\n \n@@ -390,8 +551,8 @@ prt_d (struct buffer *buf, disassemble_info * info, char *txt)\n   if (fetch_data (buf, info, 1))\n     {\n       d = p[0];\n-      info->fprintf_func (info->stream, txt, d);\n-      buf->n_used = buf->n_fetch;\n+      snprintf (mytxt, TXTSIZ, txt, d);\n+      return prt_n (buf, info, mytxt);\n     }\n   else\n     buf->n_used = -1;\n@@ -400,61 +561,58 @@ prt_d (struct buffer *buf, disassemble_info * info, char *txt)\n }\n \n static int\n-prt_d_n (struct buffer *buf, disassemble_info * info, char *txt)\n+arit_d (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n-  int d;\n-  signed char *p;\n-\n-  p = buf->data + buf->n_fetch;\n-\n-  if (fetch_data (buf, info, 1))\n-    {\n-      d = p[0];\n-      snprintf (mytxt, TXTSIZ, txt, d);\n-      return prt_n (buf, info, mytxt);\n-    }\n-  else\n-    buf->n_used = -1;\n+  signed char c;\n+  const char * const *arit;\n \n-  return buf->n_used;\n+  arit = (buf->inss & INSS_EZ80) ? arit_str_ez80 : arit_str;\n+  c = buf->data[buf->n_fetch - 1];\n+  snprintf (mytxt, TXTSIZ, txt, arit[(c >> 3) & 7]);\n+  return prt_d (buf, info, mytxt);\n }\n \n static int\n-arit_d (struct buffer *buf, disassemble_info * info, char *txt)\n+ld_r_d (struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n   signed char c;\n \n   c = buf->data[buf->n_fetch - 1];\n-  snprintf (mytxt, TXTSIZ, txt, arit_str[(c >> 3) & 7]);\n+  snprintf (mytxt, TXTSIZ, txt, r_str[(c >> 3) & 7]);\n   return prt_d (buf, info, mytxt);\n }\n \n static int\n-ld_r_d (struct buffer *buf, disassemble_info * info, char *txt)\n+ld_d_r(struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n   signed char c;\n \n   c = buf->data[buf->n_fetch - 1];\n-  snprintf (mytxt, TXTSIZ, txt, r_str[(c >> 3) & 7]);\n+  snprintf (mytxt, TXTSIZ, txt, r_str[c & 7]);\n   return prt_d (buf, info, mytxt);\n }\n \n static int\n-ld_d_r(struct buffer *buf, disassemble_info * info, char *txt)\n+ld_ii_ii(struct buffer *buf, disassemble_info * info, const char *txt)\n {\n   char mytxt[TXTSIZ];\n   signed char c;\n+  int p;\n+  static const char *ii[2] = { \"ix\", \"iy\" };\n \n+  p = (buf->data[buf->n_fetch - 2] == '\\xdd') ? 0 : 1;\n   c = buf->data[buf->n_fetch - 1];\n-  snprintf (mytxt, TXTSIZ, txt, r_str[c & 7]);\n+  if ((c & 0x07) != 0x07)\n+    p = 1 - p; /* 0 -> 1, 1 -> 0 */\n+  snprintf (mytxt, TXTSIZ, txt, ii[p]);\n   return prt_d (buf, info, mytxt);\n }\n \n static int\n-pref_xd_cb (struct buffer * buf, disassemble_info * info, char* txt)\n+pref_xd_cb (struct buffer * buf, disassemble_info * info, const char *txt)\n {\n   if (fetch_data (buf, info, 2))\n     {\n@@ -490,49 +648,58 @@ pref_xd_cb (struct buffer * buf, disassemble_info * info, char* txt)\n /* Table to disassemble machine codes with prefix 0xDD or 0xFD.  */\n static struct tab_elt opc_ind[] =\n {\n-  { 0x24, 0xF7, prt_r, \"inc %s%%s\" },\n-  { 0x25, 0xF7, prt_r, \"dec %s%%s\" },\n-  { 0x26, 0xF7, ld_r_n, \"ld %s%%s,0x%%%%02x\" },\n-  { 0x21, 0xFF, prt_nn, \"ld %s,0x%%04x\" },\n-  { 0x22, 0xFF, prt_nn, \"ld (0x%%04x),%s\" },\n-  { 0x2A, 0xFF, prt_nn, \"ld %s,(0x%%04x)\" },\n-  { 0x23, 0xFF, prt, \"inc %s\" },\n-  { 0x2B, 0xFF, prt, \"dec %s\" },\n-  { 0x29, 0xFF, addvv, \"%s\" },\n-  { 0x09, 0xCF, prt_rr, \"add %s,\" },\n-  { 0x34, 0xFF, prt_d, \"inc (%s%%+d)\" },\n-  { 0x35, 0xFF, prt_d, \"dec (%s%%+d)\" },\n-  { 0x36, 0xFF, prt_d_n, \"ld (%s%%+d),0x%%%%02x\" },\n-\n-  { 0x76, 0xFF, dump, \"h\" },\n-  { 0x46, 0xC7, ld_r_d, \"ld %%s,(%s%%%%+d)\" },\n-  { 0x70, 0xF8, ld_d_r, \"ld (%s%%%%+d),%%s\" },\n-  { 0x64, 0xF6, ld_v_v, \"%s\" },\n-  { 0x60, 0xF0, ld_r_r, \"ld %s%%s,%%s\" },\n-  { 0x44, 0xC6, ld_r_r, \"ld %%s,%s%%s\" },\n-\n-  { 0x86, 0xC7, arit_d, \"%%s(%s%%%%+d)\" },\n-  { 0x84, 0xC6, arit_r, \"%%s%s%%s\" },\n-\n-  { 0xE1, 0xFF, prt, \"pop %s\" },\n-  { 0xE5, 0xFF, prt, \"push %s\" },\n-  { 0xCB, 0xFF, pref_xd_cb, \"%s\" },\n-  { 0xE3, 0xFF, prt, \"ex (sp),%s\" },\n-  { 0xE9, 0xFF, prt, \"jp (%s)\" },\n-  { 0xF9, 0xFF, prt, \"ld sp,%s\" },\n-  { 0x00, 0x00, dump, \"?\" },\n+  { 0x07, 0xFF, prt_d, \"ld bc,(%s%%+d)\", INSS_EZ80 },\n+  { 0x0F, 0xFF, prt_d, \"ld (%s%%+d),bc\", INSS_EZ80 },\n+  { 0x17, 0xFF, prt_d, \"ld de,(%s%%+d)\", INSS_EZ80 },\n+  { 0x1F, 0xFF, prt_d, \"ld (%s%%+d),de\", INSS_EZ80 },\n+  { 0x24, 0xF7, prt_r, \"inc %s%%s\", INSS_ALL },\n+  { 0x25, 0xF7, prt_r, \"dec %s%%s\", INSS_ALL },\n+  { 0x26, 0xF7, ld_r_n, \"ld %s%%s,0x%%%%02x\", INSS_ALL },\n+  { 0x27, 0xFF, prt_d, \"ld hl,(%s%%+d)\", INSS_EZ80 },\n+  { 0x2F, 0xFF, prt_d, \"ld (%s%%+d),hl\", INSS_EZ80 },\n+  { 0x21, 0xFF, prt_nn, \"ld %s,0x%%04x\", INSS_ALL },\n+  { 0x22, 0xFF, prt_nn, \"ld (0x%%04x),%s\", INSS_ALL },\n+  { 0x2A, 0xFF, prt_nn, \"ld %s,(0x%%04x)\", INSS_ALL },\n+  { 0x23, 0xFF, prt, \"inc %s\", INSS_ALL },\n+  { 0x2B, 0xFF, prt, \"dec %s\", INSS_ALL },\n+  { 0x29, 0xFF, addvv, \"%s\", INSS_ALL },\n+  { 0x31, 0xFF, ld_ii_ii, \"ld %%s,(%s%%%%+d)\", INSS_EZ80 },\n+  { 0x37, 0xFF, ld_ii_ii, \"ld %%s,(%s%%%%+d)\", INSS_EZ80 },\n+  { 0x3E, 0xFE, ld_ii_ii, \"ld (%s%%%%+d),%%s\", INSS_EZ80 },\n+  { 0x09, 0xCF, prt_rr, \"add %s,\", INSS_ALL },\n+  { 0x34, 0xFF, prt_d, \"inc (%s%%+d)\", INSS_ALL },\n+  { 0x35, 0xFF, prt_d, \"dec (%s%%+d)\", INSS_ALL },\n+  { 0x36, 0xFF, prt_d_n, \"ld (%s%%+d),0x%%%%02x\", INSS_ALL },\n+\n+  { 0x76, 0xFF, dump, \"h\", INSS_ALL },\n+  { 0x46, 0xC7, ld_r_d, \"ld %%s,(%s%%%%+d)\", INSS_ALL },\n+  { 0x70, 0xF8, ld_d_r, \"ld (%s%%%%+d),%%s\", INSS_ALL },\n+  { 0x64, 0xF6, ld_v_v, \"%s\", INSS_ALL },\n+  { 0x60, 0xF0, ld_r_r, \"ld %s%%s,%%s\", INSS_ALL },\n+  { 0x44, 0xC6, ld_r_r, \"ld %%s,%s%%s\", INSS_ALL },\n+\n+  { 0x86, 0xC7, arit_d, \"%%s(%s%%%%+d)\", INSS_ALL },\n+  { 0x84, 0xC6, arit_r, \"%%s%s%%s\", INSS_ALL },\n+\n+  { 0xE1, 0xFF, prt, \"pop %s\", INSS_ALL },\n+  { 0xE5, 0xFF, prt, \"push %s\", INSS_ALL },\n+  { 0xCB, 0xFF, pref_xd_cb, \"%s\", INSS_ALL },\n+  { 0xE3, 0xFF, prt, \"ex (sp),%s\", INSS_ALL },\n+  { 0xE9, 0xFF, prt, \"jp (%s)\", INSS_ALL },\n+  { 0xF9, 0xFF, prt, \"ld sp,%s\", INSS_ALL },\n+  { 0x00, 0x00, dump, \"?\", INSS_ALL },\n } ;\n \n static int\n-pref_ind (struct buffer * buf, disassemble_info * info, char* txt)\n+pref_ind (struct buffer *buf, disassemble_info *info, const char *txt)\n {\n   if (fetch_data (buf, info, 1))\n     {\n       char mytxt[TXTSIZ];\n       struct tab_elt *p;\n \n-      for (p = opc_ind; p->val != (buf->data[1] & p->mask); ++p)\n-\t;\n+      for (p = opc_ind; p->val != (buf->data[1] & p->mask) || !mach_inst (buf, p); ++p)\n+        ;\n       snprintf (mytxt, TXTSIZ, p->text, txt);\n       p->fp (buf, info, mytxt);\n     }\n@@ -542,85 +709,156 @@ pref_ind (struct buffer * buf, disassemble_info * info, char* txt)\n   return buf->n_used;\n }\n \n+static int\n+print_insn_z80_buf (struct buffer *buf, disassemble_info *info);\n+\n+static int\n+suffix (struct buffer *buf_in, disassemble_info *info, const char *txt)\n+{\n+  struct buffer buf;\n+  char mybuf[TXTSIZ*4];\n+  fprintf_ftype old_fprintf;\n+  void *old_stream;\n+  char *p;\n+\n+  buf_in->n_used++;\n+  buf = *buf_in;\n+  buf.n_fetch = 0;\n+  buf.n_used = 0;\n+  buf.base++;\n+  switch (txt[2])\n+    {\n+    case 'l': /* SIL or LIL */\n+      buf.nn_len = 3;\n+      break;\n+    case 's': /* SIS or LIS */\n+      buf.nn_len = 2;\n+      break;\n+    default:\n+      /* unknown suffix */\n+      return -1;\n+    }\n+  old_fprintf = info->fprintf_func;\n+  old_stream = info->stream;\n+  info->fprintf_func = (fprintf_ftype)&sprintf;\n+  info->stream = mybuf;\n+  print_insn_z80_buf(&buf, info);\n+  info->fprintf_func = old_fprintf;\n+  info->stream = old_stream;\n+\n+  for (p = &mybuf[0]; *p && *p != ' ' && *p != '.'; ++p)\n+    ;\n+\n+  if (*p == '.') /* suffix already present */\n+    {\n+      info->fprintf_func(info->stream, \"nop ;%s\", txt); /* double prefix */\n+      return buf_in->n_used;\n+    }\n+\n+  *p++ = '\\0';\n+  info->fprintf_func(info->stream, *p ? \"%s.%s %s\" : \"%s.%s\", mybuf, txt, p);\n+\n+  memcpy(&buf_in->data[1], buf.data, sizeof(buf.data)-1);\n+  buf_in->n_used += buf.n_used;\n+  buf_in->n_fetch += buf.n_fetch;\n+  return buf_in->n_used;\n+}\n+\n /* Table to disassemble machine codes without prefix.  */\n static struct tab_elt opc_main[] =\n {\n-  { 0x00, 0xFF, prt, \"nop\" },\n-  { 0x01, 0xCF, prt_rr_nn, \"ld %s,0x%%04x\" },\n-  { 0x02, 0xFF, prt, \"ld (bc),a\" },\n-  { 0x03, 0xCF, prt_rr, \"inc \" },\n-  { 0x04, 0xC7, prt_r, \"inc %s\" },\n-  { 0x05, 0xC7, prt_r, \"dec %s\" },\n-  { 0x06, 0xC7, ld_r_n, \"ld %s,0x%%02x\" },\n-  { 0x07, 0xFF, prt, \"rlca\" },\n-  { 0x08, 0xFF, prt, \"ex af,af'\" },\n-  { 0x09, 0xCF, prt_rr, \"add hl,\" },\n-  { 0x0A, 0xFF, prt, \"ld a,(bc)\" },\n-  { 0x0B, 0xCF, prt_rr, \"dec \" },\n-  { 0x0F, 0xFF, prt, \"rrca\" },\n-  { 0x10, 0xFF, prt_e, \"djnz \" },\n-  { 0x12, 0xFF, prt, \"ld (de),a\" },\n-  { 0x17, 0xFF, prt, \"rla\" },\n-  { 0x18, 0xFF, prt_e, \"jr \"},\n-  { 0x1A, 0xFF, prt, \"ld a,(de)\" },\n-  { 0x1F, 0xFF, prt, \"rra\" },\n-  { 0x20, 0xE7, jr_cc, \"jr %s,\"},\n-  { 0x22, 0xFF, prt_nn, \"ld (0x%04x),hl\" },\n-  { 0x27, 0xFF, prt, \"daa\"},\n-  { 0x2A, 0xFF, prt_nn, \"ld hl,(0x%04x)\" },\n-  { 0x2F, 0xFF, prt, \"cpl\" },\n-  { 0x32, 0xFF, prt_nn, \"ld (0x%04x),a\" },\n-  { 0x37, 0xFF, prt, \"scf\" },\n-  { 0x3A, 0xFF, prt_nn, \"ld a,(0x%04x)\" },\n-  { 0x3F, 0xFF, prt, \"ccf\" },\n-\n-  { 0x76, 0xFF, prt, \"halt\" },\n-  { 0x40, 0xC0, ld_r_r, \"ld %s,%s\"},\n-\n-  { 0x80, 0xC0, arit_r, \"%s%s\" },\n-\n-  { 0xC0, 0xC7, prt_cc, \"ret \" },\n-  { 0xC1, 0xCF, pop_rr, \"pop\" },\n-  { 0xC2, 0xC7, jp_cc_nn, \"jp \" },\n-  { 0xC3, 0xFF, prt_nn, \"jp 0x%04x\" },\n-  { 0xC4, 0xC7, jp_cc_nn, \"call \" },\n-  { 0xC5, 0xCF, pop_rr, \"push\" },\n-  { 0xC6, 0xC7, arit_n, \"%s0x%%02x\" },\n-  { 0xC7, 0xC7, rst, \"rst 0x%02x\" },\n-  { 0xC9, 0xFF, prt, \"ret\" },\n-  { 0xCB, 0xFF, pref_cb, \"\" },\n-  { 0xCD, 0xFF, prt_nn, \"call 0x%04x\" },\n-  { 0xD3, 0xFF, prt_n, \"out (0x%02x),a\" },\n-  { 0xD9, 0xFF, prt, \"exx\" },\n-  { 0xDB, 0xFF, prt_n, \"in a,(0x%02x)\" },\n-  { 0xDD, 0xFF, pref_ind, \"ix\" },\n-  { 0xE3, 0xFF, prt, \"ex (sp),hl\" },\n-  { 0xE9, 0xFF, prt, \"jp (hl)\" },\n-  { 0xEB, 0xFF, prt, \"ex de,hl\" },\n-  { 0xED, 0xFF, pref_ed, \"\"},\n-  { 0xF3, 0xFF, prt, \"di\" },\n-  { 0xF9, 0xFF, prt, \"ld sp,hl\" },\n-  { 0xFB, 0xFF, prt, \"ei\" },\n-  { 0xFD, 0xFF, pref_ind, \"iy\" },\n-  { 0x00, 0x00, prt, \"????\" },\n+  { 0x00, 0xFF, prt, \"nop\", INSS_ALL },\n+  { 0x01, 0xCF, prt_rr_nn, \"ld %s,0x%%04x\", INSS_ALL },\n+  { 0x02, 0xFF, prt, \"ld (bc),a\", INSS_ALL },\n+  { 0x03, 0xCF, prt_rr, \"inc \", INSS_ALL },\n+  { 0x04, 0xC7, prt_r, \"inc %s\", INSS_ALL },\n+  { 0x05, 0xC7, prt_r, \"dec %s\", INSS_ALL },\n+  { 0x06, 0xC7, ld_r_n, \"ld %s,0x%%02x\", INSS_ALL },\n+  { 0x07, 0xFF, prt, \"rlca\", INSS_ALL },\n+  { 0x08, 0xFF, prt, \"ex af,af'\", ~INSS_GBZ80 },\n+  { 0x09, 0xCF, prt_rr, \"add hl,\", INSS_ALL },\n+  { 0x0A, 0xFF, prt, \"ld a,(bc)\", INSS_ALL },\n+  { 0x0B, 0xCF, prt_rr, \"dec \", INSS_ALL },\n+  { 0x0F, 0xFF, prt, \"rrca\", INSS_ALL },\n+  { 0x10, 0xFF, prt_e, \"djnz \", ~INSS_GBZ80 },\n+  { 0x12, 0xFF, prt, \"ld (de),a\", INSS_ALL },\n+  { 0x17, 0xFF, prt, \"rla\", INSS_ALL },\n+  { 0x18, 0xFF, prt_e, \"jr \", INSS_ALL },\n+  { 0x1A, 0xFF, prt, \"ld a,(de)\", INSS_ALL },\n+  { 0x1F, 0xFF, prt, \"rra\", INSS_ALL },\n+  { 0x20, 0xE7, jr_cc, \"jr %s,\", INSS_ALL },\n+  { 0x22, 0xFF, prt_nn, \"ld (0x%04x),hl\", ~INSS_GBZ80 },\n+  { 0x27, 0xFF, prt, \"daa\", INSS_ALL },\n+  { 0x2A, 0xFF, prt_nn, \"ld hl,(0x%04x)\", ~INSS_GBZ80 },\n+  { 0x2F, 0xFF, prt, \"cpl\", INSS_ALL },\n+  { 0x32, 0xFF, prt_nn, \"ld (0x%04x),a\", INSS_ALL },\n+  { 0x37, 0xFF, prt, \"scf\", INSS_ALL },\n+  { 0x3A, 0xFF, prt_nn, \"ld a,(0x%04x)\", INSS_ALL },\n+  { 0x3F, 0xFF, prt, \"ccf\", INSS_ALL },\n+\n+  { 0x76, 0xFF, prt, \"halt\", INSS_ALL },\n+\n+  { 0x40, 0xFF, suffix, \"sis\", INSS_EZ80 },\n+  { 0x49, 0xFF, suffix, \"lis\", INSS_EZ80 },\n+  { 0x52, 0xFF, suffix, \"sil\", INSS_EZ80 },\n+  { 0x5B, 0xFF, suffix, \"lil\", INSS_EZ80 },\n+\n+  { 0x40, 0xC0, ld_r_r, \"ld %s,%s\", INSS_ALL},\n+\n+  { 0x80, 0xC0, arit_r, \"%s%s\", INSS_ALL },\n+\n+  { 0xC0, 0xC7, prt_cc, \"ret \", INSS_ALL },\n+  { 0xC1, 0xCF, pop_rr, \"pop\", INSS_ALL },\n+  { 0xC2, 0xC7, jp_cc_nn, \"jp \", INSS_ALL },\n+  { 0xC3, 0xFF, prt_nn, \"jp 0x%04x\", INSS_ALL },\n+  { 0xC4, 0xC7, jp_cc_nn, \"call \", INSS_ALL },\n+  { 0xC5, 0xCF, pop_rr, \"push\", INSS_ALL },\n+  { 0xC6, 0xC7, arit_n, \"%s0x%%02x\", INSS_ALL },\n+  { 0xC7, 0xC7, rst, \"rst 0x%02x\", INSS_ALL },\n+  { 0xC9, 0xFF, prt, \"ret\", INSS_ALL },\n+  { 0xCB, 0xFF, pref_cb, \"\", INSS_ALL },\n+  { 0xCD, 0xFF, prt_nn, \"call 0x%04x\", INSS_ALL },\n+  { 0xD3, 0xFF, prt_n, \"out (0x%02x),a\", ~INSS_GBZ80 },\n+  { 0xD9, 0xFF, prt, \"exx\", ~INSS_GBZ80 },\n+  { 0xDB, 0xFF, prt_n, \"in a,(0x%02x)\", ~INSS_GBZ80 },\n+  { 0xDD, 0xFF, pref_ind, \"ix\", ~INSS_GBZ80 },\n+  { 0xE3, 0xFF, prt, \"ex (sp),hl\", ~INSS_GBZ80 },\n+  { 0xE9, 0xFF, prt, \"jp (hl)\", INSS_ALL },\n+  { 0xEB, 0xFF, prt, \"ex de,hl\", ~INSS_GBZ80 },\n+  { 0xED, 0xFF, pref_ed, \"\", ~INSS_GBZ80 },\n+  { 0xF3, 0xFF, prt, \"di\", INSS_ALL },\n+  { 0xF9, 0xFF, prt, \"ld sp,hl\", ~INSS_GBZ80 },\n+  { 0xFB, 0xFF, prt, \"ei\", INSS_ALL },\n+  { 0xFD, 0xFF, pref_ind, \"iy\", ~INSS_GBZ80 },\n+  { 0x00, 0x00, prt, \"????\", INSS_ALL },\n } ;\n \n int\n print_insn_z80 (bfd_vma addr, disassemble_info * info)\n {\n   struct buffer buf;\n-  struct tab_elt *p;\n \n   buf.base = addr;\n   buf.n_fetch = 0;\n   buf.n_used = 0;\n+  buf.inss = 1 << info->mach;\n+  buf.nn_len = info->mach == bfd_mach_ez80_adl ? 3 : 2;\n+  info->bytes_per_line = (buf.inss & INSS_EZ80) ? 6 : 4; /* <ss pp oo nn mm MM> OR <pp oo nn mm> */\n \n-  if (! fetch_data (& buf, info, 1))\n+  return print_insn_z80_buf (&buf, info);\n+}\n+\n+static int\n+print_insn_z80_buf (struct buffer *buf, disassemble_info *info)\n+{\n+  struct tab_elt *p;\n+\n+  if (! fetch_data (buf, info, 1))\n     return -1;\n \n-  for (p = opc_main; p->val != (buf.data[0] & p->mask); ++p)\n+  for (p = opc_main; p->val != (buf->data[0] & p->mask) || !mach_inst(buf, p); ++p)\n     ;\n-  p->fp (& buf, info, p->text);\n+  p->fp (buf, info, p->text);\n \n-  return buf.n_used;\n+  return buf->n_used;\n }"
    }
  ]
}