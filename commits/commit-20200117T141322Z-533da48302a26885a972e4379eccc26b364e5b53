{
  "sha": "533da48302a26885a972e4379eccc26b364e5b53",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTMzZGE0ODMwMmEyNjg4NWE5NzJlNDM3OWVjY2MyNmIzNjRlNWI1Mw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-17T14:13:22Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-17T14:13:22Z"
    },
    "message": "Update libiberty sources with changes in the gcc mainline.\n\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tUpdate copyright years.\n+\n+2019-12-06  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* make-relative-prefix.c (split_directories):\n+\tReturn early on empty 'name'\n+\n+2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* cp-demangle.c (d_print_init): Remove const from 4th param.\n+\t(cplus_demangle_fill_name): Initialize d->d_counting.\n+\t(cplus_demangle_fill_extended_operator): Likewise.\n+\t(cplus_demangle_fill_ctor): Likewise.\n+\t(cplus_demangle_fill_dtor): Likewise.\n+\t(d_make_empty): Likewise.\n+\t(d_count_templates_scopes): Remobe const from 3rd param,\n+\tReturn on dc->d_counting > 1,\n+\tIncrement dc->d_counting.\n+        * cp-demint.c (cplus_demangle_fill_component): Initialize d->d_counting.\n+\t(cplus_demangle_fill_builtin_type): Likewise.\n+\t(cplus_demangle_fill_operator): Likewise.\n+\n+2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* cplus-dem.c (cplus_demangle): Use rust_demangle directly.\n+\t(rust_demangle): Remove.\n+\t* rust-demangle.c (is_prefixed_hash): Rename to is_legacy_prefixed_hash.\n+\t(parse_lower_hex_nibble): Rename to decode_lower_hex_nibble.\n+\t(parse_legacy_escape): Rename to decode_legacy_escape.\n+\t(rust_is_mangled): Remove.\n+\t(struct rust_demangler): Add.\n+\t(peek): Add.\n+\t(next): Add.\n+\t(struct rust_mangled_ident): Add.\n+\t(parse_ident): Add.\n+\t(rust_demangle_sym): Remove.\n+\t(print_str): Add.\n+\t(PRINT): Add.\n+\t(print_ident): Add.\n+\t(rust_demangle_callback): Add.\n+\t(struct str_buf): Add.\n+\t(str_buf_reserve): Add.\n+\t(str_buf_append): Add.\n+\t(str_buf_demangle_callback): Add.\n+\t(rust_demangle): Add.\n+\t* rust-demangle.h: Remove.\n+\n+2019-11-15  Miguel Saldivar  <saldivarcher@gmail.com>\n+\n+\t* testsuite/demangle-expected: Fix test.\n+\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\t* cp-demangle.c (d_expr_primary): Handle\n+\tnullptr demangling.\n+\t* testsuite/demangle-expected: Added test.\n+\n+2019-10-29 Paul Pluzhnikov  <ppluzhnikov@google.com>\n+\n+\t* cp-demangle.c (d_number): Avoid signed int overflow.\n+\n+2019-10-28  Miguel Saldivar  <saldivarcher@gmail.com>\n+\n+\t* cp-demangle.c (d_print_mod): Add a space before printing `complex`\n+\tand `imaginary`, as opposed to after.\n+\t* testsuite/demangle-expected: Adjust test.\n+\n+2019-10-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* rust-demangle.c (looks_like_rust): Remove.\n+\t(rust_is_mangled): Don't check escapes.\n+\t(is_prefixed_hash): Allow 0-9a-f permutations.\n+\t(rust_demangle_sym): Don't bail on unknown escapes.\n+\t* testsuite/rust-demangle-expected: Update 'main::$99$' test.\n+\n+2019-09-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* rust-demangle.c (unescape): Remove.\n+\t(parse_lower_hex_nibble): New function.\n+\t(parse_legacy_escape): New function.\n+\t(is_prefixed_hash): Use parse_lower_hex_nibble.\n+\t(looks_like_rust): Use parse_legacy_escape.\n+\t(rust_demangle_sym): Use parse_legacy_escape.\n+\t* testsuite/rust-demangle-expected: Add 'llv$u6d$' test.\n+\n+2019-08-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/91478\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tFirst find a WEAK HIDDEN symbol in symbol table that will be\n+\tpreserved.  Later, use the symbol name for all removed symbols.\n+\n+2019-08-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Add filedescriptor.c.\n+\t* filedescriptor.c: New file.\n+\t* lrealpath.c (is_valid_fd): Remove.\n\ndiff --git a/libiberty/Makefile.in b/libiberty/Makefile.in\nindex 0be45b4ae8..fe738d0db4 100644\n--- a/libiberty/Makefile.in\n+++ b/libiberty/Makefile.in\n@@ -1,7 +1,7 @@\n # Makefile for the libiberty library.\n # Originally written by K. Richard Pixley <rich@cygnus.com>.\n #\n-# Copyright (C) 1990-2019 Free Software Foundation, Inc.\n+# Copyright (C) 1990-2020 Free Software Foundation, Inc.\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or\n@@ -127,7 +127,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \tcalloc.c choose-temp.c clock.c concat.c cp-demangle.c\t\t\\\n \t cp-demint.c cplus-dem.c crc32.c\t\t\t\t\\\n \td-demangle.c dwarfnames.c dyn-string.c\t\t\t\t\\\n-\tfdmatch.c ffs.c fibheap.c filename_cmp.c floatformat.c\t\t\\\n+\tfdmatch.c ffs.c fibheap.c filedescriptor.c filename_cmp.c floatformat.c\t\t\\\n \tfnmatch.c fopen_unlocked.c\t\t\t\t\t\\\n \tgetcwd.c getopt.c getopt1.c getpagesize.c getpwd.c getruntime.c\t\\\n          gettimeofday.c                                                 \\\n@@ -171,6 +171,7 @@ REQUIRED_OFILES =\t\t\t\t\t\t\t\\\n \t./cp-demint.$(objext) ./crc32.$(objext) ./d-demangle.$(objext)\t\\\n \t./dwarfnames.$(objext) ./dyn-string.$(objext)\t\t\t\\\n \t./fdmatch.$(objext) ./fibheap.$(objext)\t\t\t\t\\\n+\t./filedescriptor.$(objext)\t\\\n \t./filename_cmp.$(objext) ./floatformat.$(objext)\t\t\\\n \t./fnmatch.$(objext) ./fopen_unlocked.$(objext)\t\t\t\\\n \t./getopt.$(objext) ./getopt1.$(objext) ./getpwd.$(objext)\t\\\n@@ -756,6 +757,17 @@ $(CONFIGURED_OFILES): stamp-picdir stamp-noasandir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/fibheap.c $(OUTPUT_OPTION)\n\n+./filedescriptor.$(objext): $(srcdir)/filedescriptor.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n+\tif [ x\"$(PICFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/filedescriptor.c -o pic/$@; \\\n+\telse true; fi\n+\tif [ x\"$(NOASANFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(NOASANFLAG) $(srcdir)/filedescriptor.c -o noasan/$@; \\\n+\telse true; fi\n+\t$(COMPILE.c) $(srcdir)/filedescriptor.c $(OUTPUT_OPTION)\n+\n+\n ./filename_cmp.$(objext): $(srcdir)/filename_cmp.c config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/filenames.h $(INCDIR)/hashtab.h \\\n \t$(INCDIR)/safe-ctype.h\ndiff --git a/libiberty/_doprnt.c b/libiberty/_doprnt.c\nindex d44dc415ed..a739f4304f 100644\n--- a/libiberty/_doprnt.c\n+++ b/libiberty/_doprnt.c\n@@ -1,5 +1,5 @@\n /* Provide a version of _doprnt in terms of fprintf.\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n    Contributed by Kaveh Ghazi  (ghazi@caip.rutgers.edu)  3/29/98\n\n This program is free software; you can redistribute it and/or modify it\ndiff --git a/libiberty/argv.c b/libiberty/argv.c\nindex 6444896f99..8c9794db6a 100644\n--- a/libiberty/argv.c\n+++ b/libiberty/argv.c\n@@ -1,5 +1,5 @@\n /* Create and destroy argument vectors (argv's)\n-   Copyright (C) 1992-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2020 Free Software Foundation, Inc.\n    Written by Fred Fish @ Cygnus Support\n\n This file is part of the libiberty library.\ndiff --git a/libiberty/asprintf.c b/libiberty/asprintf.c\nindex 5718682f69..6e38e2234d 100644\n--- a/libiberty/asprintf.c\n+++ b/libiberty/asprintf.c\n@@ -1,6 +1,6 @@\n /* Like sprintf but provides a pointer to malloc'd storage, which must\n    be freed by the caller.\n-   Copyright (C) 1997-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n\n This file is part of the libiberty library.\ndiff --git a/libiberty/choose-temp.c b/libiberty/choose-temp.c\nindex 72c1b710bd..49a2faaa51 100644\n--- a/libiberty/choose-temp.c\n+++ b/libiberty/choose-temp.c\n@@ -1,5 +1,5 @@\n /* Utility to pick a temporary filename prefix.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n\n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or\ndiff --git a/libiberty/clock.c b/libiberty/clock.c\nindex a3730714bd..0de74657d0 100644\n--- a/libiberty/clock.c\n+++ b/libiberty/clock.c\n@@ -1,5 +1,5 @@\n /* ANSI-compatible clock function.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n\n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the\ndiff --git",
    "tree": {
      "sha": "9b2bedcac203ce68d4b81aa152d334305a3199aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9b2bedcac203ce68d4b81aa152d334305a3199aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/533da48302a26885a972e4379eccc26b364e5b53",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/533da48302a26885a972e4379eccc26b364e5b53",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/533da48302a26885a972e4379eccc26b364e5b53",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/533da48302a26885a972e4379eccc26b364e5b53/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf8e4b6c8144a687d5edc24eda1bf0a3687ce71e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf8e4b6c8144a687d5edc24eda1bf0a3687ce71e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf8e4b6c8144a687d5edc24eda1bf0a3687ce71e"
    }
  ],
  "stats": {
    "total": 1331,
    "additions": 875,
    "deletions": 456
  },
  "files": [
    {
      "sha": "b1189ea21756a205066c9f37f3f23d64c50949ab",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,3 +1,40 @@\n+2020-01-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* Import from gcc mainline:\n+\t2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* ansidecl.h (ATTRIBUTE_WARN_UNUSED_RESULT): New macro.\n+\t* libiberty.h (xmalloc): Use it.\n+\t(xrealloc): Likewise.\n+\t(xcalloc): Likewise.\n+\t(xstrdup): Likewise.\n+\t(xstrndup): Likewise.\n+\t(xmemdup): Likewise.\n+\n+\t2019-06-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* ansidecl.h:\n+\t(ATTRIBUTE_RESULT_SIZE_1): Define new macro.\n+\t(ATTRIBUTE_RESULT_SIZE_2): Likewise.\n+\t(ATTRIBUTE_RESULT_SIZE_1_2): Likewise.\n+\t* libiberty.h (xmalloc): Add RESULT_SIZE attribute.\n+\t(xrealloc): Likewise.\n+\t(xcalloc): Likewise.\n+\n+\t2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* demangle.h (struct demangle_component): Add member\n+\td_counting.\n+\n+\t2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* demangle.h (rust_demangle_callback): Add.\n+\n+\t2019-07-18  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* demangle.h (rust_is_mangled): Move to libiberty/rust-demangle.h.\n+\t(rust_demangle_sym): Move to libiberty/rust-demangle.h.\n+\n 2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \tPR 25376"
    },
    {
      "sha": "ec7a13f016ae29050cbdf78601df3429a0beea46",
      "filename": "include/ansidecl.h",
      "status": "modified",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/include/ansidecl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/include/ansidecl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ansidecl.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -292,6 +292,40 @@ So instead we use the macro below and test it against specific values.  */\n # endif\n #endif\n \n+/* Attribute `alloc_size' was valid as of gcc 4.3.  */\n+#ifndef ATTRIBUTE_RESULT_SIZE_1\n+# if (GCC_VERSION >= 4003)\n+#  define ATTRIBUTE_RESULT_SIZE_1 __attribute__ ((alloc_size (1)))\n+# else\n+#  define ATTRIBUTE_RESULT_SIZE_1\n+#endif\n+#endif\n+\n+#ifndef ATTRIBUTE_RESULT_SIZE_2\n+# if (GCC_VERSION >= 4003)\n+#  define ATTRIBUTE_RESULT_SIZE_2 __attribute__ ((alloc_size (2)))\n+# else\n+#  define ATTRIBUTE_RESULT_SIZE_2\n+#endif\n+#endif\n+\n+#ifndef ATTRIBUTE_RESULT_SIZE_1_2\n+# if (GCC_VERSION >= 4003)\n+#  define ATTRIBUTE_RESULT_SIZE_1_2 __attribute__ ((alloc_size (1, 2)))\n+# else\n+#  define ATTRIBUTE_RESULT_SIZE_1_2\n+#endif\n+#endif\n+\n+/* Attribute `warn_unused_result' was valid as of gcc 3.3.  */\n+#ifndef ATTRIBUTE_WARN_UNUSED_RESULT\n+# if GCC_VERSION >= 3003\n+#  define ATTRIBUTE_WARN_UNUSED_RESULT __attribute__ ((warn_unused_result))\n+# else\n+#  define ATTRIBUTE_WARN_UNUSED_RESULT\n+# endif\n+#endif\n+\n /* We use __extension__ in some places to suppress -pedantic warnings\n    about GCC extensions.  This feature didn't work properly before\n    gcc 2.8.  */"
    },
    {
      "sha": "a7f11f59205d4f51ee22931d19afd4ffcf3d8ff0",
      "filename": "include/demangle.h",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/include/demangle.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/include/demangle.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/demangle.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -159,24 +159,11 @@ ada_demangle (const char *mangled, int options);\n extern char *\n dlang_demangle (const char *mangled, int options);\n \n-/* Returns non-zero iff MANGLED is a rust mangled symbol.  MANGLED must\n-   already have been demangled through cplus_demangle_v3.  If this function\n-   returns non-zero then MANGLED can be demangled (in-place) using\n-   RUST_DEMANGLE_SYM.  */\n extern int\n-rust_is_mangled (const char *mangled);\n-\n-/* Demangles SYM (in-place) if RUST_IS_MANGLED returned non-zero for SYM.\n-   If RUST_IS_MANGLED returned zero for SYM then RUST_DEMANGLE_SYM might\n-   replace characters that cannot be demangled with '?' and might truncate\n-   SYM.  After calling RUST_DEMANGLE_SYM SYM might be shorter, but never\n-   larger.  */\n-extern void\n-rust_demangle_sym (char *sym);\n-\n-/* Demangles MANGLED if it was GNU_V3 and then RUST mangled, otherwise\n-   returns NULL. Uses CPLUS_DEMANGLE_V3, RUST_IS_MANGLED and\n-   RUST_DEMANGLE_SYM.  Returns a new string that is owned by the caller.  */\n+rust_demangle_callback (const char *mangled, int options,\n+                        demangle_callbackref callback, void *opaque);\n+\n+\n extern char *\n rust_demangle (const char *mangled, int options);\n \n@@ -481,6 +468,7 @@ struct demangle_component\n      Initialize to zero.  Private to d_print_comp.\n      All other fields are final after initialization.  */\n   int d_printing;\n+  int d_counting;\n \n   union\n   {"
    },
    {
      "sha": "141cb886a85000f86080342f90ea6c44c8720bb3",
      "filename": "include/libiberty.h",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/include/libiberty.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/include/libiberty.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/libiberty.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -137,6 +137,10 @@ extern const char *unix_lbasename (const char *) ATTRIBUTE_RETURNS_NONNULL ATTRI\n \n extern char *lrealpath (const char *);\n \n+/* Return true when FD file descriptor exists.  */\n+\n+extern int is_valid_fd (int fd);\n+\n /* Concatenate an arbitrary number of strings.  You must pass NULL as\n    the last argument of this function, to terminate the list of\n    strings.  Allocates memory using xmalloc.  */\n@@ -310,30 +314,30 @@ extern void xmalloc_failed (size_t) ATTRIBUTE_NORETURN;\n    message to stderr (using the name set by xmalloc_set_program_name,\n    if any) and then call xexit.  */\n \n-extern void *xmalloc (size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;\n+extern void *xmalloc (size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_RESULT_SIZE_1 ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Reallocate memory without fail.  This works like xmalloc.  Note,\n    realloc type functions are not suitable for attribute malloc since\n    they may return the same address across multiple calls. */\n \n-extern void *xrealloc (void *, size_t) ATTRIBUTE_RETURNS_NONNULL;\n+extern void *xrealloc (void *, size_t) ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_RESULT_SIZE_2 ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Allocate memory without fail and set it to zero.  This works like\n    xmalloc.  */\n \n-extern void *xcalloc (size_t, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;\n+extern void *xcalloc (size_t, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_RESULT_SIZE_1_2 ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Copy a string into a memory buffer without fail.  */\n \n-extern char *xstrdup (const char *) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;\n+extern char *xstrdup (const char *) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Copy at most N characters from string into a buffer without fail.  */\n \n-extern char *xstrndup (const char *, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;\n+extern char *xstrndup (const char *, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Copy an existing memory buffer to a new memory buffer without fail.  */\n \n-extern void *xmemdup (const void *, size_t, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL;\n+extern void *xmemdup (const void *, size_t, size_t) ATTRIBUTE_MALLOC ATTRIBUTE_RETURNS_NONNULL ATTRIBUTE_WARN_UNUSED_RESULT;\n \n /* Physical memory routines.  Return values are in BYTES.  */\n extern double physmem_total (void);\n@@ -649,7 +653,7 @@ extern int asprintf (char **, const char *, ...) ATTRIBUTE_PRINTF_2;\n \n extern char *xasprintf (const char *, ...) ATTRIBUTE_MALLOC ATTRIBUTE_PRINTF_1;\n \n-#if !HAVE_DECL_VASPRINTF\n+#if defined(HAVE_DECL_VASPRINTF) && !HAVE_DECL_VASPRINTF\n /* Like vsprintf but provides a pointer to malloc'd storage, which\n    must be freed by the caller.  */\n "
    },
    {
      "sha": "c2bab93a1517ae08b9b4225f9daf8384e44cca09",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 100,
      "deletions": 0,
      "changes": 100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,3 +1,103 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tUpdate copyright years.\n+\n+2019-12-06  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* make-relative-prefix.c (split_directories):\n+\tReturn early on empty 'name'\n+\n+2019-11-16  Tim Ruehsen  <tim.ruehsen@gmx.de>\n+\n+\t* cp-demangle.c (d_print_init): Remove const from 4th param.\n+\t(cplus_demangle_fill_name): Initialize d->d_counting.\n+\t(cplus_demangle_fill_extended_operator): Likewise.\n+\t(cplus_demangle_fill_ctor): Likewise.\n+\t(cplus_demangle_fill_dtor): Likewise.\n+\t(d_make_empty): Likewise.\n+\t(d_count_templates_scopes): Remobe const from 3rd param,\n+\tReturn on dc->d_counting > 1,\n+\tIncrement dc->d_counting.\n+        * cp-demint.c (cplus_demangle_fill_component): Initialize d->d_counting.\n+\t(cplus_demangle_fill_builtin_type): Likewise.\n+\t(cplus_demangle_fill_operator): Likewise.\n+\n+2019-11-16  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* cplus-dem.c (cplus_demangle): Use rust_demangle directly.\n+\t(rust_demangle): Remove.\n+\t* rust-demangle.c (is_prefixed_hash): Rename to is_legacy_prefixed_hash.\n+\t(parse_lower_hex_nibble): Rename to decode_lower_hex_nibble.\n+\t(parse_legacy_escape): Rename to decode_legacy_escape.\n+\t(rust_is_mangled): Remove.\n+\t(struct rust_demangler): Add.\n+\t(peek): Add.\n+\t(next): Add.\n+\t(struct rust_mangled_ident): Add.\n+\t(parse_ident): Add.\n+\t(rust_demangle_sym): Remove.\n+\t(print_str): Add.\n+\t(PRINT): Add.\n+\t(print_ident): Add.\n+\t(rust_demangle_callback): Add.\n+\t(struct str_buf): Add.\n+\t(str_buf_reserve): Add.\n+\t(str_buf_append): Add.\n+\t(str_buf_demangle_callback): Add.\n+\t(rust_demangle): Add.\n+\t* rust-demangle.h: Remove.\n+\n+2019-11-15  Miguel Saldivar  <saldivarcher@gmail.com>\n+\n+\t* testsuite/demangle-expected: Fix test.\n+\n+2019-11-04  Kamlesh Kumar  <kamleshbhalui@gmail.com>\n+\n+\t* cp-demangle.c (d_expr_primary): Handle\n+\tnullptr demangling.\n+\t* testsuite/demangle-expected: Added test.\n+\n+2019-10-29 Paul Pluzhnikov  <ppluzhnikov@google.com>\n+\n+\t* cp-demangle.c (d_number): Avoid signed int overflow.\n+\n+2019-10-28  Miguel Saldivar  <saldivarcher@gmail.com>\n+\n+\t* cp-demangle.c (d_print_mod): Add a space before printing `complex`\n+\tand `imaginary`, as opposed to after.\n+\t* testsuite/demangle-expected: Adjust test.\n+\n+2019-10-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* rust-demangle.c (looks_like_rust): Remove.\n+\t(rust_is_mangled): Don't check escapes.\n+\t(is_prefixed_hash): Allow 0-9a-f permutations.\n+\t(rust_demangle_sym): Don't bail on unknown escapes.\n+\t* testsuite/rust-demangle-expected: Update 'main::$99$' test.\n+\n+2019-09-03  Eduard-Mihai Burtescu  <eddyb@lyken.rs>\n+\n+\t* rust-demangle.c (unescape): Remove.\n+\t(parse_lower_hex_nibble): New function.\n+\t(parse_legacy_escape): New function.\n+\t(is_prefixed_hash): Use parse_lower_hex_nibble.\n+\t(looks_like_rust): Use parse_legacy_escape.\n+\t(rust_demangle_sym): Use parse_legacy_escape.\n+\t* testsuite/rust-demangle-expected: Add 'llv$u6d$' test.\n+\n+2019-08-27  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/91478\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tFirst find a WEAK HIDDEN symbol in symbol table that will be\n+\tpreserved.  Later, use the symbol name for all removed symbols.\n+\n+2019-08-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Add filedescriptor.c.\n+\t* filedescriptor.c: New file.\n+\t* lrealpath.c (is_valid_fd): Remove.\n+\n 2019-08-08  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/91352"
    },
    {
      "sha": "fe738d0db435e59717106574a54c9fba67e9ec31",
      "filename": "libiberty/Makefile.in",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/Makefile.in?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n # Makefile for the libiberty library.\n # Originally written by K. Richard Pixley <rich@cygnus.com>.\n #\n-# Copyright (C) 1990-2019 Free Software Foundation, Inc.\n+# Copyright (C) 1990-2020 Free Software Foundation, Inc.\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or\n@@ -127,7 +127,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \tcalloc.c choose-temp.c clock.c concat.c cp-demangle.c\t\t\\\n \t cp-demint.c cplus-dem.c crc32.c\t\t\t\t\\\n \td-demangle.c dwarfnames.c dyn-string.c\t\t\t\t\\\n-\tfdmatch.c ffs.c fibheap.c filename_cmp.c floatformat.c\t\t\\\n+\tfdmatch.c ffs.c fibheap.c filedescriptor.c filename_cmp.c floatformat.c\t\t\\\n \tfnmatch.c fopen_unlocked.c\t\t\t\t\t\\\n \tgetcwd.c getopt.c getopt1.c getpagesize.c getpwd.c getruntime.c\t\\\n          gettimeofday.c                                                 \\\n@@ -171,6 +171,7 @@ REQUIRED_OFILES =\t\t\t\t\t\t\t\\\n \t./cp-demint.$(objext) ./crc32.$(objext) ./d-demangle.$(objext)\t\\\n \t./dwarfnames.$(objext) ./dyn-string.$(objext)\t\t\t\\\n \t./fdmatch.$(objext) ./fibheap.$(objext)\t\t\t\t\\\n+\t./filedescriptor.$(objext)\t\\\n \t./filename_cmp.$(objext) ./floatformat.$(objext)\t\t\\\n \t./fnmatch.$(objext) ./fopen_unlocked.$(objext)\t\t\t\\\n \t./getopt.$(objext) ./getopt1.$(objext) ./getpwd.$(objext)\t\\\n@@ -756,6 +757,17 @@ $(CONFIGURED_OFILES): stamp-picdir stamp-noasandir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/fibheap.c $(OUTPUT_OPTION)\n \n+./filedescriptor.$(objext): $(srcdir)/filedescriptor.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n+\tif [ x\"$(PICFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/filedescriptor.c -o pic/$@; \\\n+\telse true; fi\n+\tif [ x\"$(NOASANFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(NOASANFLAG) $(srcdir)/filedescriptor.c -o noasan/$@; \\\n+\telse true; fi\n+\t$(COMPILE.c) $(srcdir)/filedescriptor.c $(OUTPUT_OPTION)\n+\n+\n ./filename_cmp.$(objext): $(srcdir)/filename_cmp.c config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/filenames.h $(INCDIR)/hashtab.h \\\n \t$(INCDIR)/safe-ctype.h"
    },
    {
      "sha": "a739f4304f9568546fceb745c674f2f6d2005f74",
      "filename": "libiberty/_doprnt.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/_doprnt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/_doprnt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/_doprnt.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Provide a version of _doprnt in terms of fprintf.\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n    Contributed by Kaveh Ghazi  (ghazi@caip.rutgers.edu)  3/29/98\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "8c9794db6a211ba5b46f55fa52048633ba8350fa",
      "filename": "libiberty/argv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/argv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/argv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/argv.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Create and destroy argument vectors (argv's)\n-   Copyright (C) 1992-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1992-2020 Free Software Foundation, Inc.\n    Written by Fred Fish @ Cygnus Support\n \n This file is part of the libiberty library."
    },
    {
      "sha": "6e38e2234dc551da56b3835ca60daaf70bf75f67",
      "filename": "libiberty/asprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/asprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/asprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/asprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Like sprintf but provides a pointer to malloc'd storage, which must\n    be freed by the caller.\n-   Copyright (C) 1997-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "49a2faaa51bb6d6c28c611e52d05f656ea25dadd",
      "filename": "libiberty/choose-temp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/choose-temp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/choose-temp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/choose-temp.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Utility to pick a temporary filename prefix.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "0de74657d0d712efd34595d3d2e05fdd28f27ecd",
      "filename": "libiberty/clock.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/clock.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/clock.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/clock.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* ANSI-compatible clock function.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the"
    },
    {
      "sha": "533e4a99b0d8ced71abf8d86c8e2b6f8141c1962",
      "filename": "libiberty/concat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/concat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/concat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/concat.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Concatenate variable number of strings.\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n    Written by Fred Fish @ Cygnus Support\n \n This file is part of the libiberty library."
    },
    {
      "sha": "ce1cb03cc7d72b807cf2233f0df55cad6f3012b8",
      "filename": "libiberty/copying-lib.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/copying-lib.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/copying-lib.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/copying-lib.texi?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -5,7 +5,7 @@\n @center Version 2.1, February 1999\n \n @display\n-Copyright @copyright{} 1991-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1991-2020 Free Software Foundation, Inc.\n 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA\n \n Everyone is permitted to copy and distribute verbatim copies"
    },
    {
      "sha": "3639bfbfd430b487255b03ceaf360ac62ec01273",
      "filename": "libiberty/cp-demangle.c",
      "status": "modified",
      "additions": 26,
      "deletions": 8,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler for g++ V3 ABI.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor <ian@wasabisystems.com>.\n \n    This file is part of the libiberty library, which is part of GCC.\n@@ -517,7 +517,7 @@ d_growable_string_callback_adapter (const char *, size_t, void *);\n \n static void\n d_print_init (struct d_print_info *, demangle_callbackref, void *,\n-\t      const struct demangle_component *);\n+\t      struct demangle_component *);\n \n static inline void d_print_error (struct d_print_info *);\n \n@@ -864,6 +864,7 @@ cplus_demangle_fill_name (struct demangle_component *p, const char *s, int len)\n   if (p == NULL || s == NULL || len <= 0)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_NAME;\n   p->u.s_name.s = s;\n   p->u.s_name.len = len;\n@@ -880,6 +881,7 @@ cplus_demangle_fill_extended_operator (struct demangle_component *p, int args,\n   if (p == NULL || args < 0 || name == NULL)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_EXTENDED_OPERATOR;\n   p->u.s_extended_operator.args = args;\n   p->u.s_extended_operator.name = name;\n@@ -900,6 +902,7 @@ cplus_demangle_fill_ctor (struct demangle_component *p,\n       || (int) kind > gnu_v3_object_ctor_group)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_CTOR;\n   p->u.s_ctor.kind = kind;\n   p->u.s_ctor.name = name;\n@@ -920,6 +923,7 @@ cplus_demangle_fill_dtor (struct demangle_component *p,\n       || (int) kind > gnu_v3_object_dtor_group)\n     return 0;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   p->type = DEMANGLE_COMPONENT_DTOR;\n   p->u.s_dtor.kind = kind;\n   p->u.s_dtor.name = name;\n@@ -937,6 +941,7 @@ d_make_empty (struct d_info *di)\n     return NULL;\n   p = &di->comps[di->next_comp];\n   p->d_printing = 0;\n+  p->d_counting = 0;\n   ++di->next_comp;\n   return p;\n }\n@@ -1717,7 +1722,7 @@ d_number (struct d_info *di)\n \t}\n       if (ret > ((INT_MAX - (peek - '0')) / 10))\n         return -1;\n-      ret = ret * 10 + peek - '0';\n+      ret = ret * 10 + (peek - '0');\n       d_advance (di, 1);\n       peek = d_peek_char (di);\n     }\n@@ -3577,6 +3582,17 @@ d_expr_primary (struct d_info *di)\n \t  && type->u.s_builtin.type->print != D_PRINT_DEFAULT)\n \tdi->expansion -= type->u.s_builtin.type->len;\n \n+      if (type->type == DEMANGLE_COMPONENT_BUILTIN_TYPE\n+\t  && strcmp (type->u.s_builtin.type->name,\n+\t\t     cplus_demangle_builtin_types[33].name) == 0)\n+\t{\n+\t  if (d_peek_char (di) == 'E')\n+\t    {\n+\t      d_advance (di, 1);\n+\t      return type;\n+\t    }\n+\t}\n+\n       /* Rather than try to interpret the literal value, we just\n \t collect it as a string.  Note that it's possible to have a\n \t floating point literal here.  The ABI specifies that the\n@@ -4068,11 +4084,13 @@ d_growable_string_callback_adapter (const char *s, size_t l, void *opaque)\n \n static void\n d_count_templates_scopes (struct d_print_info *dpi,\n-\t\t\t  const struct demangle_component *dc)\n+\t\t\t  struct demangle_component *dc)\n {\n-  if (dc == NULL)\n+  if (dc == NULL || dc->d_counting > 1 || dpi->recursion > MAX_RECURSION_COUNT)\n     return;\n \n+  ++ dc->d_counting;\n+\n   switch (dc->type)\n     {\n     case DEMANGLE_COMPONENT_NAME:\n@@ -4202,7 +4220,7 @@ d_count_templates_scopes (struct d_print_info *dpi,\n \n static void\n d_print_init (struct d_print_info *dpi, demangle_callbackref callback,\n-\t      void *opaque, const struct demangle_component *dc)\n+\t      void *opaque, struct demangle_component *dc)\n {\n   dpi->len = 0;\n   dpi->last_char = '\\0';\n@@ -5977,10 +5995,10 @@ d_print_mod (struct d_print_info *dpi, int options,\n       d_append_string (dpi, \"&&\");\n       return;\n     case DEMANGLE_COMPONENT_COMPLEX:\n-      d_append_string (dpi, \"complex \");\n+      d_append_string (dpi, \" _Complex\");\n       return;\n     case DEMANGLE_COMPONENT_IMAGINARY:\n-      d_append_string (dpi, \"imaginary \");\n+      d_append_string (dpi, \" _Imaginary\");\n       return;\n     case DEMANGLE_COMPONENT_PTRMEM_TYPE:\n       if (d_last_char (dpi) != '(')"
    },
    {
      "sha": "943a3ef478e5f7fd4c2e229b8622f518abc92925",
      "filename": "libiberty/cp-demangle.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demangle.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demangle.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demangle.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Internal demangler interface for g++ V3 ABI.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor <ian@wasabisystems.com>.\n \n    This file is part of the libiberty library, which is part of GCC."
    },
    {
      "sha": "6e41bad2672e15d551b7030aa769327bae2985d4",
      "filename": "libiberty/cp-demint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cp-demint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cp-demint.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler component interface functions.\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor <ian@wasabisystems.com>.\n \n    This file is part of the libiberty library, which is part of GCC.\n@@ -125,6 +125,7 @@ cplus_demangle_fill_component (struct demangle_component *p,\n   p->u.s_binary.left = left;\n   p->u.s_binary.right = right;\n   p->d_printing = 0;\n+  p->d_counting = 0;\n \n   return 1;\n }\n@@ -149,6 +150,7 @@ cplus_demangle_fill_builtin_type (struct demangle_component *p,\n \t  p->type = DEMANGLE_COMPONENT_BUILTIN_TYPE;\n \t  p->u.s_builtin.type = &cplus_demangle_builtin_types[i];\n \t  p->d_printing = 0;\n+\t  p->d_counting = 0;\n \t  return 1;\n \t}\n     }\n@@ -176,6 +178,7 @@ cplus_demangle_fill_operator (struct demangle_component *p,\n \t  p->type = DEMANGLE_COMPONENT_OPERATOR;\n \t  p->u.s_operator.op = &cplus_demangle_operators[i];\n \t  p->d_printing = 0;\n+\t  p->d_counting = 0;\n \t  return 1;\n \t}\n     }"
    },
    {
      "sha": "fb0673d181546a10e954b2691387f31fea3a0705",
      "filename": "libiberty/cplus-dem.c",
      "status": "modified",
      "additions": 12,
      "deletions": 41,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cplus-dem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/cplus-dem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/cplus-dem.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler for GNU C++\n-   Copyright (C) 1989-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1989-2020 Free Software Foundation, Inc.\n    Written by James Clark (jjc@jclark.uucp)\n    Rewritten by Fred Fish (fnf@cygnus.com) for ARM and Lucid demangling\n    Modified by Satish Pai (pai@apollo.hp.com) for HP demangling\n@@ -52,7 +52,6 @@ void * realloc ();\n #define CURRENT_DEMANGLING_STYLE options\n \n #include \"libiberty.h\"\n-#include \"rust-demangle.h\"\n \n enum demangling_styles current_demangling_style = auto_demangling;\n \n@@ -160,27 +159,20 @@ cplus_demangle (const char *mangled, int options)\n   if ((options & DMGL_STYLE_MASK) == 0)\n     options |= (int) current_demangling_style & DMGL_STYLE_MASK;\n \n+  /* The Rust demangling is implemented elsewhere.\n+     Legacy Rust symbols overlap with GNU_V3, so try Rust first.  */\n+  if (RUST_DEMANGLING || AUTO_DEMANGLING)\n+    {\n+      ret = rust_demangle (mangled, options);\n+      if (ret || RUST_DEMANGLING)\n+        return ret;\n+    }\n+\n   /* The V3 ABI demangling is implemented elsewhere.  */\n-  if (GNU_V3_DEMANGLING || RUST_DEMANGLING || AUTO_DEMANGLING)\n+  if (GNU_V3_DEMANGLING || AUTO_DEMANGLING)\n     {\n       ret = cplus_demangle_v3 (mangled, options);\n-      if (GNU_V3_DEMANGLING)\n-\treturn ret;\n-\n-      if (ret)\n-\t{\n-\t  /* Rust symbols are GNU_V3 mangled plus some extra subtitutions.\n-\t     The subtitutions are always smaller, so do in place changes.  */\n-\t  if (rust_is_mangled (ret))\n-\t    rust_demangle_sym (ret);\n-\t  else if (RUST_DEMANGLING)\n-\t    {\n-\t      free (ret);\n-\t      ret = NULL;\n-\t    }\n-\t}\n-\n-      if (ret || RUST_DEMANGLING)\n+      if (ret || GNU_V3_DEMANGLING)\n \treturn ret;\n     }\n \n@@ -204,27 +196,6 @@ cplus_demangle (const char *mangled, int options)\n   return (ret);\n }\n \n-char *\n-rust_demangle (const char *mangled, int options)\n-{\n-  /* Rust symbols are GNU_V3 mangled plus some extra subtitutions.  */\n-  char *ret = cplus_demangle_v3 (mangled, options);\n-\n-  /* The Rust subtitutions are always smaller, so do in place changes.  */\n-  if (ret != NULL)\n-    {\n-      if (rust_is_mangled (ret))\n-\trust_demangle_sym (ret);\n-      else\n-\t{\n-\t  free (ret);\n-\t  ret = NULL;\n-\t}\n-    }\n-\n-  return ret;\n-}\n-\n /* Demangle ada names.  The encoding is documented in gcc/ada/exp_dbug.ads.  */\n \n char *"
    },
    {
      "sha": "8f7832aa2a872bb6749f32c3b75e5ad31b475125",
      "filename": "libiberty/crc32.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/crc32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/crc32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/crc32.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* crc32.c\n-   Copyright (C) 2009-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2009-2020 Free Software Foundation, Inc.\n \n    This file is part of the libiberty library.\n "
    },
    {
      "sha": "a9702858a6ede4dac257ed63fb3ead29ac72c6b1",
      "filename": "libiberty/d-demangle.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/d-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/d-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/d-demangle.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler for the D programming language\n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2020 Free Software Foundation, Inc.\n    Written by Iain Buclaw (ibuclaw@gdcproject.org)\n \n This file is part of the libiberty library."
    },
    {
      "sha": "968d19175328cedd5facac796d258b886d1467f1",
      "filename": "libiberty/dwarfnames.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/dwarfnames.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/dwarfnames.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/dwarfnames.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Names of various DWARF tags.\n-   Copyright (C) 2012-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2020 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n    "
    },
    {
      "sha": "e10f691181a89833d5f60fc2bb02e489da1f4bf6",
      "filename": "libiberty/dyn-string.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/dyn-string.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/dyn-string.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/dyn-string.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* An abstract string datatype.\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n    Contributed by Mark Mitchell (mark@markmitchell.com).\n \n This file is part of GNU CC."
    },
    {
      "sha": "31803e47f722f9ab407a5f893184052d840a0c2d",
      "filename": "libiberty/fdmatch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fdmatch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fdmatch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/fdmatch.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Compare two open file descriptors to see if they refer to the same file.\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "b89722810069f3d3532f2c1a990b2f9cade171d2",
      "filename": "libiberty/fibheap.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fibheap.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fibheap.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/fibheap.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* A Fibonacci heap datatype.\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n    Contributed by Daniel Berlin (dan@cgsoftware.com).\n    \n This file is part of GNU CC."
    },
    {
      "sha": "ba2e87c240e07caa5f68eb4dd9014c1e3b3865a0",
      "filename": "libiberty/filedescriptor.c",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/filedescriptor.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/filedescriptor.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/filedescriptor.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -0,0 +1,47 @@\n+/* File descriptor related functions.\n+\n+   Copyright (C) 2019-2020 Free Software Foundation, Inc.\n+\n+   This file is part of the libiberty library.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor,\n+   Boston, MA 02110-1301, USA.  */\n+\n+#include \"config.h\"\n+#include \"ansidecl.h\"\n+#include \"libiberty.h\"\n+\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n+\n+#if defined (_WIN32)\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h> /* for GetFullPathName */\n+#endif\n+/* Return true when FD file descriptor exists.  */\n+\n+int\n+is_valid_fd (int fd)\n+{\n+#if defined(_WIN32)\n+  HANDLE h = (HANDLE) _get_osfhandle (fd);\n+  return h != (HANDLE) -1;\n+#elif defined(F_GETFD)\n+  return fcntl (fd, F_GETFD) >= 0;\n+#else\n+  return dup2 (fd, fd) < 0;\n+#endif\n+}"
    },
    {
      "sha": "68fb06f9458f27b29cf46732a87cdb2eb7099edd",
      "filename": "libiberty/filename_cmp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/filename_cmp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/filename_cmp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/filename_cmp.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* File name comparison routine.\n \n-   Copyright (C) 2007-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2020 Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by"
    },
    {
      "sha": "2fd5e688ec4177ca91cdf2cd4d92b3ac34ffe409",
      "filename": "libiberty/floatformat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/floatformat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/floatformat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/floatformat.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* IEEE floating point support routines, for GDB, the GNU Debugger.\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n This file is part of GDB.\n "
    },
    {
      "sha": "7be51aed03b150260ec283c1a08be8b51a463569",
      "filename": "libiberty/fnmatch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fnmatch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fnmatch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/fnmatch.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n NOTE: This source is derived from an old version taken from the GNU C\n Library (glibc)."
    },
    {
      "sha": "b8c426b8eae5bba490d780b252ba0e1989230587",
      "filename": "libiberty/fopen_unlocked.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fopen_unlocked.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/fopen_unlocked.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/fopen_unlocked.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement fopen_unlocked and related functions.\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "01f1e0bf325871409db9fe7e7ce5272a54d499e5",
      "filename": "libiberty/gather-docs",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/gather-docs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/gather-docs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/gather-docs?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/perl\n # -*- perl -*-\n \n-#   Copyright (C) 2001-2019 Free Software Foundation, Inc.\n+#   Copyright (C) 2001-2020 Free Software Foundation, Inc.\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "7119b621c12a695852c1c7586b153cc961d665ca",
      "filename": "libiberty/getopt.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getopt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getopt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/getopt.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -3,7 +3,7 @@\n    \"Keep this file name-space clean\" means, talk to drepper@gnu.org\n    before changing it!\n \n-   Copyright (C) 1987-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2020 Free Software Foundation, Inc.\n \n    NOTE: This source is derived from an old version taken from the GNU C\n    Library (glibc)."
    },
    {
      "sha": "87242472e86eae1246e3fe67fca4060049eaa67a",
      "filename": "libiberty/getopt1.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getopt1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getopt1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/getopt1.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* getopt_long and getopt_long_only entry points for GNU getopt.\n-   Copyright (C) 1987-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2020 Free Software Foundation, Inc.\n \n    NOTE: This source is derived from an old version taken from the GNU C\n    Library (glibc)."
    },
    {
      "sha": "f9f7841a743909405dcc00aaa906f963f4e98cba",
      "filename": "libiberty/getruntime.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getruntime.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/getruntime.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/getruntime.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Return time used so far, in microseconds.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "26c98ce2d6865939d0f9c723cac23bd8efeb8b40",
      "filename": "libiberty/hashtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/hashtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/hashtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/hashtab.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* An expandable hash tables datatype.  \n-   Copyright (C) 1999-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2020 Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov (vmakarov@cygnus.com).\n \n This file is part of the libiberty library."
    },
    {
      "sha": "f2b57e3b817a9b042175c746f734e9588be79e24",
      "filename": "libiberty/hex.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/hex.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/hex.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/hex.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Hex character manipulation support.\n-   Copyright (C) 1995-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1995-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "6715b20858edf4150907d882fa6983cc74c33286",
      "filename": "libiberty/lbasename.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/lbasename.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/lbasename.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/lbasename.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Libiberty basename.  Like basename, but is not overridden by the\n    system C library.\n-   Copyright (C) 2001-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2001-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "01751be39d9dcfec7896847a9c84629b1bb7d288",
      "filename": "libiberty/libiberty.texi",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/libiberty.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/libiberty.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/libiberty.texi?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -24,7 +24,7 @@\n @ifinfo\n This manual describes the GNU @libib library of utility subroutines.\n \n-Copyright @copyright{} 2001-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2001-2020 Free Software Foundation, Inc.\n \n       Permission is granted to copy, distribute and/or modify this document\n       under the terms of the GNU Free Documentation License, Version 1.3\n@@ -50,7 +50,7 @@ notice identical to this one except for the removal of this paragraph\n \n \n @vskip 0pt plus 1filll\n-Copyright @copyright{} 2001-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2001-2020 Free Software Foundation, Inc.\n \n       Permission is granted to copy, distribute and/or modify this document\n       under the terms of the GNU Free Documentation License, Version 1.3"
    },
    {
      "sha": "d6694c40349916b706d5ba05123d3a9059be3389",
      "filename": "libiberty/lrealpath.c",
      "status": "modified",
      "additions": 1,
      "deletions": 17,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/lrealpath.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/lrealpath.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/lrealpath.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n /* Libiberty realpath.  Like realpath, but more consistent behavior.\n    Based on gdb_realpath from GDB.\n \n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n \n    This file is part of the libiberty library.\n \n@@ -49,9 +49,6 @@ components will be simplified.  The returned value will be allocated using\n #ifdef HAVE_STRING_H\n #include <string.h>\n #endif\n-#ifdef HAVE_FCNTL_H\n-#include <fcntl.h>\n-#endif\n \n /* On GNU libc systems the declaration is only visible with _GNU_SOURCE.  */\n #if defined(HAVE_CANONICALIZE_FILE_NAME) \\\n@@ -158,16 +155,3 @@ lrealpath (const char *filename)\n   /* This system is a lost cause, just duplicate the filename.  */\n   return strdup (filename);\n }\n-\n-/* Return true when FD file descriptor exists.  */\n-\n-int\n-is_valid_fd (int fd)\n-{\n-#if defined(_WIN32)\n-  HANDLE h = (HANDLE) _get_osfhandle (fd);\n-  return h != (HANDLE) -1;\n-#else\n-  return fcntl (fd, F_GETFD) >= 0;\n-#endif\n-}"
    },
    {
      "sha": "c27c3a4fc86756ba28dac210ee9ef95dbb86a32c",
      "filename": "libiberty/maint-tool",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/maint-tool",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/maint-tool",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/maint-tool?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/perl\n # -*- perl -*-\n \n-#   Copyright (C) 2001-2019 Free Software Foundation, Inc.\n+#   Copyright (C) 2001-2020 Free Software Foundation, Inc.\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "e3f9f920df4a2b4a8be00e88727d74a42ed46eea",
      "filename": "libiberty/make-relative-prefix.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/make-relative-prefix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/make-relative-prefix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/make-relative-prefix.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Relative (relocatable) prefix support.\n-   Copyright (C) 1987-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1987-2020 Free Software Foundation, Inc.\n \n This file is part of libiberty.\n \n@@ -122,6 +122,9 @@ split_directories (const char *name, int *ptr_num_dirs)\n   const char *p, *q;\n   int ch;\n \n+  if (!*name)\n+    return NULL;\n+\n   /* Count the number of directories.  Special case MSDOS disk names as part\n      of the initial directory.  */\n   p = name;"
    },
    {
      "sha": "cb08c27af6f4534be0116224946d036ecd5a8418",
      "filename": "libiberty/make-temp-file.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/make-temp-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/make-temp-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/make-temp-file.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Utility to pick a temporary filename prefix.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "755b8ff9f8d89823d3e606ccef621983a1c28f8a",
      "filename": "libiberty/md5.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/md5.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/md5.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/md5.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* md5.c - Functions to compute MD5 message digest of files or memory blocks\n    according to the definition of MD5 in RFC 1321 from April 1992.\n-   Copyright (C) 1995-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1995-2020 Free Software Foundation, Inc.\n \n    NOTE: This source is derived from an old version taken from the GNU C\n    Library (glibc)."
    },
    {
      "sha": "1e26c8bc2a51df27eed786e671387f7e705507d1",
      "filename": "libiberty/memmem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/memmem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/memmem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/memmem.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n \n    This program is free software; you can redistribute it and/or modify"
    },
    {
      "sha": "a65a55703f9167bc1435c7167b9d94e0b6342ac5",
      "filename": "libiberty/mempcpy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/mempcpy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/mempcpy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/mempcpy.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the mempcpy function.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "18d879ac87670a7623956d8368f16998d81248c4",
      "filename": "libiberty/mkstemps.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/mkstemps.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/mkstemps.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/mkstemps.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n    This file is derived from mkstemp.c from the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or"
    },
    {
      "sha": "131598f37f4e2755ee6ad25768368c445eab5557",
      "filename": "libiberty/objalloc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/objalloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/objalloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/objalloc.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* objalloc.c -- routines to allocate memory for objects\n-   Copyright (C) 1997-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Cygnus Solutions.\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "0a4e57ee4c4b172601c0458d59e4c15d7f1b0b12",
      "filename": "libiberty/obstack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/obstack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/obstack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/obstack.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* obstack.c - subroutines used implicitly by object stack macros\n-   Copyright (C) 1988-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1988-2020 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or"
    },
    {
      "sha": "2e17515f2d61a483fedf475dc487658024458a11",
      "filename": "libiberty/partition.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/partition.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/partition.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/partition.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* List implementation of a partition of consecutive integers.\n-   Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2020 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n    This file is part of GNU CC."
    },
    {
      "sha": "30cd9040d967d85d51c0f91142d4af782de197ad",
      "filename": "libiberty/pex-common.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-common.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-common.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-common.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Common code for executing a program in a sub-process.\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor <ian@airs.com>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "54dd1a12493f4fa243cc35b13bc01922e71063ef",
      "filename": "libiberty/pex-common.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-common.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-common.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-common.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Shared logic.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "35118089b46fc7fdf5b1bb67477334e79623db25",
      "filename": "libiberty/pex-djgpp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-djgpp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-djgpp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-djgpp.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  DJGPP specialization.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "67a4733d49acfb9ff36ea47408dbbe52cc43f50b",
      "filename": "libiberty/pex-msdos.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-msdos.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-msdos.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-msdos.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Generic MSDOS specialization.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "2dcf6c07ffffa91558b36a5e0d31561f52928a55",
      "filename": "libiberty/pex-one.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-one.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-one.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-one.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Execute a program and wait for a result.\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "684a49ace606ea5a7d824051b9c482f691292d82",
      "filename": "libiberty/pex-unix.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-unix.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-unix.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-unix.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Generic Unix version\n    (also used for UWIN and VMS).\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "331067b5078347912bc3828186629a52244aa1b9",
      "filename": "libiberty/pex-win32.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-win32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pex-win32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pex-win32.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Generic Win32 specialization.\n-   Copyright (C) 1996-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1996-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "2dfcdda68d4f7463d0fa07de10efe1dc3163d93c",
      "filename": "libiberty/pexecute.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pexecute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/pexecute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/pexecute.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "f9427168a66c89da815e65d850ce71314347d9ee",
      "filename": "libiberty/physmem.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/physmem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/physmem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/physmem.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Calculate the size of physical memory.\n-   Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2020 Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by"
    },
    {
      "sha": "f3ddf83933fae282a781c8fac1d42e43e6d53a3f",
      "filename": "libiberty/putenv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/putenv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/putenv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/putenv.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+/* Copyright (C) 1991-2020 Free Software Foundation, Inc.\n    This file based on putenv.c in the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or"
    },
    {
      "sha": "7d2031994f79ee2d511b51f641a2a673d7231f26",
      "filename": "libiberty/regex.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/regex.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/regex.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/regex.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -3,7 +3,7 @@\n    (Implements POSIX draft P1003.2/D11.2, except for some of the\n    internationalization features.)\n \n-   Copyright (C) 1993-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1993-2020 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or"
    },
    {
      "sha": "b87365c85fe920b6ccb6346b2889a782d5f86a7b",
      "filename": "libiberty/rust-demangle.c",
      "status": "modified",
      "additions": 435,
      "deletions": 252,
      "changes": 687,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/rust-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/rust-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/rust-demangle.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler for the Rust programming language\n-   Copyright (C) 2016-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2016-2020 Free Software Foundation, Inc.\n    Written by David Tolnay (dtolnay@gmail.com).\n \n This file is part of the libiberty library.\n@@ -33,9 +33,11 @@ If not, see <http://www.gnu.org/licenses/>.  */\n \n #include \"safe-ctype.h\"\n \n+#include <inttypes.h>\n #include <sys/types.h>\n #include <string.h>\n #include <stdio.h>\n+#include <stdlib.h>\n \n #ifdef HAVE_STRING_H\n #include <string.h>\n@@ -47,303 +49,484 @@ extern void *memset(void *s, int c, size_t n);\n \n #include <demangle.h>\n #include \"libiberty.h\"\n-#include \"rust-demangle.h\"\n \n+struct rust_demangler\n+{\n+  const char *sym;\n+  size_t sym_len;\n \n-/* Mangled Rust symbols look like this:\n-     _$LT$std..sys..fd..FileDesc$u20$as$u20$core..ops..Drop$GT$::drop::hc68340e1baa4987a\n-\n-   The original symbol is:\n-     <std::sys::fd::FileDesc as core::ops::Drop>::drop\n-\n-   The last component of the path is a 64-bit hash in lowercase hex,\n-   prefixed with \"h\". Rust does not have a global namespace between\n-   crates, an illusion which Rust maintains by using the hash to\n-   distinguish things that would otherwise have the same symbol.\n-\n-   Any path component not starting with a XID_Start character is\n-   prefixed with \"_\".\n-\n-   The following escape sequences are used:\n+  void *callback_opaque;\n+  demangle_callbackref callback;\n \n-   \",\"  =>  $C$\n-   \"@\"  =>  $SP$\n-   \"*\"  =>  $BP$\n-   \"&\"  =>  $RF$\n-   \"<\"  =>  $LT$\n-   \">\"  =>  $GT$\n-   \"(\"  =>  $LP$\n-   \")\"  =>  $RP$\n-   \" \"  =>  $u20$\n-   \"\\\"\" =>  $u22$\n-   \"'\"  =>  $u27$\n-   \"+\"  =>  $u2b$\n-   \";\"  =>  $u3b$\n-   \"[\"  =>  $u5b$\n-   \"]\"  =>  $u5d$\n-   \"{\"  =>  $u7b$\n-   \"}\"  =>  $u7d$\n-   \"~\"  =>  $u7e$\n+  /* Position of the next character to read from the symbol. */\n+  size_t next;\n \n-   A double \"..\" means \"::\" and a single \".\" means \"-\".\n+  /* Non-zero if any error occurred. */\n+  int errored;\n \n-   The only characters allowed in the mangled symbol are a-zA-Z0-9 and _.:$  */\n+  /* Non-zero if printing should be verbose (e.g. include hashes). */\n+  int verbose;\n \n-static const char *hash_prefix = \"::h\";\n-static const size_t hash_prefix_len = 3;\n-static const size_t hash_len = 16;\n+  /* Rust mangling version, with legacy mangling being -1. */\n+  int version;\n+};\n \n-static int is_prefixed_hash (const char *start);\n-static int looks_like_rust (const char *sym, size_t len);\n-static int unescape (const char **in, char **out, const char *seq, char value);\n+/* Parsing functions. */\n \n-/* INPUT: sym: symbol that has been through C++ (gnu v3) demangling\n+static char\n+peek (const struct rust_demangler *rdm)\n+{\n+  if (rdm->next < rdm->sym_len)\n+    return rdm->sym[rdm->next];\n+  return 0;\n+}\n \n-   This function looks for the following indicators:\n+static char\n+next (struct rust_demangler *rdm)\n+{\n+  char c = peek (rdm);\n+  if (!c)\n+    rdm->errored = 1;\n+  else\n+    rdm->next++;\n+  return c;\n+}\n \n-   1. The hash must consist of \"h\" followed by 16 lowercase hex digits.\n+struct rust_mangled_ident\n+{\n+  /* ASCII part of the identifier. */\n+  const char *ascii;\n+  size_t ascii_len;\n+};\n \n-   2. As a sanity check, the hash must use between 5 and 15 of the 16\n-      possible hex digits. This is true of 99.9998% of hashes so once\n-      in your life you may see a false negative. The point is to\n-      notice path components that could be Rust hashes but are\n-      probably not, like \"haaaaaaaaaaaaaaaa\". In this case a false\n-      positive (non-Rust symbol has an important path component\n-      removed because it looks like a Rust hash) is worse than a false\n-      negative (the rare Rust symbol is not demangled) so this sets\n-      the balance in favor of false negatives.\n+static struct rust_mangled_ident\n+parse_ident (struct rust_demangler *rdm)\n+{\n+  char c;\n+  size_t start, len;\n+  struct rust_mangled_ident ident;\n+\n+  ident.ascii = NULL;\n+  ident.ascii_len = 0;\n+\n+  c = next (rdm);\n+  if (!ISDIGIT (c))\n+    {\n+      rdm->errored = 1;\n+      return ident;\n+    }\n+  len = c - '0';\n+\n+  if (c != '0')\n+    while (ISDIGIT (peek (rdm)))\n+      len = len * 10 + (next (rdm) - '0');\n+\n+  start = rdm->next;\n+  rdm->next += len;\n+  /* Check for overflows. */\n+  if ((start > rdm->next) || (rdm->next > rdm->sym_len))\n+    {\n+      rdm->errored = 1;\n+      return ident;\n+    }\n+\n+  ident.ascii = rdm->sym + start;\n+  ident.ascii_len = len;\n+\n+  if (ident.ascii_len == 0)\n+    ident.ascii = NULL;\n+\n+  return ident;\n+}\n \n-   3. There must be no characters other than a-zA-Z0-9 and _.:$\n+/* Printing functions. */\n \n-   4. There must be no unrecognized $-sign sequences.\n+static void\n+print_str (struct rust_demangler *rdm, const char *data, size_t len)\n+{\n+  if (!rdm->errored)\n+    rdm->callback (data, len, rdm->callback_opaque);\n+}\n \n-   5. There must be no sequence of three or more dots in a row (\"...\").  */\n+#define PRINT(s) print_str (rdm, s, strlen (s))\n \n-int\n-rust_is_mangled (const char *sym)\n+/* Return a 0x0-0xf value if the char is 0-9a-f, and -1 otherwise. */\n+static int\n+decode_lower_hex_nibble (char nibble)\n {\n-  size_t len, len_without_hash;\n+  if ('0' <= nibble && nibble <= '9')\n+    return nibble - '0';\n+  if ('a' <= nibble && nibble <= 'f')\n+    return 0xa + (nibble - 'a');\n+  return -1;\n+}\n \n-  if (!sym)\n-    return 0;\n+/* Return the unescaped character for a \"$...$\" escape, or 0 if invalid. */\n+static char\n+decode_legacy_escape (const char *e, size_t len, size_t *out_len)\n+{\n+  char c = 0;\n+  size_t escape_len = 0;\n+  int lo_nibble = -1, hi_nibble = -1;\n \n-  len = strlen (sym);\n-  if (len <= hash_prefix_len + hash_len)\n-    /* Not long enough to contain \"::h\" + hash + something else */\n+  if (len < 3 || e[0] != '$')\n     return 0;\n \n-  len_without_hash = len - (hash_prefix_len + hash_len);\n-  if (!is_prefixed_hash (sym + len_without_hash))\n+  e++;\n+  len--;\n+\n+  if (e[0] == 'C')\n+    {\n+      escape_len = 1;\n+\n+      c = ',';\n+    }\n+  else if (len > 2)\n+    {\n+      escape_len = 2;\n+\n+      if (e[0] == 'S' && e[1] == 'P')\n+        c = '@';\n+      else if (e[0] == 'B' && e[1] == 'P')\n+        c = '*';\n+      else if (e[0] == 'R' && e[1] == 'F')\n+        c = '&';\n+      else if (e[0] == 'L' && e[1] == 'T')\n+        c = '<';\n+      else if (e[0] == 'G' && e[1] == 'T')\n+        c = '>';\n+      else if (e[0] == 'L' && e[1] == 'P')\n+        c = '(';\n+      else if (e[0] == 'R' && e[1] == 'P')\n+        c = ')';\n+      else if (e[0] == 'u' && len > 3)\n+        {\n+          escape_len = 3;\n+\n+          hi_nibble = decode_lower_hex_nibble (e[1]);\n+          if (hi_nibble < 0)\n+            return 0;\n+          lo_nibble = decode_lower_hex_nibble (e[2]);\n+          if (lo_nibble < 0)\n+            return 0;\n+\n+          /* Only allow non-control ASCII characters. */\n+          if (hi_nibble > 7)\n+            return 0;\n+          c = (hi_nibble << 4) | lo_nibble;\n+          if (c < 0x20)\n+            return 0;\n+        }\n+    }\n+\n+  if (!c || len <= escape_len || e[escape_len] != '$')\n     return 0;\n \n-  return looks_like_rust (sym, len_without_hash);\n+  *out_len = 2 + escape_len;\n+  return c;\n }\n \n-/* A hash is the prefix \"::h\" followed by 16 lowercase hex digits. The\n-   hex digits must comprise between 5 and 15 (inclusive) distinct\n-   digits.  */\n+static void\n+print_ident (struct rust_demangler *rdm, struct rust_mangled_ident ident)\n+{\n+  char unescaped;\n+  size_t len;\n \n+  if (rdm->errored)\n+    return;\n+\n+  if (rdm->version == -1)\n+    {\n+      /* Ignore leading underscores preceding escape sequences.\n+         The mangler inserts an underscore to make sure the\n+         identifier begins with a XID_Start character. */\n+      if (ident.ascii_len >= 2 && ident.ascii[0] == '_'\n+          && ident.ascii[1] == '$')\n+        {\n+          ident.ascii++;\n+          ident.ascii_len--;\n+        }\n+\n+      while (ident.ascii_len > 0)\n+        {\n+          /* Handle legacy escape sequences (\"$...$\", \"..\" or \".\"). */\n+          if (ident.ascii[0] == '$')\n+            {\n+              unescaped\n+                  = decode_legacy_escape (ident.ascii, ident.ascii_len, &len);\n+              if (unescaped)\n+                print_str (rdm, &unescaped, 1);\n+              else\n+                {\n+                  /* Unexpected escape sequence, print the rest verbatim. */\n+                  print_str (rdm, ident.ascii, ident.ascii_len);\n+                  return;\n+                }\n+            }\n+          else if (ident.ascii[0] == '.')\n+            {\n+              if (ident.ascii_len >= 2 && ident.ascii[1] == '.')\n+                {\n+                  /* \"..\" becomes \"::\" */\n+                  PRINT (\"::\");\n+                  len = 2;\n+                }\n+              else\n+                {\n+                  /* \".\" becomes \"-\" */\n+                  PRINT (\"-\");\n+                  len = 1;\n+                }\n+            }\n+          else\n+            {\n+              /* Print everything before the next escape sequence, at once. */\n+              for (len = 0; len < ident.ascii_len; len++)\n+                if (ident.ascii[len] == '$' || ident.ascii[len] == '.')\n+                  break;\n+\n+              print_str (rdm, ident.ascii, len);\n+            }\n+\n+          ident.ascii += len;\n+          ident.ascii_len -= len;\n+        }\n+\n+      return;\n+    }\n+}\n+\n+/* A legacy hash is the prefix \"h\" followed by 16 lowercase hex digits.\n+   The hex digits must contain at least 5 distinct digits. */\n static int\n-is_prefixed_hash (const char *str)\n+is_legacy_prefixed_hash (struct rust_mangled_ident ident)\n {\n-  const char *end;\n-  char seen[16];\n-  size_t i;\n-  int count;\n+  uint16_t seen;\n+  int nibble;\n+  size_t i, count;\n \n-  if (strncmp (str, hash_prefix, hash_prefix_len))\n+  if (ident.ascii_len != 17 || ident.ascii[0] != 'h')\n     return 0;\n-  str += hash_prefix_len;\n-\n-  memset (seen, 0, sizeof(seen));\n-  for (end = str + hash_len; str < end; str++)\n-    if (*str >= '0' && *str <= '9')\n-      seen[*str - '0'] = 1;\n-    else if (*str >= 'a' && *str <= 'f')\n-      seen[*str - 'a' + 10] = 1;\n-    else\n-      return 0;\n \n-  /* Count how many distinct digits seen */\n-  count = 0;\n+  seen = 0;\n   for (i = 0; i < 16; i++)\n-    if (seen[i])\n-      count++;\n-\n-  return count >= 5 && count <= 15;\n+    {\n+      nibble = decode_lower_hex_nibble (ident.ascii[1 + i]);\n+      if (nibble < 0)\n+        return 0;\n+      seen |= (uint16_t)1 << nibble;\n+    }\n+\n+  /* Count how many distinct digits were seen. */\n+  count = 0;\n+  while (seen)\n+    {\n+      if (seen & 1)\n+        count++;\n+      seen >>= 1;\n+    }\n+\n+  return count >= 5;\n }\n \n-static int\n-looks_like_rust (const char *str, size_t len)\n+int\n+rust_demangle_callback (const char *mangled, int options,\n+                        demangle_callbackref callback, void *opaque)\n {\n-  const char *end = str + len;\n-\n-  while (str < end)\n-    switch (*str)\n-      {\n-      case '$':\n-\tif (!strncmp (str, \"$C$\", 3))\n-\t  str += 3;\n-\telse if (!strncmp (str, \"$SP$\", 4)\n-\t\t || !strncmp (str, \"$BP$\", 4)\n-\t\t || !strncmp (str, \"$RF$\", 4)\n-\t\t || !strncmp (str, \"$LT$\", 4)\n-\t\t || !strncmp (str, \"$GT$\", 4)\n-\t\t || !strncmp (str, \"$LP$\", 4)\n-\t\t || !strncmp (str, \"$RP$\", 4))\n-\t  str += 4;\n-\telse if (!strncmp (str, \"$u20$\", 5)\n-\t\t || !strncmp (str, \"$u22$\", 5)\n-\t\t || !strncmp (str, \"$u27$\", 5)\n-\t\t || !strncmp (str, \"$u2b$\", 5)\n-\t\t || !strncmp (str, \"$u3b$\", 5)\n-\t\t || !strncmp (str, \"$u5b$\", 5)\n-\t\t || !strncmp (str, \"$u5d$\", 5)\n-\t\t || !strncmp (str, \"$u7b$\", 5)\n-\t\t || !strncmp (str, \"$u7d$\", 5)\n-\t\t || !strncmp (str, \"$u7e$\", 5))\n-\t  str += 5;\n-\telse\n-\t  return 0;\n-\tbreak;\n-      case '.':\n-\t/* Do not allow three or more consecutive dots */\n-\tif (!strncmp (str, \"...\", 3))\n-\t  return 0;\n-\t/* Fall through */\n-      case 'a': case 'b': case 'c': case 'd': case 'e': case 'f':\n-      case 'g': case 'h': case 'i': case 'j': case 'k': case 'l':\n-      case 'm': case 'n': case 'o': case 'p': case 'q': case 'r':\n-      case 's': case 't': case 'u': case 'v': case 'w': case 'x':\n-      case 'y': case 'z':\n-      case 'A': case 'B': case 'C': case 'D': case 'E': case 'F':\n-      case 'G': case 'H': case 'I': case 'J': case 'K': case 'L':\n-      case 'M': case 'N': case 'O': case 'P': case 'Q': case 'R':\n-      case 'S': case 'T': case 'U': case 'V': case 'W': case 'X':\n-      case 'Y': case 'Z':\n-      case '0': case '1': case '2': case '3': case '4': case '5':\n-      case '6': case '7': case '8': case '9':\n-      case '_':\n-      case ':':\n-\tstr++;\n-\tbreak;\n-      default:\n-\treturn 0;\n-      }\n-\n-  return 1;\n-}\n+  const char *p;\n+  struct rust_demangler rdm;\n+  struct rust_mangled_ident ident;\n+\n+  rdm.sym = mangled;\n+  rdm.sym_len = 0;\n+\n+  rdm.callback_opaque = opaque;\n+  rdm.callback = callback;\n+\n+  rdm.next = 0;\n+  rdm.errored = 0;\n+  rdm.verbose = (options & DMGL_VERBOSE) != 0;\n+  rdm.version = 0;\n+\n+  /* Rust symbols always start with _ZN (legacy). */\n+  if (rdm.sym[0] == '_' && rdm.sym[1] == 'Z' && rdm.sym[2] == 'N')\n+    {\n+      rdm.sym += 3;\n+      rdm.version = -1;\n+    }\n+  else\n+    return 0;\n+\n+  /* Legacy Rust symbols use only [_0-9a-zA-Z.:$] characters. */\n+  for (p = rdm.sym; *p; p++)\n+    {\n+      rdm.sym_len++;\n \n-/*\n-  INPUT: sym: symbol for which rust_is_mangled(sym) returned 1.\n+      if (*p == '_' || ISALNUM (*p))\n+        continue;\n \n-  The input is demangled in-place because the mangled name is always\n-  longer than the demangled one.  */\n+      if (rdm.version == -1 && (*p == '$' || *p == '.' || *p == ':'))\n+        continue;\n \n-void\n-rust_demangle_sym (char *sym)\n+      return 0;\n+    }\n+\n+  /* Legacy Rust symbols need to be handled separately. */\n+  if (rdm.version == -1)\n+    {\n+      /* Legacy Rust symbols always end with E. */\n+      if (!(rdm.sym_len > 0 && rdm.sym[rdm.sym_len - 1] == 'E'))\n+        return 0;\n+      rdm.sym_len--;\n+\n+      /* Legacy Rust symbols also always end with a path segment\n+         that encodes a 16 hex digit hash, i.e. '17h[a-f0-9]{16}'.\n+         This early check, before any parse_ident calls, should\n+         quickly filter out most C++ symbols unrelated to Rust. */\n+      if (!(rdm.sym_len > 19\n+            && !memcmp (&rdm.sym[rdm.sym_len - 19], \"17h\", 3)))\n+        return 0;\n+\n+      do\n+        {\n+          ident = parse_ident (&rdm);\n+          if (rdm.errored || !ident.ascii)\n+            return 0;\n+        }\n+      while (rdm.next < rdm.sym_len);\n+\n+      /* The last path segment should be the hash. */\n+      if (!is_legacy_prefixed_hash (ident))\n+        return 0;\n+\n+      /* Reset the state for a second pass, to print the symbol. */\n+      rdm.next = 0;\n+      if (!rdm.verbose && rdm.sym_len > 19)\n+        {\n+          /* Hide the last segment, containing the hash, if not verbose. */\n+          rdm.sym_len -= 19;\n+        }\n+\n+      do\n+        {\n+          if (rdm.next > 0)\n+            print_str (&rdm, \"::\", 2);\n+\n+          ident = parse_ident (&rdm);\n+          print_ident (&rdm, ident);\n+        }\n+      while (rdm.next < rdm.sym_len);\n+    }\n+  else\n+    return 0;\n+\n+  return !rdm.errored;\n+}\n+\n+/* Growable string buffers. */\n+struct str_buf\n+{\n+  char *ptr;\n+  size_t len;\n+  size_t cap;\n+  int errored;\n+};\n+\n+static void\n+str_buf_reserve (struct str_buf *buf, size_t extra)\n {\n-  const char *in;\n-  char *out;\n-  const char *end;\n+  size_t available, min_new_cap, new_cap;\n+  char *new_ptr;\n \n-  if (!sym)\n+  /* Allocation failed before. */\n+  if (buf->errored)\n     return;\n \n-  in = sym;\n-  out = sym;\n-  end = sym + strlen (sym) - (hash_prefix_len + hash_len);\n-\n-  while (in < end)\n-    switch (*in)\n-      {\n-      case '$':\n-\tif (!(unescape (&in, &out, \"$C$\", ',')\n-\t      || unescape (&in, &out, \"$SP$\", '@')\n-\t      || unescape (&in, &out, \"$BP$\", '*')\n-\t      || unescape (&in, &out, \"$RF$\", '&')\n-\t      || unescape (&in, &out, \"$LT$\", '<')\n-\t      || unescape (&in, &out, \"$GT$\", '>')\n-\t      || unescape (&in, &out, \"$LP$\", '(')\n-\t      || unescape (&in, &out, \"$RP$\", ')')\n-\t      || unescape (&in, &out, \"$u20$\", ' ')\n-\t      || unescape (&in, &out, \"$u22$\", '\\\"')\n-\t      || unescape (&in, &out, \"$u27$\", '\\'')\n-\t      || unescape (&in, &out, \"$u2b$\", '+')\n-\t      || unescape (&in, &out, \"$u3b$\", ';')\n-\t      || unescape (&in, &out, \"$u5b$\", '[')\n-\t      || unescape (&in, &out, \"$u5d$\", ']')\n-\t      || unescape (&in, &out, \"$u7b$\", '{')\n-\t      || unescape (&in, &out, \"$u7d$\", '}')\n-\t      || unescape (&in, &out, \"$u7e$\", '~'))) {\n-\t  /* unexpected escape sequence, not looks_like_rust. */\n-\t  goto fail;\n-\t}\n-\tbreak;\n-      case '_':\n-\t/* If this is the start of a path component and the next\n-\t   character is an escape sequence, ignore the underscore. The\n-\t   mangler inserts an underscore to make sure the path\n-\t   component begins with a XID_Start character. */\n-\tif ((in == sym || in[-1] == ':') && in[1] == '$')\n-\t  in++;\n-\telse\n-\t  *out++ = *in++;\n-\tbreak;\n-      case '.':\n-\tif (in[1] == '.')\n-\t  {\n-\t    /* \"..\" becomes \"::\" */\n-\t    *out++ = ':';\n-\t    *out++ = ':';\n-\t    in += 2;\n-\t  }\n-\telse\n-\t  {\n-\t    /* \".\" becomes \"-\" */\n-\t    *out++ = '-';\n-\t    in++;\n-\t  }\n-\tbreak;\n-      case 'a': case 'b': case 'c': case 'd': case 'e': case 'f':\n-      case 'g': case 'h': case 'i': case 'j': case 'k': case 'l':\n-      case 'm': case 'n': case 'o': case 'p': case 'q': case 'r':\n-      case 's': case 't': case 'u': case 'v': case 'w': case 'x':\n-      case 'y': case 'z':\n-      case 'A': case 'B': case 'C': case 'D': case 'E': case 'F':\n-      case 'G': case 'H': case 'I': case 'J': case 'K': case 'L':\n-      case 'M': case 'N': case 'O': case 'P': case 'Q': case 'R':\n-      case 'S': case 'T': case 'U': case 'V': case 'W': case 'X':\n-      case 'Y': case 'Z':\n-      case '0': case '1': case '2': case '3': case '4': case '5':\n-      case '6': case '7': case '8': case '9':\n-      case ':':\n-\t*out++ = *in++;\n-\tbreak;\n-      default:\n-\t/* unexpected character in symbol, not looks_like_rust.  */\n-\tgoto fail;\n-      }\n-  goto done;\n-\n-fail:\n-  *out++ = '?'; /* This is pretty lame, but it's hard to do better. */\n-done:\n-  *out = '\\0';\n+  available = buf->cap - buf->len;\n+\n+  if (extra <= available)\n+    return;\n+\n+  min_new_cap = buf->cap + (extra - available);\n+\n+  /* Check for overflows. */\n+  if (min_new_cap < buf->cap)\n+    {\n+      buf->errored = 1;\n+      return;\n+    }\n+\n+  new_cap = buf->cap;\n+\n+  if (new_cap == 0)\n+    new_cap = 4;\n+\n+  /* Double capacity until sufficiently large. */\n+  while (new_cap < min_new_cap)\n+    {\n+      new_cap *= 2;\n+\n+      /* Check for overflows. */\n+      if (new_cap < buf->cap)\n+        {\n+          buf->errored = 1;\n+          return;\n+        }\n+    }\n+\n+  new_ptr = (char *)realloc (buf->ptr, new_cap);\n+  if (new_ptr == NULL)\n+    {\n+      free (buf->ptr);\n+      buf->ptr = NULL;\n+      buf->len = 0;\n+      buf->cap = 0;\n+      buf->errored = 1;\n+    }\n+  else\n+    {\n+      buf->ptr = new_ptr;\n+      buf->cap = new_cap;\n+    }\n }\n \n-static int\n-unescape (const char **in, char **out, const char *seq, char value)\n+static void\n+str_buf_append (struct str_buf *buf, const char *data, size_t len)\n {\n-  size_t len = strlen (seq);\n+  str_buf_reserve (buf, len);\n+  if (buf->errored)\n+    return;\n \n-  if (strncmp (*in, seq, len))\n-    return 0;\n+  memcpy (buf->ptr + buf->len, data, len);\n+  buf->len += len;\n+}\n+\n+static void\n+str_buf_demangle_callback (const char *data, size_t len, void *opaque)\n+{\n+  str_buf_append ((struct str_buf *)opaque, data, len);\n+}\n+\n+char *\n+rust_demangle (const char *mangled, int options)\n+{\n+  struct str_buf out;\n+  int success;\n+\n+  out.ptr = NULL;\n+  out.len = 0;\n+  out.cap = 0;\n+  out.errored = 0;\n \n-  **out = value;\n+  success = rust_demangle_callback (mangled, options,\n+                                    str_buf_demangle_callback, &out);\n \n-  *in += len;\n-  *out += 1;\n+  if (!success)\n+    {\n+      free (out.ptr);\n+      return NULL;\n+    }\n \n-  return 1;\n+  str_buf_append (&out, \"\\0\", 1);\n+  return out.ptr;\n }"
    },
    {
      "sha": "56364e6ecd23e49e157860bc312e8e5e44b55fad",
      "filename": "libiberty/safe-ctype.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/safe-ctype.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/safe-ctype.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/safe-ctype.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* <ctype.h> replacement macros.\n \n-   Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2020 Free Software Foundation, Inc.\n    Contributed by Zack Weinberg <zackw@stanford.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "82bf1b83600fae86c7f9eee99fffaf7bfc157ef3",
      "filename": "libiberty/setenv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/setenv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/setenv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/setenv.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1992-2019 Free Software Foundation, Inc.\n+/* Copyright (C) 1992-2020 Free Software Foundation, Inc.\n    This file based on setenv.c in the GNU C Library.\n \n    The GNU C Library is free software; you can redistribute it and/or"
    },
    {
      "sha": "3de50f67593382a87581c82a608d203cab6d2f32",
      "filename": "libiberty/setproctitle.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/setproctitle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/setproctitle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/setproctitle.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Set the title of a process.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "af08219b1b049cabdf20a0c8ab57994939dd9da0",
      "filename": "libiberty/sha1.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/sha1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/sha1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/sha1.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,7 +1,7 @@\n /* sha1.c - Functions to compute SHA1 message digest of files or\n    memory blocks according to the NIST specification FIPS-180-1.\n \n-   Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2020 Free Software Foundation, Inc.\n \n    This program is free software; you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by the"
    },
    {
      "sha": "104cd560f61cbe502622d7fea8c014ac050dbc4a",
      "filename": "libiberty/simple-object-coff.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-coff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-coff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-coff.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object-coff.c -- routines to manipulate COFF object files.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "2e3f1873468acb0aea66728935c2dfde7e9c5c64",
      "filename": "libiberty/simple-object-common.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-common.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-common.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-common.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object-common.h -- common structs for object file manipulation.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "c62d5bba551c099e9f33c3a0b33dd4612952411c",
      "filename": "libiberty/simple-object-elf.c",
      "status": "modified",
      "additions": 50,
      "deletions": 23,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-elf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object-elf.c -- routines to manipulate ELF object files.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n This program is free software; you can redistribute it and/or modify it\n@@ -1366,30 +1366,17 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t  return errmsg;\n \t}\n \n-      /* If we are processing .symtab purge __gnu_lto_slim symbol\n-\t from it and any symbols in discarded sections.  */\n+      /* If we are processing .symtab purge any symbols\n+\t in discarded sections.  */\n       if (sh_type == SHT_SYMTAB)\n \t{\n \t  unsigned entsize = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n \t\t\t\t\t      shdr, sh_entsize, Elf_Addr);\n \t  unsigned strtab = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n \t\t\t\t\t     shdr, sh_link, Elf_Word);\n-\t  unsigned char *strshdr = shdrs + (strtab - 1) * shdr_size;\n-\t  off_t stroff = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n-\t\t\t\t\t  strshdr, sh_offset, Elf_Addr);\n-\t  size_t strsz = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,\n-\t\t\t\t\t  strshdr, sh_size, Elf_Addr);\n-\t  char *strings = XNEWVEC (char, strsz);\n-\t  char *gnu_lto = strings;\n+\t  size_t prevailing_name_idx = 0;\n \t  unsigned char *ent;\n \t  unsigned *shndx_table = NULL;\n-\t  simple_object_internal_read (sobj->descriptor,\n-\t\t\t\t       sobj->offset + stroff,\n-\t\t\t\t       (unsigned char *)strings,\n-\t\t\t\t       strsz, &errmsg, err);\n-\t  /* Find first '\\0' in strings.  */\n-\t  gnu_lto = (char *) memchr (gnu_lto + 1, '\\0',\n-\t\t\t\t     strings + strsz - gnu_lto);\n \t  /* Read the section index table if present.  */\n \t  if (symtab_indices_shndx[i - 1] != 0)\n \t    {\n@@ -1404,6 +1391,45 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t\t\t\t   (unsigned char *)shndx_table,\n \t\t\t\t\t   sidxsz, &errmsg, err);\n \t    }\n+\n+\t  /* Find a WEAK HIDDEN symbol which name we will use for removed\n+\t     symbols.  We know there's a prevailing weak hidden symbol\n+\t     at the start of the .debug_info section.  */\n+\t  for (ent = buf; ent < buf + length; ent += entsize)\n+\t    {\n+\t      unsigned st_shndx = ELF_FETCH_FIELD (type_functions, ei_class,\n+\t\t\t\t\t\t   Sym, ent,\n+\t\t\t\t\t\t   st_shndx, Elf_Half);\n+\t      unsigned char *st_info;\n+\t      unsigned char *st_other;\n+\t      if (ei_class == ELFCLASS32)\n+\t\t{\n+\t\t  st_info = &((Elf32_External_Sym *)ent)->st_info;\n+\t\t  st_other = &((Elf32_External_Sym *)ent)->st_other;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  st_info = &((Elf64_External_Sym *)ent)->st_info;\n+\t\t  st_other = &((Elf64_External_Sym *)ent)->st_other;\n+\t\t}\n+\t      if (st_shndx == SHN_XINDEX)\n+\t\tst_shndx = type_functions->fetch_Elf_Word\n+\t\t    ((unsigned char *)(shndx_table + (ent - buf) / entsize));\n+\n+\t      if (st_shndx != SHN_COMMON\n+\t\t  && !(st_shndx != SHN_UNDEF\n+\t\t       && st_shndx < shnum\n+\t\t       && pfnret[st_shndx - 1] == -1)\n+\t\t  && ELF_ST_BIND (*st_info) == STB_WEAK\n+\t\t  && *st_other == STV_HIDDEN)\n+\t\t{\n+\t\t  prevailing_name_idx = ELF_FETCH_FIELD (type_functions,\n+\t\t\t\t\t\t\t ei_class, Sym, ent,\n+\t\t\t\t\t\t\t st_name, Elf_Word);\n+\t\t  break;\n+\t\t}\n+\t    }\n+\n \t  for (ent = buf; ent < buf + length; ent += entsize)\n \t    {\n \t      unsigned st_shndx = ELF_FETCH_FIELD (type_functions, ei_class,\n@@ -1426,9 +1452,10 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t      if (st_shndx == SHN_XINDEX)\n \t\tst_shndx = type_functions->fetch_Elf_Word\n \t\t    ((unsigned char *)(shndx_table + (ent - buf) / entsize));\n-\t      /* Eliminate all COMMONs - this includes __gnu_lto_v1\n-\t\t and __gnu_lto_slim which otherwise cause endless\n-\t\t LTO plugin invocation.  */\n+\t      /* Eliminate all COMMONs - this includes __gnu_lto_slim\n+\t\t which otherwise cause endless LTO plugin invocation.\n+\t\t FIXME: remove the condition once we remove emission\n+\t\t of __gnu_lto_slim symbol.  */\n \t      if (st_shndx == SHN_COMMON)\n \t\tdiscard = 1;\n \t      /* We also need to remove symbols refering to sections\n@@ -1460,12 +1487,13 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t  else\n \t\t    {\n \t\t      /* Make discarded global symbols hidden weak\n-\t\t\t undefined and sharing the gnu_lto_ name.  */\n+\t\t\t undefined and sharing a name of a prevailing\n+\t\t\t symbol.  */\n \t\t      bind = STB_WEAK;\n \t\t      other = STV_HIDDEN;\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_name, Elf_Word,\n-\t\t\t\t     gnu_lto - strings);\n+\t\t\t\t     prevailing_name_idx);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_shndx, Elf_Half, SHN_UNDEF);\n \t\t    }\n@@ -1482,7 +1510,6 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\tELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t       ent, st_shndx, Elf_Half, sh_map[st_shndx]);\n \t    }\n-\t  XDELETEVEC (strings);\n \t  XDELETEVEC (shndx_table);\n \t}\n       else if (sh_type == SHT_GROUP)"
    },
    {
      "sha": "14f53428643edd927953067f26fc21f15b8e0eb2",
      "filename": "libiberty/simple-object-mach-o.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-mach-o.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-mach-o.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-mach-o.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object-mach-o.c -- routines to manipulate Mach-O object files.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "d874de258f5ed7c455f79a0768077e447eca7004",
      "filename": "libiberty/simple-object-xcoff.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-xcoff.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object-xcoff.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object-xcoff.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object-coff.c -- routines to manipulate XCOFF object files.\n-   Copyright (C) 2013-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google and David Edelsohn, IBM.\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "d9c648af71783ef41b7277df9728bfa896aec1d7",
      "filename": "libiberty/simple-object.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/simple-object.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/simple-object.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* simple-object.c -- simple routines to read and write object files.\n-   Copyright (C) 2010-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2010-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n This program is free software; you can redistribute it and/or modify it"
    },
    {
      "sha": "2ab931e60b03c066938f7705fa1da0d7343d4520",
      "filename": "libiberty/snprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/snprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/snprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/snprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the snprintf function.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library.  This library is free"
    },
    {
      "sha": "fd8f926a8deed83aa574f20b978fa799b5ff74da",
      "filename": "libiberty/sort.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/sort.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/sort.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/sort.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Sorting algorithms.\n-   Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2000-2020 Free Software Foundation, Inc.\n    Contributed by Mark Mitchell <mark@codesourcery.com>.\n \n This file is part of GNU CC."
    },
    {
      "sha": "d97390b2ddce15721479afaaaae00ba062d9e101",
      "filename": "libiberty/spaces.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/spaces.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/spaces.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/spaces.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Allocate memory region filled with spaces.\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "3b7b810388ce67b15b419cfb7d165f03b7552890",
      "filename": "libiberty/splay-tree.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/splay-tree.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/splay-tree.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/splay-tree.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* A splay-tree datatype.  \n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n    Contributed by Mark Mitchell (mark@markmitchell.com).\n \n This file is part of GNU CC."
    },
    {
      "sha": "390adf32a4cbf03bf2652dd2a7ef31fe12e0e1de",
      "filename": "libiberty/stack-limit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stack-limit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stack-limit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/stack-limit.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Increase stack size limit if possible.\n-   Copyright (C) 2011-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2011-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the"
    },
    {
      "sha": "2b0a850637546e3ef65c4f06875bd2d63d120f7a",
      "filename": "libiberty/stpcpy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stpcpy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stpcpy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/stpcpy.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the stpcpy function.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "641b8f9cf937fef9eefc1e5b06145dc019ec2ca5",
      "filename": "libiberty/stpncpy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stpncpy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/stpncpy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/stpncpy.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the stpncpy function.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "a7ff3a9bbfc505d9da7ec7b50c119e4309fb6d25",
      "filename": "libiberty/strndup.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strndup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strndup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/strndup.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the strndup function.\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "de8c54cdfe73b02e326cfc691074e5fd4cd706eb",
      "filename": "libiberty/strtod.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strtod.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strtod.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/strtod.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implementation of strtod for systems with atof.\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the"
    },
    {
      "sha": "c31734675fcbc29d3fd23cce57e5cf6c64de0ac2",
      "filename": "libiberty/strverscmp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strverscmp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/strverscmp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/strverscmp.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Compare strings while treating digits characters numerically.\n-   Copyright (C) 1997-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2020 Free Software Foundation, Inc.\n    This file is part of the libiberty library.\n    Contributed by Jean-Fran\ufffdois Bignolles <bignolle@ecoledoc.ibp.fr>, 1997.\n "
    },
    {
      "sha": "1f05557a153557e9091f5b0d6e1ec2f2678a284a",
      "filename": "libiberty/testsuite/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/Makefile.in?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n #\n # Makefile\n-#   Copyright (C) 1999-2019 Free Software Foundation, Inc.\n+#   Copyright (C) 1999-2020 Free Software Foundation, Inc.\n #\n # This file is part of the libiberty library.\n # Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "5878d96dee326f5ff39eadd7798b960d67cf52ae",
      "filename": "libiberty/testsuite/demangle-expected",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangle-expected?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1278,7 +1278,7 @@ int& int_if_addable<Y>(A<sizeof ((*((Y*)(0)))+(*((Y*)(0))))>*)\n #\n --format=gnu-v3\n _Z3bazIiEvP1AIXszcl3foocvT__ELCf00000000_00000000EEEE\n-void baz<int>(A<sizeof (foo((int)(), (floatcomplex )00000000_00000000))>*)\n+void baz<int>(A<sizeof (foo((int)(), (float _Complex)00000000_00000000))>*)\n #\n --format=gnu-v3\n _Z3fooI1FEN1XIXszdtcl1PclcvT__EEE5arrayEE4TypeEv\n@@ -1446,3 +1446,7 @@ Foo<int>()::X::fn\n _ZZZ3FooIiEfvENKUlT_E_clIcEEDaS0_EN1X2fnEv\n Foo<int>()::{lambda(auto:1)#1}::operator()<char>(char) const::X::fn()\n Foo<int>()::{lambda(auto:1)#1}::operator()<char>(char) const::X::fn\n+#PR91979 demangling nullptr expression\n+\n+_Z3fooILPv0EEvPN9enable_ifIXeqT_LDnEEvE4typeE\n+void foo<(void*)0>(enable_if<((void*)0)==((decltype(nullptr))), void>::type*)"
    },
    {
      "sha": "9e35caa142e42567c11b32dd5edcc51d6171ddfd",
      "filename": "libiberty/testsuite/demangler-fuzzer.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/demangler-fuzzer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/demangler-fuzzer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/demangler-fuzzer.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Demangler fuzzer.\n \n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2020 Free Software Foundation, Inc.\n \n    This file is part of GNU libiberty.\n "
    },
    {
      "sha": "74774794736a8ae1dde4e2ff59fed5a4da46b8d2",
      "filename": "libiberty/testsuite/rust-demangle-expected",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/rust-demangle-expected",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/rust-demangle-expected",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/rust-demangle-expected?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -41,7 +41,7 @@ main::main::he714a2e23ed7db2g\n # $XX$ substitutions should not contain just numbers.\n --format=auto\n _ZN4main4$99$17he714a2e23ed7db23E\n-main::$99$::he714a2e23ed7db23\n+main::$99$\n # _ at start of path should be removed.\n # \"..\" translates to \"::\" \"$GT$\" to \">\" and \"$LT$\" to \"<\".\n --format=rust\n@@ -159,3 +159,7 @@ _ZN68_$LT$core..nonzero..NonZero$LT$T$GT$$u20$as$u20$core..ops..Deref$GT$5deref1\n --format=rust\n _ZN63_$LT$core..ptr..Unique$LT$T$GT$$u20$as$u20$core..ops..Deref$GT$5deref17h19f2ad4920655e85E\n <core::ptr::Unique<T> as core::ops::Deref>::deref\n+#\n+--format=rust\n+_ZN11issue_609253foo37Foo$LT$issue_60925..llv$u6d$..Foo$GT$3foo17h059a991a004536adE\n+issue_60925::foo::Foo<issue_60925::llvm::Foo>::foo"
    },
    {
      "sha": "eb3bcbde608940669fb861a8d626be7be10fe66a",
      "filename": "libiberty/testsuite/test-demangle.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-demangle.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-demangle.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/test-demangle.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Demangler test program,\n-   Copyright (C) 2002-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2002-2020 Free Software Foundation, Inc.\n    Written by Zack Weinberg <zack@codesourcery.com\n \n    This file is part of GNU libiberty."
    },
    {
      "sha": "66bc010434d6e26a3252985de88289b46ced50cd",
      "filename": "libiberty/testsuite/test-expandargv.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-expandargv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-expandargv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/test-expandargv.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* expandargv test program,\n-   Copyright (C) 2006-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2020 Free Software Foundation, Inc.\n    Written by Carlos O'Donell <carlos@codesourcery.com>\n \n    This file is part of the libiberty library, which is part of GCC."
    },
    {
      "sha": "30c990dfae90ad0a95683a351bc34e3d966d6b46",
      "filename": "libiberty/testsuite/test-pexecute.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-pexecute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-pexecute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/test-pexecute.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Pexecute test program,\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor <ian@airs.com>.\n \n    This file is part of GNU libiberty."
    },
    {
      "sha": "fd5f89d2a43fff7efd4cb82beaa020c9fd530162",
      "filename": "libiberty/testsuite/test-strtol.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-strtol.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/testsuite/test-strtol.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/testsuite/test-strtol.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Test program for strtol family of funtions,\n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2020 Free Software Foundation, Inc.\n    Written by Yury Gribov <y.gribov@samsung.com>\n \n    This file is part of the libiberty library, which is part of GCC."
    },
    {
      "sha": "ee46b5633e1c23ae1064912c35d8f07ab8889e4b",
      "filename": "libiberty/timeval-utils.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/timeval-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/timeval-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/timeval-utils.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Basic struct timeval utilities.\n-   Copyright (C) 2011-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2011-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "b4d6f0a84183920cddbda1aae54a24763ec8c646",
      "filename": "libiberty/unlink-if-ordinary.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/unlink-if-ordinary.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/unlink-if-ordinary.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/unlink-if-ordinary.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* unlink-if-ordinary.c - remove link to a file unless it is special\n-   Copyright (C) 2004-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2004-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the"
    },
    {
      "sha": "0bdd41a5e31fc612a184037152d0fb22ba6957cd",
      "filename": "libiberty/vasprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vasprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vasprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vasprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Like vsprintf but provides a pointer to malloc'd storage, which must\n    be freed by the caller.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "433d12db66d61c240b0bc79aa598a3d4bb41f783",
      "filename": "libiberty/vfprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vfprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vfprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vfprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Provide a version vfprintf in terms of _doprnt.\n    By Kaveh Ghazi  (ghazi@caip.rutgers.edu)  3/29/98\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1998-2020 Free Software Foundation, Inc.\n  */\n \n #include \"ansidecl.h\""
    },
    {
      "sha": "52e7378ea96c7856060e6e0e1069552a8d66425e",
      "filename": "libiberty/vprintf-support.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vprintf-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vprintf-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vprintf-support.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Estimate the length of the string generated by a vprintf-like\n    function.  Used by vasprintf and xvasprintf.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "ea689df6d1673efaf9335b169be562667704a621",
      "filename": "libiberty/vprintf-support.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vprintf-support.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vprintf-support.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vprintf-support.h?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,6 +1,6 @@\n /* Estimate the length of the string generated by a vprintf-like\n    function.  Use by vasprintf and xvasprintf.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "76a7711d1ea8338d9991d7a1d5aaf28b16b98326",
      "filename": "libiberty/vsnprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vsnprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vsnprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vsnprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the vsnprintf function.\n-   Copyright (C) 2003-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2003-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library.  This library is free"
    },
    {
      "sha": "633756956541a014f47104a7e22601cb06fdd95a",
      "filename": "libiberty/vsprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vsprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/vsprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/vsprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -3,7 +3,7 @@\n    implementations of stdio; newer ones should already have vsprintf.\n    Written by Per Bothner of Cygnus Support.\n    Based on libg++'s \"form\" (written by Doug Lea; dl@rocky.oswego.edu).\n-   Copyright (C) 1991-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1991-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.  This library is free\n software; you can redistribute it and/or modify it under the"
    },
    {
      "sha": "76fb4b34d406fb25867dc97c97843986d91b7a92",
      "filename": "libiberty/xasprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xasprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xasprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xasprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the xasprintf function.\n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2020 Free Software Foundation, Inc.\n    Contributed by Manuel Lopez-Ibanez.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "268aef159569187ab4a887e4c6a2e8c90998ae97",
      "filename": "libiberty/xexit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xexit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xexit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xexit.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* xexit.c -- Run any exit handlers, then exit.\n-   Copyright (C) 1994-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1994-2020 Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "96d51b57780e6197a4243ae8d2cc633e55f00009",
      "filename": "libiberty/xmalloc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xmalloc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xmalloc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xmalloc.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* memory allocation routines with error checking.\n-   Copyright (C) 1989-2019 Free Software Foundation, Inc.\n+   Copyright (C) 1989-2020 Free Software Foundation, Inc.\n    \n This file is part of the libiberty library.\n Libiberty is free software; you can redistribute it and/or"
    },
    {
      "sha": "32ba832427cfe0f5c6cbdf0ced4bc0150a168c8f",
      "filename": "libiberty/xstrndup.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xstrndup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xstrndup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xstrndup.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the xstrndup function.\n-   Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n    Written by Kaveh R. Ghazi <ghazi@caip.rutgers.edu>.\n \n This file is part of the libiberty library."
    },
    {
      "sha": "1ac513e189f417275df36be9cdd4c05026a2b108",
      "filename": "libiberty/xvasprintf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xvasprintf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/533da48302a26885a972e4379eccc26b364e5b53/libiberty/xvasprintf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/xvasprintf.c?ref=533da48302a26885a972e4379eccc26b364e5b53",
      "patch": "@@ -1,5 +1,5 @@\n /* Implement the xvasprintf function.\n-   Copyright (C) 2014-2019 Free Software Foundation, Inc.\n+   Copyright (C) 2014-2020 Free Software Foundation, Inc.\n    Contributed by Manuel Lopez-Ibanez.\n \n This file is part of the libiberty library."
    }
  ]
}