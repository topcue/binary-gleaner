{
  "sha": "913832e99c5a1576663e52a4929b13bb263bd692",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTEzODMyZTk5YzVhMTU3NjY2M2U1MmE0OTI5YjEzYmIyNjNiZDY5Mg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-22T16:05:44Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-28T08:56:19Z"
    },
    "message": "gdb: ensure SIGINT is set to SIG_DFL during initialisation\n\nIn order for our SIGINT handling to work correctly with Python we\nrequire that SIGINT be set to SIG_DFL during Python's initialisation.\n\nCurrently this is the case, but, in a later commit I plan to delay the\ninitialisation of Python until after the point where GDB's own SIGINT\nhandler has been installed.\n\nThe consequence of this is that our SIGINT handling would become\nbroken.\n\nIn this commit I propose adding an RAII class that will ensure SIGINT\nis set to SIG_DFL during the call to each extension languages\nfinish_initialization method.\n\nAt this point this change should have not effect.\n\ngdb/ChangeLog:\n\n\t* extension.c (struct scoped_default_signal): New struct.\n\t(scoped_default_sigint): New typedef.\n\t(finish_ext_lang_initialization): Make use of\n\tscoped_default_sigint.",
    "tree": {
      "sha": "1506c80a86e2d4633e35628a8d421d9c6fc0122b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1506c80a86e2d4633e35628a8d421d9c6fc0122b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/913832e99c5a1576663e52a4929b13bb263bd692",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/913832e99c5a1576663e52a4929b13bb263bd692",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/913832e99c5a1576663e52a4929b13bb263bd692",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/913832e99c5a1576663e52a4929b13bb263bd692/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a3b5ef3e45642e2e162f02f125a2322c3d1ad95f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a3b5ef3e45642e2e162f02f125a2322c3d1ad95f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a3b5ef3e45642e2e162f02f125a2322c3d1ad95f"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 34,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c417e81b893534af43dff7c67d126c472157f1f3",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913832e99c5a1576663e52a4929b13bb263bd692/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913832e99c5a1576663e52a4929b13bb263bd692/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=913832e99c5a1576663e52a4929b13bb263bd692",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* extension.c (struct scoped_default_signal): New struct.\n+\t(scoped_default_sigint): New typedef.\n+\t(finish_ext_lang_initialization): Make use of\n+\tscoped_default_sigint.\n+\n 2021-04-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* main.c (captured_main_1): Don't pass argument to gdb_init."
    },
    {
      "sha": "523079a1a6a760891d0280e6fa35a3874aad5111",
      "filename": "gdb/extension.c",
      "status": "modified",
      "additions": 27,
      "deletions": 1,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/913832e99c5a1576663e52a4929b13bb263bd692/gdb/extension.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/913832e99c5a1576663e52a4929b13bb263bd692/gdb/extension.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/extension.c?ref=913832e99c5a1576663e52a4929b13bb263bd692",
      "patch": "@@ -296,6 +296,29 @@ ext_lang_auto_load_enabled (const struct extension_language_defn *extlang)\n   return extlang->script_ops->auto_load_enabled (extlang);\n }\n \f\n+\n+/* RAII class used to temporarily return SIG to its default handler.  */\n+\n+template<int SIG>\n+struct scoped_default_signal\n+{\n+  scoped_default_signal ()\n+  { m_old_sig_handler = signal (SIG, SIG_DFL); }\n+\n+  ~scoped_default_signal ()\n+  { signal (SIG, m_old_sig_handler); }\n+\n+  DISABLE_COPY_AND_ASSIGN (scoped_default_signal);\n+\n+private:\n+  /* The previous signal handler that needs to be restored.  */\n+  sighandler_t m_old_sig_handler;\n+};\n+\n+/* Class to temporarily return SIGINT to its default handler.  */\n+\n+using scoped_default_sigint = scoped_default_signal<SIGINT>;\n+\n /* Functions that iterate over all extension languages.\n    These only iterate over external extension languages, not including\n    GDB's own extension/scripting language, unless otherwise indicated.  */\n@@ -310,7 +333,10 @@ finish_ext_lang_initialization (void)\n     {\n       if (extlang->ops != nullptr\n \t  && extlang->ops->finish_initialization != NULL)\n-\textlang->ops->finish_initialization (extlang);\n+\t{\n+\t  scoped_default_sigint set_sigint_to_default_handler;\n+\t  extlang->ops->finish_initialization (extlang);\n+\t}\n     }\n }\n "
    }
  ]
}