{
  "sha": "007c9b975dcb9ad50b45d52d2d7a955537beefb7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDA3YzliOTc1ZGNiOWFkNTBiNDVkNTJkMmQ3YTk1NTUzN2JlZWZiNw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:27Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:27Z"
    },
    "message": "gdbserver/linux-low: turn 'supports_z_point_type' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tRemove the 'supports_z_point_type' linux target op and let the\n\tconcrete linux target define it by overriding the op declared in\n\tprocess_stratum_target.\n\n\t* linux-low.cc (linux_process_target::supports_z_point_type):\n\tRemove.\n\t* linux-low.h (struct linux_target_ops): Remove the op.\n\t(class linux_process_target) <supports_z_point_type>: Remove.\n\t* linux-x86-low.cc (class x86_target) <supports_z_point_type>:\n\tDeclare.\n\t(x86_supports_z_point_type): Turn into...\n\t(x86_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target)\n\t<supports_z_point_type>: Declare.\n\t(aarch64_supports_z_point_type): Turn into...\n\t(aarch64_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (class arm_target) <supports_z_point_type>:\n\tDeclare.\n\t(arm_supports_z_point_type): Turn into...\n\t(arm_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-crisv32-low.cc (class crisv32_target)\n\t<supports_z_point_type>: Declare.\n\t(cris_supports_z_point_type): Turn into...\n\t(crisv32_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-mips-low.cc (class mips_target) <supports_z_point_type>:\n\tDeclare.\n\t(mips_supports_z_point_type): Turn into...\n\t(mips_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-ppc-low.cc (class ppc_target) <supports_z_point_type>:\n\tDeclare.\n\t(ppc_supports_z_point_type): Turn into...\n\t(ppc_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-s390-low.cc (class s390_target) <supports_z_point_type>:\n\tDeclare.\n\t(s390_supports_z_point_type): Turn into...\n\t(s390_target::supports_z_point_type): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (the_low_target): Remove the op field.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-sparc-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "1f7bfdda2dade0a383fa3ce3ad9aa1d48b5b8825",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1f7bfdda2dade0a383fa3ce3ad9aa1d48b5b8825"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/007c9b975dcb9ad50b45d52d2d7a955537beefb7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/007c9b975dcb9ad50b45d52d2d7a955537beefb7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/007c9b975dcb9ad50b45d52d2d7a955537beefb7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/007c9b975dcb9ad50b45d52d2d7a955537beefb7/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d7146cda56c8ee6d1129c0c787c2645c01301fb8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d7146cda56c8ee6d1129c0c787c2645c01301fb8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d7146cda56c8ee6d1129c0c787c2645c01301fb8"
    }
  ],
  "stats": {
    "total": 157,
    "additions": 98,
    "deletions": 59
  },
  "files": [
    {
      "sha": "5e6861af1830ddaf5f98762967f8a7ddee76ea60",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -1,3 +1,57 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tRemove the 'supports_z_point_type' linux target op and let the\n+\tconcrete linux target define it by overriding the op declared in\n+\tprocess_stratum_target.\n+\n+\t* linux-low.cc (linux_process_target::supports_z_point_type):\n+\tRemove.\n+\t* linux-low.h (struct linux_target_ops): Remove the op.\n+\t(class linux_process_target) <supports_z_point_type>: Remove.\n+\t* linux-x86-low.cc (class x86_target) <supports_z_point_type>:\n+\tDeclare.\n+\t(x86_supports_z_point_type): Turn into...\n+\t(x86_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target)\n+\t<supports_z_point_type>: Declare.\n+\t(aarch64_supports_z_point_type): Turn into...\n+\t(aarch64_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (class arm_target) <supports_z_point_type>:\n+\tDeclare.\n+\t(arm_supports_z_point_type): Turn into...\n+\t(arm_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-crisv32-low.cc (class crisv32_target)\n+\t<supports_z_point_type>: Declare.\n+\t(cris_supports_z_point_type): Turn into...\n+\t(crisv32_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-mips-low.cc (class mips_target) <supports_z_point_type>:\n+\tDeclare.\n+\t(mips_supports_z_point_type): Turn into...\n+\t(mips_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-ppc-low.cc (class ppc_target) <supports_z_point_type>:\n+\tDeclare.\n+\t(ppc_supports_z_point_type): Turn into...\n+\t(ppc_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-s390-low.cc (class s390_target) <supports_z_point_type>:\n+\tDeclare.\n+\t(s390_supports_z_point_type): Turn into...\n+\t(s390_target::supports_z_point_type): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (the_low_target): Remove the op field.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-sparc-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'breakpoint_at' linux target op into a method of"
    },
    {
      "sha": "9727d5db85a26a6ffe3b6395994f0e3e3a7f92e6",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -63,6 +63,8 @@ class aarch64_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -288,10 +290,10 @@ aarch64_get_debug_reg_state (pid_t pid)\n   return &proc->priv->arch_private->debug_reg_state;\n }\n \n-/* Implementation of linux_target_ops method \"supports_z_point_type\".  */\n+/* Implementation of target ops method \"supports_z_point_type\".  */\n \n-static int\n-aarch64_supports_z_point_type (char z_type)\n+bool\n+aarch64_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n@@ -300,9 +302,9 @@ aarch64_supports_z_point_type (char z_type)\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_READ_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -3104,7 +3106,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_supports_z_point_type,\n   aarch64_insert_point,\n   aarch64_remove_point,\n   aarch64_stopped_by_watchpoint,"
    },
    {
      "sha": "2d6035cd07b9bb20b5ee0e78d375821178adc1c3",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -70,6 +70,8 @@ class arm_target : public linux_process_target\n \n   bool supports_software_single_step () override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -556,8 +558,8 @@ update_registers_callback (thread_info *thread, int watch, int i)\n     linux_stop_lwp (lwp);\n }\n \n-static int\n-arm_supports_z_point_type (char z_type)\n+bool\n+arm_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n@@ -566,10 +568,10 @@ arm_supports_z_point_type (char z_type)\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_READ_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n       /* Leave the handling of sw breakpoints with the gdb client.  */\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -1093,7 +1095,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  arm_supports_z_point_type,\n   arm_insert_point,\n   arm_remove_point,\n   arm_stopped_by_watchpoint,"
    },
    {
      "sha": "5384fa897b89509aba306d8702aab9d4413fc413",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -171,7 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "761e4e243acb81bc397bb2de0ecee3155ff170d5",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -30,6 +30,8 @@ class crisv32_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -177,17 +179,17 @@ cris_write_data_breakpoint (struct regcache *regcache,\n     }\n }\n \n-static int\n-cris_supports_z_point_type (char z_type)\n+bool\n+crisv32_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_READ_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -456,7 +458,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  cris_supports_z_point_type,\n   cris_insert_point,\n   cris_remove_point,\n   cris_stopped_by_watchpoint,"
    },
    {
      "sha": "9a5c735c5c511b1ccc8b7db8044e21db12e679bb",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -5829,17 +5829,6 @@ linux_process_target::read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n   return n;\n }\n \n-/* These breakpoint and watchpoint related wrapper functions simply\n-   pass on the function call if the target has registered a\n-   corresponding function.  */\n-\n-bool\n-linux_process_target::supports_z_point_type (char z_type)\n-{\n-  return (the_low_target.supports_z_point_type != NULL\n-\t  && the_low_target.supports_z_point_type (z_type));\n-}\n-\n int\n linux_process_target::insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n \t\t\t\t    int size, raw_breakpoint *bp)"
    },
    {
      "sha": "c80237c8aa29ad500d45a8cdf1e24b7559af194c",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -133,7 +133,6 @@ struct linux_target_ops\n {\n   /* Breakpoint and watchpoint related functions.  See target.h for\n      comments.  */\n-  int (*supports_z_point_type) (char z_type);\n   int (*insert_point) (enum raw_bkpt_type type, CORE_ADDR addr,\n \t\t       int size, struct raw_breakpoint *bp);\n   int (*remove_point) (enum raw_bkpt_type type, CORE_ADDR addr,\n@@ -279,8 +278,6 @@ class linux_process_target : public process_stratum_target\n   int read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n \t\t unsigned int len) override;\n \n-  bool supports_z_point_type (char z_type) override;\n-\n   int insert_point (enum raw_bkpt_type type, CORE_ADDR addr,\n \t\t    int size, raw_breakpoint *bp) override;\n "
    },
    {
      "sha": "2f331b4a02a51799dfc1ef9063e62b84039f2d13",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -161,7 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "08a8f163876e0ca5d990461b00a4af76b9a29251",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -265,7 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "84ad0a07004c32baaff776514f43f5f3feb2776c",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -35,6 +35,8 @@ class mips_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -492,17 +494,17 @@ mips_linux_prepare_to_resume (struct lwp_info *lwp)\n     }\n }\n \n-static int\n-mips_supports_z_point_type (char z_type)\n+bool\n+mips_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_READ_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -968,7 +970,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  mips_supports_z_point_type,\n   mips_insert_point,\n   mips_remove_point,\n   mips_stopped_by_watchpoint,"
    },
    {
      "sha": "6874f0674e21530be8e40ad0fb6cb4a6ee7585a3",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -54,6 +54,8 @@ class ppc_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -329,18 +331,18 @@ ppc_target::low_breakpoint_at (CORE_ADDR where)\n    Handling software breakpoint at server side, so tracepoints\n    and breakpoints can be inserted at the same location.  */\n \n-static int\n-ppc_supports_z_point_type (char z_type)\n+bool\n+ppc_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n     case Z_PACKET_SW_BP:\n-      return 1;\n+      return true;\n     case Z_PACKET_HW_BP:\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_ACCESS_WP:\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -3408,7 +3410,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_supports_z_point_type,\n   ppc_insert_point,\n   ppc_remove_point,\n   NULL,"
    },
    {
      "sha": "3bfa675efa40af117d48675ba6653ee94ebdcb60",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -61,6 +61,8 @@ class s390_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -682,17 +684,17 @@ s390_target::low_breakpoint_at (CORE_ADDR pc)\n \n /* Breakpoint/Watchpoint support.  */\n \n-/* The \"supports_z_point_type\" linux_target_ops method.  */\n+/* The \"supports_z_point_type\" target ops method.  */\n \n-static int\n-s390_supports_z_point_type (char z_type)\n+bool\n+s390_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n     case Z_PACKET_SW_BP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -2836,7 +2838,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  s390_supports_z_point_type,\n   NULL,\n   NULL,\n   NULL,"
    },
    {
      "sha": "5723b4f89040343a4b8f258d016e35a95c4103ba",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -192,7 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "46133b55b592fe3fab5f1046a0c4c658cec1ecb7",
      "filename": "gdbserver/linux-sparc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-sparc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-sparc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sparc-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -341,7 +341,6 @@ sparc_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL,  /* supports_z_point_type */\n   NULL, NULL, NULL, NULL,\n   NULL, NULL\n };"
    },
    {
      "sha": "30f880a19c687f040f5eb8d885d92a7ecabc5663",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -423,7 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "73f3eb918e67b32435342d1d6a2d7775bd5c2c5a",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -224,7 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    },
    {
      "sha": "d5228746371e15acd891d0191f0070a597324758",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -108,6 +108,8 @@ class x86_target : public linux_process_target\n \n   const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n \n+  bool supports_z_point_type (char z_type) override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -587,18 +589,18 @@ struct x86_dr_low_type x86_dr_low =\n \f\n /* Breakpoint/Watchpoint support.  */\n \n-static int\n-x86_supports_z_point_type (char z_type)\n+bool\n+x86_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n     case Z_PACKET_SW_BP:\n     case Z_PACKET_HW_BP:\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -2910,7 +2912,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_supports_z_point_type,\n   x86_insert_point,\n   x86_remove_point,\n   x86_stopped_by_watchpoint,"
    },
    {
      "sha": "e1618d100b971fe83a6b578dc349875c9a603054",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/007c9b975dcb9ad50b45d52d2d7a955537beefb7/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=007c9b975dcb9ad50b45d52d2d7a955537beefb7",
      "patch": "@@ -329,7 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* supports_z_point_type */\n   NULL, /* insert_point */\n   NULL, /* remove_point */\n   NULL, /* stopped_by_watchpoint */"
    }
  ]
}