{
  "sha": "a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTY3OWYyNGVjYzAwZmY3ZGYwMmM1ZTZlNDgwNGZjOWYxOWNiZTU5NQ==",
  "commit": {
    "author": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-04-24T07:41:23Z"
    },
    "committer": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-04-24T08:33:52Z"
    },
    "message": "S12Z: Opcodes: Handle bit map operations with non-canonical operands.\n\nopcodes/\n\t* s12z-opc.c (bm_decode): Handle the RESERVERD0 case.\n\ngas/\n\t* testsuite/gas/s12z/bit-manip-invalid.d: Extend the test.\n\t* testsuite/gas/s12z/bit-manip-invalid.s: Extend the test.",
    "tree": {
      "sha": "314b7c379d23089a2c691088d72cf66ab2d4b281",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/314b7c379d23089a2c691088d72cf66ab2d4b281"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d10be0cb9e61f29a0de368ebcc78bba22a902ad5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d10be0cb9e61f29a0de368ebcc78bba22a902ad5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d10be0cb9e61f29a0de368ebcc78bba22a902ad5"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 21,
    "deletions": 4
  },
  "files": [
    {
      "sha": "090df4b99b2fb61bbadf5cafc68585ca34b22d5d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-24  John Darrington <john@darrington.wattle.id.au>\n+\n+\t* testsuite/gas/s12z/bit-manip-invalid.s: Extend test for BSET\n+\tand BCLR instructions with an invalid mode.\n+\t* testsuite/gas/s12z/bit-manip-invalid.d: ditto.\n+\n 2019-04-19  Nick Clifton  <nickc@redhat.com>\n \n \tPR 24464"
    },
    {
      "sha": "d16a8f5683e34f00bcd89d46eae5b6abd785b196",
      "filename": "gas/testsuite/gas/s12z/bit-manip-invalid.d",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/testsuite/gas/s12z/bit-manip-invalid.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/testsuite/gas/s12z/bit-manip-invalid.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/bit-manip-invalid.d?ref=a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
      "patch": "@@ -1,5 +1,5 @@\n #objdump: -d\n-#name:    Test of disassembler behaviour by with invalid bit manipulation instructions\n+#name:    Test of disassembler behaviour with invalid bit manipulation instructions\n #source:  bit-manip-invalid.s\n \n \n@@ -17,3 +17,7 @@ Disassembly of section \\.text:\n    8:\t03 65 12    \tbrset d1, #4, \\*\\+18\n    b:\t01          \tnop\n    c:\t01          \tnop\n+   d:\tec 44       \tbclr d0, #0\n+   f:\tec 7c       \tbclr d0, #7\n+  11:\ted 5d       \tbset d1, #3\n+  13:\ted 7d       \tbset d1, #7"
    },
    {
      "sha": "d0269953a5fb1a0e5901a187d747353a4b4c8f88",
      "filename": "gas/testsuite/gas/s12z/bit-manip-invalid.s",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/testsuite/gas/s12z/bit-manip-invalid.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/gas/testsuite/gas/s12z/bit-manip-invalid.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/s12z/bit-manip-invalid.s?ref=a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
      "patch": "@@ -8,4 +8,8 @@\n         nop\n         DC.L 0x03651201\n         nop\n+\tdc.w 0xEC44\n+\tdc.w 0xEC7C\n+\tdc.w 0xED5D\n+\tdc.w 0xED7D\n "
    },
    {
      "sha": "2d0229c0ca80ffa85f958a49ddb2ee0382739adb",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
      "patch": "@@ -3,6 +3,11 @@\n         * s12z-opc.h: Add extern \"C\" bracketing to help\n \tusers who wish to use this interface in c++ code.\n \n+2019-04-24  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z-opc.c (bm_decode): Handle bit map operations with the\n+\t\"reserved0\" mode.\n+\n 2019-04-15  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* arm-dis.c (coprocessor_opcodes): Document new %J and %K format"
    },
    {
      "sha": "e40f90e43ff6da0a6ced6b3e215d71906159978b",
      "filename": "opcodes/s12z-opc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/opcodes/s12z-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a679f24ecc00ff7df02c5e6e4804fc9f19cbe595/opcodes/s12z-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/s12z-opc.c?ref=a679f24ecc00ff7df02c5e6e4804fc9f19cbe595",
      "patch": "@@ -1821,6 +1821,7 @@ bm_decode (struct mem_read_abstraction_base *mra,\n   switch (mode)\n     {\n     case BM_REG_IMM:\n+    case BM_RESERVED0:\n       imm = (bm & 0x38) >> 3;\n       operand[(*n_operands)++] = create_immediate_operand (imm);\n       break;\n@@ -1838,9 +1839,6 @@ bm_decode (struct mem_read_abstraction_base *mra,\n     case BM_RESERVED1:\n       operand[(*n_operands)++] = create_register_operand ((bm & 0x70) >> 4);\n       break;\n-    case BM_RESERVED0:\n-      assert (0);\n-      break;\n     }\n }\n "
    }
  ]
}