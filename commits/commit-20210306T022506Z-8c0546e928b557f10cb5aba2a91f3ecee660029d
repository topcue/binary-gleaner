{
  "sha": "8c0546e928b557f10cb5aba2a91f3ecee660029d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGMwNTQ2ZTkyOGI1NTdmMTBjYjVhYmEyYTkxZjNlY2VlNjYwMDI5ZA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-06T02:24:56Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-06T02:25:06Z"
    },
    "message": "elf/x86-64: Subtract __ImageBase for R_AMD64_IMAGEBASE\n\nWhen linking Windows x86-64 relocatable object files to generate x86-64\nELF executable, we need to subtract __ImageBase, aka __executable_start,\nfor R_AMD64_IMAGEBASE relocation:\n\n1. Add link_info to struct output_elf_obj_tdata to store linker info and\n_bfd_get_link_info() to retrieve it.\n2. Add ldelf_set_output_arch to set up link_info.\n3. Add pex64_link_add_symbols to create an indirect reference to\n__executable_start for __ImageBase to support R_AMD64_IMAGEBASE relocation\nwhen adding symbols from Windows x86-64 relocatable object files to\ngenerate x86-64 ELF executable.\n4. Also subtract __ImageBase for R_AMD64_IMAGEBASE when generating x86-64\nELF executable.\n\nbfd/\n\n\tPR ld/27425\n\tPR ld/27432\n\t* bfd.c (_bfd_get_link_info): New function.\n\t* elf-bfd.h (output_elf_obj_tdata): Add link_info.\n\t(elf_link_info): New.\n\t* libbfd-in.h (_bfd_get_link_info): New prototype.\n\t* coff-x86_64.c (coff_amd64_reloc): Also subtract __ImageBase for\n\tR_AMD64_IMAGEBASE when generating x86-64 ELF executable.\n\t* pe-x86_64.c: Include \"coff/internal.h\" and \"libcoff.h\".\n\t(pex64_link_add_symbols): New function.\n\t(coff_bfd_link_add_symbols): New macro.\n\t* libbfd.h: Regenerated.\n\nld/\n\n\tPR ld/27425\n\tPR ld/27432\n\t* ldelf.c (ldelf_set_output_arch): New function.\n\t* ldelf.h (ldelf_set_output_arch): New prototype.\n\t* emultempl/elf.em (LDEMUL_SET_OUTPUT_ARCH): Default to\n\tldelf_set_output_arch.\n\t* ld-x86-64/pe-x86-64-1.od: Expect __executable_start.\n\t* testsuite/ld-x86-64/pe-x86-64-2.od: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64-3.od: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64-4.od: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64-5.od: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64-5.rd: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64-6.obj.bz2: New file.\n\t* testsuite/ld-x86-64/pe-x86-64-6.od: Likewise.\n\t* testsuite/ld-x86-64/pe-x86-64.exp: Run ld/27425 test.",
    "tree": {
      "sha": "fa6de685644e0fc9b754cd1d81a28c1a7f6c3ee8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fa6de685644e0fc9b754cd1d81a28c1a7f6c3ee8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c0546e928b557f10cb5aba2a91f3ecee660029d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c0546e928b557f10cb5aba2a91f3ecee660029d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c0546e928b557f10cb5aba2a91f3ecee660029d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c0546e928b557f10cb5aba2a91f3ecee660029d/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0a8c2ff9c1b5f7d2e1ef1e0d65dcff0e9f089cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0a8c2ff9c1b5f7d2e1ef1e0d65dcff0e9f089cc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0a8c2ff9c1b5f7d2e1ef1e0d65dcff0e9f089cc"
    }
  ],
  "stats": {
    "total": 238,
    "additions": 231,
    "deletions": 7
  },
  "files": [
    {
      "sha": "a43a3c2174551861ccd008673403c712ddb7abaf",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -1,3 +1,18 @@\n+2021-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/27425\n+\tPR ld/27432\n+\t* bfd.c (_bfd_get_link_info): New function.\n+\t* elf-bfd.h (output_elf_obj_tdata): Add link_info.\n+\t(elf_link_info): New.\n+\t* libbfd-in.h (_bfd_get_link_info): New prototype.\n+\t* coff-x86_64.c (coff_amd64_reloc): Also subtract __ImageBase for\n+\tR_AMD64_IMAGEBASE when generating x86-64 ELF executable.\n+\t* pe-x86_64.c: Include \"coff/internal.h\" and \"libcoff.h\".\n+\t(pex64_link_add_symbols): New function.\n+\t(coff_bfd_link_add_symbols): New macro.\n+\t* libbfd.h: Regenerated.\n+\n 2021-03-05  Craig Blackmore  <craig.blackmore@embecosm.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "
    },
    {
      "sha": "2c6208578630c51651b680b01944eb69bd29a35f",
      "filename": "bfd/bfd.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/bfd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/bfd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfd.c?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2808,3 +2808,14 @@ bfd_convert_section_contents (bfd *ibfd, sec_ptr isec, bfd *obfd,\n   *ptr_size = size;\n   return TRUE;\n }\n+\n+/* Get the linker information.  */\n+\n+struct bfd_link_info *\n+_bfd_get_link_info (bfd *abfd)\n+{\n+  if (bfd_get_flavour (abfd) != bfd_target_elf_flavour)\n+    return NULL;\n+\n+  return elf_link_info (abfd);\n+}"
    },
    {
      "sha": "870df2b2b7aa82700560fe5e015b93598b14a811",
      "filename": "bfd/coff-x86_64.c",
      "status": "modified",
      "additions": 31,
      "deletions": 4,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/coff-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/coff-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-x86_64.c?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -131,11 +131,38 @@ coff_amd64_reloc (bfd *abfd,\n \tdiff -= reloc_entry->howto->type - R_AMD64_PCRLONG;\n     }\n \n-  /* FIXME: How should this case be handled?  */\n   if (reloc_entry->howto->type == R_AMD64_IMAGEBASE\n-      && output_bfd != NULL\n-      && bfd_get_flavour (output_bfd) == bfd_target_coff_flavour)\n-    diff -= pe_data (output_bfd)->pe_opthdr.ImageBase;\n+      && output_bfd == NULL)\n+    {\n+      bfd *obfd = input_section->output_section->owner;\n+      struct bfd_link_info *link_info;\n+      struct bfd_link_hash_entry *h;\n+      switch (bfd_get_flavour (obfd))\n+\t{\n+\tcase bfd_target_coff_flavour:\n+\t  diff -= pe_data (obfd)->pe_opthdr.ImageBase;\n+\t  break;\n+\tcase bfd_target_elf_flavour:\n+\t  /* Subtract __ImageBase.  */\n+\t  link_info = _bfd_get_link_info (obfd);\n+\t  if (link_info == NULL)\n+\t    return bfd_reloc_dangerous;\n+\t  h = bfd_link_hash_lookup (link_info->hash, \"__ImageBase\",\n+\t\t\t\t    FALSE, FALSE, FALSE);\n+\t  if (h == NULL)\n+\t    return bfd_reloc_dangerous;\n+\t  while (h->type == bfd_link_hash_indirect)\n+\t    h = h->u.i.link;\n+\t  /* ELF symbols in relocatable files are section relative,\n+\t     but in nonrelocatable files they are virtual addresses.  */\n+\t  diff -= (h->u.def.value\n+\t\t   + h->u.def.section->output_offset\n+\t\t   + h->u.def.section->output_section->vma);\n+\t  break;\n+\tdefault:\n+\t  break;\n+\t}\n+    }\n #endif\n \n #define DOIT(x) \\"
    },
    {
      "sha": "04785a814e897ed310804e7fe07449be12aad9e6",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -1887,6 +1887,9 @@ struct output_elf_obj_tdata\n   /* Used when laying out sections.  */\n   file_ptr next_file_pos;\n \n+  /* Linker information.  */\n+  struct bfd_link_info *link_info;\n+\n   int num_section_syms;\n   unsigned int shstrtab_section, strtab_section;\n \n@@ -2064,6 +2067,7 @@ struct elf_obj_tdata\n #define elf_elfsections(bfd)\t(elf_tdata(bfd) -> elf_sect_ptr)\n #define elf_numsections(bfd)\t(elf_tdata(bfd) -> num_elf_sections)\n #define elf_seg_map(bfd)\t(elf_tdata(bfd) -> o->seg_map)\n+#define elf_link_info(bfd)\t(elf_tdata(bfd) -> o->link_info)\n #define elf_next_file_pos(bfd)\t(elf_tdata(bfd) -> o->next_file_pos)\n #define elf_eh_frame_hdr(bfd)\t(elf_tdata(bfd) -> o->eh_frame_hdr)\n #define elf_stack_flags(bfd)\t(elf_tdata(bfd) -> o->stack_flags)"
    },
    {
      "sha": "62b1cee0af06382a1f6f1546ede02ad2ab926665",
      "filename": "bfd/libbfd-in.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/libbfd-in.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/libbfd-in.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd-in.h?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -899,6 +899,8 @@ extern bfd_vma _bfd_safe_read_leb128\n extern bfd_byte * _bfd_write_unsigned_leb128\n   (bfd_byte *, bfd_byte *, bfd_vma) ATTRIBUTE_HIDDEN;\n \n+extern struct bfd_link_info *_bfd_get_link_info (bfd *);\n+\n #if GCC_VERSION >= 7000\n #define _bfd_mul_overflow(a, b, res) __builtin_mul_overflow (a, b, res)\n #else"
    },
    {
      "sha": "3a481ea468f710c2c9aa39ff6f6ecc2f1467bb34",
      "filename": "bfd/libbfd.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/libbfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/libbfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libbfd.h?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -904,6 +904,8 @@ extern bfd_vma _bfd_safe_read_leb128\n extern bfd_byte * _bfd_write_unsigned_leb128\n   (bfd_byte *, bfd_byte *, bfd_vma) ATTRIBUTE_HIDDEN;\n \n+extern struct bfd_link_info *_bfd_get_link_info (bfd *);\n+\n #if GCC_VERSION >= 7000\n #define _bfd_mul_overflow(a, b, res) __builtin_mul_overflow (a, b, res)\n #else"
    },
    {
      "sha": "771651aba89f259a090b49723250e322076e2c23",
      "filename": "bfd/pe-x86_64.c",
      "status": "modified",
      "additions": 31,
      "deletions": 1,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/pe-x86_64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/bfd/pe-x86_64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pe-x86_64.c?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -22,6 +22,8 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n+#include \"coff/internal.h\"\n+#include \"libcoff.h\"\n \n #define TARGET_SYM\t\tx86_64_pe_vec\n #define TARGET_NAME\t\t\"pe-x86-64\"\n@@ -66,5 +68,33 @@ extern bfd_boolean pex64_bfd_print_pdata (bfd *, void *);\n \n #define bfd_pe_print_pdata   pex64_bfd_print_pdata\n \n-#include \"coff-x86_64.c\"\n+static bfd_boolean\n+pex64_link_add_symbols (bfd *abfd, struct bfd_link_info *info)\n+{\n+  if (bfd_link_pde (info)\n+      && bfd_get_flavour (info->output_bfd) == bfd_target_elf_flavour)\n+    {\n+      /* NB: When linking Windows x86-64 relocatable object files to\n+\t generate ELF executable, create an indirect reference to\n+\t __executable_start for __ImageBase to support R_AMD64_IMAGEBASE\n+\t relocation which is relative to __ImageBase.  */\n+      struct bfd_link_hash_entry *h, *hi;\n+      hi = bfd_link_hash_lookup (info->hash, \"__ImageBase\", TRUE, FALSE,\n+\t\t\t\t FALSE);\n+      if (hi->type == bfd_link_hash_new\n+\t  || hi->type == bfd_link_hash_undefined\n+\t  || hi->type == bfd_link_hash_undefweak)\n+\t{\n+\t  h = bfd_link_hash_lookup (info->hash, \"__executable_start\",\n+\t\t\t\t    TRUE, FALSE, TRUE);\n+\t  hi->type = bfd_link_hash_indirect;\n+\t  hi->u.i.link = h;\n+\t}\n+    }\n+\n+  return _bfd_coff_link_add_symbols (abfd, info);\n+}\n \n+#define coff_bfd_link_add_symbols pex64_link_add_symbols\n+\n+#include \"coff-x86_64.c\""
    },
    {
      "sha": "367aa7b242228fe77227708cc6ebda793b9fffc2",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -1,3 +1,21 @@\n+2021-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/27425\n+\tPR ld/27432\n+\t* ldelf.c (ldelf_set_output_arch): New function.\n+\t* ldelf.h (ldelf_set_output_arch): New prototype.\n+\t* emultempl/elf.em (LDEMUL_SET_OUTPUT_ARCH): Default to\n+\tldelf_set_output_arch.\n+\t* ld-x86-64/pe-x86-64-1.od: Expect __executable_start.\n+\t* testsuite/ld-x86-64/pe-x86-64-2.od: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64-3.od: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64-4.od: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64-5.od: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64-5.rd: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64-6.obj.bz2: New file.\n+\t* testsuite/ld-x86-64/pe-x86-64-6.od: Likewise.\n+\t* testsuite/ld-x86-64/pe-x86-64.exp: Run ld/27425 test.\n+\n 2021-03-04  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/ld-scripts/map-address.exp: Set image base to zero"
    },
    {
      "sha": "9e7c3d86a9e6e0ee403bea488ece29c992fa53fe",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -919,7 +919,7 @@ struct ld_emulation_xfer_struct ld_${EMULATION_NAME}_emulation =\n   ${LDEMUL_AFTER_CHECK_RELOCS-after_check_relocs_default},\n   ${LDEMUL_BEFORE_PLACE_ORPHANS-ldelf_before_place_orphans},\n   ${LDEMUL_AFTER_ALLOCATION-gld${EMULATION_NAME}_after_allocation},\n-  ${LDEMUL_SET_OUTPUT_ARCH-set_output_arch_default},\n+  ${LDEMUL_SET_OUTPUT_ARCH-ldelf_set_output_arch},\n   ${LDEMUL_CHOOSE_TARGET-ldemul_default_target},\n   ${LDEMUL_BEFORE_ALLOCATION-gld${EMULATION_NAME}_before_allocation},\n   ${LDEMUL_GET_SCRIPT-gld${EMULATION_NAME}_get_script},"
    },
    {
      "sha": "a733131e51c2aadab191e7c4106a977679e83000",
      "filename": "ld/ldelf.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ldelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ldelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelf.c?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2206,3 +2206,11 @@ ldelf_before_place_orphans (void)\n \t  }\n       }\n }\n+\n+void\n+ldelf_set_output_arch (void)\n+{\n+  set_output_arch_default ();\n+  if (link_info.output_bfd->xvec->flavour == bfd_target_elf_flavour)\n+    elf_link_info (link_info.output_bfd) = &link_info;\n+}"
    },
    {
      "sha": "aaf264ae2398134f99e337481c4f269984015d28",
      "filename": "ld/ldelf.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ldelf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/ldelf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelf.h?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -31,3 +31,4 @@ extern bfd_boolean ldelf_open_dynamic_archive\n extern lang_output_section_statement_type *ldelf_place_orphan\n   (asection *, const char *, int);\n extern void ldelf_before_place_orphans (void);\n+extern void ldelf_set_output_arch (void);"
    },
    {
      "sha": "227875f82dcdb71875170e921e7b958f1a0f93bf",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-1.od",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-1.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-1.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-1.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2,6 +2,7 @@\n .*: +file format .*\n \n SYMBOL TABLE:\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n 0+401000 g       .text\\$mn\t0000000000000000 getaddr1\n 0+401020 g       .text\\$mn\t0000000000000000 begin\n 0+403014 g       .bss\t0000000000000000 __bss_start"
    },
    {
      "sha": "227875f82dcdb71875170e921e7b958f1a0f93bf",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-2.od",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-2.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-2.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-2.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2,6 +2,7 @@\n .*: +file format .*\n \n SYMBOL TABLE:\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n 0+401000 g       .text\\$mn\t0000000000000000 getaddr1\n 0+401020 g       .text\\$mn\t0000000000000000 begin\n 0+403014 g       .bss\t0000000000000000 __bss_start"
    },
    {
      "sha": "227875f82dcdb71875170e921e7b958f1a0f93bf",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-3.od",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-3.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-3.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-3.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2,6 +2,7 @@\n .*: +file format .*\n \n SYMBOL TABLE:\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n 0+401000 g       .text\\$mn\t0000000000000000 getaddr1\n 0+401020 g       .text\\$mn\t0000000000000000 begin\n 0+403014 g       .bss\t0000000000000000 __bss_start"
    },
    {
      "sha": "320c6be5e14af1c2b6d8ed8bd82554aea7690ea3",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-4.od",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-4.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-4.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-4.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -2,6 +2,7 @@\n .*: +file format .*\n \n SYMBOL TABLE:\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n 0+403038 g       .bss\t0000000000000000 c\n 0+401000 g       .text\\$mn\t0000000000000000 begin\n 0+403038 g       .bss\t0000000000000000 __bss_start"
    },
    {
      "sha": "6ef13abbc9483ea33af7aeb5432e5426a5d26c15",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-5.od",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-5.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-5.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-5.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -4,6 +4,7 @@\n SYMBOL TABLE:\n 0+402014 g       .bss\t0000000000000000 non_initdummy\n 0+402010 g       .data\t0000000000000000 initdummy\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n 0+401000 g       .text\\$mn\t0000000000000000 begin\n 0+402012 g       .bss\t0000000000000000 __bss_start\n 0+402000 g       .data\t0000000000000000 Struct"
    },
    {
      "sha": "237052805e96e601615c95abbd0e3f3da0bb1ea1",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-5.rd",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-5.rd",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-5.rd",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-5.rd?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -1,9 +1,10 @@\n \n-Symbol table '.symtab' contains 10 entries:\n+Symbol table '.symtab' contains 11 entries:\n    Num:    Value          Size Type    Bind   Vis      Ndx Name\n  +[a-f0-9]+: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n  +[a-f0-9]+: 0000000000402014     0 NOTYPE  GLOBAL DEFAULT    3 non_initdummy\n  +[a-f0-9]+: 0000000000402010     0 NOTYPE  GLOBAL DEFAULT    2 initdummy\n+ +[a-f0-9]+: 0000000000400000     0 NOTYPE  GLOBAL DEFAULT    1 __executable_start\n  +[a-f0-9]+: 0000000000401000     0 NOTYPE  GLOBAL DEFAULT    1 begin\n  +[a-f0-9]+: 0000000000402012     0 NOTYPE  GLOBAL DEFAULT    3 __bss_start\n  +[a-f0-9]+: 0000000000402000     0 NOTYPE  GLOBAL DEFAULT    2 Struct"
    },
    {
      "sha": "38255045d45ed918857b2c966400c13a13ea6c07",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-6.obj.bz2",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-6.obj.bz2",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-6.obj.bz2",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-6.obj.bz2?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d"
    },
    {
      "sha": "cc23658a8062523c35d93d63c095efb8aeeb090f",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64-6.od",
      "status": "added",
      "additions": 91,
      "deletions": 0,
      "changes": 91,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-6.od",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64-6.od",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64-6.od?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -0,0 +1,91 @@\n+\n+.*: +file format .*\n+\n+SYMBOL TABLE:\n+0+4010a8 g       .text\\$mn\t0000000000000000 xfunc\n+0+402000 g       .rdata\t0000000000000000 \\?\\?_C@_02LDKJOMJN@AB@\n+0+400000 g       .text\\$mn\t0000000000000000 __executable_start\n+0+403058 g       .data\t0000000000000000 __bss_start\n+0+401000 g       .text\\$mn\t0000000000000000 main\n+0+403038 g       .data\t0000000000000000 deadloopvar\n+0+4010ac g       .text\\$mn\t0000000000000000 xstring\n+0+403058 g       .data\t0000000000000000 _edata\n+0+403058 g       .data\t0000000000000000 _end\n+\n+\n+\n+Disassembly of section .text\\$mn:\n+\n+0+401000 <main>:\n+ +[a-f0-9]+:\t48 89 5c 24 08       \tmov    %rbx,0x8\\(%rsp\\)\n+ +[a-f0-9]+:\t48 89 6c 24 10       \tmov    %rbp,0x10\\(%rsp\\)\n+ +[a-f0-9]+:\t48 89 74 24 20       \tmov    %rsi,0x20\\(%rsp\\)\n+ +[a-f0-9]+:\t57                   \tpush   %rdi\n+ +[a-f0-9]+:\t48 83 ec 20          \tsub    \\$0x20,%rsp\n+ +[a-f0-9]+:\tcc                   \tint3   \n+ +[a-f0-9]+:\t8b 05 1d 20 00 00    \tmov    0x201d\\(%rip\\),%eax        # 403038 <deadloopvar>\n+ +[a-f0-9]+:\t83 f8 01             \tcmp    \\$0x1,%eax\n+ +[a-f0-9]+:\t74 f5                \tje     401015 <main\\+0x15>\n+ +[a-f0-9]+:\t0f 31                \trdtsc  \n+ +[a-f0-9]+:\t48 c1 e2 20          \tshl    \\$0x20,%rdx\n+ +[a-f0-9]+:\t48 0b c2             \tor     %rdx,%rax\n+ +[a-f0-9]+:\t74 5d                \tje     401088 <main\\+0x88>\n+ +[a-f0-9]+:\t33 ff                \txor    %edi,%edi\n+ +[a-f0-9]+:\t48 8d 2d cc ef ff ff \tlea    -0x1034\\(%rip\\),%rbp        # 400000 <__executable_start>\n+ +[a-f0-9]+:\t33 db                \txor    %ebx,%ebx\n+ +[a-f0-9]+:\t48 8d 35 ff 1f 00 00 \tlea    0x1fff\\(%rip\\),%rsi        # 40303c <deadloopvar\\+0x4>\n+ +[a-f0-9]+:\t48 8b 8c 2b 50 30 00 00 \tmov    0x3050\\(%rbx,%rbp,1\\),%rcx\n+ +[a-f0-9]+:\t44 8a 01             \tmov    \\(%rcx\\),%r8b\n+ +[a-f0-9]+:\t45 84 c0             \ttest   %r8b,%r8b\n+ +[a-f0-9]+:\t74 28                \tje     401075 <main\\+0x75>\n+ +[a-f0-9]+:\tb8 05 00 00 00       \tmov    \\$0x5,%eax\n+ +[a-f0-9]+:\t2b 84 2b 48 30 00 00 \tsub    0x3048\\(%rbx,%rbp,1\\),%eax\n+ +[a-f0-9]+:\t99                   \tcltd   \n+ +[a-f0-9]+:\t2b c2                \tsub    %edx,%eax\n+ +[a-f0-9]+:\td1 f8                \tsar    %eax\n+ +[a-f0-9]+:\t48 63 d0             \tmovslq %eax,%rdx\n+ +[a-f0-9]+:\t48 03 d6             \tadd    %rsi,%rdx\n+ +[a-f0-9]+:\t48 ff c1             \tinc    %rcx\n+ +[a-f0-9]+:\t44 88 02             \tmov    %r8b,\\(%rdx\\)\n+ +[a-f0-9]+:\t48 ff c2             \tinc    %rdx\n+ +[a-f0-9]+:\t44 8a 01             \tmov    \\(%rcx\\),%r8b\n+ +[a-f0-9]+:\t45 84 c0             \ttest   %r8b,%r8b\n+ +[a-f0-9]+:\t75 ef                \tjne    401064 <main\\+0x64>\n+ +[a-f0-9]+:\t48 8b ce             \tmov    %rsi,%rcx\n+ +[a-f0-9]+:\te8 2f 00 00 00       \tcall   4010ac <xstring>\n+ +[a-f0-9]+:\tff c7                \tinc    %edi\n+ +[a-f0-9]+:\t48 83 c3 08          \tadd    \\$0x8,%rbx\n+ +[a-f0-9]+:\t83 ff 01             \tcmp    \\$0x1,%edi\n+ +[a-f0-9]+:\t72 b5                \tjb     40103d <main\\+0x3d>\n+ +[a-f0-9]+:\tb1 aa                \tmov    \\$0xaa,%cl\n+ +[a-f0-9]+:\te8 19 00 00 00       \tcall   4010a8 <xfunc>\n+ +[a-f0-9]+:\t48 8b 5c 24 30       \tmov    0x30\\(%rsp\\),%rbx\n+ +[a-f0-9]+:\t33 c0                \txor    %eax,%eax\n+ +[a-f0-9]+:\t48 8b 6c 24 38       \tmov    0x38\\(%rsp\\),%rbp\n+ +[a-f0-9]+:\t48 8b 74 24 48       \tmov    0x48\\(%rsp\\),%rsi\n+ +[a-f0-9]+:\t48 83 c4 20          \tadd    \\$0x20,%rsp\n+ +[a-f0-9]+:\t5f                   \tpop    %rdi\n+ +[a-f0-9]+:\tc3                   \tret    \n+ +[a-f0-9]+:\t66 90                \txchg   %ax,%ax\n+\n+0+4010a8 <xfunc>:\n+ +[a-f0-9]+:\t66 90                \txchg   %ax,%ax\n+ +[a-f0-9]+:\tcc                   \tint3   \n+ +[a-f0-9]+:\tc3                   \tret    \n+\n+0+4010ac <xstring>:\n+ +[a-f0-9]+:\t40 53                \trex push %rbx\n+ +[a-f0-9]+:\t48 83 ec 20          \tsub    \\$0x20,%rsp\n+ +[a-f0-9]+:\t8a 01                \tmov    \\(%rcx\\),%al\n+ +[a-f0-9]+:\t48 8b d9             \tmov    %rcx,%rbx\n+ +[a-f0-9]+:\teb 0c                \tjmp    4010c5 <xstring\\+0x19>\n+ +[a-f0-9]+:\t8a c8                \tmov    %al,%cl\n+ +[a-f0-9]+:\te8 e8 ff ff ff       \tcall   4010a8 <xfunc>\n+ +[a-f0-9]+:\t48 ff c3             \tinc    %rbx\n+ +[a-f0-9]+:\t8a 03                \tmov    \\(%rbx\\),%al\n+ +[a-f0-9]+:\t84 c0                \ttest   %al,%al\n+ +[a-f0-9]+:\t75 f0                \tjne    4010b9 <xstring\\+0xd>\n+ +[a-f0-9]+:\t48 83 c4 20          \tadd    \\$0x20,%rsp\n+ +[a-f0-9]+:\t5b                   \tpop    %rbx\n+ +[a-f0-9]+:\tc3                   \tret    \n+#pass"
    },
    {
      "sha": "f5d2c84f28380ab275ed93347bc9219af2ab5ffb",
      "filename": "ld/testsuite/ld-x86-64/pe-x86-64.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c0546e928b557f10cb5aba2a91f3ecee660029d/ld/testsuite/ld-x86-64/pe-x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/pe-x86-64.exp?ref=8c0546e928b557f10cb5aba2a91f3ecee660029d",
      "patch": "@@ -73,4 +73,13 @@ run_ld_link_tests [list \\\n \t {readelf {-s -x .data} pe-x86-64-5.rd}} \\\n \t\"pe-x86-64-5\" \\\n     ] \\\n+    [list \\\n+\t\"Build pe-x86-64-6\" \\\n+\t\"-m elf_x86_64 --entry=main\" \\\n+\t\"\" \\\n+\t\"\" \\\n+\t{pe-x86-64-6.obj.bz2 } \\\n+\t{{objdump {-dw --sym} pe-x86-64-6.od}} \\\n+\t\"pe-x86-64-6\" \\\n+    ] \\\n ]"
    }
  ]
}