{
  "sha": "436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
  "node_id": "C_kwDOANOeidoAKDQzNmMzZDlkN2IyMGI1MjJkOWJjOWQ3MzdjNDkxYWM0ZTZjNzE5YmU",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-12-05T17:28:46Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2022-01-06T06:17:37Z"
    },
    "message": "sim: v850: migrate to standard uintXX_t types\n\nThis old port setup its own uintXX types, but since we require C11\nnow, we can assume the standard uintXX_t types exist and use them.",
    "tree": {
      "sha": "99456852c5ca7c1bb9a7fb8771c206f951d3f609",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99456852c5ca7c1bb9a7fb8771c206f951d3f609"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7606e1a3904368d942ad886c110dc34581e98c42",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7606e1a3904368d942ad886c110dc34581e98c42",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7606e1a3904368d942ad886c110dc34581e98c42"
    }
  ],
  "stats": {
    "total": 216,
    "additions": 105,
    "deletions": 111
  },
  "files": [
    {
      "sha": "88191481a86ad68245db011eaeab7b8cfbcdcbea",
      "filename": "sim/v850/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/interp.c?ref=436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
      "patch": "@@ -170,7 +170,7 @@ get_insn_name (sim_cpu *cpu, int i)\n \n /* These default values correspond to expected usage for the chip.  */\n \n-uint32 OP[4];\n+uint32_t OP[4];\n \n static sim_cia\n v850_pc_get (sim_cpu *cpu)\n@@ -315,13 +315,13 @@ sim_create_inferior (SIM_DESC      sd,\n static int\n v850_reg_fetch (SIM_CPU *cpu, int rn, unsigned char *memory, int length)\n {\n-  *(unsigned32*)memory = H2T_4 (State.regs[rn]);\n+  *(uint32_t*)memory = H2T_4 (State.regs[rn]);\n   return -1;\n }\n \n static int\n v850_reg_store (SIM_CPU *cpu, int rn, unsigned char *memory, int length)\n {\n-  State.regs[rn] = T2H_4 (*(unsigned32 *) memory);\n+  State.regs[rn] = T2H_4 (*(uint32_t *) memory);\n   return length;\n }"
    },
    {
      "sha": "49b845dfe7aec93cf3cdb1709d0bb1d2b2e6b1ee",
      "filename": "sim/v850/sim-main.h",
      "status": "modified",
      "additions": 19,
      "deletions": 25,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/sim-main.h?ref=436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
      "patch": "@@ -14,14 +14,8 @@\n #include \"bfd.h\"\n \n \n-typedef signed8 int8;\n-typedef unsigned8 uint8;\n-typedef signed16 int16;\n-typedef unsigned16 uint16;\n-typedef signed32 int32;\n-typedef unsigned32 uint32;\n-typedef unsigned32 reg_t;\n-typedef unsigned64 reg64_t;\n+typedef uint32_t reg_t;\n+typedef uint64_t reg64_t;\n \n \n /* The current state of the processor; registers, memory, etc.  */\n@@ -62,7 +56,7 @@ extern SIM_DESC simulator;\n    macro's that store the instruction where the old simops expects\n    it. */\n \n-extern uint32 OP[4];\n+extern uint32_t OP[4];\n #if 0\n OP[0] = inst & 0x1f;           /* RRRRR -> reg1 */\n OP[1] = (inst >> 11) & 0x1f;   /* rrrrr -> reg2 */\n@@ -444,11 +438,11 @@ enum op_types\n #ifdef DEBUG\n void trace_input (char *name, enum op_types type, int size);\n void trace_output (enum op_types result);\n-void trace_result (int has_result, unsigned32 result);\n+void trace_result (int has_result, uint32_t result);\n \n extern int trace_num_values;\n-extern unsigned32 trace_values[];\n-extern unsigned32 trace_pc;\n+extern uint32_t trace_values[];\n+extern uint32_t trace_pc;\n extern const char *trace_name;\n extern int trace_module;\n \n@@ -542,7 +536,7 @@ do { \\\n do { \\\n   if (TRACE_FPU_P (CPU)) \\\n     { \\\n-      unsigned64 f0; \\\n+      uint64_t f0; \\\n       sim_fpu_to64 (&f0, (V0)); \\\n       trace_input_fp1 (SD, CPU, TRACE_FPU_IDX, f0); \\\n     } \\\n@@ -552,7 +546,7 @@ do { \\\n do { \\\n   if (TRACE_FPU_P (CPU)) \\\n     { \\\n-      unsigned64 f0, f1; \\\n+      uint64_t f0, f1; \\\n       sim_fpu_to64 (&f0, (V0)); \\\n       sim_fpu_to64 (&f1, (V1)); \\\n       trace_input_fp2 (SD, CPU, TRACE_FPU_IDX, f0, f1);\t\\\n@@ -563,7 +557,7 @@ do { \\\n do { \\\n   if (TRACE_FPU_P (CPU)) \\\n     { \\\n-      unsigned64 f0, f1, f2; \\\n+      uint64_t f0, f1, f2; \\\n       sim_fpu_to64 (&f0, (V0)); \\\n       sim_fpu_to64 (&f1, (V1)); \\\n       sim_fpu_to64 (&f2, (V2)); \\\n@@ -576,7 +570,7 @@ do { \\\n   if (TRACE_FPU_P (CPU)) \\\n     { \\\n       int d0 = (V0); \\\n-      unsigned64 f1, f2; \\\n+      uint64_t f1, f2; \\\n       TRACE_DATA *data = CPU_TRACE_DATA (CPU); \\\n       TRACE_IDX (data) = TRACE_FPU_IDX;\t\\\n       sim_fpu_to64 (&f1, (V1)); \\\n@@ -597,7 +591,7 @@ do { \\\n do { \\\n   if (TRACE_FPU_P (CPU)) \\\n     { \\\n-      unsigned64 f0; \\\n+      uint64_t f0; \\\n       sim_fpu_to64 (&f0, (R0));\t\\\n       trace_result_fp1 (SD, CPU, TRACE_FPU_IDX, f0); \\\n     } \\\n@@ -639,15 +633,15 @@ do { \\\n extern void divun ( unsigned int       N,\n \t\t    unsigned long int  als,\n \t\t    unsigned long int  sfi,\n-\t\t    unsigned32 /*unsigned long int*/ *  quotient_ptr,\n-\t\t    unsigned32 /*unsigned long int*/ *  remainder_ptr,\n+\t\t    uint32_t /*unsigned long int*/ *  quotient_ptr,\n+\t\t    uint32_t /*unsigned long int*/ *  remainder_ptr,\n \t\t    int *overflow_ptr\n \t\t    );\n extern void divn ( unsigned int       N,\n \t\t   unsigned long int  als,\n \t\t   unsigned long int  sfi,\n-\t\t   signed32 /*signed long int*/ *  quotient_ptr,\n-\t\t   signed32 /*signed long int*/ *  remainder_ptr,\n+\t\t   int32_t /*signed long int*/ *  quotient_ptr,\n+\t\t   int32_t /*signed long int*/ *  remainder_ptr,\n \t\t   int *overflow_ptr\n \t\t   );\n extern int type1_regs[];\n@@ -667,7 +661,7 @@ extern int type3_regs[];\n #define SAT16(X)\t\t\t\\\n   do\t\t\t\t\t\\\n     {\t\t\t\t\t\\\n-      signed64 z = (X);\t\t\t\\\n+      int64_t z = (X);\t\t\t\\\n       if (z > 0x7fff)\t\t\t\\\n \t{\t\t\t\t\\\n \t  SESR |= SESR_OV | SESR_SOV;\t\\\n@@ -685,7 +679,7 @@ extern int type3_regs[];\n #define SAT32(X)\t\t\t\\\n   do\t\t\t\t\t\\\n     {\t\t\t\t\t\\\n-      signed64 z = (X);\t\t\t\\\n+      int64_t z = (X);\t\t\t\\\n       if (z > 0x7fffffff)\t\t\\\n \t{\t\t\t\t\\\n \t  SESR |= SESR_OV | SESR_SOV;\t\\\n@@ -703,7 +697,7 @@ extern int type3_regs[];\n #define ABS16(X)\t\t\t\\\n   do\t\t\t\t\t\\\n     {\t\t\t\t\t\\\n-      signed64 z = (X) & 0xffff;\t\\\n+      int64_t z = (X) & 0xffff;\t\\\n       if (z == 0x8000)\t\t\t\\\n \t{\t\t\t\t\\\n \t  SESR |= SESR_OV | SESR_SOV;\t\\\n@@ -720,7 +714,7 @@ extern int type3_regs[];\n #define ABS32(X)\t\t\t\\\n   do\t\t\t\t\t\\\n     {\t\t\t\t\t\\\n-      signed64 z = (X) & 0xffffffff;\t\\\n+      int64_t z = (X) & 0xffffffff;\t\\\n       if (z == 0x80000000)\t\t\\\n \t{\t\t\t\t\\\n \t  SESR |= SESR_OV | SESR_SOV;\t\\"
    },
    {
      "sha": "8fac8bd9891124ffd3236fae87e069ca51bf2004",
      "filename": "sim/v850/simops.c",
      "status": "modified",
      "additions": 26,
      "deletions": 26,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/simops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/simops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/simops.c?ref=436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
      "patch": "@@ -49,9 +49,9 @@ int type3_regs[15] = { 2, 1, 0, 27, 26, 25, 24, 31, 30, 29, 28, 23, 22, 20, 21};\n #endif\n \n \n-unsigned32   trace_values[3];\n+uint32_t   trace_values[3];\n int          trace_num_values;\n-unsigned32   trace_pc;\n+uint32_t   trace_pc;\n const char * trace_name;\n int          trace_module;\n \n@@ -190,7 +190,7 @@ trace_input (char *name, enum op_types type, int size)\n }\n \n void\n-trace_result (int has_result, unsigned32 result)\n+trace_result (int has_result, uint32_t result)\n {\n   char buf[1000];\n   char *chp;\n@@ -415,7 +415,7 @@ fetch_argv (SIM_DESC sd, address_word addr)\n \n   while (1)\n     {\n-      unsigned32 a = sim_core_read_4 (STATE_CPU (sd, 0),\n+      uint32_t a = sim_core_read_4 (STATE_CPU (sd, 0),\n \t\t\t\t      PC, read_map, addr + nr * 4);\n       if (a == 0) break;\n       buf[nr] = fetch_str (sd, a);\n@@ -1669,7 +1669,7 @@ OP_10007E0 (void)\n \t    buf = PARM1;\n \t    RETVAL = pipe (host_fd);\n \t    SW (buf, host_fd[0]);\n-\t    buf += sizeof (uint16);\n+\t    buf += sizeof (uint16_t);\n \t    SW (buf, host_fd[1]);\n \t    RETERR = errno;\n \t  }\n@@ -2017,8 +2017,8 @@ divun\n   unsigned int       N,\n   unsigned long int  als,\n   unsigned long int  sfi,\n-  unsigned32 /*unsigned long int*/ *  quotient_ptr,\n-  unsigned32 /*unsigned long int*/ *  remainder_ptr,\n+  uint32_t /*unsigned long int*/ *  quotient_ptr,\n+  uint32_t /*unsigned long int*/ *  remainder_ptr,\n   int *          overflow_ptr\n )\n {\n@@ -2091,8 +2091,8 @@ divn\n   unsigned int       N,\n   unsigned long int  als,\n   unsigned long int  sfi,\n-  signed32 /*signed long int*/ *  quotient_ptr,\n-  signed32 /*signed long int*/ *  remainder_ptr,\n+  int32_t /*signed long int*/ *  quotient_ptr,\n+  int32_t /*signed long int*/ *  remainder_ptr,\n   int *          overflow_ptr\n )\n {\n@@ -2188,8 +2188,8 @@ divn\n int\n OP_1C207E0 (void)\n {\n-  unsigned32 /*unsigned long int*/  quotient;\n-  unsigned32 /*unsigned long int*/  remainder;\n+  uint32_t /*unsigned long int*/  quotient;\n+  uint32_t /*unsigned long int*/  remainder;\n   unsigned long int  divide_by;\n   unsigned long int  divide_this;\n   int            overflow = 0;\n@@ -2223,8 +2223,8 @@ OP_1C207E0 (void)\n int\n OP_1C007E0 (void)\n {\n-  signed32 /*signed long int*/  quotient;\n-  signed32 /*signed long int*/  remainder;\n+  int32_t /*signed long int*/  quotient;\n+  int32_t /*signed long int*/  remainder;\n   signed long int  divide_by;\n   signed long int  divide_this;\n   int          overflow = 0;\n@@ -2234,8 +2234,8 @@ OP_1C007E0 (void)\n \n   imm5 = 32 - ((OP[3] & 0x3c0000) >> 17);\n \n-  divide_by   = (signed32) State.regs[ OP[0] ];\n-  divide_this = (signed32) (State.regs[ OP[1] ] << imm5);\n+  divide_by   = (int32_t) State.regs[ OP[0] ];\n+  divide_this = (int32_t) (State.regs[ OP[1] ] << imm5);\n \n   divn (imm5, divide_by, divide_this, & quotient, & remainder, & overflow);\n   \n@@ -2258,8 +2258,8 @@ OP_1C007E0 (void)\n int\n OP_18207E0 (void)\n {\n-  unsigned32 /*unsigned long int*/  quotient;\n-  unsigned32 /*unsigned long int*/  remainder;\n+  uint32_t /*unsigned long int*/  quotient;\n+  uint32_t /*unsigned long int*/  remainder;\n   unsigned long int  divide_by;\n   unsigned long int  divide_this;\n   int            overflow = 0;\n@@ -2293,8 +2293,8 @@ OP_18207E0 (void)\n int\n OP_18007E0 (void)\n {\n-  signed32 /*signed long int*/  quotient;\n-  signed32 /*signed long int*/  remainder;\n+  int32_t /*signed long int*/  quotient;\n+  int32_t /*signed long int*/  remainder;\n   signed long int  divide_by;\n   signed long int  divide_this;\n   int          overflow = 0;\n@@ -2305,7 +2305,7 @@ OP_18007E0 (void)\n   imm5 = 32 - ((OP[3] & 0x3c0000) >> 17);\n \n   divide_by   = EXTEND16 (State.regs[ OP[0] ]);\n-  divide_this = (signed32) (State.regs[ OP[1] ] << imm5);\n+  divide_this = (int32_t) (State.regs[ OP[1] ] << imm5);\n \n   divn (imm5, divide_by, divide_this, & quotient, & remainder, & overflow);\n   \n@@ -2376,7 +2376,7 @@ OP_2C007E0 (void)\n   \n   /* Compute the result.  */\n   \n-  divide_by   = (signed32) State.regs[ OP[0] ];\n+  divide_by   = (int32_t) State.regs[ OP[0] ];\n   divide_this = State.regs[ OP[1] ];\n   \n   if (divide_by == 0)\n@@ -2392,7 +2392,7 @@ OP_2C007E0 (void)\n     }\n   else\n     {\n-      divide_this = (signed32) divide_this;\n+      divide_this = (int32_t) divide_this;\n       State.regs[ OP[1]       ] = quotient  = divide_this / divide_by;\n       State.regs[ OP[2] >> 11 ] = remainder = divide_this % divide_by;\n  \n@@ -2477,7 +2477,7 @@ OP_28007E0 (void)\n     }\n   else\n     {\n-      divide_this = (signed32) divide_this;\n+      divide_this = (int32_t) divide_this;\n       State.regs[ OP[1]       ] = quotient  = divide_this / divide_by;\n       State.regs[ OP[2] >> 11 ] = remainder = divide_this % divide_by;\n   \n@@ -3378,12 +3378,12 @@ v850_satsub (SIM_DESC sd, unsigned int op0, unsigned int op1, unsigned int *op2p\n   *op2p = result;\n }\n \n-unsigned32\n+uint32_t\n load_data_mem (SIM_DESC  sd,\n \t       SIM_ADDR  addr,\n \t       int       len)\n {\n-  uint32 data;\n+  uint32_t data;\n \n   switch (len)\n     {\n@@ -3409,7 +3409,7 @@ void\n store_data_mem (SIM_DESC    sd,\n \t\tSIM_ADDR    addr,\n \t\tint         len,\n-\t\tunsigned32  data)\n+\t\tuint32_t  data)\n {\n   switch (len)\n     {"
    },
    {
      "sha": "632febe5de55a77867245e5eac38e93256f90c5e",
      "filename": "sim/v850/simops.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/simops.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/simops.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/simops.h?ref=436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
      "patch": "@@ -79,8 +79,8 @@ int OP_307E0 (void);\n int v850_float_compare(SIM_DESC sd, int cmp, sim_fpu wop1, sim_fpu wop2, int double_op_p);\n \n /* MEMORY ACCESS */\n-unsigned32 load_data_mem(SIM_DESC sd, SIM_ADDR addr, int len);\n-void store_data_mem(SIM_DESC sd, SIM_ADDR addr, int len, unsigned32 data);\n+uint32_t load_data_mem(SIM_DESC sd, SIM_ADDR addr, int len);\n+void store_data_mem(SIM_DESC sd, SIM_ADDR addr, int len, uint32_t data);\n \n unsigned long Add32 (unsigned long a1, unsigned long a2, int * carry);\n "
    },
    {
      "sha": "eb32c0f5ec33cf65783d7fd35562d04675d949c3",
      "filename": "sim/v850/v850.igen",
      "status": "modified",
      "additions": 55,
      "deletions": 55,
      "changes": 110,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/v850.igen",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/436c3d9d7b20b522d9bc9d737c491ac4e6c719be/sim/v850/v850.igen",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/v850.igen?ref=436c3d9d7b20b522d9bc9d737c491ac4e6c719be",
      "patch": "@@ -220,7 +220,7 @@ rrrrr,11111100000 + wwwww,01101000010:XII:::bsh\n *v850e3v5\n \"bsh r<reg2>, r<reg3>\"\n {\n-  unsigned32 value;\n+  uint32_t value;\n   TRACE_ALU_INPUT1 (GR[reg2]);\n \n   value = (MOVED32 (GR[reg2], 23, 16, 31, 24)\n@@ -249,7 +249,7 @@ rrrrr,11111100000 + wwwww,01101000000:XII:::bsw\n \"bsw r<reg2>, r<reg3>\"\n {\n #define WORDHASNULLBYTE(x) (((x) - 0x01010101) & ~(x)&0x80808080)\n-  unsigned32 value;\n+  uint32_t value;\n   TRACE_ALU_INPUT1 (GR[reg2]);\n \n   value = GR[reg2];\n@@ -279,8 +279,8 @@ rrrrr,11111100000 + wwwww,01101000000:XII:::bsw\n *v850e3v5\n \"callt <imm6>\"\n {\n-  unsigned32 adr;\n-  unsigned32 off;\n+  uint32_t adr;\n+  uint32_t off;\n   CTPC  = cia + 2;\n   CTPSW = PSW;\n   adr = (CTBP & ~1) + (imm6 << 1);\n@@ -299,8 +299,8 @@ rrrrr,111111,RRRRR + wwwww,00011101110:IX:::caxi\n \"caxi [reg1], reg2, reg3\"\n {\n   unsigned int z,s,cy,ov;\n-  unsigned32 addr;\n-  unsigned32 token,result;\n+  uint32_t addr;\n+  uint32_t token,result;\n \n   addr = GR[reg1];\n \n@@ -486,7 +486,7 @@ rrrrr,111111,RRRRR + wwwww,01011000000:XI:::div\n rrrrr!0,000010,RRRRR!0:I:::divh\n \"divh r<reg1>, r<reg2>\"\n {\n-  unsigned32 ov, s, z;\n+  uint32_t ov, s, z;\n   signed long int op0, op1, result;\n \n   trace_input (\"divh\", OP_REG_REG, 0);\n@@ -511,7 +511,7 @@ rrrrr!0,000010,RRRRR!0:I:::divh\n     }\n   else\n     {\n-      result = (signed32) op1 / op0;\n+      result = (int32_t) op1 / op0;\n       ov = 0;\n \n       /* Compute the condition codes.  */\n@@ -714,7 +714,7 @@ rrrrr,11111100000 + wwwww,01101000110:XII:::hsh\n *v850e3v5\n \"hsh r<reg2>, r<reg3>\"\n {\n-  unsigned32 value;\n+  uint32_t value;\n   TRACE_ALU_INPUT1 (GR[reg2]);\n \n   value = 0xffff & GR[reg2];\n@@ -738,7 +738,7 @@ rrrrr,11111100000 + wwwww,01101000100:XII:::hsw\n *v850e3v5\n \"hsw r<reg2>, r<reg3>\"\n {\n-  unsigned32 value;\n+  uint32_t value;\n   TRACE_ALU_INPUT1 (GR[reg2]);\n \n   value = GR[reg2];\n@@ -844,8 +844,8 @@ rrrrr,111000,RRRRR + dddddddddddddddd:VII:::ld.b\n *v850e2v3\n *v850e3v5\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = EXTEND8 (load_data_mem (sd, addr, 1));\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = EXTEND8 (load_data_mem (sd, addr, 1));\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n }\n@@ -861,8 +861,8 @@ rrrrr,111001,RRRRR + ddddddddddddddd,0:VII:::ld.h\n *v850e3v5\n \"ld.h <disp23>[r<reg1>], r<reg3>\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = EXTEND16 (load_data_mem (sd, addr, 2));\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = EXTEND16 (load_data_mem (sd, addr, 2));\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n }\n@@ -878,8 +878,8 @@ rrrrr,111001,RRRRR + ddddddddddddddd,1:VII:::ld.w\n *v850e3v5\n \"ld.w <disp23>[r<reg1>], r<reg3>\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = load_data_mem (sd, addr, 4);\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = load_data_mem (sd, addr, 4);\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n }\n@@ -888,8 +888,8 @@ rrrrr,111001,RRRRR + ddddddddddddddd,1:VII:::ld.w\n *v850e3v5\n \"ld.dw <disp23>[r<reg1>], r<reg3>\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = load_data_mem (sd, addr, 4);\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = load_data_mem (sd, addr, 4);\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n   result = load_data_mem (sd, addr + 4, 4);\n@@ -913,8 +913,8 @@ rrrrr!0,11110,b,RRRRR + ddddddddddddddd,1:VII:::ld.bu\n *v850e3v5\n \"ld.bu <disp23>[r<reg1>], r<reg3>\"\n { \n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = load_data_mem (sd, addr, 1);\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = load_data_mem (sd, addr, 1);\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n }\n@@ -935,8 +935,8 @@ rrrrr!0,111111,RRRRR + ddddddddddddddd,1:VII:::ld.hu\n *v850e3v5\n \"ld.hu <disp23>[r<reg1>], r<reg3>\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n-  unsigned32 result = load_data_mem (sd, addr, 2);\n+  uint32_t addr = GR[reg1] + disp23;\n+  uint32_t result = load_data_mem (sd, addr, 2);\n   GR[reg3] = result;\n   TRACE_LD (addr, result);\n }\n@@ -948,7 +948,7 @@ regID,111111,RRRRR + selID,00000100000:IX:::ldsr\n \"ldsr r<reg1>, s<regID>\":(selID == 0)\n \"ldsr r<reg1>, s<regID>, <selID>\"\n {\n-  uint32 sreg = GR[reg1];\n+  uint32_t sreg = GR[reg1];\n   TRACE_ALU_INPUT1 (GR[reg1]);\n \n   /* FIXME: For now we ignore the selID.  */\n@@ -1911,8 +1911,8 @@ rrrrr,0110,ddddddd:IV:::sld.b\n \"sld.bu <disp7>[ep], r<reg2>\":(PSW & PSW_US)\n \"sld.b <disp7>[ep], r<reg2>\"\n {\n-  unsigned32 addr = EP + disp7;\n-  unsigned32 result = load_mem (addr, 1);\n+  uint32_t addr = EP + disp7;\n+  uint32_t result = load_mem (addr, 1);\n   if (PSW & PSW_US)\n     {\n       GR[reg2] = result;\n@@ -1930,8 +1930,8 @@ rrrrr,1000,ddddddd:IV:::sld.h\n \"sld.hu <disp8>[ep], r<reg2>\":(PSW & PSW_US)\n \"sld.h <disp8>[ep], r<reg2>\"\n {\n-  unsigned32 addr = EP + disp8;\n-  unsigned32 result = load_mem (addr, 2);\n+  uint32_t addr = EP + disp8;\n+  uint32_t result = load_mem (addr, 2);\n   if (PSW & PSW_US)\n     {\n       GR[reg2] = result;\n@@ -1948,8 +1948,8 @@ rrrrr,1000,ddddddd:IV:::sld.h\n rrrrr,1010,dddddd,0:IV:::sld.w\n \"sld.w <disp8>[ep], r<reg2>\"\n {\n-  unsigned32 addr = EP + disp8;\n-  unsigned32 result = load_mem (addr, 4);\n+  uint32_t addr = EP + disp8;\n+  uint32_t result = load_mem (addr, 4);\n   GR[reg2] = result;\n   TRACE_LD (addr, result);\n }\n@@ -1963,8 +1963,8 @@ rrrrr!0,0000110,dddd:IV:::sld.bu\n \"sld.b <disp4>[ep], r<reg2>\":(PSW & PSW_US)\n \"sld.bu <disp4>[ep], r<reg2>\"\n {\n-  unsigned32 addr = EP + disp4;\n-  unsigned32 result = load_mem (addr, 1);\n+  uint32_t addr = EP + disp4;\n+  uint32_t result = load_mem (addr, 1);\n   if (PSW & PSW_US)\n     {\n       result = EXTEND8 (result);\n@@ -1987,8 +1987,8 @@ rrrrr!0,0000111,dddd:IV:::sld.hu\n \"sld.h <disp5>[ep], r<reg2>\":(PSW & PSW_US)\n \"sld.hu <disp5>[ep], r<reg2>\"\n {\n-  unsigned32 addr = EP + disp5;\n-  unsigned32 result = load_mem (addr, 2);\n+  uint32_t addr = EP + disp5;\n+  uint32_t result = load_mem (addr, 2);\n   if (PSW & PSW_US)\n     {\n       result = EXTEND16 (result);\n@@ -2035,7 +2035,7 @@ rrrrr,111010,RRRRR + dddddddddddddddd:VII:::st.b\n *v850e3v5\n \"st.b r<reg3>, <disp23>[r<reg1>]\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n+  uint32_t addr = GR[reg1] + disp23;\n   store_data_mem (sd, addr, 1, GR[reg3]);\n   TRACE_ST (addr, GR[reg3]);\n }\n@@ -2051,7 +2051,7 @@ rrrrr,111011,RRRRR + ddddddddddddddd,0:VII:::st.h\n *v850e3v5\n \"st.h r<reg3>, <disp23>[r<reg1>]\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n+  uint32_t addr = GR[reg1] + disp23;\n   store_data_mem (sd, addr, 2, GR[reg3]);\n   TRACE_ST (addr, GR[reg3]);\n }\n@@ -2067,7 +2067,7 @@ rrrrr,111011,RRRRR + ddddddddddddddd,1:VII:::st.w\n *v850e3v5\n \"st.w r<reg3>, <disp23>[r<reg1>]\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n+  uint32_t addr = GR[reg1] + disp23;\n   store_data_mem (sd, addr, 4, GR[reg3]);\n   TRACE_ST (addr, GR[reg3]);\n }\n@@ -2076,7 +2076,7 @@ rrrrr,111011,RRRRR + ddddddddddddddd,1:VII:::st.w\n *v850e3v5\n \"st.dw r<reg3>, <disp23>[r<reg1>]\"\n {\n-  unsigned32 addr = GR[reg1] + disp23;\n+  uint32_t addr = GR[reg1] + disp23;\n   store_data_mem (sd, addr, 4, GR[reg3]);\n   TRACE_ST (addr, GR[reg3]);\n   store_data_mem (sd, addr + 4, 4, GR[reg3 + 1]);\n@@ -2088,7 +2088,7 @@ rrrrr,111011,RRRRR + ddddddddddddddd,1:VII:::st.w\n rrrrr,111111,regID + 0000000001000000:IX:::stsr\n \"stsr s<regID>, r<reg2>\"\n {\n-  uint32 sreg = 0;\n+  uint32_t sreg = 0;\n \n   if ((idecode_issue == idecode_v850e2_issue\n        || idecode_issue == idecode_v850e3v5_issue\n@@ -2561,7 +2561,7 @@ rrrr,011111100100 + wwww,010001010100:F_I:::cvtf_dl\n *v850e3v5\n \"cvtf.dl r<reg2e>, r<reg3e>\"\n {\n-  signed64 ans;\n+  int64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -2604,7 +2604,7 @@ rrrr,011111100100 + wwwww,10001010000:F_I:::cvtf_dw\n *v850e3v5\n \"cvtf.dw r<reg2e>, r<reg3>\"\n {\n-  int32 ans;\n+  int32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -2626,11 +2626,11 @@ rrrr,011111100001 + wwww,010001010010:F_I:::cvtf_ld\n *v850e3v5\n \"cvtf.ld r<reg2e>, r<reg3e>\"\n {\n-  signed64 op;\n+  int64_t op;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n-  op = ((signed64)GR[reg2e+1] << 32L) | GR[reg2e];\n+  op = ((int64_t)GR[reg2e+1] << 32L) | GR[reg2e];\n   TRACE_FP_INPUT_WORD2 (GR[reg2e], GR[reg2e+1]);\n \n   sim_fpu_i64to (&wop, op, FPSR_GET_ROUND());\n@@ -2648,11 +2648,11 @@ rrrr,011111100001 + wwwww,10001000010:F_I:::cvtf_ls\n *v850e3v5\n \"cvtf.ls r<reg2e>, r<reg3>\"\n {\n-  signed64 op;\n+  int64_t op;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n-  op = ((signed64)GR[reg2e+1] << 32L) | GR[reg2e];\n+  op = ((int64_t)GR[reg2e+1] << 32L) | GR[reg2e];\n   TRACE_FP_INPUT_WORD2 (GR[reg2e], GR[reg2e+1]);\n \n   sim_fpu_i64to (&wop, op, FPSR_GET_ROUND());\n@@ -2689,7 +2689,7 @@ rrrrr,11111100100 + wwww,010001000100:F_I:::cvtf_sl\n *v850e3v5\n \"cvtf.sl r<reg2>, r<reg3e>\"\n {\n-  signed64 ans;\n+  int64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -2712,7 +2712,7 @@ rrrrr,11111100100 + wwwww,10001000000:F_I:::cvtf_sw\n *v850e3v5\n \"cvtf.sw r<reg2>, r<reg3>\"\n {\n-  int32 ans;\n+  int32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3449,7 +3449,7 @@ rrrr,011111100001 + wwww,010001010100:F_I:::trncf_dl\n *v850e3v5\n \"trncf.dl r<reg2e>, r<reg3e>\"\n {\n-  signed64 ans;\n+  int64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3471,7 +3471,7 @@ rrrr,011111110001 + wwww,010001010100:F_I:::trncf_dul\n *v850e3v5\n \"trncf.dul r<reg2e>, r<reg3e>\"\n {\n-  unsigned64 ans;\n+  uint64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3493,7 +3493,7 @@ rrrr,011111100001 + wwwww,10001010000:F_I:::trncf_dw\n *v850e3v5\n \"trncf.dw r<reg2e>, r<reg3>\"\n {\n-  int32 ans;\n+  int32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3514,7 +3514,7 @@ rrrr,011111110001 + wwwww,10001010000:F_I:::trncf_duw\n *v850e3v5\n \"trncf.duw r<reg2e>, r<reg3>\"\n {\n-  uint32 ans;\n+  uint32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3535,7 +3535,7 @@ rrrrr,11111100001 + wwww,010001000100:F_I:::trncf_sl\n *v850e3v5\n \"trncf.sl r<reg2>, r<reg3e>\"\n {\n-  signed64 ans;\n+  int64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3555,7 +3555,7 @@ rrrrr,11111110001 + wwww,010001000100:F_I:::trncf_sul\n *v850e3v5\n \"trncf.sul r<reg2>, r<reg3e>\"\n {\n-  unsigned64 ans;\n+  uint64_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3575,7 +3575,7 @@ rrrrr,11111100001 + wwwww,10001000000:F_I:::trncf_sw\n *v850e3v5\n \"trncf.sw r<reg2>, r<reg3>\"\n {\n-  int32 ans;\n+  int32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3596,7 +3596,7 @@ rrrrr,11111110001 + wwwww,10001000000:F_I:::trncf_suw\n *v850e3v5\n \"trncf.suw r<reg2>, r<reg3>\"\n {\n-  uint32 ans;\n+  uint32_t ans;\n   sim_fpu wop;\n   sim_fpu_status status;\n \n@@ -3808,7 +3808,7 @@ rrrr,011111100000+0000011011011000:C:::modadd\n \"modadd r<reg2e>\"\n {\n   reg_t r;\n-  int32 inc;\n+  int32_t inc;\n   reg_t max;\n \n   TRACE_ALU_INPUT1 (GR[reg2e]);"
    }
  ]
}