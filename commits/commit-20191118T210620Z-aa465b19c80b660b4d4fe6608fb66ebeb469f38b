{
  "sha": "aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWE0NjViMTljODBiNjYwYjRkNGZlNjYwOGZiNjZlYmViNDY5ZjM4Yg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-02T01:11:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-18T21:06:20Z"
    },
    "message": "[GOLD] OSABI not set when STT_GNU_IFUNC or STB_GNU_UNIQUE symbols output\n\nThis patch arranges to have OSABI set to ELFOSABI_GNU (if not set to\nsome other non-zero value) when gold outputs an ifunc local or global\nsymbol, or a unique global symbol to either .dynsym or .symtab.\nSTT_GNU_IFUNC and STB_GNU_UNIQUE have values in the LOOS to HIOS range\nand therefore require interpretation according to OSABI.\n\nI'm not sure why parameters->target() is const Target& while\nparameters->sized_target() is Sized_target*, but it's inconvenient to\nuse the latter in Symbol_table::finalize.  So this patch adds another\nconst_cast complained about in layout.cc and gold.cc.\n\n\tPR 24853\n\t* symtab.h (set_has_gnu_output, has_gnu_output_): New.\n\t* symtab.cc (Symbol_table::Symbol_table): Init has_gnu_output_.\n\t(Symbol_table::finalize): Set ELFOSABI_GNU when has_gnu_output_.\n\t(Symbol_table::set_dynsym_indexes, Symbol_table::sized_finalize):\n\tCall set_has_gnu_output for STT_GNU_IFUNC and STB_GNU_UNIQUE globals.\n\t* object.cc (Sized_relobj_file::do_finalize_local_symbols): Call\n\tset_has_gnu_output when STT_GNU_IFUNC locals will be output.",
    "tree": {
      "sha": "db8c348a1928f2ad30917daaf2234cb0542b8eb2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db8c348a1928f2ad30917daaf2234cb0542b8eb2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94698d0198f4018b2ac248b248868cb7a5c0cc43",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94698d0198f4018b2ac248b248868cb7a5c0cc43",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/94698d0198f4018b2ac248b248868cb7a5c0cc43"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 52,
    "deletions": 4
  },
  "files": [
    {
      "sha": "9d71814ae313da2df09d634e702ddfdb70dec6cc",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
      "patch": "@@ -1,3 +1,14 @@\n+2019-11-19  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24853\n+\t* symtab.h (set_has_gnu_output, has_gnu_output_): New.\n+\t* symtab.cc (Symbol_table::Symbol_table): Init has_gnu_output_.\n+\t(Symbol_table::finalize): Set ELFOSABI_GNU when has_gnu_output_.\n+\t(Symbol_table::set_dynsym_indexes, Symbol_table::sized_finalize):\n+\tCall set_has_gnu_output for STT_GNU_IFUNC and STB_GNU_UNIQUE globals.\n+\t* object.cc (Sized_relobj_file::do_finalize_local_symbols): Call\n+\tset_has_gnu_output when STT_GNU_IFUNC locals will be output.\n+\n 2019-11-11  Miguel Saldivar  <saldivarcher@gmail.com>\n \n \tPR 24996"
    },
    {
      "sha": "959cbc5f2768dc65b03fe1a9d6d6273670ef7822",
      "filename": "gold/object.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/object.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/object.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/object.cc?ref=aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
      "patch": "@@ -2646,6 +2646,10 @@ Sized_relobj_file<size, big_endian>::do_finalize_local_symbols(\n \t      lv->set_output_symtab_index(index);\n \t      ++index;\n \t    }\n+\t  if (lv->is_ifunc_symbol()\n+\t      && (lv->has_output_symtab_entry()\n+\t\t  || lv->needs_output_dynsym_entry()))\n+\t    symtab->set_has_gnu_output();\n \t  break;\n \tcase CFLV_DISCARDED:\n \tcase CFLV_ERROR:"
    },
    {
      "sha": "99e97210bda18f3ab867925bb434bd3b15fc5f0a",
      "filename": "gold/symtab.cc",
      "status": "modified",
      "additions": 31,
      "deletions": 4,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/symtab.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/symtab.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/symtab.cc?ref=aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
      "patch": "@@ -565,8 +565,8 @@ Symbol::set_undefined()\n \n Symbol_table::Symbol_table(unsigned int count,\n                            const Version_script_info& version_script)\n-  : saw_undefined_(0), offset_(0), table_(count), namepool_(),\n-    forwarders_(), commons_(), tls_commons_(), small_commons_(),\n+  : saw_undefined_(0), offset_(0), has_gnu_output_(false), table_(count),\n+    namepool_(), forwarders_(), commons_(), tls_commons_(), small_commons_(),\n     large_commons_(), forced_locals_(), warnings_(),\n     version_script_(version_script), gc_(NULL), icf_(NULL),\n     target_symbols_()\n@@ -2565,6 +2565,8 @@ Symbol_table::set_dynsym_indexes(unsigned int index,\n           ++index;\n           ++forced_local_count;\n \t  dynpool->add(sym->name(), false, NULL);\n+\t  if (sym->type() == elfcpp::STT_GNU_IFUNC)\n+\t    this->set_has_gnu_output();\n         }\n     }\n   *pforced_local_count = forced_local_count;\n@@ -2583,7 +2585,13 @@ Symbol_table::set_dynsym_indexes(unsigned int index,\n           if (!sym->should_add_dynsym_entry(this))\n             sym->set_dynsym_index(-1U);\n           else\n-            dyn_symbols.push_back(sym);\n+\t    {\n+\t      dyn_symbols.push_back(sym);\n+\t      if (sym->type() == elfcpp::STT_GNU_IFUNC\n+\t\t  || (sym->binding() == elfcpp::STB_GNU_UNIQUE\n+\t\t      && parameters->options().gnu_unique()))\n+\t\tthis->set_has_gnu_output();\n+\t    }\n         }\n \n       return parameters->target().set_dynsym_indexes(&dyn_symbols, index, syms,\n@@ -2611,6 +2619,10 @@ Symbol_table::set_dynsym_indexes(unsigned int index,\n \t  ++index;\n \t  syms->push_back(sym);\n \t  dynpool->add(sym->name(), false, NULL);\n+\t  if (sym->type() == elfcpp::STT_GNU_IFUNC\n+\t      || (sym->binding() == elfcpp::STB_GNU_UNIQUE\n+\t\t  && parameters->options().gnu_unique()))\n+\t    this->set_has_gnu_output();\n \n \t  // Record any version information, except those from\n \t  // as-needed libraries not seen to be needed.  Note that the\n@@ -2696,6 +2708,13 @@ Symbol_table::finalize(off_t off, off_t dynoff, size_t dyn_global_index,\n   else\n     gold_unreachable();\n \n+  if (this->has_gnu_output_)\n+    {\n+      Target* target = const_cast<Target*>(&parameters->target());\n+      if (target->osabi() == elfcpp::ELFOSABI_NONE)\n+\ttarget->set_osabi(elfcpp::ELFOSABI_GNU);\n+    }\n+\n   // Now that we have the final symbol table, we can reliably note\n   // which symbols should get warnings.\n   this->warnings_.note_warnings(this);\n@@ -2747,6 +2766,8 @@ Symbol_table::sized_finalize(off_t off, Stringpool* pool,\n \t{\n \t  this->add_to_final_symtab<size>(sym, pool, &index, &off);\n \t  ++*plocal_symcount;\n+\t  if (sym->type() == elfcpp::STT_GNU_IFUNC)\n+\t    this->set_has_gnu_output();\n \t}\n     }\n \n@@ -2757,7 +2778,13 @@ Symbol_table::sized_finalize(off_t off, Stringpool* pool,\n     {\n       Symbol* sym = p->second;\n       if (this->sized_finalize_symbol<size>(sym))\n-\tthis->add_to_final_symtab<size>(sym, pool, &index, &off);\n+\t{\n+\t  this->add_to_final_symtab<size>(sym, pool, &index, &off);\n+\t  if (sym->type() == elfcpp::STT_GNU_IFUNC\n+\t      || (sym->binding() == elfcpp::STB_GNU_UNIQUE\n+\t\t  && parameters->options().gnu_unique()))\n+\t    this->set_has_gnu_output();\n+\t}\n     }\n \n   // Now do target-specific symbols."
    },
    {
      "sha": "dd931f5f04164a786510f3bde24f1109e7ab972d",
      "filename": "gold/symtab.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa465b19c80b660b4d4fe6608fb66ebeb469f38b/gold/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/symtab.h?ref=aa465b19c80b660b4d4fe6608fb66ebeb469f38b",
      "patch": "@@ -1580,6 +1580,10 @@ class Symbol_table\n   saw_undefined() const\n   { return this->saw_undefined_; }\n \n+  void\n+  set_has_gnu_output()\n+  { this->has_gnu_output_ = true; }\n+\n   // Allocate the common symbols\n   void\n   allocate_commons(Layout*, Mapfile*);\n@@ -1981,6 +1985,8 @@ class Symbol_table\n   // The number of global dynamic symbols (including forced-local symbols),\n   // or 0 if none.\n   unsigned int dynamic_count_;\n+  // Set if a STT_GNU_IFUNC or STB_GNU_UNIQUE symbol will be output.\n+  bool has_gnu_output_;\n   // The symbol hash table.\n   Symbol_table_type table_;\n   // A pool of symbol names.  This is used for all global symbols."
    }
  ]
}