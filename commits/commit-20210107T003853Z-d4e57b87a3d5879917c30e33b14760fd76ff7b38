{
  "sha": "d4e57b87a3d5879917c30e33b14760fd76ff7b38",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDRlNTdiODdhM2Q1ODc5OTE3YzMwZTMzYjE0NzYwZmQ3NmZmN2IzOA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-29T18:41:51Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-01-07T00:38:53Z"
    },
    "message": "bfin: Check bfd_link_hash_indirect\n\nAdd bfd_link_hash_indirect check to check_relocs.  This fixed:\n\nFAIL: ld-elf/pr26979a\nFAIL: ld-elf/pr26979b\nFAIL: Symbol export class test (final shared object)\n\n\t* elf32-bfin.c (bfin_check_relocs): Check bfd_link_hash_indirect.\n\t(bfinfdpic_check_relocs): Likewise.",
    "tree": {
      "sha": "22a03a00ae91860c71bc1af120a18844d406bc54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/22a03a00ae91860c71bc1af120a18844d406bc54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d4e57b87a3d5879917c30e33b14760fd76ff7b38",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4e57b87a3d5879917c30e33b14760fd76ff7b38",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d4e57b87a3d5879917c30e33b14760fd76ff7b38",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4e57b87a3d5879917c30e33b14760fd76ff7b38/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6987d5a1bbf61f56ef188b794a494fb495c9660a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6987d5a1bbf61f56ef188b794a494fb495c9660a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6987d5a1bbf61f56ef188b794a494fb495c9660a"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 14,
    "deletions": 1
  },
  "files": [
    {
      "sha": "3a219c7f4b7d6ecc36ebd53be284da513cb3ff43",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4e57b87a3d5879917c30e33b14760fd76ff7b38/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4e57b87a3d5879917c30e33b14760fd76ff7b38/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=d4e57b87a3d5879917c30e33b14760fd76ff7b38",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf32-bfin.c (bfin_check_relocs): Check bfd_link_hash_indirect.\n+\t(bfinfdpic_check_relocs): Likewise.\n+\n 2021-01-06  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-score.c (s3_bfd_score_info_to_howto): Report an error"
    },
    {
      "sha": "7c926b8a96ebb083daf875de25536067c8627ccb",
      "filename": "bfd/elf32-bfin.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4e57b87a3d5879917c30e33b14760fd76ff7b38/bfd/elf32-bfin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4e57b87a3d5879917c30e33b14760fd76ff7b38/bfd/elf32-bfin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-bfin.c?ref=d4e57b87a3d5879917c30e33b14760fd76ff7b38",
      "patch": "@@ -1197,6 +1197,9 @@ bfin_check_relocs (bfd * abfd,\n       else\n \t{\n \t  h = sym_hashes[r_symndx - symtab_hdr->sh_info];\n+\t  while (h->root.type == bfd_link_hash_indirect\n+\t\t || h->root.type == bfd_link_hash_warning)\n+\t    h = (struct elf_link_hash_entry *)h->root.u.i.link;\n \t}\n \n       switch (ELF32_R_TYPE (rel->r_info))\n@@ -4523,7 +4526,12 @@ bfinfdpic_check_relocs (bfd *abfd, struct bfd_link_info *info,\n       if (r_symndx < symtab_hdr->sh_info)\n \th = NULL;\n       else\n-\th = sym_hashes[r_symndx - symtab_hdr->sh_info];\n+\t{\n+\t  h = sym_hashes[r_symndx - symtab_hdr->sh_info];\n+\t  while (h->root.type == bfd_link_hash_indirect\n+\t\t || h->root.type == bfd_link_hash_warning)\n+\t    h = (struct elf_link_hash_entry *) h->root.u.i.link;\n+\t}\n \n       switch (ELF32_R_TYPE (rel->r_info))\n \t{"
    }
  ]
}