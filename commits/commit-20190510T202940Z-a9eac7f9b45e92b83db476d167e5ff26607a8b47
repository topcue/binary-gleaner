{
  "sha": "a9eac7f9b45e92b83db476d167e5ff26607a8b47",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTllYWM3ZjliNDVlOTJiODNkYjQ3NmQxNjdlNWZmMjY2MDdhOGI0Nw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-05-10T20:29:00Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-05-10T20:29:40Z"
    },
    "message": "cc-with-tweaks: show dwz stderr and verify result\n\nWhen running the gdb.base/index-cache.exp test case with the\ncc-with-dwz-m board, I noticed that the final executable didn't actually\ncontain a .gnu_debugaltlink section with the name of the external dwz\nfile:\n\n    $ readelf --debug-dump=links testsuite/outputs/gdb.base/index-cache/index-cache\n    * empty *\n\nRunning dwz by hand, I realized it's because dwz complains that the\noutput .debug_info section is empty and fails:\n\n    $ gcc ~/src/binutils-gdb/gdb/testsuite/gdb.base/index-cache.c -g3 -O0 -o a && cp a b\n    $ dwz -m foo a b\n    dwz: foo: .debug_info section not present\n    $ echo $?\n    1\n\nThis is because index-cache.c is trivial (just an empty main) and dwz\ndoesn't find anything to factor out to the dwz file. [1]\n\nI think that cc-with-tweaks should fail in this scenario: if the user\nasks for an external dwz file to be generated (the -m flag), then it\nshould be an error if cc-with-tweaks doesn't manage to produce an\nexecutable with the proper link to this external dwz file.  Otherwise,\nthe test runs with a regular non-dwzified executable, which gives a\nfalse sense of security about whether the feature under test works with\ndwzified executables.\n\nSo this patch adds checks for that after invoking dwz.  It also removes\nthe 2>&1 to allow the error message to be printed like so:\n\n    Running /home/smarchi/src/binutils-gdb/gdb/testsuite/gdb.base/index-cache.exp ...\n    gdb compile failed, dwz: /home/smarchi/build/binutils-gdb/gdb/testsuite/outputs/gdb.base/index-cache/index-cache.dwz: .debug_info section not present\n\n- In the -m case (multi-file compression), we check if the expected output file\n  exists.\n- In the -z case (single-file compression), we check if the file\n  contents has changed.  This should catch cases where dwz doesn't modify the\n  file because it's not worth it.\n\nIt was chosen not to check for dwz's exit code, as it is not very\nreliable up to dwz 0.12.\n\nWith this patch, fewer tests will pass than before with the\ncc-with-dwz and cc-with-dwz-m boards, but those were false positives\nanyway, as the test ran with regular executables.\n\n[1] Note that dwz has been patched by Tom de Vries to work correctly in\nthis case, so we can use dwz master to run the test:\n\nhttps://sourceware.org/git/?p=dwz.git;a=commit;h=08becc8b33453b6d013a65e7eeae57fc1881e801\n\ngdb/ChangeLog:\n\n\t* contrib/cc-with-tweaks.sh: Validate dwz's work.",
    "tree": {
      "sha": "00b98a987371db3284f28850c55925f35166b635",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/00b98a987371db3284f28850c55925f35166b635"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a9eac7f9b45e92b83db476d167e5ff26607a8b47",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9eac7f9b45e92b83db476d167e5ff26607a8b47",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a9eac7f9b45e92b83db476d167e5ff26607a8b47",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9eac7f9b45e92b83db476d167e5ff26607a8b47/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a97c8e56362b77fcbbf5b57e5053356320273977",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a97c8e56362b77fcbbf5b57e5053356320273977",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a97c8e56362b77fcbbf5b57e5053356320273977"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 36,
    "deletions": 2
  },
  "files": [
    {
      "sha": "4da409633a9733b63bc746d7add7ac7bf1a73498",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9eac7f9b45e92b83db476d167e5ff26607a8b47/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9eac7f9b45e92b83db476d167e5ff26607a8b47/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a9eac7f9b45e92b83db476d167e5ff26607a8b47",
      "patch": "@@ -1,3 +1,7 @@\n+2019-05-10  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* contrib/cc-with-tweaks.sh: Validate dwz's work.\n+\n 2019-05-10  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (catch_ada_completer): New function."
    },
    {
      "sha": "7df16bc6c1ca03d7acc502b81752d6bbfe5e9a4e",
      "filename": "gdb/contrib/cc-with-tweaks.sh",
      "status": "modified",
      "additions": 32,
      "deletions": 2,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9eac7f9b45e92b83db476d167e5ff26607a8b47/gdb/contrib/cc-with-tweaks.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9eac7f9b45e92b83db476d167e5ff26607a8b47/gdb/contrib/cc-with-tweaks.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/contrib/cc-with-tweaks.sh?ref=a9eac7f9b45e92b83db476d167e5ff26607a8b47",
      "patch": "@@ -180,11 +180,41 @@ if [ \"$want_index\" = true ]; then\n fi\n \n if [ \"$want_dwz\" = true ]; then\n-    $DWZ \"$output_file\" > /dev/null 2>&1\n+    # Validate dwz's result by checking if the executable was modified.\n+    cp \"$output_file\" \"${output_file}.copy\"\n+    $DWZ \"$output_file\" > /dev/null\n+    cmp \"$output_file\" \"$output_file.copy\" > /dev/null\n+    cmp_rc=$?\n+    rm -f \"${output_file}.copy\"\n+\n+    case $cmp_rc in\n+    0)\n+\techo \"$myname: dwz did not modify ${output_file}.\"\n+        exit 1\n+\t;;\n+    1)\n+\t# File was modified, great.\n+\t;;\n+    *)\n+\t# Other cmp error, it presumably has already printed something on\n+\t# stderr.\n+\texit 1\n+\t;;\n+    esac\n elif [ \"$want_multi\" = true ]; then\n+    # Remove the dwz output file if it exists, so we don't mistake it for a\n+    # new file in case dwz fails.\n+    rm -f \"${output_file}.dwz\"\n+\n     cp $output_file ${output_file}.alt\n-    $DWZ -m ${output_file}.dwz \"$output_file\" ${output_file}.alt > /dev/null 2>&1\n+    $DWZ -m ${output_file}.dwz \"$output_file\" ${output_file}.alt > /dev/null\n     rm -f ${output_file}.alt\n+\n+    # Validate dwz's work by checking if the expected output file exists.\n+    if [ ! -f \"${output_file}.dwz\" ]; then\n+\techo \"$myname: dwz file ${output_file}.dwz missing.\"\n+\texit 1\n+    fi\n fi\n \n if [ \"$want_dwp\" = true ]; then"
    }
  ]
}