{
  "sha": "4c398cc06d333fcb04772c04ea18db68587e8a1f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGMzOThjYzA2ZDMzM2ZjYjA0NzcyYzA0ZWExOGRiNjg1ODdlOGExZg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-03T11:25:12Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-05-03T11:25:12Z"
    },
    "message": "x86: don't request useless overflow checking\n\nRelocations with a bitsize matching the architecture's address width\ncan't usefully use an overflow checking approach other than \"dont\" or\n\"signed\": All others involve perhaps complex calculations in\n_bfd_relocate_contents() (or, not as severe, in bfd_check_overflow())\nwithout ever finding anything to complain about - because of the address\nwidth masking applied. Avoid this unnecessary overhead and switch all\nsuch reloc types to \"dont\".\n\nNote that \"signed\" checking with rela relocations (i.e. x86-64 here) is\nonly going to be useful if the addend actually got passed to\n_bfd_relocate_contents() (and maybe others) instead of bogusly adding in\nprior section contents (which apparently is assumed to be zero, and\nhence again no overflow would ever be detected). See\nhttps://sourceware.org/pipermail/binutils/2021-April/116164.html.",
    "tree": {
      "sha": "e8f0dcc93460fdf17621e9d37ed13ec6beb9bff2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e8f0dcc93460fdf17621e9d37ed13ec6beb9bff2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4c398cc06d333fcb04772c04ea18db68587e8a1f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c398cc06d333fcb04772c04ea18db68587e8a1f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4c398cc06d333fcb04772c04ea18db68587e8a1f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c398cc06d333fcb04772c04ea18db68587e8a1f/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d389a1a7692d247b6153fc6a98ebc43d7070fc2e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d389a1a7692d247b6153fc6a98ebc43d7070fc2e"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 47,
    "deletions": 40
  },
  "files": [
    {
      "sha": "2659710787a9b97e8f475565cce8dfa3bdbaa7b5",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4c398cc06d333fcb04772c04ea18db68587e8a1f",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* elf32-i386.c (elf_howto_table): Switch all 32-bit relocs to\n+\tcomplain_overflow_dont.\n+\t* elf64-x86-64.c (x86_64_elf_howto_table): Switch all 64-bit\n+\trelocs to complain_overflow_dont.\n+\n 2021-05-03  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-ppc.c (allocate_dynrelocs): Keep dyn_relocs for undefweak"
    },
    {
      "sha": "4451f9b451c4fff6e206d332def768199b225441",
      "filename": "bfd/elf32-i386.c",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/elf32-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/elf32-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-i386.c?ref=4c398cc06d333fcb04772c04ea18db68587e8a1f",
      "patch": "@@ -33,34 +33,34 @@ static reloc_howto_type elf_howto_table[]=\n   HOWTO(R_386_NONE, 0, 3, 0, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_NONE\",\n \ttrue, 0x00000000, 0x00000000, false),\n-  HOWTO(R_386_32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_PC32, 0, 2, 32, true, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_PC32, 0, 2, 32, true, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_PC32\",\n \ttrue, 0xffffffff, 0xffffffff, true),\n-  HOWTO(R_386_GOT32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_GOT32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_GOT32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_PLT32, 0, 2, 32, true, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_PLT32, 0, 2, 32, true, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_PLT32\",\n \ttrue, 0xffffffff, 0xffffffff, true),\n-  HOWTO(R_386_COPY, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_COPY, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_COPY\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_GLOB_DAT, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_GLOB_DAT, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_GLOB_DAT\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_JUMP_SLOT, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_JUMP_SLOT, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_JUMP_SLOT\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_RELATIVE, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_RELATIVE, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_RELATIVE\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_GOTOFF, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_GOTOFF, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_GOTOFF\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_GOTPC, 0, 2, 32, true, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_GOTPC, 0, 2, 32, true, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_GOTPC\",\n \ttrue, 0xffffffff, 0xffffffff, true),\n \n@@ -72,22 +72,22 @@ static reloc_howto_type elf_howto_table[]=\n #define R_386_ext_offset (R_386_TLS_TPOFF - R_386_standard)\n \n   /* These relocs are a GNU extension.  */\n-  HOWTO(R_386_TLS_TPOFF, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_TPOFF, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_TPOFF\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_IE, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_IE, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_IE\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_GOTIE, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_GOTIE, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_GOTIE\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_LE, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_LE, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_LE\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_GD, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_GD, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_GD\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_LDM, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_LDM, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_LDM\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n   HOWTO(R_386_16, 0, 1, 16, false, 0, complain_overflow_bitfield,\n@@ -106,40 +106,40 @@ static reloc_howto_type elf_howto_table[]=\n #define R_386_ext (R_386_PC8 + 1 - R_386_ext_offset)\n #define R_386_tls_offset (R_386_TLS_LDO_32 - R_386_ext)\n   /* These are common with Solaris TLS implementation.  */\n-  HOWTO(R_386_TLS_LDO_32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_LDO_32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_LDO_32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_IE_32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_IE_32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_IE_32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_LE_32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_LE_32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_LE_32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_DTPMOD32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_DTPMOD32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_DTPMOD32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_DTPOFF32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_DTPOFF32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_DTPOFF32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_TPOFF32, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_TPOFF32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_TPOFF32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_SIZE32, 0, 2, 32, false, 0, complain_overflow_unsigned,\n+  HOWTO(R_386_SIZE32, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_SIZE32\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_TLS_GOTDESC, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_GOTDESC, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_GOTDESC\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n   HOWTO(R_386_TLS_DESC_CALL, 0, 3, 0, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_DESC_CALL\",\n \tfalse, 0, 0, false),\n-  HOWTO(R_386_TLS_DESC, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_TLS_DESC, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_TLS_DESC\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_IRELATIVE, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_IRELATIVE, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_IRELATIVE\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n-  HOWTO(R_386_GOT32X, 0, 2, 32, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_386_GOT32X, 0, 2, 32, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_386_GOT32X\",\n \ttrue, 0xffffffff, 0xffffffff, false),\n "
    },
    {
      "sha": "83a749e6ddc2c4869ff9743db2bf8d4e2bc2807e",
      "filename": "bfd/elf64-x86-64.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/elf64-x86-64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c398cc06d333fcb04772c04ea18db68587e8a1f/bfd/elf64-x86-64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-x86-64.c?ref=4c398cc06d333fcb04772c04ea18db68587e8a1f",
      "patch": "@@ -47,7 +47,7 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n   HOWTO(R_X86_64_NONE, 0, 3, 0, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_NONE\",\tfalse, 0x00000000, 0x00000000,\n \tfalse),\n-  HOWTO(R_X86_64_64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_64\", false, MINUS_ONE, MINUS_ONE,\n \tfalse),\n   HOWTO(R_X86_64_PC32, 0, 2, 32, true, 0, complain_overflow_signed,\n@@ -62,13 +62,13 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n   HOWTO(R_X86_64_COPY, 0, 2, 32, false, 0, complain_overflow_bitfield,\n \tbfd_elf_generic_reloc, \"R_X86_64_COPY\", false, 0xffffffff, 0xffffffff,\n \tfalse),\n-  HOWTO(R_X86_64_GLOB_DAT, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_GLOB_DAT, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_GLOB_DAT\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n-  HOWTO(R_X86_64_JUMP_SLOT, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_JUMP_SLOT, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_JUMP_SLOT\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n-  HOWTO(R_X86_64_RELATIVE, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_RELATIVE, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_RELATIVE\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n   HOWTO(R_X86_64_GOTPCREL, 0, 2, 32, true, 0, complain_overflow_signed,\n@@ -88,13 +88,13 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n \tbfd_elf_generic_reloc, \"R_X86_64_8\", false, 0xff, 0xff, false),\n   HOWTO(R_X86_64_PC8, 0, 0, 8, true, 0, complain_overflow_signed,\n \tbfd_elf_generic_reloc, \"R_X86_64_PC8\", false, 0xff, 0xff, true),\n-  HOWTO(R_X86_64_DTPMOD64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_DTPMOD64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_DTPMOD64\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n-  HOWTO(R_X86_64_DTPOFF64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_DTPOFF64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_DTPOFF64\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n-  HOWTO(R_X86_64_TPOFF64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_TPOFF64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_TPOFF64\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n   HOWTO(R_X86_64_TLSGD, 0, 2, 32, true, 0, complain_overflow_signed,\n@@ -112,10 +112,10 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n   HOWTO(R_X86_64_TPOFF32, 0, 2, 32, false, 0, complain_overflow_signed,\n \tbfd_elf_generic_reloc, \"R_X86_64_TPOFF32\", false, 0xffffffff,\n \t0xffffffff, false),\n-  HOWTO(R_X86_64_PC64, 0, 4, 64, true, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_PC64, 0, 4, 64, true, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_PC64\", false, MINUS_ONE, MINUS_ONE,\n \ttrue),\n-  HOWTO(R_X86_64_GOTOFF64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_GOTOFF64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_GOTOFF64\",\n \tfalse, MINUS_ONE, MINUS_ONE, false),\n   HOWTO(R_X86_64_GOTPC32, 0, 2, 32, true, 0, complain_overflow_signed,\n@@ -139,7 +139,7 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n   HOWTO(R_X86_64_SIZE32, 0, 2, 32, false, 0, complain_overflow_unsigned,\n \tbfd_elf_generic_reloc, \"R_X86_64_SIZE32\", false, 0xffffffff, 0xffffffff,\n \tfalse),\n-  HOWTO(R_X86_64_SIZE64, 0, 4, 64, false, 0, complain_overflow_unsigned,\n+  HOWTO(R_X86_64_SIZE64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_SIZE64\", false, MINUS_ONE, MINUS_ONE,\n \tfalse),\n   HOWTO(R_X86_64_GOTPC32_TLSDESC, 0, 2, 32, true, 0,\n@@ -151,13 +151,13 @@ static reloc_howto_type x86_64_elf_howto_table[] =\n \t\"R_X86_64_TLSDESC_CALL\",\n \tfalse, 0, 0, false),\n   HOWTO(R_X86_64_TLSDESC, 0, 4, 64, false, 0,\n-\tcomplain_overflow_bitfield, bfd_elf_generic_reloc,\n+\tcomplain_overflow_dont, bfd_elf_generic_reloc,\n \t\"R_X86_64_TLSDESC\",\n \tfalse, MINUS_ONE, MINUS_ONE, false),\n-  HOWTO(R_X86_64_IRELATIVE, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_IRELATIVE, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_IRELATIVE\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n-  HOWTO(R_X86_64_RELATIVE64, 0, 4, 64, false, 0, complain_overflow_bitfield,\n+  HOWTO(R_X86_64_RELATIVE64, 0, 4, 64, false, 0, complain_overflow_dont,\n \tbfd_elf_generic_reloc, \"R_X86_64_RELATIVE64\", false, MINUS_ONE,\n \tMINUS_ONE, false),\n   HOWTO(R_X86_64_PC32_BND, 0, 2, 32, true, 0, complain_overflow_signed,"
    }
  ]
}