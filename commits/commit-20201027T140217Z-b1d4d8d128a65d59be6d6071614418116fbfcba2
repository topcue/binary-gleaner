{
  "sha": "b1d4d8d128a65d59be6d6071614418116fbfcba2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjFkNGQ4ZDEyOGE2NWQ1OWJlNmQ2MDcxNjE0NDE4MTE2ZmJmY2JhMg==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-10-27T09:56:03Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-10-27T14:02:17Z"
    },
    "message": "gdb/breakpoint: use gdb::option for the '-force' flag\n\nUse the gdb::option framework for the '-force' flag of the 'condition'\ncommand.  This gives tab-completion ability for the flag.\n\ngdb/ChangeLog:\n2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* breakpoint.c (struct condition_command_opts): New struct.\n\t(condition_command_option_defs): New static global.\n\t(make_condition_command_options_def_group): New function.\n\t(condition_completer): Update to consider the '-force' flag.\n\t(condition_command): Use gdb::option for the '-force' flag.\n\ngdb/testsuite/ChangeLog:\n2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.base/condbreak.exp: Update the completion tests to\n\tconsider the '-force' flag.",
    "tree": {
      "sha": "fcafd50508e787b4d5dcc59d742eef5b7899a8b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fcafd50508e787b4d5dcc59d742eef5b7899a8b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b1d4d8d128a65d59be6d6071614418116fbfcba2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1d4d8d128a65d59be6d6071614418116fbfcba2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b1d4d8d128a65d59be6d6071614418116fbfcba2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1d4d8d128a65d59be6d6071614418116fbfcba2/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bd24c5d65b4aa7c98604d2260e4233f26e0ab836",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd24c5d65b4aa7c98604d2260e4233f26e0ab836",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bd24c5d65b4aa7c98604d2260e4233f26e0ab836"
    }
  ],
  "stats": {
    "total": 105,
    "additions": 85,
    "deletions": 20
  },
  "files": [
    {
      "sha": "81d4c83a2ca14c4d3cd228da4e33d56790c3fac6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b1d4d8d128a65d59be6d6071614418116fbfcba2",
      "patch": "@@ -1,3 +1,11 @@\n+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* breakpoint.c (struct condition_command_opts): New struct.\n+\t(condition_command_option_defs): New static global.\n+\t(make_condition_command_options_def_group): New function.\n+\t(condition_completer): Update to consider the '-force' flag.\n+\t(condition_command): Use gdb::option for the '-force' flag.\n+\n 2020-10-27  Tom de Vries  <tdevries@suse.de>\n \n \t* symtab.c (find_pc_sect_compunit_symtab): Include STATIC_BLOCK"
    },
    {
      "sha": "ba42cb5d73077243c76b4aa7ac019314d3b5b676",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 64,
      "deletions": 20,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=b1d4d8d128a65d59be6d6071614418116fbfcba2",
      "patch": "@@ -975,30 +975,70 @@ set_breakpoint_condition (struct breakpoint *b, const char *exp,\n   gdb::observers::breakpoint_modified.notify (b);\n }\n \n+/* The options for the \"condition\" command.  */\n+\n+struct condition_command_opts\n+{\n+  /* For \"-force\".  */\n+  bool force_condition = false;\n+};\n+\n+static const gdb::option::option_def condition_command_option_defs[] = {\n+\n+  gdb::option::flag_option_def<condition_command_opts> {\n+    \"force\",\n+    [] (condition_command_opts *opts) { return &opts->force_condition; },\n+    N_(\"Set the condition even if it is invalid for all current locations.\"),\n+  },\n+\n+};\n+\n+/* Create an option_def_group for the \"condition\" options, with\n+   CC_OPTS as context.  */\n+\n+static inline gdb::option::option_def_group\n+make_condition_command_options_def_group (condition_command_opts *cc_opts)\n+{\n+  return {{condition_command_option_defs}, cc_opts};\n+}\n+\n /* Completion for the \"condition\" command.  */\n \n static void\n condition_completer (struct cmd_list_element *cmd,\n \t\t     completion_tracker &tracker,\n-\t\t     const char *text, const char *word)\n+\t\t     const char *text, const char * /*word*/)\n {\n-  const char *space;\n+  bool has_no_arguments = (*text == '\\0');\n+  condition_command_opts cc_opts;\n+  const auto group = make_condition_command_options_def_group (&cc_opts);\n+  if (gdb::option::complete_options\n+      (tracker, &text, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_ERROR, group))\n+    return;\n \n   text = skip_spaces (text);\n-  space = skip_to_space (text);\n+  const char *space = skip_to_space (text);\n   if (*space == '\\0')\n     {\n       int len;\n       struct breakpoint *b;\n \n       if (text[0] == '$')\n \t{\n+\t  tracker.advance_custom_word_point_by (1);\n \t  /* We don't support completion of history indices.  */\n \t  if (!isdigit (text[1]))\n \t    complete_internalvar (tracker, &text[1]);\n \t  return;\n \t}\n \n+      /* Suggest the \"-force\" flag if no arguments are given.  If\n+\t arguments were passed, they either already include the flag,\n+\t or we are beyond the point of suggesting it because it's\n+\t positionally the first argument.  */\n+      if (has_no_arguments)\n+\tgdb::option::complete_on_all_options (tracker, group);\n+\n       /* We're completing the breakpoint number.  */\n       len = strlen (text);\n \n@@ -1015,8 +1055,11 @@ condition_completer (struct cmd_list_element *cmd,\n       return;\n     }\n \n-  /* We're completing the expression part.  */\n-  text = skip_spaces (space);\n+  /* We're completing the expression part.  Skip the breakpoint num.  */\n+  const char *exp_start = skip_spaces (space);\n+  tracker.advance_custom_word_point_by (exp_start - text);\n+  text = exp_start;\n+  const char *word = advance_to_expression_complete_word_point (tracker, text);\n   expression_completer (cmd, tracker, text, word);\n }\n \n@@ -1035,15 +1078,10 @@ condition_command (const char *arg, int from_tty)\n   p = arg;\n \n   /* Check if the \"-force\" flag was passed.  */\n-  bool force = false;\n-  const char *tok = skip_spaces (p);\n-  const char *end_tok = skip_to_space (tok);\n-  int toklen = end_tok - tok;\n-  if (toklen >= 1 && strncmp (tok, \"-force\", toklen) == 0)\n-    {\n-      force = true;\n-      p = end_tok + 1;\n-    }\n+  condition_command_opts cc_opts;\n+  const auto group = make_condition_command_options_def_group (&cc_opts);\n+  gdb::option::process_options\n+    (&p, gdb::option::PROCESS_OPTIONS_UNKNOWN_IS_ERROR, group);\n \n   bnum = get_number (&p);\n   if (bnum == 0)\n@@ -1064,7 +1102,7 @@ condition_command (const char *arg, int from_tty)\n \t\t     \" a %s stop condition defined for this breakpoint.\"),\n \t\t   ext_lang_capitalized_name (extlang));\n \t  }\n-\tset_breakpoint_condition (b, p, from_tty, force);\n+\tset_breakpoint_condition (b, p, from_tty, cc_opts.force_condition);\n \n \tif (is_breakpoint (b))\n \t  update_global_location_list (UGLL_MAY_INSERT);\n@@ -15617,13 +15655,19 @@ Type a line containing \\\"end\\\" to indicate the end of them.\\n\\\n Give \\\"silent\\\" as the first line to make the breakpoint silent;\\n\\\n then no output is printed when it is hit, except what the commands print.\"));\n \n-  c = add_com (\"condition\", class_breakpoint, condition_command, _(\"\\\n+  const auto cc_opts = make_condition_command_options_def_group (nullptr);\n+  static std::string condition_command_help\n+    = gdb::option::build_help (_(\"\\\n Specify breakpoint number N to break only if COND is true.\\n\\\n-Usage is `condition [-force] N COND', where N is an integer and COND\\n\\\n+Usage is `condition [OPTION] N COND', where N is an integer and COND\\n\\\n is an expression to be evaluated whenever breakpoint N is reached.\\n\\\n-With the \\\"-force\\\" flag, the condition is defined even when it is\\n\\\n-invalid for all current locations.\"));\n-  set_cmd_completer (c, condition_completer);\n+\\n\\\n+Options:\\n\\\n+%OPTIONS%\"), cc_opts);\n+\n+  c = add_com (\"condition\", class_breakpoint, condition_command,\n+\t       condition_command_help.c_str ());\n+  set_cmd_completer_handle_brkchars (c, condition_completer);\n \n   c = add_com (\"tbreak\", class_breakpoint, tbreak_command, _(\"\\\n Set a temporary breakpoint.\\n\\"
    },
    {
      "sha": "8635d17e11af7cafd9c8adbb33fc953ba4b15eaa",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b1d4d8d128a65d59be6d6071614418116fbfcba2",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-27  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.base/condbreak.exp: Update the completion tests to\n+\tconsider the '-force' flag.\n+\n 2020-10-27  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/list-ambiguous-readnow.exp: New file."
    },
    {
      "sha": "132ffddff90c2a496483283f66bb54f777cac145",
      "filename": "gdb/testsuite/gdb.base/condbreak.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/testsuite/gdb.base/condbreak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b1d4d8d128a65d59be6d6071614418116fbfcba2/gdb/testsuite/gdb.base/condbreak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/condbreak.exp?ref=b1d4d8d128a65d59be6d6071614418116fbfcba2",
      "patch": "@@ -232,3 +232,11 @@ gdb_test \"complete cond 1\" \"cond 1\"\n gdb_test \"set variable \\$var = 1\"\n gdb_test \"complete cond \\$v\" \"cond \\\\\\$var\"\n gdb_test \"complete cond 1 values\\[0\\].a\" \"cond 1 values.0..a_field\"\n+\n+set cond_completion \"condition ($decimal|-force)\"\n+gdb_test \"complete condition \" \"($cond_completion\\r\\n)+$cond_completion\"\n+gdb_test \"complete cond -\" \"cond -force\"\n+\n+# If '-force' is already given, it should not be suggested again.\n+set cond_completion \"cond -force $decimal\"\n+gdb_test \"complete cond -force \" \"($cond_completion\\r\\n)+$cond_completion\""
    }
  ]
}