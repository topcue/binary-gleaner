{
  "sha": "65e4a99a26452d99d586f6e5a0c43e24348a5125",
  "node_id": "C_kwDOANOeidoAKDY1ZTRhOTlhMjY0NTJkOTlkNTg2ZjZlNWEwYzQzZTI0MzQ4YTUxMjU",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-11-17T10:46:11Z"
    },
    "committer": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2021-11-17T12:18:11Z"
    },
    "message": "RISC-V: Support rvv extension with released version 1.0.\n\n2021-11-17  Jim Wilson  <jimw@sifive.com>\n            Kito Cheng  <kito.cheng@sifive.com>\n            Nelson Chu  <nelson.chu@sifive.com>\n\nThis patch is porting from the following riscv github,\nhttps://github.com/riscv/riscv-binutils-gdb/tree/rvv-1.0.x\n\nAnd here is the vector spec,\nhttps://github.com/riscv/riscv-v-spec\n\nbfd/\n\t* elfxx-riscv.c (riscv_implicit_subsets): Added imply rules\n\tof v, zve and zvl extensions.\n\t(riscv_supported_std_ext): Updated verison of v to  1.0.\n\t(riscv_supported_std_z_ext): Added zve and zvl extensions.\n\t(riscv_parse_check_conflicts): The zvl extensions need to\n\tenable either v or zve extension.\n\t(riscv_multi_subset_supports): Check the subset list to know\n\tif the INSN_CLASS_V and INSN_CLASS_ZVEF instructions are supported.\ngas/\n\t* config/tc-riscv.c (enum riscv_csr_class): Added CSR_CLASS_V.\n\t(enum reg_class): Added RCLASS_VECR and RCLASS_VECM.\n\t(validate_riscv_insn): Check whether the rvv operands are valid.\n\t(md_begin): Initialize register hash for rvv registers.\n\t(macro_build): Added rvv operands when expanding rvv pseudoes.\n\t(vector_macro): Expand rvv macros into one or more instructions.\n\t(macro): Likewise.\n\t(my_getVsetvliExpression): Similar to my_getVsetvliExpression,\n\tbut used for parsing vsetvli operands.\n\t(riscv_ip): Parse and encode rvv operands.  Besides, The rvv loads\n\tand stores with EEW 64 cannot be used when zve32x is enabled.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p10.d: Updated -march\n\tto rv32ifv_zkr.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p11.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg.s: Added rvv csr testcases.\n\t* testsuite/gas/riscv/priv-reg-version-1p10.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg-version-1p11.d: Likewise.\n\t* testsuite/gas/riscv/priv-reg-version-1p9p1.d: Likewise.\n\t* testsuite/gas/riscv/march-imply-v.d: New testcase.\n\t* testsuite/gas/riscv/vector-insns-fail-zve32xf.d: Likewise.\n\t* testsuite/gas/riscv/vector-insns-fail-zve32xf.l: Likewise.\n\t* testsuite/gas/riscv/vector-insns-fail-zvl.d: Likewise.\n\t* testsuite/gas/riscv/vector-insns-fail-zvl.l: Likewise.\n\t* testsuite/gas/riscv/vector-insns-vmsgtvx.d: Likewise.\n\t* testsuite/gas/riscv/vector-insns-vmsgtvx.s: Likewise.\n\t* testsuite/gas/riscv/vector-insns-zero-imm.d: Likewise.\n\t* testsuite/gas/riscv/vector-insns-zero-imm.s: Likewise.\n\t* testsuite/gas/riscv/vector-insns.d: Likewise.\n\t* testsuite/gas/riscv/vector-insns.s: Likewise.\ninclude/\n\t* opcode/riscv-opc.h: Defined mask/match encodings and csrs for rvv.\n\t* opcode/riscv.h: Defined rvv immediate encodings and fields.\n\t(enum riscv_insn_class): Added INSN_CLASS_V and INSN_CLASS_ZVEF.\n\t(INSN_V_EEW64): Defined.\n\t(M_VMSGE, M_VMSGEU): Added for the rvv pseudoes.\nopcodes/\n\t* riscv-dis.c (print_insn_args): Dump the rvv operands.\n\t* riscv-opc.c (riscv_vecr_names_numeric): Defined rvv registers.\n\t(riscv_vecm_names_numeric): Likewise.\n\t(riscv_vsew): Likewise.\n\t(riscv_vlmul): Likewise.\n\t(riscv_vta): Likewise.\n\t(riscv_vma): Likewise.\n\t(match_vs1_eq_vs2): Added for rvv Vu operand.\n\t(match_vd_eq_vs1_eq_vs2): Added for rvv Vv operand.\n\t(riscv_opcodes): Added rvv v1.0 instructions.",
    "tree": {
      "sha": "92a3eca7a03c023591d661a6869135e3bf1522f1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92a3eca7a03c023591d661a6869135e3bf1522f1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/65e4a99a26452d99d586f6e5a0c43e24348a5125",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65e4a99a26452d99d586f6e5a0c43e24348a5125",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/65e4a99a26452d99d586f6e5a0c43e24348a5125",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/65e4a99a26452d99d586f6e5a0c43e24348a5125/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "486f9e20e037f1eea2dce98dc393db60df5feef3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/486f9e20e037f1eea2dce98dc393db60df5feef3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/486f9e20e037f1eea2dce98dc393db60df5feef3"
    }
  ],
  "stats": {
    "total": 6630,
    "additions": 6615,
    "deletions": 15
  },
  "files": [
    {
      "sha": "78b1517bd8a5c7a149ab0f7c2c85bcabb8c5679f",
      "filename": "bfd/elfxx-riscv.c",
      "status": "modified",
      "additions": 75,
      "deletions": 1,
      "changes": 76,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/bfd/elfxx-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/bfd/elfxx-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-riscv.c?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -1073,6 +1073,31 @@ static struct riscv_implicit_subset riscv_implicit_subsets[] =\n   {\"g\", \"zicsr\",\tcheck_implicit_always},\n   {\"g\", \"zifencei\",\tcheck_implicit_always},\n   {\"q\", \"d\",\t\tcheck_implicit_always},\n+  {\"v\", \"d\",\t\tcheck_implicit_always},\n+  {\"v\", \"zve64d\",\tcheck_implicit_always},\n+  {\"v\", \"zvl128b\",\tcheck_implicit_always},\n+  {\"zve64d\", \"d\",\tcheck_implicit_always},\n+  {\"zve64d\", \"zve64f\",\tcheck_implicit_always},\n+  {\"zve64f\", \"zve32f\",\tcheck_implicit_always},\n+  {\"zve64f\", \"zve64x\",\tcheck_implicit_always},\n+  {\"zve64f\", \"zvl64b\",\tcheck_implicit_always},\n+  {\"zve32f\", \"f\",\tcheck_implicit_always},\n+  {\"zve32f\", \"zvl32b\",\tcheck_implicit_always},\n+  {\"zve32f\", \"zve32x\",\tcheck_implicit_always},\n+  {\"zve64x\", \"zve32x\",\tcheck_implicit_always},\n+  {\"zve64x\", \"zvl64b\",\tcheck_implicit_always},\n+  {\"zve32x\", \"zvl32b\",\tcheck_implicit_always},\n+  {\"zvl65536b\", \"zvl32768b\",\tcheck_implicit_always},\n+  {\"zvl32768b\", \"zvl16384b\",\tcheck_implicit_always},\n+  {\"zvl16384b\", \"zvl8192b\",\tcheck_implicit_always},\n+  {\"zvl8192b\", \"zvl4096b\",\tcheck_implicit_always},\n+  {\"zvl4096b\", \"zvl2048b\",\tcheck_implicit_always},\n+  {\"zvl2048b\", \"zvl1024b\",\tcheck_implicit_always},\n+  {\"zvl1024b\", \"zvl512b\",\tcheck_implicit_always},\n+  {\"zvl512b\", \"zvl256b\",\tcheck_implicit_always},\n+  {\"zvl256b\", \"zvl128b\",\tcheck_implicit_always},\n+  {\"zvl128b\", \"zvl64b\",\t\tcheck_implicit_always},\n+  {\"zvl64b\", \"zvl32b\",\t\tcheck_implicit_always},\n   {\"d\", \"f\",\t\tcheck_implicit_always},\n   {\"f\", \"zicsr\",\tcheck_implicit_always},\n   {\"zk\", \"zkn\",\t\tcheck_implicit_always},\n@@ -1145,7 +1170,7 @@ static struct riscv_supported_ext riscv_supported_std_ext[] =\n   {\"j\",\t\tISA_SPEC_CLASS_NONE, RISCV_UNKNOWN_VERSION, RISCV_UNKNOWN_VERSION, 0 },\n   {\"t\",\t\tISA_SPEC_CLASS_NONE, RISCV_UNKNOWN_VERSION, RISCV_UNKNOWN_VERSION, 0 },\n   {\"p\",\t\tISA_SPEC_CLASS_NONE, RISCV_UNKNOWN_VERSION, RISCV_UNKNOWN_VERSION, 0 },\n-  {\"v\",\t\tISA_SPEC_CLASS_NONE, RISCV_UNKNOWN_VERSION, RISCV_UNKNOWN_VERSION, 0 },\n+  {\"v\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0, 0 },\n   {\"n\",\t\tISA_SPEC_CLASS_NONE, RISCV_UNKNOWN_VERSION, RISCV_UNKNOWN_VERSION, 0 },\n   {NULL, 0, 0, 0, 0}\n };\n@@ -1174,6 +1199,24 @@ static struct riscv_supported_ext riscv_supported_std_z_ext[] =\n   {\"zksed\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n   {\"zksh\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n   {\"zkt\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve32x\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve32f\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve32d\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve64x\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve64f\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zve64d\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl32b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl64b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl128b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl256b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl512b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl1024b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl2048b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl4096b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl8192b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl16384b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl32768b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n+  {\"zvl65536b\",\t\tISA_SPEC_CLASS_DRAFT,\t\t1, 0,  0 },\n   {NULL, 0, 0, 0, 0}\n };\n \n@@ -1854,6 +1897,28 @@ riscv_parse_check_conflicts (riscv_parse_subset_t *rps)\n         (_(\"rv32e does not support the `f' extension\"));\n       no_conflict = false;\n     }\n+\n+  bool support_zve = false;\n+  bool support_zvl = false;\n+  riscv_subset_t *s = rps->subset_list->head;\n+  for (; s != NULL; s = s->next)\n+    {\n+      if (!support_zve\n+\t  && strncmp (s->name, \"zve\", 3) == 0)\n+\tsupport_zve = true;\n+      if (!support_zvl\n+\t  && strncmp (s->name, \"zvl\", 3) == 0)\n+\tsupport_zvl = true;\n+      if (support_zve && support_zvl)\n+\tbreak;\n+    }\n+  if (support_zvl && !support_zve)\n+    {\n+      rps->error_handler\n+\t(_(\"zvl*b extensions need to enable either `v' or `zve' extension\"));\n+      no_conflict = false;\n+    }\n+\n   return no_conflict;\n }\n \n@@ -2205,6 +2270,15 @@ riscv_multi_subset_supports (riscv_parse_subset_t *rps,\n       return riscv_subset_supports (rps, \"zksed\");\n     case INSN_CLASS_ZKSH:\n       return riscv_subset_supports (rps, \"zksh\");\n+    case INSN_CLASS_V:\n+      return (riscv_subset_supports (rps, \"v\")\n+\t      || riscv_subset_supports (rps, \"zve64x\")\n+\t      || riscv_subset_supports (rps, \"zve32x\"));\n+    case INSN_CLASS_ZVEF:\n+      return (riscv_subset_supports (rps, \"v\")\n+\t      || riscv_subset_supports (rps, \"zve64d\")\n+\t      || riscv_subset_supports (rps, \"zve64f\")\n+\t      || riscv_subset_supports (rps, \"zve32f\"));\n     default:\n       rps->error_handler\n         (_(\"internal: unreachable INSN_CLASS_*\"));"
    },
    {
      "sha": "0b11bb3cd3de5fc191df925d396178787dd709c0",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 409,
      "deletions": 11,
      "changes": 420,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -61,10 +61,11 @@ enum riscv_csr_class\n   CSR_CLASS_NONE,\n \n   CSR_CLASS_I,\n-  CSR_CLASS_I_32, /* rv32 only */\n-  CSR_CLASS_F, /* f-ext only */\n-  CSR_CLASS_ZKR, /* zkr only */\n-  CSR_CLASS_DEBUG /* debug CSR */\n+  CSR_CLASS_I_32,\t/* rv32 only */\n+  CSR_CLASS_F,\t\t/* f-ext only */\n+  CSR_CLASS_ZKR,\t/* zkr only */\n+  CSR_CLASS_V,\t\t/* rvv only */\n+  CSR_CLASS_DEBUG\t/* debug CSR */\n };\n \n /* This structure holds all restricted conditions for a CSR.  */\n@@ -773,6 +774,8 @@ enum reg_class\n {\n   RCLASS_GPR,\n   RCLASS_FPR,\n+  RCLASS_VECR,\n+  RCLASS_VECM,\n   RCLASS_MAX,\n \n   RCLASS_CSR\n@@ -880,6 +883,10 @@ riscv_csr_address (const char *csr_name,\n       result = riscv_subset_supports (&riscv_rps_as, \"zkr\");\n       need_check_version = false;\n       break;\n+    case CSR_CLASS_V:\n+      result = riscv_subset_supports (&riscv_rps_as, \"v\");\n+      need_check_version = false;\n+      break;\n     case CSR_CLASS_DEBUG:\n       need_check_version = false;\n       break;\n@@ -1068,18 +1075,42 @@ validate_riscv_insn (const struct riscv_opcode *opc, int length)\n \t    case 'F': /* Compressed funct for .insn directive.  */\n \t      switch (*++oparg)\n \t\t{\n-\t\t  case '6': USE_BITS (OP_MASK_CFUNCT6, OP_SH_CFUNCT6); break;\n-\t\t  case '4': USE_BITS (OP_MASK_CFUNCT4, OP_SH_CFUNCT4); break;\n-\t\t  case '3': USE_BITS (OP_MASK_CFUNCT3, OP_SH_CFUNCT3); break;\n-\t\t  case '2': USE_BITS (OP_MASK_CFUNCT2, OP_SH_CFUNCT2); break;\n-\t\t  default:\n-\t\t    goto unknown_validate_operand;\n+\t\tcase '6': USE_BITS (OP_MASK_CFUNCT6, OP_SH_CFUNCT6); break;\n+\t\tcase '4': USE_BITS (OP_MASK_CFUNCT4, OP_SH_CFUNCT4); break;\n+\t\tcase '3': USE_BITS (OP_MASK_CFUNCT3, OP_SH_CFUNCT3); break;\n+\t\tcase '2': USE_BITS (OP_MASK_CFUNCT2, OP_SH_CFUNCT2); break;\n+\t\tdefault:\n+\t\t  goto unknown_validate_operand;\n \t\t}\n \t      break;\n \t    default:\n \t      goto unknown_validate_operand;\n \t    }\n \t  break;\n+\tcase 'V': /* RVV */\n+\t  switch (*++oparg)\n+\t    {\n+\t    case 'd':\n+\t    case 'f': USE_BITS (OP_MASK_VD, OP_SH_VD); break;\n+\t    case 'e': USE_BITS (OP_MASK_VWD, OP_SH_VWD); break;\n+\t    case 's': USE_BITS (OP_MASK_VS1, OP_SH_VS1); break;\n+\t    case 't': USE_BITS (OP_MASK_VS2, OP_SH_VS2); break;\n+\t    case 'u': USE_BITS (OP_MASK_VS1, OP_SH_VS1);\n+\t\t      USE_BITS (OP_MASK_VS2, OP_SH_VS2); break;\n+\t    case 'v': USE_BITS (OP_MASK_VD, OP_SH_VD);\n+\t\t      USE_BITS (OP_MASK_VS1, OP_SH_VS1);\n+\t\t      USE_BITS (OP_MASK_VS2, OP_SH_VS2); break;\n+\t    case '0': break;\n+\t    case 'b': used_bits |= ENCODE_RVV_VB_IMM (-1U); break;\n+\t    case 'c': used_bits |= ENCODE_RVV_VC_IMM (-1U); break;\n+\t    case 'i':\n+\t    case 'j':\n+\t    case 'k': USE_BITS (OP_MASK_VIMM, OP_SH_VIMM); break;\n+\t    case 'm': USE_BITS (OP_MASK_VMASK, OP_SH_VMASK); break;\n+\t    default:\n+\t      goto unknown_validate_operand;\n+\t    }\n+\t  break;\n \tcase ',': break;\n \tcase '(': break;\n \tcase ')': break;\n@@ -1221,6 +1252,8 @@ md_begin (void)\n   hash_reg_names (RCLASS_GPR, riscv_gpr_names_abi, NGPR);\n   hash_reg_names (RCLASS_FPR, riscv_fpr_names_numeric, NFPR);\n   hash_reg_names (RCLASS_FPR, riscv_fpr_names_abi, NFPR);\n+  hash_reg_names (RCLASS_VECR, riscv_vecr_names_numeric, NVECR);\n+  hash_reg_names (RCLASS_VECM, riscv_vecm_names_numeric, NVECM);\n   /* Add \"fp\" as an alias for \"s0\".  */\n   hash_reg_name (RCLASS_GPR, \"fp\", 8);\n \n@@ -1360,6 +1393,39 @@ macro_build (expressionS *ep, const char *name, const char *fmt, ...)\n       fmtStart = fmt;\n       switch (*fmt)\n \t{\n+\tcase 'V': /* RVV */\n+\t  switch (*++fmt)\n+\t    {\n+\t    case 'd':\n+\t      INSERT_OPERAND (VD, insn, va_arg (args, int));\n+\t      continue;\n+\t    case 's':\n+\t      INSERT_OPERAND (VS1, insn, va_arg (args, int));\n+\t      continue;\n+\t    case 't':\n+\t      INSERT_OPERAND (VS2, insn, va_arg (args, int));\n+\t      continue;\n+\t    case 'm':\n+\t      {\n+\t\tint reg = va_arg (args, int);\n+\t\tif (reg == -1)\n+\t\t  {\n+\t\t    INSERT_OPERAND (VMASK, insn, 1);\n+\t\t    continue;\n+\t\t  }\n+\t\telse if (reg == 0)\n+\t\t  {\n+\t\t    INSERT_OPERAND (VMASK, insn, 0);\n+\t\t    continue;\n+\t\t  }\n+\t\telse\n+\t\t  goto unknown_macro_argument;\n+\t      }\n+\t    default:\n+\t      goto unknown_macro_argument;\n+\t    }\n+\t  break;\n+\n \tcase 'd':\n \t  INSERT_OPERAND (RD, insn, va_arg (args, int));\n \t  continue;\n@@ -1382,6 +1448,7 @@ macro_build (expressionS *ep, const char *name, const char *fmt, ...)\n \tcase ',':\n \t  continue;\n \tdefault:\n+\tunknown_macro_argument:\n \t  as_fatal (_(\"internal: invalid macro argument `%s'\"), fmtStart);\n \t}\n       break;\n@@ -1570,6 +1637,95 @@ riscv_ext (int destreg, int srcreg, unsigned shift, bool sign)\n     }\n }\n \n+/* Expand RISC-V Vector macros into one or more instructions.  */\n+\n+static void\n+vector_macro (struct riscv_cl_insn *ip)\n+{\n+  int vd = (ip->insn_opcode >> OP_SH_VD) & OP_MASK_VD;\n+  int vs1 = (ip->insn_opcode >> OP_SH_VS1) & OP_MASK_VS1;\n+  int vs2 = (ip->insn_opcode >> OP_SH_VS2) & OP_MASK_VS2;\n+  int vm = (ip->insn_opcode >> OP_SH_VMASK) & OP_MASK_VMASK;\n+  int vtemp = (ip->insn_opcode >> OP_SH_VFUNCT6) & OP_MASK_VFUNCT6;\n+  int mask = ip->insn_mo->mask;\n+\n+  switch (mask)\n+    {\n+    case M_VMSGE:\n+      if (vm)\n+\t{\n+\t  /* Unmasked.  */\n+\t  macro_build (NULL, \"vmslt.vx\", \"Vd,Vt,sVm\", vd, vs2, vs1, -1);\n+\t  macro_build (NULL, \"vmnand.mm\", \"Vd,Vt,Vs\", vd, vd, vd);\n+\t  break;\n+\t}\n+      if (vtemp != 0)\n+\t{\n+\t  /* Masked.  Have vtemp to avoid overlap constraints.  */\n+\t  if (vd == vm)\n+\t    {\n+\t      macro_build (NULL, \"vmslt.vx\", \"Vd,Vt,s\", vtemp, vs2, vs1);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vd, vm, vtemp);\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Preserve the value of vd if not updating by vm.  */\n+\t      macro_build (NULL, \"vmslt.vx\", \"Vd,Vt,s\", vtemp, vs2, vs1);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vtemp, vm, vtemp);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vd, vd, vm);\n+\t      macro_build (NULL, \"vmor.mm\", \"Vd,Vt,Vs\", vd, vtemp, vd);\n+\t    }\n+\t}\n+      else if (vd != vm)\n+\t{\n+\t  /* Masked.  This may cause the vd overlaps vs2, when LMUL > 1.  */\n+\t  macro_build (NULL, \"vmslt.vx\", \"Vd,Vt,sVm\", vd, vs2, vs1, vm);\n+\t  macro_build (NULL, \"vmxor.mm\", \"Vd,Vt,Vs\", vd, vd, vm);\n+\t}\n+      else\n+\tas_bad (_(\"must provide temp if destination overlaps mask\"));\n+      break;\n+\n+    case M_VMSGEU:\n+      if (vm)\n+\t{\n+\t  /* Unmasked.  */\n+\t  macro_build (NULL, \"vmsltu.vx\", \"Vd,Vt,sVm\", vd, vs2, vs1, -1);\n+\t  macro_build (NULL, \"vmnand.mm\", \"Vd,Vt,Vs\", vd, vd, vd);\n+\t  break;\n+\t}\n+      if (vtemp != 0)\n+\t{\n+\t  /* Masked.  Have vtemp to avoid overlap constraints.  */\n+\t  if (vd == vm)\n+\t    {\n+\t      macro_build (NULL, \"vmsltu.vx\", \"Vd,Vt,s\", vtemp, vs2, vs1);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vd, vm, vtemp);\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Preserve the value of vd if not updating by vm.  */\n+\t      macro_build (NULL, \"vmsltu.vx\", \"Vd,Vt,s\", vtemp, vs2, vs1);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vtemp, vm, vtemp);\n+\t      macro_build (NULL, \"vmandnot.mm\", \"Vd,Vt,Vs\", vd, vd, vm);\n+\t      macro_build (NULL, \"vmor.mm\", \"Vd,Vt,Vs\", vd, vtemp, vd);\n+\t    }\n+\t}\n+      else if (vd != vm)\n+\t{\n+\t  /* Masked.  This may cause the vd overlaps vs2, when LMUL > 1.  */\n+\t  macro_build (NULL, \"vmsltu.vx\", \"Vd,Vt,sVm\", vd, vs2, vs1, vm);\n+\t  macro_build (NULL, \"vmxor.mm\", \"Vd,Vt,Vs\", vd, vd, vm);\n+\t}\n+      else\n+\tas_bad (_(\"must provide temp if destination overlaps mask\"));\n+      break;\n+\n+    default:\n+      break;\n+    }\n+}\n+\n /* Expand RISC-V assembly macros into one or more instructions.  */\n \n static void\n@@ -1708,6 +1864,11 @@ macro (struct riscv_cl_insn *ip, expressionS *imm_expr,\n       riscv_ext (rd, rs1, xlen - 16, true);\n       break;\n \n+    case M_VMSGE:\n+    case M_VMSGEU:\n+      vector_macro (ip);\n+      break;\n+\n     default:\n       as_bad (_(\"internal: macro %s not implemented\"), ip->insn_mo->name);\n       break;\n@@ -1879,6 +2040,66 @@ my_getOpcodeExpression (expressionS *ep, bfd_reloc_code_real_type *reloc,\n   return my_getSmallExpression (ep, reloc, str, percent_op);\n }\n \n+/* Parse string STR as a vsetvli operand.  Store the expression in *EP.\n+   On exit, EXPR_END points to the first character after the expression.  */\n+\n+static void\n+my_getVsetvliExpression (expressionS *ep, char *str)\n+{\n+  unsigned int vsew_value = 0, vlmul_value = 0;\n+  unsigned int vta_value = 0, vma_value = 0;\n+  bfd_boolean vsew_found = FALSE, vlmul_found = FALSE;\n+  bfd_boolean vta_found = FALSE, vma_found = FALSE;\n+\n+  if (arg_lookup (&str, riscv_vsew, ARRAY_SIZE (riscv_vsew), &vsew_value))\n+    {\n+      if (*str == ',')\n+\t++str;\n+      if (vsew_found)\n+\tas_bad (_(\"multiple vsew constants\"));\n+      vsew_found = TRUE;\n+    }\n+  if (arg_lookup (&str, riscv_vlmul, ARRAY_SIZE (riscv_vlmul), &vlmul_value))\n+    {\n+      if (*str == ',')\n+\t++str;\n+      if (vlmul_found)\n+\tas_bad (_(\"multiple vlmul constants\"));\n+      vlmul_found = TRUE;\n+    }\n+  if (arg_lookup (&str, riscv_vta, ARRAY_SIZE (riscv_vta), &vta_value))\n+    {\n+      if (*str == ',')\n+\t++str;\n+      if (vta_found)\n+\tas_bad (_(\"multiple vta constants\"));\n+      vta_found = TRUE;\n+    }\n+  if (arg_lookup (&str, riscv_vma, ARRAY_SIZE (riscv_vma), &vma_value))\n+    {\n+      if (*str == ',')\n+\t++str;\n+      if (vma_found)\n+\tas_bad (_(\"multiple vma constants\"));\n+      vma_found = TRUE;\n+    }\n+\n+  if (vsew_found || vlmul_found || vta_found || vma_found)\n+    {\n+      ep->X_op = O_constant;\n+      ep->X_add_number = (vlmul_value << OP_SH_VLMUL)\n+\t\t\t | (vsew_value << OP_SH_VSEW)\n+\t\t\t | (vta_value << OP_SH_VTA)\n+\t\t\t | (vma_value << OP_SH_VMA);\n+      expr_end = str;\n+    }\n+  else\n+    {\n+      my_getExpression (ep, str);\n+      str = expr_end;\n+    }\n+}\n+\n /* Detect and handle implicitly zero load-store offsets.  For example,\n    \"lw t0, (t1)\" is shorthand for \"lw t0, 0(t1)\".  Return true if such\n    an implicit offset was detected.  */\n@@ -2014,6 +2235,8 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n       if (!riscv_multi_subset_supports (&riscv_rps_as, insn->insn_class))\n \tcontinue;\n \n+      /* Reset error message of the previous round.  */\n+      error = _(\"illegal operands\");\n       create_insn (ip, insn);\n       argnum = 1;\n \n@@ -2056,6 +2279,16 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n \t\t      as_warn (_(\"read-only CSR is written `%s'\"), str);\n \t\t      insn_with_csr = false;\n \t\t    }\n+\n+\t\t  /* The (segmant) load and store with EEW 64 cannot be used\n+\t\t     when zve32x is enabled.  */\n+\t\t  if (ip->insn_mo->pinfo & INSN_V_EEW64\n+\t\t      && riscv_subset_supports (&riscv_rps_as, \"zve32x\")\n+\t\t      && !riscv_subset_supports (&riscv_rps_as, \"zve64x\"))\n+\t\t    {\n+\t\t      error = _(\"illegal opcode for zve32x\");\n+\t\t      break;\n+\t\t    }\n \t\t}\n \t      if (*asarg != '\\0')\n \t\tbreak;\n@@ -2356,6 +2589,172 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n \t\t}\n \t      break;\n \n+\t    case 'V': /* RVV */\n+\t      switch (*++oparg)\n+\t\t{\n+\t\tcase 'd': /* VD */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  INSERT_OPERAND (VD, *ip, regno);\n+\t\t  continue;\n+\n+\t\tcase 'e': /* AMO VD */\n+\t\t  if (reg_lookup (&asarg, RCLASS_GPR, &regno) && regno == 0)\n+\t\t    INSERT_OPERAND (VWD, *ip, 0);\n+\t\t  else if (reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    {\n+\t\t      INSERT_OPERAND (VWD, *ip, 1);\n+\t\t      INSERT_OPERAND (VD, *ip, regno);\n+\t\t    }\n+\t\t  else\n+\t\t    break;\n+\t\t  continue;\n+\n+\t\tcase 'f': /* AMO VS3 */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  if (!EXTRACT_OPERAND (VWD, ip->insn_opcode))\n+\t\t    INSERT_OPERAND (VD, *ip, regno);\n+\t\t  else\n+\t\t    {\n+\t\t      /* VS3 must match VD.  */\n+\t\t      if (EXTRACT_OPERAND (VD, ip->insn_opcode) != regno)\n+\t\t\tbreak;\n+\t\t    }\n+\t\t  continue;\n+\n+\t\tcase 's': /* VS1 */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  INSERT_OPERAND (VS1, *ip, regno);\n+\t\t  continue;\n+\n+\t\tcase 't': /* VS2 */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  INSERT_OPERAND (VS2, *ip, regno);\n+\t\t  continue;\n+\n+\t\tcase 'u': /* VS1 == VS2 */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  INSERT_OPERAND (VS1, *ip, regno);\n+\t\t  INSERT_OPERAND (VS2, *ip, regno);\n+\t\t  continue;\n+\n+\t\tcase 'v': /* VD == VS1 == VS2 */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno))\n+\t\t    break;\n+\t\t  INSERT_OPERAND (VD, *ip, regno);\n+\t\t  INSERT_OPERAND (VS1, *ip, regno);\n+\t\t  INSERT_OPERAND (VS2, *ip, regno);\n+\t\t  continue;\n+\n+\t\t/* The `V0` is carry-in register for v[m]adc and v[m]sbc,\n+\t\t   and is used to choose vs1/rs1/frs1/imm or vs2 for\n+\t\t   v[f]merge.  It use the same encoding as the vector mask\n+\t\t   register.  */\n+\t\tcase '0':\n+\t\t  if (reg_lookup (&asarg, RCLASS_VECR, &regno) && regno == 0)\n+\t\t    continue;\n+\t\t  break;\n+\n+\t\tcase 'b': /* vtypei for vsetivli */\n+\t\t  my_getVsetvliExpression (imm_expr, asarg);\n+\t\t  check_absolute_expr (ip, imm_expr, FALSE);\n+\t\t  if (!VALID_RVV_VB_IMM (imm_expr->X_add_number))\n+\t\t    as_bad (_(\"bad value for vsetivli immediate field, \"\n+\t\t\t      \"value must be 0..1023\"));\n+\t\t  ip->insn_opcode\n+\t\t    |= ENCODE_RVV_VB_IMM (imm_expr->X_add_number);\n+\t\t  imm_expr->X_op = O_absent;\n+\t\t  asarg = expr_end;\n+\t\t  continue;\n+\n+\t\tcase 'c': /* vtypei for vsetvli */\n+\t\t  my_getVsetvliExpression (imm_expr, asarg);\n+\t\t  check_absolute_expr (ip, imm_expr, FALSE);\n+\t\t  if (!VALID_RVV_VC_IMM (imm_expr->X_add_number))\n+\t\t    as_bad (_(\"bad value for vsetvli immediate field, \"\n+\t\t\t      \"value must be 0..2047\"));\n+\t\t  ip->insn_opcode\n+\t\t    |= ENCODE_RVV_VC_IMM (imm_expr->X_add_number);\n+\t\t  imm_expr->X_op = O_absent;\n+\t\t  asarg = expr_end;\n+\t\t  continue;\n+\n+\t\tcase 'i': /* vector arith signed immediate */\n+\t\t  my_getExpression (imm_expr, asarg);\n+\t\t  check_absolute_expr (ip, imm_expr, FALSE);\n+\t\t  if (imm_expr->X_add_number > 15\n+\t\t      || imm_expr->X_add_number < -16)\n+\t\t    as_bad (_(\"bad value for vector immediate field, \"\n+\t\t\t      \"value must be -16...15\"));\n+\t\t  INSERT_OPERAND (VIMM, *ip, imm_expr->X_add_number);\n+\t\t  imm_expr->X_op = O_absent;\n+\t\t  asarg = expr_end;\n+\t\t  continue;\n+\n+\t\tcase 'j': /* vector arith unsigned immediate */\n+\t\t  my_getExpression (imm_expr, asarg);\n+\t\t  check_absolute_expr (ip, imm_expr, FALSE);\n+\t\t  if (imm_expr->X_add_number < 0\n+\t\t      || imm_expr->X_add_number >= 32)\n+\t\t    as_bad (_(\"bad value for vector immediate field, \"\n+\t\t\t      \"value must be 0...31\"));\n+\t\t  INSERT_OPERAND (VIMM, *ip, imm_expr->X_add_number);\n+\t\t  imm_expr->X_op = O_absent;\n+\t\t  asarg = expr_end;\n+\t\t  continue;\n+\n+\t\tcase 'k': /* vector arith signed immediate, minus 1 */\n+\t\t  my_getExpression (imm_expr, asarg);\n+\t\t  check_absolute_expr (ip, imm_expr, FALSE);\n+\t\t  if (imm_expr->X_add_number > 16\n+\t\t      || imm_expr->X_add_number < -15)\n+\t\t    as_bad (_(\"bad value for vector immediate field, \"\n+\t\t\t      \"value must be -15...16\"));\n+\t\t  INSERT_OPERAND (VIMM, *ip, imm_expr->X_add_number - 1);\n+\t\t  imm_expr->X_op = O_absent;\n+\t\t  asarg = expr_end;\n+\t\t  continue;\n+\n+\t\tcase 'm': /* optional vector mask */\n+\t\t  if (*asarg == '\\0')\n+\t\t    {\n+\t\t      INSERT_OPERAND (VMASK, *ip, 1);\n+\t\t      continue;\n+\t\t    }\n+\t\t  else if (*asarg == ',' && asarg++\n+\t\t\t   && reg_lookup (&asarg, RCLASS_VECM, &regno)\n+\t\t\t   && regno == 0)\n+\t\t    {\n+\t\t      INSERT_OPERAND (VMASK, *ip, 0);\n+\t\t      continue;\n+\t\t    }\n+\t\t  break;\n+\n+\t\tcase 'M': /* required vector mask */\n+\t\t  if (reg_lookup (&asarg, RCLASS_VECM, &regno) && regno == 0)\n+\t\t    {\n+\t\t      INSERT_OPERAND (VMASK, *ip, 0);\n+\t\t      continue;\n+\t\t    }\n+\t\t  break;\n+\n+\t\tcase 'T': /* vector macro temporary register */\n+\t\t  if (!reg_lookup (&asarg, RCLASS_VECR, &regno) || regno == 0)\n+\t\t    break;\n+\t\t  /* Store it in the FUNCT6 field as we don't have anyplace\n+\t\t     else to store it.  */\n+\t\t  INSERT_OPERAND (VFUNCT6, *ip, regno);\n+\t\t  continue;\n+\n+\t\tdefault:\n+\t\t  goto unknown_riscv_ip_operand;\n+\t\t}\n+\t      break;\n+\n \t    case ',':\n \t      ++argnum;\n \t      if (*asarg++ == *oparg)\n@@ -2752,7 +3151,6 @@ riscv_ip (char *str, struct riscv_cl_insn *ip, expressionS *imm_expr,\n \t  break;\n \t}\n       asarg = asargStart;\n-      error = _(\"illegal operands\");\n       insn_with_csr = false;\n     }\n "
    },
    {
      "sha": "e07eecf16e63c4330fe705afe62038dc9aecae73",
      "filename": "gas/testsuite/gas/riscv/march-imply-v.d",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/march-imply-v.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/march-imply-v.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/march-imply-v.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,6 @@\n+#as: -march=rv32iv -march-attr -misa-spec=20191213\n+#readelf: -A\n+#source: empty.s\n+Attribute Section: riscv\n+File Attributes\n+  Tag_RISCV_arch: \"rv32i2p1_f2p2_d2p2_v1p0_zicsr2p0_zve32f1p0_zve32x1p0_zve64d1p0_zve64f1p0_zve64x1p0_zvl128b1p0_zvl32b1p0_zvl64b1p0\""
    },
    {
      "sha": "3e1836a64a9a1c783bddf91762d2060a67fb48f0",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p10.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march=rv32if_zkr -mcsr-check -mpriv-spec=1.10 -march-attr\n+#as: -march=rv32ifv_zkr -mcsr-check -mpriv-spec=1.10 -march-attr\n #source: priv-reg.s\n #warning_output: priv-reg-fail-version-1p10.l\n #readelf: -A"
    },
    {
      "sha": "e1705e7cafc2426037a8bb48cb2b127b65d3be11",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p11.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march=rv32if_zkr -mcsr-check -mpriv-spec=1.11 -march-attr\n+#as: -march=rv32ifv_zkr -mcsr-check -mpriv-spec=1.11 -march-attr\n #source: priv-reg.s\n #warning_output: priv-reg-fail-version-1p11.l\n #readelf: -A"
    },
    {
      "sha": "56ade5932c9a4f63165f99d42fc4e49ed8209794",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-version-1p9p1.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march=rv32if_zkr -mcsr-check -mpriv-spec=1.9.1 -march-attr\n+#as: -march=rv32ifv_zkr -mcsr-check -mpriv-spec=1.9.1 -march-attr\n #source: priv-reg.s\n #warning_output: priv-reg-fail-version-1p9p1.l\n #readelf: -A"
    },
    {
      "sha": "ee4f405adaaef9afa33fb7d698a267d1a2ce3a4d",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p10.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -266,3 +266,10 @@ Disassembly of section .text:\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+01502573[    \t]+csrr[        \t]+a0,seed\n+[     \t]+[0-9a-f]+:[  \t]+00802573[    \t]+csrr[        \t]+a0,vstart\n+[     \t]+[0-9a-f]+:[  \t]+00902573[    \t]+csrr[        \t]+a0,vxsat\n+[     \t]+[0-9a-f]+:[  \t]+00a02573[    \t]+csrr[        \t]+a0,vxrm\n+[     \t]+[0-9a-f]+:[  \t]+00f02573[    \t]+csrr[        \t]+a0,vcsr\n+[     \t]+[0-9a-f]+:[  \t]+c2002573[    \t]+csrr[        \t]+a0,vl\n+[     \t]+[0-9a-f]+:[  \t]+c2102573[    \t]+csrr[        \t]+a0,vtype\n+[     \t]+[0-9a-f]+:[  \t]+c2202573[    \t]+csrr[        \t]+a0,vlenb"
    },
    {
      "sha": "185e84dbd70f7a22cc41959ce615630e756df35d",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p11.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -266,3 +266,10 @@ Disassembly of section .text:\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+01502573[    \t]+csrr[        \t]+a0,seed\n+[     \t]+[0-9a-f]+:[  \t]+00802573[    \t]+csrr[        \t]+a0,vstart\n+[     \t]+[0-9a-f]+:[  \t]+00902573[    \t]+csrr[        \t]+a0,vxsat\n+[     \t]+[0-9a-f]+:[  \t]+00a02573[    \t]+csrr[        \t]+a0,vxrm\n+[     \t]+[0-9a-f]+:[  \t]+00f02573[    \t]+csrr[        \t]+a0,vcsr\n+[     \t]+[0-9a-f]+:[  \t]+c2002573[    \t]+csrr[        \t]+a0,vl\n+[     \t]+[0-9a-f]+:[  \t]+c2102573[    \t]+csrr[        \t]+a0,vtype\n+[     \t]+[0-9a-f]+:[  \t]+c2202573[    \t]+csrr[        \t]+a0,vlenb"
    },
    {
      "sha": "0e0ba7797014f5bbc8a108fd6910dd4622ac651b",
      "filename": "gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-version-1p9p1.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -266,3 +266,10 @@ Disassembly of section .text:\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+7a302573[    \t]+csrr[        \t]+a0,tdata3\n [     \t]+[0-9a-f]+:[  \t]+01502573[    \t]+csrr[        \t]+a0,seed\n+[     \t]+[0-9a-f]+:[  \t]+00802573[    \t]+csrr[        \t]+a0,vstart\n+[     \t]+[0-9a-f]+:[  \t]+00902573[    \t]+csrr[        \t]+a0,vxsat\n+[     \t]+[0-9a-f]+:[  \t]+00a02573[    \t]+csrr[        \t]+a0,vxrm\n+[     \t]+[0-9a-f]+:[  \t]+00f02573[    \t]+csrr[        \t]+a0,vcsr\n+[     \t]+[0-9a-f]+:[  \t]+c2002573[    \t]+csrr[        \t]+a0,vl\n+[     \t]+[0-9a-f]+:[  \t]+c2102573[    \t]+csrr[        \t]+a0,vtype\n+[     \t]+[0-9a-f]+:[  \t]+c2202573[    \t]+csrr[        \t]+a0,vlenb"
    },
    {
      "sha": "5cf3ebc1b3e0e2849e858512c0f1c5fee8ac9735",
      "filename": "gas/testsuite/gas/riscv/priv-reg.s",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/priv-reg.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg.s?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -285,3 +285,12 @@\n \n \t# Scalar crypto\n \tcsr seed\t\t# 0x015, Entropy Source\n+\n+\t# Vector\n+\tcsr vstart\n+\tcsr vxsat\n+\tcsr vxrm\n+\tcsr vcsr\n+\tcsr vl\n+\tcsr vtype\n+\tcsr vlenb"
    },
    {
      "sha": "f3ae39b65ef2b9fe23fe0fc1a3b10f5c7db6ae11",
      "filename": "gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -march=rv32i_zve32f\n+#source: vector-insns.s\n+#error_output: vector-insns-fail-zve32xf.l"
    },
    {
      "sha": "d9ebc49d023e15ed6a9dab12836204a0397c1391",
      "filename": "gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.l",
      "status": "added",
      "additions": 225,
      "deletions": 0,
      "changes": 225,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-fail-zve32xf.l?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,225 @@\n+.*Assembler messages:\n+.*Error: illegal opcode for zve32x `vle64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vle64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vle64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vse64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vse64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vse64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlse64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlse64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlse64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vsse64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vsse64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vsse64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vloxei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vle64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vle64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vle64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg2e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg2e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg2e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg2e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg2e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg2e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg3e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg3e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg3e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg3e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg3e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg3e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg4e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg4e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg4e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg4e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg4e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg4e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg5e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg5e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg5e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg5e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg5e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg5e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg6e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg6e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg6e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg6e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg6e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg6e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg7e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg7e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg7e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg7e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg7e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg7e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg8e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg8e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg8e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vsseg8e64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg8e64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vsseg8e64.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg2e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg2e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg2e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg2e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg2e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg2e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg3e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg3e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg3e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg3e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg3e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg3e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg4e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg4e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg4e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg4e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg4e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg4e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg5e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg5e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg5e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg5e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg5e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg5e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg6e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg6e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg6e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg6e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg6e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg6e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg7e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg7e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg7e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg7e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg7e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg7e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vlsseg8e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg8e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vlsseg8e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vssseg8e64.v v4,\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg8e64.v v4,0\\(a0\\),a1'\n+.*Error: illegal opcode for zve32x `vssseg8e64.v v4,\\(a0\\),a1,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg2ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg2ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg2ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg2ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg2ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg2ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg3ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg3ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg3ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg3ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg3ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg3ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg4ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg4ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg4ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg4ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg4ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg4ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg5ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg5ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg5ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg5ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg5ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg5ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg6ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg6ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg6ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg6ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg6ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg6ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg7ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg7ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg7ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg7ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg7ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg7ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vloxseg8ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg8ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vloxseg8ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsoxseg8ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg8ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsoxseg8ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg2ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg2ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg2ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg2ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg2ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg2ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg3ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg3ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg3ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg3ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg3ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg3ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg4ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg4ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg4ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg4ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg4ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg4ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg5ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg5ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg5ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg5ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg5ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg5ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg6ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg6ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg6ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg6ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg6ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg6ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg7ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg7ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg7ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg7ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg7ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg7ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vluxseg8ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg8ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vluxseg8ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vsuxseg8ei64.v v4,\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg8ei64.v v4,0\\(a0\\),v12'\n+.*Error: illegal opcode for zve32x `vsuxseg8ei64.v v4,\\(a0\\),v12,v0.t'\n+.*Error: illegal opcode for zve32x `vlseg2e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg2e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg2e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg3e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg3e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg3e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg4e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg4e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg4e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg5e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg5e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg5e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg6e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg6e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg6e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg7e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg7e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg7e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vlseg8e64ff.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg8e64ff.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vlseg8e64ff.v v4,\\(a0\\),v0.t'\n+.*Error: illegal opcode for zve32x `vl1re64.v v3,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl1re64.v v3,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl2re64.v v2,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl2re64.v v2,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl4re64.v v4,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl4re64.v v4,0\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl8re64.v v8,\\(a0\\)'\n+.*Error: illegal opcode for zve32x `vl8re64.v v8,0\\(a0\\)'"
    },
    {
      "sha": "b8549a6866609198309348615c984e84a0ebfe73",
      "filename": "gas/testsuite/gas/riscv/vector-insns-fail-zvl.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zvl.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zvl.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-fail-zvl.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -march=rv32i_zvl65536b\n+#source: empty.s\n+#error_output: vector-insns-fail-zvl.l"
    },
    {
      "sha": "d820ded1e91401fb2e9e90a4ab05197a6e9e1474",
      "filename": "gas/testsuite/gas/riscv/vector-insns-fail-zvl.l",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zvl.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-fail-zvl.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-fail-zvl.l?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,2 @@\n+.*Assembler messages:\n+.*Error: zvl\\*b extensions need to enable either `v' or `zve' extension"
    },
    {
      "sha": "dcc951a3cbf71ae9d4255ebb3b7716adde0bfda2",
      "filename": "gas/testsuite/gas/riscv/vector-insns-vmsgtvx.d",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,29 @@\n+#as: -march=rv32iv\n+#objdump: -dr\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+[0-9a-f]+:[ \t]+6e85c257[ \t]+vmslt.vx[ \t]+v4,v8,a1\n+[ \t]+[0-9a-f]+:[ \t]+76422257[ \t]+vmnot.m[ \t]+v4,v4\n+[ \t]+[0-9a-f]+:[ \t]+6cc64457[ \t]+vmslt.vx[ \t]+v8,v12,a2,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+6e802457[ \t]+vmxor.mm[ \t]+v8,v8,v0\n+[ \t]+[0-9a-f]+:[ \t]+6c85c657[ \t]+vmslt.vx[ \t]+v12,v8,a1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+62062057[ \t]+vmandn.mm[ \t]+v0,v0,v12\n+[ \t]+[0-9a-f]+:[ \t]+6c85c657[ \t]+vmslt.vx[ \t]+v12,v8,a1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+62062657[ \t]+vmandn.mm[ \t]+v12,v0,v12\n+[ \t]+[0-9a-f]+:[ \t]+62402257[ \t]+vmandn.mm[ \t]+v4,v4,v0\n+[ \t]+[0-9a-f]+:[ \t]+6ac22257[ \t]+vmor.mm[ \t]+v4,v12,v4\n+[ \t]+[0-9a-f]+:[ \t]+6a85c257[ \t]+vmsltu.vx[ \t]+v4,v8,a1\n+[ \t]+[0-9a-f]+:[ \t]+76422257[ \t]+vmnot.m[ \t]+v4,v4\n+[ \t]+[0-9a-f]+:[ \t]+68c64457[ \t]+vmsltu.vx[ \t]+v8,v12,a2,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+6e802457[ \t]+vmxor.mm[ \t]+v8,v8,v0\n+[ \t]+[0-9a-f]+:[ \t]+6885c657[ \t]+vmsltu.vx[ \t]+v12,v8,a1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+62062057[ \t]+vmandn.mm[ \t]+v0,v0,v12\n+[ \t]+[0-9a-f]+:[ \t]+6885c657[ \t]+vmsltu.vx[ \t]+v12,v8,a1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+62062657[ \t]+vmandn.mm[ \t]+v12,v0,v12\n+[ \t]+[0-9a-f]+:[ \t]+62402257[ \t]+vmandn.mm[ \t]+v4,v4,v0\n+[ \t]+[0-9a-f]+:[ \t]+6ac22257[ \t]+vmor.mm[ \t]+v4,v12,v4"
    },
    {
      "sha": "afbb7ccb3624a877df2b7602476e457eb7018824",
      "filename": "gas/testsuite/gas/riscv/vector-insns-vmsgtvx.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-vmsgtvx.s?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,9 @@\n+\tvmsge.vx v4, v8, a1\t\t# unmasked va >= x\n+\tvmsge.vx v8, v12, a2, v0.t\t# masked va >= x, vd != v0\n+\tvmsge.vx v0, v8, a1, v0.t, v12\t# masked va >= x, vd == v0\n+\tvmsge.vx v4, v8, a1, v0.t, v12\t# masked va >= x, any vd\n+\n+\tvmsgeu.vx v4, v8, a1\t\t# unmasked va >= x\n+\tvmsgeu.vx v8, v12, a2, v0.t\t# masked va >= x, vd != v0\n+\tvmsgeu.vx v0, v8, a1, v0.t, v12\t# masked va >= x, vd == v0\n+\tvmsgeu.vx v4, v8, a1, v0.t, v12\t# masked va >= x, any vd"
    },
    {
      "sha": "88a3cfdee44bb60d5aa94c73b2634fcf33df6e57",
      "filename": "gas/testsuite/gas/riscv/vector-insns-zero-imm.d",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-zero-imm.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-zero-imm.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-zero-imm.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,17 @@\n+#as: -march=rv32iv\n+#objdump: -dr\n+\n+.*:[ \t]+file format .*\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <.text>:\n+[ \t]+[0-9a-f]+:[ \t]+768fb257[ \t]+vmsle.vi[ \t]+v4,v8,-1\n+[ \t]+[0-9a-f]+:[ \t]+748fb257[ \t]+vmsle.vi[ \t]+v4,v8,-1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+66840257[ \t]+vmsne.vv[ \t]+v4,v8,v8\n+[ \t]+[0-9a-f]+:[ \t]+64840257[ \t]+vmsne.vv[ \t]+v4,v8,v8,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+7e8fb257[ \t]+vmsgt.vi[ \t]+v4,v8,-1\n+[ \t]+[0-9a-f]+:[ \t]+7c8fb257[ \t]+vmsgt.vi[ \t]+v4,v8,-1,v0.t\n+[ \t]+[0-9a-f]+:[ \t]+62840257[ \t]+vmseq.vv[ \t]+v4,v8,v8\n+[ \t]+[0-9a-f]+:[ \t]+60840257[ \t]+vmseq.vv[ \t]+v4,v8,v8,v0.t"
    },
    {
      "sha": "98b7063880e38944b8b4283b5b1e65b061b3d677",
      "filename": "gas/testsuite/gas/riscv/vector-insns-zero-imm.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-zero-imm.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns-zero-imm.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns-zero-imm.s?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,8 @@\n+\tvmslt.vi v4, v8, 0\n+\tvmslt.vi v4, v8, 0, v0.t\n+\tvmsltu.vi v4, v8, 0\n+\tvmsltu.vi v4, v8, 0, v0.t\n+\tvmsge.vi v4, v8, 0\n+\tvmsge.vi v4, v8, 0, v0.t\n+\tvmsgeu.vi v4, v8, 0\n+\tvmsgeu.vi v4, v8, 0, v0.t"
    },
    {
      "sha": "711f9275d4663cdc1315d9be3ea9a2ae1419b799",
      "filename": "gas/testsuite/gas/riscv/vector-insns.d",
      "status": "added",
      "additions": 1666,
      "deletions": 0,
      "changes": 1666,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns.d?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125"
    },
    {
      "sha": "37b6ba48e5c6a2a6a73c92bd40d06297e34e7cc7",
      "filename": "gas/testsuite/gas/riscv/vector-insns.s",
      "status": "added",
      "additions": 1883,
      "deletions": 0,
      "changes": 1883,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/gas/testsuite/gas/riscv/vector-insns.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/vector-insns.s?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -0,0 +1,1883 @@\n+\tvsetvl a0, a1, a2\n+\tvsetvli a0, a1, 0\n+\tvsetvli a0, a1, 0x7ff\n+\tvsetvli a0, a1, e16, m2\n+\tvsetvli a0, a1, e256, m8\n+\tvsetvli a0, a1, e512, m8\n+\tvsetvli a0, a1, e1024, m8\n+\tvsetvli a0, a1, e1024, m1\n+\tvsetvli a0, a1, e1024, mf2\n+\tvsetvli a0, a1, e512, mf4\n+\tvsetvli a0, a1, e256, mf8\n+\tvsetvli a0, a1, e256, m2, ta\n+\tvsetvli a0, a1, e256, m2, ma\n+\tvsetvli a0, a1, e256, m2, tu\n+\tvsetvli a0, a1, e256, m2, mu\n+\tvsetvli a0, a1, e256, m2, ta, ma\n+\tvsetvli a0, a1, e256, m2, tu, ma\n+\tvsetvli a0, a1, e256, m2, ta, mu\n+\tvsetvli a0, a1, e256, m2, tu, mu\n+\tvsetivli a0, 0xb, 0\n+\tvsetivli a0, 0xb, 0x3ff\n+\tvsetivli a0, 0xb, e16, m2\n+\tvsetivli a0, 0xb, e256, m8\n+\tvsetivli a0, 0xb, e512, m8\n+\tvsetivli a0, 0xb, e1024, m8\n+\tvsetivli a0, 0xb, e1024, m1\n+\tvsetivli a0, 0xb, e1024, mf2\n+\tvsetivli a0, 0xb, e512, mf4\n+\tvsetivli a0, 0xb, e256, mf8\n+\tvsetivli a0, 0xb, e256, m2, ta\n+\tvsetivli a0, 0xb, e256, m2, ma\n+\tvsetivli a0, 0xb, e256, m2, tu\n+\tvsetivli a0, 0xb, e256, m2, mu\n+\tvsetivli a0, 0xb, e256, m2, ta, ma\n+\tvsetivli a0, 0xb, e256, m2, tu, ma\n+\tvsetivli a0, 0xb, e256, m2, ta, mu\n+\tvsetivli a0, 0xb, e256, m2, tu, mu\n+\n+\tvlm.v v4, (a0)\n+\tvlm.v v4, 0(a0)\n+\tvle1.v v4, (a0)\t\t# Alias of vlm.v\n+\tvle1.v v4, 0(a0)\n+\tvsm.v v4, (a0)\n+\tvsm.v v4, 0(a0)\n+\tvse1.v v4, (a0)\t\t# Alias of vsm.v\n+\tvse1.v v4, 0(a0)\n+\n+\tvle8.v v4, (a0)\n+\tvle8.v v4, 0(a0)\n+\tvle8.v v4, (a0), v0.t\n+\tvse8.v v4, (a0)\n+\tvse8.v v4, 0(a0)\n+\tvse8.v v4, (a0), v0.t\n+\n+\tvle16.v v4, (a0)\n+\tvle16.v v4, 0(a0)\n+\tvle16.v v4, (a0), v0.t\n+\tvse16.v v4, (a0)\n+\tvse16.v v4, 0(a0)\n+\tvse16.v v4, (a0), v0.t\n+\n+\tvle32.v v4, (a0)\n+\tvle32.v v4, 0(a0)\n+\tvle32.v v4, (a0), v0.t\n+\tvse32.v v4, (a0)\n+\tvse32.v v4, 0(a0)\n+\tvse32.v v4, (a0), v0.t\n+\n+\tvle64.v v4, (a0)\n+\tvle64.v v4, 0(a0)\n+\tvle64.v v4, (a0), v0.t\n+\tvse64.v v4, (a0)\n+\tvse64.v v4, 0(a0)\n+\tvse64.v v4, (a0), v0.t\n+\n+\tvlse8.v v4, (a0), a1\n+\tvlse8.v v4, 0(a0), a1\n+\tvlse8.v v4, (a0), a1, v0.t\n+\tvsse8.v v4, (a0), a1\n+\tvsse8.v v4, 0(a0), a1\n+\tvsse8.v v4, (a0), a1, v0.t\n+\n+\tvlse16.v v4, (a0), a1\n+\tvlse16.v v4, 0(a0), a1\n+\tvlse16.v v4, (a0), a1, v0.t\n+\tvsse16.v v4, (a0), a1\n+\tvsse16.v v4, 0(a0), a1\n+\tvsse16.v v4, (a0), a1, v0.t\n+\n+\tvlse32.v v4, (a0), a1\n+\tvlse32.v v4, 0(a0), a1\n+\tvlse32.v v4, (a0), a1, v0.t\n+\tvsse32.v v4, (a0), a1\n+\tvsse32.v v4, 0(a0), a1\n+\tvsse32.v v4, (a0), a1, v0.t\n+\n+\tvlse64.v v4, (a0), a1\n+\tvlse64.v v4, 0(a0), a1\n+\tvlse64.v v4, (a0), a1, v0.t\n+\tvsse64.v v4, (a0), a1\n+\tvsse64.v v4, 0(a0), a1\n+\tvsse64.v v4, (a0), a1, v0.t\n+\n+\tvloxei8.v v4, (a0), v12\n+\tvloxei8.v v4, 0(a0), v12\n+\tvloxei8.v v4, (a0), v12, v0.t\n+\tvsoxei8.v v4, (a0), v12\n+\tvsoxei8.v v4, 0(a0), v12\n+\tvsoxei8.v v4, (a0), v12, v0.t\n+\tvluxei8.v v4, (a0), v12\n+\tvluxei8.v v4, 0(a0), v12\n+\tvluxei8.v v4, (a0), v12, v0.t\n+\tvsuxei8.v v4, (a0), v12\n+\tvsuxei8.v v4, 0(a0), v12\n+\tvsuxei8.v v4, (a0), v12, v0.t\n+\n+\tvloxei16.v v4, (a0), v12\n+\tvloxei16.v v4, 0(a0), v12\n+\tvloxei16.v v4, (a0), v12, v0.t\n+\tvsoxei16.v v4, (a0), v12\n+\tvsoxei16.v v4, 0(a0), v12\n+\tvsoxei16.v v4, (a0), v12, v0.t\n+\tvluxei16.v v4, (a0), v12\n+\tvluxei16.v v4, 0(a0), v12\n+\tvluxei16.v v4, (a0), v12, v0.t\n+\tvsuxei16.v v4, (a0), v12\n+\tvsuxei16.v v4, 0(a0), v12\n+\tvsuxei16.v v4, (a0), v12, v0.t\n+\n+\tvloxei32.v v4, (a0), v12\n+\tvloxei32.v v4, 0(a0), v12\n+\tvloxei32.v v4, (a0), v12, v0.t\n+\tvsoxei32.v v4, (a0), v12\n+\tvsoxei32.v v4, 0(a0), v12\n+\tvsoxei32.v v4, (a0), v12, v0.t\n+\tvluxei32.v v4, (a0), v12\n+\tvluxei32.v v4, 0(a0), v12\n+\tvluxei32.v v4, (a0), v12, v0.t\n+\tvsuxei32.v v4, (a0), v12\n+\tvsuxei32.v v4, 0(a0), v12\n+\tvsuxei32.v v4, (a0), v12, v0.t\n+\n+\tvloxei64.v v4, (a0), v12\n+\tvloxei64.v v4, 0(a0), v12\n+\tvloxei64.v v4, (a0), v12, v0.t\n+\tvsoxei64.v v4, (a0), v12\n+\tvsoxei64.v v4, 0(a0), v12\n+\tvsoxei64.v v4, (a0), v12, v0.t\n+\tvluxei64.v v4, (a0), v12\n+\tvluxei64.v v4, 0(a0), v12\n+\tvluxei64.v v4, (a0), v12, v0.t\n+\tvsuxei64.v v4, (a0), v12\n+\tvsuxei64.v v4, 0(a0), v12\n+\tvsuxei64.v v4, (a0), v12, v0.t\n+\n+\tvle8ff.v v4, (a0)\n+\tvle8ff.v v4, 0(a0)\n+\tvle8ff.v v4, (a0), v0.t\n+\n+\tvle16ff.v v4, (a0)\n+\tvle16ff.v v4, 0(a0)\n+\tvle16ff.v v4, (a0), v0.t\n+\n+\tvle32ff.v v4, (a0)\n+\tvle32ff.v v4, 0(a0)\n+\tvle32ff.v v4, (a0), v0.t\n+\n+\tvle64ff.v v4, (a0)\n+\tvle64ff.v v4, 0(a0)\n+\tvle64ff.v v4, (a0), v0.t\n+\n+\tvlseg2e8.v v4, (a0)\n+\tvlseg2e8.v v4, 0(a0)\n+\tvlseg2e8.v v4, (a0), v0.t\n+\tvsseg2e8.v v4, (a0)\n+\tvsseg2e8.v v4, 0(a0)\n+\tvsseg2e8.v v4, (a0), v0.t\n+\n+\tvlseg3e8.v v4, (a0)\n+\tvlseg3e8.v v4, 0(a0)\n+\tvlseg3e8.v v4, (a0), v0.t\n+\tvsseg3e8.v v4, (a0)\n+\tvsseg3e8.v v4, 0(a0)\n+\tvsseg3e8.v v4, (a0), v0.t\n+\n+\tvlseg4e8.v v4, (a0)\n+\tvlseg4e8.v v4, 0(a0)\n+\tvlseg4e8.v v4, (a0), v0.t\n+\tvsseg4e8.v v4, (a0)\n+\tvsseg4e8.v v4, 0(a0)\n+\tvsseg4e8.v v4, (a0), v0.t\n+\n+\tvlseg5e8.v v4, (a0)\n+\tvlseg5e8.v v4, 0(a0)\n+\tvlseg5e8.v v4, (a0), v0.t\n+\tvsseg5e8.v v4, (a0)\n+\tvsseg5e8.v v4, 0(a0)\n+\tvsseg5e8.v v4, (a0), v0.t\n+\n+\tvlseg6e8.v v4, (a0)\n+\tvlseg6e8.v v4, 0(a0)\n+\tvlseg6e8.v v4, (a0), v0.t\n+\tvsseg6e8.v v4, (a0)\n+\tvsseg6e8.v v4, 0(a0)\n+\tvsseg6e8.v v4, (a0), v0.t\n+\n+\tvlseg7e8.v v4, (a0)\n+\tvlseg7e8.v v4, 0(a0)\n+\tvlseg7e8.v v4, (a0), v0.t\n+\tvsseg7e8.v v4, (a0)\n+\tvsseg7e8.v v4, 0(a0)\n+\tvsseg7e8.v v4, (a0), v0.t\n+\n+\tvlseg8e8.v v4, (a0)\n+\tvlseg8e8.v v4, 0(a0)\n+\tvlseg8e8.v v4, (a0), v0.t\n+\tvsseg8e8.v v4, (a0)\n+\tvsseg8e8.v v4, 0(a0)\n+\tvsseg8e8.v v4, (a0), v0.t\n+\n+\tvlseg2e16.v v4, (a0)\n+\tvlseg2e16.v v4, 0(a0)\n+\tvlseg2e16.v v4, (a0), v0.t\n+\tvsseg2e16.v v4, (a0)\n+\tvsseg2e16.v v4, 0(a0)\n+\tvsseg2e16.v v4, (a0), v0.t\n+\n+\tvlseg3e16.v v4, (a0)\n+\tvlseg3e16.v v4, 0(a0)\n+\tvlseg3e16.v v4, (a0), v0.t\n+\tvsseg3e16.v v4, (a0)\n+\tvsseg3e16.v v4, 0(a0)\n+\tvsseg3e16.v v4, (a0), v0.t\n+\n+\tvlseg4e16.v v4, (a0)\n+\tvlseg4e16.v v4, 0(a0)\n+\tvlseg4e16.v v4, (a0), v0.t\n+\tvsseg4e16.v v4, (a0)\n+\tvsseg4e16.v v4, 0(a0)\n+\tvsseg4e16.v v4, (a0), v0.t\n+\n+\tvlseg5e16.v v4, (a0)\n+\tvlseg5e16.v v4, 0(a0)\n+\tvlseg5e16.v v4, (a0), v0.t\n+\tvsseg5e16.v v4, (a0)\n+\tvsseg5e16.v v4, 0(a0)\n+\tvsseg5e16.v v4, (a0), v0.t\n+\n+\tvlseg6e16.v v4, (a0)\n+\tvlseg6e16.v v4, 0(a0)\n+\tvlseg6e16.v v4, (a0), v0.t\n+\tvsseg6e16.v v4, (a0)\n+\tvsseg6e16.v v4, 0(a0)\n+\tvsseg6e16.v v4, (a0), v0.t\n+\n+\tvlseg7e16.v v4, (a0)\n+\tvlseg7e16.v v4, 0(a0)\n+\tvlseg7e16.v v4, (a0), v0.t\n+\tvsseg7e16.v v4, (a0)\n+\tvsseg7e16.v v4, 0(a0)\n+\tvsseg7e16.v v4, (a0), v0.t\n+\n+\tvlseg8e16.v v4, (a0)\n+\tvlseg8e16.v v4, 0(a0)\n+\tvlseg8e16.v v4, (a0), v0.t\n+\tvsseg8e16.v v4, (a0)\n+\tvsseg8e16.v v4, 0(a0)\n+\tvsseg8e16.v v4, (a0), v0.t\n+\n+\tvlseg2e32.v v4, (a0)\n+\tvlseg2e32.v v4, 0(a0)\n+\tvlseg2e32.v v4, (a0), v0.t\n+\tvsseg2e32.v v4, (a0)\n+\tvsseg2e32.v v4, 0(a0)\n+\tvsseg2e32.v v4, (a0), v0.t\n+\n+\tvlseg3e32.v v4, (a0)\n+\tvlseg3e32.v v4, 0(a0)\n+\tvlseg3e32.v v4, (a0), v0.t\n+\tvsseg3e32.v v4, (a0)\n+\tvsseg3e32.v v4, 0(a0)\n+\tvsseg3e32.v v4, (a0), v0.t\n+\n+\tvlseg4e32.v v4, (a0)\n+\tvlseg4e32.v v4, 0(a0)\n+\tvlseg4e32.v v4, (a0), v0.t\n+\tvsseg4e32.v v4, (a0)\n+\tvsseg4e32.v v4, 0(a0)\n+\tvsseg4e32.v v4, (a0), v0.t\n+\n+\tvlseg5e32.v v4, (a0)\n+\tvlseg5e32.v v4, 0(a0)\n+\tvlseg5e32.v v4, (a0), v0.t\n+\tvsseg5e32.v v4, (a0)\n+\tvsseg5e32.v v4, 0(a0)\n+\tvsseg5e32.v v4, (a0), v0.t\n+\n+\tvlseg6e32.v v4, (a0)\n+\tvlseg6e32.v v4, 0(a0)\n+\tvlseg6e32.v v4, (a0), v0.t\n+\tvsseg6e32.v v4, (a0)\n+\tvsseg6e32.v v4, 0(a0)\n+\tvsseg6e32.v v4, (a0), v0.t\n+\n+\tvlseg7e32.v v4, (a0)\n+\tvlseg7e32.v v4, 0(a0)\n+\tvlseg7e32.v v4, (a0), v0.t\n+\tvsseg7e32.v v4, (a0)\n+\tvsseg7e32.v v4, 0(a0)\n+\tvsseg7e32.v v4, (a0), v0.t\n+\n+\tvlseg8e32.v v4, (a0)\n+\tvlseg8e32.v v4, 0(a0)\n+\tvlseg8e32.v v4, (a0), v0.t\n+\tvsseg8e32.v v4, (a0)\n+\tvsseg8e32.v v4, 0(a0)\n+\tvsseg8e32.v v4, (a0), v0.t\n+\n+\tvlseg2e64.v v4, (a0)\n+\tvlseg2e64.v v4, 0(a0)\n+\tvlseg2e64.v v4, (a0), v0.t\n+\tvsseg2e64.v v4, (a0)\n+\tvsseg2e64.v v4, 0(a0)\n+\tvsseg2e64.v v4, (a0), v0.t\n+\n+\tvlseg3e64.v v4, (a0)\n+\tvlseg3e64.v v4, 0(a0)\n+\tvlseg3e64.v v4, (a0), v0.t\n+\tvsseg3e64.v v4, (a0)\n+\tvsseg3e64.v v4, 0(a0)\n+\tvsseg3e64.v v4, (a0), v0.t\n+\n+\tvlseg4e64.v v4, (a0)\n+\tvlseg4e64.v v4, 0(a0)\n+\tvlseg4e64.v v4, (a0), v0.t\n+\tvsseg4e64.v v4, (a0)\n+\tvsseg4e64.v v4, 0(a0)\n+\tvsseg4e64.v v4, (a0), v0.t\n+\n+\tvlseg5e64.v v4, (a0)\n+\tvlseg5e64.v v4, 0(a0)\n+\tvlseg5e64.v v4, (a0), v0.t\n+\tvsseg5e64.v v4, (a0)\n+\tvsseg5e64.v v4, 0(a0)\n+\tvsseg5e64.v v4, (a0), v0.t\n+\n+\tvlseg6e64.v v4, (a0)\n+\tvlseg6e64.v v4, 0(a0)\n+\tvlseg6e64.v v4, (a0), v0.t\n+\tvsseg6e64.v v4, (a0)\n+\tvsseg6e64.v v4, 0(a0)\n+\tvsseg6e64.v v4, (a0), v0.t\n+\n+\tvlseg7e64.v v4, (a0)\n+\tvlseg7e64.v v4, 0(a0)\n+\tvlseg7e64.v v4, (a0), v0.t\n+\tvsseg7e64.v v4, (a0)\n+\tvsseg7e64.v v4, 0(a0)\n+\tvsseg7e64.v v4, (a0), v0.t\n+\n+\tvlseg8e64.v v4, (a0)\n+\tvlseg8e64.v v4, 0(a0)\n+\tvlseg8e64.v v4, (a0), v0.t\n+\tvsseg8e64.v v4, (a0)\n+\tvsseg8e64.v v4, 0(a0)\n+\tvsseg8e64.v v4, (a0), v0.t\n+\n+\tvlsseg2e8.v v4, (a0), a1\n+\tvlsseg2e8.v v4, 0(a0), a1\n+\tvlsseg2e8.v v4, (a0), a1, v0.t\n+\tvssseg2e8.v v4, (a0), a1\n+\tvssseg2e8.v v4, 0(a0), a1\n+\tvssseg2e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg3e8.v v4, (a0), a1\n+\tvlsseg3e8.v v4, 0(a0), a1\n+\tvlsseg3e8.v v4, (a0), a1, v0.t\n+\tvssseg3e8.v v4, (a0), a1\n+\tvssseg3e8.v v4, 0(a0), a1\n+\tvssseg3e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg4e8.v v4, (a0), a1\n+\tvlsseg4e8.v v4, 0(a0), a1\n+\tvlsseg4e8.v v4, (a0), a1, v0.t\n+\tvssseg4e8.v v4, (a0), a1\n+\tvssseg4e8.v v4, 0(a0), a1\n+\tvssseg4e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg5e8.v v4, (a0), a1\n+\tvlsseg5e8.v v4, 0(a0), a1\n+\tvlsseg5e8.v v4, (a0), a1, v0.t\n+\tvssseg5e8.v v4, (a0), a1\n+\tvssseg5e8.v v4, 0(a0), a1\n+\tvssseg5e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg6e8.v v4, (a0), a1\n+\tvlsseg6e8.v v4, 0(a0), a1\n+\tvlsseg6e8.v v4, (a0), a1, v0.t\n+\tvssseg6e8.v v4, (a0), a1\n+\tvssseg6e8.v v4, 0(a0), a1\n+\tvssseg6e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg7e8.v v4, (a0), a1\n+\tvlsseg7e8.v v4, 0(a0), a1\n+\tvlsseg7e8.v v4, (a0), a1, v0.t\n+\tvssseg7e8.v v4, (a0), a1\n+\tvssseg7e8.v v4, 0(a0), a1\n+\tvssseg7e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg8e8.v v4, (a0), a1\n+\tvlsseg8e8.v v4, 0(a0), a1\n+\tvlsseg8e8.v v4, (a0), a1, v0.t\n+\tvssseg8e8.v v4, (a0), a1\n+\tvssseg8e8.v v4, 0(a0), a1\n+\tvssseg8e8.v v4, (a0), a1, v0.t\n+\n+\tvlsseg2e16.v v4, (a0), a1\n+\tvlsseg2e16.v v4, 0(a0), a1\n+\tvlsseg2e16.v v4, (a0), a1, v0.t\n+\tvssseg2e16.v v4, (a0), a1\n+\tvssseg2e16.v v4, 0(a0), a1\n+\tvssseg2e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg3e16.v v4, (a0), a1\n+\tvlsseg3e16.v v4, 0(a0), a1\n+\tvlsseg3e16.v v4, (a0), a1, v0.t\n+\tvssseg3e16.v v4, (a0), a1\n+\tvssseg3e16.v v4, 0(a0), a1\n+\tvssseg3e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg4e16.v v4, (a0), a1\n+\tvlsseg4e16.v v4, 0(a0), a1\n+\tvlsseg4e16.v v4, (a0), a1, v0.t\n+\tvssseg4e16.v v4, (a0), a1\n+\tvssseg4e16.v v4, 0(a0), a1\n+\tvssseg4e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg5e16.v v4, (a0), a1\n+\tvlsseg5e16.v v4, 0(a0), a1\n+\tvlsseg5e16.v v4, (a0), a1, v0.t\n+\tvssseg5e16.v v4, (a0), a1\n+\tvssseg5e16.v v4, 0(a0), a1\n+\tvssseg5e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg6e16.v v4, (a0), a1\n+\tvlsseg6e16.v v4, 0(a0), a1\n+\tvlsseg6e16.v v4, (a0), a1, v0.t\n+\tvssseg6e16.v v4, (a0), a1\n+\tvssseg6e16.v v4, 0(a0), a1\n+\tvssseg6e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg7e16.v v4, (a0), a1\n+\tvlsseg7e16.v v4, 0(a0), a1\n+\tvlsseg7e16.v v4, (a0), a1, v0.t\n+\tvssseg7e16.v v4, (a0), a1\n+\tvssseg7e16.v v4, 0(a0), a1\n+\tvssseg7e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg8e16.v v4, (a0), a1\n+\tvlsseg8e16.v v4, 0(a0), a1\n+\tvlsseg8e16.v v4, (a0), a1, v0.t\n+\tvssseg8e16.v v4, (a0), a1\n+\tvssseg8e16.v v4, 0(a0), a1\n+\tvssseg8e16.v v4, (a0), a1, v0.t\n+\n+\tvlsseg2e32.v v4, (a0), a1\n+\tvlsseg2e32.v v4, 0(a0), a1\n+\tvlsseg2e32.v v4, (a0), a1, v0.t\n+\tvssseg2e32.v v4, (a0), a1\n+\tvssseg2e32.v v4, 0(a0), a1\n+\tvssseg2e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg3e32.v v4, (a0), a1\n+\tvlsseg3e32.v v4, 0(a0), a1\n+\tvlsseg3e32.v v4, (a0), a1, v0.t\n+\tvssseg3e32.v v4, (a0), a1\n+\tvssseg3e32.v v4, 0(a0), a1\n+\tvssseg3e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg4e32.v v4, (a0), a1\n+\tvlsseg4e32.v v4, 0(a0), a1\n+\tvlsseg4e32.v v4, (a0), a1, v0.t\n+\tvssseg4e32.v v4, (a0), a1\n+\tvssseg4e32.v v4, 0(a0), a1\n+\tvssseg4e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg5e32.v v4, (a0), a1\n+\tvlsseg5e32.v v4, 0(a0), a1\n+\tvlsseg5e32.v v4, (a0), a1, v0.t\n+\tvssseg5e32.v v4, (a0), a1\n+\tvssseg5e32.v v4, 0(a0), a1\n+\tvssseg5e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg6e32.v v4, (a0), a1\n+\tvlsseg6e32.v v4, 0(a0), a1\n+\tvlsseg6e32.v v4, (a0), a1, v0.t\n+\tvssseg6e32.v v4, (a0), a1\n+\tvssseg6e32.v v4, 0(a0), a1\n+\tvssseg6e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg7e32.v v4, (a0), a1\n+\tvlsseg7e32.v v4, 0(a0), a1\n+\tvlsseg7e32.v v4, (a0), a1, v0.t\n+\tvssseg7e32.v v4, (a0), a1\n+\tvssseg7e32.v v4, 0(a0), a1\n+\tvssseg7e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg8e32.v v4, (a0), a1\n+\tvlsseg8e32.v v4, 0(a0), a1\n+\tvlsseg8e32.v v4, (a0), a1, v0.t\n+\tvssseg8e32.v v4, (a0), a1\n+\tvssseg8e32.v v4, 0(a0), a1\n+\tvssseg8e32.v v4, (a0), a1, v0.t\n+\n+\tvlsseg2e64.v v4, (a0), a1\n+\tvlsseg2e64.v v4, 0(a0), a1\n+\tvlsseg2e64.v v4, (a0), a1, v0.t\n+\tvssseg2e64.v v4, (a0), a1\n+\tvssseg2e64.v v4, 0(a0), a1\n+\tvssseg2e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg3e64.v v4, (a0), a1\n+\tvlsseg3e64.v v4, 0(a0), a1\n+\tvlsseg3e64.v v4, (a0), a1, v0.t\n+\tvssseg3e64.v v4, (a0), a1\n+\tvssseg3e64.v v4, 0(a0), a1\n+\tvssseg3e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg4e64.v v4, (a0), a1\n+\tvlsseg4e64.v v4, 0(a0), a1\n+\tvlsseg4e64.v v4, (a0), a1, v0.t\n+\tvssseg4e64.v v4, (a0), a1\n+\tvssseg4e64.v v4, 0(a0), a1\n+\tvssseg4e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg5e64.v v4, (a0), a1\n+\tvlsseg5e64.v v4, 0(a0), a1\n+\tvlsseg5e64.v v4, (a0), a1, v0.t\n+\tvssseg5e64.v v4, (a0), a1\n+\tvssseg5e64.v v4, 0(a0), a1\n+\tvssseg5e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg6e64.v v4, (a0), a1\n+\tvlsseg6e64.v v4, 0(a0), a1\n+\tvlsseg6e64.v v4, (a0), a1, v0.t\n+\tvssseg6e64.v v4, (a0), a1\n+\tvssseg6e64.v v4, 0(a0), a1\n+\tvssseg6e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg7e64.v v4, (a0), a1\n+\tvlsseg7e64.v v4, 0(a0), a1\n+\tvlsseg7e64.v v4, (a0), a1, v0.t\n+\tvssseg7e64.v v4, (a0), a1\n+\tvssseg7e64.v v4, 0(a0), a1\n+\tvssseg7e64.v v4, (a0), a1, v0.t\n+\n+\tvlsseg8e64.v v4, (a0), a1\n+\tvlsseg8e64.v v4, 0(a0), a1\n+\tvlsseg8e64.v v4, (a0), a1, v0.t\n+\tvssseg8e64.v v4, (a0), a1\n+\tvssseg8e64.v v4, 0(a0), a1\n+\tvssseg8e64.v v4, (a0), a1, v0.t\n+\n+\tvloxseg2ei8.v v4, (a0), v12\n+\tvloxseg2ei8.v v4, 0(a0), v12\n+\tvloxseg2ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg2ei8.v v4, (a0), v12\n+\tvsoxseg2ei8.v v4, 0(a0), v12\n+\tvsoxseg2ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg3ei8.v v4, (a0), v12\n+\tvloxseg3ei8.v v4, 0(a0), v12\n+\tvloxseg3ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg3ei8.v v4, (a0), v12\n+\tvsoxseg3ei8.v v4, 0(a0), v12\n+\tvsoxseg3ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg4ei8.v v4, (a0), v12\n+\tvloxseg4ei8.v v4, 0(a0), v12\n+\tvloxseg4ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg4ei8.v v4, (a0), v12\n+\tvsoxseg4ei8.v v4, 0(a0), v12\n+\tvsoxseg4ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg5ei8.v v4, (a0), v12\n+\tvloxseg5ei8.v v4, 0(a0), v12\n+\tvloxseg5ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg5ei8.v v4, (a0), v12\n+\tvsoxseg5ei8.v v4, 0(a0), v12\n+\tvsoxseg5ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg6ei8.v v4, (a0), v12\n+\tvloxseg6ei8.v v4, 0(a0), v12\n+\tvloxseg6ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg6ei8.v v4, (a0), v12\n+\tvsoxseg6ei8.v v4, 0(a0), v12\n+\tvsoxseg6ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg7ei8.v v4, (a0), v12\n+\tvloxseg7ei8.v v4, 0(a0), v12\n+\tvloxseg7ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg7ei8.v v4, (a0), v12\n+\tvsoxseg7ei8.v v4, 0(a0), v12\n+\tvsoxseg7ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg8ei8.v v4, (a0), v12\n+\tvloxseg8ei8.v v4, 0(a0), v12\n+\tvloxseg8ei8.v v4, (a0), v12, v0.t\n+\tvsoxseg8ei8.v v4, (a0), v12\n+\tvsoxseg8ei8.v v4, 0(a0), v12\n+\tvsoxseg8ei8.v v4, (a0), v12, v0.t\n+\n+\tvloxseg2ei16.v v4, (a0), v12\n+\tvloxseg2ei16.v v4, 0(a0), v12\n+\tvloxseg2ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg2ei16.v v4, (a0), v12\n+\tvsoxseg2ei16.v v4, 0(a0), v12\n+\tvsoxseg2ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg3ei16.v v4, (a0), v12\n+\tvloxseg3ei16.v v4, 0(a0), v12\n+\tvloxseg3ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg3ei16.v v4, (a0), v12\n+\tvsoxseg3ei16.v v4, 0(a0), v12\n+\tvsoxseg3ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg4ei16.v v4, (a0), v12\n+\tvloxseg4ei16.v v4, 0(a0), v12\n+\tvloxseg4ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg4ei16.v v4, (a0), v12\n+\tvsoxseg4ei16.v v4, 0(a0), v12\n+\tvsoxseg4ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg5ei16.v v4, (a0), v12\n+\tvloxseg5ei16.v v4, 0(a0), v12\n+\tvloxseg5ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg5ei16.v v4, (a0), v12\n+\tvsoxseg5ei16.v v4, 0(a0), v12\n+\tvsoxseg5ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg6ei16.v v4, (a0), v12\n+\tvloxseg6ei16.v v4, 0(a0), v12\n+\tvloxseg6ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg6ei16.v v4, (a0), v12\n+\tvsoxseg6ei16.v v4, 0(a0), v12\n+\tvsoxseg6ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg7ei16.v v4, (a0), v12\n+\tvloxseg7ei16.v v4, 0(a0), v12\n+\tvloxseg7ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg7ei16.v v4, (a0), v12\n+\tvsoxseg7ei16.v v4, 0(a0), v12\n+\tvsoxseg7ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg8ei16.v v4, (a0), v12\n+\tvloxseg8ei16.v v4, 0(a0), v12\n+\tvloxseg8ei16.v v4, (a0), v12, v0.t\n+\tvsoxseg8ei16.v v4, (a0), v12\n+\tvsoxseg8ei16.v v4, 0(a0), v12\n+\tvsoxseg8ei16.v v4, (a0), v12, v0.t\n+\n+\tvloxseg2ei32.v v4, (a0), v12\n+\tvloxseg2ei32.v v4, 0(a0), v12\n+\tvloxseg2ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg2ei32.v v4, (a0), v12\n+\tvsoxseg2ei32.v v4, 0(a0), v12\n+\tvsoxseg2ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg3ei32.v v4, (a0), v12\n+\tvloxseg3ei32.v v4, 0(a0), v12\n+\tvloxseg3ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg3ei32.v v4, (a0), v12\n+\tvsoxseg3ei32.v v4, 0(a0), v12\n+\tvsoxseg3ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg4ei32.v v4, (a0), v12\n+\tvloxseg4ei32.v v4, 0(a0), v12\n+\tvloxseg4ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg4ei32.v v4, (a0), v12\n+\tvsoxseg4ei32.v v4, 0(a0), v12\n+\tvsoxseg4ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg5ei32.v v4, (a0), v12\n+\tvloxseg5ei32.v v4, 0(a0), v12\n+\tvloxseg5ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg5ei32.v v4, (a0), v12\n+\tvsoxseg5ei32.v v4, 0(a0), v12\n+\tvsoxseg5ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg6ei32.v v4, (a0), v12\n+\tvloxseg6ei32.v v4, 0(a0), v12\n+\tvloxseg6ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg6ei32.v v4, (a0), v12\n+\tvsoxseg6ei32.v v4, 0(a0), v12\n+\tvsoxseg6ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg7ei32.v v4, (a0), v12\n+\tvloxseg7ei32.v v4, 0(a0), v12\n+\tvloxseg7ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg7ei32.v v4, (a0), v12\n+\tvsoxseg7ei32.v v4, 0(a0), v12\n+\tvsoxseg7ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg8ei32.v v4, (a0), v12\n+\tvloxseg8ei32.v v4, 0(a0), v12\n+\tvloxseg8ei32.v v4, (a0), v12, v0.t\n+\tvsoxseg8ei32.v v4, (a0), v12\n+\tvsoxseg8ei32.v v4, 0(a0), v12\n+\tvsoxseg8ei32.v v4, (a0), v12, v0.t\n+\n+\tvloxseg2ei64.v v4, (a0), v12\n+\tvloxseg2ei64.v v4, 0(a0), v12\n+\tvloxseg2ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg2ei64.v v4, (a0), v12\n+\tvsoxseg2ei64.v v4, 0(a0), v12\n+\tvsoxseg2ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg3ei64.v v4, (a0), v12\n+\tvloxseg3ei64.v v4, 0(a0), v12\n+\tvloxseg3ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg3ei64.v v4, (a0), v12\n+\tvsoxseg3ei64.v v4, 0(a0), v12\n+\tvsoxseg3ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg4ei64.v v4, (a0), v12\n+\tvloxseg4ei64.v v4, 0(a0), v12\n+\tvloxseg4ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg4ei64.v v4, (a0), v12\n+\tvsoxseg4ei64.v v4, 0(a0), v12\n+\tvsoxseg4ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg5ei64.v v4, (a0), v12\n+\tvloxseg5ei64.v v4, 0(a0), v12\n+\tvloxseg5ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg5ei64.v v4, (a0), v12\n+\tvsoxseg5ei64.v v4, 0(a0), v12\n+\tvsoxseg5ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg6ei64.v v4, (a0), v12\n+\tvloxseg6ei64.v v4, 0(a0), v12\n+\tvloxseg6ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg6ei64.v v4, (a0), v12\n+\tvsoxseg6ei64.v v4, 0(a0), v12\n+\tvsoxseg6ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg7ei64.v v4, (a0), v12\n+\tvloxseg7ei64.v v4, 0(a0), v12\n+\tvloxseg7ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg7ei64.v v4, (a0), v12\n+\tvsoxseg7ei64.v v4, 0(a0), v12\n+\tvsoxseg7ei64.v v4, (a0), v12, v0.t\n+\n+\tvloxseg8ei64.v v4, (a0), v12\n+\tvloxseg8ei64.v v4, 0(a0), v12\n+\tvloxseg8ei64.v v4, (a0), v12, v0.t\n+\tvsoxseg8ei64.v v4, (a0), v12\n+\tvsoxseg8ei64.v v4, 0(a0), v12\n+\tvsoxseg8ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg2ei8.v v4, (a0), v12\n+\tvluxseg2ei8.v v4, 0(a0), v12\n+\tvluxseg2ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg2ei8.v v4, (a0), v12\n+\tvsuxseg2ei8.v v4, 0(a0), v12\n+\tvsuxseg2ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg3ei8.v v4, (a0), v12\n+\tvluxseg3ei8.v v4, 0(a0), v12\n+\tvluxseg3ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg3ei8.v v4, (a0), v12\n+\tvsuxseg3ei8.v v4, 0(a0), v12\n+\tvsuxseg3ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg4ei8.v v4, (a0), v12\n+\tvluxseg4ei8.v v4, 0(a0), v12\n+\tvluxseg4ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg4ei8.v v4, (a0), v12\n+\tvsuxseg4ei8.v v4, 0(a0), v12\n+\tvsuxseg4ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg5ei8.v v4, (a0), v12\n+\tvluxseg5ei8.v v4, 0(a0), v12\n+\tvluxseg5ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg5ei8.v v4, (a0), v12\n+\tvsuxseg5ei8.v v4, 0(a0), v12\n+\tvsuxseg5ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg6ei8.v v4, (a0), v12\n+\tvluxseg6ei8.v v4, 0(a0), v12\n+\tvluxseg6ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg6ei8.v v4, (a0), v12\n+\tvsuxseg6ei8.v v4, 0(a0), v12\n+\tvsuxseg6ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg7ei8.v v4, (a0), v12\n+\tvluxseg7ei8.v v4, 0(a0), v12\n+\tvluxseg7ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg7ei8.v v4, (a0), v12\n+\tvsuxseg7ei8.v v4, 0(a0), v12\n+\tvsuxseg7ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg8ei8.v v4, (a0), v12\n+\tvluxseg8ei8.v v4, 0(a0), v12\n+\tvluxseg8ei8.v v4, (a0), v12, v0.t\n+\tvsuxseg8ei8.v v4, (a0), v12\n+\tvsuxseg8ei8.v v4, 0(a0), v12\n+\tvsuxseg8ei8.v v4, (a0), v12, v0.t\n+\n+\tvluxseg2ei16.v v4, (a0), v12\n+\tvluxseg2ei16.v v4, 0(a0), v12\n+\tvluxseg2ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg2ei16.v v4, (a0), v12\n+\tvsuxseg2ei16.v v4, 0(a0), v12\n+\tvsuxseg2ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg3ei16.v v4, (a0), v12\n+\tvluxseg3ei16.v v4, 0(a0), v12\n+\tvluxseg3ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg3ei16.v v4, (a0), v12\n+\tvsuxseg3ei16.v v4, 0(a0), v12\n+\tvsuxseg3ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg4ei16.v v4, (a0), v12\n+\tvluxseg4ei16.v v4, 0(a0), v12\n+\tvluxseg4ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg4ei16.v v4, (a0), v12\n+\tvsuxseg4ei16.v v4, 0(a0), v12\n+\tvsuxseg4ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg5ei16.v v4, (a0), v12\n+\tvluxseg5ei16.v v4, 0(a0), v12\n+\tvluxseg5ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg5ei16.v v4, (a0), v12\n+\tvsuxseg5ei16.v v4, 0(a0), v12\n+\tvsuxseg5ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg6ei16.v v4, (a0), v12\n+\tvluxseg6ei16.v v4, 0(a0), v12\n+\tvluxseg6ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg6ei16.v v4, (a0), v12\n+\tvsuxseg6ei16.v v4, 0(a0), v12\n+\tvsuxseg6ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg7ei16.v v4, (a0), v12\n+\tvluxseg7ei16.v v4, 0(a0), v12\n+\tvluxseg7ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg7ei16.v v4, (a0), v12\n+\tvsuxseg7ei16.v v4, 0(a0), v12\n+\tvsuxseg7ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg8ei16.v v4, (a0), v12\n+\tvluxseg8ei16.v v4, 0(a0), v12\n+\tvluxseg8ei16.v v4, (a0), v12, v0.t\n+\tvsuxseg8ei16.v v4, (a0), v12\n+\tvsuxseg8ei16.v v4, 0(a0), v12\n+\tvsuxseg8ei16.v v4, (a0), v12, v0.t\n+\n+\tvluxseg2ei32.v v4, (a0), v12\n+\tvluxseg2ei32.v v4, 0(a0), v12\n+\tvluxseg2ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg2ei32.v v4, (a0), v12\n+\tvsuxseg2ei32.v v4, 0(a0), v12\n+\tvsuxseg2ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg3ei32.v v4, (a0), v12\n+\tvluxseg3ei32.v v4, 0(a0), v12\n+\tvluxseg3ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg3ei32.v v4, (a0), v12\n+\tvsuxseg3ei32.v v4, 0(a0), v12\n+\tvsuxseg3ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg4ei32.v v4, (a0), v12\n+\tvluxseg4ei32.v v4, 0(a0), v12\n+\tvluxseg4ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg4ei32.v v4, (a0), v12\n+\tvsuxseg4ei32.v v4, 0(a0), v12\n+\tvsuxseg4ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg5ei32.v v4, (a0), v12\n+\tvluxseg5ei32.v v4, 0(a0), v12\n+\tvluxseg5ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg5ei32.v v4, (a0), v12\n+\tvsuxseg5ei32.v v4, 0(a0), v12\n+\tvsuxseg5ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg6ei32.v v4, (a0), v12\n+\tvluxseg6ei32.v v4, 0(a0), v12\n+\tvluxseg6ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg6ei32.v v4, (a0), v12\n+\tvsuxseg6ei32.v v4, 0(a0), v12\n+\tvsuxseg6ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg7ei32.v v4, (a0), v12\n+\tvluxseg7ei32.v v4, 0(a0), v12\n+\tvluxseg7ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg7ei32.v v4, (a0), v12\n+\tvsuxseg7ei32.v v4, 0(a0), v12\n+\tvsuxseg7ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg8ei32.v v4, (a0), v12\n+\tvluxseg8ei32.v v4, 0(a0), v12\n+\tvluxseg8ei32.v v4, (a0), v12, v0.t\n+\tvsuxseg8ei32.v v4, (a0), v12\n+\tvsuxseg8ei32.v v4, 0(a0), v12\n+\tvsuxseg8ei32.v v4, (a0), v12, v0.t\n+\n+\tvluxseg2ei64.v v4, (a0), v12\n+\tvluxseg2ei64.v v4, 0(a0), v12\n+\tvluxseg2ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg2ei64.v v4, (a0), v12\n+\tvsuxseg2ei64.v v4, 0(a0), v12\n+\tvsuxseg2ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg3ei64.v v4, (a0), v12\n+\tvluxseg3ei64.v v4, 0(a0), v12\n+\tvluxseg3ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg3ei64.v v4, (a0), v12\n+\tvsuxseg3ei64.v v4, 0(a0), v12\n+\tvsuxseg3ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg4ei64.v v4, (a0), v12\n+\tvluxseg4ei64.v v4, 0(a0), v12\n+\tvluxseg4ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg4ei64.v v4, (a0), v12\n+\tvsuxseg4ei64.v v4, 0(a0), v12\n+\tvsuxseg4ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg5ei64.v v4, (a0), v12\n+\tvluxseg5ei64.v v4, 0(a0), v12\n+\tvluxseg5ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg5ei64.v v4, (a0), v12\n+\tvsuxseg5ei64.v v4, 0(a0), v12\n+\tvsuxseg5ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg6ei64.v v4, (a0), v12\n+\tvluxseg6ei64.v v4, 0(a0), v12\n+\tvluxseg6ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg6ei64.v v4, (a0), v12\n+\tvsuxseg6ei64.v v4, 0(a0), v12\n+\tvsuxseg6ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg7ei64.v v4, (a0), v12\n+\tvluxseg7ei64.v v4, 0(a0), v12\n+\tvluxseg7ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg7ei64.v v4, (a0), v12\n+\tvsuxseg7ei64.v v4, 0(a0), v12\n+\tvsuxseg7ei64.v v4, (a0), v12, v0.t\n+\n+\tvluxseg8ei64.v v4, (a0), v12\n+\tvluxseg8ei64.v v4, 0(a0), v12\n+\tvluxseg8ei64.v v4, (a0), v12, v0.t\n+\tvsuxseg8ei64.v v4, (a0), v12\n+\tvsuxseg8ei64.v v4, 0(a0), v12\n+\tvsuxseg8ei64.v v4, (a0), v12, v0.t\n+\n+\tvlseg2e8ff.v v4, (a0)\n+\tvlseg2e8ff.v v4, 0(a0)\n+\tvlseg2e8ff.v v4, (a0), v0.t\n+\n+\tvlseg3e8ff.v v4, (a0)\n+\tvlseg3e8ff.v v4, 0(a0)\n+\tvlseg3e8ff.v v4, (a0), v0.t\n+\n+\tvlseg4e8ff.v v4, (a0)\n+\tvlseg4e8ff.v v4, 0(a0)\n+\tvlseg4e8ff.v v4, (a0), v0.t\n+\n+\tvlseg5e8ff.v v4, (a0)\n+\tvlseg5e8ff.v v4, 0(a0)\n+\tvlseg5e8ff.v v4, (a0), v0.t\n+\n+\tvlseg6e8ff.v v4, (a0)\n+\tvlseg6e8ff.v v4, 0(a0)\n+\tvlseg6e8ff.v v4, (a0), v0.t\n+\n+\tvlseg7e8ff.v v4, (a0)\n+\tvlseg7e8ff.v v4, 0(a0)\n+\tvlseg7e8ff.v v4, (a0), v0.t\n+\n+\tvlseg8e8ff.v v4, (a0)\n+\tvlseg8e8ff.v v4, 0(a0)\n+\tvlseg8e8ff.v v4, (a0), v0.t\n+\n+\tvlseg2e16ff.v v4, (a0)\n+\tvlseg2e16ff.v v4, 0(a0)\n+\tvlseg2e16ff.v v4, (a0), v0.t\n+\n+\tvlseg3e16ff.v v4, (a0)\n+\tvlseg3e16ff.v v4, 0(a0)\n+\tvlseg3e16ff.v v4, (a0), v0.t\n+\n+\tvlseg4e16ff.v v4, (a0)\n+\tvlseg4e16ff.v v4, 0(a0)\n+\tvlseg4e16ff.v v4, (a0), v0.t\n+\n+\tvlseg5e16ff.v v4, (a0)\n+\tvlseg5e16ff.v v4, 0(a0)\n+\tvlseg5e16ff.v v4, (a0), v0.t\n+\n+\tvlseg6e16ff.v v4, (a0)\n+\tvlseg6e16ff.v v4, 0(a0)\n+\tvlseg6e16ff.v v4, (a0), v0.t\n+\n+\tvlseg7e16ff.v v4, (a0)\n+\tvlseg7e16ff.v v4, 0(a0)\n+\tvlseg7e16ff.v v4, (a0), v0.t\n+\n+\tvlseg8e16ff.v v4, (a0)\n+\tvlseg8e16ff.v v4, 0(a0)\n+\tvlseg8e16ff.v v4, (a0), v0.t\n+\n+\tvlseg2e32ff.v v4, (a0)\n+\tvlseg2e32ff.v v4, 0(a0)\n+\tvlseg2e32ff.v v4, (a0), v0.t\n+\n+\tvlseg3e32ff.v v4, (a0)\n+\tvlseg3e32ff.v v4, 0(a0)\n+\tvlseg3e32ff.v v4, (a0), v0.t\n+\n+\tvlseg4e32ff.v v4, (a0)\n+\tvlseg4e32ff.v v4, 0(a0)\n+\tvlseg4e32ff.v v4, (a0), v0.t\n+\n+\tvlseg5e32ff.v v4, (a0)\n+\tvlseg5e32ff.v v4, 0(a0)\n+\tvlseg5e32ff.v v4, (a0), v0.t\n+\n+\tvlseg6e32ff.v v4, (a0)\n+\tvlseg6e32ff.v v4, 0(a0)\n+\tvlseg6e32ff.v v4, (a0), v0.t\n+\n+\tvlseg7e32ff.v v4, (a0)\n+\tvlseg7e32ff.v v4, 0(a0)\n+\tvlseg7e32ff.v v4, (a0), v0.t\n+\n+\tvlseg8e32ff.v v4, (a0)\n+\tvlseg8e32ff.v v4, 0(a0)\n+\tvlseg8e32ff.v v4, (a0), v0.t\n+\n+\tvlseg2e64ff.v v4, (a0)\n+\tvlseg2e64ff.v v4, 0(a0)\n+\tvlseg2e64ff.v v4, (a0), v0.t\n+\n+\tvlseg3e64ff.v v4, (a0)\n+\tvlseg3e64ff.v v4, 0(a0)\n+\tvlseg3e64ff.v v4, (a0), v0.t\n+\n+\tvlseg4e64ff.v v4, (a0)\n+\tvlseg4e64ff.v v4, 0(a0)\n+\tvlseg4e64ff.v v4, (a0), v0.t\n+\n+\tvlseg5e64ff.v v4, (a0)\n+\tvlseg5e64ff.v v4, 0(a0)\n+\tvlseg5e64ff.v v4, (a0), v0.t\n+\n+\tvlseg6e64ff.v v4, (a0)\n+\tvlseg6e64ff.v v4, 0(a0)\n+\tvlseg6e64ff.v v4, (a0), v0.t\n+\n+\tvlseg7e64ff.v v4, (a0)\n+\tvlseg7e64ff.v v4, 0(a0)\n+\tvlseg7e64ff.v v4, (a0), v0.t\n+\n+\tvlseg8e64ff.v v4, (a0)\n+\tvlseg8e64ff.v v4, 0(a0)\n+\tvlseg8e64ff.v v4, (a0), v0.t\n+\n+\tvl1r.v v3, (a0)\n+\tvl1r.v v3, 0(a0)\n+\tvl1re8.v v3, (a0)\n+\tvl1re8.v v3, 0(a0)\n+\tvl1re16.v v3, (a0)\n+\tvl1re16.v v3, 0(a0)\n+\tvl1re32.v v3, (a0)\n+\tvl1re32.v v3, 0(a0)\n+\tvl1re64.v v3, (a0)\n+\tvl1re64.v v3, 0(a0)\n+\n+\tvl2r.v v2, (a0)\n+\tvl2r.v v2, 0(a0)\n+\tvl2re8.v v2, (a0)\n+\tvl2re8.v v2, 0(a0)\n+\tvl2re16.v v2, (a0)\n+\tvl2re16.v v2, 0(a0)\n+\tvl2re32.v v2, (a0)\n+\tvl2re32.v v2, 0(a0)\n+\tvl2re64.v v2, (a0)\n+\tvl2re64.v v2, 0(a0)\n+\n+\tvl4r.v v4, (a0)\n+\tvl4r.v v4, 0(a0)\n+\tvl4re8.v v4, (a0)\n+\tvl4re8.v v4, 0(a0)\n+\tvl4re16.v v4, (a0)\n+\tvl4re16.v v4, 0(a0)\n+\tvl4re32.v v4, (a0)\n+\tvl4re32.v v4, 0(a0)\n+\tvl4re64.v v4, (a0)\n+\tvl4re64.v v4, 0(a0)\n+\n+\tvl8r.v v8, (a0)\n+\tvl8r.v v8, 0(a0)\n+\tvl8re8.v v8, (a0)\n+\tvl8re8.v v8, 0(a0)\n+\tvl8re16.v v8, (a0)\n+\tvl8re16.v v8, 0(a0)\n+\tvl8re32.v v8, (a0)\n+\tvl8re32.v v8, 0(a0)\n+\tvl8re64.v v8, (a0)\n+\tvl8re64.v v8, 0(a0)\n+\n+\tvs1r.v v3, (a1)\n+\tvs1r.v v3, 0(a1)\n+\tvs2r.v v2, (a1)\n+\tvs2r.v v2, 0(a1)\n+\tvs4r.v v4, (a1)\n+\tvs4r.v v4, 0(a1)\n+\tvs8r.v v8, (a1)\n+\tvs8r.v v8, 0(a1)\n+\n+\tvneg.v v4, v8\n+\tvneg.v v4, v8, v0.t\n+\n+\tvadd.vv v4, v8, v12\n+\tvadd.vx v4, v8, a1\n+\tvadd.vi v4, v8, 15\n+\tvadd.vi v4, v8, -16\n+\tvadd.vv v4, v8, v12, v0.t\n+\tvadd.vx v4, v8, a1, v0.t\n+\tvadd.vi v4, v8, 15, v0.t\n+\tvadd.vi v4, v8, -16, v0.t\n+\tvsub.vv v4, v8, v12\n+\tvsub.vx v4, v8, a1\n+\tvrsub.vx v4, v8, a1\n+\tvrsub.vi v4, v8, 15\n+\tvrsub.vi v4, v8, -16\n+\tvsub.vv v4, v8, v12, v0.t\n+\tvsub.vx v4, v8, a1, v0.t\n+\tvrsub.vx v4, v8, a1, v0.t\n+\tvrsub.vi v4, v8, 15, v0.t\n+\tvrsub.vi v4, v8, -16, v0.t\n+\n+\t# Aliases\n+\tvwcvt.x.x.v v4, v8\n+\tvwcvtu.x.x.v v4, v8\n+\tvwcvt.x.x.v v4, v8, v0.t\n+\tvwcvtu.x.x.v v4, v8, v0.t\n+\n+\tvwaddu.vv v4, v8, v12\n+\tvwaddu.vx v4, v8, a1\n+\tvwaddu.vv v4, v8, v12, v0.t\n+\tvwaddu.vx v4, v8, a1, v0.t\n+\tvwsubu.vv v4, v8, v12\n+\tvwsubu.vx v4, v8, a1\n+\tvwsubu.vv v4, v8, v12, v0.t\n+\tvwsubu.vx v4, v8, a1, v0.t\n+\tvwadd.vv v4, v8, v12\n+\tvwadd.vx v4, v8, a1\n+\tvwadd.vv v4, v8, v12, v0.t\n+\tvwadd.vx v4, v8, a1, v0.t\n+\tvwsub.vv v4, v8, v12\n+\tvwsub.vx v4, v8, a1\n+\tvwsub.vv v4, v8, v12, v0.t\n+\tvwsub.vx v4, v8, a1, v0.t\n+\tvwaddu.wv v4, v8, v12\n+\tvwaddu.wx v4, v8, a1\n+\tvwaddu.wv v4, v8, v12, v0.t\n+\tvwaddu.wx v4, v8, a1, v0.t\n+\tvwsubu.wv v4, v8, v12\n+\tvwsubu.wx v4, v8, a1\n+\tvwsubu.wv v4, v8, v12, v0.t\n+\tvwsubu.wx v4, v8, a1, v0.t\n+\tvwadd.wv v4, v8, v12\n+\tvwadd.wx v4, v8, a1\n+\tvwadd.wv v4, v8, v12, v0.t\n+\tvwadd.wx v4, v8, a1, v0.t\n+\tvwsub.wv v4, v8, v12\n+\tvwsub.wx v4, v8, a1\n+\tvwsub.wv v4, v8, v12, v0.t\n+\tvwsub.wx v4, v8, a1, v0.t\n+\n+\tvzext.vf2 v4, v8\n+\tvzext.vf2 v4, v8, v0.t\n+\tvsext.vf2 v4, v8\n+\tvsext.vf2 v4, v8, v0.t\n+\tvzext.vf4 v4, v8\n+\tvzext.vf4 v4, v8, v0.t\n+\tvsext.vf4 v4, v8\n+\tvsext.vf4 v4, v8, v0.t\n+\tvzext.vf8 v4, v8\n+\tvzext.vf8 v4, v8, v0.t\n+\tvsext.vf8 v4, v8\n+\tvsext.vf8 v4, v8, v0.t\n+\n+\tvadc.vvm v4, v8, v12, v0\n+\tvadc.vxm v4, v8, a1, v0\n+\tvadc.vim v4, v8, 15, v0\n+\tvadc.vim v4, v8, -16, v0\n+\tvmadc.vvm v4, v8, v12, v0\n+\tvmadc.vxm v4, v8, a1, v0\n+\tvmadc.vim v4, v8, 15, v0\n+\tvmadc.vim v4, v8, -16, v0\n+\tvmadc.vv v4, v8, v12\n+\tvmadc.vx v4, v8, a1\n+\tvmadc.vi v4, v8, 15\n+\tvmadc.vi v4, v8, -16\n+\tvsbc.vvm v4, v8, v12, v0\n+\tvsbc.vxm v4, v8, a1, v0\n+\tvmsbc.vvm v4, v8, v12, v0\n+\tvmsbc.vxm v4, v8, a1, v0\n+\tvmsbc.vv v4, v8, v12\n+\tvmsbc.vx v4, v8, a1\n+\n+\t# Aliases\n+\tvnot.v v4, v8\n+\tvnot.v v4, v8, v0.t\n+\n+\tvand.vv v4, v8, v12\n+\tvand.vx v4, v8, a1\n+\tvand.vi v4, v8, 15\n+\tvand.vi v4, v8, -16\n+\tvand.vv v4, v8, v12, v0.t\n+\tvand.vx v4, v8, a1, v0.t\n+\tvand.vi v4, v8, 15, v0.t\n+\tvand.vi v4, v8, -16, v0.t\n+\tvor.vv v4, v8, v12\n+\tvor.vx v4, v8, a1\n+\tvor.vi v4, v8, 15\n+\tvor.vi v4, v8, -16\n+\tvor.vv v4, v8, v12, v0.t\n+\tvor.vx v4, v8, a1, v0.t\n+\tvor.vi v4, v8, 15, v0.t\n+\tvor.vi v4, v8, -16, v0.t\n+\tvxor.vv v4, v8, v12\n+\tvxor.vx v4, v8, a1\n+\tvxor.vi v4, v8, 15\n+\tvxor.vi v4, v8, -16\n+\tvxor.vv v4, v8, v12, v0.t\n+\tvxor.vx v4, v8, a1, v0.t\n+\tvxor.vi v4, v8, 15, v0.t\n+\tvxor.vi v4, v8, -16, v0.t\n+\n+\tvsll.vv v4, v8, v12\n+\tvsll.vx v4, v8, a1\n+\tvsll.vi v4, v8, 1\n+\tvsll.vi v4, v8, 31\n+\tvsll.vv v4, v8, v12, v0.t\n+\tvsll.vx v4, v8, a1, v0.t\n+\tvsll.vi v4, v8, 1, v0.t\n+\tvsll.vi v4, v8, 31, v0.t\n+\tvsrl.vv v4, v8, v12\n+\tvsrl.vx v4, v8, a1\n+\tvsrl.vi v4, v8, 1\n+\tvsrl.vi v4, v8, 31\n+\tvsrl.vv v4, v8, v12, v0.t\n+\tvsrl.vx v4, v8, a1, v0.t\n+\tvsrl.vi v4, v8, 1, v0.t\n+\tvsrl.vi v4, v8, 31, v0.t\n+\tvsra.vv v4, v8, v12\n+\tvsra.vx v4, v8, a1\n+\tvsra.vi v4, v8, 1\n+\tvsra.vi v4, v8, 31\n+\tvsra.vv v4, v8, v12, v0.t\n+\tvsra.vx v4, v8, a1, v0.t\n+\tvsra.vi v4, v8, 1, v0.t\n+\tvsra.vi v4, v8, 31, v0.t\n+\n+\t# Aliases\n+\tvncvt.x.x.w v4, v8\n+\tvncvt.x.x.w v4, v8, v0.t\n+\n+\tvnsrl.wv v4, v8, v12\n+\tvnsrl.wx v4, v8, a1\n+\tvnsrl.wi v4, v8, 1\n+\tvnsrl.wi v4, v8, 31\n+\tvnsrl.wv v4, v8, v12, v0.t\n+\tvnsrl.wx v4, v8, a1, v0.t\n+\tvnsrl.wi v4, v8, 1, v0.t\n+\tvnsrl.wi v4, v8, 31, v0.t\n+\tvnsra.wv v4, v8, v12\n+\tvnsra.wx v4, v8, a1\n+\tvnsra.wi v4, v8, 1\n+\tvnsra.wi v4, v8, 31\n+\tvnsra.wv v4, v8, v12, v0.t\n+\tvnsra.wx v4, v8, a1, v0.t\n+\tvnsra.wi v4, v8, 1, v0.t\n+\tvnsra.wi v4, v8, 31, v0.t\n+\n+\t# Aliases\n+\tvmsgt.vv v4, v8, v12\n+\tvmsgtu.vv v4, v8, v12\n+\tvmsge.vv v4, v8, v12\n+\tvmsgeu.vv v4, v8, v12\n+\tvmsgt.vv v4, v8, v12, v0.t\n+\tvmsgtu.vv v4, v8, v12, v0.t\n+\tvmsge.vv v4, v8, v12, v0.t\n+\tvmsgeu.vv v4, v8, v12, v0.t\n+\tvmslt.vi v4, v8, 16\n+\tvmslt.vi v4, v8, -15\n+\tvmsltu.vi v4, v8, 16\n+\tvmsltu.vi v4, v8, -15\n+\tvmsge.vi v4, v8, 16\n+\tvmsge.vi v4, v8, -15\n+\tvmsgeu.vi v4, v8, 16\n+\tvmsgeu.vi v4, v8, -15\n+\tvmslt.vi v4, v8, 16, v0.t\n+\tvmslt.vi v4, v8, -15, v0.t\n+\tvmsltu.vi v4, v8, 16, v0.t\n+\tvmsltu.vi v4, v8, -15, v0.t\n+\tvmsge.vi v4, v8, 16, v0.t\n+\tvmsge.vi v4, v8, -15, v0.t\n+\tvmsgeu.vi v4, v8, 16, v0.t\n+\tvmsgeu.vi v4, v8, -15, v0.t\n+\n+\tvmseq.vv v4, v8, v12\n+\tvmseq.vx v4, v8, a1\n+\tvmseq.vi v4, v8, 15\n+\tvmseq.vi v4, v8, -16\n+\tvmseq.vv v4, v8, v12, v0.t\n+\tvmseq.vx v4, v8, a1, v0.t\n+\tvmseq.vi v4, v8, 15, v0.t\n+\tvmseq.vi v4, v8, -16, v0.t\n+\tvmsne.vv v4, v8, v12\n+\tvmsne.vx v4, v8, a1\n+\tvmsne.vi v4, v8, 15\n+\tvmsne.vi v4, v8, -16\n+\tvmsne.vv v4, v8, v12, v0.t\n+\tvmsne.vx v4, v8, a1, v0.t\n+\tvmsne.vi v4, v8, 15, v0.t\n+\tvmsne.vi v4, v8, -16, v0.t\n+\tvmsltu.vv v4, v8, v12\n+\tvmsltu.vx v4, v8, a1\n+\tvmsltu.vv v4, v8, v12, v0.t\n+\tvmsltu.vx v4, v8, a1, v0.t\n+\tvmslt.vv v4, v8, v12\n+\tvmslt.vx v4, v8, a1\n+\tvmslt.vv v4, v8, v12, v0.t\n+\tvmslt.vx v4, v8, a1, v0.t\n+\tvmsleu.vv v4, v8, v12\n+\tvmsleu.vx v4, v8, a1\n+\tvmsleu.vi v4, v8, 15\n+\tvmsleu.vi v4, v8, -16\n+\tvmsleu.vv v4, v8, v12, v0.t\n+\tvmsleu.vx v4, v8, a1, v0.t\n+\tvmsleu.vi v4, v8, 15, v0.t\n+\tvmsleu.vi v4, v8, -16, v0.t\n+\tvmsle.vv v4, v8, v12\n+\tvmsle.vx v4, v8, a1\n+\tvmsle.vi v4, v8, 15\n+\tvmsle.vi v4, v8, -16\n+\tvmsle.vv v4, v8, v12, v0.t\n+\tvmsle.vx v4, v8, a1, v0.t\n+\tvmsle.vi v4, v8, 15, v0.t\n+\tvmsle.vi v4, v8, -16, v0.t\n+\tvmsgtu.vx v4, v8, a1\n+\tvmsgtu.vi v4, v8, 15\n+\tvmsgtu.vi v4, v8, -16\n+\tvmsgtu.vx v4, v8, a1, v0.t\n+\tvmsgtu.vi v4, v8, 15, v0.t\n+\tvmsgtu.vi v4, v8, -16, v0.t\n+\tvmsgt.vx v4, v8, a1\n+\tvmsgt.vi v4, v8, 15\n+\tvmsgt.vi v4, v8, -16\n+\tvmsgt.vx v4, v8, a1, v0.t\n+\tvmsgt.vi v4, v8, 15, v0.t\n+\tvmsgt.vi v4, v8, -16, v0.t\n+\n+\tvminu.vv v4, v8, v12\n+\tvminu.vx v4, v8, a1\n+\tvminu.vv v4, v8, v12, v0.t\n+\tvminu.vx v4, v8, a1, v0.t\n+\tvmin.vv v4, v8, v12\n+\tvmin.vx v4, v8, a1\n+\tvmin.vv v4, v8, v12, v0.t\n+\tvmin.vx v4, v8, a1, v0.t\n+\tvmaxu.vv v4, v8, v12\n+\tvmaxu.vx v4, v8, a1\n+\tvmaxu.vv v4, v8, v12, v0.t\n+\tvmaxu.vx v4, v8, a1, v0.t\n+\tvmax.vv v4, v8, v12\n+\tvmax.vx v4, v8, a1\n+\tvmax.vv v4, v8, v12, v0.t\n+\tvmax.vx v4, v8, a1, v0.t\n+\n+\tvmul.vv v4, v8, v12\n+\tvmul.vx v4, v8, a1\n+\tvmul.vv v4, v8, v12, v0.t\n+\tvmul.vx v4, v8, a1, v0.t\n+\tvmulh.vv v4, v8, v12\n+\tvmulh.vx v4, v8, a1\n+\tvmulh.vv v4, v8, v12, v0.t\n+\tvmulh.vx v4, v8, a1, v0.t\n+\tvmulhu.vv v4, v8, v12\n+\tvmulhu.vx v4, v8, a1\n+\tvmulhu.vv v4, v8, v12, v0.t\n+\tvmulhu.vx v4, v8, a1, v0.t\n+\tvmulhsu.vv v4, v8, v12\n+\tvmulhsu.vx v4, v8, a1\n+\tvmulhsu.vv v4, v8, v12, v0.t\n+\tvmulhsu.vx v4, v8, a1, v0.t\n+\n+\tvwmul.vv v4, v8, v12\n+\tvwmul.vx v4, v8, a1\n+\tvwmul.vv v4, v8, v12, v0.t\n+\tvwmul.vx v4, v8, a1, v0.t\n+\tvwmulu.vv v4, v8, v12\n+\tvwmulu.vx v4, v8, a1\n+\tvwmulu.vv v4, v8, v12, v0.t\n+\tvwmulu.vx v4, v8, a1, v0.t\n+\tvwmulsu.vv v4, v8, v12\n+\tvwmulsu.vx v4, v8, a1\n+\tvwmulsu.vv v4, v8, v12, v0.t\n+\tvwmulsu.vx v4, v8, a1, v0.t\n+\n+\tvmacc.vv v4, v12, v8\n+\tvmacc.vx v4, a1, v8\n+\tvmacc.vv v4, v12, v8, v0.t\n+\tvmacc.vx v4, a1, v8, v0.t\n+\tvnmsac.vv v4, v12, v8\n+\tvnmsac.vx v4, a1, v8\n+\tvnmsac.vv v4, v12, v8, v0.t\n+\tvnmsac.vx v4, a1, v8, v0.t\n+\tvmadd.vv v4, v12, v8\n+\tvmadd.vx v4, a1, v8\n+\tvmadd.vv v4, v12, v8, v0.t\n+\tvmadd.vx v4, a1, v8, v0.t\n+\tvnmsub.vv v4, v12, v8\n+\tvnmsub.vx v4, a1, v8\n+\tvnmsub.vv v4, v12, v8, v0.t\n+\tvnmsub.vx v4, a1, v8, v0.t\n+\n+\tvwmaccu.vv v4, v12, v8\n+\tvwmaccu.vx v4, a1, v8\n+\tvwmaccu.vv v4, v12, v8, v0.t\n+\tvwmaccu.vx v4, a1, v8, v0.t\n+\tvwmacc.vv v4, v12, v8\n+\tvwmacc.vx v4, a1, v8\n+\tvwmacc.vv v4, v12, v8, v0.t\n+\tvwmacc.vx v4, a1, v8, v0.t\n+\tvwmaccsu.vv v4, v12, v8\n+\tvwmaccsu.vx v4, a1, v8\n+\tvwmaccsu.vv v4, v12, v8, v0.t\n+\tvwmaccsu.vx v4, a1, v8, v0.t\n+\tvwmaccus.vx v4, a1, v8\n+\tvwmaccus.vx v4, a1, v8, v0.t\n+\n+\tvdivu.vv v4, v8, v12\n+\tvdivu.vx v4, v8, a1\n+\tvdivu.vv v4, v8, v12, v0.t\n+\tvdivu.vx v4, v8, a1, v0.t\n+\tvdiv.vv v4, v8, v12\n+\tvdiv.vx v4, v8, a1\n+\tvdiv.vv v4, v8, v12, v0.t\n+\tvdiv.vx v4, v8, a1, v0.t\n+\tvremu.vv v4, v8, v12\n+\tvremu.vx v4, v8, a1\n+\tvremu.vv v4, v8, v12, v0.t\n+\tvremu.vx v4, v8, a1, v0.t\n+\tvrem.vv v4, v8, v12\n+\tvrem.vx v4, v8, a1\n+\tvrem.vv v4, v8, v12, v0.t\n+\tvrem.vx v4, v8, a1, v0.t\n+\n+\tvmerge.vvm v4, v8, v12, v0\n+\tvmerge.vxm v4, v8, a1, v0\n+\tvmerge.vim v4, v8, 15, v0\n+\tvmerge.vim v4, v8, -16, v0\n+\n+\tvmv.v.v v8, v12\n+\tvmv.v.x v8, a1\n+\tvmv.v.i v8, 15\n+\tvmv.v.i v8, -16\n+\n+\tvsaddu.vv v4, v8, v12\n+\tvsaddu.vx v4, v8, a1\n+\tvsaddu.vi v4, v8, 15\n+\tvsaddu.vi v4, v8, -16\n+\tvsaddu.vv v4, v8, v12, v0.t\n+\tvsaddu.vx v4, v8, a1, v0.t\n+\tvsaddu.vi v4, v8, 15, v0.t\n+\tvsaddu.vi v4, v8, -16, v0.t\n+\tvsadd.vv v4, v8, v12\n+\tvsadd.vx v4, v8, a1\n+\tvsadd.vi v4, v8, 15\n+\tvsadd.vi v4, v8, -16\n+\tvsadd.vv v4, v8, v12, v0.t\n+\tvsadd.vx v4, v8, a1, v0.t\n+\tvsadd.vi v4, v8, 15, v0.t\n+\tvsadd.vi v4, v8, -16, v0.t\n+\tvssubu.vv v4, v8, v12\n+\tvssubu.vx v4, v8, a1\n+\tvssubu.vv v4, v8, v12, v0.t\n+\tvssubu.vx v4, v8, a1, v0.t\n+\tvssub.vv v4, v8, v12\n+\tvssub.vx v4, v8, a1\n+\tvssub.vv v4, v8, v12, v0.t\n+\tvssub.vx v4, v8, a1, v0.t\n+\n+\tvaaddu.vv v4, v8, v12\n+\tvaaddu.vx v4, v8, a1\n+\tvaaddu.vv v4, v8, v12, v0.t\n+\tvaaddu.vx v4, v8, a1, v0.t\n+\tvaadd.vv v4, v8, v12\n+\tvaadd.vx v4, v8, a1\n+\tvaadd.vv v4, v8, v12, v0.t\n+\tvaadd.vx v4, v8, a1, v0.t\n+\tvasubu.vv v4, v8, v12\n+\tvasubu.vx v4, v8, a1\n+\tvasubu.vv v4, v8, v12, v0.t\n+\tvasubu.vx v4, v8, a1, v0.t\n+\tvasub.vv v4, v8, v12\n+\tvasub.vx v4, v8, a1\n+\tvasub.vv v4, v8, v12, v0.t\n+\tvasub.vx v4, v8, a1, v0.t\n+\n+\tvsmul.vv v4, v8, v12\n+\tvsmul.vx v4, v8, a1\n+\tvsmul.vv v4, v8, v12, v0.t\n+\tvsmul.vx v4, v8, a1, v0.t\n+\n+\tvssrl.vv v4, v8, v12\n+\tvssrl.vx v4, v8, a1\n+\tvssrl.vi v4, v8, 1\n+\tvssrl.vi v4, v8, 31\n+\tvssrl.vv v4, v8, v12, v0.t\n+\tvssrl.vx v4, v8, a1, v0.t\n+\tvssrl.vi v4, v8, 1, v0.t\n+\tvssrl.vi v4, v8, 31, v0.t\n+\tvssra.vv v4, v8, v12\n+\tvssra.vx v4, v8, a1\n+\tvssra.vi v4, v8, 1\n+\tvssra.vi v4, v8, 31\n+\tvssra.vv v4, v8, v12, v0.t\n+\tvssra.vx v4, v8, a1, v0.t\n+\tvssra.vi v4, v8, 1, v0.t\n+\tvssra.vi v4, v8, 31, v0.t\n+\n+\tvnclipu.wv v4, v8, v12\n+\tvnclipu.wx v4, v8, a1\n+\tvnclipu.wi v4, v8, 1\n+\tvnclipu.wi v4, v8, 31\n+\tvnclipu.wv v4, v8, v12, v0.t\n+\tvnclipu.wx v4, v8, a1, v0.t\n+\tvnclipu.wi v4, v8, 1, v0.t\n+\tvnclipu.wi v4, v8, 31, v0.t\n+\tvnclip.wv v4, v8, v12\n+\tvnclip.wx v4, v8, a1\n+\tvnclip.wi v4, v8, 1\n+\tvnclip.wi v4, v8, 31\n+\tvnclip.wv v4, v8, v12, v0.t\n+\tvnclip.wx v4, v8, a1, v0.t\n+\tvnclip.wi v4, v8, 1, v0.t\n+\tvnclip.wi v4, v8, 31, v0.t\n+\n+\tvfadd.vv v4, v8, v12\n+\tvfadd.vf v4, v8, fa2\n+\tvfadd.vv v4, v8, v12, v0.t\n+\tvfadd.vf v4, v8, fa2, v0.t\n+\tvfsub.vv v4, v8, v12\n+\tvfsub.vf v4, v8, fa2\n+\tvfsub.vv v4, v8, v12, v0.t\n+\tvfsub.vf v4, v8, fa2, v0.t\n+\tvfrsub.vf v4, v8, fa2\n+\tvfrsub.vf v4, v8, fa2, v0.t\n+\n+\tvfwadd.vv v4, v8, v12\n+\tvfwadd.vf v4, v8, fa2\n+\tvfwadd.vv v4, v8, v12, v0.t\n+\tvfwadd.vf v4, v8, fa2, v0.t\n+\tvfwsub.vv v4, v8, v12\n+\tvfwsub.vf v4, v8, fa2\n+\tvfwsub.vv v4, v8, v12, v0.t\n+\tvfwsub.vf v4, v8, fa2, v0.t\n+\tvfwadd.wv v4, v8, v12\n+\tvfwadd.wf v4, v8, fa2\n+\tvfwadd.wv v4, v8, v12, v0.t\n+\tvfwadd.wf v4, v8, fa2, v0.t\n+\tvfwsub.wv v4, v8, v12\n+\tvfwsub.wf v4, v8, fa2\n+\tvfwsub.wv v4, v8, v12, v0.t\n+\tvfwsub.wf v4, v8, fa2, v0.t\n+\n+\tvfmul.vv v4, v8, v12\n+\tvfmul.vf v4, v8, fa2\n+\tvfmul.vv v4, v8, v12, v0.t\n+\tvfmul.vf v4, v8, fa2, v0.t\n+\tvfdiv.vv v4, v8, v12\n+\tvfdiv.vf v4, v8, fa2\n+\tvfdiv.vv v4, v8, v12, v0.t\n+\tvfdiv.vf v4, v8, fa2, v0.t\n+\tvfrdiv.vf v4, v8, fa2\n+\tvfrdiv.vf v4, v8, fa2, v0.t\n+\n+\tvfwmul.vv v4, v8, v12\n+\tvfwmul.vf v4, v8, fa2\n+\tvfwmul.vv v4, v8, v12, v0.t\n+\tvfwmul.vf v4, v8, fa2, v0.t\n+\n+\tvfmadd.vv v4, v12, v8\n+\tvfmadd.vf v4, fa2, v8\n+\tvfnmadd.vv v4, v12, v8\n+\tvfnmadd.vf v4, fa2, v8\n+\tvfmsub.vv v4, v12, v8\n+\tvfmsub.vf v4, fa2, v8\n+\tvfnmsub.vv v4, v12, v8\n+\tvfnmsub.vf v4, fa2, v8\n+\tvfmadd.vv v4, v12, v8, v0.t\n+\tvfmadd.vf v4, fa2, v8, v0.t\n+\tvfnmadd.vv v4, v12, v8, v0.t\n+\tvfnmadd.vf v4, fa2, v8, v0.t\n+\tvfmsub.vv v4, v12, v8, v0.t\n+\tvfmsub.vf v4, fa2, v8, v0.t\n+\tvfnmsub.vv v4, v12, v8, v0.t\n+\tvfnmsub.vf v4, fa2, v8, v0.t\n+\tvfmacc.vv v4, v12, v8\n+\tvfmacc.vf v4, fa2, v8\n+\tvfnmacc.vv v4, v12, v8\n+\tvfnmacc.vf v4, fa2, v8\n+\tvfmsac.vv v4, v12, v8\n+\tvfmsac.vf v4, fa2, v8\n+\tvfnmsac.vv v4, v12, v8\n+\tvfnmsac.vf v4, fa2, v8\n+\tvfmacc.vv v4, v12, v8, v0.t\n+\tvfmacc.vf v4, fa2, v8, v0.t\n+\tvfnmacc.vv v4, v12, v8, v0.t\n+\tvfnmacc.vf v4, fa2, v8, v0.t\n+\tvfmsac.vv v4, v12, v8, v0.t\n+\tvfmsac.vf v4, fa2, v8, v0.t\n+\tvfnmsac.vv v4, v12, v8, v0.t\n+\tvfnmsac.vf v4, fa2, v8, v0.t\n+\n+\tvfwmacc.vv v4, v12, v8\n+\tvfwmacc.vf v4, fa2, v8\n+\tvfwnmacc.vv v4, v12, v8\n+\tvfwnmacc.vf v4, fa2, v8\n+\tvfwmsac.vv v4, v12, v8\n+\tvfwmsac.vf v4, fa2, v8\n+\tvfwnmsac.vv v4, v12, v8\n+\tvfwnmsac.vf v4, fa2, v8\n+\tvfwmacc.vv v4, v12, v8, v0.t\n+\tvfwmacc.vf v4, fa2, v8, v0.t\n+\tvfwnmacc.vv v4, v12, v8, v0.t\n+\tvfwnmacc.vf v4, fa2, v8, v0.t\n+\tvfwmsac.vv v4, v12, v8, v0.t\n+\tvfwmsac.vf v4, fa2, v8, v0.t\n+\tvfwnmsac.vv v4, v12, v8, v0.t\n+\tvfwnmsac.vf v4, fa2, v8, v0.t\n+\n+\tvfsqrt.v v4, v8\n+\tvfsqrt.v v4, v8, v0.t\n+\tvfrsqrte7.v v4, v8\n+\tvfrsqrte7.v v4, v8, v0.t\n+\tvfrsqrt7.v v4, v8\n+\tvfrsqrt7.v v4, v8, v0.t\n+\tvfrece7.v v4, v8\n+\tvfrece7.v v4, v8, v0.t\n+\tvfrec7.v v4, v8\n+\tvfrec7.v v4, v8, v0.t\n+\tvfclass.v v4, v8\n+\tvfclass.v v4, v8, v0.t\n+\n+\tvfmin.vv v4, v8, v12\n+\tvfmin.vf v4, v8, fa2\n+\tvfmax.vv v4, v8, v12\n+\tvfmax.vf v4, v8, fa2\n+\tvfmin.vv v4, v8, v12, v0.t\n+\tvfmin.vf v4, v8, fa2, v0.t\n+\tvfmax.vv v4, v8, v12, v0.t\n+\tvfmax.vf v4, v8, fa2, v0.t\n+\n+\tvfneg.v v4, v8\n+\tvfneg.v v4, v8, v0.t\n+\tvfabs.v v4, v8\n+\tvfabs.v v4, v8, v0.t\n+\n+\tvfsgnj.vv v4, v8, v12\n+\tvfsgnj.vf v4, v8, fa2\n+\tvfsgnjn.vv v4, v8, v12\n+\tvfsgnjn.vf v4, v8, fa2\n+\tvfsgnjx.vv v4, v8, v12\n+\tvfsgnjx.vf v4, v8, fa2\n+\tvfsgnj.vv v4, v8, v12, v0.t\n+\tvfsgnj.vf v4, v8, fa2, v0.t\n+\tvfsgnjn.vv v4, v8, v12, v0.t\n+\tvfsgnjn.vf v4, v8, fa2, v0.t\n+\tvfsgnjx.vv v4, v8, v12, v0.t\n+\tvfsgnjx.vf v4, v8, fa2, v0.t\n+\n+\t# Aliases\n+\tvmfgt.vv v4, v8, v12\n+\tvmfge.vv v4, v8, v12\n+\tvmfgt.vv v4, v8, v12, v0.t\n+\tvmfge.vv v4, v8, v12, v0.t\n+\n+\tvmfeq.vv v4, v8, v12\n+\tvmfeq.vf v4, v8, fa2\n+\tvmfne.vv v4, v8, v12\n+\tvmfne.vf v4, v8, fa2\n+\tvmflt.vv v4, v8, v12\n+\tvmflt.vf v4, v8, fa2\n+\tvmfle.vv v4, v8, v12\n+\tvmfle.vf v4, v8, fa2\n+\tvmfgt.vf v4, v8, fa2\n+\tvmfge.vf v4, v8, fa2\n+\tvmfeq.vv v4, v8, v12, v0.t\n+\tvmfeq.vf v4, v8, fa2, v0.t\n+\tvmfne.vv v4, v8, v12, v0.t\n+\tvmfne.vf v4, v8, fa2, v0.t\n+\tvmflt.vv v4, v8, v12, v0.t\n+\tvmflt.vf v4, v8, fa2, v0.t\n+\tvmfle.vv v4, v8, v12, v0.t\n+\tvmfle.vf v4, v8, fa2, v0.t\n+\tvmfgt.vf v4, v8, fa2, v0.t\n+\tvmfge.vf v4, v8, fa2, v0.t\n+\n+\tvfmerge.vfm v4, v8, fa2, v0\n+\tvfmv.v.f v4, fa1\n+\n+\tvfcvt.xu.f.v v4, v8\n+\tvfcvt.x.f.v v4, v8\n+\tvfcvt.rtz.xu.f.v v4, v8\n+\tvfcvt.rtz.x.f.v v4, v8\n+\tvfcvt.f.xu.v v4, v8\n+\tvfcvt.f.x.v v4, v8\n+\tvfcvt.xu.f.v v4, v8, v0.t\n+\tvfcvt.x.f.v v4, v8, v0.t\n+\tvfcvt.rtz.xu.f.v v4, v8, v0.t\n+\tvfcvt.rtz.x.f.v v4, v8, v0.t\n+\tvfcvt.f.xu.v v4, v8, v0.t\n+\tvfcvt.f.x.v v4, v8, v0.t\n+\n+\tvfwcvt.xu.f.v v4, v8\n+\tvfwcvt.x.f.v v4, v8\n+\tvfwcvt.rtz.xu.f.v v4, v8\n+\tvfwcvt.rtz.x.f.v v4, v8\n+\tvfwcvt.f.xu.v v4, v8\n+\tvfwcvt.f.x.v v4, v8\n+\tvfwcvt.f.f.v v4, v8\n+\tvfwcvt.xu.f.v v4, v8, v0.t\n+\tvfwcvt.x.f.v v4, v8, v0.t\n+\tvfwcvt.rtz.xu.f.v v4, v8, v0.t\n+\tvfwcvt.rtz.x.f.v v4, v8, v0.t\n+\tvfwcvt.f.xu.v v4, v8, v0.t\n+\tvfwcvt.f.x.v v4, v8, v0.t\n+\tvfwcvt.f.f.v v4, v8, v0.t\n+\n+\tvfncvt.xu.f.w v4, v8\n+\tvfncvt.x.f.w v4, v8\n+\tvfncvt.rtz.xu.f.w v4, v8\n+\tvfncvt.rtz.x.f.w v4, v8\n+\tvfncvt.f.xu.w v4, v8\n+\tvfncvt.f.x.w v4, v8\n+\tvfncvt.f.f.w v4, v8\n+\tvfncvt.rod.f.f.w v4, v8\n+\tvfncvt.xu.f.w v4, v8, v0.t\n+\tvfncvt.x.f.w v4, v8, v0.t\n+\tvfncvt.rtz.xu.f.w v4, v8, v0.t\n+\tvfncvt.rtz.x.f.w v4, v8, v0.t\n+\tvfncvt.f.xu.w v4, v8, v0.t\n+\tvfncvt.f.x.w v4, v8, v0.t\n+\tvfncvt.f.f.w v4, v8, v0.t\n+\tvfncvt.rod.f.f.w v4, v8, v0.t\n+\n+\tvredsum.vs v4, v8, v12\n+\tvredmaxu.vs v4, v8, v8\n+\tvredmax.vs v4, v8, v8\n+\tvredminu.vs v4, v8, v8\n+\tvredmin.vs v4, v8, v8\n+\tvredand.vs v4, v8, v12\n+\tvredor.vs v4, v8, v12\n+\tvredxor.vs v4, v8, v12\n+\tvredsum.vs v4, v8, v12, v0.t\n+\tvredmaxu.vs v4, v8, v8, v0.t\n+\tvredmax.vs v4, v8, v8, v0.t\n+\tvredminu.vs v4, v8, v8, v0.t\n+\tvredmin.vs v4, v8, v8, v0.t\n+\tvredand.vs v4, v8, v12, v0.t\n+\tvredor.vs v4, v8, v12, v0.t\n+\tvredxor.vs v4, v8, v12, v0.t\n+\n+\tvwredsumu.vs v4, v8, v12\n+\tvwredsum.vs v4, v8, v12\n+\tvwredsumu.vs v4, v8, v12, v0.t\n+\tvwredsum.vs v4, v8, v12, v0.t\n+\n+\tvfredosum.vs v4, v8, v12\n+\tvfredusum.vs v4, v8, v12\n+\tvfredsum.vs v4, v8, v12\t\t# Alias of vfredusum.vs.\n+\tvfredmax.vs v4, v8, v12\n+\tvfredmin.vs v4, v8, v12\n+\tvfredosum.vs v4, v8, v12, v0.t\n+\tvfredusum.vs v4, v8, v12, v0.t\n+\tvfredsum.vs v4, v8, v12, v0.t\t# Alias of vfredusum.vs.\n+\tvfredmax.vs v4, v8, v12, v0.t\n+\tvfredmin.vs v4, v8, v12, v0.t\n+\n+\tvfwredosum.vs v4, v8, v12\n+\tvfwredusum.vs v4, v8, v12\n+\tvfwredsum.vs v4, v8, v12\t# Alias of vfwredusum.vs.\n+\tvfwredosum.vs v4, v8, v12, v0.t\n+\tvfwredusum.vs v4, v8, v12, v0.t\n+\tvfwredsum.vs v4, v8, v12, v0.t\t# Alias of vfwredusum.vs.\n+\n+\t# Aliases\n+\tvmcpy.m v4, v8\n+\tvmmv.m v4, v8\n+\tvmclr.m v4\n+\tvmset.m v4\n+\tvmnot.m v4, v8\n+\n+\tvmand.mm v4, v8, v12\n+\tvmnand.mm v4, v8, v12\n+\tvmandn.mm v4, v8, v12\n+\tvmandnot.mm v4, v8, v12\t\t# Alias of vmandn.mm.\n+\tvmxor.mm v4, v8, v12\n+\tvmor.mm v4, v8, v12\n+\tvmnor.mm v4, v8, v12\n+\tvmorn.mm v4, v8, v12\n+\tvmornot.mm v4, v8, v12\t\t# Alias of vmorn.mm.\n+\tvmxnor.mm v4, v8, v12\n+\n+\tvcpop.m a0, v12\n+\tvfirst.m a0, v12\n+\tvmsbf.m v4, v8\n+\tvmsif.m v4, v8\n+\tvmsof.m v4, v8\n+\tviota.m v4, v8\n+\tvid.v v4\n+\tvcpop.m a0, v12, v0.t\n+\tvfirst.m a0, v12, v0.t\n+\tvmsbf.m v4, v8, v0.t\n+\tvmsif.m v4, v8, v0.t\n+\tvmsof.m v4, v8, v0.t\n+\tviota.m v4, v8, v0.t\n+\tvid.v v4, v0.t\n+\n+\tvmv.x.s a0, v12\n+\tvmv.s.x v4, a0\n+\n+\tvfmv.f.s fa0, v8\n+\tvfmv.s.f v4, fa1\n+\n+\tvslideup.vx v4, v8, a1\n+\tvslideup.vi v4, v8, 0\n+\tvslideup.vi v4, v8, 31\n+\tvslidedown.vx v4, v8, a1\n+\tvslidedown.vi v4, v8, 0\n+\tvslidedown.vi v4, v8, 31\n+\tvslideup.vx v4, v8, a1, v0.t\n+\tvslideup.vi v4, v8, 0, v0.t\n+\tvslideup.vi v4, v8, 31, v0.t\n+\tvslidedown.vx v4, v8, a1, v0.t\n+\tvslidedown.vi v4, v8, 0, v0.t\n+\tvslidedown.vi v4, v8, 31, v0.t\n+\n+\tvslide1up.vx v4, v8, a1\n+\tvslide1down.vx v4, v8, a1\n+\tvslide1up.vx v4, v8, a1, v0.t\n+\tvslide1down.vx v4, v8, a1, v0.t\n+\n+\tvfslide1up.vf v4, v8, fa1\n+\tvfslide1down.vf v4, v8, fa1\n+\tvfslide1up.vf v4, v8, fa1, v0.t\n+\tvfslide1down.vf v4, v8, fa1, v0.t\n+\n+\tvrgather.vv v4, v8, v12\n+\tvrgather.vx v4, v8, a1\n+\tvrgather.vi v4, v8, 0\n+\tvrgather.vi v4, v8, 31\n+\tvrgather.vv v4, v8, v12, v0.t\n+\tvrgather.vx v4, v8, a1, v0.t\n+\tvrgather.vi v4, v8, 0, v0.t\n+\tvrgather.vi v4, v8, 31, v0.t\n+\n+\tvrgatherei16.vv v4, v8, v12\n+\tvrgatherei16.vv v4, v8, v12, v0.t\n+\n+\tvcompress.vm v4, v8, v12\n+\n+\tvmv1r.v v1, v2\n+\tvmv2r.v v2, v4\n+\tvmv4r.v v4, v8\n+\tvmv8r.v v0, v8"
    },
    {
      "sha": "41c8ef163c4234e18461ccc289452b417d858191",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 1296,
      "deletions": 0,
      "changes": 1296,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -705,6 +705,1288 @@\n #define MASK_AES64DSM  0xfe00707f\n #define MATCH_AES64DS 0x3a000033\n #define MASK_AES64DS  0xfe00707f\n+#define MATCH_VSETVL  0x80007057\n+#define MASK_VSETVL  0xfe00707f\n+#define MATCH_VSETIVLI  0xc0007057\n+#define MASK_VSETIVLI  0xc000707f\n+#define MATCH_VSETVLI  0x00007057\n+#define MASK_VSETVLI  0x8000707f\n+#define MATCH_VLMV  0x02b00007\n+#define MASK_VLMV  0xfff0707f\n+#define MATCH_VSMV  0x02b00027\n+#define MASK_VSMV  0xfff0707f\n+#define MATCH_VLE8V  0x00000007\n+#define MASK_VLE8V  0xfdf0707f\n+#define MATCH_VLE16V  0x00005007\n+#define MASK_VLE16V  0xfdf0707f\n+#define MATCH_VLE32V  0x00006007\n+#define MASK_VLE32V  0xfdf0707f\n+#define MATCH_VLE64V  0x00007007\n+#define MASK_VLE64V  0xfdf0707f\n+#define MATCH_VSE8V  0x00000027\n+#define MASK_VSE8V  0xfdf0707f\n+#define MATCH_VSE16V  0x00005027\n+#define MASK_VSE16V  0xfdf0707f\n+#define MATCH_VSE32V  0x00006027\n+#define MASK_VSE32V  0xfdf0707f\n+#define MATCH_VSE64V  0x00007027\n+#define MASK_VSE64V  0xfdf0707f\n+#define MATCH_VLSE8V  0x08000007\n+#define MASK_VLSE8V  0xfc00707f\n+#define MATCH_VLSE16V  0x08005007\n+#define MASK_VLSE16V  0xfc00707f\n+#define MATCH_VLSE32V  0x08006007\n+#define MASK_VLSE32V  0xfc00707f\n+#define MATCH_VLSE64V  0x08007007\n+#define MASK_VLSE64V  0xfc00707f\n+#define MATCH_VSSE8V  0x08000027\n+#define MASK_VSSE8V  0xfc00707f\n+#define MATCH_VSSE16V  0x08005027\n+#define MASK_VSSE16V  0xfc00707f\n+#define MATCH_VSSE32V  0x08006027\n+#define MASK_VSSE32V  0xfc00707f\n+#define MATCH_VSSE64V  0x08007027\n+#define MASK_VSSE64V  0xfc00707f\n+#define MATCH_VLOXEI8V  0x0c000007\n+#define MASK_VLOXEI8V  0xfc00707f\n+#define MATCH_VLOXEI16V  0x0c005007\n+#define MASK_VLOXEI16V  0xfc00707f\n+#define MATCH_VLOXEI32V  0x0c006007\n+#define MASK_VLOXEI32V  0xfc00707f\n+#define MATCH_VLOXEI64V  0x0c007007\n+#define MASK_VLOXEI64V  0xfc00707f\n+#define MATCH_VSOXEI8V  0x0c000027\n+#define MASK_VSOXEI8V  0xfc00707f\n+#define MATCH_VSOXEI16V  0x0c005027\n+#define MASK_VSOXEI16V  0xfc00707f\n+#define MATCH_VSOXEI32V  0x0c006027\n+#define MASK_VSOXEI32V  0xfc00707f\n+#define MATCH_VSOXEI64V  0x0c007027\n+#define MASK_VSOXEI64V  0xfc00707f\n+#define MATCH_VLUXEI8V  0x04000007\n+#define MASK_VLUXEI8V  0xfc00707f\n+#define MATCH_VLUXEI16V  0x04005007\n+#define MASK_VLUXEI16V  0xfc00707f\n+#define MATCH_VLUXEI32V  0x04006007\n+#define MASK_VLUXEI32V  0xfc00707f\n+#define MATCH_VLUXEI64V  0x04007007\n+#define MASK_VLUXEI64V  0xfc00707f\n+#define MATCH_VSUXEI8V  0x04000027\n+#define MASK_VSUXEI8V  0xfc00707f\n+#define MATCH_VSUXEI16V  0x04005027\n+#define MASK_VSUXEI16V  0xfc00707f\n+#define MATCH_VSUXEI32V  0x04006027\n+#define MASK_VSUXEI32V  0xfc00707f\n+#define MATCH_VSUXEI64V  0x04007027\n+#define MASK_VSUXEI64V  0xfc00707f\n+#define MATCH_VLE8FFV  0x01000007\n+#define MASK_VLE8FFV  0xfdf0707f\n+#define MATCH_VLE16FFV  0x01005007\n+#define MASK_VLE16FFV  0xfdf0707f\n+#define MATCH_VLE32FFV  0x01006007\n+#define MASK_VLE32FFV  0xfdf0707f\n+#define MATCH_VLE64FFV  0x01007007\n+#define MASK_VLE64FFV  0xfdf0707f\n+#define MATCH_VLSEG2E8V  0x20000007\n+#define MASK_VLSEG2E8V  0xfdf0707f\n+#define MATCH_VSSEG2E8V  0x20000027\n+#define MASK_VSSEG2E8V  0xfdf0707f\n+#define MATCH_VLSEG3E8V  0x40000007\n+#define MASK_VLSEG3E8V  0xfdf0707f\n+#define MATCH_VSSEG3E8V  0x40000027\n+#define MASK_VSSEG3E8V  0xfdf0707f\n+#define MATCH_VLSEG4E8V  0x60000007\n+#define MASK_VLSEG4E8V  0xfdf0707f\n+#define MATCH_VSSEG4E8V  0x60000027\n+#define MASK_VSSEG4E8V  0xfdf0707f\n+#define MATCH_VLSEG5E8V  0x80000007\n+#define MASK_VLSEG5E8V  0xfdf0707f\n+#define MATCH_VSSEG5E8V  0x80000027\n+#define MASK_VSSEG5E8V  0xfdf0707f\n+#define MATCH_VLSEG6E8V  0xa0000007\n+#define MASK_VLSEG6E8V  0xfdf0707f\n+#define MATCH_VSSEG6E8V  0xa0000027\n+#define MASK_VSSEG6E8V  0xfdf0707f\n+#define MATCH_VLSEG7E8V  0xc0000007\n+#define MASK_VLSEG7E8V  0xfdf0707f\n+#define MATCH_VSSEG7E8V  0xc0000027\n+#define MASK_VSSEG7E8V  0xfdf0707f\n+#define MATCH_VLSEG8E8V  0xe0000007\n+#define MASK_VLSEG8E8V  0xfdf0707f\n+#define MATCH_VSSEG8E8V  0xe0000027\n+#define MASK_VSSEG8E8V  0xfdf0707f\n+#define MATCH_VLSEG2E16V 0x20005007\n+#define MASK_VLSEG2E16V  0xfdf0707f\n+#define MATCH_VSSEG2E16V 0x20005027\n+#define MASK_VSSEG2E16V  0xfdf0707f\n+#define MATCH_VLSEG3E16V 0x40005007\n+#define MASK_VLSEG3E16V  0xfdf0707f\n+#define MATCH_VSSEG3E16V 0x40005027\n+#define MASK_VSSEG3E16V  0xfdf0707f\n+#define MATCH_VLSEG4E16V 0x60005007\n+#define MASK_VLSEG4E16V  0xfdf0707f\n+#define MATCH_VSSEG4E16V 0x60005027\n+#define MASK_VSSEG4E16V  0xfdf0707f\n+#define MATCH_VLSEG5E16V 0x80005007\n+#define MASK_VLSEG5E16V  0xfdf0707f\n+#define MATCH_VSSEG5E16V 0x80005027\n+#define MASK_VSSEG5E16V  0xfdf0707f\n+#define MATCH_VLSEG6E16V 0xa0005007\n+#define MASK_VLSEG6E16V  0xfdf0707f\n+#define MATCH_VSSEG6E16V 0xa0005027\n+#define MASK_VSSEG6E16V  0xfdf0707f\n+#define MATCH_VLSEG7E16V 0xc0005007\n+#define MASK_VLSEG7E16V  0xfdf0707f\n+#define MATCH_VSSEG7E16V 0xc0005027\n+#define MASK_VSSEG7E16V  0xfdf0707f\n+#define MATCH_VLSEG8E16V 0xe0005007\n+#define MASK_VLSEG8E16V  0xfdf0707f\n+#define MATCH_VSSEG8E16V 0xe0005027\n+#define MASK_VSSEG8E16V  0xfdf0707f\n+#define MATCH_VLSEG2E32V 0x20006007\n+#define MASK_VLSEG2E32V  0xfdf0707f\n+#define MATCH_VSSEG2E32V 0x20006027\n+#define MASK_VSSEG2E32V  0xfdf0707f\n+#define MATCH_VLSEG3E32V 0x40006007\n+#define MASK_VLSEG3E32V  0xfdf0707f\n+#define MATCH_VSSEG3E32V 0x40006027\n+#define MASK_VSSEG3E32V  0xfdf0707f\n+#define MATCH_VLSEG4E32V 0x60006007\n+#define MASK_VLSEG4E32V  0xfdf0707f\n+#define MATCH_VSSEG4E32V 0x60006027\n+#define MASK_VSSEG4E32V  0xfdf0707f\n+#define MATCH_VLSEG5E32V 0x80006007\n+#define MASK_VLSEG5E32V  0xfdf0707f\n+#define MATCH_VSSEG5E32V 0x80006027\n+#define MASK_VSSEG5E32V  0xfdf0707f\n+#define MATCH_VLSEG6E32V 0xa0006007\n+#define MASK_VLSEG6E32V  0xfdf0707f\n+#define MATCH_VSSEG6E32V 0xa0006027\n+#define MASK_VSSEG6E32V  0xfdf0707f\n+#define MATCH_VLSEG7E32V 0xc0006007\n+#define MASK_VLSEG7E32V  0xfdf0707f\n+#define MATCH_VSSEG7E32V 0xc0006027\n+#define MASK_VSSEG7E32V  0xfdf0707f\n+#define MATCH_VLSEG8E32V 0xe0006007\n+#define MASK_VLSEG8E32V  0xfdf0707f\n+#define MATCH_VSSEG8E32V 0xe0006027\n+#define MASK_VSSEG8E32V  0xfdf0707f\n+#define MATCH_VLSEG2E64V 0x20007007\n+#define MASK_VLSEG2E64V  0xfdf0707f\n+#define MATCH_VSSEG2E64V 0x20007027\n+#define MASK_VSSEG2E64V  0xfdf0707f\n+#define MATCH_VLSEG3E64V 0x40007007\n+#define MASK_VLSEG3E64V  0xfdf0707f\n+#define MATCH_VSSEG3E64V 0x40007027\n+#define MASK_VSSEG3E64V  0xfdf0707f\n+#define MATCH_VLSEG4E64V 0x60007007\n+#define MASK_VLSEG4E64V  0xfdf0707f\n+#define MATCH_VSSEG4E64V 0x60007027\n+#define MASK_VSSEG4E64V  0xfdf0707f\n+#define MATCH_VLSEG5E64V 0x80007007\n+#define MASK_VLSEG5E64V  0xfdf0707f\n+#define MATCH_VSSEG5E64V 0x80007027\n+#define MASK_VSSEG5E64V  0xfdf0707f\n+#define MATCH_VLSEG6E64V 0xa0007007\n+#define MASK_VLSEG6E64V  0xfdf0707f\n+#define MATCH_VSSEG6E64V 0xa0007027\n+#define MASK_VSSEG6E64V  0xfdf0707f\n+#define MATCH_VLSEG7E64V 0xc0007007\n+#define MASK_VLSEG7E64V  0xfdf0707f\n+#define MATCH_VSSEG7E64V 0xc0007027\n+#define MASK_VSSEG7E64V  0xfdf0707f\n+#define MATCH_VLSEG8E64V 0xe0007007\n+#define MASK_VLSEG8E64V  0xfdf0707f\n+#define MATCH_VSSEG8E64V 0xe0007027\n+#define MASK_VSSEG8E64V  0xfdf0707f\n+#define MATCH_VLSSEG2E8V 0x28000007\n+#define MASK_VLSSEG2E8V  0xfc00707f\n+#define MATCH_VSSSEG2E8V 0x28000027\n+#define MASK_VSSSEG2E8V  0xfc00707f\n+#define MATCH_VLSSEG3E8V 0x48000007\n+#define MASK_VLSSEG3E8V  0xfc00707f\n+#define MATCH_VSSSEG3E8V 0x48000027\n+#define MASK_VSSSEG3E8V  0xfc00707f\n+#define MATCH_VLSSEG4E8V 0x68000007\n+#define MASK_VLSSEG4E8V  0xfc00707f\n+#define MATCH_VSSSEG4E8V 0x68000027\n+#define MASK_VSSSEG4E8V  0xfc00707f\n+#define MATCH_VLSSEG5E8V 0x88000007\n+#define MASK_VLSSEG5E8V  0xfc00707f\n+#define MATCH_VSSSEG5E8V 0x88000027\n+#define MASK_VSSSEG5E8V  0xfc00707f\n+#define MATCH_VLSSEG6E8V 0xa8000007\n+#define MASK_VLSSEG6E8V  0xfc00707f\n+#define MATCH_VSSSEG6E8V 0xa8000027\n+#define MASK_VSSSEG6E8V  0xfc00707f\n+#define MATCH_VLSSEG7E8V 0xc8000007\n+#define MASK_VLSSEG7E8V  0xfc00707f\n+#define MATCH_VSSSEG7E8V 0xc8000027\n+#define MASK_VSSSEG7E8V  0xfc00707f\n+#define MATCH_VLSSEG8E8V 0xe8000007\n+#define MASK_VLSSEG8E8V  0xfc00707f\n+#define MATCH_VSSSEG8E8V 0xe8000027\n+#define MASK_VSSSEG8E8V  0xfc00707f\n+#define MATCH_VLSSEG2E16V 0x28005007\n+#define MASK_VLSSEG2E16V 0xfc00707f\n+#define MATCH_VSSSEG2E16V 0x28005027\n+#define MASK_VSSSEG2E16V 0xfc00707f\n+#define MATCH_VLSSEG3E16V 0x48005007\n+#define MASK_VLSSEG3E16V 0xfc00707f\n+#define MATCH_VSSSEG3E16V 0x48005027\n+#define MASK_VSSSEG3E16V 0xfc00707f\n+#define MATCH_VLSSEG4E16V 0x68005007\n+#define MASK_VLSSEG4E16V 0xfc00707f\n+#define MATCH_VSSSEG4E16V 0x68005027\n+#define MASK_VSSSEG4E16V 0xfc00707f\n+#define MATCH_VLSSEG5E16V 0x88005007\n+#define MASK_VLSSEG5E16V 0xfc00707f\n+#define MATCH_VSSSEG5E16V 0x88005027\n+#define MASK_VSSSEG5E16V 0xfc00707f\n+#define MATCH_VLSSEG6E16V 0xa8005007\n+#define MASK_VLSSEG6E16V 0xfc00707f\n+#define MATCH_VSSSEG6E16V 0xa8005027\n+#define MASK_VSSSEG6E16V 0xfc00707f\n+#define MATCH_VLSSEG7E16V 0xc8005007\n+#define MASK_VLSSEG7E16V 0xfc00707f\n+#define MATCH_VSSSEG7E16V 0xc8005027\n+#define MASK_VSSSEG7E16V 0xfc00707f\n+#define MATCH_VLSSEG8E16V 0xe8005007\n+#define MASK_VLSSEG8E16V 0xfc00707f\n+#define MATCH_VSSSEG8E16V 0xe8005027\n+#define MASK_VSSSEG8E16V 0xfc00707f\n+#define MATCH_VLSSEG2E32V 0x28006007\n+#define MASK_VLSSEG2E32V 0xfc00707f\n+#define MATCH_VSSSEG2E32V 0x28006027\n+#define MASK_VSSSEG2E32V 0xfc00707f\n+#define MATCH_VLSSEG3E32V 0x48006007\n+#define MASK_VLSSEG3E32V 0xfc00707f\n+#define MATCH_VSSSEG3E32V 0x48006027\n+#define MASK_VSSSEG3E32V 0xfc00707f\n+#define MATCH_VLSSEG4E32V 0x68006007\n+#define MASK_VLSSEG4E32V 0xfc00707f\n+#define MATCH_VSSSEG4E32V 0x68006027\n+#define MASK_VSSSEG4E32V 0xfc00707f\n+#define MATCH_VLSSEG5E32V 0x88006007\n+#define MASK_VLSSEG5E32V 0xfc00707f\n+#define MATCH_VSSSEG5E32V 0x88006027\n+#define MASK_VSSSEG5E32V 0xfc00707f\n+#define MATCH_VLSSEG6E32V 0xa8006007\n+#define MASK_VLSSEG6E32V 0xfc00707f\n+#define MATCH_VSSSEG6E32V 0xa8006027\n+#define MASK_VSSSEG6E32V 0xfc00707f\n+#define MATCH_VLSSEG7E32V 0xc8006007\n+#define MASK_VLSSEG7E32V 0xfc00707f\n+#define MATCH_VSSSEG7E32V 0xc8006027\n+#define MASK_VSSSEG7E32V 0xfc00707f\n+#define MATCH_VLSSEG8E32V 0xe8006007\n+#define MASK_VLSSEG8E32V 0xfc00707f\n+#define MATCH_VSSSEG8E32V 0xe8006027\n+#define MASK_VSSSEG8E32V 0xfc00707f\n+#define MATCH_VLSSEG2E64V 0x28007007\n+#define MASK_VLSSEG2E64V 0xfc00707f\n+#define MATCH_VSSSEG2E64V 0x28007027\n+#define MASK_VSSSEG2E64V 0xfc00707f\n+#define MATCH_VLSSEG3E64V 0x48007007\n+#define MASK_VLSSEG3E64V 0xfc00707f\n+#define MATCH_VSSSEG3E64V 0x48007027\n+#define MASK_VSSSEG3E64V 0xfc00707f\n+#define MATCH_VLSSEG4E64V 0x68007007\n+#define MASK_VLSSEG4E64V 0xfc00707f\n+#define MATCH_VSSSEG4E64V 0x68007027\n+#define MASK_VSSSEG4E64V 0xfc00707f\n+#define MATCH_VLSSEG5E64V 0x88007007\n+#define MASK_VLSSEG5E64V 0xfc00707f\n+#define MATCH_VSSSEG5E64V 0x88007027\n+#define MASK_VSSSEG5E64V 0xfc00707f\n+#define MATCH_VLSSEG6E64V 0xa8007007\n+#define MASK_VLSSEG6E64V 0xfc00707f\n+#define MATCH_VSSSEG6E64V 0xa8007027\n+#define MASK_VSSSEG6E64V 0xfc00707f\n+#define MATCH_VLSSEG7E64V 0xc8007007\n+#define MASK_VLSSEG7E64V 0xfc00707f\n+#define MATCH_VSSSEG7E64V 0xc8007027\n+#define MASK_VSSSEG7E64V 0xfc00707f\n+#define MATCH_VLSSEG8E64V 0xe8007007\n+#define MASK_VLSSEG8E64V 0xfc00707f\n+#define MATCH_VSSSEG8E64V 0xe8007027\n+#define MASK_VSSSEG8E64V 0xfc00707f\n+#define MATCH_VLOXSEG2EI8V 0x2c000007\n+#define MASK_VLOXSEG2EI8V 0xfc00707f\n+#define MATCH_VSOXSEG2EI8V 0x2c000027\n+#define MASK_VSOXSEG2EI8V 0xfc00707f\n+#define MATCH_VLOXSEG3EI8V 0x4c000007\n+#define MASK_VLOXSEG3EI8V 0xfc00707f\n+#define MATCH_VSOXSEG3EI8V 0x4c000027\n+#define MASK_VSOXSEG3EI8V 0xfc00707f\n+#define MATCH_VLOXSEG4EI8V 0x6c000007\n+#define MASK_VLOXSEG4EI8V 0xfc00707f\n+#define MATCH_VSOXSEG4EI8V 0x6c000027\n+#define MASK_VSOXSEG4EI8V 0xfc00707f\n+#define MATCH_VLOXSEG5EI8V 0x8c000007\n+#define MASK_VLOXSEG5EI8V 0xfc00707f\n+#define MATCH_VSOXSEG5EI8V 0x8c000027\n+#define MASK_VSOXSEG5EI8V 0xfc00707f\n+#define MATCH_VLOXSEG6EI8V 0xac000007\n+#define MASK_VLOXSEG6EI8V 0xfc00707f\n+#define MATCH_VSOXSEG6EI8V 0xac000027\n+#define MASK_VSOXSEG6EI8V 0xfc00707f\n+#define MATCH_VLOXSEG7EI8V 0xcc000007\n+#define MASK_VLOXSEG7EI8V 0xfc00707f\n+#define MATCH_VSOXSEG7EI8V 0xcc000027\n+#define MASK_VSOXSEG7EI8V 0xfc00707f\n+#define MATCH_VLOXSEG8EI8V 0xec000007\n+#define MASK_VLOXSEG8EI8V 0xfc00707f\n+#define MATCH_VSOXSEG8EI8V 0xec000027\n+#define MASK_VSOXSEG8EI8V 0xfc00707f\n+#define MATCH_VLUXSEG2EI8V 0x24000007\n+#define MASK_VLUXSEG2EI8V 0xfc00707f\n+#define MATCH_VSUXSEG2EI8V 0x24000027\n+#define MASK_VSUXSEG2EI8V 0xfc00707f\n+#define MATCH_VLUXSEG3EI8V 0x44000007\n+#define MASK_VLUXSEG3EI8V 0xfc00707f\n+#define MATCH_VSUXSEG3EI8V 0x44000027\n+#define MASK_VSUXSEG3EI8V 0xfc00707f\n+#define MATCH_VLUXSEG4EI8V 0x64000007\n+#define MASK_VLUXSEG4EI8V 0xfc00707f\n+#define MATCH_VSUXSEG4EI8V 0x64000027\n+#define MASK_VSUXSEG4EI8V 0xfc00707f\n+#define MATCH_VLUXSEG5EI8V 0x84000007\n+#define MASK_VLUXSEG5EI8V 0xfc00707f\n+#define MATCH_VSUXSEG5EI8V 0x84000027\n+#define MASK_VSUXSEG5EI8V 0xfc00707f\n+#define MATCH_VLUXSEG6EI8V 0xa4000007\n+#define MASK_VLUXSEG6EI8V 0xfc00707f\n+#define MATCH_VSUXSEG6EI8V 0xa4000027\n+#define MASK_VSUXSEG6EI8V 0xfc00707f\n+#define MATCH_VLUXSEG7EI8V 0xc4000007\n+#define MASK_VLUXSEG7EI8V 0xfc00707f\n+#define MATCH_VSUXSEG7EI8V 0xc4000027\n+#define MASK_VSUXSEG7EI8V 0xfc00707f\n+#define MATCH_VLUXSEG8EI8V 0xe4000007\n+#define MASK_VLUXSEG8EI8V 0xfc00707f\n+#define MATCH_VSUXSEG8EI8V 0xe4000027\n+#define MASK_VSUXSEG8EI8V 0xfc00707f\n+#define MATCH_VLOXSEG2EI16V 0x2c005007\n+#define MASK_VLOXSEG2EI16V 0xfc00707f\n+#define MATCH_VSOXSEG2EI16V 0x2c005027\n+#define MASK_VSOXSEG2EI16V 0xfc00707f\n+#define MATCH_VLOXSEG3EI16V 0x4c005007\n+#define MASK_VLOXSEG3EI16V 0xfc00707f\n+#define MATCH_VSOXSEG3EI16V 0x4c005027\n+#define MASK_VSOXSEG3EI16V 0xfc00707f\n+#define MATCH_VLOXSEG4EI16V 0x6c005007\n+#define MASK_VLOXSEG4EI16V 0xfc00707f\n+#define MATCH_VSOXSEG4EI16V 0x6c005027\n+#define MASK_VSOXSEG4EI16V 0xfc00707f\n+#define MATCH_VLOXSEG5EI16V 0x8c005007\n+#define MASK_VLOXSEG5EI16V 0xfc00707f\n+#define MATCH_VSOXSEG5EI16V 0x8c005027\n+#define MASK_VSOXSEG5EI16V 0xfc00707f\n+#define MATCH_VLOXSEG6EI16V 0xac005007\n+#define MASK_VLOXSEG6EI16V 0xfc00707f\n+#define MATCH_VSOXSEG6EI16V 0xac005027\n+#define MASK_VSOXSEG6EI16V 0xfc00707f\n+#define MATCH_VLOXSEG7EI16V 0xcc005007\n+#define MASK_VLOXSEG7EI16V 0xfc00707f\n+#define MATCH_VSOXSEG7EI16V 0xcc005027\n+#define MASK_VSOXSEG7EI16V 0xfc00707f\n+#define MATCH_VLOXSEG8EI16V 0xec005007\n+#define MASK_VLOXSEG8EI16V 0xfc00707f\n+#define MATCH_VSOXSEG8EI16V 0xec005027\n+#define MASK_VSOXSEG8EI16V 0xfc00707f\n+#define MATCH_VLUXSEG2EI16V 0x24005007\n+#define MASK_VLUXSEG2EI16V 0xfc00707f\n+#define MATCH_VSUXSEG2EI16V 0x24005027\n+#define MASK_VSUXSEG2EI16V 0xfc00707f\n+#define MATCH_VLUXSEG3EI16V 0x44005007\n+#define MASK_VLUXSEG3EI16V 0xfc00707f\n+#define MATCH_VSUXSEG3EI16V 0x44005027\n+#define MASK_VSUXSEG3EI16V 0xfc00707f\n+#define MATCH_VLUXSEG4EI16V 0x64005007\n+#define MASK_VLUXSEG4EI16V 0xfc00707f\n+#define MATCH_VSUXSEG4EI16V 0x64005027\n+#define MASK_VSUXSEG4EI16V 0xfc00707f\n+#define MATCH_VLUXSEG5EI16V 0x84005007\n+#define MASK_VLUXSEG5EI16V 0xfc00707f\n+#define MATCH_VSUXSEG5EI16V 0x84005027\n+#define MASK_VSUXSEG5EI16V 0xfc00707f\n+#define MATCH_VLUXSEG6EI16V 0xa4005007\n+#define MASK_VLUXSEG6EI16V 0xfc00707f\n+#define MATCH_VSUXSEG6EI16V 0xa4005027\n+#define MASK_VSUXSEG6EI16V 0xfc00707f\n+#define MATCH_VLUXSEG7EI16V 0xc4005007\n+#define MASK_VLUXSEG7EI16V 0xfc00707f\n+#define MATCH_VSUXSEG7EI16V 0xc4005027\n+#define MASK_VSUXSEG7EI16V 0xfc00707f\n+#define MATCH_VLUXSEG8EI16V 0xe4005007\n+#define MASK_VLUXSEG8EI16V 0xfc00707f\n+#define MATCH_VSUXSEG8EI16V 0xe4005027\n+#define MASK_VSUXSEG8EI16V 0xfc00707f\n+#define MATCH_VLOXSEG2EI32V 0x2c006007\n+#define MASK_VLOXSEG2EI32V 0xfc00707f\n+#define MATCH_VSOXSEG2EI32V 0x2c006027\n+#define MASK_VSOXSEG2EI32V 0xfc00707f\n+#define MATCH_VLOXSEG3EI32V 0x4c006007\n+#define MASK_VLOXSEG3EI32V 0xfc00707f\n+#define MATCH_VSOXSEG3EI32V 0x4c006027\n+#define MASK_VSOXSEG3EI32V 0xfc00707f\n+#define MATCH_VLOXSEG4EI32V 0x6c006007\n+#define MASK_VLOXSEG4EI32V 0xfc00707f\n+#define MATCH_VSOXSEG4EI32V 0x6c006027\n+#define MASK_VSOXSEG4EI32V 0xfc00707f\n+#define MATCH_VLOXSEG5EI32V 0x8c006007\n+#define MASK_VLOXSEG5EI32V 0xfc00707f\n+#define MATCH_VSOXSEG5EI32V 0x8c006027\n+#define MASK_VSOXSEG5EI32V 0xfc00707f\n+#define MATCH_VLOXSEG6EI32V 0xac006007\n+#define MASK_VLOXSEG6EI32V 0xfc00707f\n+#define MATCH_VSOXSEG6EI32V 0xac006027\n+#define MASK_VSOXSEG6EI32V 0xfc00707f\n+#define MATCH_VLOXSEG7EI32V 0xcc006007\n+#define MASK_VLOXSEG7EI32V 0xfc00707f\n+#define MATCH_VSOXSEG7EI32V 0xcc006027\n+#define MASK_VSOXSEG7EI32V 0xfc00707f\n+#define MATCH_VLOXSEG8EI32V 0xec006007\n+#define MASK_VLOXSEG8EI32V 0xfc00707f\n+#define MATCH_VSOXSEG8EI32V 0xec006027\n+#define MASK_VSOXSEG8EI32V 0xfc00707f\n+#define MATCH_VLUXSEG2EI32V 0x24006007\n+#define MASK_VLUXSEG2EI32V 0xfc00707f\n+#define MATCH_VSUXSEG2EI32V 0x24006027\n+#define MASK_VSUXSEG2EI32V 0xfc00707f\n+#define MATCH_VLUXSEG3EI32V 0x44006007\n+#define MASK_VLUXSEG3EI32V 0xfc00707f\n+#define MATCH_VSUXSEG3EI32V 0x44006027\n+#define MASK_VSUXSEG3EI32V 0xfc00707f\n+#define MATCH_VLUXSEG4EI32V 0x64006007\n+#define MASK_VLUXSEG4EI32V 0xfc00707f\n+#define MATCH_VSUXSEG4EI32V 0x64006027\n+#define MASK_VSUXSEG4EI32V 0xfc00707f\n+#define MATCH_VLUXSEG5EI32V 0x84006007\n+#define MASK_VLUXSEG5EI32V 0xfc00707f\n+#define MATCH_VSUXSEG5EI32V 0x84006027\n+#define MASK_VSUXSEG5EI32V 0xfc00707f\n+#define MATCH_VLUXSEG6EI32V 0xa4006007\n+#define MASK_VLUXSEG6EI32V 0xfc00707f\n+#define MATCH_VSUXSEG6EI32V 0xa4006027\n+#define MASK_VSUXSEG6EI32V 0xfc00707f\n+#define MATCH_VLUXSEG7EI32V 0xc4006007\n+#define MASK_VLUXSEG7EI32V 0xfc00707f\n+#define MATCH_VSUXSEG7EI32V 0xc4006027\n+#define MASK_VSUXSEG7EI32V 0xfc00707f\n+#define MATCH_VLUXSEG8EI32V 0xe4006007\n+#define MASK_VLUXSEG8EI32V 0xfc00707f\n+#define MATCH_VSUXSEG8EI32V 0xe4006027\n+#define MASK_VSUXSEG8EI32V 0xfc00707f\n+#define MATCH_VLOXSEG2EI64V 0x2c007007\n+#define MASK_VLOXSEG2EI64V 0xfc00707f\n+#define MATCH_VSOXSEG2EI64V 0x2c007027\n+#define MASK_VSOXSEG2EI64V 0xfc00707f\n+#define MATCH_VLOXSEG3EI64V 0x4c007007\n+#define MASK_VLOXSEG3EI64V 0xfc00707f\n+#define MATCH_VSOXSEG3EI64V 0x4c007027\n+#define MASK_VSOXSEG3EI64V 0xfc00707f\n+#define MATCH_VLOXSEG4EI64V 0x6c007007\n+#define MASK_VLOXSEG4EI64V 0xfc00707f\n+#define MATCH_VSOXSEG4EI64V 0x6c007027\n+#define MASK_VSOXSEG4EI64V 0xfc00707f\n+#define MATCH_VLOXSEG5EI64V 0x8c007007\n+#define MASK_VLOXSEG5EI64V 0xfc00707f\n+#define MATCH_VSOXSEG5EI64V 0x8c007027\n+#define MASK_VSOXSEG5EI64V 0xfc00707f\n+#define MATCH_VLOXSEG6EI64V 0xac007007\n+#define MASK_VLOXSEG6EI64V 0xfc00707f\n+#define MATCH_VSOXSEG6EI64V 0xac007027\n+#define MASK_VSOXSEG6EI64V 0xfc00707f\n+#define MATCH_VLOXSEG7EI64V 0xcc007007\n+#define MASK_VLOXSEG7EI64V 0xfc00707f\n+#define MATCH_VSOXSEG7EI64V 0xcc007027\n+#define MASK_VSOXSEG7EI64V 0xfc00707f\n+#define MATCH_VLOXSEG8EI64V 0xec007007\n+#define MASK_VLOXSEG8EI64V 0xfc00707f\n+#define MATCH_VSOXSEG8EI64V 0xec007027\n+#define MASK_VSOXSEG8EI64V 0xfc00707f\n+#define MATCH_VLUXSEG2EI64V 0x24007007\n+#define MASK_VLUXSEG2EI64V 0xfc00707f\n+#define MATCH_VSUXSEG2EI64V 0x24007027\n+#define MASK_VSUXSEG2EI64V 0xfc00707f\n+#define MATCH_VLUXSEG3EI64V 0x44007007\n+#define MASK_VLUXSEG3EI64V 0xfc00707f\n+#define MATCH_VSUXSEG3EI64V 0x44007027\n+#define MASK_VSUXSEG3EI64V 0xfc00707f\n+#define MATCH_VLUXSEG4EI64V 0x64007007\n+#define MASK_VLUXSEG4EI64V 0xfc00707f\n+#define MATCH_VSUXSEG4EI64V 0x64007027\n+#define MASK_VSUXSEG4EI64V 0xfc00707f\n+#define MATCH_VLUXSEG5EI64V 0x84007007\n+#define MASK_VLUXSEG5EI64V 0xfc00707f\n+#define MATCH_VSUXSEG5EI64V 0x84007027\n+#define MASK_VSUXSEG5EI64V 0xfc00707f\n+#define MATCH_VLUXSEG6EI64V 0xa4007007\n+#define MASK_VLUXSEG6EI64V 0xfc00707f\n+#define MATCH_VSUXSEG6EI64V 0xa4007027\n+#define MASK_VSUXSEG6EI64V 0xfc00707f\n+#define MATCH_VLUXSEG7EI64V 0xc4007007\n+#define MASK_VLUXSEG7EI64V 0xfc00707f\n+#define MATCH_VSUXSEG7EI64V 0xc4007027\n+#define MASK_VSUXSEG7EI64V 0xfc00707f\n+#define MATCH_VLUXSEG8EI64V 0xe4007007\n+#define MASK_VLUXSEG8EI64V 0xfc00707f\n+#define MATCH_VSUXSEG8EI64V 0xe4007027\n+#define MASK_VSUXSEG8EI64V 0xfc00707f\n+#define MATCH_VLSEG2E8FFV 0x21000007\n+#define MASK_VLSEG2E8FFV 0xfdf0707f\n+#define MATCH_VLSEG3E8FFV 0x41000007\n+#define MASK_VLSEG3E8FFV 0xfdf0707f\n+#define MATCH_VLSEG4E8FFV 0x61000007\n+#define MASK_VLSEG4E8FFV 0xfdf0707f\n+#define MATCH_VLSEG5E8FFV 0x81000007\n+#define MASK_VLSEG5E8FFV 0xfdf0707f\n+#define MATCH_VLSEG6E8FFV 0xa1000007\n+#define MASK_VLSEG6E8FFV 0xfdf0707f\n+#define MATCH_VLSEG7E8FFV 0xc1000007\n+#define MASK_VLSEG7E8FFV 0xfdf0707f\n+#define MATCH_VLSEG8E8FFV 0xe1000007\n+#define MASK_VLSEG8E8FFV 0xfdf0707f\n+#define MATCH_VLSEG2E16FFV 0x21005007\n+#define MASK_VLSEG2E16FFV 0xfdf0707f\n+#define MATCH_VLSEG3E16FFV 0x41005007\n+#define MASK_VLSEG3E16FFV 0xfdf0707f\n+#define MATCH_VLSEG4E16FFV 0x61005007\n+#define MASK_VLSEG4E16FFV 0xfdf0707f\n+#define MATCH_VLSEG5E16FFV 0x81005007\n+#define MASK_VLSEG5E16FFV 0xfdf0707f\n+#define MATCH_VLSEG6E16FFV 0xa1005007\n+#define MASK_VLSEG6E16FFV 0xfdf0707f\n+#define MATCH_VLSEG7E16FFV 0xc1005007\n+#define MASK_VLSEG7E16FFV 0xfdf0707f\n+#define MATCH_VLSEG8E16FFV 0xe1005007\n+#define MASK_VLSEG8E16FFV 0xfdf0707f\n+#define MATCH_VLSEG2E32FFV 0x21006007\n+#define MASK_VLSEG2E32FFV 0xfdf0707f\n+#define MATCH_VLSEG3E32FFV 0x41006007\n+#define MASK_VLSEG3E32FFV 0xfdf0707f\n+#define MATCH_VLSEG4E32FFV 0x61006007\n+#define MASK_VLSEG4E32FFV 0xfdf0707f\n+#define MATCH_VLSEG5E32FFV 0x81006007\n+#define MASK_VLSEG5E32FFV 0xfdf0707f\n+#define MATCH_VLSEG6E32FFV 0xa1006007\n+#define MASK_VLSEG6E32FFV 0xfdf0707f\n+#define MATCH_VLSEG7E32FFV 0xc1006007\n+#define MASK_VLSEG7E32FFV 0xfdf0707f\n+#define MATCH_VLSEG8E32FFV 0xe1006007\n+#define MASK_VLSEG8E32FFV 0xfdf0707f\n+#define MATCH_VLSEG2E64FFV 0x21007007\n+#define MASK_VLSEG2E64FFV 0xfdf0707f\n+#define MATCH_VLSEG3E64FFV 0x41007007\n+#define MASK_VLSEG3E64FFV 0xfdf0707f\n+#define MATCH_VLSEG4E64FFV 0x61007007\n+#define MASK_VLSEG4E64FFV 0xfdf0707f\n+#define MATCH_VLSEG5E64FFV 0x81007007\n+#define MASK_VLSEG5E64FFV 0xfdf0707f\n+#define MATCH_VLSEG6E64FFV 0xa1007007\n+#define MASK_VLSEG6E64FFV 0xfdf0707f\n+#define MATCH_VLSEG7E64FFV 0xc1007007\n+#define MASK_VLSEG7E64FFV 0xfdf0707f\n+#define MATCH_VLSEG8E64FFV 0xe1007007\n+#define MASK_VLSEG8E64FFV 0xfdf0707f\n+#define MATCH_VL1RE8V  0x02800007\n+#define MASK_VL1RE8V  0xfff0707f\n+#define MATCH_VL1RE16V  0x02805007\n+#define MASK_VL1RE16V  0xfff0707f\n+#define MATCH_VL1RE32V  0x02806007\n+#define MASK_VL1RE32V  0xfff0707f\n+#define MATCH_VL1RE64V  0x02807007\n+#define MASK_VL1RE64V  0xfff0707f\n+#define MATCH_VL2RE8V  0x22800007\n+#define MASK_VL2RE8V  0xfff0707f\n+#define MATCH_VL2RE16V  0x22805007\n+#define MASK_VL2RE16V  0xfff0707f\n+#define MATCH_VL2RE32V  0x22806007\n+#define MASK_VL2RE32V  0xfff0707f\n+#define MATCH_VL2RE64V  0x22807007\n+#define MASK_VL2RE64V  0xfff0707f\n+#define MATCH_VL4RE8V  0x62800007\n+#define MASK_VL4RE8V  0xfff0707f\n+#define MATCH_VL4RE16V  0x62805007\n+#define MASK_VL4RE16V  0xfff0707f\n+#define MATCH_VL4RE32V  0x62806007\n+#define MASK_VL4RE32V  0xfff0707f\n+#define MATCH_VL4RE64V  0x62807007\n+#define MASK_VL4RE64V  0xfff0707f\n+#define MATCH_VL8RE8V  0xe2800007\n+#define MASK_VL8RE8V  0xfff0707f\n+#define MATCH_VL8RE16V  0xe2805007\n+#define MASK_VL8RE16V  0xfff0707f\n+#define MATCH_VL8RE32V  0xe2806007\n+#define MASK_VL8RE32V  0xfff0707f\n+#define MATCH_VL8RE64V  0xe2807007\n+#define MASK_VL8RE64V  0xfff0707f\n+#define MATCH_VS1RV  0x02800027\n+#define MASK_VS1RV  0xfff0707f\n+#define MATCH_VS2RV  0x22800027\n+#define MASK_VS2RV  0xfff0707f\n+#define MATCH_VS4RV  0x62800027\n+#define MASK_VS4RV  0xfff0707f\n+#define MATCH_VS8RV  0xe2800027\n+#define MASK_VS8RV  0xfff0707f\n+#define MATCH_VADDVV  0x00000057\n+#define MASK_VADDVV  0xfc00707f\n+#define MATCH_VADDVX  0x00004057\n+#define MASK_VADDVX  0xfc00707f\n+#define MATCH_VADDVI  0x00003057\n+#define MASK_VADDVI  0xfc00707f\n+#define MATCH_VSUBVV  0x08000057\n+#define MASK_VSUBVV  0xfc00707f\n+#define MATCH_VSUBVX  0x08004057\n+#define MASK_VSUBVX  0xfc00707f\n+#define MATCH_VRSUBVX  0x0c004057\n+#define MASK_VRSUBVX  0xfc00707f\n+#define MATCH_VRSUBVI  0x0c003057\n+#define MASK_VRSUBVI  0xfc00707f\n+#define MATCH_VWCVTXXV  0xc4006057\n+#define MASK_VWCVTXXV  0xfc0ff07f\n+#define MATCH_VWCVTUXXV  0xc0006057\n+#define MASK_VWCVTUXXV  0xfc0ff07f\n+#define MATCH_VWADDVV  0xc4002057\n+#define MASK_VWADDVV  0xfc00707f\n+#define MATCH_VWADDVX  0xc4006057\n+#define MASK_VWADDVX  0xfc00707f\n+#define MATCH_VWSUBVV  0xcc002057\n+#define MASK_VWSUBVV  0xfc00707f\n+#define MATCH_VWSUBVX  0xcc006057\n+#define MASK_VWSUBVX  0xfc00707f\n+#define MATCH_VWADDWV  0xd4002057\n+#define MASK_VWADDWV  0xfc00707f\n+#define MATCH_VWADDWX  0xd4006057\n+#define MASK_VWADDWX  0xfc00707f\n+#define MATCH_VWSUBWV  0xdc002057\n+#define MASK_VWSUBWV  0xfc00707f\n+#define MATCH_VWSUBWX  0xdc006057\n+#define MASK_VWSUBWX  0xfc00707f\n+#define MATCH_VWADDUVV  0xc0002057\n+#define MASK_VWADDUVV  0xfc00707f\n+#define MATCH_VWADDUVX  0xc0006057\n+#define MASK_VWADDUVX  0xfc00707f\n+#define MATCH_VWSUBUVV  0xc8002057\n+#define MASK_VWSUBUVV  0xfc00707f\n+#define MATCH_VWSUBUVX  0xc8006057\n+#define MASK_VWSUBUVX  0xfc00707f\n+#define MATCH_VWADDUWV  0xd0002057\n+#define MASK_VWADDUWV  0xfc00707f\n+#define MATCH_VWADDUWX  0xd0006057\n+#define MASK_VWADDUWX  0xfc00707f\n+#define MATCH_VWSUBUWV  0xd8002057\n+#define MASK_VWSUBUWV  0xfc00707f\n+#define MATCH_VWSUBUWX  0xd8006057\n+#define MASK_VWSUBUWX  0xfc00707f\n+#define MATCH_VZEXT_VF8  0x48012057\n+#define MASK_VZEXT_VF8  0xfc0ff07f\n+#define MATCH_VSEXT_VF8  0x4801a057\n+#define MASK_VSEXT_VF8  0xfc0ff07f\n+#define MATCH_VZEXT_VF4  0x48022057\n+#define MASK_VZEXT_VF4  0xfc0ff07f\n+#define MATCH_VSEXT_VF4  0x4802a057\n+#define MASK_VSEXT_VF4  0xfc0ff07f\n+#define MATCH_VZEXT_VF2  0x48032057\n+#define MASK_VZEXT_VF2  0xfc0ff07f\n+#define MATCH_VSEXT_VF2  0x4803a057\n+#define MASK_VSEXT_VF2  0xfc0ff07f\n+#define MATCH_VADCVVM  0x40000057\n+#define MASK_VADCVVM  0xfe00707f\n+#define MATCH_VADCVXM  0x40004057\n+#define MASK_VADCVXM  0xfe00707f\n+#define MATCH_VADCVIM  0x40003057\n+#define MASK_VADCVIM  0xfe00707f\n+#define MATCH_VMADCVVM  0x44000057\n+#define MASK_VMADCVVM  0xfe00707f\n+#define MATCH_VMADCVXM  0x44004057\n+#define MASK_VMADCVXM  0xfe00707f\n+#define MATCH_VMADCVIM  0x44003057\n+#define MASK_VMADCVIM  0xfe00707f\n+#define MATCH_VMADCVV  0x46000057\n+#define MASK_VMADCVV  0xfe00707f\n+#define MATCH_VMADCVX  0x46004057\n+#define MASK_VMADCVX  0xfe00707f\n+#define MATCH_VMADCVI  0x46003057\n+#define MASK_VMADCVI  0xfe00707f\n+#define MATCH_VSBCVVM  0x48000057\n+#define MASK_VSBCVVM  0xfe00707f\n+#define MATCH_VSBCVXM  0x48004057\n+#define MASK_VSBCVXM  0xfe00707f\n+#define MATCH_VMSBCVVM  0x4c000057\n+#define MASK_VMSBCVVM  0xfe00707f\n+#define MATCH_VMSBCVXM  0x4c004057\n+#define MASK_VMSBCVXM  0xfe00707f\n+#define MATCH_VMSBCVV  0x4e000057\n+#define MASK_VMSBCVV  0xfe00707f\n+#define MATCH_VMSBCVX  0x4e004057\n+#define MASK_VMSBCVX  0xfe00707f\n+#define MATCH_VNOTV  0x2c0fb057\n+#define MASK_VNOTV  0xfc0ff07f\n+#define MATCH_VANDVV  0x24000057\n+#define MASK_VANDVV  0xfc00707f\n+#define MATCH_VANDVX  0x24004057\n+#define MASK_VANDVX  0xfc00707f\n+#define MATCH_VANDVI  0x24003057\n+#define MASK_VANDVI  0xfc00707f\n+#define MATCH_VORVV  0x28000057\n+#define MASK_VORVV  0xfc00707f\n+#define MATCH_VORVX  0x28004057\n+#define MASK_VORVX  0xfc00707f\n+#define MATCH_VORVI  0x28003057\n+#define MASK_VORVI  0xfc00707f\n+#define MATCH_VXORVV  0x2c000057\n+#define MASK_VXORVV  0xfc00707f\n+#define MATCH_VXORVX  0x2c004057\n+#define MASK_VXORVX  0xfc00707f\n+#define MATCH_VXORVI  0x2c003057\n+#define MASK_VXORVI  0xfc00707f\n+#define MATCH_VSLLVV  0x94000057\n+#define MASK_VSLLVV  0xfc00707f\n+#define MATCH_VSLLVX  0x94004057\n+#define MASK_VSLLVX  0xfc00707f\n+#define MATCH_VSLLVI  0x94003057\n+#define MASK_VSLLVI  0xfc00707f\n+#define MATCH_VSRLVV  0xa0000057\n+#define MASK_VSRLVV  0xfc00707f\n+#define MATCH_VSRLVX  0xa0004057\n+#define MASK_VSRLVX  0xfc00707f\n+#define MATCH_VSRLVI  0xa0003057\n+#define MASK_VSRLVI  0xfc00707f\n+#define MATCH_VSRAVV  0xa4000057\n+#define MASK_VSRAVV  0xfc00707f\n+#define MATCH_VSRAVX  0xa4004057\n+#define MASK_VSRAVX  0xfc00707f\n+#define MATCH_VSRAVI  0xa4003057\n+#define MASK_VSRAVI  0xfc00707f\n+#define MATCH_VNCVTXXW  0xb0004057\n+#define MASK_VNCVTXXW  0xfc0ff07f\n+#define MATCH_VNSRLWV  0xb0000057\n+#define MASK_VNSRLWV  0xfc00707f\n+#define MATCH_VNSRLWX  0xb0004057\n+#define MASK_VNSRLWX  0xfc00707f\n+#define MATCH_VNSRLWI  0xb0003057\n+#define MASK_VNSRLWI  0xfc00707f\n+#define MATCH_VNSRAWV  0xb4000057\n+#define MASK_VNSRAWV  0xfc00707f\n+#define MATCH_VNSRAWX  0xb4004057\n+#define MASK_VNSRAWX  0xfc00707f\n+#define MATCH_VNSRAWI  0xb4003057\n+#define MASK_VNSRAWI  0xfc00707f\n+#define MATCH_VMSEQVV  0x60000057\n+#define MASK_VMSEQVV  0xfc00707f\n+#define MATCH_VMSEQVX  0x60004057\n+#define MASK_VMSEQVX  0xfc00707f\n+#define MATCH_VMSEQVI  0x60003057\n+#define MASK_VMSEQVI  0xfc00707f\n+#define MATCH_VMSNEVV  0x64000057\n+#define MASK_VMSNEVV  0xfc00707f\n+#define MATCH_VMSNEVX  0x64004057\n+#define MASK_VMSNEVX  0xfc00707f\n+#define MATCH_VMSNEVI  0x64003057\n+#define MASK_VMSNEVI  0xfc00707f\n+#define MATCH_VMSLTVV  0x6c000057\n+#define MASK_VMSLTVV  0xfc00707f\n+#define MATCH_VMSLTVX  0x6c004057\n+#define MASK_VMSLTVX  0xfc00707f\n+#define MATCH_VMSLTUVV  0x68000057\n+#define MASK_VMSLTUVV  0xfc00707f\n+#define MATCH_VMSLTUVX  0x68004057\n+#define MASK_VMSLTUVX  0xfc00707f\n+#define MATCH_VMSLEVV  0x74000057\n+#define MASK_VMSLEVV  0xfc00707f\n+#define MATCH_VMSLEVX  0x74004057\n+#define MASK_VMSLEVX  0xfc00707f\n+#define MATCH_VMSLEVI  0x74003057\n+#define MASK_VMSLEVI  0xfc00707f\n+#define MATCH_VMSLEUVV  0x70000057\n+#define MASK_VMSLEUVV  0xfc00707f\n+#define MATCH_VMSLEUVX  0x70004057\n+#define MASK_VMSLEUVX  0xfc00707f\n+#define MATCH_VMSLEUVI  0x70003057\n+#define MASK_VMSLEUVI  0xfc00707f\n+#define MATCH_VMSGTVX  0x7c004057\n+#define MASK_VMSGTVX  0xfc00707f\n+#define MATCH_VMSGTVI  0x7c003057\n+#define MASK_VMSGTVI  0xfc00707f\n+#define MATCH_VMSGTUVX  0x78004057\n+#define MASK_VMSGTUVX  0xfc00707f\n+#define MATCH_VMSGTUVI  0x78003057\n+#define MASK_VMSGTUVI  0xfc00707f\n+#define MATCH_VMINVV  0x14000057\n+#define MASK_VMINVV  0xfc00707f\n+#define MATCH_VMINVX  0x14004057\n+#define MASK_VMINVX  0xfc00707f\n+#define MATCH_VMAXVV  0x1c000057\n+#define MASK_VMAXVV  0xfc00707f\n+#define MATCH_VMAXVX  0x1c004057\n+#define MASK_VMAXVX  0xfc00707f\n+#define MATCH_VMINUVV  0x10000057\n+#define MASK_VMINUVV  0xfc00707f\n+#define MATCH_VMINUVX  0x10004057\n+#define MASK_VMINUVX  0xfc00707f\n+#define MATCH_VMAXUVV  0x18000057\n+#define MASK_VMAXUVV  0xfc00707f\n+#define MATCH_VMAXUVX  0x18004057\n+#define MASK_VMAXUVX  0xfc00707f\n+#define MATCH_VMULVV  0x94002057\n+#define MASK_VMULVV  0xfc00707f\n+#define MATCH_VMULVX  0x94006057\n+#define MASK_VMULVX  0xfc00707f\n+#define MATCH_VMULHVV  0x9c002057\n+#define MASK_VMULHVV  0xfc00707f\n+#define MATCH_VMULHVX  0x9c006057\n+#define MASK_VMULHVX  0xfc00707f\n+#define MATCH_VMULHUVV  0x90002057\n+#define MASK_VMULHUVV  0xfc00707f\n+#define MATCH_VMULHUVX  0x90006057\n+#define MASK_VMULHUVX  0xfc00707f\n+#define MATCH_VMULHSUVV  0x98002057\n+#define MASK_VMULHSUVV  0xfc00707f\n+#define MATCH_VMULHSUVX  0x98006057\n+#define MASK_VMULHSUVX  0xfc00707f\n+#define MATCH_VWMULVV  0xec002057\n+#define MASK_VWMULVV  0xfc00707f\n+#define MATCH_VWMULVX  0xec006057\n+#define MASK_VWMULVX  0xfc00707f\n+#define MATCH_VWMULUVV  0xe0002057\n+#define MASK_VWMULUVV  0xfc00707f\n+#define MATCH_VWMULUVX  0xe0006057\n+#define MASK_VWMULUVX  0xfc00707f\n+#define MATCH_VWMULSUVV  0xe8002057\n+#define MASK_VWMULSUVV  0xfc00707f\n+#define MATCH_VWMULSUVX  0xe8006057\n+#define MASK_VWMULSUVX  0xfc00707f\n+#define MATCH_VMACCVV  0xb4002057\n+#define MASK_VMACCVV  0xfc00707f\n+#define MATCH_VMACCVX  0xb4006057\n+#define MASK_VMACCVX  0xfc00707f\n+#define MATCH_VNMSACVV  0xbc002057\n+#define MASK_VNMSACVV  0xfc00707f\n+#define MATCH_VNMSACVX  0xbc006057\n+#define MASK_VNMSACVX  0xfc00707f\n+#define MATCH_VMADDVV  0xa4002057\n+#define MASK_VMADDVV  0xfc00707f\n+#define MATCH_VMADDVX  0xa4006057\n+#define MASK_VMADDVX  0xfc00707f\n+#define MATCH_VNMSUBVV  0xac002057\n+#define MASK_VNMSUBVV  0xfc00707f\n+#define MATCH_VNMSUBVX  0xac006057\n+#define MASK_VNMSUBVX  0xfc00707f\n+#define MATCH_VWMACCUVV  0xf0002057\n+#define MASK_VWMACCUVV  0xfc00707f\n+#define MATCH_VWMACCUVX  0xf0006057\n+#define MASK_VWMACCUVX  0xfc00707f\n+#define MATCH_VWMACCVV  0xf4002057\n+#define MASK_VWMACCVV  0xfc00707f\n+#define MATCH_VWMACCVX  0xf4006057\n+#define MASK_VWMACCVX  0xfc00707f\n+#define MATCH_VWMACCSUVV 0xfc002057\n+#define MASK_VWMACCSUVV  0xfc00707f\n+#define MATCH_VWMACCSUVX 0xfc006057\n+#define MASK_VWMACCSUVX  0xfc00707f\n+#define MATCH_VWMACCUSVX 0xf8006057\n+#define MASK_VWMACCUSVX  0xfc00707f\n+#define MATCH_VQMACCUVV  0xf0000057\n+#define MASK_VQMACCUVV  0xfc00707f\n+#define MATCH_VQMACCUVX  0xf0004057\n+#define MASK_VQMACCUVX  0xfc00707f\n+#define MATCH_VQMACCVV  0xf4000057\n+#define MASK_VQMACCVV  0xfc00707f\n+#define MATCH_VQMACCVX  0xf4004057\n+#define MASK_VQMACCVX  0xfc00707f\n+#define MATCH_VQMACCSUVV 0xfc000057\n+#define MASK_VQMACCSUVV  0xfc00707f\n+#define MATCH_VQMACCSUVX 0xfc004057\n+#define MASK_VQMACCSUVX  0xfc00707f\n+#define MATCH_VQMACCUSVX 0xf8004057\n+#define MASK_VQMACCUSVX  0xfc00707f\n+#define MATCH_VDIVVV  0x84002057\n+#define MASK_VDIVVV  0xfc00707f\n+#define MATCH_VDIVVX  0x84006057\n+#define MASK_VDIVVX  0xfc00707f\n+#define MATCH_VDIVUVV  0x80002057\n+#define MASK_VDIVUVV  0xfc00707f\n+#define MATCH_VDIVUVX  0x80006057\n+#define MASK_VDIVUVX  0xfc00707f\n+#define MATCH_VREMVV  0x8c002057\n+#define MASK_VREMVV  0xfc00707f\n+#define MATCH_VREMVX  0x8c006057\n+#define MASK_VREMVX  0xfc00707f\n+#define MATCH_VREMUVV  0x88002057\n+#define MASK_VREMUVV  0xfc00707f\n+#define MATCH_VREMUVX  0x88006057\n+#define MASK_VREMUVX  0xfc00707f\n+#define MATCH_VMERGEVVM  0x5c000057\n+#define MASK_VMERGEVVM  0xfe00707f\n+#define MATCH_VMERGEVXM  0x5c004057\n+#define MASK_VMERGEVXM  0xfe00707f\n+#define MATCH_VMERGEVIM  0x5c003057\n+#define MASK_VMERGEVIM  0xfe00707f\n+#define MATCH_VMVVV  0x5e000057\n+#define MASK_VMVVV  0xfff0707f\n+#define MATCH_VMVVX  0x5e004057\n+#define MASK_VMVVX  0xfff0707f\n+#define MATCH_VMVVI  0x5e003057\n+#define MASK_VMVVI  0xfff0707f\n+#define MATCH_VSADDUVV  0x80000057\n+#define MASK_VSADDUVV  0xfc00707f\n+#define MATCH_VSADDUVX  0x80004057\n+#define MASK_VSADDUVX  0xfc00707f\n+#define MATCH_VSADDUVI  0x80003057\n+#define MASK_VSADDUVI  0xfc00707f\n+#define MATCH_VSADDVV  0x84000057\n+#define MASK_VSADDVV  0xfc00707f\n+#define MATCH_VSADDVX  0x84004057\n+#define MASK_VSADDVX  0xfc00707f\n+#define MATCH_VSADDVI  0x84003057\n+#define MASK_VSADDVI  0xfc00707f\n+#define MATCH_VSSUBUVV  0x88000057\n+#define MASK_VSSUBUVV  0xfc00707f\n+#define MATCH_VSSUBUVX  0x88004057\n+#define MASK_VSSUBUVX  0xfc00707f\n+#define MATCH_VSSUBVV  0x8c000057\n+#define MASK_VSSUBVV  0xfc00707f\n+#define MATCH_VSSUBVX  0x8c004057\n+#define MASK_VSSUBVX  0xfc00707f\n+#define MATCH_VAADDUVV  0x20002057\n+#define MASK_VAADDUVV  0xfc00707f\n+#define MATCH_VAADDUVX  0x20006057\n+#define MASK_VAADDUVX  0xfc00707f\n+#define MATCH_VAADDVV  0x24002057\n+#define MASK_VAADDVV  0xfc00707f\n+#define MATCH_VAADDVX  0x24006057\n+#define MASK_VAADDVX  0xfc00707f\n+#define MATCH_VASUBUVV  0x28002057\n+#define MASK_VASUBUVV  0xfc00707f\n+#define MATCH_VASUBUVX  0x28006057\n+#define MASK_VASUBUVX  0xfc00707f\n+#define MATCH_VASUBVV  0x2c002057\n+#define MASK_VASUBVV  0xfc00707f\n+#define MATCH_VASUBVX  0x2c006057\n+#define MASK_VASUBVX  0xfc00707f\n+#define MATCH_VSMULVV  0x9c000057\n+#define MASK_VSMULVV  0xfc00707f\n+#define MATCH_VSMULVX  0x9c004057\n+#define MASK_VSMULVX  0xfc00707f\n+#define MATCH_VSSRLVV  0xa8000057\n+#define MASK_VSSRLVV  0xfc00707f\n+#define MATCH_VSSRLVX  0xa8004057\n+#define MASK_VSSRLVX  0xfc00707f\n+#define MATCH_VSSRLVI  0xa8003057\n+#define MASK_VSSRLVI  0xfc00707f\n+#define MATCH_VSSRAVV  0xac000057\n+#define MASK_VSSRAVV  0xfc00707f\n+#define MATCH_VSSRAVX  0xac004057\n+#define MASK_VSSRAVX  0xfc00707f\n+#define MATCH_VSSRAVI  0xac003057\n+#define MASK_VSSRAVI  0xfc00707f\n+#define MATCH_VNCLIPUWV  0xb8000057\n+#define MASK_VNCLIPUWV  0xfc00707f\n+#define MATCH_VNCLIPUWX  0xb8004057\n+#define MASK_VNCLIPUWX  0xfc00707f\n+#define MATCH_VNCLIPUWI  0xb8003057\n+#define MASK_VNCLIPUWI  0xfc00707f\n+#define MATCH_VNCLIPWV  0xbc000057\n+#define MASK_VNCLIPWV  0xfc00707f\n+#define MATCH_VNCLIPWX  0xbc004057\n+#define MASK_VNCLIPWX  0xfc00707f\n+#define MATCH_VNCLIPWI  0xbc003057\n+#define MASK_VNCLIPWI  0xfc00707f\n+#define MATCH_VFADDVV  0x00001057\n+#define MASK_VFADDVV  0xfc00707f\n+#define MATCH_VFADDVF  0x00005057\n+#define MASK_VFADDVF  0xfc00707f\n+#define MATCH_VFSUBVV  0x08001057\n+#define MASK_VFSUBVV  0xfc00707f\n+#define MATCH_VFSUBVF  0x08005057\n+#define MASK_VFSUBVF  0xfc00707f\n+#define MATCH_VFRSUBVF  0x9c005057\n+#define MASK_VFRSUBVF  0xfc00707f\n+#define MATCH_VFWADDVV  0xc0001057\n+#define MASK_VFWADDVV  0xfc00707f\n+#define MATCH_VFWADDVF  0xc0005057\n+#define MASK_VFWADDVF  0xfc00707f\n+#define MATCH_VFWSUBVV  0xc8001057\n+#define MASK_VFWSUBVV  0xfc00707f\n+#define MATCH_VFWSUBVF  0xc8005057\n+#define MASK_VFWSUBVF  0xfc00707f\n+#define MATCH_VFWADDWV  0xd0001057\n+#define MASK_VFWADDWV  0xfc00707f\n+#define MATCH_VFWADDWF  0xd0005057\n+#define MASK_VFWADDWF  0xfc00707f\n+#define MATCH_VFWSUBWV  0xd8001057\n+#define MASK_VFWSUBWV  0xfc00707f\n+#define MATCH_VFWSUBWF  0xd8005057\n+#define MASK_VFWSUBWF  0xfc00707f\n+#define MATCH_VFMULVV  0x90001057\n+#define MASK_VFMULVV  0xfc00707f\n+#define MATCH_VFMULVF  0x90005057\n+#define MASK_VFMULVF  0xfc00707f\n+#define MATCH_VFDIVVV  0x80001057\n+#define MASK_VFDIVVV  0xfc00707f\n+#define MATCH_VFDIVVF  0x80005057\n+#define MASK_VFDIVVF  0xfc00707f\n+#define MATCH_VFRDIVVF  0x84005057\n+#define MASK_VFRDIVVF  0xfc00707f\n+#define MATCH_VFWMULVV  0xe0001057\n+#define MASK_VFWMULVV  0xfc00707f\n+#define MATCH_VFWMULVF  0xe0005057\n+#define MASK_VFWMULVF  0xfc00707f\n+#define MATCH_VFMADDVV  0xa0001057\n+#define MASK_VFMADDVV  0xfc00707f\n+#define MATCH_VFMADDVF  0xa0005057\n+#define MASK_VFMADDVF  0xfc00707f\n+#define MATCH_VFNMADDVV  0xa4001057\n+#define MASK_VFNMADDVV  0xfc00707f\n+#define MATCH_VFNMADDVF  0xa4005057\n+#define MASK_VFNMADDVF  0xfc00707f\n+#define MATCH_VFMSUBVV  0xa8001057\n+#define MASK_VFMSUBVV  0xfc00707f\n+#define MATCH_VFMSUBVF  0xa8005057\n+#define MASK_VFMSUBVF  0xfc00707f\n+#define MATCH_VFNMSUBVV  0xac001057\n+#define MASK_VFNMSUBVV  0xfc00707f\n+#define MATCH_VFNMSUBVF  0xac005057\n+#define MASK_VFNMSUBVF  0xfc00707f\n+#define MATCH_VFMACCVV  0xb0001057\n+#define MASK_VFMACCVV  0xfc00707f\n+#define MATCH_VFMACCVF  0xb0005057\n+#define MASK_VFMACCVF  0xfc00707f\n+#define MATCH_VFNMACCVV  0xb4001057\n+#define MASK_VFNMACCVV  0xfc00707f\n+#define MATCH_VFNMACCVF  0xb4005057\n+#define MASK_VFNMACCVF  0xfc00707f\n+#define MATCH_VFMSACVV  0xb8001057\n+#define MASK_VFMSACVV  0xfc00707f\n+#define MATCH_VFMSACVF  0xb8005057\n+#define MASK_VFMSACVF  0xfc00707f\n+#define MATCH_VFNMSACVV  0xbc001057\n+#define MASK_VFNMSACVV  0xfc00707f\n+#define MATCH_VFNMSACVF  0xbc005057\n+#define MASK_VFNMSACVF  0xfc00707f\n+#define MATCH_VFWMACCVV  0xf0001057\n+#define MASK_VFWMACCVV  0xfc00707f\n+#define MATCH_VFWMACCVF  0xf0005057\n+#define MASK_VFWMACCVF  0xfc00707f\n+#define MATCH_VFWNMACCVV 0xf4001057\n+#define MASK_VFWNMACCVV  0xfc00707f\n+#define MATCH_VFWNMACCVF 0xf4005057\n+#define MASK_VFWNMACCVF  0xfc00707f\n+#define MATCH_VFWMSACVV  0xf8001057\n+#define MASK_VFWMSACVV  0xfc00707f\n+#define MATCH_VFWMSACVF  0xf8005057\n+#define MASK_VFWMSACVF  0xfc00707f\n+#define MATCH_VFWNMSACVV 0xfc001057\n+#define MASK_VFWNMSACVV  0xfc00707f\n+#define MATCH_VFWNMSACVF 0xfc005057\n+#define MASK_VFWNMSACVF  0xfc00707f\n+#define MATCH_VFSQRTV  0x4c001057\n+#define MASK_VFSQRTV  0xfc0ff07f\n+#define MATCH_VFRSQRT7V  0x4c021057\n+#define MASK_VFRSQRT7V  0xfc0ff07f\n+#define MATCH_VFREC7V  0x4c029057\n+#define MASK_VFREC7V  0xfc0ff07f\n+#define MATCH_VFCLASSV  0x4c081057\n+#define MASK_VFCLASSV  0xfc0ff07f\n+#define MATCH_VFMINVV  0x10001057\n+#define MASK_VFMINVV  0xfc00707f\n+#define MATCH_VFMINVF  0x10005057\n+#define MASK_VFMINVF  0xfc00707f\n+#define MATCH_VFMAXVV  0x18001057\n+#define MASK_VFMAXVV  0xfc00707f\n+#define MATCH_VFMAXVF  0x18005057\n+#define MASK_VFMAXVF  0xfc00707f\n+#define MATCH_VFSGNJVV  0x20001057\n+#define MASK_VFSGNJVV  0xfc00707f\n+#define MATCH_VFSGNJVF  0x20005057\n+#define MASK_VFSGNJVF  0xfc00707f\n+#define MATCH_VFSGNJNVV  0x24001057\n+#define MASK_VFSGNJNVV  0xfc00707f\n+#define MATCH_VFSGNJNVF  0x24005057\n+#define MASK_VFSGNJNVF  0xfc00707f\n+#define MATCH_VFSGNJXVV  0x28001057\n+#define MASK_VFSGNJXVV  0xfc00707f\n+#define MATCH_VFSGNJXVF  0x28005057\n+#define MASK_VFSGNJXVF  0xfc00707f\n+#define MATCH_VMFEQVV  0x60001057\n+#define MASK_VMFEQVV  0xfc00707f\n+#define MATCH_VMFEQVF  0x60005057\n+#define MASK_VMFEQVF  0xfc00707f\n+#define MATCH_VMFNEVV  0x70001057\n+#define MASK_VMFNEVV  0xfc00707f\n+#define MATCH_VMFNEVF  0x70005057\n+#define MASK_VMFNEVF  0xfc00707f\n+#define MATCH_VMFLTVV  0x6c001057\n+#define MASK_VMFLTVV  0xfc00707f\n+#define MATCH_VMFLTVF  0x6c005057\n+#define MASK_VMFLTVF  0xfc00707f\n+#define MATCH_VMFLEVV  0x64001057\n+#define MASK_VMFLEVV  0xfc00707f\n+#define MATCH_VMFLEVF  0x64005057\n+#define MASK_VMFLEVF  0xfc00707f\n+#define MATCH_VMFGTVF  0x74005057\n+#define MASK_VMFGTVF  0xfc00707f\n+#define MATCH_VMFGEVF  0x7c005057\n+#define MASK_VMFGEVF  0xfc00707f\n+#define MATCH_VFMERGEVFM 0x5c005057\n+#define MASK_VFMERGEVFM  0xfe00707f\n+#define MATCH_VFMVVF  0x5e005057\n+#define MASK_VFMVVF  0xfff0707f\n+#define MATCH_VFCVTXUFV  0x48001057\n+#define MASK_VFCVTXUFV  0xfc0ff07f\n+#define MATCH_VFCVTXFV  0x48009057\n+#define MASK_VFCVTXFV  0xfc0ff07f\n+#define MATCH_VFCVTFXUV  0x48011057\n+#define MASK_VFCVTFXUV  0xfc0ff07f\n+#define MATCH_VFCVTFXV  0x48019057\n+#define MASK_VFCVTFXV  0xfc0ff07f\n+#define MATCH_VFCVTRTZXUFV 0x48031057\n+#define MASK_VFCVTRTZXUFV 0xfc0ff07f\n+#define MATCH_VFCVTRTZXFV 0x48039057\n+#define MASK_VFCVTRTZXFV 0xfc0ff07f\n+#define MATCH_VFWCVTXUFV 0x48041057\n+#define MASK_VFWCVTXUFV  0xfc0ff07f\n+#define MATCH_VFWCVTXFV  0x48049057\n+#define MASK_VFWCVTXFV  0xfc0ff07f\n+#define MATCH_VFWCVTFXUV 0x48051057\n+#define MASK_VFWCVTFXUV  0xfc0ff07f\n+#define MATCH_VFWCVTFXV  0x48059057\n+#define MASK_VFWCVTFXV  0xfc0ff07f\n+#define MATCH_VFWCVTFFV  0x48061057\n+#define MASK_VFWCVTFFV  0xfc0ff07f\n+#define MATCH_VFWCVTRTZXUFV 0x48071057\n+#define MASK_VFWCVTRTZXUFV 0xfc0ff07f\n+#define MATCH_VFWCVTRTZXFV 0x48079057\n+#define MASK_VFWCVTRTZXFV 0xfc0ff07f\n+#define MATCH_VFNCVTXUFW 0x48081057\n+#define MASK_VFNCVTXUFW  0xfc0ff07f\n+#define MATCH_VFNCVTXFW  0x48089057\n+#define MASK_VFNCVTXFW  0xfc0ff07f\n+#define MATCH_VFNCVTFXUW 0x48091057\n+#define MASK_VFNCVTFXUW  0xfc0ff07f\n+#define MATCH_VFNCVTFXW  0x48099057\n+#define MASK_VFNCVTFXW  0xfc0ff07f\n+#define MATCH_VFNCVTFFW  0x480a1057\n+#define MASK_VFNCVTFFW  0xfc0ff07f\n+#define MATCH_VFNCVTRODFFW 0x480a9057\n+#define MASK_VFNCVTRODFFW 0xfc0ff07f\n+#define MATCH_VFNCVTRTZXUFW 0x480b1057\n+#define MASK_VFNCVTRTZXUFW 0xfc0ff07f\n+#define MATCH_VFNCVTRTZXFW 0x480b9057\n+#define MASK_VFNCVTRTZXFW 0xfc0ff07f\n+#define MATCH_VREDSUMVS  0x00002057\n+#define MASK_VREDSUMVS  0xfc00707f\n+#define MATCH_VREDMAXVS  0x1c002057\n+#define MASK_VREDMAXVS  0xfc00707f\n+#define MATCH_VREDMAXUVS 0x18002057\n+#define MASK_VREDMAXUVS  0xfc00707f\n+#define MATCH_VREDMINVS  0x14002057\n+#define MASK_VREDMINVS  0xfc00707f\n+#define MATCH_VREDMINUVS 0x10002057\n+#define MASK_VREDMINUVS  0xfc00707f\n+#define MATCH_VREDANDVS  0x04002057\n+#define MASK_VREDANDVS  0xfc00707f\n+#define MATCH_VREDORVS  0x08002057\n+#define MASK_VREDORVS  0xfc00707f\n+#define MATCH_VREDXORVS  0x0c002057\n+#define MASK_VREDXORVS  0xfc00707f\n+#define MATCH_VWREDSUMUVS 0xc0000057\n+#define MASK_VWREDSUMUVS 0xfc00707f\n+#define MATCH_VWREDSUMVS 0xc4000057\n+#define MASK_VWREDSUMVS  0xfc00707f\n+#define MATCH_VFREDOSUMVS 0x0c001057\n+#define MASK_VFREDOSUMVS 0xfc00707f\n+#define MATCH_VFREDUSUMVS 0x04001057\n+#define MASK_VFREDUSUMVS 0xfc00707f\n+#define MATCH_VFREDMAXVS 0x1c001057\n+#define MASK_VFREDMAXVS  0xfc00707f\n+#define MATCH_VFREDMINVS 0x14001057\n+#define MASK_VFREDMINVS  0xfc00707f\n+#define MATCH_VFWREDOSUMVS 0xcc001057\n+#define MASK_VFWREDOSUMVS 0xfc00707f\n+#define MATCH_VFWREDUSUMVS 0xc4001057\n+#define MASK_VFWREDUSUMVS 0xfc00707f\n+#define MATCH_VMANDMM  0x66002057\n+#define MASK_VMANDMM  0xfe00707f\n+#define MATCH_VMNANDMM  0x76002057\n+#define MASK_VMNANDMM  0xfe00707f\n+#define MATCH_VMANDNMM 0x62002057\n+#define MASK_VMANDNMM  0xfe00707f\n+#define MATCH_VMXORMM  0x6e002057\n+#define MASK_VMXORMM  0xfe00707f\n+#define MATCH_VMORMM  0x6a002057\n+#define MASK_VMORMM  0xfe00707f\n+#define MATCH_VMNORMM  0x7a002057\n+#define MASK_VMNORMM  0xfe00707f\n+#define MATCH_VMORNMM  0x72002057\n+#define MASK_VMORNMM  0xfe00707f\n+#define MATCH_VMXNORMM  0x7e002057\n+#define MASK_VMXNORMM  0xfe00707f\n+#define MATCH_VCPOPM  0x40082057\n+#define MASK_VCPOPM  0xfc0ff07f\n+#define MATCH_VFIRSTM  0x4008a057\n+#define MASK_VFIRSTM  0xfc0ff07f\n+#define MATCH_VMSBFM  0x5000a057\n+#define MASK_VMSBFM  0xfc0ff07f\n+#define MATCH_VMSIFM  0x5001a057\n+#define MASK_VMSIFM  0xfc0ff07f\n+#define MATCH_VMSOFM  0x50012057\n+#define MASK_VMSOFM  0xfc0ff07f\n+#define MATCH_VIOTAM  0x50082057\n+#define MASK_VIOTAM  0xfc0ff07f\n+#define MATCH_VIDV  0x5008a057\n+#define MASK_VIDV  0xfdfff07f\n+#define MATCH_VMVXS  0x42002057\n+#define MASK_VMVXS  0xfe0ff07f\n+#define MATCH_VMVSX  0x42006057\n+#define MASK_VMVSX  0xfff0707f\n+#define MATCH_VFMVFS  0x42001057\n+#define MASK_VFMVFS  0xfe0ff07f\n+#define MATCH_VFMVSF  0x42005057\n+#define MASK_VFMVSF  0xfff0707f\n+#define MATCH_VSLIDEUPVX 0x38004057\n+#define MASK_VSLIDEUPVX  0xfc00707f\n+#define MATCH_VSLIDEUPVI 0x38003057\n+#define MASK_VSLIDEUPVI  0xfc00707f\n+#define MATCH_VSLIDEDOWNVX 0x3c004057\n+#define MASK_VSLIDEDOWNVX 0xfc00707f\n+#define MATCH_VSLIDEDOWNVI 0x3c003057\n+#define MASK_VSLIDEDOWNVI 0xfc00707f\n+#define MATCH_VSLIDE1UPVX 0x38006057\n+#define MASK_VSLIDE1UPVX 0xfc00707f\n+#define MATCH_VSLIDE1DOWNVX 0x3c006057\n+#define MASK_VSLIDE1DOWNVX 0xfc00707f\n+#define MATCH_VFSLIDE1UPVF 0x38005057\n+#define MASK_VFSLIDE1UPVF 0xfc00707f\n+#define MATCH_VFSLIDE1DOWNVF 0x3c005057\n+#define MASK_VFSLIDE1DOWNVF 0xfc00707f\n+#define MATCH_VRGATHERVV 0x30000057\n+#define MASK_VRGATHERVV  0xfc00707f\n+#define MATCH_VRGATHERVX 0x30004057\n+#define MASK_VRGATHERVX  0xfc00707f\n+#define MATCH_VRGATHERVI 0x30003057\n+#define MASK_VRGATHERVI  0xfc00707f\n+#define MATCH_VRGATHEREI16VV 0x38000057\n+#define MASK_VRGATHEREI16VV 0xfc00707f\n+#define MATCH_VCOMPRESSVM 0x5e002057\n+#define MASK_VCOMPRESSVM 0xfe00707f\n+#define MATCH_VMV1RV  0x9e003057\n+#define MASK_VMV1RV  0xfe0ff07f\n+#define MATCH_VMV2RV  0x9e00b057\n+#define MASK_VMV2RV  0xfe0ff07f\n+#define MATCH_VMV4RV  0x9e01b057\n+#define MASK_VMV4RV  0xfe0ff07f\n+#define MATCH_VMV8RV  0x9e03b057\n+#define MASK_VMV8RV  0xfe0ff07f\n+#define MATCH_VDOTVV  0xe4000057\n+#define MASK_VDOTVV  0xfc00707f\n+#define MATCH_VDOTUVV  0xe0000057\n+#define MASK_VDOTUVV  0xfc00707f\n+#define MATCH_VFDOTVV  0xe4001057\n+#define MASK_VFDOTVV  0xfc00707f\n /* Privileged CSR addresses.  */\n #define CSR_USTATUS 0x0\n #define CSR_UIE 0x4\n@@ -953,6 +2235,13 @@\n #define CSR_MCONTEXT 0x7a8\n #define CSR_SCONTEXT 0x7aa\n #define CSR_SEED 0x015\n+#define CSR_VSTART 0x008\n+#define CSR_VXSAT 0x009\n+#define CSR_VXRM 0x00a\n+#define CSR_VCSR 0x00f\n+#define CSR_VL 0xc20\n+#define CSR_VTYPE 0xc21\n+#define CSR_VLENB 0xc22\n #endif /* RISCV_ENCODING_H */\n #ifdef DECLARE_INSN\n DECLARE_INSN(slli_rv32, MATCH_SLLI_RV32, MASK_SLLI_RV32)\n@@ -1511,6 +2800,13 @@ DECLARE_CSR(tcontrol, CSR_TCONTROL, CSR_CLASS_DEBUG, PRIV_SPEC_CLASS_NONE, PRIV_\n DECLARE_CSR(mcontext, CSR_MCONTEXT, CSR_CLASS_DEBUG, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n DECLARE_CSR(scontext, CSR_SCONTEXT, CSR_CLASS_DEBUG, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n DECLARE_CSR(seed, CSR_SEED, CSR_CLASS_ZKR, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vstart, CSR_VSTART, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vxsat, CSR_VXSAT, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vxrm, CSR_VXRM, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vcsr, CSR_VCSR, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vl, CSR_VL, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vtype, CSR_VTYPE, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n+DECLARE_CSR(vlenb, CSR_VLENB, CSR_CLASS_V, PRIV_SPEC_CLASS_NONE, PRIV_SPEC_CLASS_NONE)\n #endif /* DECLARE_CSR */\n #ifdef DECLARE_CSR_ALIAS\n DECLARE_CSR_ALIAS(ubadaddr, CSR_UTVAL, CSR_CLASS_I, PRIV_SPEC_CLASS_1P9P1, PRIV_SPEC_CLASS_1P10)"
    },
    {
      "sha": "eb734d0a54c6214e49fd3a3d2a880aea3fe50c90",
      "filename": "include/opcode/riscv.h",
      "status": "modified",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/include/opcode/riscv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/include/opcode/riscv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv.h?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -101,6 +101,16 @@ static const char * const riscv_pred_succ[16] =\n   ((RV_X(x, 3, 2) << 1) | (RV_X(x, 10, 2) << 3) | (RV_X(x, 2, 1) << 5) | (RV_X(x, 5, 2) << 6) | (-RV_X(x, 12, 1) << 8))\n #define EXTRACT_CJTYPE_IMM(x) \\\n   ((RV_X(x, 3, 3) << 1) | (RV_X(x, 11, 1) << 4) | (RV_X(x, 2, 1) << 5) | (RV_X(x, 7, 1) << 6) | (RV_X(x, 6, 1) << 7) | (RV_X(x, 9, 2) << 8) | (RV_X(x, 8, 1) << 10) | (-RV_X(x, 12, 1) << 11))\n+#define EXTRACT_RVV_VI_IMM(x) \\\n+  (RV_X(x, 15, 5) | (-RV_X(x, 19, 1) << 5))\n+#define EXTRACT_RVV_VI_UIMM(x) \\\n+  (RV_X(x, 15, 5))\n+#define EXTRACT_RVV_OFFSET(x) \\\n+  (RV_X(x, 29, 3))\n+#define EXTRACT_RVV_VB_IMM(x) \\\n+  (RV_X(x, 20, 10))\n+#define EXTRACT_RVV_VC_IMM(x) \\\n+  (RV_X(x, 20, 11))\n \n #define ENCODE_ITYPE_IMM(x) \\\n   (RV_X(x, 0, 12) << 20)\n@@ -142,6 +152,10 @@ static const char * const riscv_pred_succ[16] =\n   ((RV_X(x, 1, 2) << 3) | (RV_X(x, 3, 2) << 10) | (RV_X(x, 5, 1) << 2) | (RV_X(x, 6, 2) << 5) | (RV_X(x, 8, 1) << 12))\n #define ENCODE_CJTYPE_IMM(x) \\\n   ((RV_X(x, 1, 3) << 3) | (RV_X(x, 4, 1) << 11) | (RV_X(x, 5, 1) << 2) | (RV_X(x, 6, 1) << 7) | (RV_X(x, 7, 1) << 6) | (RV_X(x, 8, 2) << 9) | (RV_X(x, 10, 1) << 8) | (RV_X(x, 11, 1) << 12))\n+#define ENCODE_RVV_VB_IMM(x) \\\n+  (RV_X(x, 0, 10) << 20)\n+#define ENCODE_RVV_VC_IMM(x) \\\n+  (RV_X(x, 0, 11) << 20)\n \n #define VALID_ITYPE_IMM(x) (EXTRACT_ITYPE_IMM(ENCODE_ITYPE_IMM(x)) == (x))\n #define VALID_STYPE_IMM(x) (EXTRACT_STYPE_IMM(ENCODE_STYPE_IMM(x)) == (x))\n@@ -165,6 +179,8 @@ static const char * const riscv_pred_succ[16] =\n #define VALID_CLTYPE_LD_IMM(x) (EXTRACT_CLTYPE_LD_IMM(ENCODE_CLTYPE_LD_IMM(x)) == (x))\n #define VALID_CBTYPE_IMM(x) (EXTRACT_CBTYPE_IMM(ENCODE_CBTYPE_IMM(x)) == (x))\n #define VALID_CJTYPE_IMM(x) (EXTRACT_CJTYPE_IMM(ENCODE_CJTYPE_IMM(x)) == (x))\n+#define VALID_RVV_VB_IMM(x) (EXTRACT_RVV_VB_IMM(ENCODE_RVV_VB_IMM(x)) == (x))\n+#define VALID_RVV_VC_IMM(x) (EXTRACT_RVV_VC_IMM(ENCODE_RVV_VC_IMM(x)) == (x))\n \n #define RISCV_RTYPE(insn, rd, rs1, rs2) \\\n   ((MATCH_ ## insn) | ((rd) << OP_SH_RD) | ((rs1) << OP_SH_RS1) | ((rs2) << OP_SH_RS2))\n@@ -268,6 +284,36 @@ static const char * const riscv_pred_succ[16] =\n #define OP_SH_RNUM      20\n #define OP_MASK_RNUM    0xf\n \n+/* RVV fields.  */\n+\n+#define OP_MASK_VD\t\t0x1f\n+#define OP_SH_VD\t\t7\n+#define OP_MASK_VS1\t\t0x1f\n+#define OP_SH_VS1\t\t15\n+#define OP_MASK_VS2\t\t0x1f\n+#define OP_SH_VS2\t\t20\n+#define OP_MASK_VIMM\t\t0x1f\n+#define OP_SH_VIMM\t\t15\n+#define OP_MASK_VMASK\t\t0x1\n+#define OP_SH_VMASK\t\t25\n+#define OP_MASK_VFUNCT6\t\t0x3f\n+#define OP_SH_VFUNCT6\t\t26\n+#define OP_MASK_VLMUL\t\t0x7\n+#define OP_SH_VLMUL\t\t0\n+#define OP_MASK_VSEW\t\t0x7\n+#define OP_SH_VSEW\t\t3\n+#define OP_MASK_VTA\t\t0x1\n+#define OP_SH_VTA\t\t6\n+#define OP_MASK_VMA\t\t0x1\n+#define OP_SH_VMA\t\t7\n+#define OP_MASK_VTYPE_RES\t0x1\n+#define OP_SH_VTYPE_RES\t\t10\n+#define OP_MASK_VWD\t\t0x1\n+#define OP_SH_VWD\t\t26\n+\n+#define NVECR 32\n+#define NVECM 1\n+\n /* ABI names for selected x-registers.  */\n \n #define X_RA 1\n@@ -338,6 +384,8 @@ enum riscv_insn_class\n   INSN_CLASS_ZBB_OR_ZBKB,\n   INSN_CLASS_ZBC_OR_ZBKC,\n   INSN_CLASS_ZKND_OR_ZKNE,\n+  INSN_CLASS_V,\n+  INSN_CLASS_ZVEF,\n };\n \n /* This structure holds information for a particular instruction.  */\n@@ -396,6 +444,8 @@ struct riscv_opcode\n #define INSN_JSR\t\t0x00000006\n /* Instruction is a data reference.  */\n #define INSN_DREF\t\t0x00000008\n+/* Instruction is allowed when eew >= 64.  */\n+#define INSN_V_EEW64\t\t0x10000000\n \n /* We have 5 data reference sizes, which we can encode in 3 bits.  */\n #define INSN_DATA_SIZE\t\t0x00000070\n@@ -441,6 +491,8 @@ enum\n   M_ZEXTW,\n   M_SEXTB,\n   M_SEXTH,\n+  M_VMSGE,\n+  M_VMSGEU,\n   M_NUM_MACROS\n };\n \n@@ -456,6 +508,12 @@ extern const char * const riscv_gpr_names_numeric[NGPR];\n extern const char * const riscv_gpr_names_abi[NGPR];\n extern const char * const riscv_fpr_names_numeric[NFPR];\n extern const char * const riscv_fpr_names_abi[NFPR];\n+extern const char * const riscv_vecr_names_numeric[NVECR];\n+extern const char * const riscv_vecm_names_numeric[NVECM];\n+extern const char * const riscv_vsew[8];\n+extern const char * const riscv_vlmul[8];\n+extern const char * const riscv_vta[2];\n+extern const char * const riscv_vma[2];\n \n extern const struct riscv_opcode riscv_opcodes[];\n extern const struct riscv_opcode riscv_insn_types[];"
    },
    {
      "sha": "fac80b4fc3d552a6d730d5ec10dc36be56eb37dd",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 67,
      "deletions": 0,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -291,6 +291,73 @@ print_insn_args (const char *oparg, insn_t l, bfd_vma pc, disassemble_info *info\n \t    }\n \t  break;\n \n+\tcase 'V': /* RVV */\n+\t  switch (*++oparg)\n+\t    {\n+\t    case 'd':\n+\t    case 'f':\n+\t      print (info->stream, \"%s\",\n+\t\t     riscv_vecr_names_numeric[EXTRACT_OPERAND (VD, l)]);\n+\t      break;\n+\t    case 'e':\n+\t      if (!EXTRACT_OPERAND (VWD, l))\n+\t\tprint (info->stream, \"%s\", riscv_gpr_names[0]);\n+\t      else\n+\t\tprint (info->stream, \"%s\",\n+\t\t       riscv_vecr_names_numeric[EXTRACT_OPERAND (VD, l)]);\n+\t      break;\n+\t    case 's':\n+\t      print (info->stream, \"%s\",\n+\t\t     riscv_vecr_names_numeric[EXTRACT_OPERAND (VS1, l)]);\n+\t      break;\n+\t    case 't':\n+\t    case 'u': /* VS1 == VS2 already verified at this point.  */\n+\t    case 'v': /* VD == VS1 == VS2 already verified at this point.  */\n+\t      print (info->stream, \"%s\",\n+\t\t     riscv_vecr_names_numeric[EXTRACT_OPERAND (VS2, l)]);\n+\t      break;\n+\t    case '0':\n+\t      print (info->stream, \"%s\", riscv_vecr_names_numeric[0]);\n+\t      break;\n+\t    case 'b':\n+\t    case 'c':\n+\t      {\n+\t\tint imm = (*oparg == 'b') ? EXTRACT_RVV_VB_IMM (l)\n+\t\t\t\t\t  : EXTRACT_RVV_VC_IMM (l);\n+\t\tunsigned int imm_vlmul = EXTRACT_OPERAND (VLMUL, imm);\n+\t\tunsigned int imm_vsew = EXTRACT_OPERAND (VSEW, imm);\n+\t\tunsigned int imm_vta = EXTRACT_OPERAND (VTA, imm);\n+\t\tunsigned int imm_vma = EXTRACT_OPERAND (VMA, imm);\n+\t\tunsigned int imm_vtype_res = EXTRACT_OPERAND (VTYPE_RES, imm);\n+\n+\t\tif (imm_vsew < ARRAY_SIZE (riscv_vsew)\n+\t\t    && imm_vlmul < ARRAY_SIZE (riscv_vlmul)\n+\t\t    && imm_vta < ARRAY_SIZE (riscv_vta)\n+\t\t    && imm_vma < ARRAY_SIZE (riscv_vma)\n+\t\t    && !imm_vtype_res)\n+\t\t  print (info->stream, \"%s,%s,%s,%s\", riscv_vsew[imm_vsew],\n+\t\t\t riscv_vlmul[imm_vlmul], riscv_vta[imm_vta],\n+\t\t\t riscv_vma[imm_vma]);\n+\t\telse\n+\t\t  print (info->stream, \"%d\", imm);\n+\t      }\n+\t      break;\n+\t    case 'i':\n+\t      print (info->stream, \"%d\", (int)EXTRACT_RVV_VI_IMM (l));\n+\t      break;\n+\t    case 'j':\n+\t      print (info->stream, \"%d\", (int)EXTRACT_RVV_VI_UIMM (l));\n+\t      break;\n+\t    case 'k':\n+\t      print (info->stream, \"%d\", (int)EXTRACT_RVV_OFFSET (l));\n+\t      break;\n+\t    case 'm':\n+\t      if (! EXTRACT_OPERAND (VMASK, l))\n+\t\tprint (info->stream, \",%s\", riscv_vecm_names_numeric[0]);\n+\t      break;\n+\t    }\n+\t  break;\n+\n \tcase ',':\n \tcase '(':\n \tcase ')':"
    },
    {
      "sha": "6880a616889123df49815ffae5c4d04f15ce76d4",
      "filename": "opcodes/riscv-opc.c",
      "status": "modified",
      "additions": 826,
      "deletions": 0,
      "changes": 826,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/65e4a99a26452d99d586f6e5a0c43e24348a5125/opcodes/riscv-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/65e4a99a26452d99d586f6e5a0c43e24348a5125/opcodes/riscv-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-opc.c?ref=65e4a99a26452d99d586f6e5a0c43e24348a5125",
      "patch": "@@ -58,6 +58,45 @@ const char * const riscv_fpr_names_abi[NFPR] =\n   \"fs8\",  \"fs9\",  \"fs10\", \"fs11\", \"ft8\",  \"ft9\",  \"ft10\", \"ft11\"\n };\n \n+/* RVV registers.  */\n+const char * const riscv_vecr_names_numeric[NVECR] =\n+{\n+  \"v0\",   \"v1\",   \"v2\",   \"v3\",   \"v4\",   \"v5\",   \"v6\",   \"v7\",\n+  \"v8\",   \"v9\",   \"v10\",  \"v11\",  \"v12\",  \"v13\",  \"v14\",  \"v15\",\n+  \"v16\",  \"v17\",  \"v18\",  \"v19\",  \"v20\",  \"v21\",  \"v22\",  \"v23\",\n+  \"v24\",  \"v25\",  \"v26\",  \"v27\",  \"v28\",  \"v29\",  \"v30\",  \"v31\"\n+};\n+\n+/* RVV mask registers.  */\n+const char * const riscv_vecm_names_numeric[NVECM] =\n+{\n+  \"v0.t\"\n+};\n+\n+/* The vsetvli vsew constants.  */\n+const char * const riscv_vsew[8] =\n+{\n+  \"e8\", \"e16\", \"e32\", \"e64\", \"e128\", \"e256\", \"e512\", \"e1024\"\n+};\n+\n+/* The vsetvli vlmul constants.  */\n+const char * const riscv_vlmul[8] =\n+{\n+  \"m1\", \"m2\", \"m4\", \"m8\", 0, \"mf8\", \"mf4\", \"mf2\"\n+};\n+\n+/* The vsetvli vta constants.  */\n+const char * const riscv_vta[2] =\n+{\n+  \"tu\", \"ta\"\n+};\n+\n+/* The vsetvli vma constants.  */\n+const char * const riscv_vma[2] =\n+{\n+  \"mu\", \"ma\"\n+};\n+\n /* The order of overloaded instructions matters.  Label arguments and\n    register arguments look the same. Instructions that can have either\n    for arguments must apear in the correct order in this table for the\n@@ -87,6 +126,10 @@ const char * const riscv_fpr_names_abi[NFPR] =\n #define MATCH_SHAMT_BREV8 (0b00111 << OP_SH_SHAMT)\n #define MATCH_SHAMT_ZIP_32 (0b1111 << OP_SH_SHAMT)\n #define MATCH_SHAMT_ORC_B (0b00111 << OP_SH_SHAMT)\n+#define MASK_VD (OP_MASK_VD << OP_SH_VD)\n+#define MASK_VS1 (OP_MASK_VS1 << OP_SH_VS1)\n+#define MASK_VS2 (OP_MASK_VS2 << OP_SH_VS2)\n+#define MASK_VMASK (OP_MASK_VMASK << OP_SH_VMASK)\n \n static int\n match_opcode (const struct riscv_opcode *op, insn_t insn)\n@@ -202,6 +245,27 @@ match_srxi_as_c_srxi (const struct riscv_opcode *op, insn_t insn)\n   return match_opcode (op, insn) && EXTRACT_CITYPE_IMM (insn) != 0;\n }\n \n+static int\n+match_vs1_eq_vs2 (const struct riscv_opcode *op,\n+\t\t  insn_t insn)\n+{\n+  int vs1 = (insn & MASK_VS1) >> OP_SH_VS1;\n+  int vs2 = (insn & MASK_VS2) >> OP_SH_VS2;\n+\n+  return match_opcode (op, insn) && vs1 == vs2;\n+}\n+\n+static int\n+match_vd_eq_vs1_eq_vs2 (const struct riscv_opcode *op,\n+\t\t\tinsn_t insn)\n+{\n+  int vd =  (insn & MASK_VD) >> OP_SH_VD;\n+  int vs1 = (insn & MASK_VS1) >> OP_SH_VS1;\n+  int vs2 = (insn & MASK_VS2) >> OP_SH_VS2;\n+\n+  return match_opcode (op, insn) && vd == vs1 && vs1 == vs2;\n+}\n+\n const struct riscv_opcode riscv_opcodes[] =\n {\n /* name, xlen, isa, operands, match, mask, match_func, pinfo.  */\n@@ -899,6 +963,768 @@ const struct riscv_opcode riscv_opcodes[] =\n {\"sm3p0\",    0, INSN_CLASS_ZKSH,    \"d,s\",    MATCH_SM3P0, MASK_SM3P0, match_opcode, 0 },\n {\"sm3p1\",    0, INSN_CLASS_ZKSH,    \"d,s\",    MATCH_SM3P1, MASK_SM3P1, match_opcode, 0 },\n \n+/* RVV instructions.  */\n+{\"vsetvl\",     0, INSN_CLASS_V,  \"d,s,t\",  MATCH_VSETVL, MASK_VSETVL, match_opcode, 0},\n+{\"vsetvli\",    0, INSN_CLASS_V,  \"d,s,Vc\", MATCH_VSETVLI, MASK_VSETVLI, match_opcode, 0},\n+{\"vsetivli\",   0, INSN_CLASS_V,  \"d,Z,Vb\", MATCH_VSETIVLI, MASK_VSETIVLI, match_opcode, 0},\n+\n+{\"vlm.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VLMV, MASK_VLMV, match_opcode, INSN_DREF },\n+{\"vsm.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VSMV, MASK_VSMV, match_opcode, INSN_DREF },\n+{\"vle1.v\",     0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VLMV, MASK_VLMV, match_opcode, INSN_DREF|INSN_ALIAS },\n+{\"vse1.v\",     0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VSMV, MASK_VSMV, match_opcode, INSN_DREF|INSN_ALIAS },\n+\n+{\"vle8.v\",     0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE8V, MASK_VLE8V, match_opcode, INSN_DREF },\n+{\"vle16.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE16V, MASK_VLE16V, match_opcode, INSN_DREF },\n+{\"vle32.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE32V, MASK_VLE32V, match_opcode, INSN_DREF },\n+{\"vle64.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE64V, MASK_VLE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vse8.v\",     0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSE8V, MASK_VSE8V, match_opcode, INSN_DREF },\n+{\"vse16.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSE16V, MASK_VSE16V, match_opcode, INSN_DREF },\n+{\"vse32.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSE32V, MASK_VSE32V, match_opcode, INSN_DREF },\n+{\"vse64.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSE64V, MASK_VSE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vlse8.v\",    0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSE8V, MASK_VLSE8V, match_opcode, INSN_DREF },\n+{\"vlse16.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSE16V, MASK_VLSE16V, match_opcode, INSN_DREF },\n+{\"vlse32.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSE32V, MASK_VLSE32V, match_opcode, INSN_DREF },\n+{\"vlse64.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSE64V, MASK_VLSE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vsse8.v\",    0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSE8V, MASK_VSSE8V, match_opcode, INSN_DREF },\n+{\"vsse16.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSE16V, MASK_VSSE16V, match_opcode, INSN_DREF },\n+{\"vsse32.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSE32V, MASK_VSSE32V, match_opcode, INSN_DREF },\n+{\"vsse64.v\",   0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSE64V, MASK_VSSE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vloxei8.v\",   0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXEI8V, MASK_VLOXEI8V, match_opcode, INSN_DREF },\n+{\"vloxei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXEI16V, MASK_VLOXEI16V, match_opcode, INSN_DREF },\n+{\"vloxei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXEI32V, MASK_VLOXEI32V, match_opcode, INSN_DREF },\n+{\"vloxei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXEI64V, MASK_VLOXEI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vsoxei8.v\",   0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXEI8V, MASK_VSOXEI8V, match_opcode, INSN_DREF },\n+{\"vsoxei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXEI16V, MASK_VSOXEI16V, match_opcode, INSN_DREF },\n+{\"vsoxei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXEI32V, MASK_VSOXEI32V, match_opcode, INSN_DREF },\n+{\"vsoxei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXEI64V, MASK_VSOXEI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vluxei8.v\",   0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXEI8V, MASK_VLUXEI8V, match_opcode, INSN_DREF },\n+{\"vluxei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXEI16V, MASK_VLUXEI16V, match_opcode, INSN_DREF },\n+{\"vluxei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXEI32V, MASK_VLUXEI32V, match_opcode, INSN_DREF },\n+{\"vluxei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXEI64V, MASK_VLUXEI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vsuxei8.v\",   0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXEI8V, MASK_VSUXEI8V, match_opcode, INSN_DREF },\n+{\"vsuxei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXEI16V, MASK_VSUXEI16V, match_opcode, INSN_DREF },\n+{\"vsuxei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXEI32V, MASK_VSUXEI32V, match_opcode, INSN_DREF },\n+{\"vsuxei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXEI64V, MASK_VSUXEI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vle8ff.v\",    0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE8FFV, MASK_VLE8FFV, match_opcode, INSN_DREF },\n+{\"vle16ff.v\",   0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE16FFV, MASK_VLE16FFV, match_opcode, INSN_DREF },\n+{\"vle32ff.v\",   0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE32FFV, MASK_VLE32FFV, match_opcode, INSN_DREF },\n+{\"vle64ff.v\",   0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLE64FFV, MASK_VLE64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vlseg2e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E8V, MASK_VLSEG2E8V, match_opcode, INSN_DREF },\n+{\"vsseg2e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG2E8V, MASK_VSSEG2E8V, match_opcode, INSN_DREF },\n+{\"vlseg3e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E8V, MASK_VLSEG3E8V, match_opcode, INSN_DREF },\n+{\"vsseg3e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG3E8V, MASK_VSSEG3E8V, match_opcode, INSN_DREF },\n+{\"vlseg4e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E8V, MASK_VLSEG4E8V, match_opcode, INSN_DREF },\n+{\"vsseg4e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG4E8V, MASK_VSSEG4E8V, match_opcode, INSN_DREF },\n+{\"vlseg5e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E8V, MASK_VLSEG5E8V, match_opcode, INSN_DREF },\n+{\"vsseg5e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG5E8V, MASK_VSSEG5E8V, match_opcode, INSN_DREF },\n+{\"vlseg6e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E8V, MASK_VLSEG6E8V, match_opcode, INSN_DREF },\n+{\"vsseg6e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG6E8V, MASK_VSSEG6E8V, match_opcode, INSN_DREF },\n+{\"vlseg7e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E8V, MASK_VLSEG7E8V, match_opcode, INSN_DREF },\n+{\"vsseg7e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG7E8V, MASK_VSSEG7E8V, match_opcode, INSN_DREF },\n+{\"vlseg8e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E8V, MASK_VLSEG8E8V, match_opcode, INSN_DREF },\n+{\"vsseg8e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG8E8V, MASK_VSSEG8E8V, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E16V, MASK_VLSEG2E16V, match_opcode, INSN_DREF },\n+{\"vsseg2e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG2E16V, MASK_VSSEG2E16V, match_opcode, INSN_DREF },\n+{\"vlseg3e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E16V, MASK_VLSEG3E16V, match_opcode, INSN_DREF },\n+{\"vsseg3e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG3E16V, MASK_VSSEG3E16V, match_opcode, INSN_DREF },\n+{\"vlseg4e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E16V, MASK_VLSEG4E16V, match_opcode, INSN_DREF },\n+{\"vsseg4e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG4E16V, MASK_VSSEG4E16V, match_opcode, INSN_DREF },\n+{\"vlseg5e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E16V, MASK_VLSEG5E16V, match_opcode, INSN_DREF },\n+{\"vsseg5e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG5E16V, MASK_VSSEG5E16V, match_opcode, INSN_DREF },\n+{\"vlseg6e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E16V, MASK_VLSEG6E16V, match_opcode, INSN_DREF },\n+{\"vsseg6e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG6E16V, MASK_VSSEG6E16V, match_opcode, INSN_DREF },\n+{\"vlseg7e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E16V, MASK_VLSEG7E16V, match_opcode, INSN_DREF },\n+{\"vsseg7e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG7E16V, MASK_VSSEG7E16V, match_opcode, INSN_DREF },\n+{\"vlseg8e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E16V, MASK_VLSEG8E16V, match_opcode, INSN_DREF },\n+{\"vsseg8e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG8E16V, MASK_VSSEG8E16V, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E32V, MASK_VLSEG2E32V, match_opcode, INSN_DREF },\n+{\"vsseg2e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG2E32V, MASK_VSSEG2E32V, match_opcode, INSN_DREF },\n+{\"vlseg3e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E32V, MASK_VLSEG3E32V, match_opcode, INSN_DREF },\n+{\"vsseg3e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG3E32V, MASK_VSSEG3E32V, match_opcode, INSN_DREF },\n+{\"vlseg4e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E32V, MASK_VLSEG4E32V, match_opcode, INSN_DREF },\n+{\"vsseg4e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG4E32V, MASK_VSSEG4E32V, match_opcode, INSN_DREF },\n+{\"vlseg5e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E32V, MASK_VLSEG5E32V, match_opcode, INSN_DREF },\n+{\"vsseg5e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG5E32V, MASK_VSSEG5E32V, match_opcode, INSN_DREF },\n+{\"vlseg6e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E32V, MASK_VLSEG6E32V, match_opcode, INSN_DREF },\n+{\"vsseg6e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG6E32V, MASK_VSSEG6E32V, match_opcode, INSN_DREF },\n+{\"vlseg7e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E32V, MASK_VLSEG7E32V, match_opcode, INSN_DREF },\n+{\"vsseg7e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG7E32V, MASK_VSSEG7E32V, match_opcode, INSN_DREF },\n+{\"vlseg8e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E32V, MASK_VLSEG8E32V, match_opcode, INSN_DREF },\n+{\"vsseg8e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG8E32V, MASK_VSSEG8E32V, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E64V, MASK_VLSEG2E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg2e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG2E64V, MASK_VSSEG2E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg3e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E64V, MASK_VLSEG3E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg3e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG3E64V, MASK_VSSEG3E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg4e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E64V, MASK_VLSEG4E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg4e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG4E64V, MASK_VSSEG4E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg5e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E64V, MASK_VLSEG5E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg5e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG5E64V, MASK_VSSEG5E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg6e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E64V, MASK_VLSEG6E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg6e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG6E64V, MASK_VSSEG6E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg7e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E64V, MASK_VLSEG7E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg7e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG7E64V, MASK_VSSEG7E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg8e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E64V, MASK_VLSEG8E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsseg8e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VSSEG8E64V, MASK_VSSEG8E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vlsseg2e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG2E8V, MASK_VLSSEG2E8V, match_opcode, INSN_DREF },\n+{\"vssseg2e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG2E8V, MASK_VSSSEG2E8V, match_opcode, INSN_DREF },\n+{\"vlsseg3e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG3E8V, MASK_VLSSEG3E8V, match_opcode, INSN_DREF },\n+{\"vssseg3e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG3E8V, MASK_VSSSEG3E8V, match_opcode, INSN_DREF },\n+{\"vlsseg4e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG4E8V, MASK_VLSSEG4E8V, match_opcode, INSN_DREF },\n+{\"vssseg4e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG4E8V, MASK_VSSSEG4E8V, match_opcode, INSN_DREF },\n+{\"vlsseg5e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG5E8V, MASK_VLSSEG5E8V, match_opcode, INSN_DREF },\n+{\"vssseg5e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG5E8V, MASK_VSSSEG5E8V, match_opcode, INSN_DREF },\n+{\"vlsseg6e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG6E8V, MASK_VLSSEG6E8V, match_opcode, INSN_DREF },\n+{\"vssseg6e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG6E8V, MASK_VSSSEG6E8V, match_opcode, INSN_DREF },\n+{\"vlsseg7e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG7E8V, MASK_VLSSEG7E8V, match_opcode, INSN_DREF },\n+{\"vssseg7e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG7E8V, MASK_VSSSEG7E8V, match_opcode, INSN_DREF },\n+{\"vlsseg8e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG8E8V, MASK_VLSSEG8E8V, match_opcode, INSN_DREF },\n+{\"vssseg8e8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG8E8V, MASK_VSSSEG8E8V, match_opcode, INSN_DREF },\n+\n+{\"vlsseg2e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG2E16V, MASK_VLSSEG2E16V, match_opcode, INSN_DREF },\n+{\"vssseg2e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG2E16V, MASK_VSSSEG2E16V, match_opcode, INSN_DREF },\n+{\"vlsseg3e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG3E16V, MASK_VLSSEG3E16V, match_opcode, INSN_DREF },\n+{\"vssseg3e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG3E16V, MASK_VSSSEG3E16V, match_opcode, INSN_DREF },\n+{\"vlsseg4e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG4E16V, MASK_VLSSEG4E16V, match_opcode, INSN_DREF },\n+{\"vssseg4e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG4E16V, MASK_VSSSEG4E16V, match_opcode, INSN_DREF },\n+{\"vlsseg5e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG5E16V, MASK_VLSSEG5E16V, match_opcode, INSN_DREF },\n+{\"vssseg5e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG5E16V, MASK_VSSSEG5E16V, match_opcode, INSN_DREF },\n+{\"vlsseg6e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG6E16V, MASK_VLSSEG6E16V, match_opcode, INSN_DREF },\n+{\"vssseg6e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG6E16V, MASK_VSSSEG6E16V, match_opcode, INSN_DREF },\n+{\"vlsseg7e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG7E16V, MASK_VLSSEG7E16V, match_opcode, INSN_DREF },\n+{\"vssseg7e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG7E16V, MASK_VSSSEG7E16V, match_opcode, INSN_DREF },\n+{\"vlsseg8e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG8E16V, MASK_VLSSEG8E16V, match_opcode, INSN_DREF },\n+{\"vssseg8e16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG8E16V, MASK_VSSSEG8E16V, match_opcode, INSN_DREF },\n+\n+{\"vlsseg2e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG2E32V, MASK_VLSSEG2E32V, match_opcode, INSN_DREF },\n+{\"vssseg2e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG2E32V, MASK_VSSSEG2E32V, match_opcode, INSN_DREF },\n+{\"vlsseg3e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG3E32V, MASK_VLSSEG3E32V, match_opcode, INSN_DREF },\n+{\"vssseg3e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG3E32V, MASK_VSSSEG3E32V, match_opcode, INSN_DREF },\n+{\"vlsseg4e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG4E32V, MASK_VLSSEG4E32V, match_opcode, INSN_DREF },\n+{\"vssseg4e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG4E32V, MASK_VSSSEG4E32V, match_opcode, INSN_DREF },\n+{\"vlsseg5e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG5E32V, MASK_VLSSEG5E32V, match_opcode, INSN_DREF },\n+{\"vssseg5e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG5E32V, MASK_VSSSEG5E32V, match_opcode, INSN_DREF },\n+{\"vlsseg6e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG6E32V, MASK_VLSSEG6E32V, match_opcode, INSN_DREF },\n+{\"vssseg6e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG6E32V, MASK_VSSSEG6E32V, match_opcode, INSN_DREF },\n+{\"vlsseg7e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG7E32V, MASK_VLSSEG7E32V, match_opcode, INSN_DREF },\n+{\"vssseg7e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG7E32V, MASK_VSSSEG7E32V, match_opcode, INSN_DREF },\n+{\"vlsseg8e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG8E32V, MASK_VLSSEG8E32V, match_opcode, INSN_DREF },\n+{\"vssseg8e32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG8E32V, MASK_VSSSEG8E32V, match_opcode, INSN_DREF },\n+\n+{\"vlsseg2e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG2E64V, MASK_VLSSEG2E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg2e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG2E64V, MASK_VSSSEG2E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg3e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG3E64V, MASK_VLSSEG3E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg3e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG3E64V, MASK_VSSSEG3E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg4e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG4E64V, MASK_VLSSEG4E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg4e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG4E64V, MASK_VSSSEG4E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg5e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG5E64V, MASK_VLSSEG5E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg5e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG5E64V, MASK_VSSSEG5E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg6e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG6E64V, MASK_VLSSEG6E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg6e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG6E64V, MASK_VSSSEG6E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg7e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG7E64V, MASK_VLSSEG7E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg7e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG7E64V, MASK_VSSSEG7E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlsseg8e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VLSSEG8E64V, MASK_VLSSEG8E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vssseg8e64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),tVm\", MATCH_VSSSEG8E64V, MASK_VSSSEG8E64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vloxseg2ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG2EI8V, MASK_VLOXSEG2EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg2ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG2EI8V, MASK_VSOXSEG2EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg3ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG3EI8V, MASK_VLOXSEG3EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg3ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG3EI8V, MASK_VSOXSEG3EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg4ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG4EI8V, MASK_VLOXSEG4EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg4ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG4EI8V, MASK_VSOXSEG4EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg5ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG5EI8V, MASK_VLOXSEG5EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg5ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG5EI8V, MASK_VSOXSEG5EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg6ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG6EI8V, MASK_VLOXSEG6EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg6ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG6EI8V, MASK_VSOXSEG6EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg7ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG7EI8V, MASK_VLOXSEG7EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg7ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG7EI8V, MASK_VSOXSEG7EI8V, match_opcode, INSN_DREF },\n+{\"vloxseg8ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG8EI8V, MASK_VLOXSEG8EI8V, match_opcode, INSN_DREF },\n+{\"vsoxseg8ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG8EI8V, MASK_VSOXSEG8EI8V, match_opcode, INSN_DREF },\n+\n+{\"vloxseg2ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG2EI16V, MASK_VLOXSEG2EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg2ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG2EI16V, MASK_VSOXSEG2EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg3ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG3EI16V, MASK_VLOXSEG3EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg3ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG3EI16V, MASK_VSOXSEG3EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg4ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG4EI16V, MASK_VLOXSEG4EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg4ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG4EI16V, MASK_VSOXSEG4EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg5ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG5EI16V, MASK_VLOXSEG5EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg5ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG5EI16V, MASK_VSOXSEG5EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg6ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG6EI16V, MASK_VLOXSEG6EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg6ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG6EI16V, MASK_VSOXSEG6EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg7ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG7EI16V, MASK_VLOXSEG7EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg7ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG7EI16V, MASK_VSOXSEG7EI16V, match_opcode, INSN_DREF },\n+{\"vloxseg8ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG8EI16V, MASK_VLOXSEG8EI16V, match_opcode, INSN_DREF },\n+{\"vsoxseg8ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG8EI16V, MASK_VSOXSEG8EI16V, match_opcode, INSN_DREF },\n+\n+{\"vloxseg2ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG2EI32V, MASK_VLOXSEG2EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg2ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG2EI32V, MASK_VSOXSEG2EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg3ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG3EI32V, MASK_VLOXSEG3EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg3ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG3EI32V, MASK_VSOXSEG3EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg4ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG4EI32V, MASK_VLOXSEG4EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg4ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG4EI32V, MASK_VSOXSEG4EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg5ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG5EI32V, MASK_VLOXSEG5EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg5ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG5EI32V, MASK_VSOXSEG5EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg6ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG6EI32V, MASK_VLOXSEG6EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg6ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG6EI32V, MASK_VSOXSEG6EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg7ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG7EI32V, MASK_VLOXSEG7EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg7ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG7EI32V, MASK_VSOXSEG7EI32V, match_opcode, INSN_DREF },\n+{\"vloxseg8ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG8EI32V, MASK_VLOXSEG8EI32V, match_opcode, INSN_DREF },\n+{\"vsoxseg8ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG8EI32V, MASK_VSOXSEG8EI32V, match_opcode, INSN_DREF },\n+\n+{\"vloxseg2ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG2EI64V, MASK_VLOXSEG2EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg2ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG2EI64V, MASK_VSOXSEG2EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg3ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG3EI64V, MASK_VLOXSEG3EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg3ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG3EI64V, MASK_VSOXSEG3EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg4ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG4EI64V, MASK_VLOXSEG4EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg4ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG4EI64V, MASK_VSOXSEG4EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg5ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG5EI64V, MASK_VLOXSEG5EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg5ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG5EI64V, MASK_VSOXSEG5EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg6ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG6EI64V, MASK_VLOXSEG6EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg6ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG6EI64V, MASK_VSOXSEG6EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg7ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG7EI64V, MASK_VLOXSEG7EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg7ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG7EI64V, MASK_VSOXSEG7EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vloxseg8ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLOXSEG8EI64V, MASK_VLOXSEG8EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsoxseg8ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSOXSEG8EI64V, MASK_VSOXSEG8EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vluxseg2ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG2EI8V, MASK_VLUXSEG2EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg2ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG2EI8V, MASK_VSUXSEG2EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg3ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG3EI8V, MASK_VLUXSEG3EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg3ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG3EI8V, MASK_VSUXSEG3EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg4ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG4EI8V, MASK_VLUXSEG4EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg4ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG4EI8V, MASK_VSUXSEG4EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg5ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG5EI8V, MASK_VLUXSEG5EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg5ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG5EI8V, MASK_VSUXSEG5EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg6ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG6EI8V, MASK_VLUXSEG6EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg6ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG6EI8V, MASK_VSUXSEG6EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg7ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG7EI8V, MASK_VLUXSEG7EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg7ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG7EI8V, MASK_VSUXSEG7EI8V, match_opcode, INSN_DREF },\n+{\"vluxseg8ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG8EI8V, MASK_VLUXSEG8EI8V, match_opcode, INSN_DREF },\n+{\"vsuxseg8ei8.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG8EI8V, MASK_VSUXSEG8EI8V, match_opcode, INSN_DREF },\n+\n+{\"vluxseg2ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG2EI16V, MASK_VLUXSEG2EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg2ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG2EI16V, MASK_VSUXSEG2EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg3ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG3EI16V, MASK_VLUXSEG3EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg3ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG3EI16V, MASK_VSUXSEG3EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg4ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG4EI16V, MASK_VLUXSEG4EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg4ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG4EI16V, MASK_VSUXSEG4EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg5ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG5EI16V, MASK_VLUXSEG5EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg5ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG5EI16V, MASK_VSUXSEG5EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg6ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG6EI16V, MASK_VLUXSEG6EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg6ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG6EI16V, MASK_VSUXSEG6EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg7ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG7EI16V, MASK_VLUXSEG7EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg7ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG7EI16V, MASK_VSUXSEG7EI16V, match_opcode, INSN_DREF },\n+{\"vluxseg8ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG8EI16V, MASK_VLUXSEG8EI16V, match_opcode, INSN_DREF },\n+{\"vsuxseg8ei16.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG8EI16V, MASK_VSUXSEG8EI16V, match_opcode, INSN_DREF },\n+\n+{\"vluxseg2ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG2EI32V, MASK_VLUXSEG2EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg2ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG2EI32V, MASK_VSUXSEG2EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg3ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG3EI32V, MASK_VLUXSEG3EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg3ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG3EI32V, MASK_VSUXSEG3EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg4ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG4EI32V, MASK_VLUXSEG4EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg4ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG4EI32V, MASK_VSUXSEG4EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg5ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG5EI32V, MASK_VLUXSEG5EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg5ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG5EI32V, MASK_VSUXSEG5EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg6ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG6EI32V, MASK_VLUXSEG6EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg6ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG6EI32V, MASK_VSUXSEG6EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg7ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG7EI32V, MASK_VLUXSEG7EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg7ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG7EI32V, MASK_VSUXSEG7EI32V, match_opcode, INSN_DREF },\n+{\"vluxseg8ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG8EI32V, MASK_VLUXSEG8EI32V, match_opcode, INSN_DREF },\n+{\"vsuxseg8ei32.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG8EI32V, MASK_VSUXSEG8EI32V, match_opcode, INSN_DREF },\n+\n+{\"vluxseg2ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG2EI64V, MASK_VLUXSEG2EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg2ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG2EI64V, MASK_VSUXSEG2EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg3ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG3EI64V, MASK_VLUXSEG3EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg3ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG3EI64V, MASK_VSUXSEG3EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg4ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG4EI64V, MASK_VLUXSEG4EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg4ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG4EI64V, MASK_VSUXSEG4EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg5ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG5EI64V, MASK_VLUXSEG5EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg5ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG5EI64V, MASK_VSUXSEG5EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg6ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG6EI64V, MASK_VLUXSEG6EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg6ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG6EI64V, MASK_VSUXSEG6EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg7ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG7EI64V, MASK_VLUXSEG7EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg7ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG7EI64V, MASK_VSUXSEG7EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vluxseg8ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VLUXSEG8EI64V, MASK_VLUXSEG8EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vsuxseg8ei64.v\",  0, INSN_CLASS_V,  \"Vd,0(s),VtVm\", MATCH_VSUXSEG8EI64V, MASK_VSUXSEG8EI64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vlseg2e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E8FFV, MASK_VLSEG2E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg3e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E8FFV, MASK_VLSEG3E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg4e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E8FFV, MASK_VLSEG4E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg5e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E8FFV, MASK_VLSEG5E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg6e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E8FFV, MASK_VLSEG6E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg7e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E8FFV, MASK_VLSEG7E8FFV, match_opcode, INSN_DREF },\n+{\"vlseg8e8ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E8FFV, MASK_VLSEG8E8FFV, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E16FFV, MASK_VLSEG2E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg3e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E16FFV, MASK_VLSEG3E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg4e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E16FFV, MASK_VLSEG4E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg5e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E16FFV, MASK_VLSEG5E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg6e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E16FFV, MASK_VLSEG6E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg7e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E16FFV, MASK_VLSEG7E16FFV, match_opcode, INSN_DREF },\n+{\"vlseg8e16ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E16FFV, MASK_VLSEG8E16FFV, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E32FFV, MASK_VLSEG2E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg3e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E32FFV, MASK_VLSEG3E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg4e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E32FFV, MASK_VLSEG4E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg5e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E32FFV, MASK_VLSEG5E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg6e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E32FFV, MASK_VLSEG6E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg7e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E32FFV, MASK_VLSEG7E32FFV, match_opcode, INSN_DREF },\n+{\"vlseg8e32ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E32FFV, MASK_VLSEG8E32FFV, match_opcode, INSN_DREF },\n+\n+{\"vlseg2e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG2E64FFV, MASK_VLSEG2E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg3e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG3E64FFV, MASK_VLSEG3E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg4e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG4E64FFV, MASK_VLSEG4E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg5e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG5E64FFV, MASK_VLSEG5E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg6e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG6E64FFV, MASK_VLSEG6E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg7e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG7E64FFV, MASK_VLSEG7E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+{\"vlseg8e64ff.v\",  0, INSN_CLASS_V,  \"Vd,0(s)Vm\", MATCH_VLSEG8E64FFV, MASK_VLSEG8E64FFV, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vl1r.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL1RE8V, MASK_VL1RE8V, match_opcode, INSN_DREF|INSN_ALIAS },\n+{\"vl1re8.v\",    0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL1RE8V, MASK_VL1RE8V, match_opcode, INSN_DREF },\n+{\"vl1re16.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL1RE16V, MASK_VL1RE16V, match_opcode, INSN_DREF },\n+{\"vl1re32.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL1RE32V, MASK_VL1RE32V, match_opcode, INSN_DREF },\n+{\"vl1re64.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL1RE64V, MASK_VL1RE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vl2r.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL2RE8V, MASK_VL2RE8V, match_opcode, INSN_DREF|INSN_ALIAS },\n+{\"vl2re8.v\",    0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL2RE8V, MASK_VL2RE8V, match_opcode, INSN_DREF },\n+{\"vl2re16.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL2RE16V, MASK_VL2RE16V, match_opcode, INSN_DREF },\n+{\"vl2re32.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL2RE32V, MASK_VL2RE32V, match_opcode, INSN_DREF },\n+{\"vl2re64.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL2RE64V, MASK_VL2RE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vl4r.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL4RE8V, MASK_VL4RE8V, match_opcode, INSN_DREF|INSN_ALIAS },\n+{\"vl4re8.v\",    0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL4RE8V, MASK_VL4RE8V, match_opcode, INSN_DREF },\n+{\"vl4re16.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL4RE16V, MASK_VL4RE16V, match_opcode, INSN_DREF },\n+{\"vl4re32.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL4RE32V, MASK_VL4RE32V, match_opcode, INSN_DREF },\n+{\"vl4re64.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL4RE64V, MASK_VL4RE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vl8r.v\",      0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL8RE8V, MASK_VL8RE8V, match_opcode, INSN_DREF|INSN_ALIAS },\n+{\"vl8re8.v\",    0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL8RE8V, MASK_VL8RE8V, match_opcode, INSN_DREF },\n+{\"vl8re16.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL8RE16V, MASK_VL8RE16V, match_opcode, INSN_DREF },\n+{\"vl8re32.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL8RE32V, MASK_VL8RE32V, match_opcode, INSN_DREF },\n+{\"vl8re64.v\",   0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VL8RE64V, MASK_VL8RE64V, match_opcode, INSN_DREF|INSN_V_EEW64 },\n+\n+{\"vs1r.v\",  0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VS1RV, MASK_VS1RV, match_opcode, INSN_DREF },\n+{\"vs2r.v\",  0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VS2RV, MASK_VS2RV, match_opcode, INSN_DREF },\n+{\"vs4r.v\",  0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VS4RV, MASK_VS4RV, match_opcode, INSN_DREF },\n+{\"vs8r.v\",  0, INSN_CLASS_V,  \"Vd,0(s)\", MATCH_VS8RV, MASK_VS8RV, match_opcode, INSN_DREF },\n+\n+{\"vneg.v\",     0, INSN_CLASS_V,  \"Vd,VtVm\",  MATCH_VRSUBVX, MASK_VRSUBVX | MASK_RS1, match_opcode, INSN_ALIAS },\n+\n+{\"vadd.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VADDVV, MASK_VADDVV, match_opcode, 0 },\n+{\"vadd.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VADDVX, MASK_VADDVX, match_opcode, 0 },\n+{\"vadd.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VADDVI, MASK_VADDVI, match_opcode, 0 },\n+{\"vsub.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSUBVV, MASK_VSUBVV, match_opcode, 0 },\n+{\"vsub.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSUBVX, MASK_VSUBVX, match_opcode, 0 },\n+{\"vrsub.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VRSUBVX, MASK_VRSUBVX, match_opcode, 0 },\n+{\"vrsub.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VRSUBVI, MASK_VRSUBVI, match_opcode, 0 },\n+\n+{\"vwcvt.x.x.v\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VWCVTXXV, MASK_VWCVTXXV, match_opcode, INSN_ALIAS },\n+{\"vwcvtu.x.x.v\", 0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VWCVTUXXV, MASK_VWCVTUXXV, match_opcode, INSN_ALIAS },\n+\n+{\"vwaddu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWADDUVV, MASK_VWADDUVV, match_opcode, 0 },\n+{\"vwaddu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWADDUVX, MASK_VWADDUVX, match_opcode, 0 },\n+{\"vwsubu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWSUBUVV, MASK_VWSUBUVV, match_opcode, 0 },\n+{\"vwsubu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWSUBUVX, MASK_VWSUBUVX, match_opcode, 0 },\n+{\"vwadd.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWADDVV, MASK_VWADDVV, match_opcode, 0 },\n+{\"vwadd.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWADDVX, MASK_VWADDVX, match_opcode, 0 },\n+{\"vwsub.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWSUBVV, MASK_VWSUBVV, match_opcode, 0 },\n+{\"vwsub.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWSUBVX, MASK_VWSUBVX, match_opcode, 0 },\n+{\"vwaddu.wv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWADDUWV, MASK_VWADDUWV, match_opcode, 0 },\n+{\"vwaddu.wx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWADDUWX, MASK_VWADDUWX, match_opcode, 0 },\n+{\"vwsubu.wv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWSUBUWV, MASK_VWSUBUWV, match_opcode, 0 },\n+{\"vwsubu.wx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWSUBUWX, MASK_VWSUBUWX, match_opcode, 0 },\n+{\"vwadd.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWADDWV, MASK_VWADDWV, match_opcode, 0 },\n+{\"vwadd.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWADDWX, MASK_VWADDWX, match_opcode, 0 },\n+{\"vwsub.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWSUBWV, MASK_VWSUBWV, match_opcode, 0 },\n+{\"vwsub.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWSUBWX, MASK_VWSUBWX, match_opcode, 0 },\n+\n+{\"vzext.vf2\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VZEXT_VF2, MASK_VZEXT_VF2, match_opcode, 0 },\n+{\"vsext.vf2\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VSEXT_VF2, MASK_VSEXT_VF2, match_opcode, 0 },\n+{\"vzext.vf4\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VZEXT_VF4, MASK_VZEXT_VF4, match_opcode, 0 },\n+{\"vsext.vf4\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VSEXT_VF4, MASK_VSEXT_VF4, match_opcode, 0 },\n+{\"vzext.vf8\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VZEXT_VF8, MASK_VZEXT_VF8, match_opcode, 0 },\n+{\"vsext.vf8\",  0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VSEXT_VF8, MASK_VSEXT_VF8, match_opcode, 0 },\n+\n+{\"vadc.vvm\",   0, INSN_CLASS_V,  \"Vd,Vt,Vs,V0\", MATCH_VADCVVM, MASK_VADCVVM, match_opcode, 0 },\n+{\"vadc.vxm\",   0, INSN_CLASS_V,  \"Vd,Vt,s,V0\", MATCH_VADCVXM, MASK_VADCVXM, match_opcode, 0 },\n+{\"vadc.vim\",   0, INSN_CLASS_V,  \"Vd,Vt,Vi,V0\", MATCH_VADCVIM, MASK_VADCVIM, match_opcode, 0 },\n+{\"vmadc.vvm\",  0, INSN_CLASS_V,  \"Vd,Vt,Vs,V0\", MATCH_VMADCVVM, MASK_VMADCVVM, match_opcode, 0 },\n+{\"vmadc.vxm\",  0, INSN_CLASS_V,  \"Vd,Vt,s,V0\", MATCH_VMADCVXM, MASK_VMADCVXM, match_opcode, 0 },\n+{\"vmadc.vim\",  0, INSN_CLASS_V,  \"Vd,Vt,Vi,V0\", MATCH_VMADCVIM, MASK_VMADCVIM, match_opcode, 0 },\n+{\"vmadc.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,Vs\", MATCH_VMADCVV, MASK_VMADCVV, match_opcode, 0 },\n+{\"vmadc.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,s\", MATCH_VMADCVX, MASK_VMADCVX, match_opcode, 0 },\n+{\"vmadc.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,Vi\", MATCH_VMADCVI, MASK_VMADCVI, match_opcode, 0 },\n+{\"vsbc.vvm\",   0, INSN_CLASS_V,  \"Vd,Vt,Vs,V0\", MATCH_VSBCVVM, MASK_VSBCVVM, match_opcode, 0 },\n+{\"vsbc.vxm\",   0, INSN_CLASS_V,  \"Vd,Vt,s,V0\", MATCH_VSBCVXM, MASK_VSBCVXM, match_opcode, 0 },\n+{\"vmsbc.vvm\",  0, INSN_CLASS_V,  \"Vd,Vt,Vs,V0\", MATCH_VMSBCVVM, MASK_VMSBCVVM, match_opcode, 0 },\n+{\"vmsbc.vxm\",  0, INSN_CLASS_V,  \"Vd,Vt,s,V0\", MATCH_VMSBCVXM, MASK_VMSBCVXM, match_opcode, 0 },\n+{\"vmsbc.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,Vs\", MATCH_VMSBCVV, MASK_VMSBCVV, match_opcode, 0 },\n+{\"vmsbc.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,s\", MATCH_VMSBCVX, MASK_VMSBCVX, match_opcode, 0 },\n+\n+{\"vnot.v\",     0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VNOTV, MASK_VNOTV, match_opcode, INSN_ALIAS },\n+\n+{\"vand.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VANDVV, MASK_VANDVV, match_opcode, 0 },\n+{\"vand.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VANDVX, MASK_VANDVX, match_opcode, 0 },\n+{\"vand.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VANDVI, MASK_VANDVI, match_opcode, 0 },\n+{\"vor.vv\",     0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VORVV, MASK_VORVV, match_opcode, 0 },\n+{\"vor.vx\",     0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VORVX, MASK_VORVX, match_opcode, 0 },\n+{\"vor.vi\",     0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VORVI, MASK_VORVI, match_opcode, 0 },\n+{\"vxor.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VXORVV, MASK_VXORVV, match_opcode, 0 },\n+{\"vxor.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VXORVX, MASK_VXORVX, match_opcode, 0 },\n+{\"vxor.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VXORVI, MASK_VXORVI, match_opcode, 0 },\n+\n+{\"vsll.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSLLVV, MASK_VSLLVV, match_opcode, 0 },\n+{\"vsll.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSLLVX, MASK_VSLLVX, match_opcode, 0 },\n+{\"vsll.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VSLLVI, MASK_VSLLVI, match_opcode, 0 },\n+{\"vsrl.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSRLVV, MASK_VSRLVV, match_opcode, 0 },\n+{\"vsrl.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSRLVX, MASK_VSRLVX, match_opcode, 0 },\n+{\"vsrl.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VSRLVI, MASK_VSRLVI, match_opcode, 0 },\n+{\"vsra.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSRAVV, MASK_VSRAVV, match_opcode, 0 },\n+{\"vsra.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSRAVX, MASK_VSRAVX, match_opcode, 0 },\n+{\"vsra.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VSRAVI, MASK_VSRAVI, match_opcode, 0 },\n+\n+{\"vncvt.x.x.w\",0, INSN_CLASS_V,  \"Vd,VtVm\", MATCH_VNCVTXXW, MASK_VNCVTXXW, match_opcode, INSN_ALIAS },\n+\n+{\"vnsrl.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VNSRLWV, MASK_VNSRLWV, match_opcode, 0 },\n+{\"vnsrl.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VNSRLWX, MASK_VNSRLWX, match_opcode, 0 },\n+{\"vnsrl.wi\",   0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VNSRLWI, MASK_VNSRLWI, match_opcode, 0 },\n+{\"vnsra.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VNSRAWV, MASK_VNSRAWV, match_opcode, 0 },\n+{\"vnsra.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VNSRAWX, MASK_VNSRAWX, match_opcode, 0 },\n+{\"vnsra.wi\",   0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VNSRAWI, MASK_VNSRAWI, match_opcode, 0 },\n+\n+{\"vmseq.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSEQVV, MASK_VMSEQVV, match_opcode, 0 },\n+{\"vmseq.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSEQVX, MASK_VMSEQVX, match_opcode, 0 },\n+{\"vmseq.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSEQVI, MASK_VMSEQVI, match_opcode, 0 },\n+{\"vmsne.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSNEVV, MASK_VMSNEVV, match_opcode, 0 },\n+{\"vmsne.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSNEVX, MASK_VMSNEVX, match_opcode, 0 },\n+{\"vmsne.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSNEVI, MASK_VMSNEVI, match_opcode, 0 },\n+{\"vmsltu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSLTUVV, MASK_VMSLTUVV, match_opcode, 0 },\n+{\"vmsltu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSLTUVX, MASK_VMSLTUVX, match_opcode, 0 },\n+{\"vmslt.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSLTVV, MASK_VMSLTVV, match_opcode, 0 },\n+{\"vmslt.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSLTVX, MASK_VMSLTVX, match_opcode, 0 },\n+{\"vmsleu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSLEUVV, MASK_VMSLEUVV, match_opcode, 0 },\n+{\"vmsleu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSLEUVX, MASK_VMSLEUVX, match_opcode, 0 },\n+{\"vmsleu.vi\",  0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSLEUVI, MASK_VMSLEUVI, match_opcode, 0 },\n+{\"vmsle.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMSLEVV, MASK_VMSLEVV, match_opcode, 0 },\n+{\"vmsle.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSLEVX, MASK_VMSLEVX, match_opcode, 0 },\n+{\"vmsle.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSLEVI, MASK_VMSLEVI, match_opcode, 0 },\n+{\"vmsgtu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSGTUVX, MASK_VMSGTUVX, match_opcode, 0 },\n+{\"vmsgtu.vi\",  0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSGTUVI, MASK_VMSGTUVI, match_opcode, 0 },\n+{\"vmsgt.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMSGTVX, MASK_VMSGTVX, match_opcode, 0 },\n+{\"vmsgt.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VMSGTVI, MASK_VMSGTVI, match_opcode, 0 },\n+{\"vmsgt.vv\",   0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMSLTVV, MASK_VMSLTVV, match_opcode, INSN_ALIAS },\n+{\"vmsgtu.vv\",  0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMSLTUVV, MASK_VMSLTUVV, match_opcode, INSN_ALIAS },\n+{\"vmsge.vv\",   0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMSLEVV, MASK_VMSLEVV, match_opcode, INSN_ALIAS },\n+{\"vmsgeu.vv\",  0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMSLEUVV, MASK_VMSLEUVV, match_opcode, INSN_ALIAS },\n+{\"vmslt.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,VkVm\", MATCH_VMSLEVI, MASK_VMSLEVI, match_opcode, INSN_ALIAS },\n+{\"vmsltu.vi\",  0, INSN_CLASS_V,  \"Vd,Vu,0Vm\", MATCH_VMSNEVV, MASK_VMSNEVV, match_vs1_eq_vs2, INSN_ALIAS },\n+{\"vmsltu.vi\",  0, INSN_CLASS_V,  \"Vd,Vt,VkVm\", MATCH_VMSLEUVI, MASK_VMSLEUVI, match_opcode, INSN_ALIAS },\n+{\"vmsge.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,VkVm\", MATCH_VMSGTVI, MASK_VMSGTVI, match_opcode, INSN_ALIAS },\n+{\"vmsgeu.vi\",  0, INSN_CLASS_V,  \"Vd,Vu,0Vm\", MATCH_VMSEQVV, MASK_VMSEQVV, match_vs1_eq_vs2, INSN_ALIAS },\n+{\"vmsgeu.vi\",  0, INSN_CLASS_V,  \"Vd,Vt,VkVm\", MATCH_VMSGTUVI, MASK_VMSGTUVI, match_opcode, INSN_ALIAS },\n+\n+{\"vmsge.vx\",   0, INSN_CLASS_V, \"Vd,Vt,sVm\", 0, (int) M_VMSGE, match_opcode, INSN_MACRO },\n+{\"vmsge.vx\",   0, INSN_CLASS_V, \"Vd,Vt,s,VM,VT\", 0, (int) M_VMSGE, match_opcode, INSN_MACRO },\n+{\"vmsgeu.vx\",  0, INSN_CLASS_V, \"Vd,Vt,sVm\", 0, (int) M_VMSGEU, match_opcode, INSN_MACRO },\n+{\"vmsgeu.vx\",  0, INSN_CLASS_V, \"Vd,Vt,s,VM,VT\", 0, (int) M_VMSGEU, match_opcode, INSN_MACRO },\n+\n+{\"vminu.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMINUVV, MASK_VMINUVV, match_opcode, 0},\n+{\"vminu.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMINUVX, MASK_VMINUVX, match_opcode, 0},\n+{\"vmin.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMINVV, MASK_VMINVV, match_opcode, 0},\n+{\"vmin.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMINVX, MASK_VMINVX, match_opcode, 0},\n+{\"vmaxu.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMAXUVV, MASK_VMAXUVV, match_opcode, 0},\n+{\"vmaxu.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMAXUVX, MASK_VMAXUVX, match_opcode, 0},\n+{\"vmax.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMAXVV, MASK_VMAXVV, match_opcode, 0},\n+{\"vmax.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMAXVX, MASK_VMAXVX, match_opcode, 0},\n+\n+{\"vmul.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMULVV, MASK_VMULVV, match_opcode, 0 },\n+{\"vmul.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMULVX, MASK_VMULVX, match_opcode, 0 },\n+{\"vmulh.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMULHVV, MASK_VMULHVV, match_opcode, 0 },\n+{\"vmulh.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMULHVX, MASK_VMULHVX, match_opcode, 0 },\n+{\"vmulhu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMULHUVV, MASK_VMULHUVV, match_opcode, 0 },\n+{\"vmulhu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMULHUVX, MASK_VMULHUVX, match_opcode, 0 },\n+{\"vmulhsu.vv\", 0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VMULHSUVV, MASK_VMULHSUVV, match_opcode, 0 },\n+{\"vmulhsu.vx\", 0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VMULHSUVX, MASK_VMULHSUVX, match_opcode, 0 },\n+\n+{\"vwmul.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWMULVV, MASK_VWMULVV, match_opcode, 0 },\n+{\"vwmul.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWMULVX, MASK_VWMULVX, match_opcode, 0 },\n+{\"vwmulu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWMULUVV, MASK_VWMULUVV, match_opcode, 0 },\n+{\"vwmulu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWMULUVX, MASK_VWMULUVX, match_opcode, 0 },\n+{\"vwmulsu.vv\", 0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VWMULSUVV, MASK_VWMULSUVV, match_opcode, 0 },\n+{\"vwmulsu.vx\", 0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VWMULSUVX, MASK_VWMULSUVX, match_opcode, 0 },\n+\n+{\"vmacc.vv\",   0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMACCVV, MASK_VMACCVV, match_opcode, 0},\n+{\"vmacc.vx\",   0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VMACCVX, MASK_VMACCVX, match_opcode, 0},\n+{\"vnmsac.vv\",  0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VNMSACVV, MASK_VNMSACVV, match_opcode, 0},\n+{\"vnmsac.vx\",  0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VNMSACVX, MASK_VNMSACVX, match_opcode, 0},\n+{\"vmadd.vv\",   0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VMADDVV, MASK_VMADDVV, match_opcode, 0},\n+{\"vmadd.vx\",   0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VMADDVX, MASK_VMADDVX, match_opcode, 0},\n+{\"vnmsub.vv\",  0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VNMSUBVV, MASK_VNMSUBVV, match_opcode, 0},\n+{\"vnmsub.vx\",  0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VNMSUBVX, MASK_VNMSUBVX, match_opcode, 0},\n+\n+{\"vwmaccu.vv\",  0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VWMACCUVV, MASK_VWMACCUVV, match_opcode, 0},\n+{\"vwmaccu.vx\",  0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VWMACCUVX, MASK_VWMACCUVX, match_opcode, 0},\n+{\"vwmacc.vv\",   0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VWMACCVV, MASK_VWMACCVV, match_opcode, 0},\n+{\"vwmacc.vx\",   0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VWMACCVX, MASK_VWMACCVX, match_opcode, 0},\n+{\"vwmaccsu.vv\", 0, INSN_CLASS_V,  \"Vd,Vs,VtVm\", MATCH_VWMACCSUVV, MASK_VWMACCSUVV, match_opcode, 0},\n+{\"vwmaccsu.vx\", 0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VWMACCSUVX, MASK_VWMACCSUVX, match_opcode, 0},\n+{\"vwmaccus.vx\", 0, INSN_CLASS_V,  \"Vd,s,VtVm\", MATCH_VWMACCUSVX, MASK_VWMACCUSVX, match_opcode, 0},\n+\n+{\"vdivu.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VDIVUVV, MASK_VDIVUVV, match_opcode, 0 },\n+{\"vdivu.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VDIVUVX, MASK_VDIVUVX, match_opcode, 0 },\n+{\"vdiv.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VDIVVV, MASK_VDIVVV, match_opcode, 0 },\n+{\"vdiv.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VDIVVX, MASK_VDIVVX, match_opcode, 0 },\n+{\"vremu.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VREMUVV, MASK_VREMUVV, match_opcode, 0 },\n+{\"vremu.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VREMUVX, MASK_VREMUVX, match_opcode, 0 },\n+{\"vrem.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VREMVV, MASK_VREMVV, match_opcode, 0 },\n+{\"vrem.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VREMVX, MASK_VREMVX, match_opcode, 0 },\n+\n+{\"vmerge.vvm\", 0, INSN_CLASS_V,  \"Vd,Vt,Vs,V0\", MATCH_VMERGEVVM, MASK_VMERGEVVM, match_opcode, 0 },\n+{\"vmerge.vxm\", 0, INSN_CLASS_V,  \"Vd,Vt,s,V0\", MATCH_VMERGEVXM, MASK_VMERGEVXM, match_opcode, 0 },\n+{\"vmerge.vim\", 0, INSN_CLASS_V,  \"Vd,Vt,Vi,V0\", MATCH_VMERGEVIM, MASK_VMERGEVIM, match_opcode, 0 },\n+\n+{\"vmv.v.v\",    0, INSN_CLASS_V,  \"Vd,Vs\", MATCH_VMVVV, MASK_VMVVV, match_opcode, 0 },\n+{\"vmv.v.x\",    0, INSN_CLASS_V,  \"Vd,s\", MATCH_VMVVX, MASK_VMVVX, match_opcode, 0 },\n+{\"vmv.v.i\",    0, INSN_CLASS_V,  \"Vd,Vi\", MATCH_VMVVI, MASK_VMVVI, match_opcode, 0 },\n+\n+{\"vsaddu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSADDUVV, MASK_VSADDUVV, match_opcode, 0 },\n+{\"vsaddu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSADDUVX, MASK_VSADDUVX, match_opcode, 0 },\n+{\"vsaddu.vi\",  0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VSADDUVI, MASK_VSADDUVI, match_opcode, 0 },\n+{\"vsadd.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSADDVV, MASK_VSADDVV, match_opcode, 0 },\n+{\"vsadd.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSADDVX, MASK_VSADDVX, match_opcode, 0 },\n+{\"vsadd.vi\",   0, INSN_CLASS_V,  \"Vd,Vt,ViVm\", MATCH_VSADDVI, MASK_VSADDVI, match_opcode, 0 },\n+{\"vssubu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSSUBUVV, MASK_VSSUBUVV, match_opcode, 0 },\n+{\"vssubu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSSUBUVX, MASK_VSSUBUVX, match_opcode, 0 },\n+{\"vssub.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSSUBVV, MASK_VSSUBVV, match_opcode, 0 },\n+{\"vssub.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSSUBVX, MASK_VSSUBVX, match_opcode, 0 },\n+\n+{\"vaaddu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VAADDUVV, MASK_VAADDUVV, match_opcode, 0 },\n+{\"vaaddu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VAADDUVX, MASK_VAADDUVX, match_opcode, 0 },\n+{\"vaadd.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VAADDVV, MASK_VAADDVV, match_opcode, 0 },\n+{\"vaadd.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VAADDVX, MASK_VAADDVX, match_opcode, 0 },\n+{\"vasubu.vv\",  0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VASUBUVV, MASK_VASUBUVV, match_opcode, 0 },\n+{\"vasubu.vx\",  0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VASUBUVX, MASK_VASUBUVX, match_opcode, 0 },\n+{\"vasub.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VASUBVV, MASK_VASUBVV, match_opcode, 0 },\n+{\"vasub.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VASUBVX, MASK_VASUBVX, match_opcode, 0 },\n+\n+{\"vsmul.vv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSMULVV, MASK_VSMULVV, match_opcode, 0 },\n+{\"vsmul.vx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSMULVX, MASK_VSMULVX, match_opcode, 0 },\n+\n+{\"vssrl.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSSRLVV, MASK_VSSRLVV, match_opcode, 0 },\n+{\"vssrl.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSSRLVX, MASK_VSSRLVX, match_opcode, 0 },\n+{\"vssrl.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VSSRLVI, MASK_VSSRLVI, match_opcode, 0 },\n+{\"vssra.vv\",    0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VSSRAVV, MASK_VSSRAVV, match_opcode, 0 },\n+{\"vssra.vx\",    0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VSSRAVX, MASK_VSSRAVX, match_opcode, 0 },\n+{\"vssra.vi\",    0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VSSRAVI, MASK_VSSRAVI, match_opcode, 0 },\n+\n+{\"vnclipu.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VNCLIPUWV, MASK_VNCLIPUWV, match_opcode, 0 },\n+{\"vnclipu.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VNCLIPUWX, MASK_VNCLIPUWX, match_opcode, 0 },\n+{\"vnclipu.wi\",   0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VNCLIPUWI, MASK_VNCLIPUWI, match_opcode, 0 },\n+{\"vnclip.wv\",   0, INSN_CLASS_V,  \"Vd,Vt,VsVm\", MATCH_VNCLIPWV, MASK_VNCLIPWV, match_opcode, 0 },\n+{\"vnclip.wx\",   0, INSN_CLASS_V,  \"Vd,Vt,sVm\", MATCH_VNCLIPWX, MASK_VNCLIPWX, match_opcode, 0 },\n+{\"vnclip.wi\",   0, INSN_CLASS_V,  \"Vd,Vt,VjVm\", MATCH_VNCLIPWI, MASK_VNCLIPWI, match_opcode, 0 },\n+\n+{\"vfadd.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFADDVV, MASK_VFADDVV, match_opcode, 0},\n+{\"vfadd.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFADDVF, MASK_VFADDVF, match_opcode, 0},\n+{\"vfsub.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFSUBVV, MASK_VFSUBVV, match_opcode, 0},\n+{\"vfsub.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSUBVF, MASK_VFSUBVF, match_opcode, 0},\n+{\"vfrsub.vf\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFRSUBVF, MASK_VFRSUBVF, match_opcode, 0},\n+\n+{\"vfwadd.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWADDVV, MASK_VFWADDVV, match_opcode, 0},\n+{\"vfwadd.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFWADDVF, MASK_VFWADDVF, match_opcode, 0},\n+{\"vfwsub.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWSUBVV, MASK_VFWSUBVV, match_opcode, 0},\n+{\"vfwsub.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFWSUBVF, MASK_VFWSUBVF, match_opcode, 0},\n+{\"vfwadd.wv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWADDWV, MASK_VFWADDWV, match_opcode, 0},\n+{\"vfwadd.wf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFWADDWF, MASK_VFWADDWF, match_opcode, 0},\n+{\"vfwsub.wv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWSUBWV, MASK_VFWSUBWV, match_opcode, 0},\n+{\"vfwsub.wf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFWSUBWF, MASK_VFWSUBWF, match_opcode, 0},\n+\n+{\"vfmul.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFMULVV, MASK_VFMULVV, match_opcode, 0},\n+{\"vfmul.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFMULVF, MASK_VFMULVF, match_opcode, 0},\n+{\"vfdiv.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFDIVVV, MASK_VFDIVVV, match_opcode, 0},\n+{\"vfdiv.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFDIVVF, MASK_VFDIVVF, match_opcode, 0},\n+{\"vfrdiv.vf\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFRDIVVF, MASK_VFRDIVVF, match_opcode, 0},\n+\n+{\"vfwmul.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWMULVV, MASK_VFWMULVV, match_opcode, 0},\n+{\"vfwmul.vf\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFWMULVF, MASK_VFWMULVF, match_opcode, 0},\n+\n+{\"vfmadd.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFMADDVV, MASK_VFMADDVV, match_opcode, 0},\n+{\"vfmadd.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFMADDVF, MASK_VFMADDVF, match_opcode, 0},\n+{\"vfnmadd.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFNMADDVV, MASK_VFNMADDVV, match_opcode, 0},\n+{\"vfnmadd.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFNMADDVF, MASK_VFNMADDVF, match_opcode, 0},\n+{\"vfmsub.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFMSUBVV, MASK_VFMSUBVV, match_opcode, 0},\n+{\"vfmsub.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFMSUBVF, MASK_VFMSUBVF, match_opcode, 0},\n+{\"vfnmsub.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFNMSUBVV, MASK_VFNMSUBVV, match_opcode, 0},\n+{\"vfnmsub.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFNMSUBVF, MASK_VFNMSUBVF, match_opcode, 0},\n+{\"vfmacc.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFMACCVV, MASK_VFMACCVV, match_opcode, 0},\n+{\"vfmacc.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFMACCVF, MASK_VFMACCVF, match_opcode, 0},\n+{\"vfnmacc.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFNMACCVV, MASK_VFNMACCVV, match_opcode, 0},\n+{\"vfnmacc.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFNMACCVF, MASK_VFNMACCVF, match_opcode, 0},\n+{\"vfmsac.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFMSACVV, MASK_VFMSACVV, match_opcode, 0},\n+{\"vfmsac.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFMSACVF, MASK_VFMSACVF, match_opcode, 0},\n+{\"vfnmsac.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFNMSACVV, MASK_VFNMSACVV, match_opcode, 0},\n+{\"vfnmsac.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFNMSACVF, MASK_VFNMSACVF, match_opcode, 0},\n+\n+{\"vfwmacc.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFWMACCVV, MASK_VFWMACCVV, match_opcode, 0},\n+{\"vfwmacc.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFWMACCVF, MASK_VFWMACCVF, match_opcode, 0},\n+{\"vfwnmacc.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFWNMACCVV, MASK_VFWNMACCVV, match_opcode, 0},\n+{\"vfwnmacc.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFWNMACCVF, MASK_VFWNMACCVF, match_opcode, 0},\n+{\"vfwmsac.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFWMSACVV, MASK_VFWMSACVV, match_opcode, 0},\n+{\"vfwmsac.vf\",  0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFWMSACVF, MASK_VFWMSACVF, match_opcode, 0},\n+{\"vfwnmsac.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VFWNMSACVV, MASK_VFWNMSACVV, match_opcode, 0},\n+{\"vfwnmsac.vf\", 0, INSN_CLASS_ZVEF, \"Vd,S,VtVm\", MATCH_VFWNMSACVF, MASK_VFWNMSACVF, match_opcode, 0},\n+\n+{\"vfsqrt.v\",   0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFSQRTV, MASK_VFSQRTV, match_opcode, 0},\n+{\"vfrsqrt7.v\", 0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFRSQRT7V, MASK_VFRSQRT7V, match_opcode, 0},\n+{\"vfrsqrte7.v\",0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFRSQRT7V, MASK_VFRSQRT7V, match_opcode, 0},\n+{\"vfrec7.v\",   0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFREC7V, MASK_VFREC7V, match_opcode, 0},\n+{\"vfrece7.v\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFREC7V, MASK_VFREC7V, match_opcode, 0},\n+{\"vfclass.v\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCLASSV, MASK_VFCLASSV, match_opcode, 0},\n+\n+{\"vfmin.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFMINVV, MASK_VFMINVV, match_opcode, 0},\n+{\"vfmin.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFMINVF, MASK_VFMINVF, match_opcode, 0},\n+{\"vfmax.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFMAXVV, MASK_VFMAXVV, match_opcode, 0},\n+{\"vfmax.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFMAXVF, MASK_VFMAXVF, match_opcode, 0},\n+\n+{\"vfneg.v\",    0, INSN_CLASS_ZVEF, \"Vd,VuVm\", MATCH_VFSGNJNVV, MASK_VFSGNJNVV, match_vs1_eq_vs2, INSN_ALIAS },\n+{\"vfabs.v\",    0, INSN_CLASS_ZVEF, \"Vd,VuVm\", MATCH_VFSGNJXVV, MASK_VFSGNJXVV, match_vs1_eq_vs2, INSN_ALIAS },\n+\n+{\"vfsgnj.vv\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFSGNJVV, MASK_VFSGNJVV, match_opcode, 0},\n+{\"vfsgnj.vf\",  0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSGNJVF, MASK_VFSGNJVF, match_opcode, 0},\n+{\"vfsgnjn.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFSGNJNVV, MASK_VFSGNJNVV, match_opcode, 0},\n+{\"vfsgnjn.vf\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSGNJNVF, MASK_VFSGNJNVF, match_opcode, 0},\n+{\"vfsgnjx.vv\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFSGNJXVV, MASK_VFSGNJXVV, match_opcode, 0},\n+{\"vfsgnjx.vf\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSGNJXVF, MASK_VFSGNJXVF, match_opcode, 0},\n+\n+{\"vmfeq.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VMFEQVV, MASK_VMFEQVV, match_opcode, 0},\n+{\"vmfeq.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFEQVF, MASK_VMFEQVF, match_opcode, 0},\n+{\"vmfne.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VMFNEVV, MASK_VMFNEVV, match_opcode, 0},\n+{\"vmfne.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFNEVF, MASK_VMFNEVF, match_opcode, 0},\n+{\"vmflt.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VMFLTVV, MASK_VMFLTVV, match_opcode, 0},\n+{\"vmflt.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFLTVF, MASK_VMFLTVF, match_opcode, 0},\n+{\"vmfle.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VMFLEVV, MASK_VMFLEVV, match_opcode, 0},\n+{\"vmfle.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFLEVF, MASK_VMFLEVF, match_opcode, 0},\n+{\"vmfgt.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFGTVF, MASK_VMFGTVF, match_opcode, 0},\n+{\"vmfge.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VMFGEVF, MASK_VMFGEVF, match_opcode, 0},\n+\n+/* These aliases are for assembly but not disassembly.  */\n+{\"vmfgt.vv\",    0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VMFLTVV, MASK_VMFLTVV, match_opcode, INSN_ALIAS},\n+{\"vmfge.vv\",   0, INSN_CLASS_ZVEF, \"Vd,Vs,VtVm\", MATCH_VMFLEVV, MASK_VMFLEVV, match_opcode, INSN_ALIAS},\n+\n+{\"vfmerge.vfm\",0, INSN_CLASS_ZVEF, \"Vd,Vt,S,V0\", MATCH_VFMERGEVFM, MASK_VFMERGEVFM, match_opcode, 0},\n+{\"vfmv.v.f\",   0, INSN_CLASS_ZVEF, \"Vd,S\", MATCH_VFMVVF, MASK_VFMVVF, match_opcode, 0 },\n+\n+{\"vfcvt.xu.f.v\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTXUFV, MASK_VFCVTXUFV, match_opcode, 0},\n+{\"vfcvt.x.f.v\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTXFV, MASK_VFCVTXFV, match_opcode, 0},\n+{\"vfcvt.rtz.xu.f.v\", 0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTRTZXUFV, MASK_VFCVTRTZXUFV, match_opcode, 0},\n+{\"vfcvt.rtz.x.f.v\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTRTZXFV, MASK_VFCVTRTZXFV, match_opcode, 0},\n+{\"vfcvt.f.xu.v\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTFXUV, MASK_VFCVTFXUV, match_opcode, 0},\n+{\"vfcvt.f.x.v\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFCVTFXV, MASK_VFCVTFXV, match_opcode, 0},\n+\n+{\"vfwcvt.xu.f.v\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTXUFV, MASK_VFWCVTXUFV, match_opcode, 0},\n+{\"vfwcvt.x.f.v\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTXFV, MASK_VFWCVTXFV, match_opcode, 0},\n+{\"vfwcvt.rtz.xu.f.v\", 0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTRTZXUFV, MASK_VFWCVTRTZXUFV, match_opcode, 0},\n+{\"vfwcvt.rtz.x.f.v\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTRTZXFV, MASK_VFWCVTRTZXFV, match_opcode, 0},\n+{\"vfwcvt.f.xu.v\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTFXUV, MASK_VFWCVTFXUV, match_opcode, 0},\n+{\"vfwcvt.f.x.v\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTFXV, MASK_VFWCVTFXV, match_opcode, 0},\n+{\"vfwcvt.f.f.v\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFWCVTFFV, MASK_VFWCVTFFV, match_opcode, 0},\n+\n+{\"vfncvt.xu.f.w\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTXUFW, MASK_VFNCVTXUFW, match_opcode, 0},\n+{\"vfncvt.x.f.w\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTXFW, MASK_VFNCVTXFW, match_opcode, 0},\n+{\"vfncvt.rtz.xu.f.w\", 0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTRTZXUFW, MASK_VFNCVTRTZXUFW, match_opcode, 0},\n+{\"vfncvt.rtz.x.f.w\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTRTZXFW, MASK_VFNCVTRTZXFW, match_opcode, 0},\n+{\"vfncvt.f.xu.w\",     0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTFXUW, MASK_VFNCVTFXUW, match_opcode, 0},\n+{\"vfncvt.f.x.w\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTFXW, MASK_VFNCVTFXW, match_opcode, 0},\n+{\"vfncvt.f.f.w\",      0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTFFW, MASK_VFNCVTFFW, match_opcode, 0},\n+{\"vfncvt.rod.f.f.w\",  0, INSN_CLASS_ZVEF, \"Vd,VtVm\", MATCH_VFNCVTRODFFW, MASK_VFNCVTRODFFW, match_opcode, 0},\n+\n+{\"vredsum.vs\", 0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDSUMVS, MASK_VREDSUMVS, match_opcode, 0},\n+{\"vredmaxu.vs\",0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDMAXUVS, MASK_VREDMAXUVS, match_opcode, 0},\n+{\"vredmax.vs\", 0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDMAXVS, MASK_VREDMAXVS, match_opcode, 0},\n+{\"vredminu.vs\",0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDMINUVS, MASK_VREDMINUVS, match_opcode, 0},\n+{\"vredmin.vs\", 0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDMINVS, MASK_VREDMINVS, match_opcode, 0},\n+{\"vredand.vs\", 0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDANDVS, MASK_VREDANDVS, match_opcode, 0},\n+{\"vredor.vs\",  0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDORVS, MASK_VREDORVS, match_opcode, 0},\n+{\"vredxor.vs\", 0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VREDXORVS, MASK_VREDXORVS, match_opcode, 0},\n+\n+{\"vwredsumu.vs\",0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VWREDSUMUVS, MASK_VWREDSUMUVS, match_opcode, 0},\n+{\"vwredsum.vs\",0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VWREDSUMVS, MASK_VWREDSUMVS, match_opcode, 0},\n+\n+{\"vfredosum.vs\",0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFREDOSUMVS, MASK_VFREDOSUMVS, match_opcode, 0},\n+{\"vfredusum.vs\",0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFREDUSUMVS, MASK_VFREDUSUMVS, match_opcode, 0},\n+{\"vfredsum.vs\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFREDUSUMVS, MASK_VFREDUSUMVS, match_opcode, INSN_ALIAS},\n+{\"vfredmax.vs\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFREDMAXVS, MASK_VFREDMAXVS, match_opcode, 0},\n+{\"vfredmin.vs\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFREDMINVS, MASK_VFREDMINVS, match_opcode, 0},\n+\n+{\"vfwredosum.vs\",0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWREDOSUMVS, MASK_VFWREDOSUMVS, match_opcode, 0},\n+{\"vfwredusum.vs\",0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWREDUSUMVS, MASK_VFWREDUSUMVS, match_opcode, 0},\n+{\"vfwredsum.vs\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,VsVm\", MATCH_VFWREDUSUMVS, MASK_VFWREDUSUMVS, match_opcode, INSN_ALIAS},\n+\n+{\"vmmv.m\",     0, INSN_CLASS_V, \"Vd,Vu\", MATCH_VMANDMM, MASK_VMANDMM, match_vs1_eq_vs2, INSN_ALIAS},\n+{\"vmcpy.m\",    0, INSN_CLASS_V, \"Vd,Vu\", MATCH_VMANDMM, MASK_VMANDMM, match_vs1_eq_vs2, INSN_ALIAS},\n+{\"vmclr.m\",    0, INSN_CLASS_V, \"Vv\", MATCH_VMXORMM, MASK_VMXORMM, match_vd_eq_vs1_eq_vs2, INSN_ALIAS},\n+{\"vmset.m\",    0, INSN_CLASS_V, \"Vv\", MATCH_VMXNORMM, MASK_VMXNORMM, match_vd_eq_vs1_eq_vs2, INSN_ALIAS},\n+{\"vmnot.m\",    0, INSN_CLASS_V, \"Vd,Vu\", MATCH_VMNANDMM, MASK_VMNANDMM, match_vs1_eq_vs2, INSN_ALIAS},\n+\n+{\"vmand.mm\",   0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMANDMM, MASK_VMANDMM, match_opcode, 0},\n+{\"vmnand.mm\",  0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMNANDMM, MASK_VMNANDMM, match_opcode, 0},\n+{\"vmandn.mm\",  0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMANDNMM, MASK_VMANDNMM, match_opcode, 0},\n+{\"vmandnot.mm\",0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMANDNMM, MASK_VMANDNMM, match_opcode, INSN_ALIAS},\n+{\"vmxor.mm\",   0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMXORMM, MASK_VMXORMM, match_opcode, 0},\n+{\"vmor.mm\",    0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMORMM, MASK_VMORMM, match_opcode, 0},\n+{\"vmnor.mm\",   0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMNORMM, MASK_VMNORMM, match_opcode, 0},\n+{\"vmorn.mm\",   0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMORNMM, MASK_VMORNMM, match_opcode, 0},\n+{\"vmornot.mm\", 0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMORNMM, MASK_VMORNMM, match_opcode, INSN_ALIAS},\n+{\"vmxnor.mm\",  0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VMXNORMM, MASK_VMXNORMM, match_opcode, 0},\n+\n+{\"vcpop.m\",    0, INSN_CLASS_V, \"d,VtVm\", MATCH_VCPOPM, MASK_VCPOPM, match_opcode, 0},\n+{\"vpopc.m\",    0, INSN_CLASS_V, \"d,VtVm\", MATCH_VCPOPM, MASK_VCPOPM, match_opcode, INSN_ALIAS},\n+{\"vfirst.m\",   0, INSN_CLASS_V, \"d,VtVm\", MATCH_VFIRSTM, MASK_VFIRSTM, match_opcode, 0},\n+{\"vmsbf.m\",    0, INSN_CLASS_V, \"Vd,VtVm\", MATCH_VMSBFM, MASK_VMSBFM, match_opcode, 0},\n+{\"vmsif.m\",    0, INSN_CLASS_V, \"Vd,VtVm\", MATCH_VMSIFM, MASK_VMSIFM, match_opcode, 0},\n+{\"vmsof.m\",    0, INSN_CLASS_V, \"Vd,VtVm\", MATCH_VMSOFM, MASK_VMSOFM, match_opcode, 0},\n+{\"viota.m\",    0, INSN_CLASS_V, \"Vd,VtVm\", MATCH_VIOTAM, MASK_VIOTAM, match_opcode, 0},\n+{\"vid.v\",      0, INSN_CLASS_V, \"VdVm\", MATCH_VIDV, MASK_VIDV, match_opcode, 0},\n+\n+{\"vmv.x.s\",    0, INSN_CLASS_V, \"d,Vt\", MATCH_VMVXS, MASK_VMVXS, match_opcode, 0},\n+{\"vmv.s.x\",    0, INSN_CLASS_V, \"Vd,s\", MATCH_VMVSX, MASK_VMVSX, match_opcode, 0},\n+\n+{\"vfmv.f.s\",   0, INSN_CLASS_ZVEF, \"D,Vt\", MATCH_VFMVFS, MASK_VFMVFS, match_opcode, 0},\n+{\"vfmv.s.f\",   0, INSN_CLASS_ZVEF, \"Vd,S\", MATCH_VFMVSF, MASK_VFMVSF, match_opcode, 0},\n+\n+{\"vslideup.vx\",0, INSN_CLASS_V, \"Vd,Vt,sVm\", MATCH_VSLIDEUPVX, MASK_VSLIDEUPVX, match_opcode, 0},\n+{\"vslideup.vi\",0, INSN_CLASS_V, \"Vd,Vt,VjVm\", MATCH_VSLIDEUPVI, MASK_VSLIDEUPVI, match_opcode, 0},\n+{\"vslidedown.vx\",0,INSN_CLASS_V, \"Vd,Vt,sVm\", MATCH_VSLIDEDOWNVX, MASK_VSLIDEDOWNVX, match_opcode, 0},\n+{\"vslidedown.vi\",0,INSN_CLASS_V, \"Vd,Vt,VjVm\", MATCH_VSLIDEDOWNVI, MASK_VSLIDEDOWNVI, match_opcode, 0},\n+\n+{\"vslide1up.vx\",    0, INSN_CLASS_V, \"Vd,Vt,sVm\", MATCH_VSLIDE1UPVX, MASK_VSLIDE1UPVX, match_opcode, 0},\n+{\"vslide1down.vx\",  0, INSN_CLASS_V, \"Vd,Vt,sVm\", MATCH_VSLIDE1DOWNVX, MASK_VSLIDE1DOWNVX, match_opcode, 0},\n+{\"vfslide1up.vf\",   0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSLIDE1UPVF, MASK_VFSLIDE1UPVF, match_opcode, 0},\n+{\"vfslide1down.vf\", 0, INSN_CLASS_ZVEF, \"Vd,Vt,SVm\", MATCH_VFSLIDE1DOWNVF, MASK_VFSLIDE1DOWNVF, match_opcode, 0},\n+\n+{\"vrgather.vv\",    0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VRGATHERVV, MASK_VRGATHERVV, match_opcode, 0},\n+{\"vrgather.vx\",    0, INSN_CLASS_V, \"Vd,Vt,sVm\", MATCH_VRGATHERVX, MASK_VRGATHERVX, match_opcode, 0},\n+{\"vrgather.vi\",    0, INSN_CLASS_V, \"Vd,Vt,VjVm\", MATCH_VRGATHERVI, MASK_VRGATHERVI, match_opcode, 0},\n+{\"vrgatherei16.vv\",0, INSN_CLASS_V, \"Vd,Vt,VsVm\", MATCH_VRGATHEREI16VV, MASK_VRGATHEREI16VV, match_opcode, 0},\n+\n+{\"vcompress.vm\",0, INSN_CLASS_V, \"Vd,Vt,Vs\", MATCH_VCOMPRESSVM, MASK_VCOMPRESSVM, match_opcode, 0},\n+\n+{\"vmv1r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV1RV, MASK_VMV1RV, match_opcode, 0},\n+{\"vmv2r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV2RV, MASK_VMV2RV, match_opcode, 0},\n+{\"vmv4r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV4RV, MASK_VMV4RV, match_opcode, 0},\n+{\"vmv8r.v\",    0, INSN_CLASS_V, \"Vd,Vt\", MATCH_VMV8RV, MASK_VMV8RV, match_opcode, 0},\n+\n /* Terminate the list.  */\n {0, 0, INSN_CLASS_NONE, 0, 0, 0, 0, 0}\n };"
    }
  ]
}