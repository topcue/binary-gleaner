{
  "sha": "ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGRiY2VkZjVkZTEzOGJjODNkNWQxNjU1NGEzZjQ0MTYzZGNhZWY3YQ==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-06T16:50:52Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-06T16:50:52Z"
    },
    "message": "Replace int with enum block_enum where appropriate.\n\nFor better readability and type safety.\n\ngdb/ChangeLog:\n\n2019-08-06  Christian Biesinger  <cbiesinger@google.com>\n\n\t* symtab.c (symbol_cache_lookup): Change int to enum block_enum.\n\t(error_in_psymtab_expansion): Likewise.\n\t(lookup_symbol_via_quick_fns): Likewise.\n\t(basic_lookup_transparent_type_quick): Likewise.\n\t(basic_lookup_transparent_type_1): Likewise.",
    "tree": {
      "sha": "fcdd0f5c3a14641061fd5d9e3a23695d4aaf3bb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fcdd0f5c3a14641061fd5d9e3a23695d4aaf3bb1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ddbcedf5de138bc83d5d16554a3f44163dcaef7a/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b08b16c8391bbcd706a4aaa4b09509e7c2b8c676",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b08b16c8391bbcd706a4aaa4b09509e7c2b8c676",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b08b16c8391bbcd706a4aaa4b09509e7c2b8c676"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 17,
    "deletions": 6
  },
  "files": [
    {
      "sha": "4e6cc21bfeaaf037ae427e33dc181f45d15769ef",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ddbcedf5de138bc83d5d16554a3f44163dcaef7a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ddbcedf5de138bc83d5d16554a3f44163dcaef7a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-06  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* symtab.c (symbol_cache_lookup): Change int to enum block_enum.\n+\t(error_in_psymtab_expansion): Likewise.\n+\t(lookup_symbol_via_quick_fns): Likewise.\n+\t(basic_lookup_transparent_type_quick): Likewise.\n+\t(basic_lookup_transparent_type_1): Likewise.\n+\n 2019-08-06  Tom Tromey  <tromey@adacore.com>\n \n \t* source.c (last_source_error): Now bool."
    },
    {
      "sha": "347e58ccf3332f15116e78702c651d4a8c071b4f",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ddbcedf5de138bc83d5d16554a3f44163dcaef7a/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ddbcedf5de138bc83d5d16554a3f44163dcaef7a/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=ddbcedf5de138bc83d5d16554a3f44163dcaef7a",
      "patch": "@@ -1303,7 +1303,7 @@ set_symbol_cache_size_handler (const char *args, int from_tty,\n \n static struct block_symbol\n symbol_cache_lookup (struct symbol_cache *cache,\n-\t\t     struct objfile *objfile_context, int block,\n+\t\t     struct objfile *objfile_context, enum block_enum block,\n \t\t     const char *name, domain_enum domain,\n \t\t     struct block_symbol_cache **bsc_ptr,\n \t\t     struct symbol_cache_slot **slot_ptr)\n@@ -2338,7 +2338,7 @@ lookup_symbol_in_objfile_from_linkage_name (struct objfile *objfile,\n    in a psymtab but not in a symtab.  */\n \n static void ATTRIBUTE_NORETURN\n-error_in_psymtab_expansion (int block_index, const char *name,\n+error_in_psymtab_expansion (enum block_enum block_index, const char *name,\n \t\t\t    struct compunit_symtab *cust)\n {\n   error (_(\"\\\n@@ -2355,8 +2355,9 @@ Internal: %s symbol `%s' found in %s psymtab but not in symtab.\\n\\\n    the \"quick\" symbol table functions.  */\n \n static struct block_symbol\n-lookup_symbol_via_quick_fns (struct objfile *objfile, int block_index,\n-\t\t\t     const char *name, const domain_enum domain)\n+lookup_symbol_via_quick_fns (struct objfile *objfile,\n+\t\t\t     enum block_enum block_index, const char *name,\n+\t\t\t     const domain_enum domain)\n {\n   struct compunit_symtab *cust;\n   const struct blockvector *bv;\n@@ -2725,7 +2726,8 @@ lookup_transparent_type (const char *name)\n    \"quick\" symbol table functions.  */\n \n static struct type *\n-basic_lookup_transparent_type_quick (struct objfile *objfile, int block_index,\n+basic_lookup_transparent_type_quick (struct objfile *objfile,\n+\t\t\t\t     enum block_enum block_index,\n \t\t\t\t     const char *name)\n {\n   struct compunit_symtab *cust;\n@@ -2755,7 +2757,8 @@ basic_lookup_transparent_type_quick (struct objfile *objfile, int block_index,\n    BLOCK_INDEX is either GLOBAL_BLOCK or STATIC_BLOCK.  */\n \n static struct type *\n-basic_lookup_transparent_type_1 (struct objfile *objfile, int block_index,\n+basic_lookup_transparent_type_1 (struct objfile *objfile,\n+\t\t\t\t enum block_enum block_index,\n \t\t\t\t const char *name)\n {\n   const struct blockvector *bv;"
    }
  ]
}