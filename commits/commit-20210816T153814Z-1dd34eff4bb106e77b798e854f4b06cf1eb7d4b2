{
  "sha": "1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWRkMzRlZmY0YmIxMDZlNzdiNzk4ZTg1NGY0YjA2Y2YxZWI3ZDRiMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-08-11T14:17:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-08-16T15:38:14Z"
    },
    "message": "Fix Ada regression due to DWARF expression series\n\nCommit 0579205aec4 (\"Simplify dwarf_expr_context class interface\")\ncaused a regression in the internal AdaCore test suite.  I didn't try\nto reproduce this with the GDB test suite, but the test is identical\nto gdb.dwarf2/dynarr-ptr.exp.\n\nThe problem is that this change:\n\n \tcase DW_OP_push_object_address:\n \t  /* Return the address of the object we are currently observing.  */\n-\t  if (this->data_view.data () == nullptr\n-\t      && this->obj_address == 0)\n+\t  if (this->m_addr_info == nullptr)\n\n... slightly changes the logic here.  In particular, it's possible for\nthe caller to pass in a non-NULL m_addr_info, but one that looks like:\n\n    (top) p *this.m_addr_info\n    $15 = {\n      type = 0x29b7a70,\n      valaddr = {\n\tm_array = 0x0,\n\tm_size = 0\n      },\n      addr = 0,\n      next = 0x0\n    }\n\nIn this case, an additional check is needed.  With the current code,\nwhat happens instead is that the computation computes an incorrect\naddress -- but one that does not fail in read_memory, due to the\nprecise memory map of the embedded target in question.\n\nThis patch restores the old logic.",
    "tree": {
      "sha": "04fe97e5a5c75d87e828a406ccee5ea1a0a44772",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04fe97e5a5c75d87e828a406ccee5ea1a0a44772"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bd7ccaa983158e789e305f4baae245ee4975516f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd7ccaa983158e789e305f4baae245ee4975516f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bd7ccaa983158e789e305f4baae245ee4975516f"
    }
  ],
  "stats": {
    "total": 4,
    "additions": 3,
    "deletions": 1
  },
  "files": [
    {
      "sha": "85088e9a07ac44bb94db887cf0f33541f525176b",
      "filename": "gdb/dwarf2/expr.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2/gdb/dwarf2/expr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2/gdb/dwarf2/expr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.c?ref=1dd34eff4bb106e77b798e854f4b06cf1eb7d4b2",
      "patch": "@@ -2338,7 +2338,9 @@ dwarf_expr_context::execute_stack_op (const gdb_byte *op_ptr,\n \n \tcase DW_OP_push_object_address:\n \t  /* Return the address of the object we are currently observing.  */\n-\t  if (this->m_addr_info == nullptr)\n+\t  if (this->m_addr_info == nullptr\n+\t      || (this->m_addr_info->valaddr.data () == nullptr\n+\t\t  && this->m_addr_info->addr == 0))\n \t    error (_(\"Location address is not set.\"));\n \n \t  result_val"
    }
  ]
}