{
  "sha": "7cb22ff84745da0856bf74578b9bd7dff4379ed5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NiMjJmZjg0NzQ1ZGEwODU2YmY3NDU3OGI5YmQ3ZGZmNDM3OWVkNQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-26T17:19:53Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-04-26T17:19:53Z"
    },
    "message": "i386: Don't add 0x66 prefix to IRET for .code16gcc\n\nThe .code16gcc directive supports 16bit mode with 32-bit address.  Since\nIRET (opcode 0xcf) in 16bit mode returns from an interrupt in 16bit mode,\nwe shouldn't add 0x66 prefix for IRET.\n\n\tPR gas/24485\n\t* config/tc-i386.c (process_suffix): Don't add DATA_PREFIX_OPCODE\n\tto IRET for .code16gcc.\n\t* testsuite/gas/i386/jump16.s: Add IRET tests.\n\t* testsuite/gas/i386/jump16.d: Updated.",
    "tree": {
      "sha": "dfabab348a1df3900215b53045792e1a7f827cd0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dfabab348a1df3900215b53045792e1a7f827cd0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7cb22ff84745da0856bf74578b9bd7dff4379ed5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cb22ff84745da0856bf74578b9bd7dff4379ed5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7cb22ff84745da0856bf74578b9bd7dff4379ed5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cb22ff84745da0856bf74578b9bd7dff4379ed5/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c54f15248ee990df6cea0b4730cd61b227a0e082",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c54f15248ee990df6cea0b4730cd61b227a0e082",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c54f15248ee990df6cea0b4730cd61b227a0e082"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 22,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c94ffdda0b32ccb456d3710c4d90ad1360e3a533",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7cb22ff84745da0856bf74578b9bd7dff4379ed5",
      "patch": "@@ -1,3 +1,11 @@\n+2019-04-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/24485\n+\t* config/tc-i386.c (process_suffix): Don't add DATA_PREFIX_OPCODE\n+\tto IRET for .code16gcc.\n+\t* testsuite/gas/i386/jump16.s: Add IRET tests.\n+\t* testsuite/gas/i386/jump16.d: Updated.\n+\n 2019-04-25  Alexandre Oliva  <aoliva@redhat.com>\n \t    Alan Modra  <amodra@gmail.com>\n "
    },
    {
      "sha": "032b1d308115d3f8a95b0d1f8ba169011292a8e3",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=7cb22ff84745da0856bf74578b9bd7dff4379ed5",
      "patch": "@@ -6352,7 +6352,13 @@ process_suffix (void)\n \t    if (!add_prefix (ADDR_PREFIX_OPCODE))\n \t      return 0;\n \t}\n+      /* stackop_size is set to LONG_MNEM_SUFFIX for the .code16gcc\n+\t directive to support 16bit mode with 32-bit address.  Since\n+\t IRET (opcode 0xcf) in 16bit mode returns from an interrupt\n+\t in 16bit mode, we shouldn't add DATA_PREFIX_OPCODE here.  */\n       else if (i.suffix != QWORD_MNEM_SUFFIX\n+\t       && (stackop_size != LONG_MNEM_SUFFIX\n+\t\t   || i.tm.base_opcode != 0xcf)\n \t       && !i.tm.opcode_modifier.ignoresize\n \t       && !i.tm.opcode_modifier.floatmf\n \t       && !i.tm.opcode_modifier.vex"
    },
    {
      "sha": "7a1dc7661ee332cde5c8773cc9bb933bcedd7b87",
      "filename": "gas/testsuite/gas/i386/jump16.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/testsuite/gas/i386/jump16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/testsuite/gas/i386/jump16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/jump16.d?ref=7cb22ff84745da0856bf74578b9bd7dff4379ed5",
      "patch": "@@ -67,4 +67,6 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\tea 10 10 90 90       \tljmp   \\$0x9090,\\$0x1010\n [ \t]*[a-f0-9]+:\tea 00 00 90 90       \tljmp   \\$0x9090,\\$0x0\ted: (R_386_)?16\txxx\n [ \t]*[a-f0-9]+:\tea 00 00 90 90       \tljmp   \\$0x9090,\\$0x0\tf2: (R_386_)?16\txxx\n+[ \t]*[a-f0-9]+:\tcf                   \tiret   \n+[ \t]*[a-f0-9]+:\tcf                   \tiret   \n #pass"
    },
    {
      "sha": "aff5665720179579984c3a33efa35ee3eb85f4f7",
      "filename": "gas/testsuite/gas/i386/jump16.s",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/testsuite/gas/i386/jump16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cb22ff84745da0856bf74578b9bd7dff4379ed5/gas/testsuite/gas/i386/jump16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/jump16.s?ref=7cb22ff84745da0856bf74578b9bd7dff4379ed5",
      "patch": "@@ -71,3 +71,9 @@\n \tjmp\t0x9090:0x1010\n \tjmp\t0x9090,xxx\n \tjmp\t0x9090:xxx\n+\n+.code16gcc\n+\tiret\n+\n+.code16\n+\tiret"
    }
  ]
}