{
  "sha": "f63d03dde00449e71e32fea3496edc69d2e7d386",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjYzZDAzZGRlMDA0NDllNzFlMzJmZWEzNDk2ZWRjNjlkMmU3ZDM4Ng==",
  "commit": {
    "author": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-08-03T00:23:44Z"
    },
    "committer": {
      "name": "Mark Wielaard",
      "email": "mark@klomp.org",
      "date": "2020-08-04T09:28:39Z"
    },
    "message": "gas: Make sure .debug_line file table contains a zero filename and dir\n\nFor DWARF5 the zero file list entry in the .debug_line table represents\nthe compile unit main file. It can be set with .file 0 when -gdwarf-5\nis given. But since this directive is illegal for older versions, this\nis almost never set. To make sure it is always set (so DW_AT_name of\nthe compile unit can be set) use file (and dir) 1 if that is defined\n(otherwise fall back to pwd, to match DW_AT_comp_dir).\n\ngas/ChangeLog:\n\n\t* gas/dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at\n\tleast one directory if there is at least one file. Use dirs[1]\n\tif dirs[0] is not set, or if there is no dirs[1] the current\n\tworking directory. Use files[1] filename, when files[0] filename\n\tisn't set.",
    "tree": {
      "sha": "1516ae8f73a08bf76e0d9f5b9458db54e44fca20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1516ae8f73a08bf76e0d9f5b9458db54e44fca20"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f63d03dde00449e71e32fea3496edc69d2e7d386",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f63d03dde00449e71e32fea3496edc69d2e7d386",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f63d03dde00449e71e32fea3496edc69d2e7d386",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f63d03dde00449e71e32fea3496edc69d2e7d386/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a3b3e8586d80204660e203d05edfe88418c394a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a3b3e8586d80204660e203d05edfe88418c394a2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a3b3e8586d80204660e203d05edfe88418c394a2"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 34,
    "deletions": 9
  },
  "files": [
    {
      "sha": "8895c0c0c7fbc22f13e516427631ebb2b25751c8",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f63d03dde00449e71e32fea3496edc69d2e7d386/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f63d03dde00449e71e32fea3496edc69d2e7d386/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f63d03dde00449e71e32fea3496edc69d2e7d386",
      "patch": "@@ -1,3 +1,11 @@\n+2020-08-02  Mark Wielaard  <mark@klomp.org>\n+\n+\t* gas/dwarf2dbg.c (out_dir_and_file_list): For DWARF5 emit at\n+\tleast one directory if there is at least one file. Use dirs[1]\n+\tif dirs[0] is not set, or if there is no dirs[1] the current\n+\tworking directory. Use files[1] filename, when files[0] filename\n+\tisn't set.\n+\n 2020-08-02  Mark Wielaard  <mark@klomp.org>\n \n \t* dwarf2dbg.c (out_debug_info): Emit unit type and abbrev offset"
    },
    {
      "sha": "7877c563887246dcc0a7329ff5b8e27d66a927ca",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 26,
      "deletions": 9,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f63d03dde00449e71e32fea3496edc69d2e7d386/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f63d03dde00449e71e32fea3496edc69d2e7d386/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=f63d03dde00449e71e32fea3496edc69d2e7d386",
      "patch": "@@ -1992,18 +1992,29 @@ out_dir_and_file_list (void)\n \t the .debug_line_str section and reference them here.  */\n       out_uleb128 (DW_FORM_string);\n \n-      /* Now state how many rows there are in the table.  */\n-      out_uleb128 (dirs_in_use);\n+      /* Now state how many rows there are in the table.  We need at\n+\t least 1 if there is one or more file names to store the\n+\t \"working directory\".  */\n+      if (dirs_in_use == 0 && files_in_use > 0)\n+\tout_uleb128 (1);\n+      else\n+\tout_uleb128 (dirs_in_use);\n     }\n       \n   /* Emit directory list.  */\n-  if (DWARF2_LINE_VERSION >= 5 && dirs_in_use > 0)\n+  if (DWARF2_LINE_VERSION >= 5 && (dirs_in_use > 0 || files_in_use > 0))\n     {\n-      if (dirs == NULL || dirs[0] == NULL)\n-\tdir = remap_debug_filename (\".\");\n-      else\n+      /* DWARF5 uses slot zero, but that is only set explicitly\n+\t using a .file 0 directive.  If that isn't used, but dir\n+\t one is used, then use that as main file directory.\n+\t Otherwise use pwd as main file directory.  */\n+      if (dirs_in_use > 0 && dirs != NULL && dirs[0] != NULL)\n \tdir = remap_debug_filename (dirs[0]);\n-\t\n+      else if (dirs_in_use > 1 && dirs != NULL && dirs[1] != NULL)\n+\tdir = remap_debug_filename (dirs[1]);\n+      else\n+\tdir = remap_debug_filename (getpwd ());\n+\n       size = strlen (dir) + 1;\n       cp = frag_more (size);\n       memcpy (cp, dir, size);\n@@ -2089,8 +2100,14 @@ out_dir_and_file_list (void)\n \n       if (files[i].filename == NULL)\n \t{\n-\t  /* Prevent a crash later, particularly for file 1.  */\n-\t  files[i].filename = \"\";\n+\t  /* Prevent a crash later, particularly for file 1.  DWARF5\n+\t     uses slot zero, but that is only set explicitly using a\n+\t     .file 0 directive.  If that isn't used, but file 1 is,\n+\t     then use that as main file name.  */\n+\t  if (DWARF2_LINE_VERSION >= 5 && i == 0 && files_in_use >= 1)\n+\t      files[0].filename = files[1].filename;\n+\t  else\n+\t    files[i].filename = \"\";\n \t  if (DWARF2_LINE_VERSION < 5 || i != 0)\n \t    {\n \t      as_bad (_(\"unassigned file number %ld\"), (long) i);"
    }
  ]
}