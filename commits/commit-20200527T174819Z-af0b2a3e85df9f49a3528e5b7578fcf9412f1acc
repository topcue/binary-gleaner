{
  "sha": "af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWYwYjJhM2U4NWRmOWY0OWEzNTI4ZTViNzU3OGZjZjk0MTJmMWFjYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-27T17:48:19Z"
    },
    "message": "Inline abbrev lookup\n\nProfiling showed that calls to abbrev_table::lookup_abbrev were \"too\nvisible\".  As these are just forwarding calls to the hash table, this\npatch inlines the lookup.  Also, htab_find_with_hash is used, avoiding\nanother call.\n\nThe run previous to this had times of (see the first patch in the\nseries for an explanation):\n\ngdb    1.69\nlibxul 2.02\nAda    2.52\n\nThis patch improves the times to:\n\ngdb    1.64\nlibxul 1.99\nAda    2.47\n\ngdb/ChangeLog\n2020-05-27  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/abbrev.h (struct abbrev_table) <lookup_abbrev>: Inline.\n\tUse htab_find_with_hash.\n\t<add_abbrev>: Remove \"abbrev_number\" parameter.\n\t* dwarf2/abbrev.c (abbrev_table::add_abbrev): Remove\n\t\"abbrev_number\" parameter.  Use htab_find_slot_with_hash.\n\t(hash_abbrev): Add comment.\n\t(abbrev_table::lookup_abbrev): Move to header file.\n\t(abbrev_table::read): Update.",
    "tree": {
      "sha": "3bc4c4569634256e074e7260e4dd13e97723e98b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3bc4c4569634256e074e7260e4dd13e97723e98b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7d00ffecd2b16608f0bcfbc0402fec2cc228a3e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7d00ffecd2b16608f0bcfbc0402fec2cc228a3e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7d00ffecd2b16608f0bcfbc0402fec2cc228a3e7"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 28,
    "deletions": 18
  },
  "files": [
    {
      "sha": "2548ccdbf633e5b57f0de6ea72ef948fdee593da",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
      "patch": "@@ -1,3 +1,14 @@\n+2020-05-27  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/abbrev.h (struct abbrev_table) <lookup_abbrev>: Inline.\n+\tUse htab_find_with_hash.\n+\t<add_abbrev>: Remove \"abbrev_number\" parameter.\n+\t* dwarf2/abbrev.c (abbrev_table::add_abbrev): Remove\n+\t\"abbrev_number\" parameter.  Use htab_find_slot_with_hash.\n+\t(hash_abbrev): Add comment.\n+\t(abbrev_table::lookup_abbrev): Move to header file.\n+\t(abbrev_table::read): Update.\n+\n 2020-05-27  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (struct partial_die_info) <name>: Declare new"
    },
    {
      "sha": "1552594efb5cd5a3e524141f5349ec3b88ce446b",
      "filename": "gdb/dwarf2/abbrev.c",
      "status": "modified",
      "additions": 6,
      "deletions": 16,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/dwarf2/abbrev.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/dwarf2/abbrev.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/abbrev.c?ref=af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
      "patch": "@@ -36,6 +36,8 @@ static hashval_t\n hash_abbrev (const void *item)\n {\n   const struct abbrev_info *info = (const struct abbrev_info *) item;\n+  /* Warning: if you change this next line, you must also update the\n+     other code in this class using the _with_hash functions.  */\n   return info->number;\n }\n \n@@ -79,25 +81,13 @@ abbrev_table::alloc_abbrev ()\n /* Add an abbreviation to the table.  */\n \n void\n-abbrev_table::add_abbrev (unsigned int abbrev_number,\n-\t\t\t  struct abbrev_info *abbrev)\n+abbrev_table::add_abbrev (struct abbrev_info *abbrev)\n {\n-  void **slot = htab_find_slot (m_abbrevs.get (), abbrev, INSERT);\n+  void **slot = htab_find_slot_with_hash (m_abbrevs.get (), abbrev,\n+\t\t\t\t\t  abbrev->number, INSERT);\n   *slot = abbrev;\n }\n \n-/* Look up an abbrev in the table.\n-   Returns NULL if the abbrev is not found.  */\n-\n-struct abbrev_info *\n-abbrev_table::lookup_abbrev (unsigned int abbrev_number)\n-{\n-  struct abbrev_info search;\n-  search.number = abbrev_number;\n-\n-  return (struct abbrev_info *) htab_find (m_abbrevs.get (), &search);\n-}\n-\n /* Read in an abbrev table.  */\n \n abbrev_table_up\n@@ -172,7 +162,7 @@ abbrev_table::read (struct objfile *objfile,\n \tmemcpy (cur_abbrev->attrs, cur_attrs.data (),\n \t\tcur_abbrev->num_attrs * sizeof (struct attr_abbrev));\n \n-      abbrev_table->add_abbrev (abbrev_number, cur_abbrev);\n+      abbrev_table->add_abbrev (cur_abbrev);\n \n       /* Get next abbreviation.\n          Under Irix6 the abbreviations for a compilation unit are not"
    },
    {
      "sha": "888f04ebebbbad6f27f1cf60474904b18959edf8",
      "filename": "gdb/dwarf2/abbrev.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/dwarf2/abbrev.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/af0b2a3e85df9f49a3528e5b7578fcf9412f1acc/gdb/dwarf2/abbrev.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/abbrev.h?ref=af0b2a3e85df9f49a3528e5b7578fcf9412f1acc",
      "patch": "@@ -27,6 +27,8 @@\n #ifndef GDB_DWARF2_ABBREV_H\n #define GDB_DWARF2_ABBREV_H\n \n+#include \"hashtab.h\"\n+\n /* This data structure holds the information of an abbrev.  */\n struct abbrev_info\n   {\n@@ -60,8 +62,15 @@ struct abbrev_table\n   /* Look up an abbrev in the table.\n      Returns NULL if the abbrev is not found.  */\n \n-  struct abbrev_info *lookup_abbrev (unsigned int abbrev_number);\n+  struct abbrev_info *lookup_abbrev (unsigned int abbrev_number)\n+  {\n+    struct abbrev_info search;\n+    search.number = abbrev_number;\n \n+    return (struct abbrev_info *) htab_find_with_hash (m_abbrevs.get (),\n+\t\t\t\t\t\t       &search,\n+\t\t\t\t\t\t       abbrev_number);\n+  }\n \n   /* Where the abbrev table came from.\n      This is used as a sanity check when the table is used.  */\n@@ -78,7 +87,7 @@ struct abbrev_table\n   struct abbrev_info *alloc_abbrev ();\n \n   /* Add an abbreviation to the table.  */\n-  void add_abbrev (unsigned int abbrev_number, struct abbrev_info *abbrev);\n+  void add_abbrev (struct abbrev_info *abbrev);\n \n   /* Hash table of abbrevs.  */\n   htab_up m_abbrevs;"
    }
  ]
}