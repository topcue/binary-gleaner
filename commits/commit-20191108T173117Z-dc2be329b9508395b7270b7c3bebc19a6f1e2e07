{
  "sha": "dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGMyYmUzMjliOTUwODM5NWI3MjcwYjdjM2JlYmMxOWE2ZjFlMmUwNw==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-11-08T17:31:06Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-11-08T17:31:17Z"
    },
    "message": "i386: Only check suffix in instruction mnemonic\n\nWe should check suffix in instruction mnemonic when matching instruction.\nIn Intel syntax, normally we check for memory operand size.  But the same\nmnemonic with 2 different encodings can have the same memory operand\nsize and i.suffix is set to LONG_DOUBLE_MNEM_SUFFIX from memory operand\nsize in Intel syntax to distinguish them.  When there is no suffix in\nmnemonic, we check LONG_DOUBLE_MNEM_SUFFIX in i.suffix for mnemonic\nsuffix.\n\ngas/\n\n\tPR gas/25167\n\t* config/tc-i386.c (match_template): Don't check instruction\n\tsuffix set from operand.\n\t* testsuite/gas/i386/code16.d: New file.\n\t* testsuite/gas/i386/code16.s: Likewise.\n\t* testsuite/gas/i386/i386.exp: Run code16.\n\t* testsuite/gas/i386/x86-64-branch-4.l: Updated.\n\nopcodes/\n\n\tPR gas/25167\n\t* i386-opc.tbl: Remove IgnoreSize from cmpsd and movsd.\n\t* i386-tbl.h: Regenerated.",
    "tree": {
      "sha": "04840e8c94ba97be2d64220119e2a70cb77f9c39",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04840e8c94ba97be2d64220119e2a70cb77f9c39"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "992a70401ec229425ee75b2ad9b731f30d2de391",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/992a70401ec229425ee75b2ad9b731f30d2de391",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/992a70401ec229425ee75b2ad9b731f30d2de391"
    }
  ],
  "stats": {
    "total": 127,
    "additions": 79,
    "deletions": 48
  },
  "files": [
    {
      "sha": "29cf763df599679aaa316c65b5e4ea4fa3f533a2",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -1,3 +1,12 @@\n+2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25167\n+\t* config/tc-i386.c (match_template): Don't check instruction\n+\tsuffix set from operand.\n+\t* testsuite/gas/i386/code16.d: New file.\n+\t* testsuite/gas/i386/code16.s: Likewise.\n+\t* testsuite/gas/i386/i386.exp: Run code16.\n+\n 2019-11-08  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (optimize_encoding, build_modrm_byte,"
    },
    {
      "sha": "abbb93a1c16d2552bd5cd8cca7372db4fc7de7fb",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 33,
      "deletions": 42,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -5693,7 +5693,7 @@ match_template (char mnem_suffix)\n   i386_operand_type overlap0, overlap1, overlap2, overlap3;\n   i386_operand_type overlap4;\n   unsigned int found_reverse_match;\n-  i386_opcode_modifier suffix_check, mnemsuf_check;\n+  i386_opcode_modifier suffix_check;\n   i386_operand_type operand_types [MAX_OPERANDS];\n   int addr_prefix_disp;\n   unsigned int j;\n@@ -5708,33 +5708,33 @@ match_template (char mnem_suffix)\n   found_reverse_match = 0;\n   addr_prefix_disp = -1;\n \n+  /* Prepare for mnemonic suffix check.  */\n   memset (&suffix_check, 0, sizeof (suffix_check));\n-  if (intel_syntax && i.broadcast)\n-    /* nothing */;\n-  else if (i.suffix == BYTE_MNEM_SUFFIX)\n-    suffix_check.no_bsuf = 1;\n-  else if (i.suffix == WORD_MNEM_SUFFIX)\n-    suffix_check.no_wsuf = 1;\n-  else if (i.suffix == SHORT_MNEM_SUFFIX)\n-    suffix_check.no_ssuf = 1;\n-  else if (i.suffix == LONG_MNEM_SUFFIX)\n-    suffix_check.no_lsuf = 1;\n-  else if (i.suffix == QWORD_MNEM_SUFFIX)\n-    suffix_check.no_qsuf = 1;\n-  else if (i.suffix == LONG_DOUBLE_MNEM_SUFFIX)\n-    suffix_check.no_ldsuf = 1;\n-\n-  memset (&mnemsuf_check, 0, sizeof (mnemsuf_check));\n-  if (intel_syntax)\n+  switch (mnem_suffix)\n     {\n-      switch (mnem_suffix)\n-\t{\n-\tcase BYTE_MNEM_SUFFIX:  mnemsuf_check.no_bsuf = 1; break;\n-\tcase WORD_MNEM_SUFFIX:  mnemsuf_check.no_wsuf = 1; break;\n-\tcase SHORT_MNEM_SUFFIX: mnemsuf_check.no_ssuf = 1; break;\n-\tcase LONG_MNEM_SUFFIX:  mnemsuf_check.no_lsuf = 1; break;\n-\tcase QWORD_MNEM_SUFFIX: mnemsuf_check.no_qsuf = 1; break;\n-\t}\n+    case BYTE_MNEM_SUFFIX:\n+      suffix_check.no_bsuf = 1;\n+      break;\n+    case WORD_MNEM_SUFFIX:\n+      suffix_check.no_wsuf = 1;\n+      break;\n+    case SHORT_MNEM_SUFFIX:\n+      suffix_check.no_ssuf = 1;\n+      break;\n+    case LONG_MNEM_SUFFIX:\n+      suffix_check.no_lsuf = 1;\n+      break;\n+    case QWORD_MNEM_SUFFIX:\n+      suffix_check.no_qsuf = 1;\n+      break;\n+    default:\n+      /* NB: In Intel syntax, normally we can check for memory operand\n+\t size when there is no mnemonic suffix.  But jmp and call have\n+\t 2 different encodings with Dword memory operand size, one with\n+\t No_ldSuf and the other without.  i.suffix is set to\n+\t LONG_DOUBLE_MNEM_SUFFIX to skip the one with No_ldSuf.  */\n+      if (i.suffix == LONG_DOUBLE_MNEM_SUFFIX)\n+\tsuffix_check.no_ldsuf = 1;\n     }\n \n   /* Must have right number of operands.  */\n@@ -5768,23 +5768,14 @@ match_template (char mnem_suffix)\n \t  || (!intel64 && t->opcode_modifier.intel64))\n \tcontinue;\n \n-      /* Check the suffix, except for some instructions in intel mode.  */\n+      /* Check the suffix.  */\n       i.error = invalid_instruction_suffix;\n-      if ((!intel_syntax || !t->opcode_modifier.ignoresize)\n-\t  && ((t->opcode_modifier.no_bsuf && suffix_check.no_bsuf)\n-\t      || (t->opcode_modifier.no_wsuf && suffix_check.no_wsuf)\n-\t      || (t->opcode_modifier.no_lsuf && suffix_check.no_lsuf)\n-\t      || (t->opcode_modifier.no_ssuf && suffix_check.no_ssuf)\n-\t      || (t->opcode_modifier.no_qsuf && suffix_check.no_qsuf)\n-\t      || (t->opcode_modifier.no_ldsuf && suffix_check.no_ldsuf)))\n-\tcontinue;\n-      /* In Intel mode all mnemonic suffixes must be explicitly allowed.  */\n-      if ((t->opcode_modifier.no_bsuf && mnemsuf_check.no_bsuf)\n-\t  || (t->opcode_modifier.no_wsuf && mnemsuf_check.no_wsuf)\n-\t  || (t->opcode_modifier.no_lsuf && mnemsuf_check.no_lsuf)\n-\t  || (t->opcode_modifier.no_ssuf && mnemsuf_check.no_ssuf)\n-\t  || (t->opcode_modifier.no_qsuf && mnemsuf_check.no_qsuf)\n-\t  || (t->opcode_modifier.no_ldsuf && mnemsuf_check.no_ldsuf))\n+      if ((t->opcode_modifier.no_bsuf && suffix_check.no_bsuf)\n+\t  || (t->opcode_modifier.no_wsuf && suffix_check.no_wsuf)\n+\t  || (t->opcode_modifier.no_lsuf && suffix_check.no_lsuf)\n+\t  || (t->opcode_modifier.no_ssuf && suffix_check.no_ssuf)\n+\t  || (t->opcode_modifier.no_qsuf && suffix_check.no_qsuf)\n+\t  || (t->opcode_modifier.no_ldsuf && suffix_check.no_ldsuf))\n \tcontinue;\n \n       size_match = operand_size_match (t);"
    },
    {
      "sha": "b860448d6c292e0c0e3309a698bbad5994d80ca5",
      "filename": "gas/testsuite/gas/i386/code16.d",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/code16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/code16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/code16.d?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -0,0 +1,15 @@\n+#objdump: -drw -mi8086\n+#name: i386 with .code16\n+\n+.*: +file format .*\n+\n+Disassembly of section .text:\n+\n+0+ <.text>:\n+ +[a-f0-9]+:\tf3 66 a5             \trep movsl %ds:\\(%si\\),%es:\\(%di\\)\n+ +[a-f0-9]+:\tf3 66 a7             \trepz cmpsl %es:\\(%di\\),%ds:\\(%si\\)\n+ +[a-f0-9]+:\t66 f3 a5             \trep movsl %ds:\\(%si\\),%es:\\(%di\\)\n+ +[a-f0-9]+:\t66 f3 a7             \trepz cmpsl %es:\\(%di\\),%ds:\\(%si\\)\n+ +[a-f0-9]+:\t66 f3 a5             \trep movsl %ds:\\(%si\\),%es:\\(%di\\)\n+ +[a-f0-9]+:\t66 f3 a7             \trepz cmpsl %es:\\(%di\\),%ds:\\(%si\\)\n+#pass"
    },
    {
      "sha": "d18fa5179a70fa3d7db4ae3620a5a5a42ef318fa",
      "filename": "gas/testsuite/gas/i386/code16.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/code16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/code16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/code16.s?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -0,0 +1,9 @@\n+\t.text\n+\t.code16\n+\trep; movsd\n+\trep; cmpsd\n+\trep movsd %ds:(%si),%es:(%di)\n+\trep cmpsd %es:(%di),%ds:(%si)\n+\t.intel_syntax noprefix\n+\trep movsd dword ptr es:[di], dword ptr ds:[si]\n+\trep cmpsd dword ptr ds:[si], dword ptr es:[di]"
    },
    {
      "sha": "4e7f8b982d65b2d15cc72972d26f7cb14627d984",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -132,6 +132,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n     run_dump_test \"noreg32\"\n     run_dump_test \"addr16\"\n     run_dump_test \"addr32\"\n+    run_dump_test \"code16\"\n     run_list_test \"oversized16\" \"-al\"\n     run_dump_test \"sse4_1\"\n     run_dump_test \"sse4_1-intel\""
    },
    {
      "sha": "8f681f86d5c797e061df2d46a269c53109d29ca7",
      "filename": "gas/testsuite/gas/i386/x86-64-branch-4.l",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/x86-64-branch-4.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/gas/testsuite/gas/i386/x86-64-branch-4.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-branch-4.l?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -7,11 +7,11 @@\n .*:9: Error: operand type mismatch for `call'\n .*:10: Error: invalid instruction suffix for `call'\n .*:11: Error: invalid instruction suffix for `call'\n-.*:12: Error: invalid instruction suffix for `call'\n+.*:12: Error: operand size mismatch for `call'\n .*:13: Error: operand type mismatch for `jmp'\n .*:14: Error: invalid instruction suffix for `jmp'\n .*:15: Error: invalid instruction suffix for `jmp'\n-.*:16: Error: invalid instruction suffix for `jmp'\n+.*:16: Error: operand size mismatch for `jmp'\n GAS LISTING .*\n #...\n [ \t]*1[ \t]+\\.text"
    },
    {
      "sha": "04442417c960676355695ec838b1f08f62dca3d0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/25167\n+\t* i386-opc.tbl: Remove IgnoreSize from cmpsd and movsd.\n+\t* i386-tbl.h: Regenerated.\n+\n 2019-11-08  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (operand_type_init): Add Class= to"
    },
    {
      "sha": "1dd27832346280bfdc7d7a2b6a8cc8fbb0a75dcb",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -1405,7 +1405,7 @@ cmppd, 3, 0x66c2, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexVVVV=1|VexW=1|No_bSu\n cmppd, 3, 0x660fc2, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, RegXMM|Unspecified|BaseIndex, RegXMM }\n // Intel mode string compare.\n cmpsd, 0, 0xa7, None, 1, 0, Size32|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { 0 }\n-cmpsd, 2, 0xa7, None, 1, 0, Size32|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { Dword|Unspecified|BaseIndex|EsSeg, Dword|Unspecified|BaseIndex }\n+cmpsd, 2, 0xa7, None, 1, 0, Size32|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { Dword|Unspecified|BaseIndex|EsSeg, Dword|Unspecified|BaseIndex }\n cmpsd, 3, 0xf2c2, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=0|VexVVVV=1|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n cmpsd, 3, 0xf20fc2, None, 2, CpuSSE2, Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8, Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n comisd, 2, 0x662f, None, 1, CpuAVX, Modrm|Vex=3|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }\n@@ -1441,7 +1441,7 @@ movntpd, 2, 0x662b, None, 1, CpuAVX, Modrm|Vex|VexOpcode=0|VexW=1|No_bSuf|No_wSu\n movntpd, 2, 0x660f2b, None, 2, CpuSSE2, Modrm|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { RegXMM, Xmmword|Unspecified|BaseIndex }\n // Intel mode string move.\n movsd, 0, 0xa5, None, 1, 0, Size32|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { 0 }\n-movsd, 2, 0xa5, None, 1, 0, Size32|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { Dword|Unspecified|BaseIndex, Dword|Unspecified|BaseIndex|EsSeg }\n+movsd, 2, 0xa5, None, 1, 0, Size32|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|IsString|RepPrefixOk, { Dword|Unspecified|BaseIndex, Dword|Unspecified|BaseIndex|EsSeg }\n movsd, 2, 0xf210, None, 1, CpuAVX, D|Modrm|Vex=3|VexOpcode=0|VexW=1|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { Qword|Unspecified|BaseIndex, RegXMM }\n movsd, 2, 0xf210, None, 1, CpuAVX, D|Modrm|Vex=3|VexOpcode=0|VexVVVV=1|VexW=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|SSE2AVX, { RegXMM, RegXMM }\n movsd, 2, 0xf20f10, None, 2, CpuSSE2, D|Modrm|IgnoreSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Qword|Unspecified|BaseIndex|RegXMM, RegXMM }"
    },
    {
      "sha": "a4a2cd73363fd1106affc51dcf270f702eea5905",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc2be329b9508395b7270b7c3bebc19a6f1e2e07/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=dc2be329b9508395b7270b7c3bebc19a6f1e2e07",
      "patch": "@@ -15607,7 +15607,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 1, 1, 1, 1,\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0 },\n@@ -16134,7 +16134,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 1, 1, 1, 1, 1,\n+    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0 },"
    }
  ]
}