{
  "sha": "7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
  "node_id": "C_kwDOANOeidoAKDdjZmE4ZDkzY2JiZTE2NDI0ZmUyMTkwY2IzZDI3ZmM5NGM1OWYzOWI",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-10T11:55:55Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-11-10T11:55:55Z"
    },
    "message": "[gdb/testsuite] Add gdb.opt/break-on-_exit.exp\n\nAdd a test-case to excercise the problem scenario reported in PR28527 and\nfixed in commit a50bdb99afe \"[gdb/tdep, rs6000] Don't skip system call in\nskip_prologue\":\n- set a breakpoint on _exit, and\n- verify that it triggers.\n\nNote that this is not a regression test for that commit.  Since the actual\ncode in _exit may vary across os instances, we cannot guarantee that the\nproblem will always trigger with this test-case.\n\nRather, this test-case is a version of the original test-case\n(gdb.threads/process-dies-while-detaching.exp) that is minimal while still\nreproducing the problem reported in PR28527, in that same setting.\n\nThe benefit of this test-case is that it exercise real-life code and may\nexpose similar problems in other settings.  Also, it provides a much easier\ntest-case to investigate in case a similar problem occurs.\n\nTested on x86_64-linux and ppc64le-linux.",
    "tree": {
      "sha": "8beebb6ce09b46ff4ca0a4e0ad3f7be956b4602f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8beebb6ce09b46ff4ca0a4e0ad3f7be956b4602f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1ee4d0e313e974131dbe2b59f4b0aa0108a6ef08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ee4d0e313e974131dbe2b59f4b0aa0108a6ef08",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1ee4d0e313e974131dbe2b59f4b0aa0108a6ef08"
    }
  ],
  "stats": {
    "total": 92,
    "additions": 92,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d8da66193a877757cb8d3144fde2328ba5806aca",
      "filename": "gdb/testsuite/gdb.opt/break-on-_exit.c",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b/gdb/testsuite/gdb.opt/break-on-_exit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b/gdb/testsuite/gdb.opt/break-on-_exit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.opt/break-on-_exit.c?ref=7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
      "patch": "@@ -0,0 +1,26 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <unistd.h>\n+\n+int\n+main (void)\n+{\n+  _exit (0);\n+\n+  return 0;\n+}"
    },
    {
      "sha": "38476412862ae2045aed21686f44b0d920e3c364",
      "filename": "gdb/testsuite/gdb.opt/break-on-_exit.exp",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b/gdb/testsuite/gdb.opt/break-on-_exit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b/gdb/testsuite/gdb.opt/break-on-_exit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.opt/break-on-_exit.exp?ref=7cfa8d93cbbe16424fe2190cb3d27fc94c59f39b",
      "patch": "@@ -0,0 +1,66 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+# Set a breakpoint on libc's _exit, and verify that it triggers.  The function\n+# tends to do a syscall immediately after the prologue, and if the breakpoint is\n+# set past the syscall due to faulty prologue skipping, the breakpoint will not\n+# trigger.\n+#\n+# In particular, we're trying to excercise the instruction analysis\n+# functionality of prologue skipping.  If the non-minimal symbols are\n+# read for libc, then that functionality might not be used because f.i.\n+# line-info is used instead.  Also, if the minimal symbols are not read\n+# for libc, then the breakpoint is set on the exec-local _exit@plt instead,\n+# and that functionality will also not be used.\n+#\n+# We may get the required setup in case of a libc with misssing separate\n+# debuginfo, but we want the same effect if that debuginfo is installed.\n+#\n+# So, we use -readnever to read minimal symbols, but not non-miminal symbols.\n+#\n+# Because the code at _exit may be and usually is optimized, the test is in\n+# the gdb.opt directory.\n+\n+standard_testfile\n+\n+# See if we have target board readnow.exp or similar.\n+if { [lsearch -exact $GDBFLAGS -readnow] != -1 \\\n+\t || [lsearch -exact $GDBFLAGS --readnow] != -1 } {\n+    untested \"--readnever not allowed in combination with --readnow\"\n+    return -1\n+}\n+\n+save_vars { GDBFLAGS } {\n+    append GDBFLAGS \" -readnever\"\n+\n+    if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile nodebug]} {\n+\treturn -1\n+    }\n+}\n+\n+if ![runto_main] then {\n+    return 0\n+}\n+\n+gdb_breakpoint \"_exit\"\n+\n+# Give some background information about the breakpoint(s) and corresponding\n+# the shared lib(s).\n+gdb_test \"info breakpoints\"\n+gdb_test \"info shared\"\n+\n+# If the skip_prologue analysis of _exit is too eager, we may not hit the\n+# breakpoint.\n+gdb_continue_to_breakpoint \"_exit\" \"_exit \\\\(\\\\) .*\""
    }
  ]
}