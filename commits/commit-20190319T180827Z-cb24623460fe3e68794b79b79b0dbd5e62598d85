{
  "sha": "cb24623460fe3e68794b79b79b0dbd5e62598d85",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2IyNDYyMzQ2MGZlM2U2ODc5NGI3OWI3OWIwZGJkNWU2MjU5OGQ4NQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-03-19T18:08:27Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-03-19T18:08:27Z"
    },
    "message": "Add comments describing tui_ui_out and its fields, cleanup a bit\n\nThis commit add comments describing tui_ui_out and its fields, and\ncleans up the code a little bit.\n\nAlso switch to using in-class initialization so that the initial\nvalues can be seen alongside the comments.\n\nI see no reason for initializing m_line as -1 instead of 0, since all\nthe checks in the .c file are of the form \"> 0\".  AFAICS there's no\npractical difference between -1 and 0.  So it seems simpler to\ninitialize it as 0.\n\nThere's a bit of redundancy in tui_ui_out::do_field_string, which is\nfixed by this commit.\n\ngdb/ChangeLog:\n2019-03-19  Pedro Alves  <palves@redhat.com>\n\n\t* tui/tui-out.c (tui_ui_out::do_field_string): Simplify.\n\t(tui_ui_out::do_text): Add comments.  Reset M_LINE to 0 instead of\n\tto -1.  Fix TABs vs spaces.\n\t(tui_ui_out::tui_ui_out): Don't initialize fields here.\n\t* tui/tui-out.h (tui_ui_out) Add intro comments.\n\t<m_line, m_start_of_line>: In-class initialize, and add describing\n\tcomment.",
    "tree": {
      "sha": "7ef3e9ff92a4c93a8523147710fec5d3d4838aea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7ef3e9ff92a4c93a8523147710fec5d3d4838aea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cb24623460fe3e68794b79b79b0dbd5e62598d85",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb24623460fe3e68794b79b79b0dbd5e62598d85",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cb24623460fe3e68794b79b79b0dbd5e62598d85",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb24623460fe3e68794b79b79b0dbd5e62598d85/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "634557801d909982b47b1723f4216ebe8bc784aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/634557801d909982b47b1723f4216ebe8bc784aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/634557801d909982b47b1723f4216ebe8bc784aa"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 42,
    "deletions": 16
  },
  "files": [
    {
      "sha": "c170fe480bfdbf8e7beb5220c697f4cd945fee75",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cb24623460fe3e68794b79b79b0dbd5e62598d85",
      "patch": "@@ -1,3 +1,13 @@\n+2019-03-19  Pedro Alves  <palves@redhat.com>\n+\n+\t* tui/tui-out.c (tui_ui_out::do_field_string): Simplify.\n+\t(tui_ui_out::do_text): Add comments.  Reset M_LINE to 0 instead of\n+\tto -1.  Fix TABs vs spaces.\n+\t(tui_ui_out::tui_ui_out): Don't initialize fields here.\n+\t* tui/tui-out.h (tui_ui_out) Add intro comments.\n+\t<m_line, m_start_of_line>: In-class initialize, and add describing\n+\tcomment.\n+\n 2019-03-18  Alan Hayward  <alan.hayward@arm.com>\n \n \t* arm-linux-nat.c (arm_linux_insert_hw_breakpoint1): Fix"
    },
    {
      "sha": "5fabff2cf1cbaa5ad33f390a1262f96e5aa3ca4b",
      "filename": "gdb/tui/tui-out.c",
      "status": "modified",
      "additions": 13,
      "deletions": 14,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/tui/tui-out.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/tui/tui-out.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.c?ref=cb24623460fe3e68794b79b79b0dbd5e62598d85",
      "patch": "@@ -57,17 +57,13 @@ tui_ui_out::do_field_string (int fldno, int width, ui_align align,\n   if (suppress_output ())\n     return;\n \n+  m_start_of_line++;\n+\n   if (fldname && m_line > 0 && strcmp (fldname, \"fullname\") == 0)\n     {\n-      m_start_of_line++;\n-      if (m_line > 0)\n-        {\n-          tui_show_source (string, m_line);\n-        }\n+      tui_show_source (string, m_line);\n       return;\n     }\n-  \n-  m_start_of_line++;\n \n   cli_ui_out::do_field_string (fldno, width, align, fldname, string, style);\n }\n@@ -94,11 +90,16 @@ tui_ui_out::do_text (const char *string)\n   m_start_of_line++;\n   if (m_line > 0)\n     {\n+      /* Printing a source line, so suppress regular output -- the\n+\t line was shown on the TUI's source window by tui_show_source\n+\t above instead.  */\n       if (strchr (string, '\\n') != 0)\n-        {\n-          m_line = -1;\n-          m_start_of_line = 0;\n-        }\n+\t{\n+\t  /* We've reached the end of the line, so go back to letting\n+\t     text output go to the console.  */\n+\t  m_line = 0;\n+\t  m_start_of_line = 0;\n+\t}\n       return;\n     }\n   if (strchr (string, '\\n'))\n@@ -108,9 +109,7 @@ tui_ui_out::do_text (const char *string)\n }\n \n tui_ui_out::tui_ui_out (ui_file *stream)\n-: cli_ui_out (stream, 0),\n-  m_line (-1),\n-  m_start_of_line (0)\n+  : cli_ui_out (stream, 0)\n {\n }\n "
    },
    {
      "sha": "edf0b912befe0bf48da0dfa7027d13bc0fe87f4f",
      "filename": "gdb/tui/tui-out.h",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/tui/tui-out.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb24623460fe3e68794b79b79b0dbd5e62598d85/gdb/tui/tui-out.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-out.h?ref=cb24623460fe3e68794b79b79b0dbd5e62598d85",
      "patch": "@@ -20,6 +20,10 @@\n \n #include \"cli-out.h\"\n \n+/* A ui_out class for the TUI.  This is just like the CLI's ui_out,\n+   except that it overrides output methods to detect when a source\n+   line is being printed and show the source in the TUI's source\n+   window instead of printing the line in the console window.  */\n class tui_ui_out : public cli_ui_out\n {\n public:\n@@ -39,8 +43,21 @@ class tui_ui_out : public cli_ui_out\n \n private:\n \n-  int m_line;\n-  int m_start_of_line;\n+  /* These fields are used to make print_source_lines show the source\n+     in the TUI's source window instead of in the console.\n+     M_START_OF_LINE is incremented whenever something is output to\n+     the ui_out.  If an integer field named \"line\" is printed on the\n+     ui_out, and nothing else has been printed yet (both\n+     M_START_OF_LINE and M_LINE are still 0), we assume\n+     print_source_lines is starting to print a source line, and thus\n+     record the line number in M_LINE.  Afterwards, when we see a\n+     string field named \"fullname\" being output, we take the fullname\n+     and the recorded line and show the source line in the TUI's\n+     source window.  tui_ui_out::do_text() suppresses text output\n+     until it sees an endline being printed, at which point these\n+     variables are reset back to 0.  */\n+  int m_line = 0;\n+  int m_start_of_line = 0;\n };\n \n extern tui_ui_out *tui_out_new (struct ui_file *stream);"
    }
  ]
}