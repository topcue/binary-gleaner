{
  "sha": "b312fea191f0118c2438198f5069d25b0b527178",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjMxMmZlYTE5MWYwMTE4YzI0MzgxOThmNTA2OWQyNWIwYjUyNzE3OA==",
  "commit": {
    "author": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2020-03-02T12:46:47Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-02T12:46:47Z"
    },
    "message": "The procedure to find an unused port for the debuginfod tests is susceptible to a TOCTOU failure.  Change port finding in order to avoid this. Also use 'expect' to interact with the server process since we now use the server's output to determine whether a port is in use.\n\n\t* binutils/testsuite/binutils-all/debuginfod.exp: Improve port\n\tselection.",
    "tree": {
      "sha": "9f37be99059bb51a91a8102a00f27fd4fa2f73af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9f37be99059bb51a91a8102a00f27fd4fa2f73af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b312fea191f0118c2438198f5069d25b0b527178",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b312fea191f0118c2438198f5069d25b0b527178",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b312fea191f0118c2438198f5069d25b0b527178",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b312fea191f0118c2438198f5069d25b0b527178/comments",
  "author": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "728d32c496435cbd2529f7de9f5277d88c9c04e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/728d32c496435cbd2529f7de9f5277d88c9c04e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/728d32c496435cbd2529f7de9f5277d88c9c04e2"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 31,
    "deletions": 28
  },
  "files": [
    {
      "sha": "e1cec98e7efe10217f45cc9f0f8824b87b85f75b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b312fea191f0118c2438198f5069d25b0b527178/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b312fea191f0118c2438198f5069d25b0b527178/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=b312fea191f0118c2438198f5069d25b0b527178",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-02  Aaron Merey  <amerey@redhat.com>\n+\n+\t* binutils/testsuite/binutils-all/debuginfod.exp: Improve port\n+\tselection.\n+\n 2020-03-02  Nick Clifton  <nickc@redhat.com>\n \n \tPR 25543"
    },
    {
      "sha": "5b59d19ff42b65af37e7bd52179762e9435b023d",
      "filename": "binutils/testsuite/binutils-all/debuginfod.exp",
      "status": "modified",
      "additions": 26,
      "deletions": 28,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b312fea191f0118c2438198f5069d25b0b527178/binutils/testsuite/binutils-all/debuginfod.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b312fea191f0118c2438198f5069d25b0b527178/binutils/testsuite/binutils-all/debuginfod.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/debuginfod.exp?ref=b312fea191f0118c2438198f5069d25b0b527178",
      "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 2002-2019 Free Software Foundation, Inc.\n+# Copyright (C) 2002-2020 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -72,9 +72,6 @@ if { ![binutils_assemble $srcdir/$subdir/linkdebug.s tmpdir/linkdebug.debug] } {\n     fail \"$test (assemble linkdebug)\"\n }\n \n-# Find an unused port\n-set port [exec sh -c \"while true; do PORT=`expr '(' \\$RANDOM % 1000 ')' + 9000`; ss -atn | fgrep \\\":\\$PORT\\\" || break; done; echo \\$PORT\"]\n-\n set cache [file join [pwd] \"tmpdir/.debuginfod_cache\"]\n set db [file join [pwd] \"tmpdir/.debuginfod.db\"]\n \n@@ -99,34 +96,36 @@ file delete -force $db\n set conf_objdump [binutils_run $OBJDUMP \"-WK tmpdir/testprog\"]\n set conf_readelf [binutils_run $READELF \"-wK tmpdir/testprog\"]\n \n-set debuginfod_pid 0\n-\n-# Kill the server if we abort early\n-proc sigint_handler {} {\n-    global debuginfod_pid\n+# Find an unused port\n+set port 7999\n+set found 0\n+while { ! $found } {\n+  incr port\n+  if { $port == 65536 } {\n+    untested \"$test (no available ports)\"\n+    return\n+  }\n \n-    if { $debuginfod_pid != 0 } {\n-        catch {exec kill -INT $debuginfod_pid}\n+  spawn debuginfod -vvvv -d $db -p $port -F tmpdir/dbg\n+  expect {\n+    \"started http server on IPv4 IPv6 port=$port\" {\n+      set found 1\n     }\n-\n-    exit\n-}\n-\n-trap sigint_handler INT\n-\n-# Start a debuginfod server.\n-set debuginfod_pid [exec debuginfod -d $db -p $port -F tmpdir/dbg 2>/dev/null &]\n-\n-if { !$debuginfod_pid } {\n-    fail \"$test (server init)\"\n-    return\n+    \"Failed to bind to port\" {\n+      exec kill -INT -[exp_pid]\n+      catch {close}; catch {wait -i $spawn_id}\n+    }\n+    timeout {\n+      fail \"$test (find port timeout)\"\n+      return\n+    }\n+  }\n }\n \n set metrics [list \"ready 1\" \\\n              \"thread_work_total{role=\\\"traverse\\\"} 1\" \\\n              \"thread_work_pending{role=\\\"scan\\\"} 0\" \\\n-             \"thread_busy{role=\\\"scan\\\"} 0\" \\\n-             \"groom{statistic=\\\"buildids\\\"} 2\"]\n+             \"thread_busy{role=\\\"scan\\\"} 0\"]\n \n # Check server metrics to confirm init has completed.\n foreach m $metrics {\n@@ -145,7 +144,8 @@ foreach m $metrics {\n \n   if { $timelim == 0 } {\n     fail \"$test (server init timeout)\"\n-    catch {exec kill -INT $debuginfod_pid}\n+    exec kill -INT -[exp_pid]\n+    catch {close}; catch {wait -i $spawn_id}\n     return\n   }\n }\n@@ -196,5 +196,3 @@ if { [regexp \".*DEBUGINFOD.*\" $conf_readelf] } {\n } else {\n     untested \"$test (readelf not configured with debuginfod)\"\n }\n-\n-catch {exec kill -INT $debuginfod_pid}"
    }
  ]
}