{
  "sha": "bc3609fd3891c1cc0007eccd74bca98aabc03996",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmMzNjA5ZmQzODkxYzFjYzAwMDdlY2NkNzRiY2E5OGFhYmMwMzk5Ng==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-04-26T14:01:52Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-04-26T14:05:41Z"
    },
    "message": "Fix comments and whitespace in lookup_cmd_composition\n\n2020-04-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* cli/cli-decode.c (lookup_cmd_composition): Fix comments\n\tand whitespace.",
    "tree": {
      "sha": "c1c14ca21e2c6c8d560bda4f26aa1685174cb9f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c1c14ca21e2c6c8d560bda4f26aa1685174cb9f5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bc3609fd3891c1cc0007eccd74bca98aabc03996",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc3609fd3891c1cc0007eccd74bca98aabc03996",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bc3609fd3891c1cc0007eccd74bca98aabc03996",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc3609fd3891c1cc0007eccd74bca98aabc03996/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "a09f656b267b9a684f038fba7cadfe98e2f18892",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a09f656b267b9a684f038fba7cadfe98e2f18892",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a09f656b267b9a684f038fba7cadfe98e2f18892"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 34,
    "deletions": 29
  },
  "files": [
    {
      "sha": "8186fef88e36927a7a7bd0b7e18579d2969c5877",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc3609fd3891c1cc0007eccd74bca98aabc03996/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc3609fd3891c1cc0007eccd74bca98aabc03996/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bc3609fd3891c1cc0007eccd74bca98aabc03996",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-26  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* cli/cli-decode.c (lookup_cmd_composition): Fix comments\n+\tand whitespace.\n+\n 2020-04-25  Kamil Rytarowski  <n54@gmx.com>\n \n        * inf-ptrace.c (inf_ptrace_target::wait): Remove"
    },
    {
      "sha": "d951ead1c9578e5b691ab44f7da2328b06ac8b5c",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 29,
      "deletions": 29,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bc3609fd3891c1cc0007eccd74bca98aabc03996/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bc3609fd3891c1cc0007eccd74bca98aabc03996/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=bc3609fd3891c1cc0007eccd74bca98aabc03996",
      "patch": "@@ -1812,25 +1812,25 @@ deprecated_cmd_warning (const char *text)\n }\n \n \n-/* Look up the contents of LINE as a command in the command list 'cmdlist'.\n+/* Look up the contents of TEXT as a command in the command list 'cmdlist'.\n    Return 1 on success, 0 on failure.\n-   \n-   If LINE refers to an alias, *alias will point to that alias.\n-   \n-   If LINE is a postfix command (i.e. one that is preceded by a prefix\n-   command) set *prefix_cmd.\n-   \n-   Set *cmd to point to the command LINE indicates.\n-   \n-   If any of *alias, *prefix_cmd, or *cmd cannot be determined or do not \n+\n+   If TEXT refers to an alias, *ALIAS will point to that alias.\n+\n+   If TEXT is a subcommand (i.e. one that is preceded by a prefix\n+   command) set *PREFIX_CMD.\n+\n+   Set *CMD to point to the command TEXT indicates.\n+\n+   If any of *ALIAS, *PREFIX_CMD, or *CMD cannot be determined or do not\n    exist, they are NULL when we return.\n-   \n+\n */\n int\n lookup_cmd_composition (const char *text,\n-                      struct cmd_list_element **alias,\n-                      struct cmd_list_element **prefix_cmd, \n-                      struct cmd_list_element **cmd)\n+\t\t\tstruct cmd_list_element **alias,\n+\t\t\tstruct cmd_list_element **prefix_cmd,\n+\t\t\tstruct cmd_list_element **cmd)\n {\n   char *command;\n   int len, nfound;\n@@ -1840,51 +1840,51 @@ lookup_cmd_composition (const char *text,\n   *alias = NULL;\n   *prefix_cmd = NULL;\n   *cmd = NULL;\n-  \n+\n   cur_list = cmdlist;\n-  \n+\n   while (1)\n-    { \n+    {\n       /* Go through as many command lists as we need to,\n \t to find the command TEXT refers to.  */\n-      \n+\n       prev_cmd = *cmd;\n-      \n+\n       while (*text == ' ' || *text == '\\t')\n \t(text)++;\n-      \n+\n       /* Identify the name of the command.  */\n       len = find_command_name_length (text);\n-      \n+\n       /* If nothing but whitespace, return.  */\n       if (len == 0)\n \treturn 0;\n-      \n-      /* Text is the start of the first command word to lookup (and\n+\n+      /* TEXT is the start of the first command word to lookup (and\n \t it's length is len).  We copy this into a local temporary.  */\n-      \n+\n       command = (char *) alloca (len + 1);\n       memcpy (command, text, len);\n       command[len] = '\\0';\n-      \n+\n       /* Look it up.  */\n       *cmd = 0;\n       nfound = 0;\n       *cmd = find_cmd (command, len, cur_list, 1, &nfound);\n-      \n+\n       if (*cmd == CMD_LIST_AMBIGUOUS)\n \t{\n \t  return 0;              /* ambiguous */\n \t}\n-      \n+\n       if (*cmd == NULL)\n \treturn 0;                /* nothing found */\n       else\n \t{\n \t  if ((*cmd)->cmd_pointer)\n \t    {\n \t      /* cmd was actually an alias, we note that an alias was\n-\t\t used (by assigning *alais) and we set *cmd.  */\n+\t\t used (by assigning *ALIAS) and we set *CMD.  */\n \t      *alias = *cmd;\n \t      *cmd = (*cmd)->cmd_pointer;\n \t    }\n@@ -1894,7 +1894,7 @@ lookup_cmd_composition (const char *text,\n \tcur_list = *(*cmd)->prefixlist;\n       else\n \treturn 1;\n-      \n+\n       text += len;\n     }\n }"
    }
  ]
}