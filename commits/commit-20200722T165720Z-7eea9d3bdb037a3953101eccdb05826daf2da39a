{
  "sha": "7eea9d3bdb037a3953101eccdb05826daf2da39a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2VlYTlkM2JkYjAzN2EzOTUzMTAxZWNjZGIwNTgyNmRhZjJkYTM5YQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T18:07:08Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:20Z"
    },
    "message": "libctf: restructure error handling to reduce relocations\n\nJose Marchesi noted that the traditional-Unix error array in ctf-error.c\nintroduces one reloc per error to initialize the array: 58 so far.  We\ncan reduce this to zero using an array of carefully-sized individual\nmembers which is used to construct a string table, that is then\nreferenced by the lookup functions: but doing this automatically is a\npain.\n\nBruno Haible wrote suitable code years ago: I got permission to reuse it\n(Bruno says \"... which I hereby put in the public domain\"); I modified\nit a tiny bit (similarly to what Ulrich Drepper did in the dsohowto\ntext, but I redid it from scratch), commented it up a bit, and shifted\nthe error table into that form, migrating it into the new file\nctf-error.h.\n\nThis has the advantage that it spotted both typos in the text of the\nerrors in the comments in ctf-api.h and typos in the error defines in\nthe comments in ctf-error.c, and places where the two were simply not\nin sync.  All are now fixed.\n\nOne new constant exists in ctf-api.h: CTF_NERR, since the old method of\nworking out the number of errors in ctf-error.c was no longer usable,\nand it seems that the number of CTF errors is something users might\nreasonably want as well.  It should be pretty easy to keep up to date as\nnew errors are introduced.\n\ninclude/\n\t* ctf-api.h (ECTF_*): Improve comments.\n\t(ECTF_NERR): New.\n\nlibctf/\n\t* ctf-error.c: Include <stddef.h>, for offsetof.\n\t(_ctf_errlist): Migrate to...\n\t(_ctf_errlist_t): ... this.\n\t(_ctf_erridx): New, indexes into _ctf_errlist_t.\n\t(_ctf_nerr): Remove.\n\t(ctf_errmsg): Adjust accordingly.\n\t* Makefile.am (BUILT_SOURCES): Note...\n\t(ctf-error.h): ... this new rule.\n\t* Makefile.in: Regenerate.\n\t* mkerrors.sed: New, process ctf-api.h to generate ctf-error.h.\n\t* .gitignore: New, ignore ctf-error.h.",
    "tree": {
      "sha": "9146958b0707822dabf56fc5e30381b0122f16e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9146958b0707822dabf56fc5e30381b0122f16e3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7eea9d3bdb037a3953101eccdb05826daf2da39a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7eea9d3bdb037a3953101eccdb05826daf2da39a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7eea9d3bdb037a3953101eccdb05826daf2da39a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7eea9d3bdb037a3953101eccdb05826daf2da39a/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b64751cf0bc4466066c35e6c63348f900ce10272",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b64751cf0bc4466066c35e6c63348f900ce10272",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b64751cf0bc4466066c35e6c63348f900ce10272"
    }
  ],
  "stats": {
    "total": 273,
    "additions": 159,
    "deletions": 114
  },
  "files": [
    {
      "sha": "f5be0c0154e65afe2b8180dd5bf7b020228f7722",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ECTF_*): Improve comments.\n+\t(ECTF_NERR): New.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h: Fix typos in comments."
    },
    {
      "sha": "2e3e28b840c09c4efbda35950c97ccb19c14f934",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 54,
      "deletions": 52,
      "changes": 106,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -153,60 +153,62 @@ typedef struct ctf_snapshot_id\n \n enum\n   {\n-   ECTF_FMT = ECTF_BASE,\t/* File is not in CTF or ELF format.  */\n-   ECTF_BFDERR,\t\t\t/* BFD error.  */\n-   ECTF_CTFVERS,\t\t/* CTF version is more recent than libctf.  */\n-   ECTF_BFD_AMBIGUOUS,\t\t/* Ambiguous BFD target.  */\n-   ECTF_SYMTAB,\t\t\t/* Symbol table uses invalid entry size.  */\n-   ECTF_SYMBAD,\t\t\t/* Symbol table data buffer invalid.  */\n-   ECTF_STRBAD,\t\t\t/* String table data buffer invalid.  */\n-   ECTF_CORRUPT,\t\t/* File data corruption detected.  */\n-   ECTF_NOCTFDATA,\t\t/* ELF file does not contain CTF data.  */\n-   ECTF_NOCTFBUF,\t\t/* Buffer does not contain CTF data.  */\n-   ECTF_NOSYMTAB,\t\t/* Symbol table data is not available.  */\n-   ECTF_NOPARENT,\t\t/* Parent CTF container is not available.  */\n-   ECTF_DMODEL,\t\t\t/* Data model mismatch.  */\n-   ECTF_LINKADDEDLATE,\t\t/* File added to link too late.  */\n-   ECTF_ZALLOC,\t\t\t/* Failed to allocate (de)compression buffer.  */\n-   ECTF_DECOMPRESS,\t\t/* Failed to decompress CTF data.  */\n-   ECTF_STRTAB,\t\t\t/* String table for this string is missing.  */\n-   ECTF_BADNAME,\t\t/* String offset is corrupt w.r.t. strtab.  */\n-   ECTF_BADID,\t\t\t/* Invalid type ID number.  */\n-   ECTF_NOTSOU,\t\t\t/* Type is not a struct or union.  */\n-   ECTF_NOTENUM,\t\t/* Type is not an enum.  */\n-   ECTF_NOTSUE,\t\t\t/* Type is not a struct, union, or enum.  */\n-   ECTF_NOTINTFP,\t\t/* Type is not an integer, float, or enum.  */\n-   ECTF_NOTARRAY,\t\t/* Type is not an array.  */\n-   ECTF_NOTREF,\t\t\t/* Type does not reference another type.  */\n-   ECTF_NAMELEN,\t\t/* Buffer is too small to hold type name.  */\n-   ECTF_NOTYPE,\t\t\t/* No type found corresponding to name.  */\n-   ECTF_SYNTAX,\t\t\t/* Syntax error in type name.  */\n-   ECTF_NOTFUNC,\t\t/* Symbol entry or type is not a function.  */\n-   ECTF_NOFUNCDAT,\t\t/* No func info available for function.  */\n-   ECTF_NOTDATA,\t\t/* Symtab entry does not refer to a data obj.  */\n-   ECTF_NOTYPEDAT,\t\t/* No type info available for object.  */\n-   ECTF_NOLABEL,\t\t/* No label found corresponding to name.  */\n-   ECTF_NOLABELDATA,\t\t/* File does not contain any labels.  */\n-   ECTF_NOTSUP,\t\t\t/* Feature not supported.  */\n-   ECTF_NOENUMNAM,\t\t/* Enum element name not found.  */\n-   ECTF_NOMEMBNAM,\t\t/* Member name not found.  */\n-   ECTF_RDONLY,\t\t\t/* CTF container is read-only.  */\n-   ECTF_DTFULL,\t\t\t/* CTF type is full (no more members allowed).  */\n-   ECTF_FULL,\t\t\t/* CTF container is full.  */\n-   ECTF_DUPLICATE,\t\t/* Duplicate member or variable name.  */\n-   ECTF_CONFLICT,\t\t/* Conflicting type definition present.  */\n-   ECTF_OVERROLLBACK,\t\t/* Attempt to roll back past a ctf_update.  */\n-   ECTF_COMPRESS,\t\t/* Failed to compress CTF data.  */\n-   ECTF_ARCREATE,\t\t/* Error creating CTF archive.  */\n-   ECTF_ARNNAME,\t\t/* Name not found in CTF archive.  */\n-   ECTF_SLICEOVERFLOW,\t\t/* Overflow of type bitness or offset in slice.  */\n-   ECTF_DUMPSECTUNKNOWN,\t/* Unknown section number in dump.  */\n-   ECTF_DUMPSECTCHANGED,\t/* Section changed in middle of dump.  */\n-   ECTF_NOTYET,\t\t\t/* Feature not yet implemented.  */\n-   ECTF_INTERNAL,\t\t/* Internal error in link.  */\n-   ECTF_NONREPRESENTABLE\t/* Type not representable in CTF.  */\n+   ECTF_FMT = ECTF_BASE, /* File is not in CTF or ELF format.  */\n+   ECTF_BFDERR,\t\t/* BFD error.  */\n+   ECTF_CTFVERS,\t/* CTF dict version is too new for libctf.  */\n+   ECTF_BFD_AMBIGUOUS,\t/* Ambiguous BFD target.  */\n+   ECTF_SYMTAB,\t\t/* Symbol table uses invalid entry size.  */\n+   ECTF_SYMBAD,\t\t/* Symbol table data buffer is not valid.  */\n+   ECTF_STRBAD,\t\t/* String table data buffer is not valid.  */\n+   ECTF_CORRUPT,\t/* File data structure corruption detected.  */\n+   ECTF_NOCTFDATA,\t/* File does not contain CTF data.  */\n+   ECTF_NOCTFBUF,\t/* Buffer does not contain CTF data.  */\n+   ECTF_NOSYMTAB,\t/* Symbol table information is not available.  */\n+   ECTF_NOPARENT,\t/* The parent CTF dictionary is unavailable.  */\n+   ECTF_DMODEL,\t\t/* Data model mismatch.  */\n+   ECTF_LINKADDEDLATE,\t/* File added to link too late.  */\n+   ECTF_ZALLOC,\t\t/* Failed to allocate (de)compression buffer.  */\n+   ECTF_DECOMPRESS,\t/* Failed to decompress CTF data.  */\n+   ECTF_STRTAB,\t\t/* External string table is not available.  */\n+   ECTF_BADNAME,\t/* String name offset is corrupt.  */\n+   ECTF_BADID,\t\t/* Invalid type identifier.  */\n+   ECTF_NOTSOU,\t\t/* Type is not a struct or union.  */\n+   ECTF_NOTENUM,\t/* Type is not an enum.  */\n+   ECTF_NOTSUE,\t\t/* Type is not a struct, union, or enum.  */\n+   ECTF_NOTINTFP,\t/* Type is not an integer, float, or enum.  */\n+   ECTF_NOTARRAY,\t/* Type is not an array.  */\n+   ECTF_NOTREF,\t\t/* Type does not reference another type.  */\n+   ECTF_NAMELEN,\t/* Buffer is too small to hold type name.  */\n+   ECTF_NOTYPE,\t\t/* No type found corresponding to name.  */\n+   ECTF_SYNTAX,\t\t/* Syntax error in type name.  */\n+   ECTF_NOTFUNC,\t/* Symbol table entry or type is not a function.  */\n+   ECTF_NOFUNCDAT,\t/* No function information available for function.  */\n+   ECTF_NOTDATA,\t/* Symbol table entry does not refer to a data object.  */\n+   ECTF_NOTYPEDAT,\t/* No type information available for symbol.  */\n+   ECTF_NOLABEL,\t/* No label found corresponding to name.  */\n+   ECTF_NOLABELDATA,\t/* File does not contain any labels.  */\n+   ECTF_NOTSUP,\t\t/* Feature not supported.  */\n+   ECTF_NOENUMNAM,\t/* Enum element name not found.  */\n+   ECTF_NOMEMBNAM,\t/* Member name not found.  */\n+   ECTF_RDONLY,\t\t/* CTF container is read-only.  */\n+   ECTF_DTFULL,\t\t/* CTF type is full (no more members allowed).  */\n+   ECTF_FULL,\t\t/* CTF container is full.  */\n+   ECTF_DUPLICATE,\t/* Duplicate member or variable name.  */\n+   ECTF_CONFLICT,\t/* Conflicting type is already defined.  */\n+   ECTF_OVERROLLBACK,\t/* Attempt to roll back past a ctf_update.  */\n+   ECTF_COMPRESS,\t/* Failed to compress CTF data.  */\n+   ECTF_ARCREATE,\t/* Error creating CTF archive.  */\n+   ECTF_ARNNAME,\t/* Name not found in CTF archive.  */\n+   ECTF_SLICEOVERFLOW,\t/* Overflow of type bitness or offset in slice.  */\n+   ECTF_DUMPSECTUNKNOWN, /* Unknown section number in dump.  */\n+   ECTF_DUMPSECTCHANGED, /* Section changed in middle of dump.  */\n+   ECTF_NOTYET,\t\t/* Feature not yet implemented.  */\n+   ECTF_INTERNAL,\t/* Internal error in link.  */\n+   ECTF_NONREPRESENTABLE /* Type not representable in CTF.  */\n   };\n \n+#define ECTF_NERR (ECTF_NONREPRESENTABLE - ECTF_BASE + 1)\t/* Count of CTF errors.  */\n+\n /* The CTF data model is inferred to be the caller's data model or the data\n    model of the given object, unless ctf_setmodel() is explicitly called.  */\n #define\tCTF_MODEL_ILP32 1\t/* Object data model is ILP32.  */"
    },
    {
      "sha": "b95386e97d3185185e71d88b908824e23f5c5b1f",
      "filename": "libctf/.gitignore",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/.gitignore",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/.gitignore",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/.gitignore?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -0,0 +1 @@\n+ctf-error.h"
    },
    {
      "sha": "74e977659a43c3b9251fb90e7e5b6ab12da91d61",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-error.c: Include <stddef.h>, for offsetof.\n+\t(_ctf_errlist): Migrate to...\n+\t(_ctf_errlist_t): ... this.\n+\t(_ctf_erridx): New, indexes into _ctf_errlist_t.\n+\t(_ctf_nerr): Remove.\n+\t(ctf_errmsg): Adjust accordingly.\n+\t* Makefile.am (BUILT_SOURCES): Note...\n+\t(ctf-error.h): ... this new rule.\n+\t* Makefile.in: Regenerate.\n+\t* mkerrors.sed: New, process ctf-api.h to generate ctf-error.h.\n+\t* .gitignore: New, ignore ctf-error.h.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-impl.h: Fix typos in comments."
    },
    {
      "sha": "cdd3a5c55d6d27df9c8e26715407fb6aa7458302",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -52,3 +52,8 @@ libctf_la_LIBADD = @BFD_LIBADD@ $(libctf_nobfd_la_LIBADD)\n libctf_la_DEPENDENCIES = @BFD_DEPENDENCIES@\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n+\n+BUILT_SOURCES = ctf-error.h\n+\n+ctf-error.h: $(srcdir)/mkerrors.sed $(srcdir)/../include/ctf-api.h\n+\tsed -nf $(srcdir)/mkerrors.sed < $(srcdir)/../include/ctf-api.h > $@"
    },
    {
      "sha": "a26fa31da4973d9dc646af1b6c067470a3f56464",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -452,7 +452,8 @@ libctf_la_LIBADD = @BFD_LIBADD@ $(libctf_nobfd_la_LIBADD)\n libctf_la_DEPENDENCIES = @BFD_DEPENDENCIES@\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n-all: config.h\n+BUILT_SOURCES = ctf-error.h\n+all: $(BUILT_SOURCES) config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n .SUFFIXES:\n@@ -855,13 +856,15 @@ distcleancheck: distclean\n \t       $(distcleancheck_listfiles) ; \\\n \t       exit 1; } >&2\n check-am: all-am\n-check: check-am\n+check: $(BUILT_SOURCES)\n+\t$(MAKE) $(AM_MAKEFLAGS) check-am\n all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h\n installdirs:\n \tfor dir in \"$(DESTDIR)$(libdir)\" \"$(DESTDIR)$(includedir)\"; do \\\n \t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n \tdone\n-install: install-am\n+install: $(BUILT_SOURCES)\n+\t$(MAKE) $(AM_MAKEFLAGS) install-am\n install-exec: install-exec-am\n install-data: install-data-am\n uninstall: uninstall-am\n@@ -891,6 +894,7 @@ distclean-generic:\n maintainer-clean-generic:\n \t@echo \"This command is intended for maintainers to use\"\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n+\t-test -z \"$(BUILT_SOURCES)\" || rm -f $(BUILT_SOURCES)\n clean: clean-am\n \n clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \\\n@@ -965,7 +969,7 @@ ps-am:\n \n uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n \n-.MAKE: all install-am install-strip\n+.MAKE: all check install install-am install-strip\n \n .PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \\\n \tclean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \\\n@@ -989,6 +993,9 @@ uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n .PRECIOUS: Makefile\n \n \n+ctf-error.h: $(srcdir)/mkerrors.sed $(srcdir)/../include/ctf-api.h\n+\tsed -nf $(srcdir)/mkerrors.sed < $(srcdir)/../include/ctf-api.h > $@\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "84d14d59323e287a2de2c19682f80426602d6cc2",
      "filename": "libctf/ctf-error.c",
      "status": "modified",
      "additions": 41,
      "deletions": 58,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/ctf-error.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/ctf-error.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-error.c?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -18,71 +18,54 @@\n    <http://www.gnu.org/licenses/>.  */\n \n #include <ctf-impl.h>\n+#include <stddef.h>\n \n-static const char *const _ctf_errlist[] = {\n-  \"File is not in CTF or ELF format\",\t\t     /* ECTF_FMT */\n-  \"BFD error\",\t\t\t\t\t     /* ECTF_BFDERR */\n-  \"File uses more recent CTF version than libctf\",   /* ECTF_CTFVERS */\n-  \"Ambiguous BFD target\",\t\t\t     /* ECTF_BFD_AMBIGUOUS */\n-  \"Symbol table uses invalid entry size\",\t     /* ECTF_SYMTAB */\n-  \"Symbol table data buffer is not valid\",\t     /* ECTF_SYMBAD */\n-  \"String table data buffer is not valid\",\t     /* ECTF_STRBAD */\n-  \"File data structure corruption detected\",\t     /* ECTF_CORRUPT */\n-  \"File does not contain CTF data\",\t\t     /* ECTF_NOCTFDATA */\n-  \"Buffer does not contain CTF data\",\t\t     /* ECTF_NOCTFBUF */\n-  \"Symbol table information is not available\",\t     /* ECTF_NOSYMTAB */\n-  \"Type information is in parent and unavailable\",   /* ECTF_NOPARENT */\n-  \"Cannot import types with different data model\",   /* ECTF_DMODEL */\n-  \"File added to link too late\",\t\t     /* ECTF_LINKADDEDLATE */\n-  \"Failed to allocate (de)compression buffer\",\t     /* ECTF_ZALLOC */\n-  \"Failed to decompress CTF data\",\t\t     /* ECTF_DECOMPRESS */\n-  \"External string table is not available\",\t     /* ECTF_STRTAB */\n-  \"String name offset is corrupt\",\t\t     /* ECTF_BADNAME */\n-  \"Invalid type identifier\",\t\t\t     /* ECTF_BADID */\n-  \"Type is not a struct or union\",\t\t     /* ECTF_NOTSOU */\n-  \"Type is not an enum\",\t\t\t     /* ECTF_NOTENUM */\n-  \"Type is not a struct, union, or enum\",\t     /* ECTF_NOTSUE */\n-  \"Type is not an integer, float, or enum\",\t     /* ECTF_NOTINTFP */\n-  \"Type is not an array\",\t\t\t     /* ECTF_NOTARRAY */\n-  \"Type does not reference another type\",\t     /* ECTF_NOTREF */\n-  \"Input buffer is too small for type name\",\t     /* ECTF_NAMELEN */\n-  \"No type information available for that name\",     /* ECTF_NOTYPE */\n-  \"Syntax error in type name\",\t\t\t     /* ECTF_SYNTAX */\n-  \"Symbol table entry or type is not a function\",    /* ECTF_NOTFUNC */\n-  \"No function information available for symbol\",    /* ECTF_NOFUNCDAT */\n-  \"Symbol table entry is not a data object\",\t     /* ECTF_NOTDATA */\n-  \"No type information available for symbol\",\t     /* ECTF_NOTYPEDAT */\n-  \"No label information available for that name\",    /* ECTF_NOLABEL */\n-  \"File does not contain any labels\",\t\t     /* ECTF_NOLABELDATA */\n-  \"Feature not supported\",\t\t\t     /* ECTF_NOTSUP */\n-  \"Invalid enum element name\",\t\t\t     /* ECTF_NOENUMNAM */\n-  \"Invalid member name\",\t\t\t     /* ECTF_NOMEMBNAM */\n-  \"CTF container is read-only\",\t\t\t     /* ECTF_RDONLY */\n-  \"Limit on number of dynamic type members reached\", /* ECTF_DTFULL */\n-  \"Limit on number of dynamic types reached\",\t     /* ECTF_FULL */\n-  \"Duplicate member or variable name\",\t\t     /* ECTF_DUPLICATE */\n-  \"Conflicting type is already defined\",\t     /* ECTF_CONFLICT */\n-  \"Attempt to roll back past a ctf_update\",\t     /* ECTF_OVERROLLBACK */\n-  \"Failed to compress CTF data\",\t\t     /* ECTF_COMPRESS */\n-  \"Failed to create CTF archive\",\t\t     /* ECTF_ARCREATE */\n-  \"Name not found in CTF archive\",\t\t     /* ECTF_ARNNAME */\n-  \"Overflow of type bitness or offset in slice\",     /* ECTF_SLICEOVERFLOW */\n-  \"Unknown section number in dump\",\t\t     /* ECTF_DUMPSECTUNKNOWN */\n-  \"Section changed in middle of dump\",\t\t     /* ECTF_DUMPSECTCHANGED */\n-  \"Feature not yet implemented\",\t\t     /* ECTF_NOTYET */\n-  \"Internal error in link\",\t\t\t     /* ECTF_INTERNAL */\n-  \"Type not representable in CTF\"\t\t     /* ECTF_NONREPRESENTABLE */\n-};\n-\n-static const int _ctf_nerr = sizeof (_ctf_errlist) / sizeof (_ctf_errlist[0]);\n+/* This construct is due to Bruno Haible: much thanks.  */\n+\n+/* Give each structure member a unique name.  The name does not matter, so we\n+   use the line number in ctf-error.h to uniquify them.  */\n+\n+#define ERRSTRFIELD(line) ERRSTRFIELD1 (line)\n+#define ERRSTRFIELD1(line) ctf_errstr##line\n+\n+/* The error message strings, each in a unique structure member precisely big\n+   enough for that error, plus a str member to access them all as a string\n+   table.  */\n+\n+static const union _ctf_errlist_t\n+{\n+  __extension__ struct\n+  {\n+#define _CTF_STR(n, s) char ERRSTRFIELD (__LINE__) [sizeof (s)];\n+#include \"ctf-error.h\"\n+#undef _CTF_STR\n+  };\n+  char str[1];\n+} _ctf_errlist =\n+  {\n+   {\n+#define _CTF_STR(n, s) s,\n+#include \"ctf-error.h\"\n+#undef _CTF_STR\n+   }\n+  };\n+\n+/* Offsets to each member in the string table, computed using offsetof.  */\n+\n+static const unsigned int _ctf_erridx[] =\n+  {\n+#define _CTF_STR(n, s) [n - ECTF_BASE] = offsetof (union _ctf_errlist_t, ERRSTRFIELD (__LINE__)),\n+#include \"ctf-error.h\"\n+#undef _CTF_STR\n+  };\n \n const char *\n ctf_errmsg (int error)\n {\n   const char *str;\n \n-  if (error >= ECTF_BASE && (error - ECTF_BASE) < _ctf_nerr)\n-    str = _ctf_errlist[error - ECTF_BASE];\n+  if (error >= ECTF_BASE && (error - ECTF_BASE) < ECTF_NERR)\n+    str = _ctf_errlist.str + _ctf_erridx[error - ECTF_BASE];\n   else\n     str = ctf_strerror (error);\n "
    },
    {
      "sha": "ddd4d2286e78dba805e1712d99c45cc95b4ecdc2",
      "filename": "libctf/mkerrors.sed",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/mkerrors.sed",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7eea9d3bdb037a3953101eccdb05826daf2da39a/libctf/mkerrors.sed",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/mkerrors.sed?ref=7eea9d3bdb037a3953101eccdb05826daf2da39a",
      "patch": "@@ -0,0 +1,28 @@\n+#\n+#   Copyright (C) 2020 Free Software Foundation, Inc.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; see the file COPYING.  If not see\n+# <http://www.gnu.org/licenses/>.\n+#\n+\n+# Only process lines in the error-define block\n+/= ECTF_BASE/,/ECTF_NERR/ {\n+    # Do not process non-errors (braces, ECTF_NERR, etc).\n+    /^ *ECTF_/!n;\n+    # Strip out the base initializer.\n+    s, = ECTF_BASE,,;\n+    # Transform errors into _STR(...).\n+    s@^ *\\(ECTF_[^[:blank:],]*\\),\\{0,1\\}[[:blank:]]*/\\* \\(.*\\).  \\*/$@_CTF_STR (\\1, \"\\2\")@;\n+    p;\n+  }"
    }
  ]
}