{
  "sha": "a83cdcb636a661fe0070160d58b69a27be9ae079",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTgzY2RjYjYzNmE2NjFmZTAwNzAxNjBkNThiNjlhMjdiZTlhZTA3OQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T22:33:42Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-17T23:07:22Z"
    },
    "message": "gdb.python/py-nested-maps.exp C++ify\n\nThis adjusts gdb.python/py-nested-maps.c to make it buildable as C++ program.\n\nkey_t is renamed because of:\n\n  src/gdb/testsuite/gdb.python/py-nested-maps.c:23:8: error: definition of type 'key_t' conflicts with typedef of the same name\n  struct key_t\n\t ^\n  /usr/include/x86_64-linux-gnu/sys/types.h:121:17: note: 'key_t' declared here\n  typedef __key_t key_t;\n\t\t  ^\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-nested-maps.c (struct key_t): Rename to...\n\t(struct my_key_t): ... this.  Adjust all references.\n\t(struct value_t): Rename to ...\n\t(struct my_value_t): ... this.  Adjust all references.\n\t(create_map, add_map_element, create_map_map)\n\t(add_map_map_element): Add casts.",
    "tree": {
      "sha": "2ed94b376e721e836946f828e62372c9d20d58f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2ed94b376e721e836946f828e62372c9d20d58f3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a83cdcb636a661fe0070160d58b69a27be9ae079",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a83cdcb636a661fe0070160d58b69a27be9ae079",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a83cdcb636a661fe0070160d58b69a27be9ae079",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a83cdcb636a661fe0070160d58b69a27be9ae079/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4bcee5cccce0ef4acb6f7cb571f439bba07df7f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4bcee5cccce0ef4acb6f7cb571f439bba07df7f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4bcee5cccce0ef4acb6f7cb571f439bba07df7f"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 31,
    "deletions": 22
  },
  "files": [
    {
      "sha": "211132a4362f14a7de90888002b2dc15a2eb35a3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a83cdcb636a661fe0070160d58b69a27be9ae079/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a83cdcb636a661fe0070160d58b69a27be9ae079/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a83cdcb636a661fe0070160d58b69a27be9ae079",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-17  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.python/py-nested-maps.c (struct key_t): Rename to...\n+\t(struct my_key_t): ... this.  Adjust all references.\n+\t(struct value_t): Rename to ...\n+\t(struct my_value_t): ... this.  Adjust all references.\n+\t(create_map, add_map_element, create_map_map)\n+\t(add_map_map_element): Add casts.\n+\n 2020-09-17  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.python/py-framefilter-mi.c (funca): Add casts."
    },
    {
      "sha": "46c2089f65bc59284324d62ee4e15b572c59bd25",
      "filename": "gdb/testsuite/gdb.python/py-nested-maps.c",
      "status": "modified",
      "additions": 22,
      "deletions": 22,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a83cdcb636a661fe0070160d58b69a27be9ae079/gdb/testsuite/gdb.python/py-nested-maps.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a83cdcb636a661fe0070160d58b69a27be9ae079/gdb/testsuite/gdb.python/py-nested-maps.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-nested-maps.c?ref=a83cdcb636a661fe0070160d58b69a27be9ae079",
      "patch": "@@ -20,13 +20,13 @@\n \n #define FIXED_MAP_SIZE 10\n \n-struct key_t\n+struct my_key_t\n {\n   int a;\n   int b;\n };\n \n-struct value_t\n+struct my_value_t\n {\n   int x;\n   int y;\n@@ -37,8 +37,8 @@ struct map_t\n {\n   const char *name;\n   int length;\n-  struct key_t *keys;\n-  struct value_t *values;\n+  struct my_key_t *keys;\n+  struct my_value_t *values;\n \n   /* This field is used only by the pretty printer.  */\n   int show_header;\n@@ -56,7 +56,7 @@ struct map_map_t\n struct map_t *\n create_map (const char *name)\n {\n-  struct map_t *m = malloc (sizeof (struct map_t));\n+  struct map_t *m = (struct map_t *) malloc (sizeof (struct map_t));\n   m->name = strdup (name);\n   m->length = 0;\n   m->keys = NULL;\n@@ -66,12 +66,12 @@ create_map (const char *name)\n }\n \n void\n-add_map_element (struct map_t *m, struct key_t k, struct value_t v)\n+add_map_element (struct map_t *m, struct my_key_t k, struct my_value_t v)\n {\n   if (m->length == 0)\n     {\n-      m->keys = malloc (sizeof (struct key_t) * FIXED_MAP_SIZE);\n-      m->values = malloc (sizeof (struct value_t) * FIXED_MAP_SIZE);\n+      m->keys = (struct my_key_t *) malloc (sizeof (struct my_key_t) * FIXED_MAP_SIZE);\n+      m->values = (struct my_value_t *) malloc (sizeof (struct my_value_t) * FIXED_MAP_SIZE);\n     }\n \n   m->keys[m->length] = k;\n@@ -82,7 +82,7 @@ add_map_element (struct map_t *m, struct key_t k, struct value_t v)\n struct map_map_t *\n create_map_map (void)\n {\n-  struct map_map_t *mm = malloc (sizeof (struct map_map_t));\n+  struct map_map_t *mm = (struct map_map_t *) malloc (sizeof (struct map_map_t));\n   mm->length = 0;\n   mm->values = NULL;\n   mm->show_header = 0;\n@@ -93,7 +93,7 @@ void\n add_map_map_element (struct map_map_t *mm, struct map_t *map)\n {\n   if (mm->length == 0)\n-    mm->values = malloc (sizeof (struct map_t *) * FIXED_MAP_SIZE);\n+    mm->values = (struct map_t **) malloc (sizeof (struct map_t *) * FIXED_MAP_SIZE);\n \n   mm->values[mm->length] = map;\n   mm->length++;\n@@ -103,18 +103,18 @@ int\n main (void)\n {\n   struct map_t *m1 = create_map (\"m1\");\n-  struct key_t k1 = {3, 4};\n-  struct key_t k2 = {4, 5};\n-  struct key_t k3 = {5, 6};\n-  struct key_t k4 = {6, 7};\n-  struct key_t k5 = {7, 8};\n-  struct key_t k6 = {8, 9};\n-  struct value_t v1 = {0, 1, 2};\n-  struct value_t v2 = {3, 4, 5};\n-  struct value_t v3 = {6, 7, 8};\n-  struct value_t v4 = {9, 0, 1};\n-  struct value_t v5 = {2, 3, 4};\n-  struct value_t v6 = {5, 6, 7};\n+  struct my_key_t k1 = {3, 4};\n+  struct my_key_t k2 = {4, 5};\n+  struct my_key_t k3 = {5, 6};\n+  struct my_key_t k4 = {6, 7};\n+  struct my_key_t k5 = {7, 8};\n+  struct my_key_t k6 = {8, 9};\n+  struct my_value_t v1 = {0, 1, 2};\n+  struct my_value_t v2 = {3, 4, 5};\n+  struct my_value_t v3 = {6, 7, 8};\n+  struct my_value_t v4 = {9, 0, 1};\n+  struct my_value_t v5 = {2, 3, 4};\n+  struct my_value_t v6 = {5, 6, 7};\n   add_map_element (m1, k1, v1);\n   add_map_element (m1, k2, v2);\n   add_map_element (m1, k3, v3);"
    }
  ]
}