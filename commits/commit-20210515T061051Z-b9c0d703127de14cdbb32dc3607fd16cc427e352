{
  "sha": "b9c0d703127de14cdbb32dc3607fd16cc427e352",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjljMGQ3MDMxMjdkZTE0Y2RiYjMyZGMzNjA3ZmQxNmNjNDI3ZTM1Mg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T06:10:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-05-15T06:10:51Z"
    },
    "message": "process_cu_tu_index\n\n\t* dwarf.c (process_cu_tu_index): Avoid pointer UB.  Use _mul_overflow.\n\tDelete dead code.",
    "tree": {
      "sha": "9b4639466386d1fd49df35a9f89df7a0ef365fe8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9b4639466386d1fd49df35a9f89df7a0ef365fe8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b9c0d703127de14cdbb32dc3607fd16cc427e352",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9c0d703127de14cdbb32dc3607fd16cc427e352",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b9c0d703127de14cdbb32dc3607fd16cc427e352",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9c0d703127de14cdbb32dc3607fd16cc427e352/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb19bf12693b2790ab92a1291279269ab8712168",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb19bf12693b2790ab92a1291279269ab8712168",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bb19bf12693b2790ab92a1291279269ab8712168"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 14,
    "deletions": 27
  },
  "files": [
    {
      "sha": "3819a42719e6c66d5cc79e16e1d3ba6d7532b8f4",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9c0d703127de14cdbb32dc3607fd16cc427e352/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9c0d703127de14cdbb32dc3607fd16cc427e352/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=b9c0d703127de14cdbb32dc3607fd16cc427e352",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* dwarf.c (process_cu_tu_index): Avoid pointer UB.  Use _mul_overflow.\n+\tDelete dead code.\n+\n 2021-05-15  Alan Modra  <amodra@gmail.com>\n \n \t* dwarf.c (display_gdb_index): Avoid pointer UB and overflow in"
    },
    {
      "sha": "beac2260768d47ac0fb512634e481e0cdf7f344e",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 9,
      "deletions": 27,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9c0d703127de14cdbb32dc3607fd16cc427e352/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9c0d703127de14cdbb32dc3607fd16cc427e352/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=b9c0d703127de14cdbb32dc3607fd16cc427e352",
      "patch": "@@ -10320,6 +10320,7 @@ process_cu_tu_index (struct dwarf_section *section, int do_display)\n   unsigned int i;\n   unsigned int j;\n   dwarf_vma signature;\n+  size_t total;\n \n   /* PR 17512: file: 002-168123-0.004.  */\n   if (phdr == NULL)\n@@ -10357,10 +10358,8 @@ process_cu_tu_index (struct dwarf_section *section, int do_display)\n     }\n \n   /* PR 17531: file: 45d69832.  */\n-  if ((size_t) nslots * 8 / 8 != nslots\n-      || phash < phdr || phash > limit\n-      || pindex < phash || pindex > limit\n-      || ppool < pindex || ppool > limit)\n+  if (_mul_overflow ((size_t) nslots, 12, &total)\n+      || total > (size_t) (limit - phash))\n     {\n       warn (ngettext (\"Section %s is too small for %u slot\\n\",\n \t\t      \"Section %s is too small for %u slots\\n\",\n@@ -10427,23 +10426,21 @@ process_cu_tu_index (struct dwarf_section *section, int do_display)\n       unsigned char *pi = pindex;\n       unsigned char *poffsets = ppool + (size_t) ncols * 4;\n       unsigned char *psizes = poffsets + (size_t) nused * ncols * 4;\n-      unsigned char *pend = psizes + (size_t) nused * ncols * 4;\n       bool is_tu_index;\n       struct cu_tu_set *this_set = NULL;\n       unsigned int row;\n       unsigned char *prow;\n+      size_t temp;\n \n       is_tu_index = strcmp (section->name, \".debug_tu_index\") == 0;\n \n       /* PR 17531: file: 0dd159bf.\n \t Check for integer overflow (can occur when size_t is 32-bit)\n \t with overlarge ncols or nused values.  */\n-      if (ncols > 0\n-\t  && ((size_t) ncols * 4 / 4 != ncols\n-\t      || (size_t) nused * ncols * 4 / ((size_t) ncols * 4) != nused\n-\t      || poffsets < ppool || poffsets > limit\n-\t      || psizes < poffsets || psizes > limit\n-\t      || pend < psizes || pend > limit))\n+      if (nused == -1u\n+\t  || _mul_overflow ((size_t) ncols, 4, &temp)\n+\t  || _mul_overflow ((size_t) nused + 1, temp, &total)\n+\t  || total > (size_t) (limit - ppool))\n \t{\n \t  warn (_(\"Section %s too small for offset and size tables\\n\"),\n \t\tsection->name);\n@@ -10502,25 +10499,10 @@ process_cu_tu_index (struct dwarf_section *section, int do_display)\n \t\t{\n \t\t  size_t num_copy = sizeof (uint64_t);\n \n-\t\t  /* PR 23064: Beware of buffer overflow.  */\n-\t\t  if (ph + num_copy < limit)\n-\t\t    memcpy (&this_set[row - 1].signature, ph, num_copy);\n-\t\t  else\n-\t\t    {\n-\t\t      warn (_(\"Signature (%p) extends beyond end of space in section\\n\"), ph);\n-\t\t      return 0;\n-\t\t    }\n+\t\t  memcpy (&this_set[row - 1].signature, ph, num_copy);\n \t\t}\n \n \t      prow = poffsets + (row - 1) * ncols * 4;\n-\t      /* PR 17531: file: b8ce60a8.  */\n-\t      if (prow < poffsets || prow > limit)\n-\t\t{\n-\t\t  warn (_(\"Row index (%u) * num columns (%u) > space remaining in section\\n\"),\n-\t\t\trow, ncols);\n-\t\t  return 0;\n-\t\t}\n-\n \t      if (do_display)\n \t\tprintf (_(\"  [%3d] 0x%s\"),\n \t\t\ti, dwarf_vmatoa (\"x\", signature));"
    }
  ]
}