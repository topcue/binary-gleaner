{
  "sha": "c59e30ed1727135f8efb79890f2c458f73709757",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzU5ZTMwZWQxNzI3MTM1ZjhlZmI3OTg5MGYyYzQ1OGY3MzcwOTc1Nw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T13:25:56Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-01-05T14:53:40Z"
    },
    "message": "libctf: new testsuite\n\nThis introduces a new lookup testsuite under libctf, which operates by\ncompiling (with libtool) a \"lookup\" .c file that uses libctf to analyze\nsome other program, then compiling some number of test object files with\nCTF and optionally linking them together and running the lookup program\non the test object files (or linked test binary), before diffing the\nresult much as run_dump_test does.\n\nThis lets us test the portions of libctf that are not previously\ntestable, notably the portions that do lookup on linked output and\nthat create dynamic dictionaries and then do lookup on them before\nwriting them out, something that is not tested by the ld-ctf testsuite\nbecause the linker never does this.\n\nA couple of simple tests are added: one testing the functionality of\nenum lookups, and one testing that the recently-added commit adding\nextra paranoia to incomplete type handling doesn't break linking and\nthat the result of the link is an (otherwise-impossible) array of\nforward type in the shared CTF dict.\n\nChangeLog\n2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* Makefile.def (libctf): No longer no_check.  Checking depends on\n\tall-ld.\n\t* Makefile.in: Regenerated.\n\nlibctf/ChangeLog\n2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* Makefile.am (EXPECT): New.\n\t(RUNTEST): Likewise.\n\t(RUNTESTFLAGS): Likewise.\n\t(CC_FOR_TARGET): Likewise.\n\t(check-DEJAGNU): Likewise.\n\t(AUTOMAKE_OPTIONS): Add dejagnu.\n\t* Makefile.in: Regenerated.\n\t* testsuite/config/default.exp: New.\n\t* testsuite/lib/ctf-lib.exp: Likewise.\n\t* testsuite/libctf-lookup/enum.lk: New test.\n\t* testsuite/libctf-lookup/enum-ctf.c: New CTF input.\n\t* testsuite/libctf-lookup/enum.c: New lookup test.\n\t* testsuite/libctf-lookup/ambiguous-struct*.c: New test.\n\t* testsuite/libctf-lookup/lookup.exp: New.",
    "tree": {
      "sha": "ed4d06b6438829589f49f3141791debf18b95149",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed4d06b6438829589f49f3141791debf18b95149"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c59e30ed1727135f8efb79890f2c458f73709757",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c59e30ed1727135f8efb79890f2c458f73709757",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c59e30ed1727135f8efb79890f2c458f73709757",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c59e30ed1727135f8efb79890f2c458f73709757/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1038406a8f6609ad0a449746da70393b0835f699",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1038406a8f6609ad0a449746da70393b0835f699",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1038406a8f6609ad0a449746da70393b0835f699"
    }
  ],
  "stats": {
    "total": 863,
    "additions": 837,
    "deletions": 26
  },
  "files": [
    {
      "sha": "5831a32b9af10701ac38e610ae1357a9ae2cb99b",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.def (libctf): No longer no_check.  Checking depends on\n+\tall-ld.\n+\t* Makefile.in: Regenerated.\n+\n 2021-01-05  Nick Clifton  <nickc@redhat.com>\n \n \t* libiberty: Sync with gcc.  Bring in:"
    },
    {
      "sha": "cc429aa8628549b1baeea92a301c27676391c61c",
      "filename": "Makefile.def",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/Makefile.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/Makefile.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/Makefile.def?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -131,8 +131,7 @@ host_modules= { module= lto-plugin; bootstrap=true;\n \t\textra_make_flags='@extra_linker_plugin_flags@'; };\n host_modules= { module= libcc1; extra_configure_flags=--enable-shared; };\n host_modules= { module= gotools; };\n-host_modules= { module= libctf; no_check=true;\n-\t\tbootstrap=true; };\n+host_modules= { module= libctf; bootstrap=true; };\n \n target_modules = { module= libstdc++-v3;\n \t\t   bootstrap=true;\n@@ -547,6 +546,7 @@ dependencies = { module=configure-libctf; on=all-bfd; };\n dependencies = { module=configure-libctf; on=all-intl; };\n dependencies = { module=configure-libctf; on=all-zlib; };\n dependencies = { module=configure-libctf; on=all-libiconv; };\n+dependencies = { module=check-libctf; on=all-ld; };\n \n // The Makefiles in gdb and gdbserver pull in a file that configure\n // generates in the gnulib directory, so distclean gnulib only after"
    },
    {
      "sha": "4fe7321786ea3321fb485647225c3c00b34d7aa9",
      "filename": "Makefile.in",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/Makefile.in?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -34761,6 +34761,12 @@ maybe-check-libctf:\n maybe-check-libctf: check-libctf\n \n check-libctf:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) $(EXTRA_HOST_EXPORTS) \\\n+\t(cd $(HOST_SUBDIR)/libctf && \\\n+\t  $(MAKE) $(FLAGS_TO_PASS)  $(EXTRA_BOOTSTRAP_FLAGS) check)\n \n @endif libctf\n \n@@ -52366,6 +52372,13 @@ configure-stage3-libctf: maybe-all-stage3-libiconv\n configure-stage4-libctf: maybe-all-stage4-libiconv\n configure-stageprofile-libctf: maybe-all-stageprofile-libiconv\n configure-stagefeedback-libctf: maybe-all-stagefeedback-libiconv\n+check-libctf: maybe-all-ld\n+check-stage1-libctf: maybe-all-stage1-ld\n+check-stage2-libctf: maybe-all-stage2-ld\n+check-stage3-libctf: maybe-all-stage3-ld\n+check-stage4-libctf: maybe-all-stage4-ld\n+check-stageprofile-libctf: maybe-all-stageprofile-ld\n+check-stagefeedback-libctf: maybe-all-stagefeedback-ld\n distclean-gnulib: maybe-distclean-gdb\n distclean-gnulib: maybe-distclean-gdbserver\n all-bison: maybe-all-build-texinfo"
    },
    {
      "sha": "42ca1c61491de2512257f147d78e3dc80da65e9d",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -1,3 +1,20 @@\n+2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* Makefile.am (EXPECT): New.\n+\t(RUNTEST): Likewise.\n+\t(RUNTESTFLAGS): Likewise.\n+\t(CC_FOR_TARGET): Likewise.\n+\t(check-DEJAGNU): Likewise.\n+\t(AUTOMAKE_OPTIONS): Add dejagnu.\n+\t* Makefile.in: Regenerated.\n+\t* testsuite/config/default.exp: New.\n+\t* testsuite/lib/ctf-lib.exp: Likewise.\n+\t* testsuite/libctf-lookup/enum.lk: New test.\n+\t* testsuite/libctf-lookup/enum-ctf.c: New CTF input.\n+\t* testsuite/libctf-lookup/enum.c: New lookup test.\n+\t* testsuite/libctf-lookup/ambiguous-struct*.c: New test.\n+\t* testsuite/libctf-lookup/lookup.exp: New.\n+\n 2021-01-05  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* configure.ac (BFD_LIBADD): Remove."
    },
    {
      "sha": "3fe1994d96e652b58c0acccbb8063d5d5dfc9af5",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 34,
      "deletions": 1,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -19,7 +19,7 @@\n \n ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd\n \n-AUTOMAKE_OPTIONS = foreign no-texinfo.tex\n+AUTOMAKE_OPTIONS = dejagnu foreign no-texinfo.tex\n \n # This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n # -I../zlib, unless we were configured with --with-system-zlib, in which\n@@ -54,3 +54,36 @@ libctf_la_LIBADD = ../bfd/libbfd.la $(libctf_nobfd_la_LIBADD)\n libctf_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=0\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n+\n+# Setup the testing framework, if you have one\n+EXPECT = expect\n+RUNTEST = runtest\n+RUNTESTFLAGS =\n+\n+CC_FOR_TARGET = ` \\\n+  if [ -f $$r/../gcc/xgcc ] ; then \\\n+    if [ -f $$r/../newlib/Makefile ] ; then \\\n+      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \\\n+    else \\\n+      echo $$r/../gcc/xgcc -B$$r/../gcc/; \\\n+    fi; \\\n+  else \\\n+    if [ \"@host@\" = \"@target@\" ] ; then \\\n+      echo $(CC); \\\n+    else \\\n+      echo gcc | sed '$(transform)'; \\\n+    fi; \\\n+  fi`\n+\n+check-DEJAGNU: site.exp\n+\tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n+\tr=`pwd`; export r; \\\n+\tLC_ALL=C; export LC_ALL; \\\n+\tEXPECT=$(EXPECT); export EXPECT; \\\n+\truntest=$(RUNTEST); \\\n+\tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n+\t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n+\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n+\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(LIBS)\" $(RUNTESTFLAGS); \\\n+\telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n+\tfi"
    },
    {
      "sha": "c86ac7b2b68ccbadf983b545c3e91a31caa1c25a",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 90,
      "deletions": 23,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -278,6 +278,8 @@ ETAGS = etags\n CTAGS = ctags\n CSCOPE = cscope\n AM_RECURSIVE_TARGETS = cscope\n+DEJATOOL = $(PACKAGE)\n+RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir\n am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \\\n \t$(top_srcdir)/../ar-lib $(top_srcdir)/../compile \\\n \t$(top_srcdir)/../config.guess $(top_srcdir)/../config.sub \\\n@@ -439,7 +441,7 @@ warn = @warn@\n zlibdir = @zlibdir@\n zlibinc = @zlibinc@\n ACLOCAL_AMFLAGS = -I .. -I ../config -I ../bfd\n-AUTOMAKE_OPTIONS = foreign no-texinfo.tex\n+AUTOMAKE_OPTIONS = dejagnu foreign no-texinfo.tex\n \n # This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n # -I../zlib, unless we were configured with --with-system-zlib, in which\n@@ -464,6 +466,26 @@ libctf_la_LIBADD = ../bfd/libbfd.la $(libctf_nobfd_la_LIBADD)\n libctf_la_CPPFLAGS = $(AM_CPPFLAGS) -DNOBFD=0\n libctf_la_LDFLAGS = $(libctf_nobfd_la_LDFLAGS)\n libctf_la_SOURCES = $(libctf_nobfd_la_SOURCES) ctf-open-bfd.c\n+\n+# Setup the testing framework, if you have one\n+EXPECT = expect\n+RUNTEST = runtest\n+RUNTESTFLAGS = \n+CC_FOR_TARGET = ` \\\n+  if [ -f $$r/../gcc/xgcc ] ; then \\\n+    if [ -f $$r/../newlib/Makefile ] ; then \\\n+      echo $$r/../gcc/xgcc -B$$r/../gcc/ -idirafter $$r/../newlib/targ-include -idirafter $${srcroot}/../newlib/libc/include -nostdinc; \\\n+    else \\\n+      echo $$r/../gcc/xgcc -B$$r/../gcc/; \\\n+    fi; \\\n+  else \\\n+    if [ \"@host@\" = \"@target@\" ] ; then \\\n+      echo $(CC); \\\n+    else \\\n+      echo gcc | sed '$(transform)'; \\\n+    fi; \\\n+  fi`\n+\n all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -966,6 +988,36 @@ cscopelist-am: $(am__tagged_files)\n distclean-tags:\n \t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n \t-rm -f cscope.out cscope.in.out cscope.po.out cscope.files\n+site.exp: Makefile $(EXTRA_DEJAGNU_SITE_CONFIG)\n+\t@echo 'Making a new site.exp file ...'\n+\t@echo '## these variables are automatically generated by make ##' >site.tmp\n+\t@echo '# Do not edit here.  If you wish to override these values' >>site.tmp\n+\t@echo '# edit the last section' >>site.tmp\n+\t@echo 'set srcdir \"$(srcdir)\"' >>site.tmp\n+\t@echo \"set objdir `pwd`\" >>site.tmp\n+\t@echo 'set build_alias \"$(build_alias)\"' >>site.tmp\n+\t@echo 'set build_triplet $(build_triplet)' >>site.tmp\n+\t@echo 'set host_alias \"$(host_alias)\"' >>site.tmp\n+\t@echo 'set host_triplet $(host_triplet)' >>site.tmp\n+\t@list='$(EXTRA_DEJAGNU_SITE_CONFIG)'; for f in $$list; do \\\n+\t  echo \"## Begin content included from file $$f.  Do not modify. ##\" \\\n+\t   && cat `test -f \"$$f\" || echo '$(srcdir)/'`$$f \\\n+\t   && echo \"## End content included from file $$f. ##\" \\\n+\t   || exit 1; \\\n+\t done >> site.tmp\n+\t@echo \"## End of auto-generated content; you can edit from here. ##\" >> site.tmp\n+\t@if test -f site.exp; then \\\n+\t   sed -e '1,/^## End of auto-generated content.*##/d' site.exp >> site.tmp; \\\n+\t fi\n+\t@-rm -f site.bak\n+\t@test ! -f site.exp || mv site.exp site.bak\n+\t@mv site.tmp site.exp\n+\n+distclean-DEJAGNU:\n+\t-rm -f site.exp site.bak\n+\t-l='$(DEJATOOL)'; for tool in $$l; do \\\n+\t  rm -f $$tool.sum $$tool.log; \\\n+\tdone\n \n distdir: $(DISTFILES)\n \t$(am__remove_distdir)\n@@ -1131,6 +1183,7 @@ distcleancheck: distclean\n \t       $(distcleancheck_listfiles) ; \\\n \t       exit 1; } >&2\n check-am: all-am\n+\t$(MAKE) $(AM_MAKEFLAGS) check-DEJAGNU\n check: check-am\n all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h\n installdirs:\n@@ -1176,8 +1229,9 @@ distclean: distclean-am\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf ./$(DEPDIR)\n \t-rm -f Makefile\n-distclean-am: clean-am distclean-compile distclean-generic \\\n-\tdistclean-hdr distclean-libtool distclean-tags\n+distclean-am: clean-am distclean-DEJAGNU distclean-compile \\\n+\tdistclean-generic distclean-hdr distclean-libtool \\\n+\tdistclean-tags\n \n dvi: dvi-am\n \n@@ -1241,30 +1295,43 @@ ps-am:\n \n uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n \n-.MAKE: all install-am install-strip\n-\n-.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \\\n-\tclean-cscope clean-generic clean-libLTLIBRARIES clean-libtool \\\n-\tclean-noinstLTLIBRARIES cscope cscopelist-am ctags ctags-am \\\n-\tdist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \\\n-\tdist-tarZ dist-xz dist-zip distcheck distclean \\\n-\tdistclean-compile distclean-generic distclean-hdr \\\n-\tdistclean-libtool distclean-tags distcleancheck distdir \\\n-\tdistuninstallcheck dvi dvi-am html html-am info info-am \\\n-\tinstall install-am install-data install-data-am install-dvi \\\n-\tinstall-dvi-am install-exec install-exec-am install-html \\\n-\tinstall-html-am install-includeHEADERS install-info \\\n-\tinstall-info-am install-libLTLIBRARIES install-man install-pdf \\\n-\tinstall-pdf-am install-ps install-ps-am install-strip \\\n-\tinstallcheck installcheck-am installdirs maintainer-clean \\\n-\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n-\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n-\ttags tags-am uninstall uninstall-am uninstall-includeHEADERS \\\n-\tuninstall-libLTLIBRARIES\n+.MAKE: all check-am install-am install-strip\n+\n+.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-DEJAGNU \\\n+\tcheck-am clean clean-cscope clean-generic clean-libLTLIBRARIES \\\n+\tclean-libtool clean-noinstLTLIBRARIES cscope cscopelist-am \\\n+\tctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \\\n+\tdist-shar dist-tarZ dist-xz dist-zip distcheck distclean \\\n+\tdistclean-DEJAGNU distclean-compile distclean-generic \\\n+\tdistclean-hdr distclean-libtool distclean-tags distcleancheck \\\n+\tdistdir distuninstallcheck dvi dvi-am html html-am info \\\n+\tinfo-am install install-am install-data install-data-am \\\n+\tinstall-dvi install-dvi-am install-exec install-exec-am \\\n+\tinstall-html install-html-am install-includeHEADERS \\\n+\tinstall-info install-info-am install-libLTLIBRARIES \\\n+\tinstall-man install-pdf install-pdf-am install-ps \\\n+\tinstall-ps-am install-strip installcheck installcheck-am \\\n+\tinstalldirs maintainer-clean maintainer-clean-generic \\\n+\tmostlyclean mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \\\n+\tuninstall-am uninstall-includeHEADERS uninstall-libLTLIBRARIES\n \n .PRECIOUS: Makefile\n \n \n+check-DEJAGNU: site.exp\n+\tsrcroot=`cd $(srcdir) && pwd`; export srcroot; \\\n+\tr=`pwd`; export r; \\\n+\tLC_ALL=C; export LC_ALL; \\\n+\tEXPECT=$(EXPECT); export EXPECT; \\\n+\truntest=$(RUNTEST); \\\n+\tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n+\t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n+\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n+\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(LIBS)\" $(RUNTESTFLAGS); \\\n+\telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n+\tfi\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"
    },
    {
      "sha": "d14f66025b4052158c13f0047bda35286945b7d2",
      "filename": "libctf/testsuite/config/default.exp",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/config/default.exp?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,59 @@\n+# Basic expect script for libctf lookup tests\n+#   Copyright (C) 1993-2021 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+# Written by Jeffrey Wheat (cassidy@cygnus.com)\n+#\n+\n+if ![info exists ld] then {\n+    set ld [findfile $base_dir/../ld/ld-new $base_dir/../ld/ld-new [transform ld]]\n+}\n+\n+if ![info exists as] then {\n+    set as [findfile $base_dir/../gas/as-new $base_dir/../gas/as-new [transform as]]\n+}\n+\n+remote_exec host \"mkdir -p tmpdir\"\n+\n+# Make symlinks from tmpdir/libctf to the linker and assembler in the\n+# build tree, so that we can use a -B option to gcc to force it to use\n+# the newly built linker and assembler.\n+if {![file isdirectory tmpdir/libctf]} then {\n+    catch \"exec mkdir tmpdir/libctf\" status\n+    catch \"exec ln -s ../../../ld/ld-new tmpdir/libctf/ld\" status\n+    catch \"exec ln -s ld tmpdir/libctf/collect-ld\" status\n+    catch \"exec ln -s ../../../gas/as-new tmpdir/libctf/as\" status\n+}\n+set gcc_B_opt \"-B[pwd]/tmpdir/libctf/\"\n+\n+# The \"make check\" target in the Makefile passes in\n+# \"CC=$(CC_FOR_TARGET)\".  But, if the user invokes runtest directly,\n+# these flags may not be set.\n+if {![info exists CC]} {\n+    set CC [find_gcc]\n+}\n+if {![info exists CC_FOR_HOST]} {\n+    set CC_FOR_HOST $CC\n+}\n+if {![info exists CFLAGS]} {\n+    set CFLAGS \"-g -O2\"\n+}\n+\n+# load the utility procedures\n+load_lib ctf-lib.exp"
    },
    {
      "sha": "796342b96de1c102d3cab9a6b5b736a997ed26e5",
      "filename": "libctf/testsuite/lib/ctf-lib.exp",
      "status": "added",
      "additions": 409,
      "deletions": 0,
      "changes": 409,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/lib/ctf-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/lib/ctf-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/lib/ctf-lib.exp?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,409 @@\n+# Support routines for libctf testsuite.\n+#   Copyright (C) 1994-2021 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This file is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+\n+proc load_common_lib { name } {\n+    global srcdir\n+    load_file $srcdir/../../binutils/testsuite/lib/$name\n+}\n+\n+load_common_lib binutils-common.exp\n+\n+proc run_native_host_cmd { command } {\n+    global link_output\n+    global ld\n+\n+    verbose -log \"$command\"\n+    set run_output \"\"\n+    try {\n+\tset run_output [exec \"sh\" \"-c\" \"$command\" \"2>@1\"]\n+\tset status 0\n+    } trap CHILDSTATUS {results options} {\n+\tset status [lindex [dict get $options -errorcode] 2]\n+\tset run_output $results\n+    }\n+    regsub \"\\n$\" $run_output \"\" run_output\n+    if { [lindex $status 0] != 0 && [string match \"\" $run_output] } then {\n+\tappend run_output \"child process exited abnormally\"\n+    }\n+\n+    if [string match \"\" $run_output] then {\n+\treturn \"\"\n+    }\n+\n+    verbose -log \"$run_output\"\n+    return \"$run_output\"\n+}\n+\n+proc run_host_cmd { prog command } {\n+    global link_output\n+    global gcc_B_opt\n+    global gcc_ld_B_opt_tested\n+    global ld\n+\n+    if { ![is_remote host] && [which \"$prog\"] == 0 } then {\n+\tperror \"$prog does not exist\"\n+\treturn 0\n+    }\n+\n+    # If we are compiling with gcc, we want to add gcc_B_opt to flags.  However,\n+    # if $prog already has -B options, which might be the case when running gcc\n+    # out of a build directory, we want our -B options to come first.\n+    set gccexe $prog\n+    set gccparm [string first \" \" $gccexe]\n+    set gccflags \"\"\n+    if { $gccparm > 0 } then {\n+\tset gccflags [string range $gccexe $gccparm end]\n+\tset gccexe [string range $gccexe 0 $gccparm]\n+\tset prog $gccexe\n+    }\n+    set gccexe [string replace $gccexe 0 [string last \"/\" $gccexe] \"\"]\n+    if {[string match \"*cc*\" $gccexe] || [string match \"*++*\" $gccexe]} then {\n+\tset gccflags \"$gcc_B_opt $gccflags\"\n+\tif {![info exists gcc_ld_B_opt_tested]} {\n+\t    set gcc_ld_B_opt_tested 1\n+\t    set ld_version_message [run_host_cmd \"$ld\" \"--version\"]\n+\t    set gcc_ld_version_message [run_host_cmd \"$prog\" \"$gccflags -Wl,--version\"]\n+\t    if {[string first $ld_version_message $gcc_ld_version_message] < 0} {\n+\t\tperror \"************************************************************************\"\n+\t\tperror \"Your compiler driver ignores -B when choosing ld.\"\n+\t\tperror \"You will not be testing the new ld in many of the following tests.\"\n+\t\tset gcc_ld_version [run_host_cmd \"$prog\" \"$gccflags --print-prog-name=ld\"]\n+\t\tif {![string match \"\" $gcc_ld_version] && ![string match \"ld\" $gcc_ld_version]} {\n+\t\t    perror \"It seems you will be testing $gcc_ld_version instead.\"\n+\t\t}\n+\t\tperror \"************************************************************************\"\n+\t    }\n+\t}\n+    }\n+\n+    verbose -log \"$prog $gccflags $command\"\n+    set status [remote_exec host [concat sh -c [list \"$prog $gccflags $command 2>&1\"]] \"\" \"/dev/null\" \"libctf.tmp\"]\n+    remote_upload host \"libctf.tmp\"\n+    set run_output [file_contents \"libctf.tmp\"]\n+    regsub \"\\n$\" $run_output \"\" run_output\n+    if { [lindex $status 0] != 0 && [string match \"\" $run_output] } then {\n+\tappend run_output \"child process exited abnormally\"\n+    }\n+    remote_file build delete libctf.tmp\n+    remote_file host delete libctf.tmp\n+\n+    if [string match \"\" $run_output] then {\n+\treturn \"\"\n+    }\n+\n+    verbose -log \"$run_output\"\n+    return \"$run_output\"\n+}\n+\n+proc run_host_cmd_yesno { prog command } {\n+    global exec_output\n+    global errcnt warncnt\n+\n+    set exec_output [prune_warnings [run_host_cmd \"$prog\" \"$command\"]]\n+    # Ignore error and warning.\n+    set errcnt 0\n+    set warncnt 0\n+    if [string match \"\" $exec_output] then {\n+\treturn 1;\n+    }\n+    return 0;\n+}\n+\n+# Return true if we can build a program with the compiler.\n+# On some targets, CC might be defined, but libraries and startup\n+# code might be missing or require special options that the ld test\n+# harness doesn't know about.\n+\n+proc check_compiler_available { } {\n+    global compiler_available_saved\n+    global CC\n+\n+    if {![info exists compiler_available_saved]} {\n+\tif { [which $CC] == 0 } {\n+\t    set compiler_available_saved 0\n+\t    return 0\n+\t}\n+\n+\tset flags \"\"\n+\tif [board_info [target_info name] exists cflags] {\n+\t    append flags \" [board_info [target_info name] cflags]\"\n+\t}\n+\tif [board_info [target_info name] exists ldflags] {\n+\t    append flags \" [board_info [target_info name] ldflags]\"\n+\t}\n+\n+\tset basename \"tmpdir/compiler[pid]\"\n+\tset src ${basename}.c\n+\tset output ${basename}.out\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main (void)\"\n+\tputs $f \"{\"\n+\tputs $f \"  return 0; \"\n+\tputs $f \"}\"\n+\tclose $f\n+\tif [is_remote host] {\n+\t    set src [remote_download host $src]\n+\t}\n+\tset compiler_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src -o $output\"]\n+\tremote_file host delete $src\n+\tremote_file host delete $output\n+\tfile delete $src\n+    }\n+    return $compiler_available_saved\n+}\n+\n+# Compile and link a C source file for execution on the host.\n+proc compile_link_one_host_cc { src output additional_args } {\n+    global CC_FOR_HOST\n+    global CFLAGS\n+\n+    return [run_native_host_cmd \"./libtool --quiet --tag=CC --mode=link $CC_FOR_HOST $CFLAGS $src -o $output $additional_args\" ]\n+}\n+\n+# Compile a C source file, with the specified additional_flags.\n+proc compile_one_cc { src output additional_flags } {\n+    global CC\n+    global CFLAGS\n+\n+    set flags \"\"\n+    if [board_info [target_info name] exists cflags] {\n+\tappend flags \" [board_info [target_info name] cflags]\"\n+    }\n+    if [board_info [target_info name] exists ldflags] {\n+\tappend flags \" [board_info [target_info name] ldflags]\"\n+    }\n+\n+    if [is_remote host] {\n+\tset src [remote_download host $src]\n+    }\n+    return [run_host_cmd \"$CC\" \"$flags $CFLAGS $additional_flags $src -o $output\"]\n+}\n+\n+# run_lookup_test FILE\n+#\n+# Compile with the host compiler and link a .c file into a \"lookup\" binary, then\n+# compile and optionally link together a bunch of .s or .c files with CTF info\n+# and pass the name of the resulting binary to the \"lookup\" binary and check the\n+# output.  (If none is specified, the binary is expected to generate its own CTF\n+# for testing purposes.)\n+#\n+# As with run_dump_test, this is all driven by a file (in this case, a .lk file)\n+# beginning with zero or more option lines, which specify the names of the\n+# lookup binary's source file, the source file(s) with CTF info to compile\n+# together, and whether to link them.  The optional lines have the syntax:\n+#\n+#\t# OPTION: VALUE\n+#\n+# OPTION is the name of some option, like \"name\" or \"lookup\", and\n+# VALUE is OPTION's value.  The valid options are described below.\n+# Whitespace is ignored everywhere, except within VALUE.  The option\n+# list ends with the first line that doesn't match the above syntax.\n+# However, a line within the options that begins with a #, but doesn't\n+# have a recognizable option name followed by a colon, is considered a\n+# comment and entirely ignored.\n+#\n+# The interesting options are:\n+#\n+#   name: TEST-NAME\n+#\tThe name of this test, passed to DejaGNU's `pass' and `fail'\n+#\tcommands.  If omitted, this defaults to FILE, the root of the\n+#\tlookup .c file's name.\n+#\n+#   lookup: SOURCE\n+#\tCompile the file SOURCE.c.  If omitted, the lookup source defaults\n+#\tto FILE.c.\n+#\n+#   source: SOURCE\n+#\tAssemble the file SOURCE.c and pass it to the LOOKUP program.\n+#\n+#   link:\n+#\tIf set, link the SOURCE together even if only one file is specified.\n+#\n+#   link_flags:\n+#\tIf set, extra flags to pass to the linker.\n+#\n+#   xfail: GLOB|PROC ...\n+#\tThis test is expected to fail on a specified list of targets.\n+#\n+# Each option may occur at most once unless otherwise mentioned.\n+#\n+# After the option lines come regexp lines.  run_lookup_test calls\n+# regexp_diff to compare the output of the lookup program against the\n+# regexps in FILE.d.\n+#\n+proc run_lookup_test { name } {\n+    global CC CFLAGS LIBS\n+    global copyfile env runtests srcdir subdir verbose\n+\n+    if ![runtest_file_p $runtests $name] then {\n+\treturn\n+    }\n+\n+    if [string match \"*/*\" $name] {\n+\tset file $name\n+\tset name [file tail $name]\n+    } else {\n+\tset file \"$srcdir/$subdir/$name\"\n+    }\n+\n+    set opt_array [slurp_options \"${file}.lk\"]\n+    if { $opt_array == -1 } {\n+\tperror \"error reading options from $file.lk\"\n+\tunresolved $subdir/$name\n+\treturn\n+    }\n+    set run_ld 0\n+    set opts(link) {}\n+    set opts(link_flags) {}\n+    set opts(lookup) {}\n+    set opts(name) {}\n+    set opts(source) {}\n+    set opts(xfail) {}\n+\n+    foreach i $opt_array {\n+\tset opt_name [lindex $i 0]\n+\tset opt_val [lindex $i 1]\n+\tif { $opt_name == \"\" } {\n+\t    set in_extra 1\n+\t    continue\n+\t}\n+\tif ![info exists opts($opt_name)] {\n+\t    perror \"unknown option $opt_name in file $file.lk\"\n+\t    unresolved $subdir/$name\n+\t    return\n+\t}\n+\n+\tset opts($opt_name) [concat $opts($opt_name) $opt_val]\n+    }\n+\n+    if { [llength $opts(lookup)] == 0 } {\n+\tset opts(lookup) \"$file.c\"\n+    } else {\n+\tset opts(lookup) \"[file dirname $file]/$opts(lookup)\"\n+    }\n+\n+    if { [llength $opts(name)] == 0 } {\n+\tset opts(name) $opts(lookup)\n+    }\n+\n+    if { [llength $opts(link)] != 0\n+\t || [llength $opts(source)] > 1 } {\n+\tset run_ld 1\n+    }\n+\n+    set testname $opts(name)\n+    if { $opts(name) == \"\" } {\n+\tset testname \"$subdir/$name\"\n+    }\n+\n+    # Compile and link the lookup program.\n+    set comp_output [compile_link_one_host_cc $opts(lookup) \"tmpdir/lookup\" \"libctf.la\"]\n+\n+    if { $comp_output != \"\"} {\n+\tsend_log \"compilation of lookup program $opts(lookup) failed with <$comp_output>\"\n+\tperror \"compilation of lookup program $opts(lookup) failed\"\n+\tfail $testname\n+\treturn 0\n+    }\n+\n+    # Compile the inputs and posibly link them together.\n+\n+    set lookup_output \"\"\n+    if { [llength $opts(source)] > 0 } {\n+\tset lookup_flags \"\"\n+\tif { $run_ld } {\n+\t    set lookup_output \"tmpdir/out.so\"\n+\t    set lookup_flags \"-gt -fPIC -shared $opts(link_flags)\"\n+\t} else {\n+\t    set lookup_output \"tmpdir/out.o\"\n+\t    set lookup_flags \"-gt -fPIC -c\"\n+\t}\n+\tif [board_info [target_info name] exists cflags] {\n+\t    append lookup_flags \" [board_info [target_info name] cflags]\"\n+\t}\n+\tif [board_info [target_info name] exists ldflags] {\n+\t    append lookup_flags \" [board_info [target_info name] ldflags]\"\n+\t}\n+\tset src {}\n+\tforeach sfile $opts(source) {\n+\t    if [is_remote host] {\n+\t\tlappend src [remote_download host [file join [file dirname $file] $sfile]]\n+\t    } else {\n+\t\tlappend src [file join [file dirname $file] $sfile]\n+\t    }\n+\t}\n+\n+\tset comp_output [run_host_cmd \"$CC\" \"$CFLAGS $lookup_flags [concat $src] -o $lookup_output\"]\n+\n+\tif { $comp_output != \"\"} {\n+\t    send_log \"compilation of CTF program [concat $src] failed with <$comp_output>\"\n+\t    fail $testname\n+\t    return 0\n+\t}\n+    }\n+\n+    # Time to setup xfailures.\n+    foreach targ $opts(xfail) {\n+\tif [match_target $targ] {\n+\t    setup_xfail \"*-*-*\"\n+\t    break\n+\t}\n+    }\n+\n+    # Invoke the lookup program on the outputs.\n+\n+    set results [run_host_cmd tmpdir/lookup $lookup_output]\n+\n+    set f [open \"tmpdir/lookup.out\" \"w\"]\n+    puts $f $results\n+    close $f\n+\n+    if { [regexp_diff \"tmpdir/lookup.out\" \"${file}.lk\"] } then {\n+\tfail $testname\n+\tif { $verbose == 2 } then { verbose \"output is [file_contents tmpdir/lookup.out]\" 2 }\n+\treturn 0\n+    }\n+\n+    pass $testname\n+    return 0\n+}\n+\n+# Returns true if the target compiler supports -gt\n+proc check_ctf_available { } {\n+    global ctf_available_saved\n+\n+    if {![info exists ctf_available_saved]} {\n+\tif { ![check_compiler_available] } {\n+\t    set ctf_available_saved 0\n+\t} else {\n+\t    set basename \"tmpdir/ctf_available[pid]\"\n+\t    set src ${basename}.c\n+\t    set output ${basename}.o\n+\t    set f [open $src \"w\"]\n+\t    puts $f \"int main() { return 0; }\"\n+\t    close $f\n+\t    set ctf_available_saved [compile_one_cc $src $output \"-gt -c\"]\n+\t    remote_file host delete $src\n+\t    remote_file host delete $output\n+\t    file delete $src\n+\t}\n+    }\n+    return $ctf_available_saved\n+}"
    },
    {
      "sha": "67047c4411bfda7b34f92946ad7b871a4f2e6f78",
      "filename": "libctf/testsuite/libctf-lookup/ambiguous-struct-A.c",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct-A.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct-A.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/ambiguous-struct-A.c?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,8 @@\n+struct A;\n+struct B { struct A *a; };\n+struct A { struct B b; long foo; long bar; struct B b2; };\n+\n+typedef struct A a_array[50];\n+a_array *foo __attribute__((__used__));\n+\n+static struct A a __attribute ((__used__));"
    },
    {
      "sha": "95a9346963f1cd9f2ae4a845d897809265b712db",
      "filename": "libctf/testsuite/libctf-lookup/ambiguous-struct-B.c",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct-B.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct-B.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/ambiguous-struct-B.c?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,5 @@\n+struct A;\n+struct B { struct A *a; };\n+struct A { struct B b; int foo; struct B b2; };\n+\n+static struct A a __attribute__((__used__));"
    },
    {
      "sha": "05b471e506b8c55ff1ef2c66b83d013be0d6f609",
      "filename": "libctf/testsuite/libctf-lookup/ambiguous-struct.c",
      "status": "added",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/ambiguous-struct.c?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,51 @@\n+/* Test ambiguous forward lookups post-deduplication.\n+\n+   This also makes sure that deduplication succeeds in this case and does not\n+   throw spurious errors.  */\n+\n+#include <ctf-api.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  ctf_dict_t *fp;\n+  ctf_archive_t *ctf;\n+  ctf_id_t type;\n+  ctf_arinfo_t ar;\n+  int err;\n+\n+  if (argc != 2)\n+    {\n+      fprintf (stderr, \"Syntax: %s PROGRAM\\n\", argv[0]);\n+      exit(1);\n+    }\n+\n+  if ((ctf = ctf_open (argv[1], NULL, &err)) == NULL)\n+    goto open_err;\n+  if ((fp = ctf_dict_open (ctf, NULL, &err)) == NULL)\n+    goto open_err;\n+\n+  /* Dig out the array type and resolve its element type.  */\n+\n+  if ((type = ctf_lookup_by_name (fp, \"a_array\") ) == CTF_ERR)\n+    goto err;\n+  if ((type = ctf_type_resolve (fp, type)) == CTF_ERR)\n+    goto err;\n+  if (ctf_array_info (fp, type, &ar) < 0)\n+    goto err;\n+  printf (\"Kind of array element is %i\\n\", ctf_type_kind (fp, ar.ctr_contents));\n+\n+  ctf_dict_close (fp);\n+  ctf_close (ctf);\n+\n+  return 0;\n+\n+ open_err:\n+  fprintf (stderr, \"%s: cannot open: %s\\n\", argv[0], ctf_errmsg (err));\n+  return 1;\n+ err:\n+  fprintf (stderr, \"Lookup failed: %s\\n\", ctf_errmsg (ctf_errno (fp)));\n+  return 1;\n+}"
    },
    {
      "sha": "84f296d76196fe3ae207e9170f48ad063736a795",
      "filename": "libctf/testsuite/libctf-lookup/ambiguous-struct.lk",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct.lk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/ambiguous-struct.lk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/ambiguous-struct.lk?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,4 @@\n+# source: ambiguous-struct-A.c\n+# source: ambiguous-struct-B.c\n+# link: on\n+Kind of array element is 9"
    },
    {
      "sha": "aa60d72722e6839da6373d90b57c56846731738c",
      "filename": "libctf/testsuite/libctf-lookup/enum-ctf.c",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum-ctf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum-ctf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/enum-ctf.c?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,8 @@\n+/* Looked up item by item. */\n+enum e { ENUMSAMPLE_1 = 0, ENUMSAMPLE_2 = 1 };\n+\n+/* Looked up via both sorts of iterator in turn.  */\n+enum ie { IENUMSAMPLE_1 = -10, IENUMSAMPLE_2, IENUMSAMPLE_3 };\n+\n+enum e foo;\n+enum ie bar;"
    },
    {
      "sha": "1804b23a69ed203804ee5b06b9e6ddc8545b3658",
      "filename": "libctf/testsuite/libctf-lookup/enum.c",
      "status": "added",
      "additions": 78,
      "deletions": 0,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/enum.c?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,78 @@\n+#include <ctf-api.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+static int\n+print_enum (const char *name, int val, void *unused)\n+{\n+  printf (\"iter test: %s has value %i\\n\", name, val);\n+  return 0;\n+}\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  ctf_dict_t *fp;\n+  ctf_archive_t *ctf;\n+  ctf_id_t type;\n+  const char *name;\n+  ctf_next_t *i = NULL;\n+  int val;\n+  int err;\n+\n+  if (argc != 2)\n+    {\n+      fprintf (stderr, \"Syntax: %s PROGRAM\\n\", argv[0]);\n+      exit(1);\n+    }\n+\n+  if ((ctf = ctf_open (argv[1], NULL, &err)) == NULL)\n+    goto open_err;\n+  if ((fp = ctf_dict_open (ctf, NULL, &err)) == NULL)\n+    goto open_err;\n+\n+  /* Try getting some enum values by hand.  */\n+\n+  if ((type = ctf_lookup_by_name (fp, \"enum e\") ) == CTF_ERR)\n+    goto err;\n+  if (ctf_enum_value (fp, type, \"ENUMSAMPLE_1\", &val) < 0)\n+    goto err;\n+  printf (\"Enum e enumerand ENUMSAMPLE_1 has value %i\\n\", val);\n+\n+  if ((name = ctf_enum_name (fp, type, 1)) == NULL)\n+    goto err;\n+  printf (\"Enum e enumerand %s has value 1\\n\", name);\n+\n+  /* Try getting some values using both sorts of iterator.  */\n+\n+  if ((type = ctf_lookup_by_name (fp, \"enum ie\") ) == CTF_ERR)\n+    goto err;\n+\n+  if ((ctf_enum_iter (fp, type, print_enum, NULL)) < 0)\n+    goto ierr;\n+\n+  while ((name = ctf_enum_next (fp, type, &i, &val)) != NULL)\n+    {\n+      printf (\"next test: %s has value %i\\n\", name, val);\n+    }\n+  if (ctf_errno (fp) != ECTF_NEXT_END)\n+    goto nerr;\n+\n+  ctf_dict_close (fp);\n+  ctf_close (ctf);\n+\n+  return 0;\n+\n+ open_err:\n+  fprintf (stderr, \"%s: cannot open: %s\\n\", argv[0], ctf_errmsg (err));\n+  return 1;\n+ err:\n+  fprintf (stderr, \"Lookup failed: %s\\n\", ctf_errmsg (ctf_errno (fp)));\n+  return 1;\n+ ierr:\n+  fprintf (stderr, \"_iter iteration failed: %s\\n\", ctf_errmsg (ctf_errno (fp)));\n+  return 1;\n+ nerr:\n+  fprintf (stderr, \"_next iteration failed: %s\\n\", ctf_errmsg (ctf_errno (fp)));\n+  return 1;\n+}"
    },
    {
      "sha": "0b2b15718660c1389ec5d254165cf59fb928c3ec",
      "filename": "libctf/testsuite/libctf-lookup/enum.lk",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum.lk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/enum.lk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/enum.lk?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,10 @@\n+# source: enum-ctf.c\n+# link: on\n+Enum e enumerand ENUMSAMPLE_1 has value 0\n+Enum e enumerand ENUMSAMPLE_2 has value 1\n+iter test: IENUMSAMPLE_1 has value -10\n+iter test: IENUMSAMPLE_2 has value -9\n+iter test: IENUMSAMPLE_3 has value -8\n+next test: IENUMSAMPLE_1 has value -10\n+next test: IENUMSAMPLE_2 has value -9\n+next test: IENUMSAMPLE_3 has value -8"
    },
    {
      "sha": "51ad257c94fa75cf1a89bca637ad61d509330653",
      "filename": "libctf/testsuite/libctf-lookup/lookup.exp",
      "status": "added",
      "additions": 43,
      "deletions": 0,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/lookup.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c59e30ed1727135f8efb79890f2c458f73709757/libctf/testsuite/libctf-lookup/lookup.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-lookup/lookup.exp?ref=c59e30ed1727135f8efb79890f2c458f73709757",
      "patch": "@@ -0,0 +1,43 @@\n+# Copyright (C) 2021 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+if ![is_elf_format] {\n+    unsupported \"CTF needs bfd changes to be emitted on non-ELF\"\n+    return 0\n+}\n+\n+if {[info exists env(LC_ALL)]} {\n+    set old_lc_all $env(LC_ALL)\n+}\n+set env(LC_ALL) \"C\"\n+\n+set ctf_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.lk]]\n+\n+foreach ctf_test $ctf_test_list {\n+    verbose [file rootname $ctf_test]\n+    verbose running lookup test on $ctf_test\n+    run_lookup_test [file rootname $ctf_test]\n+}\n+\n+if {[info exists old_lc_all]} {\n+    set env(LC_ALL) $old_lc_all\n+} else {\n+    unset env(LC_ALL)\n+}"
    }
  ]
}