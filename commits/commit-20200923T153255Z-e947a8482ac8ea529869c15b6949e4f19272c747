{
  "sha": "e947a8482ac8ea529869c15b6949e4f19272c747",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTk0N2E4NDgyYWM4ZWE1Mjk4NjljMTViNjk0OWU0ZjE5MjcyYzc0Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-23T15:32:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-23T15:32:55Z"
    },
    "message": "Introduce and use compile_module_up\n\nThis introduces compile_module_up, a unique pointer for\ncompile_module, and changes a few spots to use it.\n\ngdb/ChangeLog\n2020-09-23  Tom Tromey  <tom@tromey.com>\n\n\t* compile/compile.c (eval_compile_command): Update.\n\t* compile/compile-object-run.h (compile_object_run): Take a\n\tcompile_module_up.\n\t* compile/compile-object-run.c (compile_object_run): Take a\n\tcompile_module_up.\n\t* compile/compile-object-load.h (struct compile_module): Add\n\tconstructor, destructor.\n\t(compile_module_up): New typedef.\n\t(compile_object_load): Return compile_object_up.\n\t* compile/compile-object-load.c (compile_object_load): Return\n\tcompile_module_up.",
    "tree": {
      "sha": "30112aeacd185ae60be2662e6dda1134ab66af07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30112aeacd185ae60be2662e6dda1134ab66af07"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e947a8482ac8ea529869c15b6949e4f19272c747",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e947a8482ac8ea529869c15b6949e4f19272c747",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e947a8482ac8ea529869c15b6949e4f19272c747",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e947a8482ac8ea529869c15b6949e4f19272c747/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0dbf6ee6a074208ef8f95ee3d2f7e4369265e456"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 32,
    "deletions": 12
  },
  "files": [
    {
      "sha": "6f89a05e4512339e9df553678dbdd74874ba595f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -1,3 +1,17 @@\n+2020-09-23  Tom Tromey  <tom@tromey.com>\n+\n+\t* compile/compile.c (eval_compile_command): Update.\n+\t* compile/compile-object-run.h (compile_object_run): Take a\n+\tcompile_module_up.\n+\t* compile/compile-object-run.c (compile_object_run): Take a\n+\tcompile_module_up.\n+\t* compile/compile-object-load.h (struct compile_module): Add\n+\tconstructor, destructor.\n+\t(compile_module_up): New typedef.\n+\t(compile_object_load): Return compile_object_up.\n+\t* compile/compile-object-load.c (compile_object_load): Return\n+\tcompile_module_up.\n+\n 2020-09-23  Tom Tromey  <tom@tromey.com>\n \n \t* compile/compile-object-run.c (struct do_module_cleanup): Add"
    },
    {
      "sha": "dff10fe94f4e0eed50bfbbb3bce863b339002107",
      "filename": "gdb/compile/compile-object-load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-load.c?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -582,7 +582,7 @@ store_regs (struct type *regs_type, CORE_ADDR regs_base)\n    COMPILE_I_PRINT_ADDRESS_SCOPE when COMPILE_I_PRINT_VALUE_SCOPE\n    should have been used instead.  */\n \n-struct compile_module *\n+compile_module_up\n compile_object_load (const compile_file_names &file_names,\n \t\t     enum compile_i_scope_types scope, void *scope_data)\n {\n@@ -594,7 +594,6 @@ compile_object_load (const compile_file_names &file_names,\n   long storage_needed;\n   asymbol **symbol_table, **symp;\n   long number_of_symbols, missing_symbols;\n-  struct compile_module *retval;\n   struct type *regs_type, *out_value_type = NULL;\n   char **matching;\n   struct objfile *objfile;\n@@ -790,7 +789,7 @@ compile_object_load (const compile_file_names &file_names,\n \t\t\t    paddress (target_gdbarch (), out_value_addr));\n     }\n \n-  retval = XNEW (struct compile_module);\n+  compile_module_up retval (new struct compile_module);\n   retval->objfile = objfile_holder.release ();\n   retval->source_file = xstrdup (file_names.source_file ());\n   retval->func_sym = func_sym;"
    },
    {
      "sha": "9def29ebc9bbcd80435b77cacdc6005f838bbd9b",
      "filename": "gdb/compile/compile-object-load.h",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-load.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-load.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-load.h?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -46,6 +46,13 @@ struct munmap_list\n \n struct compile_module\n {\n+  compile_module () = default;\n+\n+  DISABLE_COPY_AND_ASSIGN (compile_module);\n+\n+  compile_module &operator= (compile_module &&other) = default;\n+  compile_module (compile_module &&other) = default;\n+\n   /* objfile for the compiled module.  */\n   struct objfile *objfile;\n \n@@ -77,7 +84,10 @@ struct compile_module\n   struct munmap_list *munmap_list_head;\n };\n \n-extern struct compile_module *compile_object_load\n+/* A unique pointer for a compile_module.  */\n+typedef std::unique_ptr<compile_module> compile_module_up;\n+\n+extern compile_module_up compile_object_load\n   (const compile_file_names &fnames,\n    enum compile_i_scope_types scope, void *scope_data);\n "
    },
    {
      "sha": "4c98be9cc1a706495bee22368359ea5b3a7c3fd4",
      "filename": "gdb/compile/compile-object-run.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-run.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-run.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.c?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -131,7 +131,7 @@ create_copied_type_recursive (objfile *objfile, type *func_type)\n    longer touch MODULE's memory after this function has been called.  */\n \n void\n-compile_object_run (struct compile_module *module)\n+compile_object_run (compile_module_up &&module)\n {\n   struct value *func_val;\n   struct do_module_cleanup *data;\n@@ -152,8 +152,6 @@ compile_object_run (struct compile_module *module)\n   data->munmap_list_head = module->munmap_list_head;\n \n   xfree (module->source_file);\n-  xfree (module);\n-  module = NULL;\n \n   try\n     {"
    },
    {
      "sha": "45375db654f108d2b0e78b48fbb686056c76a284",
      "filename": "gdb/compile/compile-object-run.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-run.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile-object-run.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.h?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -19,6 +19,6 @@\n \n #include \"compile-object-load.h\"\n \n-extern void compile_object_run (struct compile_module *module);\n+extern void compile_object_run (compile_module_up &&module);\n \n #endif /* COMPILE_COMPILE_OBJECT_RUN_H */"
    },
    {
      "sha": "6e8ec40942e1de3725603b16f416f9cb6b84d0a9",
      "filename": "gdb/compile/compile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e947a8482ac8ea529869c15b6949e4f19272c747/gdb/compile/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile.c?ref=e947a8482ac8ea529869c15b6949e4f19272c747",
      "patch": "@@ -820,14 +820,13 @@ void\n eval_compile_command (struct command_line *cmd, const char *cmd_string,\n \t\t      enum compile_i_scope_types scope, void *scope_data)\n {\n-  struct compile_module *compile_module;\n-\n   compile_file_names fnames = compile_to_object (cmd, cmd_string, scope);\n \n   gdb::unlinker object_remover (fnames.object_file ());\n   gdb::unlinker source_remover (fnames.source_file ());\n \n-  compile_module = compile_object_load (fnames, scope, scope_data);\n+  compile_module_up compile_module = compile_object_load (fnames, scope,\n+\t\t\t\t\t\t\t  scope_data);\n   if (compile_module == NULL)\n     {\n       gdb_assert (scope == COMPILE_I_PRINT_ADDRESS_SCOPE);\n@@ -840,7 +839,7 @@ eval_compile_command (struct command_line *cmd, const char *cmd_string,\n   source_remover.keep ();\n   object_remover.keep ();\n \n-  compile_object_run (compile_module);\n+  compile_object_run (std::move (compile_module));\n }\n \n /* See compile/compile-internal.h.  */"
    }
  ]
}