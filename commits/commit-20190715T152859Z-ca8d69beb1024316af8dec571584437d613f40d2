{
  "sha": "ca8d69beb1024316af8dec571584437d613f40d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2E4ZDY5YmViMTAyNDMxNmFmOGRlYzU3MTU4NDQzN2Q2MTNmNDBkMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-01T18:02:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-15T15:28:59Z"
    },
    "message": "Use field_core_addr in more places\n\nThis changes a few spots that use field_fmt to use field_core_addr\ninstead.\n\ngdb/ChangeLog\n2019-07-15  Tom Tromey  <tromey@adacore.com>\n\n\t* target.c (flash_erase_command): Use field_core_addr.\n\t* symfile.c (generic_load): Use field_core_addr.\n\t* sparc64-linux-tdep.c (sparc64_linux_handle_segmentation_fault):\n\tUse field_core_addr.\n\t* i386-linux-tdep.c (i386_linux_handle_segmentation_fault): Use\n\tfield_core_addr.",
    "tree": {
      "sha": "489c8f821a6055053b61c6c21e122b013c0b6f30",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/489c8f821a6055053b61c6c21e122b013c0b6f30"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ca8d69beb1024316af8dec571584437d613f40d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca8d69beb1024316af8dec571584437d613f40d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ca8d69beb1024316af8dec571584437d613f40d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca8d69beb1024316af8dec571584437d613f40d2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3719fd55b6f89662653d50d33bb267c5f21127a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3719fd55b6f89662653d50d33bb267c5f21127a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3719fd55b6f89662653d50d33bb267c5f21127a5"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 17,
    "deletions": 8
  },
  "files": [
    {
      "sha": "c8d0c6acea8e7628a66f7b1302fe1f7cd9cc2cde",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca8d69beb1024316af8dec571584437d613f40d2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca8d69beb1024316af8dec571584437d613f40d2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ca8d69beb1024316af8dec571584437d613f40d2",
      "patch": "@@ -1,3 +1,12 @@\n+2019-07-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* target.c (flash_erase_command): Use field_core_addr.\n+\t* symfile.c (generic_load): Use field_core_addr.\n+\t* sparc64-linux-tdep.c (sparc64_linux_handle_segmentation_fault):\n+\tUse field_core_addr.\n+\t* i386-linux-tdep.c (i386_linux_handle_segmentation_fault): Use\n+\tfield_core_addr.\n+\n 2019-07-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* dwarf2loc.c (dwarf2_evaluate_property): Sign extend property"
    },
    {
      "sha": "760d00008f432c53c389547266c8525d531cdb20",
      "filename": "gdb/i386-linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca8d69beb1024316af8dec571584437d613f40d2/gdb/i386-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca8d69beb1024316af8dec571584437d613f40d2/gdb/i386-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-linux-tdep.c?ref=ca8d69beb1024316af8dec571584437d613f40d2",
      "patch": "@@ -432,13 +432,13 @@ i386_linux_handle_segmentation_fault (struct gdbarch *gdbarch,\n     uiout->field_string (\"sigcode-meaning\", _(\"Lower bound violation\"));\n \n   uiout->text (_(\" while accessing address \"));\n-  uiout->field_fmt (\"bound-access\", \"%s\", paddress (gdbarch, access));\n+  uiout->field_core_addr (\"bound-access\", gdbarch, access);\n \n   uiout->text (_(\"\\nBounds: [lower = \"));\n-  uiout->field_fmt (\"lower-bound\", \"%s\", paddress (gdbarch, lower_bound));\n+  uiout->field_core_addr (\"lower-bound\", gdbarch, lower_bound);\n \n   uiout->text (_(\", upper = \"));\n-  uiout->field_fmt (\"upper-bound\", \"%s\", paddress (gdbarch, upper_bound));\n+  uiout->field_core_addr (\"upper-bound\", gdbarch, upper_bound);\n \n   uiout->text (_(\"]\"));\n }"
    },
    {
      "sha": "563d21e4b4c0a1a714bf80be76f2d11c32863778",
      "filename": "gdb/sparc64-linux-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca8d69beb1024316af8dec571584437d613f40d2/gdb/sparc64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca8d69beb1024316af8dec571584437d613f40d2/gdb/sparc64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sparc64-linux-tdep.c?ref=ca8d69beb1024316af8dec571584437d613f40d2",
      "patch": "@@ -150,19 +150,19 @@ sparc64_linux_handle_segmentation_fault (struct gdbarch *gdbarch,\n       uiout->text (\"\\n\");\n       uiout->field_string (\"sigcode-meaning\", _(\"ADI disabled\"));\n       uiout->text (_(\" while accessing address \"));\n-      uiout->field_fmt (\"bound-access\", \"%s\", paddress (gdbarch, addr));\n+      uiout->field_core_addr (\"bound-access\", gdbarch, addr);\n       break;\n     case SEGV_ADIDERR:\t/* disrupting mismatch */\n       uiout->text (\"\\n\");\n       uiout->field_string (\"sigcode-meaning\", _(\"ADI deferred mismatch\"));\n       uiout->text (_(\" while accessing address \"));\n-      uiout->field_fmt (\"bound-access\", \"%s\", paddress (gdbarch, addr));\n+      uiout->field_core_addr (\"bound-access\", gdbarch, addr);\n       break;\n     case SEGV_ADIPERR:\t/* precise mismatch */\n       uiout->text (\"\\n\");\n       uiout->field_string (\"sigcode-meaning\", _(\"ADI precise mismatch\"));\n       uiout->text (_(\" while accessing address \"));\n-      uiout->field_fmt (\"bound-access\", \"%s\", paddress (gdbarch, addr));\n+      uiout->field_core_addr (\"bound-access\", gdbarch, addr);\n       break;\n     default:\n       break;"
    },
    {
      "sha": "caa0e79bd9a92e40cf130564aa0330359661283a",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca8d69beb1024316af8dec571584437d613f40d2/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca8d69beb1024316af8dec571584437d613f40d2/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=ca8d69beb1024316af8dec571584437d613f40d2",
      "patch": "@@ -2095,7 +2095,7 @@ generic_load (const char *args, int from_tty)\n   CORE_ADDR entry = bfd_get_start_address (loadfile_bfd.get ());\n   entry = gdbarch_addr_bits_remove (target_gdbarch (), entry);\n   uiout->text (\"Start address \");\n-  uiout->field_fmt (\"address\", \"%s\", paddress (target_gdbarch (), entry));\n+  uiout->field_core_addr (\"address\", target_gdbarch (), entry);\n   uiout->text (\", load size \");\n   uiout->field_fmt (\"load-size\", \"%lu\", total_progress.data_count);\n   uiout->text (\"\\n\");"
    },
    {
      "sha": "b3cfc53cca1a90d01a07f212985eed9787f3274e",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ca8d69beb1024316af8dec571584437d613f40d2/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ca8d69beb1024316af8dec571584437d613f40d2/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=ca8d69beb1024316af8dec571584437d613f40d2",
      "patch": "@@ -3793,7 +3793,7 @@ flash_erase_command (const char *cmd, int from_tty)\n \t  ui_out_emit_tuple tuple_emitter (current_uiout, \"erased-regions\");\n \n           current_uiout->message (_(\"Erasing flash memory region at address \"));\n-          current_uiout->field_fmt (\"address\", \"%s\", paddress (gdbarch, m.lo));\n+          current_uiout->field_core_addr (\"address\", gdbarch, m.lo);\n           current_uiout->message (\", size = \");\n           current_uiout->field_fmt (\"size\", \"%s\", hex_string (m.hi - m.lo));\n           current_uiout->message (\"\\n\");"
    }
  ]
}