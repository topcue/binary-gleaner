{
  "sha": "7aa913136675f4b81cd3a548e44bbdab6185abed",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2FhOTEzMTM2Njc1ZjRiODFjZDNhNTQ4ZTQ0YmJkYWI2MTg1YWJlZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-07T15:08:54Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-07T15:32:33Z"
    },
    "message": "gdb: make remove_dyn_prop a method of struct type\n\nMove remove_dyn_prop, currently a free function, to be a method of\nstruct type.\n\ngdb/ChangeLog:\n\n\t* gdbtypes.h (struct type) <remove_dyn_prop>: New method.\n\t(remove_dyn_prop): Remove.  Update all users to use\n\ttype::remove_dyn_prop.\n\t* gdbtypes.c (remove_dyn_prop): Rename to...\n\t(type::remove_dyn_prop): ... this.",
    "tree": {
      "sha": "d047a7bd99cb3ebf0cf0a89f4062aa4c96fc24f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d047a7bd99cb3ebf0cf0a89f4062aa4c96fc24f5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7aa913136675f4b81cd3a548e44bbdab6185abed",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa913136675f4b81cd3a548e44bbdab6185abed",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7aa913136675f4b81cd3a548e44bbdab6185abed",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa913136675f4b81cd3a548e44bbdab6185abed/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5c54719c22b14f526e72be39a793657ac73d36c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5c54719c22b14f526e72be39a793657ac73d36c5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5c54719c22b14f526e72be39a793657ac73d36c5"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 19,
    "deletions": 12
  },
  "files": [
    {
      "sha": "f9ebdd01a77c107d041198324dffddd827f935b6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7aa913136675f4b81cd3a548e44bbdab6185abed",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-07  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.h (struct type) <remove_dyn_prop>: New method.\n+\t(remove_dyn_prop): Remove.  Update all users to use\n+\ttype::remove_dyn_prop.\n+\t* gdbtypes.c (remove_dyn_prop): Rename to...\n+\t(type::remove_dyn_prop): ... this.\n+\n 2020-05-07  Simon Marchi via Gdb-patches  <gdb-patches@sourceware.org>\n \n \t* gdbtypes.h (struct type) <add_dyn_prop>: New method."
    },
    {
      "sha": "d8b723751e1e3753e526771cce1001053337be67",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=7aa913136675f4b81cd3a548e44bbdab6185abed",
      "patch": "@@ -2204,7 +2204,7 @@ resolve_dynamic_array_or_string (struct type *type,\n     {\n       if (dwarf2_evaluate_property (prop, NULL, addr_stack, &value))\n \t{\n-\t  remove_dyn_prop (DYN_PROP_BYTE_STRIDE, type);\n+\t  type->remove_dyn_prop (DYN_PROP_BYTE_STRIDE);\n \t  bit_stride = (unsigned int) (value * 8);\n \t}\n       else\n@@ -2621,7 +2621,7 @@ resolve_dynamic_type_internal (struct type *type,\n   if (type_length.has_value ())\n     {\n       TYPE_LENGTH (resolved_type) = *type_length;\n-      remove_dyn_prop (DYN_PROP_BYTE_SIZE, resolved_type);\n+      resolved_type->remove_dyn_prop (DYN_PROP_BYTE_SIZE);\n     }\n \n   /* Resolve data_location attribute.  */\n@@ -2683,27 +2683,26 @@ type::add_dyn_prop (dynamic_prop_node_kind prop_kind, dynamic_prop prop)\n   TYPE_DYN_PROP_LIST (this) = temp;\n }\n \n-/* Remove dynamic property from TYPE in case it exists.  */\n+/* See gdbtypes.h.  */\n \n void\n-remove_dyn_prop (enum dynamic_prop_node_kind prop_kind,\n-                 struct type *type)\n+type::remove_dyn_prop (dynamic_prop_node_kind kind)\n {\n   struct dynamic_prop_list *prev_node, *curr_node;\n \n-  curr_node = TYPE_DYN_PROP_LIST (type);\n+  curr_node = TYPE_DYN_PROP_LIST (this);\n   prev_node = NULL;\n \n   while (NULL != curr_node)\n     {\n-      if (curr_node->prop_kind == prop_kind)\n+      if (curr_node->prop_kind == kind)\n \t{\n \t  /* Update the linked list but don't free anything.\n \t     The property was allocated on objstack and it is not known\n \t     if we are on top of it.  Nevertheless, everything is released\n \t     when the complete objstack is freed.  */\n \t  if (NULL == prev_node)\n-\t    TYPE_DYN_PROP_LIST (type) = curr_node->next;\n+\t    TYPE_DYN_PROP_LIST (this) = curr_node->next;\n \t  else\n \t    prev_node->next = curr_node->next;\n "
    },
    {
      "sha": "50a0c135ded70317f4de315f24898973e1b1802d",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=7aa913136675f4b81cd3a548e44bbdab6185abed",
      "patch": "@@ -884,6 +884,9 @@ struct type\n      This function assumes that this type is objfile-owned.  */\n   void add_dyn_prop (dynamic_prop_node_kind kind, dynamic_prop prop);\n \n+  /* * Remove dynamic property of kind KIND from this type, if it exists.  */\n+  void remove_dyn_prop (dynamic_prop_node_kind kind);\n+\n   /* * Type that is a pointer to this type.\n      NULL if no such pointer-to type is known yet.\n      The debugger may add the address of such a type\n@@ -2103,9 +2106,6 @@ extern struct type *resolve_dynamic_type\n /* * Predicate if the type has dynamic values, which are not resolved yet.  */\n extern int is_dynamic_type (struct type *type);\n \n-extern void remove_dyn_prop (enum dynamic_prop_node_kind prop_kind,\n-                             struct type *type);\n-\n extern struct type *check_typedef (struct type *);\n \n extern void check_stub_method_group (struct type *, int);"
    },
    {
      "sha": "aafbf0fc06b3f8b34d40d07ec5f62937953bec78",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa913136675f4b81cd3a548e44bbdab6185abed/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=7aa913136675f4b81cd3a548e44bbdab6185abed",
      "patch": "@@ -2291,7 +2291,7 @@ set_internalvar (struct internalvar *var, struct value *val)\n          when accessing the value.\n          If we keep it, we would still refer to the origin value.\n          Remove the location property in case it exist.  */\n-      remove_dyn_prop (DYN_PROP_DATA_LOCATION, value_type (new_data.value));\n+      value_type (new_data.value)->remove_dyn_prop (DYN_PROP_DATA_LOCATION);\n \n       break;\n     }"
    }
  ]
}