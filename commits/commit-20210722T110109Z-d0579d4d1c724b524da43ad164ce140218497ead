{
  "sha": "d0579d4d1c724b524da43ad164ce140218497ead",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDA1NzlkNGQxYzcyNGI1MjRkYTQzYWQxNjRjZTE0MDIxODQ5N2VhZA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-07-22T11:01:09Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-07-22T11:01:09Z"
    },
    "message": "x86: drop OP_Mask()\n\nBy moving its vex.r check there it becomes fully redundant with OP_G().",
    "tree": {
      "sha": "d4e86485134db946182ab8e6e5115054649b75ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d4e86485134db946182ab8e6e5115054649b75ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d0579d4d1c724b524da43ad164ce140218497ead",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0579d4d1c724b524da43ad164ce140218497ead",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d0579d4d1c724b524da43ad164ce140218497ead",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0579d4d1c724b524da43ad164ce140218497ead/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fec458f0fc42012c12cc3a2fb5116ade70a59f38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fec458f0fc42012c12cc3a2fb5116ade70a59f38",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fec458f0fc42012c12cc3a2fb5116ade70a59f38"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 28,
    "deletions": 48
  },
  "files": [
    {
      "sha": "2ed8f6730c5ea0a7a09a465ae404adf4755934e9",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=d0579d4d1c724b524da43ad164ce140218497ead",
      "patch": "@@ -151,9 +151,9 @@\n   },\n   /* PREFIX_EVEX_0FC2 */\n   {\n-    { \"vcmppX\",\t{ XMask, Vex, EXx, EXxEVexS, CMP }, PREFIX_OPCODE },\n+    { \"vcmppX\",\t{ MaskG, Vex, EXx, EXxEVexS, CMP }, PREFIX_OPCODE },\n     { VEX_W_TABLE (EVEX_W_0FC2_P_1) },\n-    { \"vcmppX\",\t{ XMask, Vex, EXx, EXxEVexS, CMP }, PREFIX_OPCODE },\n+    { \"vcmppX\",\t{ MaskG, Vex, EXx, EXxEVexS, CMP }, PREFIX_OPCODE },\n     { VEX_W_TABLE (EVEX_W_0FC2_P_3) },\n   },\n   /* PREFIX_EVEX_0FE6 */\n@@ -238,14 +238,14 @@\n   /* PREFIX_EVEX_0F3826 */\n   {\n     { Bad_Opcode },\n-    { \"vptestnm%BW\",\t{ XMask, Vex, EXx }, 0 },\n-    { \"vptestm%BW\",\t{ XMask, Vex, EXx }, 0 },\n+    { \"vptestnm%BW\",\t{ MaskG, Vex, EXx }, 0 },\n+    { \"vptestm%BW\",\t{ MaskG, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3827 */\n   {\n     { Bad_Opcode },\n-    { \"vptestnm%DQ\",\t{ XMask, Vex, EXx }, 0 },\n-    { \"vptestm%DQ\",\t{ XMask, Vex, EXx }, 0 },\n+    { \"vptestnm%DQ\",\t{ MaskG, Vex, EXx }, 0 },\n+    { \"vptestm%DQ\",\t{ MaskG, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3828 */\n   {\n@@ -256,7 +256,7 @@\n   /* PREFIX_EVEX_0F3829 */\n   {\n     { Bad_Opcode },\n-    { \"vpmov%BW2m\",\t{ XMask, EXx }, 0 },\n+    { \"vpmov%BW2m\",\t{ MaskG, EXx }, 0 },\n     { VEX_W_TABLE (EVEX_W_0F3829_P_2) },\n   },\n   /* PREFIX_EVEX_0F382A */\n@@ -310,7 +310,7 @@\n   /* PREFIX_EVEX_0F3839 */\n   {\n     { Bad_Opcode },\n-    { \"vpmov%DQ2m\",\t{ XMask, EXx }, 0 },\n+    { \"vpmov%DQ2m\",\t{ MaskG, EXx }, 0 },\n     { \"vpmins%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F383A */\n@@ -338,7 +338,7 @@\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vp2intersect%DQ\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n+    { \"vp2intersect%DQ\", { MaskG, Vex, EXx, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F3872 */\n   {"
    },
    {
      "sha": "2c7d9bc2e346b78fc049a455ea1e49c63d57d467",
      "filename": "opcodes/i386-dis-evex-w.h",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex-w.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex-w.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-w.h?ref=d0579d4d1c724b524da43ad164ce140218497ead",
      "patch": "@@ -142,7 +142,7 @@\n   },\n   /* EVEX_W_0F66 */\n   {\n-    { \"vpcmpgtd\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpgtd\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n   },\n   /* EVEX_W_0F6A */\n   {\n@@ -201,7 +201,7 @@\n   },\n   /* EVEX_W_0F76 */\n   {\n-    { \"vpcmpeqd\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpeqd\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n   },\n   /* EVEX_W_0F78_P_0 */\n   {\n@@ -270,12 +270,12 @@\n   },\n   /* EVEX_W_0FC2_P_1 */\n   {\n-    { \"vcmpss\",\t{ XMask, VexScalar, EXxmm_md, EXxEVexS, CMP }, 0 },\n+    { \"vcmpss\",\t{ MaskG, VexScalar, EXxmm_md, EXxEVexS, CMP }, 0 },\n   },\n   /* EVEX_W_0FC2_P_3 */\n   {\n     { Bad_Opcode },\n-    { \"vcmpsd\",\t{ XMask, VexScalar, EXxmm_mq, EXxEVexS, CMP }, 0 },\n+    { \"vcmpsd\",\t{ MaskG, VexScalar, EXxmm_mq, EXxEVexS, CMP }, 0 },\n   },\n   /* EVEX_W_0FD2 */\n   {\n@@ -450,7 +450,7 @@\n   /* EVEX_W_0F3829_P_2 */\n   {\n     { Bad_Opcode },\n-    { \"vpcmpeqq\",\t{ XMask, Vex, EXx }, 0 },\n+    { \"vpcmpeqq\",\t{ MaskG, Vex, EXx }, 0 },\n   },\n   /* EVEX_W_0F382A_P_1 */\n   {\n@@ -496,7 +496,7 @@\n   /* EVEX_W_0F3837 */\n   {\n     { Bad_Opcode },\n-    { \"vpcmpgtq\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpgtq\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n   },\n   /* EVEX_W_0F383A_P_1 */\n   {"
    },
    {
      "sha": "5f1ebaded85e41b1d770f72e88d757d84a888c3a",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=d0579d4d1c724b524da43ad164ce140218497ead",
      "patch": "@@ -114,8 +114,8 @@ static const struct dis386 evex_table[][256] = {\n     { \"vpunpcklwd\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { VEX_W_TABLE (EVEX_W_0F62) },\n     { \"vpacksswb\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n-    { \"vpcmpgtb\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n-    { \"vpcmpgtw\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpgtb\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpgtw\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n     { VEX_W_TABLE (EVEX_W_0F66) },\n     { \"vpackuswb\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     /* 68 */\n@@ -132,8 +132,8 @@ static const struct dis386 evex_table[][256] = {\n     { REG_TABLE (REG_EVEX_0F71) },\n     { REG_TABLE (REG_EVEX_0F72) },\n     { REG_TABLE (REG_EVEX_0F73) },\n-    { \"vpcmpeqb\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n-    { \"vpcmpeqw\",\t{ XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpeqb\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n+    { \"vpcmpeqw\",\t{ MaskG, Vex, EXx }, PREFIX_DATA },\n     { VEX_W_TABLE (EVEX_W_0F76) },\n     { Bad_Opcode },\n     /* 78 */\n@@ -453,7 +453,7 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { \"vperm%BW\",\t{ XM, Vex, EXx }, PREFIX_DATA },\n     { Bad_Opcode },\n-    { \"vpshufbitqmb\",  { XMask, Vex, EXx }, PREFIX_DATA },\n+    { \"vpshufbitqmb\",  { MaskG, Vex, EXx }, PREFIX_DATA },\n     /* 90 */\n     { \"vpgatherd%DQ\",\t{ XMGatherD, MVexVSIBDWpX }, PREFIX_DATA },\n     { \"vpgatherq%DQ\",\t{ XMGatherQ, MVexVSIBQWpX }, PREFIX_DATA },\n@@ -617,8 +617,8 @@ static const struct dis386 evex_table[][256] = {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A1B) },\n     { Bad_Opcode },\n     { VEX_W_TABLE (VEX_W_0F3A1D) },\n-    { \"vpcmpu%DQ\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n-    { \"vpcmp%DQ\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n+    { \"vpcmpu%DQ\",\t{ MaskG, Vex, EXx, VPCMP }, PREFIX_DATA },\n+    { \"vpcmp%DQ\",\t{ MaskG, Vex, EXx, VPCMP }, PREFIX_DATA },\n     /* 20 */\n     { VEX_LEN_TABLE (VEX_LEN_0F3A20) },\n     { VEX_W_TABLE (EVEX_W_0F3A21) },\n@@ -653,8 +653,8 @@ static const struct dis386 evex_table[][256] = {\n     { EVEX_LEN_TABLE (EVEX_LEN_0F3A3B) },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpcmpu%BW\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n-    { \"vpcmp%BW\",\t{ XMask, Vex, EXx, VPCMP }, PREFIX_DATA },\n+    { \"vpcmpu%BW\",\t{ MaskG, Vex, EXx, VPCMP }, PREFIX_DATA },\n+    { \"vpcmp%BW\",\t{ MaskG, Vex, EXx, VPCMP }, PREFIX_DATA },\n     /* 40 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -698,8 +698,8 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vfpclassp%XW%XZ\",\t{ XMask, EXx, Ib }, PREFIX_DATA },\n-    { \"vfpclasss%XW\",\t{ XMask, EXVexWdqScalar, Ib }, PREFIX_DATA },\n+    { \"vfpclassp%XW%XZ\",\t{ MaskG, EXx, Ib }, PREFIX_DATA },\n+    { \"vfpclasss%XW\",\t{ MaskG, EXVexWdqScalar, Ib }, PREFIX_DATA },\n     /* 68 */\n     { Bad_Opcode },\n     { Bad_Opcode },"
    },
    {
      "sha": "f88276ced6bcf53b545f8757fda83c8bdfb403ff",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 2,
      "deletions": 22,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d0579d4d1c724b524da43ad164ce140218497ead/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=d0579d4d1c724b524da43ad164ce140218497ead",
      "patch": "@@ -116,8 +116,6 @@ static void FXSAVE_Fixup (int, int);\n \n static void MOVSXD_Fixup (int, int);\n \n-static void OP_Mask (int, int);\n-\n struct dis_private {\n   /* Points to first byte not fetched.  */\n   bfd_byte *max_fetched;\n@@ -406,7 +404,6 @@ fetch_data (struct disassemble_info *info, bfd_byte *addr)\n #define EXxEVexR64 { OP_Rounding, evex_rounding_64_mode }\n #define EXxEVexS { OP_Rounding, evex_sae_mode }\n \n-#define XMask { OP_Mask, mask_mode }\n #define MaskG { OP_G, mask_mode }\n #define MaskE { OP_E, mask_mode }\n #define MaskBDE { OP_E, mask_bd_mode }\n@@ -12017,12 +12014,12 @@ OP_G (int bytemode, int sizeflag)\n       break;\n     case mask_bd_mode:\n     case mask_mode:\n-      if ((modrm.reg + add) > 0x7)\n+      if (add || (vex.evex && !vex.r))\n \t{\n \t  oappend (\"(bad)\");\n \t  return;\n \t}\n-      oappend (names_mask[modrm.reg + add]);\n+      oappend (names_mask[modrm.reg]);\n       break;\n     default:\n       oappend (INTERNAL_DISASSEMBLER_ERROR);\n@@ -13720,23 +13717,6 @@ MOVSXD_Fixup (int bytemode, int sizeflag)\n   OP_E (bytemode, sizeflag);\n }\n \n-static void\n-OP_Mask (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n-{\n-  if (!vex.evex\n-      || (bytemode != mask_mode && bytemode != mask_bd_mode))\n-    abort ();\n-\n-  USED_REX (REX_R);\n-  if ((rex & REX_R) != 0 || !vex.r)\n-    {\n-      BadOp ();\n-      return;\n-    }\n-\n-  oappend (names_mask [modrm.reg]);\n-}\n-\n static void\n OP_Rounding (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n {"
    }
  ]
}