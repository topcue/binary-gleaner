{
  "sha": "ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWI2NGM5OTk4MmUxZTI2NDM5ZGM2NmIyZWEwNGFhMGQ0YjA0NThjOQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:30Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:30Z"
    },
    "message": "gdbserver/linux-low: turn 'emit_ops' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tRemove the 'emit_ops' linux target ops and let the concrete\n\tlinux target define the op by overriding the declaration of\n\tprocess_stratum_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the op.\n\t(class linux_process_target) <emit_ops>: Remove.\n\t* linux-low.cc (linux_process_target::emit_ops): Remove.\n\t* linux-x86-low.cc (class x86_target) <emit_ops>: Declare.\n\t(x86_emit_ops): Turn into...\n\t(x86_target::emit_ops): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target) <emit_ops>: Declare.\n\t(aarch64_emit_ops): Turn into...\n\t(aarch64_target::emit_ops): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-ppc-low.cc (class ppc_target) <emit_ops>: Declare.\n\t(ppc_emit_ops): Turn into...\n\t(ppc_target::emit_ops): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-s390-low.cc (class s390_target) <emit_ops>: Declare.\n\t(s390_emit_ops): Turn into...\n\t(s390_target::emit_ops): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "a14f3fce850c00c31957ff6ed682b439477efd55",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a14f3fce850c00c31957ff6ed682b439477efd55"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "809a0c354b97bbbcacbd99808f0e328b39614a8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/809a0c354b97bbbcacbd99808f0e328b39614a8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/809a0c354b97bbbcacbd99808f0e328b39614a8f"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 54,
    "deletions": 39
  },
  "files": [
    {
      "sha": "203b53453cf4af4f2e6d3691c5c31cc0c674d32f",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -1,3 +1,38 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tRemove the 'emit_ops' linux target ops and let the concrete\n+\tlinux target define the op by overriding the declaration of\n+\tprocess_stratum_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the op.\n+\t(class linux_process_target) <emit_ops>: Remove.\n+\t* linux-low.cc (linux_process_target::emit_ops): Remove.\n+\t* linux-x86-low.cc (class x86_target) <emit_ops>: Declare.\n+\t(x86_emit_ops): Turn into...\n+\t(x86_target::emit_ops): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target) <emit_ops>: Declare.\n+\t(aarch64_emit_ops): Turn into...\n+\t(aarch64_target::emit_ops): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-ppc-low.cc (class ppc_target) <emit_ops>: Declare.\n+\t(ppc_emit_ops): Turn into...\n+\t(ppc_target::emit_ops): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-s390-low.cc (class s390_target) <emit_ops>: Declare.\n+\t(s390_emit_ops): Turn into...\n+\t(s390_target::emit_ops): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tRemove the 'install_fast_tracepoint_jump_pad' and"
    },
    {
      "sha": "c9893c80fcd2981854d74b9d01fc0588216abafd",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -79,6 +79,8 @@ class aarch64_target : public linux_process_target\n \n   int get_min_fast_tracepoint_insn_len () override;\n \n+  struct emit_ops *emit_ops () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -3091,10 +3093,10 @@ static struct emit_ops aarch64_emit_ops_impl =\n   aarch64_emit_ge_got,\n };\n \n-/* Implementation of linux_target_ops method \"emit_ops\".  */\n+/* Implementation of target ops method \"emit_ops\".  */\n \n-static struct emit_ops *\n-aarch64_emit_ops (void)\n+emit_ops *\n+aarch64_target::emit_ops ()\n {\n   return &aarch64_emit_ops_impl;\n }\n@@ -3163,7 +3165,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_emit_ops,\n   aarch64_supports_range_stepping,\n   aarch64_supports_hardware_single_step,\n   aarch64_get_syscall_trapinfo,"
    },
    {
      "sha": "a235f4e1c55422cfd56573a5782bbae6bf47c1e7",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -1117,7 +1117,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   arm_supports_hardware_single_step,\n   arm_get_syscall_trapinfo,"
    },
    {
      "sha": "b20edf7adc4a0bebb079056aa22bd023d3de87c0",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -171,7 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   bfin_supports_hardware_single_step,\n };"
    },
    {
      "sha": "ca56cabecd3da5eaa956deab30657821076d8c91",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -468,7 +468,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   cris_supports_hardware_single_step,\n };"
    },
    {
      "sha": "71cc140d69db6363daa0514005bcdbf893afc6d1",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -6496,15 +6496,6 @@ linux_process_target::done_accessing_memory ()\n     target_unpause_all (true);\n }\n \n-emit_ops *\n-linux_process_target::emit_ops ()\n-{\n-  if (the_low_target.emit_ops != NULL)\n-    return (*the_low_target.emit_ops) ();\n-  else\n-    return NULL;\n-}\n-\n /* Extract &phdr and num_phdr in the inferior.  Return 0 on success.  */\n \n static int"
    },
    {
      "sha": "6db56d0e10698e502a11e9a6e88d87ef0b7fb6c1",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -131,10 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Return the bytecode operations vector for the current inferior.\n-     Returns NULL if bytecode compilation is not supported.  */\n-  struct emit_ops *(*emit_ops) (void);\n-\n   /* Returns true if the low target supports range stepping.  */\n   int (*supports_range_stepping) (void);\n \n@@ -284,8 +280,6 @@ class linux_process_target : public process_stratum_target\n \n   void stabilize_threads () override;\n \n-  struct emit_ops *emit_ops () override;\n-\n   bool supports_disable_randomization () override;\n \n   bool supports_qxfer_libraries_svr4 () override;"
    },
    {
      "sha": "82dde9938bd4107dd39a520e30edf56f0b59422e",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -161,7 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   m32r_supports_hardware_single_step,\n };"
    },
    {
      "sha": "0b30291d3fb3bf28bddc33cdc83a50286d6915a9",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -265,7 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   m68k_supports_hardware_single_step,\n };"
    },
    {
      "sha": "58f6629917cf9ccc5bf170af7aaf34de42adcbe7",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -77,6 +77,8 @@ class ppc_target : public linux_process_target\n \n   int get_min_fast_tracepoint_insn_len () override;\n \n+  struct emit_ops *emit_ops () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -3379,10 +3381,10 @@ static struct emit_ops ppc64v2_emit_ops_impl =\n \n #endif\n \n-/* Implementation of linux_target_ops method \"emit_ops\".  */\n+/* Implementation of target ops method \"emit_ops\".  */\n \n-static struct emit_ops *\n-ppc_emit_ops (void)\n+emit_ops *\n+ppc_target::emit_ops ()\n {\n #ifdef __powerpc64__\n   struct regcache *regcache = get_thread_regcache (current_thread, 0);\n@@ -3452,7 +3454,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  ppc_emit_ops,\n   NULL, /* supports_range_stepping */\n   ppc_supports_hardware_single_step,\n   NULL, /* get_syscall_trapinfo */"
    },
    {
      "sha": "5ea4830dd1628323dfd8226905bf92311a8a439f",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -83,6 +83,8 @@ class s390_target : public linux_process_target\n   void low_supply_ptrace_register (regcache *regcache, int regno,\n \t\t\t\t   const char *buf) override;\n \n+  struct emit_ops *emit_ops () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -2845,10 +2847,10 @@ static struct emit_ops s390x_emit_ops =\n   };\n #endif\n \n-/* The \"emit_ops\" linux_target_ops method.  */\n+/* The \"emit_ops\" target ops method.  */\n \n-static struct emit_ops *\n-s390_emit_ops (void)\n+emit_ops *\n+s390_target::emit_ops ()\n {\n #ifdef __s390x__\n   struct regcache *regcache = get_thread_regcache (current_thread, 0);\n@@ -2861,7 +2863,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  s390_emit_ops,\n   NULL, /* supports_range_stepping */\n   s390_supports_hardware_single_step,\n   NULL, /* get_syscall_trapinfo */"
    },
    {
      "sha": "6f270ed989ed5103a037e1f376d699f416e98c01",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -192,7 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   sh_supports_hardware_single_step,\n };"
    },
    {
      "sha": "6a0be06da5e498304facf09d3efeca2278d40d2f",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -423,7 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   tic6x_supports_hardware_single_step,\n };"
    },
    {
      "sha": "b18134d6d8a801c358440350439918e5e7d4dea3",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -224,7 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   tile_supports_hardware_single_step,\n };"
    },
    {
      "sha": "8e35ab172bf16f49828ad5cea4fca6f3f2c2e456",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -122,6 +122,8 @@ class x86_target : public linux_process_target\n \n   int get_min_fast_tracepoint_insn_len () override;\n \n+  struct emit_ops *emit_ops () override;\n+\n protected:\n \n   void low_arch_setup () override;\n@@ -2934,8 +2936,8 @@ struct emit_ops i386_emit_ops =\n   };\n \n \n-static struct emit_ops *\n-x86_emit_ops (void)\n+emit_ops *\n+x86_target::emit_ops ()\n {\n #ifdef __x86_64__\n   if (is_64bit_tdesc ())\n@@ -2990,7 +2992,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  x86_emit_ops,\n   x86_supports_range_stepping,\n   x86_supports_hardware_single_step,\n   x86_get_syscall_trapinfo,"
    },
    {
      "sha": "774ad0a2ccbe3700de37295af93a101c4ab41ebb",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab64c99982e1e26439dc66b2ea04aa0d4b0458c9/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=ab64c99982e1e26439dc66b2ea04aa0d4b0458c9",
      "patch": "@@ -329,7 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* emit_ops */\n   NULL, /* supports_range_stepping */\n   xtensa_supports_hardware_single_step,\n };"
    }
  ]
}