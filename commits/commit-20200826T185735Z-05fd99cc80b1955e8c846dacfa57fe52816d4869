{
  "sha": "05fd99cc80b1955e8c846dacfa57fe52816d4869",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDVmZDk5Y2M4MGIxOTU1ZThjODQ2ZGFjZmE1N2ZlNTI4MTZkNDg2OQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-08-26T18:28:26Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-08-26T18:57:35Z"
    },
    "message": "ld: Add $NOSANTIZE_CFLAGS to more linker tests\n\n-fsanitize= can be used to build binutils with\n\n$ CC=\"gcc -fsanitize=address,undefined\" CXX=\"g++ -fsanitize=address,undefined\" .../configure --disable-werror\n\nSince not all linker tests are compatible with -fsanitize=, pass\n$NOSANTIZE_CFLAGS to disable -fsanitize= for such tests.\n\n\t* testsuite/ld-elf/indirect.exp: Append $NOSANTIZE_CFLAGS to CC.\n\t* testsuite/ld-elf/shared.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-scripts/crossref.exp: Likewise.",
    "tree": {
      "sha": "ecc89255958362cd0747dbbe60f5959d7c16b986",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ecc89255958362cd0747dbbe60f5959d7c16b986"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/05fd99cc80b1955e8c846dacfa57fe52816d4869",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05fd99cc80b1955e8c846dacfa57fe52816d4869",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/05fd99cc80b1955e8c846dacfa57fe52816d4869",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05fd99cc80b1955e8c846dacfa57fe52816d4869/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c51f2f291a5459e1eabd000b2c52e5de52b4c56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8c51f2f291a5459e1eabd000b2c52e5de52b4c56"
    }
  ],
  "stats": {
    "total": 198,
    "additions": 141,
    "deletions": 57
  },
  "files": [
    {
      "sha": "8bdc015e6d9feedb9a92aee9e1cb808fa0e096a6",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -1,3 +1,15 @@\n+2020-08-26  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/ld-elf/indirect.exp: Append $NOSANTIZE_CFLAGS to CC.\n+\t* testsuite/ld-elf/shared.exp: Likewise.\n+\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n+\t* testsuite/ld-elfvers/vers.exp: Likewise.\n+\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n+\t* testsuite/ld-plugin/lto.exp: Likewise.\n+\t* testsuite/ld-plugin/plugin.exp: Likewise.\n+\t* testsuite/ld-scripts/crossref.exp: Likewise.\n+\n 2020-08-26  Alan Modra  <amodra@gmail.com>\n \n \tPR 26499"
    },
    {
      "sha": "9451b21383cd7884578fdcf09dc2915f9f6ea110",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -64,6 +64,9 @@ if {[check_lto_available]} {\n    append cc_cmd \" -fno-lto\"\n }\n \n+# Disable all sanitizers.\n+append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+\n if { ![ld_compile $cc_cmd $srcdir/$subdir/indirect1a.c tmpdir/indirect1a.o]\n      || ![ld_compile $cc_cmd $srcdir/$subdir/indirect1b.c tmpdir/indirect1b.o]\n      || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/indirect2.c tmpdir/indirect2.o]"
    },
    {
      "sha": "66da7203df0d9f49b52cbe51e5492fdcb9570843",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 91,
      "deletions": 35,
      "changes": 126,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -749,15 +749,6 @@ set build_tests {\n   {\"Build needed3\"\n    \"tmpdir/needed3.o -Wl,--as-needed -Ltmpdir -lneeded3a -lneeded3b -lneeded1b\" \"\"\n    {dummy.c} {} \"needed3\"}\n-  {\"Build libpr2404a.so\"\n-   \"-shared\" \"-fPIC\"\n-   {pr2404a.c} {} \"libpr2404a.so\"}\n-  {\"Build libpr2404n.so\"\n-   \"-shared -Wl,-z,now\" \"-fPIC\"\n-   {pr2404a.c} {} \"libpr2404n.so\"}\n-  {\"Build libpr2404b.a\"\n-   \"\" \"\"\n-   {pr2404b.c} {} \"libpr2404b.a\"}\n   {\"Build rdynamic-1\"\n    \"-Wl,--no-dynamic-linker,-export-dynamic,--gc-sections\" \"-ffunction-sections\"\n    {rdynamic-1.c} {{readelf {-s} rdynamic-1.rd}} \"rdynamic-1\"}\n@@ -792,6 +783,34 @@ set build_tests {\n    \"-shared -Wl,-z,now tmpdir/libpr18458a.so\" \"-fPIC\"\n    {pr18458b.c} {} \"libpr18458b.so\"}\n }\n+\n+run_cc_link_tests [list \\\n+    [list \\\n+\t\"Build libpr2404a.so\" \\\n+\t\"-shared $NOSANTIZE_CFLAGS\" \\\n+\t\"-fPIC $NOSANTIZE_CFLAGS\" \\\n+\t{pr2404a.c} \\\n+\t{} \\\n+\t\"libpr2404a.so\" \\\n+    ] \\\n+    [list \\\n+\t\"Build libpr2404n.so\" \\\n+\t\"-shared -Wl,-z,now $NOSANTIZE_CFLAGS\" \\\n+\t\"-fPIC $NOSANTIZE_CFLAGS\" \\\n+\t{pr2404a.c} \\\n+\t{} \\\n+\t\"libpr2404n.so\" \\\n+    ] \\\n+    [list \\\n+\t\"Build libpr2404b.a\" \\\n+\t\"\" \\\n+\t\"$NOSANTIZE_CFLAGS\" \\\n+\t{pr2404b.c} \\\n+\t{} \\\n+\t\"libpr2404b.a\" \\\n+    ] \\\n+]\n+\n # pr19073.s uses .set, which has a different meaning on alpha.\n if { ![istarget alpha-*-*] } {\n     append build_tests {\n@@ -873,7 +892,7 @@ run_ld_link_tests [list \\\n \t{ pr22269-1.c } \\\n \t{{readelf -rW pr22269-1.rd}} \\\n \t\"pr22269-1\" \\\n-\t\"-fPIE -O2\" \\\n+\t\"-fPIE -O2 $NOSANTIZE_CFLAGS\" \\\n     ] \\\n ]\n \n@@ -1006,11 +1025,16 @@ set run_tests [list \\\n      \"-Wl,--no-as-needed,-rpath=tmpdir -Ltmpdir -lrel\" \"\" \\\n      {relmain.c} \"relmain\" \"relmain.out\" ] \\\n     [list \"Run pr2404\" \\\n-     \"-Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \"\" \\\n-     {dummy.c} \"pr2404\" \"pr2404.out\" ] \\\n+     \"$NOSANTIZE_CFLAGS -Wl,--no-as-needed \\\n+      tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n+     \"\" \\\n+     {dummy.c} \"pr2404\" \"pr2404.out\" \\\n+     \"$NOSANTIZE_CFLAGS\" ] \\\n     [list \"Run pr2404n\" \\\n-     \"-Wl,-z,now -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \"\" \\\n-     {dummy.c} \"pr2404n\" \"pr2404.out\" ] \\\n+     \"$NOSANTIZE_CFLAGS -Wl,-z,now \\\n+      -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \"\" \\\n+     {dummy.c} \"pr2404n\" \"pr2404.out\" \\\n+     \"$NOSANTIZE_CFLAGS\" ] \\\n     [list \"Run pr18458\" \\\n      \"-Wl,--no-as-needed,-z,now tmpdir/libpr18458a.so tmpdir/libpr18458b.so\" \"\" \\\n      {pr18458c.c} \"pr18458\" \"pass.out\" ] \\\n@@ -1126,14 +1150,29 @@ set build_cxx_tests {\n   {\"Build libdl3a.so with --dynamic-list-cpp-typeinfo\"\n    \"-shared -Wl,--dynamic-list-cpp-typeinfo\" \"-fPIC\"\n    {dl3.cc} {} \"libdl3c.so\" \"c++\"}\n-  {\"Build libdnew1a.so with --Bsymbolic-functions --dynamic-list-cpp-new\"\n-   \"-shared -Wl,-Bsymbolic-functions,--dynamic-list-cpp-new\" \"-fPIC -ansi\"\n-   {del.cc new.cc} {} \"libnew1a.so\" \"c++\"}\n-  {\"Build libdnew1b.so with --dynamic-list-data --dynamic-list-cpp-new\"\n-   \"-shared -Wl,--dynamic-list-data,--dynamic-list-cpp-new\" \"-fPIC -ansi\"\n-   {del.cc new.cc} {} \"libnew1b.so\" \"c++\"}\n }\n \n+run_cc_link_tests [list \\\n+    [list \\\n+\t\"Build libdnew1a.so with --Bsymbolic-functions --dynamic-list-cpp-new\" \\\n+\t\"-shared $NOSANTIZE_CFLAGS -Wl,-Bsymbolic-functions,--dynamic-list-cpp-new\" \\\n+\t\"-fPIC -ansi $NOSANTIZE_CFLAGS\" \\\n+\t{del.cc new.cc} \\\n+\t{} \\\n+\t\"libnew1a.so\" \\\n+\t\"c++\" \\\n+    ] \\\n+    [list \\\n+\t\"Build libdnew1b.so with --dynamic-list-data --dynamic-list-cpp-new\" \\\n+\t\"-shared $NOSANTIZE_CFLAGS -Wl,--dynamic-list-data,--dynamic-list-cpp-new\" \\\n+\t\"-fPIC -ansi $NOSANTIZE_CFLAGS\" \\\n+\t{del.cc new.cc} \\\n+\t{} \\\n+\t\"libnew1b.so\" \\\n+\t\"c++\" \\\n+    ] \\\n+]\n+\n # \"-shared -Bsymbolic\" only works with gcc 4.5.0 and newer.\n #    {\"Run with libdl3b.so\"\n #     \"tmpdir/libdl3b.so\" \"\"\n@@ -1145,14 +1184,31 @@ set run_cxx_tests {\n     {\"Run with libdl3c.so\"\n      \"-Wl,--no-as-needed tmpdir/libdl3c.so\" \"\"\n      {dl3main.cc} \"dl3c\" \"dl3a.out\" \"\" \"c++\"}\n-    {\"Run with libnew1a.so\"\n-     \"-Wl,--no-as-needed tmpdir/libnew1a.so\" \"\"\n-     {dl5.cc} \"dl5a\" \"dl5.out\" \"-ansi\" \"c++\"}\n-    {\"Run with libnew1b.so\"\n-     \"-Wl,--no-as-needed tmpdir/libnew1b.so\" \"\"\n-     {dl5.cc} \"dl5b\" \"dl5.out\" \"-ansi\" \"c++\"}\n }\n \n+run_ld_link_exec_tests [list \\\n+    [list \\\n+\t\"Run with libnew1a.so\" \\\n+\t\"-Wl,--no-as-needed tmpdir/libnew1a.so $NOSANTIZE_CFLAGS\" \\\n+\t\"\" \\\n+\t{dl5.cc} \\\n+\t\"dl5a\" \\\n+\t\"dl5.out\" \\\n+\t\"-ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"c++\" \\\n+    ] \\\n+    [list \\\n+\t\"Run with libnew1b.so\" \\\n+\t\"-Wl,--no-as-needed tmpdir/libnew1b.so $NOSANTIZE_CFLAGS\" \\\n+\t\"\" \\\n+\t{dl5.cc} \\\n+\t\"dl5b\" \\\n+\t\"dl5.out\" \\\n+\t\"-ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"c++\" \\\n+    ] \\\n+]\n+\n run_cc_link_tests $build_cxx_tests\n run_ld_link_exec_tests $run_cxx_tests\n \n@@ -1163,7 +1219,7 @@ if { [istarget *-*-linux*]\n \t[list \\\n \t    \"Build libpr2404b.a with PIE\" \\\n \t    \"\" \\\n-\t    \"-fPIE\" \\\n+\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n \t    { pr2404b.c } \\\n \t    {} \\\n \t    \"libpr2404b.a\" \\\n@@ -1249,21 +1305,21 @@ if { [istarget *-*-linux*]\n \t] \\\n \t[list \\\n \t    \"Run pr2404 with PIE\" \\\n-\t    \"-pie -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n+\t    \"-pie $NOSANTIZE_CFLAGS -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n \t    \"\" \\\n \t    { dummy.c } \\\n \t    \"pr2404pie\" \\\n \t    \"pr2404.out\" \\\n-\t    \"-fPIE\" \\\n+\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Run pr2404 with PIE (-z now)\" \\\n-\t    \"-pie -Wl,-z,now -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \\\n+\t    \"-pie $NOSANTIZE_CFLAGS -Wl,-z,now -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \\\n \t    \"\" \\\n \t    { dummy.c } \\\n \t    \"pr2404pien\" \\\n \t    \"pr2404.out\" \\\n-\t    \"-fPIE\" \\\n+\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Run pr18718\" \\\n@@ -1499,7 +1555,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162a.c } \\\n \t    \"\" \\\n \t    \"libpr23162a.so\" \\\n-\t    \"-fPIC -O2\" \\\n+\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23162a\" \\\n@@ -1509,7 +1565,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162b.c } \\\n \t    {{readelf {-rW} pr23162.rd}} \\\n \t    \"pr23162a\" \\\n-\t    \"-fPIC -O0\" \\\n+\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23162b.so\" \\\n@@ -1519,7 +1575,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162a.c } \\\n \t    \"\" \\\n \t    \"libpr23162b.so\" \\\n-\t    \"-fPIC -O2\" \\\n+\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23162b\" \\\n@@ -1529,7 +1585,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162b.c } \\\n \t    {{readelf {-rW} pr23162.rd}} \\\n \t    \"pr23162b\" \\\n-\t    \"-fPIC -O0\" \\\n+\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23161a.so\" \\"
    },
    {
      "sha": "88dbe46f3bff74f8b98709bfc1b551cbdeb27276",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -169,9 +169,9 @@ if [istarget nios2*-*-*] {\n \n # Explicitly use \"-fcommon\" so that even if $CFLAGS includes\n # \"-fno-common\", these tests are compiled as expected.\n-if {   ![ld_compile \"$CC $CFLAGS -fcommon\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n-    || ![ld_compile \"$CC $CFLAGS -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n-    || ![ld_compile \"$CC $CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n+if {   ![ld_compile \"$CC $CFLAGS -fcommon $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n+    || ![ld_compile \"$CC $CFLAGS -fcommon $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n+    || ![ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n     unresolved $test1\n     unresolved $test1\n     return"
    },
    {
      "sha": "7fd6270fae02b7cba54d5a26ebe003fa9555e27c",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -489,8 +489,9 @@ proc build_binary { shared pic test source libname other mapfile verexp versymex\n     global CC\n     global CFLAGS\n     global script\n+    global NOSANTIZE_CFLAGS\n \n-    if ![ld_compile \"$CC -S $pic $CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n+    if ![ld_compile \"$CC -S $pic $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n \tunresolved \"$test\"\n \treturn\n     }\n@@ -687,6 +688,7 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     global objdump\n     global CC\n     global CFLAGS\n+    global NOSANTIZE_CFLAGS\n \n     set shared \"--shared --no-undefined-version\"\n     set script --version-script\n@@ -697,6 +699,9 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n \tappend cc_cmd \" -fno-lto\"\n     }\n \n+    # Disable all sanitizers.\n+    append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+\n     if ![ld_compile $cc_cmd $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunresolved \"$test\"\n \treturn"
    },
    {
      "sha": "3a242d35276a57b033053a399e7182ea02b3fcb4",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -444,7 +444,7 @@ visibility_run protected_undef_def\n visibility_run protected_weak\n visibility_run normal\n \n-if { ![ld_compile \"$CC -g $CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n+if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n     unresolved \"common hidden symbol\"\n } else {\n     if ![ld_link $ld tmpdir/common \"tmpdir/common.o\"] {\n@@ -454,10 +454,10 @@ if { ![ld_compile \"$CC -g $CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n     }\n }\n \n-if { ![ld_compile \"$CC -g $CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n+if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n     unresolved \"weak hidden symbol\"\n } else {\n-   if { ![ld_compile \"$CC -g $CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n+   if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n \tunresolved \"weak hidden symbol\"\n     } else {\n \tif ![ld_link $ld tmpdir/sh3.so \"-shared tmpdir/sh3.o\"] {"
    },
    {
      "sha": "355bfe7e0c21b1ef190d57b4dff3c711411d849d",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -267,13 +267,14 @@ proc build_lib {test libname objs dynsymexp} {\n     global shared\n     global srcdir\n     global subdir\n+    global NOSANTIZE_CFLAGS\n \n     set files \"\"\n     foreach obj $objs {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link $CC $tmpdir/$libname.so \"$shared $files\"]} {\n+    if {![ld_link \"$CC $NOSANTIZE_CFLAGS\" $tmpdir/$libname.so \"$shared $files\"]} {\n \tfail $test\n \treturn\n     }\n@@ -355,6 +356,9 @@ if {[check_lto_available]} {\n    append cc_cmd \" -fno-lto\"\n }\n \n+# Disable all sanitizers.\n+append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+\n # Old version of GCC for MIPS default to enabling -fpic\n # and get confused if it is used on the command line.\n if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {"
    },
    {
      "sha": "6bd2a6aa440e4715256f33dc9ba7c0a3b5ca7747",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -141,7 +141,7 @@ set lto_link_tests [list \\\n    \"\" \"-flto -O2 $lto_fat $NOSANTIZE_CFLAGS\" \\\n    {pr12758b.c} {} \"libpr12758.a\"] \\\n   [list \"PR ld/12758\" \\\n-   \"$NOPIE_LDFLAGS -O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \\\n+   \"$NOPIE_LDFLAGS $NOSANTIZE_CFLAGS -O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \\\n    \"$NOSANTIZE_CFLAGS\" \\\n    {dummy.c} {} \"pr12758.exe\"] \\\n   [list \"Build libpr13183.a\" \\\n@@ -458,10 +458,12 @@ set lto_link_symbol_tests [list \\\n    \"-O2 -flto -fuse-linker-plugin tmpdir/lto-9.o\" \"\" \\\n    {dummy.c} {{\"nm\" {-C} \"lto-9.d\"}} \"lto-9.exe\" \"c++\"] \\\n   [list \"LTO 16a symbol\" \\\n-   \"-O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin\" \"-flto\" \\\n+   \"-O2 $NOSANTIZE_CFLAGS -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin\" \\\n+   \"-flto $NOSANTIZE_CFLAGS\" \\\n    {lto-16a.c} {{\"nm\" {} \"lto-16a.d\"}} \"lto-16.exe\" \"c\"] \\\n   [list \"LTO 16b symbol\" \\\n-   \"-O2 -Wl,-e,foo -u bar -nostdlib -flto -fuse-linker-plugin\" \"-flto\" \\\n+   \"-O2 $NOSANTIZE_CFLAGS -Wl,-e,foo -u bar -nostdlib -flto -fuse-linker-plugin\" \\\n+   \"-flto $NOSANTIZE_CFLAGS\" \\\n    {lto-16a.c lto-16b.c} {{\"nm\" {} \"lto-16b.d\"}} \"lto-16b.exe\" \"c\"] \\\n   [list \"PR ld/13183\" \\\n    \"-O2 -flto -fuse-linker-plugin tmpdir/pr13183b.o tmpdir/libpr13183.a\" \"\" \\\n@@ -667,23 +669,25 @@ if { [at_least_gcc_version 4 7] } {\n \trun_cc_link_tests [list \\\n \t    [list \\\n \t\t\"Build pr22721a.so\" \\\n-\t\t\"-shared -nostdlib -nostartfiles -Wl,-version-script,pr22721.t\" \\\n+\t\t\"-shared $NOSANTIZE_CFLAGS -nostdlib -nostartfiles \\\n+\t\t -Wl,-version-script,pr22721.t\" \\\n \t\t\"\" \\\n \t\t{pr22721a.s} \\\n \t\t{} \\\n \t\t\"pr22721a.so\" \\\n \t    ] \\\n \t    [list \\\n \t\t\"Build pr22721b.o\" \\\n-\t\t\"$plug_opt\" \\\n+\t\t\"$plug_opt $NOSANTIZE_CFLAGS\" \\\n \t\t\"-O2 -fPIC -flto $lto_no_fat\" \\\n \t\t{pr22721b.c} \\\n \t    ] \\\n \t    [list \\\n \t\t\"Build PR ld/pr22721\" \\\n \t\t\"-O2 -flto -fuse-linker-plugin -nostdlib -nostartfiles \\\n-\t\t-Wl,-e,_start tmpdir/pr22721b.o tmpdir/pr22721a.so\" \\\n-\t\t\"\" \\\n+\t\t $NOSANTIZE_CFLAGS \\\n+\t\t -Wl,-e,_start tmpdir/pr22721b.o tmpdir/pr22721a.so\" \\\n+\t\t\"$NOSANTIZE_CFLAGS\" \\\n \t\t{dummy.c} \\\n \t\t{} \\\n \t\t\"pr22721.exe\""
    },
    {
      "sha": "5f6f21af2053e0f8d29267c9aef44d6a4cdc1b9b",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -295,9 +295,9 @@ if { !$can_compile || $failed_compile } {\n run_ld_link_tests $plugin_tests\n \n if { [is_elf_format] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n+     && [ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n+     && [ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n+     && [ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n     run_ld_link_tests $plugin_extra_elf_tests\n }\n "
    },
    {
      "sha": "652a0df84c790a962964bd9a06da9aabfe349925",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/05fd99cc80b1955e8c846dacfa57fe52816d4869/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=05fd99cc80b1955e8c846dacfa57fe52816d4869",
      "patch": "@@ -63,8 +63,8 @@ if [istarget tic6x*-*-*] {\n     set CFLAGS \"-mno-dsbt -msdata=none\"\n }\n \n-if { ![ld_compile $CC \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n-     || ![ld_compile $CC \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n+if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n+     || ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n     unresolved $test1\n     unresolved $test2\n     set CFLAGS \"$old_CFLAGS\"\n@@ -101,7 +101,7 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references within a single object.\n \n-if { ![ld_compile $CC \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n+if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n     unresolved $test2\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n@@ -126,7 +126,7 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references for ld -r\n \n-if { ![ld_compile $CC \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n+if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n     unresolved $test3\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\""
    }
  ]
}