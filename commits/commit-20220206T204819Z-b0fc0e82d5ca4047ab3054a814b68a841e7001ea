{
  "sha": "b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
  "node_id": "C_kwDOANOeidoAKGIwZmMwZTgyZDVjYTQwNDdhYjMwNTRhODE0YjY4YTg0MWU3MDAxZWE",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T03:35:40Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-06T20:48:19Z"
    },
    "message": "gdb: remove COMPUNIT_LOCATIONS_VALID macro, add getter/setter\n\nAdd a getter and a setter for a compunit_symtab's locations valid flag.\nRemove the corresponding macro and adjust all callers.\n\nChange-Id: I3e3cfba926ce62993d5b61814331bb3244afad01",
    "tree": {
      "sha": "2ef7ff6a9b11429764255484ceeead0d359ad58c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2ef7ff6a9b11429764255484ceeead0d359ad58c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c1e35bc9c6b9d7efe0f720394b1febe71bbc728b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1e35bc9c6b9d7efe0f720394b1febe71bbc728b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c1e35bc9c6b9d7efe0f720394b1febe71bbc728b"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 14,
    "deletions": 5
  },
  "files": [
    {
      "sha": "a14ac22f2882182f181364cc129b7ae79712a8e5",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
      "patch": "@@ -9493,7 +9493,7 @@ process_full_comp_unit (dwarf2_cu *cu, enum language pretend_language)\n \t options - this waits on GCC PR other/32998 (-frecord-gcc-switches).\n \t */\n       if (cu->has_loclist && gcc_4_minor >= 5)\n-\tcust->locations_valid = 1;\n+\tcust->set_locations_valid (true);\n \n       if (gcc_4_minor >= 5)\n \tcust->epilogue_unwind_valid = 1;"
    },
    {
      "sha": "5ad5cdbe3a3afece22b5bde4459737277c30a061",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
      "patch": "@@ -3709,7 +3709,7 @@ find_function_start_sal_1 (CORE_ADDR func_addr, obj_section *section,\n   symtab_and_line sal = find_pc_sect_line (func_addr, section, 0);\n \n   if (funfirstline && sal.symtab != NULL\n-      && (COMPUNIT_LOCATIONS_VALID (SYMTAB_COMPUNIT (sal.symtab))\n+      && (SYMTAB_COMPUNIT (sal.symtab)->locations_valid ()\n \t  || SYMTAB_LANGUAGE (sal.symtab) == language_asm))\n     {\n       struct gdbarch *gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n@@ -3885,7 +3885,7 @@ skip_prologue_sal (struct symtab_and_line *sal)\n      have proven the CU (Compilation Unit) supports it.  sal->SYMTAB does not\n      have to be set by the caller so we use SYM instead.  */\n   if (sym != NULL\n-      && COMPUNIT_LOCATIONS_VALID (SYMTAB_COMPUNIT (symbol_symtab (sym))))\n+      && SYMTAB_COMPUNIT (symbol_symtab (sym))->locations_valid ())\n     force_skip = 0;\n \n   saved_pc = pc;"
    },
    {
      "sha": "a612e1a9b48351edbe6839b5cc2bd4592d6b321c",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0fc0e82d5ca4047ab3054a814b68a841e7001ea/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=b0fc0e82d5ca4047ab3054a814b68a841e7001ea",
      "patch": "@@ -1531,6 +1531,16 @@ struct compunit_symtab\n     m_block_line_section = block_line_section;\n   }\n \n+  bool locations_valid () const\n+  {\n+    return m_locations_valid;\n+  }\n+\n+  void set_locations_valid (bool locations_valid)\n+  {\n+    m_locations_valid = locations_valid;\n+  }\n+\n   /* Make PRIMARY_FILETAB the primary filetab of this compunit symtab.\n \n      PRIMARY_FILETAB must already be a filetab of this compunit symtab.  */\n@@ -1593,7 +1603,7 @@ struct compunit_symtab\n   /* Symtab has been compiled with both optimizations and debug info so that\n      GDB may stop skipping prologues as variables locations are valid already\n      at function entry points.  */\n-  unsigned int locations_valid : 1;\n+  unsigned int m_locations_valid : 1;\n \n   /* DWARF unwinder for this CU is valid even for epilogues (PC at the return\n      instruction).  This is supported by GCC since 4.5.0.  */\n@@ -1626,7 +1636,6 @@ struct compunit_symtab\n \n using compunit_symtab_range = next_range<compunit_symtab>;\n \n-#define COMPUNIT_LOCATIONS_VALID(cust) ((cust)->locations_valid)\n #define COMPUNIT_EPILOGUE_UNWIND_VALID(cust) ((cust)->epilogue_unwind_valid)\n #define COMPUNIT_MACRO_TABLE(cust) ((cust)->macro_table)\n "
    }
  ]
}