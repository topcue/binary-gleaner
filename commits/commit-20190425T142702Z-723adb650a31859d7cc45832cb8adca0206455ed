{
  "sha": "723adb650a31859d7cc45832cb8adca0206455ed",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzIzYWRiNjUwYTMxODU5ZDdjYzQ1ODMyY2I4YWRjYTAyMDY0NTVlZA==",
  "commit": {
    "author": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-04-25T14:27:02Z"
    },
    "committer": {
      "name": "Sandra Loosemore",
      "email": "sandra@codesourcery.com",
      "date": "2019-04-25T14:27:02Z"
    },
    "message": "Detect invalid length field in debug frame FDE header.\n\nGDB was failing to catch cases where a corrupt ELF or core file\ncontained an invalid length value in a Dwarf debug frame FDE header.\nIt was checking for buffer overflow but not cases where the length was\nnegative or caused pointer wrap-around.\n\nIn addition to the additional validity check, this patch cleans up the\nmultiple signed/unsigned conversions on the length field so that an\nunsigned representation is used consistently throughout.\n\nThis patch fixes CVE-2017-9778 and PR gdb/21600.\n\n2019-04-25  Sandra Loosemore  <sandra@codesourcery.com>\n\t    Kang Li <kanglictf@gmail.com>\n\n\tPR gdb/21600\n\n\t* dwarf2-frame.c (read_initial_length): Be consistent about using\n\tunsigned representation of length.\n\t(decode_frame_entry_1): Likewise.  Check for wraparound of\n\tend pointer as well as buffer overflow.",
    "tree": {
      "sha": "7901cb38a9a47bfdf79e1165887414f8ca46f8c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7901cb38a9a47bfdf79e1165887414f8ca46f8c8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/723adb650a31859d7cc45832cb8adca0206455ed",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/723adb650a31859d7cc45832cb8adca0206455ed",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/723adb650a31859d7cc45832cb8adca0206455ed",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/723adb650a31859d7cc45832cb8adca0206455ed/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "68bb0359eec3093560929b8ad2b3f5d30e7a7e1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68bb0359eec3093560929b8ad2b3f5d30e7a7e1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/68bb0359eec3093560929b8ad2b3f5d30e7a7e1d"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 17,
    "deletions": 7
  },
  "files": [
    {
      "sha": "476dd19f7ce26ce74e13834542d39dc7d8fb6fcb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/723adb650a31859d7cc45832cb8adca0206455ed/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/723adb650a31859d7cc45832cb8adca0206455ed/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=723adb650a31859d7cc45832cb8adca0206455ed",
      "patch": "@@ -1,3 +1,13 @@\n+2019-04-25  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Kang Li <kanglictf@gmail.com>\n+\n+\tPR gdb/21600\n+\n+\t* dwarf2-frame.c (read_initial_length): Be consistent about using\n+\tunsigned representation of length.\n+\t(decode_frame_entry_1): Likewise.  Check for wraparound of\n+\tend pointer as well as buffer overflow.\n+\n 2019-04-24  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* aarch64-tdep.c (aarch64_gdbarch_init): Use \"pulongest\" to print"
    },
    {
      "sha": "b697afa5a13b79fc4e736dee689134c7bee276a1",
      "filename": "gdb/dwarf2-frame.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/723adb650a31859d7cc45832cb8adca0206455ed/gdb/dwarf2-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/723adb650a31859d7cc45832cb8adca0206455ed/gdb/dwarf2-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2-frame.c?ref=723adb650a31859d7cc45832cb8adca0206455ed",
      "patch": "@@ -1487,7 +1487,7 @@ static ULONGEST\n read_initial_length (bfd *abfd, const gdb_byte *buf,\n \t\t     unsigned int *bytes_read_ptr)\n {\n-  LONGEST result;\n+  ULONGEST result;\n \n   result = bfd_get_32 (abfd, buf);\n   if (result == 0xffffffff)\n@@ -1788,7 +1788,7 @@ decode_frame_entry_1 (struct comp_unit *unit, const gdb_byte *start,\n {\n   struct gdbarch *gdbarch = get_objfile_arch (unit->objfile);\n   const gdb_byte *buf, *end;\n-  LONGEST length;\n+  ULONGEST length;\n   unsigned int bytes_read;\n   int dwarf64_p;\n   ULONGEST cie_id;\n@@ -1799,15 +1799,15 @@ decode_frame_entry_1 (struct comp_unit *unit, const gdb_byte *start,\n   buf = start;\n   length = read_initial_length (unit->abfd, buf, &bytes_read);\n   buf += bytes_read;\n-  end = buf + length;\n-\n-  /* Are we still within the section?  */\n-  if (end > unit->dwarf_frame_buffer + unit->dwarf_frame_size)\n-    return NULL;\n+  end = buf + (size_t) length;\n \n   if (length == 0)\n     return end;\n \n+  /* Are we still within the section?  */\n+  if (end <= buf || end > unit->dwarf_frame_buffer + unit->dwarf_frame_size)\n+    return NULL;\n+\n   /* Distinguish between 32 and 64-bit encoded frame info.  */\n   dwarf64_p = (bytes_read == 12);\n "
    }
  ]
}