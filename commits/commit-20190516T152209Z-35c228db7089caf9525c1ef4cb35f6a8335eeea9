{
  "sha": "35c228db7089caf9525c1ef4cb35f6a8335eeea9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzVjMjI4ZGI3MDg5Y2FmOTUyNWMxZWY0Y2IzNWY2YTgzMzVlZWVhOQ==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T16:05:58Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:22:09Z"
    },
    "message": "[PATCH 6/57][Arm][GAS] Add support for MVE instructions: vst/vld{2,4}\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (enum it_instruction_type): Add MVE_UNPREDICABLE_INSN.\n\t(BAD_EL_TYPE): New error message.\n\t(parse_neon_el_struct_list): Adapt to be able to accept MVE variant.\n\t(parse_address_main): Likewise.\n\t(group_reloc_type): Add GROUP_MVE.\n\t(enum operand_parse_code): Add new operands.\n\t(parse_operands): Handle new operands.\n\t(M_MNEM_vst20, M_MNEM_vst21, M_MNEM_vst40, M_MNEM_vst41, M_MNEM_vst42,\n\t M_MNEM_vst43, M_MNEM_vld20, M_MNEM_vld21, M_MNEM_vld40, M_MNEM_vld41,\n\t M_MNEM_vld42, M_MNEM_vld43): New encodings.\n\t(do_mve_vst_vld): New encoding function.\n\t(do_neon_ld_st_interleave): Use BAD_EL_TYPE.\n\t(it_fsm_pre_encode): Handle new it_instruction_type\n\t(handle_pred_state): Likewise.\n\t* testsuite/gas/arm/mve-vstld-bad.d: New test.\n\t* testsuite/gas/arm/mve-vstld-bad.l: New test.\n\t* testsuite/gas/arm/mve-vstld-bad.s: New test.",
    "tree": {
      "sha": "a472f729b490cccb6dc05240deb530c596d49f09",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a472f729b490cccb6dc05240deb530c596d49f09"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/35c228db7089caf9525c1ef4cb35f6a8335eeea9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35c228db7089caf9525c1ef4cb35f6a8335eeea9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/35c228db7089caf9525c1ef4cb35f6a8335eeea9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/35c228db7089caf9525c1ef4cb35f6a8335eeea9/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "886e1c739b5441aca92a9725c932d0d446097a32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/886e1c739b5441aca92a9725c932d0d446097a32",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/886e1c739b5441aca92a9725c932d0d446097a32"
    }
  ],
  "stats": {
    "total": 620,
    "additions": 611,
    "deletions": 9
  },
  "files": [
    {
      "sha": "6b379a293bb97f1ffabffa99c5c2799146375d49",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "patch": "@@ -1,3 +1,23 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (enum it_instruction_type): Add MVE_UNPREDICABLE_INSN.\n+\t(BAD_EL_TYPE): New error message.\n+\t(parse_neon_el_struct_list): Adapt to be able to accept MVE variant.\n+\t(parse_address_main): Likewise.\n+\t(group_reloc_type): Add GROUP_MVE.\n+\t(enum operand_parse_code): Add new operands.\n+\t(parse_operands): Handle new operands.\n+\t(M_MNEM_vst20, M_MNEM_vst21, M_MNEM_vst40, M_MNEM_vst41, M_MNEM_vst42,\n+\t M_MNEM_vst43, M_MNEM_vld20, M_MNEM_vld21, M_MNEM_vld40, M_MNEM_vld41,\n+\t M_MNEM_vld42, M_MNEM_vld43): New encodings.\n+\t(do_mve_vst_vld): New encoding function.\n+\t(do_neon_ld_st_interleave): Use BAD_EL_TYPE.\n+\t(it_fsm_pre_encode): Handle new it_instruction_type\n+\t(handle_pred_state): Likewise.\n+\t* testsuite/gas/arm/mve-vstld-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vstld-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vstld-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (BAD_MVE_AUTO): New error message."
    },
    {
      "sha": "d2f04d742795746a4a31594fb511788cb49cc421",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 103,
      "deletions": 9,
      "changes": 112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "patch": "@@ -465,8 +465,9 @@ enum pred_instruction_type\n \t\t\t      i.e. BKPT and NOP.  */\n    IT_INSN,\t\t   /* The IT insn has been parsed.  */\n    VPT_INSN,\t\t   /* The VPT/VPST insn has been parsed.  */\n-   MVE_OUTSIDE_PRED_INSN   /* Instruction to indicate a MVE instruction without\n+   MVE_OUTSIDE_PRED_INSN , /* Instruction to indicate a MVE instruction without\n \t\t\t      a predication code.  */\n+   MVE_UNPREDICABLE_INSN   /* MVE instruction that is non-predicable.  */\n };\n \n /* The maximum number of operands we need.  */\n@@ -857,7 +858,7 @@ struct asm_opcode\n #define BAD_OVERLAP\t_(\"registers may not be the same\")\n #define BAD_HIREG\t_(\"lo register required\")\n #define BAD_THUMB32\t_(\"instruction not supported in Thumb16 mode\")\n-#define BAD_ADDR_MODE   _(\"instruction does not accept this addressing mode\");\n+#define BAD_ADDR_MODE   _(\"instruction does not accept this addressing mode\")\n #define BAD_BRANCH\t_(\"branch must be last instruction in IT block\")\n #define BAD_BRANCH_OFF\t_(\"branch out of range or not a multiple of 2\")\n #define BAD_NOT_IT\t_(\"instruction not allowed in IT block\")\n@@ -892,6 +893,7 @@ struct asm_opcode\n     \" use a valid -march or -mcpu option.\")\n #define BAD_MVE_SRCDEST\t_(\"Warning: 32-bit element size and same destination \"\\\n \t\t\t  \"and source operands makes instruction UNPREDICTABLE\")\n+#define BAD_EL_TYPE\t_(\"bad element type for instruction\")\n \n static struct hash_control * arm_ops_hsh;\n static struct hash_control * arm_cond_hsh;\n@@ -2211,6 +2213,7 @@ neon_alias_types_same (struct neon_typed_alias *a, struct neon_typed_alias *b)\n \n static int\n parse_neon_el_struct_list (char **str, unsigned *pbase,\n+\t\t\t   int mve,\n \t\t\t   struct neon_type_el *eltype)\n {\n   char *ptr = *str;\n@@ -2220,7 +2223,8 @@ parse_neon_el_struct_list (char **str, unsigned *pbase,\n   int lane = -1;\n   int leading_brace = 0;\n   enum arm_reg_type rtype = REG_TYPE_NDQ;\n-  const char *const incr_error = _(\"register stride must be 1 or 2\");\n+  const char *const incr_error = mve ? _(\"register stride must be 1\") :\n+    _(\"register stride must be 1 or 2\");\n   const char *const type_error = _(\"mismatched element/structure types in list\");\n   struct neon_typed_alias firsttype;\n   firsttype.defined = 0;\n@@ -2234,6 +2238,8 @@ parse_neon_el_struct_list (char **str, unsigned *pbase,\n   do\n     {\n       struct neon_typed_alias atype;\n+      if (mve)\n+\trtype = REG_TYPE_MQ;\n       int getreg = parse_typed_reg_or_scalar (&ptr, rtype, &rtype, &atype);\n \n       if (getreg == FAIL)\n@@ -2341,7 +2347,7 @@ parse_neon_el_struct_list (char **str, unsigned *pbase,\n     lane = NEON_INTERLEAVE_LANES;\n \n   /* Sanity check.  */\n-  if (lane == -1 || base_reg == -1 || count < 1 || count > 4\n+  if (lane == -1 || base_reg == -1 || count < 1 || (!mve && count > 4)\n       || (count > 1 && reg_incr == -1))\n     {\n       first_error (_(\"error parsing element/structure list\"));\n@@ -5486,7 +5492,8 @@ typedef enum\n \n   GROUP_LDR,\n   GROUP_LDRS,\n-  GROUP_LDC\n+  GROUP_LDC,\n+  GROUP_MVE\n } group_reloc_type;\n \n static struct group_reloc_table_entry group_reloc_table[] =\n@@ -5739,7 +5746,10 @@ parse_address_main (char **str, int i, int group_relocations,\n \n   if ((reg = arm_reg_parse (&p, REG_TYPE_RN)) == FAIL)\n     {\n-      inst.error = _(reg_expected_msgs[REG_TYPE_RN]);\n+      if (group_type == GROUP_MVE)\n+\tinst.error = BAD_ADDR_MODE;\n+      else\n+\tinst.error = _(reg_expected_msgs[REG_TYPE_RN]);\n       return PARSE_OPERAND_FAIL;\n     }\n   inst.operands[i].reg = reg;\n@@ -6747,6 +6757,8 @@ enum operand_parse_code\n   OP_NRDLST,    /* Neon double-precision register list (d0-d31, qN aliases) */\n   OP_NSTRLST,   /* Neon element/structure list */\n   OP_VRSDVLST,  /* VFP single or double-precision register list and VPR */\n+  OP_MSTRLST2,\t/* MVE vector list with two elements.  */\n+  OP_MSTRLST4,\t/* MVE vector list with four elements.  */\n \n   OP_RNDQ_I0,   /* Neon D or Q reg, or immediate zero.  */\n   OP_RVSD_I0,\t/* VFP S or D reg, or immediate zero.  */\n@@ -6787,6 +6799,7 @@ enum operand_parse_code\n   OP_SH,\t/* shifter operand */\n   OP_SHG,\t/* shifter operand with possible group relocation */\n   OP_ADDR,\t/* Memory address expression (any mode) */\n+  OP_ADDRMVE,\t/* Memory address expression for MVE's VSTR/VLDR.  */\n   OP_ADDRGLDR,\t/* Mem addr expr (any mode) with possible LDR group reloc */\n   OP_ADDRGLDRS, /* Mem addr expr (any mode) with possible LDRS group reloc */\n   OP_ADDRGLDC,  /* Mem addr expr (any mode) with possible LDC group reloc */\n@@ -7470,12 +7483,23 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \t\t\t\t    REGLIST_NEON_D, &partial_match);\n \t  break;\n \n+\tcase OP_MSTRLST4:\n+\tcase OP_MSTRLST2:\n+\t  val = parse_neon_el_struct_list (&str, &inst.operands[i].reg,\n+\t\t\t\t\t   1, &inst.operands[i].vectype);\n+\t  if (val != (((op_parse_code == OP_MSTRLST2) ? 3 : 7) << 5 | 0xe))\n+\t    goto failure;\n+\t  break;\n \tcase OP_NSTRLST:\n \t  val = parse_neon_el_struct_list (&str, &inst.operands[i].reg,\n-\t\t\t\t\t   &inst.operands[i].vectype);\n+\t\t\t\t\t   0, &inst.operands[i].vectype);\n \t  break;\n \n \t  /* Addressing modes */\n+\tcase OP_ADDRMVE:\n+\t  po_misc_or_fail (parse_address_group_reloc (&str, i, GROUP_MVE));\n+\t  break;\n+\n \tcase OP_ADDR:\n \t  po_misc_or_fail (parse_address (&str, i));\n \t  break;\n@@ -7578,6 +7602,8 @@ parse_operands (char *str, const unsigned int *pattern, bfd_boolean thumb)\n \tcase OP_VRSDVLST:\n \tcase OP_NRDLST:\n \tcase OP_NSTRLST:\n+\tcase OP_MSTRLST2:\n+\tcase OP_MSTRLST4:\n \t  if (val == FAIL)\n \t    goto failure;\n \t  inst.operands[i].imm = val;\n@@ -13855,6 +13881,18 @@ do_t_loloop (void)\n #define M_MNEM_vmlsdavax  0xeef01e21\n #define M_MNEM_vmullt\t0xee011e00\n #define M_MNEM_vmullb\t0xee010e00\n+#define M_MNEM_vst20\t0xfc801e00\n+#define M_MNEM_vst21\t0xfc801e20\n+#define M_MNEM_vst40\t0xfc801e01\n+#define M_MNEM_vst41\t0xfc801e21\n+#define M_MNEM_vst42\t0xfc801e41\n+#define M_MNEM_vst43\t0xfc801e61\n+#define M_MNEM_vld20\t0xfc901e00\n+#define M_MNEM_vld21\t0xfc901e20\n+#define M_MNEM_vld40\t0xfc901e01\n+#define M_MNEM_vld41\t0xfc901e21\n+#define M_MNEM_vld42\t0xfc901e41\n+#define M_MNEM_vld43\t0xfc901e61\n \n /* Neon instruction encoder helpers.  */\n \n@@ -15702,6 +15740,44 @@ check_simd_pred_availability (int fp, unsigned check)\n   return 0;\n }\n \n+static void\n+do_mve_vst_vld (void)\n+{\n+  if (!ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n+    return;\n+\n+  constraint (!inst.operands[1].preind || inst.relocs[0].exp.X_add_symbol != 0\n+\t      || inst.relocs[0].exp.X_add_number != 0\n+\t      || inst.operands[1].immisreg != 0,\n+\t      BAD_ADDR_MODE);\n+  constraint (inst.vectype.el[0].size > 32, BAD_EL_TYPE);\n+  if (inst.operands[1].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+  else if (inst.operands[1].reg == REG_SP && inst.operands[1].writeback)\n+    as_tsktsk (MVE_BAD_SP);\n+\n+\n+  /* These instructions are one of the \"exceptions\" mentioned in\n+     handle_pred_state.  They are MVE instructions that are not VPT compatible\n+     and do not accept a VPT code, thus appending such a code is a syntax\n+     error.  */\n+  if (inst.cond > COND_ALWAYS)\n+    first_error (BAD_SYNTAX);\n+  /* If we append a scalar condition code we can set this to\n+     MVE_OUTSIDE_PRED_INSN as it will also lead to a syntax error.  */\n+  else if (inst.cond < COND_ALWAYS)\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+  else\n+    inst.pred_insn_type = MVE_UNPREDICABLE_INSN;\n+\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= inst.operands[1].writeback << 21;\n+  inst.instruction |= inst.operands[1].reg << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= neon_logbits (inst.vectype.el[0].size) << 7;\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_neon_dyadic_if_su (void)\n {\n@@ -18008,7 +18084,7 @@ do_neon_ld_st_interleave (void)\n \n   constraint (typebits == -1, _(\"bad list type for instruction\"));\n   constraint (((inst.instruction >> 8) & 3) && et.size == 64,\n-\t      _(\"bad element type for instruction\"));\n+\t      BAD_EL_TYPE);\n \n   inst.instruction &= ~0xf00;\n   inst.instruction |= typebits << 8;\n@@ -19371,7 +19447,7 @@ it_fsm_pre_encode (void)\n    Specifications say that any non-MVE instruction inside a VPT block is\n    UNPREDICTABLE, with the exception of the BKPT instruction.  Whereas most MVE\n    instructions are deemed to be UNPREDICTABLE if inside an IT block.  For the\n-   few exceptions this will be handled at their respective handler functions.\n+   few exceptions we have MVE_UNPREDICABLE_INSN.\n    The error messages provided depending on the different combinations possible\n    are described in the cases below:\n    For 'most' MVE instructions:\n@@ -19408,6 +19484,7 @@ handle_pred_state (void)\n     case OUTSIDE_PRED_BLOCK:\n       switch (inst.pred_insn_type)\n \t{\n+\tcase MVE_UNPREDICABLE_INSN:\n \tcase MVE_OUTSIDE_PRED_INSN:\n \t  if (inst.cond < COND_ALWAYS)\n \t    {\n@@ -19507,6 +19584,7 @@ handle_pred_state (void)\n \t{\n \tcase INSIDE_VPT_INSN:\n \tcase VPT_INSN:\n+\tcase MVE_UNPREDICABLE_INSN:\n \tcase MVE_OUTSIDE_PRED_INSN:\n \t  gas_assert (0);\n \tcase OUTSIDE_PRED_INSN:\n@@ -19656,6 +19734,9 @@ handle_pred_state (void)\n \t\t    gas_assert (0);\n \t\t  }\n \t      }\n+\t  case MVE_UNPREDICABLE_INSN:\n+\t    as_tsktsk (now_pred.type == SCALAR_PRED ? MVE_NOT_IT : MVE_NOT_VPT);\n+\t    return SUCCESS;\n \t  case INSIDE_IT_INSN:\n \t    if (inst.cond > COND_ALWAYS)\n \t      {\n@@ -22855,6 +22936,19 @@ static const struct asm_opcode insns[] =\n  mCEF(vmlsdavx,\t  _vmlsdavx,\t3, (RRe, RMQ, RMQ),\t\tmve_vmladav),\n  mCEF(vmlsdavax,  _vmlsdavax,\t3, (RRe, RMQ, RMQ),\t\tmve_vmladav),\n \n+ mCEF(vst20,\t_vst20,\t    2, (MSTRLST2, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vst21,\t_vst21,\t    2, (MSTRLST2, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vst40,\t_vst40,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vst41,\t_vst41,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vst42,\t_vst42,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vst43,\t_vst43,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld20,\t_vld20,\t    2, (MSTRLST2, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld21,\t_vld21,\t    2, (MSTRLST2, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld40,\t_vld40,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld41,\t_vld41,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld42,\t_vld42,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+ mCEF(vld43,\t_vld43,\t    2, (MSTRLST4, ADDRMVE),\t\tmve_vst_vld),\n+\n #undef  ARM_VARIANT\n #define ARM_VARIANT    & fpu_vfp_ext_v1xd\n #undef  THUMB_VARIANT"
    },
    {
      "sha": "92b9c929ba0f15e8954cd6b2743d1805b4e14fd7",
      "filename": "gas/testsuite/gas/arm/mve-vstld-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstld-bad.d?ref=35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VST2/4 VLD2/4 instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vstld-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "3ea47d52728b2e932c601659a3dbd9d7c8d0725f",
      "filename": "gas/testsuite/gas/arm/mve-vstld-bad.l",
      "status": "added",
      "additions": 249,
      "deletions": 0,
      "changes": 249,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstld-bad.l?ref=35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "patch": "@@ -0,0 +1,249 @@\n+[^:]*: Assembler messages:\n+[^:]*:3: Error: register stride must be 1 -- `vst20.8 {q0,q2},\\[r0\\]'\n+[^:]*:4: Error: syntax error -- `vst20.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:5: Error: syntax error -- `vst20.8 {q0},\\[r0\\]'\n+[^:]*:6: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:7: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:8: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:9: Error: register stride must be 1 -- `vst20.8 {q3,q2},\\[r0\\]'\n+[^:]*:10: Error: bad element type for instruction -- `vst20.64 {q0,q1},\\[r0\\]'\n+[^:]*:11: Error: register stride must be 1 -- `vst21.8 {q0,q2},\\[r0\\]'\n+[^:]*:12: Error: syntax error -- `vst21.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:13: Error: syntax error -- `vst21.8 {q0},\\[r0\\]'\n+[^:]*:14: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:15: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:16: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:17: Error: register stride must be 1 -- `vst21.8 {q3,q2},\\[r0\\]'\n+[^:]*:18: Error: bad element type for instruction -- `vst21.64 {q0,q1},\\[r0\\]'\n+[^:]*:19: Error: register stride must be 1 -- `vst40.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:20: Error: register stride must be 1 -- `vst40.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:21: Error: register stride must be 1 -- `vst40.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:22: Error: register stride must be 1 -- `vst40.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:23: Error: syntax error -- `vst40.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:24: Error: syntax error -- `vst40.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:25: Error: syntax error -- `vst40.8 {q0,q1},\\[r0\\]'\n+[^:]*:26: Error: syntax error -- `vst40.8 {q0},\\[r0\\]'\n+[^:]*:27: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:28: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:29: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:30: Error: bad element type for instruction -- `vst40.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:31: Error: register stride must be 1 -- `vst41.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:32: Error: register stride must be 1 -- `vst41.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:33: Error: register stride must be 1 -- `vst41.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:34: Error: register stride must be 1 -- `vst41.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:35: Error: syntax error -- `vst41.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:36: Error: syntax error -- `vst41.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:37: Error: syntax error -- `vst41.8 {q0,q1},\\[r0\\]'\n+[^:]*:38: Error: syntax error -- `vst41.8 {q0},\\[r0\\]'\n+[^:]*:39: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:40: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:41: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:42: Error: bad element type for instruction -- `vst41.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:43: Error: register stride must be 1 -- `vst42.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:44: Error: register stride must be 1 -- `vst42.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:45: Error: register stride must be 1 -- `vst42.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:46: Error: register stride must be 1 -- `vst42.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:47: Error: syntax error -- `vst42.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:48: Error: syntax error -- `vst42.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:49: Error: syntax error -- `vst42.8 {q0,q1},\\[r0\\]'\n+[^:]*:50: Error: syntax error -- `vst42.8 {q0},\\[r0\\]'\n+[^:]*:51: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:52: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:53: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:54: Error: bad element type for instruction -- `vst42.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:55: Error: register stride must be 1 -- `vst43.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:56: Error: register stride must be 1 -- `vst43.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:57: Error: register stride must be 1 -- `vst43.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:58: Error: register stride must be 1 -- `vst43.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:59: Error: syntax error -- `vst43.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:60: Error: syntax error -- `vst43.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:61: Error: syntax error -- `vst43.8 {q0,q1},\\[r0\\]'\n+[^:]*:62: Error: syntax error -- `vst43.8 {q0},\\[r0\\]'\n+[^:]*:63: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:64: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:65: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:66: Error: bad element type for instruction -- `vst43.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:67: Error: selected processor does not support `vst1.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:68: Error: selected processor does not support `vst2.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:69: Error: selected processor does not support `vst3.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:70: Error: selected processor does not support `vst4.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:71: Error: bad instruction `vst23.32 {q0,q1},\\[r0\\]'\n+[^:]*:72: Error: bad instruction `vst44.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:73: Error: register stride must be 1 -- `vld20.8 {q0,q2},\\[r0\\]'\n+[^:]*:74: Error: syntax error -- `vld20.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:75: Error: syntax error -- `vld20.8 {q0},\\[r0\\]'\n+[^:]*:76: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:77: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:78: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:79: Error: register stride must be 1 -- `vld20.8 {q3,q2},\\[r0\\]'\n+[^:]*:80: Error: bad element type for instruction -- `vld20.64 {q0,q1},\\[r0\\]'\n+[^:]*:81: Error: register stride must be 1 -- `vld21.8 {q0,q2},\\[r0\\]'\n+[^:]*:82: Error: syntax error -- `vld21.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:83: Error: syntax error -- `vld21.8 {q0},\\[r0\\]'\n+[^:]*:84: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:85: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:86: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:87: Error: register stride must be 1 -- `vld21.8 {q3,q2},\\[r0\\]'\n+[^:]*:88: Error: bad element type for instruction -- `vld21.64 {q0,q1},\\[r0\\]'\n+[^:]*:89: Error: register stride must be 1 -- `vld40.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:90: Error: register stride must be 1 -- `vld40.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:91: Error: register stride must be 1 -- `vld40.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:92: Error: register stride must be 1 -- `vld40.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:93: Error: syntax error -- `vld40.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:94: Error: syntax error -- `vld40.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:95: Error: syntax error -- `vld40.8 {q0,q1},\\[r0\\]'\n+[^:]*:96: Error: syntax error -- `vld40.8 {q0},\\[r0\\]'\n+[^:]*:97: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:98: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:99: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:100: Error: bad element type for instruction -- `vld40.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:101: Error: register stride must be 1 -- `vld41.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:102: Error: register stride must be 1 -- `vld41.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:103: Error: register stride must be 1 -- `vld41.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:104: Error: register stride must be 1 -- `vld41.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:105: Error: syntax error -- `vld41.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:106: Error: syntax error -- `vld41.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:107: Error: syntax error -- `vld41.8 {q0,q1},\\[r0\\]'\n+[^:]*:108: Error: syntax error -- `vld41.8 {q0},\\[r0\\]'\n+[^:]*:109: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:110: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:111: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:112: Error: bad element type for instruction -- `vld41.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:113: Error: register stride must be 1 -- `vld42.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:114: Error: register stride must be 1 -- `vld42.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:115: Error: register stride must be 1 -- `vld42.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:116: Error: register stride must be 1 -- `vld42.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:117: Error: syntax error -- `vld42.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:118: Error: syntax error -- `vld42.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:119: Error: syntax error -- `vld42.8 {q0,q1},\\[r0\\]'\n+[^:]*:120: Error: syntax error -- `vld42.8 {q0},\\[r0\\]'\n+[^:]*:121: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:122: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:123: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:124: Error: bad element type for instruction -- `vld42.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:125: Error: register stride must be 1 -- `vld43.8 {q0,q2,q3,q4},\\[r0\\]'\n+[^:]*:126: Error: register stride must be 1 -- `vld43.8 {q0,q1,q3,q4},\\[r0\\]'\n+[^:]*:127: Error: register stride must be 1 -- `vld43.8 {q0,q1,q2,q4},\\[r0\\]'\n+[^:]*:128: Error: register stride must be 1 -- `vld43.8 {q3,q1,q2,q3},\\[r0\\]'\n+[^:]*:129: Error: syntax error -- `vld43.8 {q0,q1,q2,q3,q4},\\[r0\\]'\n+[^:]*:130: Error: syntax error -- `vld43.8 {q0,q1,q2},\\[r0\\]'\n+[^:]*:131: Error: syntax error -- `vld43.8 {q0,q1},\\[r0\\]'\n+[^:]*:132: Error: syntax error -- `vld43.8 {q0},\\[r0\\]'\n+[^:]*:133: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:134: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:135: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:136: Error: bad element type for instruction -- `vld43.64 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:137: Error: selected processor does not support `vld1.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:138: Error: selected processor does not support `vld2.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:139: Error: selected processor does not support `vld3.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:140: Error: selected processor does not support `vld4.8 {q0,q1},\\[r0\\]' in Thumb mode\n+[^:]*:141: Error: bad instruction `vld23.32 {q0,q1},\\[r0\\]'\n+[^:]*:142: Error: bad instruction `vld44.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:160: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:161: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:162: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:163: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:164: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:165: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:167: Error: syntax error -- `vst20t.32 {q0,q1},\\[r0\\]'\n+[^:]*:168: Error: syntax error -- `vst20e.32 {q0,q1},\\[r0\\]'\n+[^:]*:170: Error: syntax error -- `vst21t.32 {q0,q1},\\[r0\\]'\n+[^:]*:171: Error: syntax error -- `vst21e.32 {q0,q1},\\[r0\\]'\n+[^:]*:173: Error: syntax error -- `vst40t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:174: Error: syntax error -- `vst40e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:176: Error: syntax error -- `vst41t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:177: Error: syntax error -- `vst41e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:179: Error: syntax error -- `vst42t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:180: Error: syntax error -- `vst42e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:182: Error: syntax error -- `vst43t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:183: Error: syntax error -- `vst43e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:186: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:188: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:190: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:192: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:194: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:196: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:198: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:199: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:200: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:201: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:202: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:203: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:205: Error: syntax error -- `vld20t.32 {q0,q1},\\[r0\\]'\n+[^:]*:206: Error: syntax error -- `vld20e.32 {q0,q1},\\[r0\\]'\n+[^:]*:208: Error: syntax error -- `vld21t.32 {q0,q1},\\[r0\\]'\n+[^:]*:209: Error: syntax error -- `vld21e.32 {q0,q1},\\[r0\\]'\n+[^:]*:211: Error: syntax error -- `vld40t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:212: Error: syntax error -- `vld40e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:214: Error: syntax error -- `vld41t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:215: Error: syntax error -- `vld41e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:217: Error: syntax error -- `vld42t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:218: Error: syntax error -- `vld42e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:220: Error: syntax error -- `vld43t.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:221: Error: syntax error -- `vld43e.32 {q0,q1,q2,q3},\\[r0\\]'\n+[^:]*:224: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:226: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:228: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:230: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:232: Warning: instruction is UNPREDICTABLE in a VPT block\n+[^:]*:234: Warning: instruction is UNPREDICTABLE in a VPT block"
    },
    {
      "sha": "1a8b0b11f08e150369c918ddf91e1dec7721f1c8",
      "filename": "gas/testsuite/gas/arm/mve-vstld-bad.s",
      "status": "added",
      "additions": 234,
      "deletions": 0,
      "changes": 234,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/35c228db7089caf9525c1ef4cb35f6a8335eeea9/gas/testsuite/gas/arm/mve-vstld-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vstld-bad.s?ref=35c228db7089caf9525c1ef4cb35f6a8335eeea9",
      "patch": "@@ -0,0 +1,234 @@\n+.syntax unified\n+.thumb\n+vst20.8 {q0, q2}, [r0]\n+vst20.8 {q0, q1, q2}, [r0]\n+vst20.8 {q0}, [r0]\n+vst20.8 {q0, q1}, [pc]\n+vst20.8 {q0, q1}, [pc]!\n+vst20.8 {q0, q1}, [sp]!\n+vst20.8 {q3, q2}, [r0]\n+vst20.64 {q0, q1}, [r0]\n+vst21.8 {q0, q2}, [r0]\n+vst21.8 {q0, q1, q2}, [r0]\n+vst21.8 {q0}, [r0]\n+vst21.8 {q0, q1}, [pc]\n+vst21.8 {q0, q1}, [pc]!\n+vst21.8 {q0, q1}, [sp]!\n+vst21.8 {q3, q2}, [r0]\n+vst21.64 {q0, q1}, [r0]\n+vst40.8 {q0, q2, q3, q4}, [r0]\n+vst40.8 {q0, q1, q3, q4}, [r0]\n+vst40.8 {q0, q1, q2, q4}, [r0]\n+vst40.8 {q3, q1, q2, q3}, [r0]\n+vst40.8 {q0, q1, q2, q3, q4}, [r0]\n+vst40.8 {q0, q1, q2}, [r0]\n+vst40.8 {q0, q1}, [r0]\n+vst40.8 {q0}, [r0]\n+vst40.8 {q0, q1, q2, q3}, [pc]\n+vst40.8 {q0, q1, q2, q3}, [pc]!\n+vst40.8 {q0, q1, q2, q3}, [sp]!\n+vst40.64 {q0, q1, q2, q3}, [r0]\n+vst41.8 {q0, q2, q3, q4}, [r0]\n+vst41.8 {q0, q1, q3, q4}, [r0]\n+vst41.8 {q0, q1, q2, q4}, [r0]\n+vst41.8 {q3, q1, q2, q3}, [r0]\n+vst41.8 {q0, q1, q2, q3, q4}, [r0]\n+vst41.8 {q0, q1, q2}, [r0]\n+vst41.8 {q0, q1}, [r0]\n+vst41.8 {q0}, [r0]\n+vst41.8 {q0, q1, q2, q3}, [pc]\n+vst41.8 {q0, q1, q2, q3}, [pc]!\n+vst41.8 {q0, q1, q2, q3}, [sp]!\n+vst41.64 {q0, q1, q2, q3}, [r0]\n+vst42.8 {q0, q2, q3, q4}, [r0]\n+vst42.8 {q0, q1, q3, q4}, [r0]\n+vst42.8 {q0, q1, q2, q4}, [r0]\n+vst42.8 {q3, q1, q2, q3}, [r0]\n+vst42.8 {q0, q1, q2, q3, q4}, [r0]\n+vst42.8 {q0, q1, q2}, [r0]\n+vst42.8 {q0, q1}, [r0]\n+vst42.8 {q0}, [r0]\n+vst42.8 {q0, q1, q2, q3}, [pc]\n+vst42.8 {q0, q1, q2, q3}, [pc]!\n+vst42.8 {q0, q1, q2, q3}, [sp]!\n+vst42.64 {q0, q1, q2, q3}, [r0]\n+vst43.8 {q0, q2, q3, q4}, [r0]\n+vst43.8 {q0, q1, q3, q4}, [r0]\n+vst43.8 {q0, q1, q2, q4}, [r0]\n+vst43.8 {q3, q1, q2, q3}, [r0]\n+vst43.8 {q0, q1, q2, q3, q4}, [r0]\n+vst43.8 {q0, q1, q2}, [r0]\n+vst43.8 {q0, q1}, [r0]\n+vst43.8 {q0}, [r0]\n+vst43.8 {q0, q1, q2, q3}, [pc]\n+vst43.8 {q0, q1, q2, q3}, [pc]!\n+vst43.8 {q0, q1, q2, q3}, [sp]!\n+vst43.64 {q0, q1, q2, q3}, [r0]\n+vst1.8 {q0, q1}, [r0]\n+vst2.8 {q0, q1}, [r0]\n+vst3.8 {q0, q1}, [r0]\n+vst4.8 {q0, q1}, [r0]\n+vst23.32 {q0, q1}, [r0]\n+vst44.32 {q0, q1, q2, q3}, [r0]\n+vld20.8 {q0, q2}, [r0]\n+vld20.8 {q0, q1, q2}, [r0]\n+vld20.8 {q0}, [r0]\n+vld20.8 {q0, q1}, [pc]\n+vld20.8 {q0, q1}, [pc]!\n+vld20.8 {q0, q1}, [sp]!\n+vld20.8 {q3, q2}, [r0]\n+vld20.64 {q0, q1}, [r0]\n+vld21.8 {q0, q2}, [r0]\n+vld21.8 {q0, q1, q2}, [r0]\n+vld21.8 {q0}, [r0]\n+vld21.8 {q0, q1}, [pc]\n+vld21.8 {q0, q1}, [pc]!\n+vld21.8 {q0, q1}, [sp]!\n+vld21.8 {q3, q2}, [r0]\n+vld21.64 {q0, q1}, [r0]\n+vld40.8 {q0, q2, q3, q4}, [r0]\n+vld40.8 {q0, q1, q3, q4}, [r0]\n+vld40.8 {q0, q1, q2, q4}, [r0]\n+vld40.8 {q3, q1, q2, q3}, [r0]\n+vld40.8 {q0, q1, q2, q3, q4}, [r0]\n+vld40.8 {q0, q1, q2}, [r0]\n+vld40.8 {q0, q1}, [r0]\n+vld40.8 {q0}, [r0]\n+vld40.8 {q0, q1, q2, q3}, [pc]\n+vld40.8 {q0, q1, q2, q3}, [pc]!\n+vld40.8 {q0, q1, q2, q3}, [sp]!\n+vld40.64 {q0, q1, q2, q3}, [r0]\n+vld41.8 {q0, q2, q3, q4}, [r0]\n+vld41.8 {q0, q1, q3, q4}, [r0]\n+vld41.8 {q0, q1, q2, q4}, [r0]\n+vld41.8 {q3, q1, q2, q3}, [r0]\n+vld41.8 {q0, q1, q2, q3, q4}, [r0]\n+vld41.8 {q0, q1, q2}, [r0]\n+vld41.8 {q0, q1}, [r0]\n+vld41.8 {q0}, [r0]\n+vld41.8 {q0, q1, q2, q3}, [pc]\n+vld41.8 {q0, q1, q2, q3}, [pc]!\n+vld41.8 {q0, q1, q2, q3}, [sp]!\n+vld41.64 {q0, q1, q2, q3}, [r0]\n+vld42.8 {q0, q2, q3, q4}, [r0]\n+vld42.8 {q0, q1, q3, q4}, [r0]\n+vld42.8 {q0, q1, q2, q4}, [r0]\n+vld42.8 {q3, q1, q2, q3}, [r0]\n+vld42.8 {q0, q1, q2, q3, q4}, [r0]\n+vld42.8 {q0, q1, q2}, [r0]\n+vld42.8 {q0, q1}, [r0]\n+vld42.8 {q0}, [r0]\n+vld42.8 {q0, q1, q2, q3}, [pc]\n+vld42.8 {q0, q1, q2, q3}, [pc]!\n+vld42.8 {q0, q1, q2, q3}, [sp]!\n+vld42.64 {q0, q1, q2, q3}, [r0]\n+vld43.8 {q0, q2, q3, q4}, [r0]\n+vld43.8 {q0, q1, q3, q4}, [r0]\n+vld43.8 {q0, q1, q2, q4}, [r0]\n+vld43.8 {q3, q1, q2, q3}, [r0]\n+vld43.8 {q0, q1, q2, q3, q4}, [r0]\n+vld43.8 {q0, q1, q2}, [r0]\n+vld43.8 {q0, q1}, [r0]\n+vld43.8 {q0}, [r0]\n+vld43.8 {q0, q1, q2, q3}, [pc]\n+vld43.8 {q0, q1, q2, q3}, [pc]!\n+vld43.8 {q0, q1, q2, q3}, [sp]!\n+vld43.64 {q0, q1, q2, q3}, [r0]\n+vld1.8 {q0, q1}, [r0]\n+vld2.8 {q0, q1}, [r0]\n+vld3.8 {q0, q1}, [r0]\n+vld4.8 {q0, q1}, [r0]\n+vld23.32 {q0, q1}, [r0]\n+vld44.32 {q0, q1, q2, q3}, [r0]\n+\n+.macro cond2 op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().32  {q0, q1}, [r0]\n+.endr\n+.endm\n+\n+\n+\n+.macro cond4 op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().32 {q0, q1, q2, q3}, [r0]\n+.endr\n+.endm\n+\n+cond2 vst20\n+cond2 vst21\n+cond4 vst40\n+cond4 vst41\n+cond4 vst42\n+cond4 vst43\n+vpste\n+vst20t.32 {q0, q1}, [r0]\n+vst20e.32 {q0, q1}, [r0]\n+vpste\n+vst21t.32 {q0, q1}, [r0]\n+vst21e.32 {q0, q1}, [r0]\n+vpste\n+vst40t.32 {q0, q1, q2, q3}, [r0]\n+vst40e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vst41t.32 {q0, q1, q2, q3}, [r0]\n+vst41e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vst42t.32 {q0, q1, q2, q3}, [r0]\n+vst42e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vst43t.32 {q0, q1, q2, q3}, [r0]\n+vst43e.32 {q0, q1, q2, q3}, [r0]\n+\n+vpst\n+vst20.32 {q0, q1}, [r0]\n+vpst\n+vst21.32 {q0, q1}, [r0]\n+vpst\n+vst40.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vst41.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vst42.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vst43.32 {q0, q1, q2, q3}, [r0]\n+\n+cond2 vld20\n+cond2 vld21\n+cond4 vld40\n+cond4 vld41\n+cond4 vld42\n+cond4 vld43\n+vpste\n+vld20t.32 {q0, q1}, [r0]\n+vld20e.32 {q0, q1}, [r0]\n+vpste\n+vld21t.32 {q0, q1}, [r0]\n+vld21e.32 {q0, q1}, [r0]\n+vpste\n+vld40t.32 {q0, q1, q2, q3}, [r0]\n+vld40e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vld41t.32 {q0, q1, q2, q3}, [r0]\n+vld41e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vld42t.32 {q0, q1, q2, q3}, [r0]\n+vld42e.32 {q0, q1, q2, q3}, [r0]\n+vpste\n+vld43t.32 {q0, q1, q2, q3}, [r0]\n+vld43e.32 {q0, q1, q2, q3}, [r0]\n+\n+vpst\n+vld20.32 {q0, q1}, [r0]\n+vpst\n+vld21.32 {q0, q1}, [r0]\n+vpst\n+vld40.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vld41.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vld42.32 {q0, q1, q2, q3}, [r0]\n+vpst\n+vld43.32 {q0, q1, q2, q3}, [r0]"
    }
  ]
}