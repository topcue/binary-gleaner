{
  "sha": "3f66685e9e92717af0cafa20480de5548aea7298",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Y2NjY4NWU5ZTkyNzE3YWYwY2FmYTIwNDgwZGU1NTQ4YWVhNzI5OA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-10-25T02:59:29Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-10-25T13:06:09Z"
    },
    "message": "gdb: pass inferior to check_pid_namespace_match\n\nPass the inferior argument available in thread_db_inferior_created, and\nuse it to do most things requiring the inferior.\ncheck_pid_namespace_match is not completely decoupled from the current\ninferior yet, there are hidden references behind target_can_run, for\nexample.  But I think this is still a good step forward.\n\ngdb/ChangeLog:\n\n\t* linux-thread-db.c (check_pid_namespace_match): Add inferior\n\tparameter and use it.\n\t(thread_db_inferior_created): Pass inferior argument.\n\nChange-Id: Ib768b14fc61dcf115fe13f776691f2c2f36e0679",
    "tree": {
      "sha": "03f96d39222f97ac4bb7086ba24c5754c54c3c0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/03f96d39222f97ac4bb7086ba24c5754c54c3c0d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3f66685e9e92717af0cafa20480de5548aea7298",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f66685e9e92717af0cafa20480de5548aea7298",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3f66685e9e92717af0cafa20480de5548aea7298",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f66685e9e92717af0cafa20480de5548aea7298/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a0ff652f4cacc3557795204ae5e73fa9f5d2ea30",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0ff652f4cacc3557795204ae5e73fa9f5d2ea30",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a0ff652f4cacc3557795204ae5e73fa9f5d2ea30"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "af9d5abbe69d1244b4c28ffb274dbc900178842f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f66685e9e92717af0cafa20480de5548aea7298/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f66685e9e92717af0cafa20480de5548aea7298/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3f66685e9e92717af0cafa20480de5548aea7298",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-24  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* linux-thread-db.c (check_pid_namespace_match): Add inferior\n+\tparameter and use it.\n+\t(thread_db_inferior_created): Pass inferior argument.\n+\n 2020-10-24  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* aix-thread.c (aix_thread_inferior_created): Add inferior"
    },
    {
      "sha": "7cbdfa5080d9461fd38169614ded16eabf7710b9",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3f66685e9e92717af0cafa20480de5548aea7298/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3f66685e9e92717af0cafa20480de5548aea7298/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=3f66685e9e92717af0cafa20480de5548aea7298",
      "patch": "@@ -1286,7 +1286,7 @@ thread_db_new_objfile (struct objfile *objfile)\n }\n \n static void\n-check_pid_namespace_match (void)\n+check_pid_namespace_match (inferior *inf)\n {\n   /* Check is only relevant for local targets targets.  */\n   if (target_can_run ())\n@@ -1296,7 +1296,7 @@ check_pid_namespace_match (void)\n \t child's thread list, we'll mistakenly think it has no threads\n \t since the thread PID fields won't match the PID we give to\n \t libthread_db.  */\n-      if (!linux_ns_same (inferior_ptid.pid (), LINUX_NS_PID))\n+      if (!linux_ns_same (inf->pid, LINUX_NS_PID))\n \t{\n \t  warning (_ (\"Target and debugger are in different PID \"\n \t\t      \"namespaces; thread lists and other data are \"\n@@ -1312,7 +1312,7 @@ check_pid_namespace_match (void)\n static void\n thread_db_inferior_created (inferior *inf)\n {\n-  check_pid_namespace_match ();\n+  check_pid_namespace_match (inf);\n   check_for_thread_db ();\n }\n "
    }
  ]
}