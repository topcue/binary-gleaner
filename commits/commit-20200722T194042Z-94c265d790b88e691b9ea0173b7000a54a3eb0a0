{
  "sha": "94c265d790b88e691b9ea0173b7000a54a3eb0a0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTRjMjY1ZDc5MGI4OGU2OTFiOWVhMDE3M2I3MDAwYTU0YTNlYjBhMA==",
  "commit": {
    "author": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-03-05T00:42:43Z"
    },
    "committer": {
      "name": "Kevin Buettner",
      "email": "kevinb@redhat.com",
      "date": "2020-07-22T19:40:42Z"
    },
    "message": "Test ability to access unwritten-to mmap data in core file\n\ngdb/testsuite/ChangeLog:\n\n\tPR corefiles/25631\n\t* gdb.base/corefile.exp (accessing anonymous, unwritten-to mmap data):\n\tNew test.\n\t* gdb.base/coremaker.c (buf3): New global.\n\t(mmapdata): Add mmap call which uses MAP_ANONYMOUS and MAP_PRIVATE\n\tflags.",
    "tree": {
      "sha": "7b2f89ac2df9e5b3550e0d9720a2080876b2ea86",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7b2f89ac2df9e5b3550e0d9720a2080876b2ea86"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/94c265d790b88e691b9ea0173b7000a54a3eb0a0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94c265d790b88e691b9ea0173b7000a54a3eb0a0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/94c265d790b88e691b9ea0173b7000a54a3eb0a0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94c265d790b88e691b9ea0173b7000a54a3eb0a0/comments",
  "author": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "KevinBuettner",
    "id": 65747518,
    "node_id": "MDQ6VXNlcjY1NzQ3NTE4",
    "avatar_url": "https://avatars.githubusercontent.com/u/65747518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/KevinBuettner",
    "html_url": "https://github.com/KevinBuettner",
    "followers_url": "https://api.github.com/users/KevinBuettner/followers",
    "following_url": "https://api.github.com/users/KevinBuettner/following{/other_user}",
    "gists_url": "https://api.github.com/users/KevinBuettner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/KevinBuettner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/KevinBuettner/subscriptions",
    "organizations_url": "https://api.github.com/users/KevinBuettner/orgs",
    "repos_url": "https://api.github.com/users/KevinBuettner/repos",
    "events_url": "https://api.github.com/users/KevinBuettner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/KevinBuettner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2735d4218ea81ea83458007a80e4132fa6e73668",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2735d4218ea81ea83458007a80e4132fa6e73668",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2735d4218ea81ea83458007a80e4132fa6e73668"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 29,
    "deletions": 1
  },
  "files": [
    {
      "sha": "57e63f5216c51eeae7dbc97f3a4dab1178f05742",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=94c265d790b88e691b9ea0173b7000a54a3eb0a0",
      "patch": "@@ -1,4 +1,13 @@\n-2020-07-20  Kevin Buettner  <kevinb@redhat.com>\n+2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n+\n+\tPR corefiles/25631\n+\t* gdb.base/corefile.exp (accessing anonymous, unwritten-to mmap data):\n+\tNew test.\n+\t* gdb.base/coremaker.c (buf3): New global.\n+\t(mmapdata): Add mmap call which uses MAP_ANONYMOUS and MAP_PRIVATE\n+\tflags.\n+\n+2020-07-22  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.base/coremaker.c (filler_ro): New global constant.\n "
    },
    {
      "sha": "eaabe6c0f8c9f2414cc25bd21790bf354e7a6582",
      "filename": "gdb/testsuite/gdb.base/corefile.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/gdb.base/corefile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/gdb.base/corefile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/corefile.exp?ref=94c265d790b88e691b9ea0173b7000a54a3eb0a0",
      "patch": "@@ -175,6 +175,15 @@ gdb_test_multiple \"x/8bd buf2\" \"$test\" {\n     }\n }\n \n+# Test ability to read anonymous and, more importantly, unwritten-to\n+# mmap'd data.\n+\n+if { ![istarget *-linux*] } {\n+    setup_xfail \"*-*-*\"\n+}\n+gdb_test \"x/wx buf3\" \"$hex:\\[ \\t\\]+0x00000000\" \\\n+\t \"accessing anonymous, unwritten-to mmap data\"\n+\n # test reinit_frame_cache\n \n gdb_load ${binfile}"
    },
    {
      "sha": "0981b21738fcd115f2345c8556dd228e4220ebc2",
      "filename": "gdb/testsuite/gdb.base/coremaker.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/gdb.base/coremaker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/94c265d790b88e691b9ea0173b7000a54a3eb0a0/gdb/testsuite/gdb.base/coremaker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/coremaker.c?ref=94c265d790b88e691b9ea0173b7000a54a3eb0a0",
      "patch": "@@ -38,6 +38,7 @@\n \n char *buf1;\n char *buf2;\n+char *buf3;\n \n int coremaker_data = 1;\t/* In Data section */\n int coremaker_bss;\t/* In BSS section */\n@@ -104,6 +105,15 @@ mmapdata ()\n     }\n   /* Touch buf2 so kernel writes it out into 'core'. */\n   buf2[0] = buf1[0];\n+\n+  /* Create yet another region which is allocated, but not written to.  */\n+  buf3 = mmap (NULL, MAPSIZE, PROT_READ | PROT_WRITE,\n+               MAP_ANONYMOUS | MAP_PRIVATE, -1, 0);\n+  if (buf3 == (char *) -1)\n+    {\n+      perror (\"mmap failed\");\n+      return;\n+    }\n }\n \n void"
    }
  ]
}