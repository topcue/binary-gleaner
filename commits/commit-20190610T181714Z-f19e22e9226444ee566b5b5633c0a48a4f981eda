{
  "sha": "f19e22e9226444ee566b5b5633c0a48a4f981eda",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjE5ZTIyZTkyMjY0NDRlZTU2NmI1YjU2MzNjMGE0OGE0Zjk4MWVkYQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-06-10T18:17:14Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-06-10T18:17:14Z"
    },
    "message": "[gdb] Fix dynamic-stack-buffer-overflow in linespec_lexer_lex_string\n\nWhen compiling gdb with '-lasan -fsanitizer=address' and running tests with\n'export ASAN_OPTIONS=\"detect_leaks=0:alloc_dealloc_mismatch=0\"', I run into:\n...\nERROR: GDB process no longer exists\nUNRESOLVED: gdb.linespec/cpls-abi-tag.exp: \\\n  test_abi_tag: completion: at tag: tab complete \"b test_abi_tag_function[abi:\"\n...\n\nIn more detail:\n...\n==3637==ERROR: AddressSanitizer: dynamic-stack-buffer-overflow on address \\\n  0x7fff5952bbdd at pc 0x000000fe5c57 bp 0x7fff5952af30 sp 0x7fff5952af28\nREAD of size 1 at 0x7fff5952bbdd thread T0\n    #0 0xfe5c56 in linespec_lexer_lex_string src/gdb/linespec.c:727\n    #1 0xfe7473 in linespec_lexer_lex_one src/gdb/linespec.c:946\n    #2 0xfe799d in linespec_lexer_consume_token src/gdb/linespec.c:982\n    #3 0xff446d in parse_linespec src/gdb/linespec.c:2564\n    #4 0xff78be in linespec_complete(completion_tracker&, char const*, \\\n                   symbol_name_match_type) src/gdb/linespec.c:2961\n    #5 0xb9299c in complete_address_and_linespec_locations \\\n                   src/gdb/completer.c:573\n    #6 0xb93e90 in location_completer(cmd_list_element*, completion_tracker&, \\\n                   char const*, char const*) src/gdb/completer.c:919\n    #7 0xb940c5 in location_completer_handle_brkchars src/gdb/completer.c:956\n    #8 0xb957ec in complete_line_internal_normal_command \\\n                   src/gdb/completer.c:1208\n    #9 0xb96507 in complete_line_internal_1 src/gdb/completer.c:1430\n    #10 0xb965c2 in complete_line_internal src/gdb/completer.c:1449\n    #11 0xb98630 in gdb_completion_word_break_characters_throw \\\n                    src/gdb/completer.c:1862\n    #12 0xb98838 in gdb_completion_word_break_characters() \\\n                    src/gdb/completer.c:1897\n    #13 0x16c6362 in _rl_find_completion_word src/readline/complete.c:943\n    #14 0x16ca8d0 in rl_complete_internal src/readline/complete.c:1843\n    #15 0x16c460c in rl_complete src/readline/complete.c:408\n    #16 0x16b3368 in _rl_dispatch_subseq src/readline/readline.c:774\n    #17 0x16b3092 in _rl_dispatch src/readline/readline.c:724\n    #18 0x16b2939 in readline_internal_char src/readline/readline.c:552\n    #19 0x16f1fb0 in rl_callback_read_char src/readline/callback.c:201\n    #20 0xddc5a1 in gdb_rl_callback_read_char_wrapper_noexcept \\\n                    src/gdb/event-top.c:175\n    #21 0xddc773 in gdb_rl_callback_read_char_wrapper src/gdb/event-top.c:192\n    #22 0xddd9f5 in stdin_event_handler(int, void*) src/gdb/event-top.c:514\n    #23 0xdd7d8f in handle_file_event src/gdb/event-loop.c:731\n    #24 0xdd8607 in gdb_wait_for_event src/gdb/event-loop.c:857\n    #25 0xdd629c in gdb_do_one_event() src/gdb/event-loop.c:321\n    #26 0xdd6344 in start_event_loop() src/gdb/event-loop.c:370\n    #27 0x10a7715 in captured_command_loop src/gdb/main.c:331\n    #28 0x10aa548 in captured_main src/gdb/main.c:1173\n    #29 0x10aa5d8 in gdb_main(captured_main_args*) src/gdb/main.c:1188\n    #30 0x87bd35 in main src/gdb/gdb.c:32\n    #31 0x7fb0364c6f89 in __libc_start_main (/lib64/libc.so.6+0x20f89)\n    #32 0x87bb49 in _start (build/gdb/gdb+0x87bb49)\n\nAddress 0x7fff5952bbdd is located in stack of thread T0 at offset 557 in frame\n    #0 0xb93702 in location_completer(cmd_list_element*, completion_tracker&, \\\n                   char const*, char const*) src/gdb/completer.c:831\n\n  This frame has 4 object(s):\n    [32, 40) 'copy'\n    [96, 104) 'location'\n    [160, 168) 'text'\n    [224, 256) 'completion_info' <== Memory access at offset 557 overflows \\\n                                    this variable\nHINT: this may be a false positive if your program uses some custom stack \\\n      unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: dynamic-stack-buffer-overflow \\\n         src/gdb/linespec.c:727 in linespec_lexer_lex_string\nShadow bytes around the buggy address:\n  0x10006b29d720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006b29d730: 00 00 00 00 00 00 f1 f1 f1 f1 00 f2 f2 f2 f2 f2\n  0x10006b29d740: f2 f2 00 f2 f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f2 f2\n  0x10006b29d750: f2 f2 00 00 00 00 f3 f3 f3 f3 00 00 00 00 00 00\n  0x10006b29d760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x10006b29d770: 00 00 00 00 ca ca ca ca 00 00 00[05]cb cb cb cb\n  0x10006b29d780: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n  0x10006b29d790: 00 f2 f2 f2 f2 f2 f2 f2 00 f2 f2 f2 f3 f3 f3 f3\n  0x10006b29d7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006b29d7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006b29d7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07\n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==3637==ABORTING\n...\n\nThe problem happens in linespec_lexer_lex_string when lexing\n\"b test_abi_tag_function[abi:\\0\" (using a notation where we make the implicit\nterminating \\0 explicit).\n\nWe arrrive here with (PARSER_STREAM (parser)) == \":\\0\":\n...\n             /* Do not tokenize ABI tags such as \"[abi:cxx11]\".  */\n             else if (PARSER_STREAM (parser) - start > 4\n                      && startswith (PARSER_STREAM (parser) - 4, \"[abi\"))\n               ++(PARSER_STREAM (parser));\n...\nand consume ':', after which we end up here and consume '\\0':\n...\n         /* Advance the stream.  */\n         ++(PARSER_STREAM (parser));\n...\nafter which (PARSER_STREAM (parser)) points past the end of the string.\n\nFix this by removing the first \"++(PARSER_STREAM (parser))\", and add an assert\nto the second one to detect moving past the end-of-string.\n\nBuild and tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2019-06-10  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/24611\n\t* linespec.c (linespec_lexer_lex_string): Remove incorrect\n\t\"++(PARSER_STREAM (parser))\" for \"[abi\"-prefixed colon.  Add assert.",
    "tree": {
      "sha": "3e8ffc57ff63a34870c77bca7802e4615ca50e6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e8ffc57ff63a34870c77bca7802e4615ca50e6d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f19e22e9226444ee566b5b5633c0a48a4f981eda",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f19e22e9226444ee566b5b5633c0a48a4f981eda",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f19e22e9226444ee566b5b5633c0a48a4f981eda",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f19e22e9226444ee566b5b5633c0a48a4f981eda/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e99f9db0f5211455ca4256e8db9d9081967d255e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e99f9db0f5211455ca4256e8db9d9081967d255e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e99f9db0f5211455ca4256e8db9d9081967d255e"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 10,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b94aa0fbf6cd896bb9f009fa023d3fe3af7a775f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f19e22e9226444ee566b5b5633c0a48a4f981eda/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f19e22e9226444ee566b5b5633c0a48a4f981eda/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f19e22e9226444ee566b5b5633c0a48a4f981eda",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-10  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/24611\n+\t* linespec.c (linespec_lexer_lex_string): Remove incorrect\n+\t\"++(PARSER_STREAM (parser))\" for \"[abi\"-prefixed colon.  Add assert.\n+\n 2019-06-10  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/24545"
    },
    {
      "sha": "94400f3f3366820dfc5e7f8b2e257594ff7ca7c0",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f19e22e9226444ee566b5b5633c0a48a4f981eda/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f19e22e9226444ee566b5b5633c0a48a4f981eda/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=f19e22e9226444ee566b5b5633c0a48a4f981eda",
      "patch": "@@ -760,7 +760,9 @@ linespec_lexer_lex_string (linespec_parser *parser)\n \t      /* Do not tokenize ABI tags such as \"[abi:cxx11]\".  */\n \t      else if (PARSER_STREAM (parser) - start > 4\n \t\t       && startswith (PARSER_STREAM (parser) - 4, \"[abi\"))\n-\t\t++(PARSER_STREAM (parser));\n+\t\t{\n+\t\t  /* Nothing.  */\n+\t\t}\n \n \t      /* Do not tokenify if the input length so far is one\n \t\t (i.e, a single-letter drive name) and the next character\n@@ -861,6 +863,7 @@ linespec_lexer_lex_string (linespec_parser *parser)\n \t    }\n \n \t  /* Advance the stream.  */\n+\t  gdb_assert (*(PARSER_STREAM (parser)) != '\\0');\n \t  ++(PARSER_STREAM (parser));\n \t}\n     }"
    }
  ]
}