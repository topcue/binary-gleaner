{
  "sha": "1802aae8449a4d693ba1f4efb8a7917c2f20990b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTgwMmFhZTg0NDlhNGQ2OTNiYTFmNGVmYjhhNzkxN2MyZjIwOTkwYg==",
  "commit": {
    "author": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-19T13:35:02Z"
    },
    "committer": {
      "name": "Jose E. Marchesi",
      "email": "jose.marchesi@oracle.com",
      "date": "2019-07-19T13:35:02Z"
    },
    "message": "gas: make .lcomm to accept an optional aligmnet in eBPF targets\n\nTested in a x86_64 host.\n\ngas/ChangeLog:\n\n2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n\n\t* config/tc-bpf.c (pe_lcomm_internal): Adapted from tc-i386.c.\n\t(pe_lcomm): Likewise.\n\t(md_pseudo_table): Use pe_lcomm to implement .lcomm.",
    "tree": {
      "sha": "0eba0b337dd383bdedda4d3f353b036f60317f03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0eba0b337dd383bdedda4d3f353b036f60317f03"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1802aae8449a4d693ba1f4efb8a7917c2f20990b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1802aae8449a4d693ba1f4efb8a7917c2f20990b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1802aae8449a4d693ba1f4efb8a7917c2f20990b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1802aae8449a4d693ba1f4efb8a7917c2f20990b/comments",
  "author": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jemarch",
    "id": 7061875,
    "node_id": "MDQ6VXNlcjcwNjE4NzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7061875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jemarch",
    "html_url": "https://github.com/jemarch",
    "followers_url": "https://api.github.com/users/jemarch/followers",
    "following_url": "https://api.github.com/users/jemarch/following{/other_user}",
    "gists_url": "https://api.github.com/users/jemarch/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jemarch/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jemarch/subscriptions",
    "organizations_url": "https://api.github.com/users/jemarch/orgs",
    "repos_url": "https://api.github.com/users/jemarch/repos",
    "events_url": "https://api.github.com/users/jemarch/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jemarch/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ccbdd22fb96b8680ebeaecd829e8e51958845a8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ccbdd22fb96b8680ebeaecd829e8e51958845a8f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ccbdd22fb96b8680ebeaecd829e8e51958845a8f"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 49,
    "deletions": 1
  },
  "files": [
    {
      "sha": "e33802b0f6933b9df2464186d57be3eb0147ff01",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1802aae8449a4d693ba1f4efb8a7917c2f20990b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1802aae8449a4d693ba1f4efb8a7917c2f20990b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1802aae8449a4d693ba1f4efb8a7917c2f20990b",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-19  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config/tc-bpf.c (pe_lcomm_internal): Adapted from tc-i386.c.\n+\t(pe_lcomm): Likewise.\n+\t(md_pseudo_table): Use pe_lcomm to implement .lcomm.\n+\n 2019-07-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/c-aarch64.texi: Remame the +bitperm extension to +sve2-bitperm."
    },
    {
      "sha": "d2da2feafb00707fadec05e836fc407b55fe8321",
      "filename": "gas/config/tc-bpf.c",
      "status": "modified",
      "additions": 43,
      "deletions": 1,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1802aae8449a4d693ba1f4efb8a7917c2f20990b/gas/config/tc-bpf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1802aae8449a4d693ba1f4efb8a7917c2f20990b/gas/config/tc-bpf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-bpf.c?ref=1802aae8449a4d693ba1f4efb8a7917c2f20990b",
      "patch": "@@ -35,16 +35,58 @@ const char line_separator_chars[] = \"`\";\n const char EXP_CHARS[]            = \"eE\";\n const char FLT_CHARS[]            = \"fFdD\";\n \n+/* Like s_lcomm_internal in gas/read.c but the alignment string\n+   is allowed to be optional.  */\n+\n+static symbolS *\n+pe_lcomm_internal (int needs_align, symbolS *symbolP, addressT size)\n+{\n+  addressT align = 0;\n+\n+  SKIP_WHITESPACE ();\n+\n+  if (needs_align\n+      && *input_line_pointer == ',')\n+    {\n+      align = parse_align (needs_align - 1);\n+\n+      if (align == (addressT) -1)\n+\treturn NULL;\n+    }\n+  else\n+    {\n+      if (size >= 8)\n+\talign = 3;\n+      else if (size >= 4)\n+\talign = 2;\n+      else if (size >= 2)\n+\talign = 1;\n+      else\n+\talign = 0;\n+    }\n+\n+  bss_alloc (symbolP, size, align);\n+  return symbolP;\n+}\n+\n+static void\n+pe_lcomm (int needs_align)\n+{\n+  s_comm_internal (needs_align * 2, pe_lcomm_internal);\n+}\n+\n /* The target specific pseudo-ops which we support.  */\n const pseudo_typeS md_pseudo_table[] =\n {\n     { \"half\",      cons,              2 },\n     { \"word\",      cons,              4 },\n     { \"dword\",     cons,              8 },\n-    { \"lcomm\",\t   s_lcomm,\t      1 },\n+    { \"lcomm\",\t   pe_lcomm,\t      1 },\n     { NULL,        NULL,              0 }\n };\n \n+\f\n+\n /* ISA handling.  */\n static CGEN_BITSET *bpf_isa;\n "
    }
  ]
}