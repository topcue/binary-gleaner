{
  "sha": "aae9718e4d4e8d01dcee22684e82b000203d3e52",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWFlOTcxOGU0ZDRlOGQwMWRjZWUyMjY4NGU4MmIwMDAyMDNkM2U1Mg==",
  "commit": {
    "author": {
      "name": "Peter Bergner",
      "email": "bergner@vnet.ibm.com",
      "date": "2019-04-04T14:00:29Z"
    },
    "committer": {
      "name": "Peter Bergner",
      "email": "bergner@vnet.ibm.com",
      "date": "2019-04-04T14:00:29Z"
    },
    "message": "Add extended mnemonics for bctar. Fix setting of 'at' branch hints.\n\nopcodes/\n\tPR gas/24349\n\t* ppc-opc.c (valid_bo_pre_v2): Add comments.\n\t(valid_bo_post_v2): Add support for 'at' branch hints.\n\t(insert_bo): Only error on branch on ctr.\n\t(get_bo_hint_mask): New function.\n\t(insert_boe): Add new 'branch_taken' formal argument.  Add support\n\tfor inserting 'at' branch hints.\n\t(extract_boe): Add new 'branch_taken' formal argument.  Add support\n\tfor extracting 'at' branch hints.\n\t(insert_bom, extract_bom, insert_bop, extract_bop): New functions.\n\t(BOE): Delete operand.\n\t(BOM, BOP): New operands.\n\t(RM): Update value.\n\t(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.\n\t(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,\n\tbcctrl-, bctar-, bctarl->: Replace BOE with BOM.\n\t(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,\n\tbcctrl+, bctar+, bctarl+>: Replace BOE with BOP.\n\t<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,\n\tbdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,\n\tbnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,\n\tbnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,\n\tbnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,\n\tbnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,\n\tbnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,\n\tbnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,\n\tbeqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n\tbttarl+>: New extended mnemonics.\n\ngas/\n\tPR gas/24349\n\t* testsuite/gas/ppc/power8.s: (bdnztar, bdnztarl, bdztar, bdztarl,\n\tbtar, btarl, bdnztar-, bdnztarl-, bdnztar+, bdnztarl+, bdztar-,\n\tbdztarl-, bdztar+, bdztarl+, bgetar, bnltar, bgetarl, bnltarl,\n\tbletar, bngtar, bletarl, bngtarl, bnetar, bnetarl, bnstar, bnutar,\n\tbnstarl, bnutarl, bgetar-, bnltar-, bgetarl-, bnltarl-, bletar-,\n\tbngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-, bnstar-, bnutar-,\n\tbnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+, bnltarl+, bletar+,\n\tbngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+, bnstar+, bnutar+,\n\tbnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl, beqtar,\n\tbeqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n\tbttarl+): Add tests of extended mnemonics.\n\t* testsuite/gas/ppc/power8.d: Likewise.  Update previous bctar tests\n\tto expect new extended mnemonics.\n\t* testsuite/gas/ppc/a2.s: <bc, bc-, bc+, bcl, bcl-, bcl+>: Update test\n\tto not use illegal BO value.  Use a more convenient BI value.\n\t* testsuite/gas/ppc/a2.d: Update tests for new expect output.",
    "tree": {
      "sha": "3182a7d06f4cb16b7abefba52172d37ec41e0e4c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3182a7d06f4cb16b7abefba52172d37ec41e0e4c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aae9718e4d4e8d01dcee22684e82b000203d3e52",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aae9718e4d4e8d01dcee22684e82b000203d3e52",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aae9718e4d4e8d01dcee22684e82b000203d3e52",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aae9718e4d4e8d01dcee22684e82b000203d3e52/comments",
  "author": {
    "login": "peter-bergner",
    "id": 17504345,
    "node_id": "MDQ6VXNlcjE3NTA0MzQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/peter-bergner",
    "html_url": "https://github.com/peter-bergner",
    "followers_url": "https://api.github.com/users/peter-bergner/followers",
    "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}",
    "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions",
    "organizations_url": "https://api.github.com/users/peter-bergner/orgs",
    "repos_url": "https://api.github.com/users/peter-bergner/repos",
    "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/peter-bergner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "peter-bergner",
    "id": 17504345,
    "node_id": "MDQ6VXNlcjE3NTA0MzQ1",
    "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/peter-bergner",
    "html_url": "https://github.com/peter-bergner",
    "followers_url": "https://api.github.com/users/peter-bergner/followers",
    "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}",
    "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions",
    "organizations_url": "https://api.github.com/users/peter-bergner/orgs",
    "repos_url": "https://api.github.com/users/peter-bergner/repos",
    "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/peter-bergner/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e9f8e3f109d57c119eaaa1e56378926f7f20863f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9f8e3f109d57c119eaaa1e56378926f7f20863f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e9f8e3f109d57c119eaaa1e56378926f7f20863f"
    }
  ],
  "stats": {
    "total": 657,
    "additions": 584,
    "deletions": 73
  },
  "files": [
    {
      "sha": "3778ef9ce03b71cd9c9c329e4bf2ff314c978c8a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -1,3 +1,28 @@\n+2019-04-04  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR gas/24349\n+\t* testsuite/gas/ppc/power8.s: (bdnztar, bdnztarl, bdztar, bdztarl,\n+\tbtar, btarl, bdnztar-, bdnztarl-, bdnztar+, bdnztarl+, bdztar-,\n+\tbdztarl-, bdztar+, bdztarl+, bgetar, bnltar, bgetarl, bnltarl,\n+\tbletar, bngtar, bletarl, bngtarl, bnetar, bnetarl, bnstar, bnutar,\n+\tbnstarl, bnutarl, bgetar-, bnltar-, bgetarl-, bnltarl-, bletar-,\n+\tbngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-, bnstar-, bnutar-,\n+\tbnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+, bnltarl+, bletar+,\n+\tbngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+, bnstar+, bnutar+,\n+\tbnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl, beqtar,\n+\tbeqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n+\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n+\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n+\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n+\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n+\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n+\tbttarl+): Add tests of extended mnemonics.\n+\t* testsuite/gas/ppc/power8.d: Likewise.  Update previous bctar tests\n+\tto expect new extended mnemonics.\n+\t* testsuite/gas/ppc/a2.s: <bc, bc-, bc+, bcl, bcl-, bcl+>: Update test\n+\tto not use illegal BO value.  Use a more convenient BI value.\n+\t* testsuite/gas/ppc/a2.d: Update tests for new expect output.\n+\n 2019-04-03  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/tc-xtensa.c (convert_frag_immed): Drop"
    },
    {
      "sha": "5899edbbd85924e235d38aae8aaa744204a4f1f6",
      "filename": "gas/testsuite/gas/ppc/a2.d",
      "status": "modified",
      "additions": 15,
      "deletions": 14,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/a2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/a2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/a2.d?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -46,11 +46,11 @@ Disassembly of section \\.text:\n   88:\t(00 00 02 00|00 02 00 00) \tattn\n   8c:\t(48 00 00 02|02 00 00 48) \tba      0 <start>\n \t\t\t8c: R_PPC(|64)_ADDR24\tlabel_abs\n-  90:\t(40 01 00 00|00 00 01 40) \tbdnzf   gt,90 <start\\+0x90>\n+  90:\t(40 8a 00 00|00 00 8a 40) \tbne     cr2,90 <start\\+0x90>\n \t\t\t90: R_PPC(|64)_REL14\tfoo\n-  94:\t(40 01 00 00|00 00 01 40) \tbdnzf   gt,94 <start\\+0x94>\n+  94:\t(40 ca 00 00|00 00 ca 40) \tbne-    cr2,94 <start\\+0x94>\n \t\t\t94: R_PPC(|64)_REL14\tfoo\n-  98:\t(40 01 00 00|00 00 01 40) \tbdnzf   gt,98 <start\\+0x98>\n+  98:\t(40 ea 00 00|00 00 ea 40) \tbne\\+    cr2,98 <start\\+0x98>\n \t\t\t98: R_PPC(|64)_REL14\tfoo\n   9c:\t(40 85 00 02|02 00 85 40) \tblea    cr1,0 <start>\n \t\t\t9c: R_PPC(|64)_ADDR14\tfoo_abs\n@@ -59,16 +59,16 @@ Disassembly of section \\.text:\n   a4:\t(40 e5 00 02|02 00 e5 40) \tblea\\+   cr1,0 <start>\n \t\t\ta4: R_PPC(|64)_ADDR14\tfoo_abs\n   a8:\t(4c 86 0c 20|20 0c 86 4c) \tbcctr   4,4\\*cr1\\+eq,1\n-  ac:\t(4c 86 04 20|20 04 86 4c) \tbnectr  cr1\n-  b0:\t(4c a6 04 20|20 04 a6 4c) \tbcctr\\+  4,4\\*cr1\\+eq\n+  ac:\t(4c c6 04 20|20 04 c6 4c) \tbnectr- cr1\n+  b0:\t(4c e6 04 20|20 04 e6 4c) \tbnectr\\+ cr1\n   b4:\t(4c 86 0c 21|21 0c 86 4c) \tbcctrl  4,4\\*cr1\\+eq,1\n-  b8:\t(4c 86 04 21|21 04 86 4c) \tbnectrl cr1\n-  bc:\t(4c a6 04 21|21 04 a6 4c) \tbcctrl\\+ 4,4\\*cr1\\+eq\n-  c0:\t(40 01 00 01|01 00 01 40) \tbdnzfl  gt,c0 <start\\+0xc0>\n+  b8:\t(4c c6 04 21|21 04 c6 4c) \tbnectrl- cr1\n+  bc:\t(4c e6 04 21|21 04 e6 4c) \tbnectrl\\+ cr1\n+  c0:\t(40 8a 00 01|01 00 8a 40) \tbnel    cr2,c0 <start\\+0xc0>\n \t\t\tc0: R_PPC(|64)_REL14\tfoo\n-  c4:\t(40 01 00 01|01 00 01 40) \tbdnzfl  gt,c4 <start\\+0xc4>\n+  c4:\t(40 ca 00 01|01 00 ca 40) \tbnel-   cr2,c4 <start\\+0xc4>\n \t\t\tc4: R_PPC(|64)_REL14\tfoo\n-  c8:\t(40 01 00 01|01 00 01 40) \tbdnzfl  gt,c8 <start\\+0xc8>\n+  c8:\t(40 ea 00 01|01 00 ea 40) \tbnel\\+   cr2,c8 <start\\+0xc8>\n \t\t\tc8: R_PPC(|64)_REL14\tfoo\n   cc:\t(40 85 00 03|03 00 85 40) \tblela   cr1,0 <start>\n \t\t\tcc: R_PPC(|64)_ADDR14\tfoo_abs\n@@ -77,11 +77,11 @@ Disassembly of section \\.text:\n   d4:\t(40 e5 00 03|03 00 e5 40) \tblela\\+  cr1,0 <start>\n \t\t\td4: R_PPC(|64)_ADDR14\tfoo_abs\n   d8:\t(4c 86 08 20|20 08 86 4c) \tbclr    4,4\\*cr1\\+eq,1\n-  dc:\t(4c 86 00 20|20 00 86 4c) \tbnelr   cr1\n-  e0:\t(4c a6 00 20|20 00 a6 4c) \tbclr\\+   4,4\\*cr1\\+eq\n+  dc:\t(4c c6 00 20|20 00 c6 4c) \tbnelr-  cr1\n+  e0:\t(4c e6 00 20|20 00 e6 4c) \tbnelr\\+  cr1\n   e4:\t(4c 86 08 21|21 08 86 4c) \tbclrl   4,4\\*cr1\\+eq,1\n-  e8:\t(4c 86 00 21|21 00 86 4c) \tbnelrl  cr1\n-  ec:\t(4c a6 00 21|21 00 a6 4c) \tbclrl\\+  4,4\\*cr1\\+eq\n+  e8:\t(4c c6 00 21|21 00 c6 4c) \tbnelrl- cr1\n+  ec:\t(4c e6 00 21|21 00 e6 4c) \tbnelrl\\+ cr1\n   f0:\t(48 00 00 00|00 00 00 48) \tb       f0 <start\\+0xf0>\n \t\t\tf0: R_PPC(|64)_REL24\tlabel\n   f4:\t(48 00 00 03|03 00 00 48) \tbla     0 <start>\n@@ -582,3 +582,4 @@ Disassembly of section \\.text:\n  8a8:\t(7d 6a 62 78|78 62 6a 7d) \txor     r10,r11,r12\n  8ac:\t(69 6a 10 00|00 10 6a 69) \txori    r10,r11,4096\n  8b0:\t(6d 6a 10 00|00 10 6a 6d) \txoris   r10,r11,4096\n+#pass"
    },
    {
      "sha": "6893ae8cfef90afc18a66cee53ca65ea6c258e0d",
      "filename": "gas/testsuite/gas/ppc/a2.s",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/a2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/a2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/a2.s?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -36,9 +36,9 @@ start:\n \tandis.\t4,5,6\n \tattn\n \tba      label_abs\n-\tbc      0,1,foo\n-\tbc-     0,1,foo\n-\tbc+     0,1,foo\n+\tbc      4,10,foo\n+\tbc-     4,10,foo\n+\tbc+     4,10,foo\n \tbca     4,5,foo_abs\n \tbca-    4,5,foo_abs\n \tbca+    4,5,foo_abs\n@@ -48,9 +48,9 @@ start:\n \tbcctrl  4,6,1\n \tbcctrl- 4,6\n \tbcctrl+ 4,6\n-\tbcl     0,1,foo\n-\tbcl-    0,1,foo\n-\tbcl+    0,1,foo\n+\tbcl     4,10,foo\n+\tbcl-    4,10,foo\n+\tbcl+    4,10,foo\n \tbcla    4,5,foo_abs\n \tbcla-   4,5,foo_abs\n \tbcla+   4,5,foo_abs"
    },
    {
      "sha": "77d36813f31aa0914ad5ca425838a7897cd792a8",
      "filename": "gas/testsuite/gas/ppc/power8.d",
      "status": "modified",
      "additions": 122,
      "deletions": 4,
      "changes": 126,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/power8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/power8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/power8.d?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -30,10 +30,10 @@ Disassembly of section \\.text:\n   50:\t(4c 00 01 24|24 01 00 4c) \trfebb   0\n   54:\t(4c 00 09 24|24 09 00 4c) \trfebb   \n   58:\t(4c 00 09 24|24 09 00 4c) \trfebb   \n-  5c:\t(4d 95 04 60|60 04 95 4d) \tbctar-  12,4\\*cr5\\+gt\n-  60:\t(4c 87 04 61|61 04 87 4c) \tbctarl- 4,4\\*cr1\\+so\n-  64:\t(4d ac 04 60|60 04 ac 4d) \tbctar\\+  12,4\\*cr3\\+lt\n-  68:\t(4c a2 04 61|61 04 a2 4c) \tbctarl\\+ 4,eq\n+  5c:\t(4d d5 04 60|60 04 d5 4d) \tbgttar- cr5\n+  60:\t(4c c7 04 61|61 04 c7 4c) \tbnstarl- cr1\n+  64:\t(4d ec 04 60|60 04 ec 4d) \tblttar\\+ cr3\n+  68:\t(4c e2 04 61|61 04 e2 4c) \tbnetarl\\+ \n   6c:\t(4c 88 0c 60|60 0c 88 4c) \tbctar   4,4\\*cr2\\+lt,1\n   70:\t(4c 87 14 61|61 14 87 4c) \tbctarl  4,4\\*cr1\\+so,2\n   74:\t(7c 00 00 3c|3c 00 00 7c) \twaitasec\n@@ -192,4 +192,122 @@ Disassembly of section \\.text:\n .*:\t(7d 81 49 2d|2d 49 81 7d) \tstwcx\\.  r12,r1,r9\n .*:\t(7d a0 51 ad|ad 51 a0 7d) \tstdcx\\.  r13,0,r10\n .*:\t(7d a1 51 ad|ad 51 a1 7d) \tstdcx\\.  r13,r1,r10\n+.*:\t(4e 80 04 60|60 04 80 4e) \tbtar\n+.*:\t(4e 80 04 60|60 04 80 4e) \tbtar\n+.*:\t(4e 00 04 60|60 04 00 4e) \tbdnztar\n+.*:\t(4e 00 04 61|61 04 00 4e) \tbdnztarl\n+.*:\t(4e 40 04 60|60 04 40 4e) \tbdztar\n+.*:\t(4e 40 04 61|61 04 40 4e) \tbdztarl\n+.*:\t(4e 80 04 60|60 04 80 4e) \tbtar\n+.*:\t(4e 80 04 61|61 04 80 4e) \tbtarl\n+.*:\t(4f 00 04 60|60 04 00 4f) \tbdnztar-\n+.*:\t(4f 00 04 61|61 04 00 4f) \tbdnztarl-\n+.*:\t(4f 20 04 60|60 04 20 4f) \tbdnztar\\+\n+.*:\t(4f 20 04 61|61 04 20 4f) \tbdnztarl\\+\n+.*:\t(4f 40 04 60|60 04 40 4f) \tbdztar-\n+.*:\t(4f 40 04 61|61 04 40 4f) \tbdztarl-\n+.*:\t(4f 60 04 60|60 04 60 4f) \tbdztar\\+\n+.*:\t(4f 60 04 61|61 04 60 4f) \tbdztarl\\+\n+.*:\t(4c 90 04 60|60 04 90 4c) \tbgetar  cr4\n+.*:\t(4c 90 04 60|60 04 90 4c) \tbgetar  cr4\n+.*:\t(4c 90 04 61|61 04 90 4c) \tbgetarl cr4\n+.*:\t(4c 90 04 61|61 04 90 4c) \tbgetarl cr4\n+.*:\t(4c 91 04 60|60 04 91 4c) \tbletar  cr4\n+.*:\t(4c 91 04 60|60 04 91 4c) \tbletar  cr4\n+.*:\t(4c 91 04 61|61 04 91 4c) \tbletarl cr4\n+.*:\t(4c 91 04 61|61 04 91 4c) \tbletarl cr4\n+.*:\t(4c 92 04 60|60 04 92 4c) \tbnetar  cr4\n+.*:\t(4c 92 04 61|61 04 92 4c) \tbnetarl cr4\n+.*:\t(4c 93 04 60|60 04 93 4c) \tbnstar  cr4\n+.*:\t(4c 93 04 60|60 04 93 4c) \tbnstar  cr4\n+.*:\t(4c 93 04 61|61 04 93 4c) \tbnstarl cr4\n+.*:\t(4c 93 04 61|61 04 93 4c) \tbnstarl cr4\n+.*:\t(4c d0 04 60|60 04 d0 4c) \tbgetar- cr4\n+.*:\t(4c d0 04 60|60 04 d0 4c) \tbgetar- cr4\n+.*:\t(4c d0 04 61|61 04 d0 4c) \tbgetarl- cr4\n+.*:\t(4c d0 04 61|61 04 d0 4c) \tbgetarl- cr4\n+.*:\t(4c d1 04 60|60 04 d1 4c) \tbletar- cr4\n+.*:\t(4c d1 04 60|60 04 d1 4c) \tbletar- cr4\n+.*:\t(4c d1 04 61|61 04 d1 4c) \tbletarl- cr4\n+.*:\t(4c d1 04 61|61 04 d1 4c) \tbletarl- cr4\n+.*:\t(4c d2 04 60|60 04 d2 4c) \tbnetar- cr4\n+.*:\t(4c d2 04 61|61 04 d2 4c) \tbnetarl- cr4\n+.*:\t(4c d3 04 60|60 04 d3 4c) \tbnstar- cr4\n+.*:\t(4c d3 04 60|60 04 d3 4c) \tbnstar- cr4\n+.*:\t(4c d3 04 61|61 04 d3 4c) \tbnstarl- cr4\n+.*:\t(4c d3 04 61|61 04 d3 4c) \tbnstarl- cr4\n+.*:\t(4c f0 04 60|60 04 f0 4c) \tbgetar\\+ cr4\n+.*:\t(4c f0 04 60|60 04 f0 4c) \tbgetar\\+ cr4\n+.*:\t(4c f0 04 61|61 04 f0 4c) \tbgetarl\\+ cr4\n+.*:\t(4c f0 04 61|61 04 f0 4c) \tbgetarl\\+ cr4\n+.*:\t(4c f1 04 60|60 04 f1 4c) \tbletar\\+ cr4\n+.*:\t(4c f1 04 60|60 04 f1 4c) \tbletar\\+ cr4\n+.*:\t(4c f1 04 61|61 04 f1 4c) \tbletarl\\+ cr4\n+.*:\t(4c f1 04 61|61 04 f1 4c) \tbletarl\\+ cr4\n+.*:\t(4c f2 04 60|60 04 f2 4c) \tbnetar\\+ cr4\n+.*:\t(4c f2 04 61|61 04 f2 4c) \tbnetarl\\+ cr4\n+.*:\t(4c f3 04 60|60 04 f3 4c) \tbnstar\\+ cr4\n+.*:\t(4c f3 04 60|60 04 f3 4c) \tbnstar\\+ cr4\n+.*:\t(4c f3 04 61|61 04 f3 4c) \tbnstarl\\+ cr4\n+.*:\t(4c f3 04 61|61 04 f3 4c) \tbnstarl\\+ cr4\n+.*:\t(4d 90 04 60|60 04 90 4d) \tblttar  cr4\n+.*:\t(4d 90 04 61|61 04 90 4d) \tblttarl cr4\n+.*:\t(4d 91 04 60|60 04 91 4d) \tbgttar  cr4\n+.*:\t(4d 91 04 61|61 04 91 4d) \tbgttarl cr4\n+.*:\t(4d 92 04 60|60 04 92 4d) \tbeqtar  cr4\n+.*:\t(4d 92 04 61|61 04 92 4d) \tbeqtarl cr4\n+.*:\t(4d 93 04 60|60 04 93 4d) \tbsotar  cr4\n+.*:\t(4d 93 04 60|60 04 93 4d) \tbsotar  cr4\n+.*:\t(4d 93 04 61|61 04 93 4d) \tbsotarl cr4\n+.*:\t(4d 93 04 61|61 04 93 4d) \tbsotarl cr4\n+.*:\t(4d d0 04 60|60 04 d0 4d) \tblttar- cr4\n+.*:\t(4d d0 04 61|61 04 d0 4d) \tblttarl- cr4\n+.*:\t(4d d1 04 60|60 04 d1 4d) \tbgttar- cr4\n+.*:\t(4d d1 04 61|61 04 d1 4d) \tbgttarl- cr4\n+.*:\t(4d d2 04 60|60 04 d2 4d) \tbeqtar- cr4\n+.*:\t(4d d2 04 61|61 04 d2 4d) \tbeqtarl- cr4\n+.*:\t(4d d3 04 60|60 04 d3 4d) \tbsotar- cr4\n+.*:\t(4d d3 04 60|60 04 d3 4d) \tbsotar- cr4\n+.*:\t(4d d3 04 61|61 04 d3 4d) \tbsotarl- cr4\n+.*:\t(4d d3 04 61|61 04 d3 4d) \tbsotarl- cr4\n+.*:\t(4d f0 04 60|60 04 f0 4d) \tblttar\\+ cr4\n+.*:\t(4d f0 04 61|61 04 f0 4d) \tblttarl\\+ cr4\n+.*:\t(4d f1 04 60|60 04 f1 4d) \tbgttar\\+ cr4\n+.*:\t(4d f1 04 61|61 04 f1 4d) \tbgttarl\\+ cr4\n+.*:\t(4d f2 04 60|60 04 f2 4d) \tbeqtar\\+ cr4\n+.*:\t(4d f2 04 61|61 04 f2 4d) \tbeqtarl\\+ cr4\n+.*:\t(4d f3 04 60|60 04 f3 4d) \tbsotar\\+ cr4\n+.*:\t(4d f3 04 60|60 04 f3 4d) \tbsotar\\+ cr4\n+.*:\t(4d f3 04 61|61 04 f3 4d) \tbsotarl\\+ cr4\n+.*:\t(4d f3 04 61|61 04 f3 4d) \tbsotarl\\+ cr4\n+.*:\t(4c 08 04 60|60 04 08 4c) \tbdnzftar 4\\*cr2\\+lt\n+.*:\t(4c 08 04 61|61 04 08 4c) \tbdnzftarl 4\\*cr2\\+lt\n+.*:\t(4c 48 04 60|60 04 48 4c) \tbdzftar 4\\*cr2\\+lt\n+.*:\t(4c 48 04 61|61 04 48 4c) \tbdzftarl 4\\*cr2\\+lt\n+.*:\t(4c 88 04 60|60 04 88 4c) \tbgetar  cr2\n+.*:\t(4c 88 04 61|61 04 88 4c) \tbgetarl cr2\n+.*:\t(4c c8 04 60|60 04 c8 4c) \tbgetar- cr2\n+.*:\t(4c c8 04 61|61 04 c8 4c) \tbgetarl- cr2\n+.*:\t(4c e8 04 60|60 04 e8 4c) \tbgetar\\+ cr2\n+.*:\t(4c e8 04 61|61 04 e8 4c) \tbgetarl\\+ cr2\n+.*:\t(4d 08 04 60|60 04 08 4d) \tbdnzttar 4\\*cr2\\+lt\n+.*:\t(4d 08 04 61|61 04 08 4d) \tbdnzttarl 4\\*cr2\\+lt\n+.*:\t(4d 48 04 60|60 04 48 4d) \tbdzttar 4\\*cr2\\+lt\n+.*:\t(4d 48 04 61|61 04 48 4d) \tbdzttarl 4\\*cr2\\+lt\n+.*:\t(4d 88 04 60|60 04 88 4d) \tblttar  cr2\n+.*:\t(4d 88 04 61|61 04 88 4d) \tblttarl cr2\n+.*:\t(4d c8 04 60|60 04 c8 4d) \tblttar- cr2\n+.*:\t(4d c8 04 61|61 04 c8 4d) \tblttarl- cr2\n+.*:\t(4d e8 04 60|60 04 e8 4d) \tblttar\\+ cr2\n+.*:\t(4d e8 04 61|61 04 e8 4d) \tblttarl\\+ cr2\n+.*:\t(4d ca 04 60|60 04 ca 4d) \tbeqtar- cr2\n+.*:\t(4d ca 04 61|61 04 ca 4d) \tbeqtarl- cr2\n+.*:\t(4d ea 04 60|60 04 ea 4d) \tbeqtar\\+ cr2\n+.*:\t(4d ea 04 61|61 04 ea 4d) \tbeqtarl\\+ cr2\n+.*:\t(4d 89 04 60|60 04 89 4d) \tbgttar  cr2\n+.*:\t(4d 89 04 60|60 04 89 4d) \tbgttar  cr2\n+.*:\t(4d 89 1c 60|60 1c 89 4d) \tbctar   12,4\\*cr2\\+gt,3\n+.*:\t(4d 89 04 61|61 04 89 4d) \tbgttarl cr2\n+.*:\t(4d 89 04 61|61 04 89 4d) \tbgttarl cr2\n+.*:\t(4d 89 1c 61|61 1c 89 4d) \tbctarl  12,4\\*cr2\\+gt,3\n #pass"
    },
    {
      "sha": "beb1c5e81c5ae1c225ea346c48f21c9811d1ae98",
      "filename": "gas/testsuite/gas/ppc/power8.s",
      "status": "modified",
      "additions": 118,
      "deletions": 0,
      "changes": 118,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/power8.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/gas/testsuite/gas/ppc/power8.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/ppc/power8.s?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -184,3 +184,121 @@ power8:\n \tstwcx.       12,1,9\n \tstdcx.       13,0,10\n \tstdcx.       13,1,10\n+\tbctar\t     0b10100,lt\n+\tbtar\n+\tbdnztar\n+\tbdnztarl\n+\tbdztar\n+\tbdztarl\n+\tbtar\n+\tbtarl\n+\tbdnztar-\n+\tbdnztarl-\n+\tbdnztar+\n+\tbdnztarl+\n+\tbdztar-\n+\tbdztarl-\n+\tbdztar+\n+\tbdztarl+\n+\tbgetar       cr4\n+\tbnltar       cr4\n+\tbgetarl      cr4\n+\tbnltarl      cr4\n+\tbletar       cr4\n+\tbngtar       cr4\n+\tbletarl      cr4\n+\tbngtarl      cr4\n+\tbnetar       cr4\n+\tbnetarl      cr4\n+\tbnstar       cr4\n+\tbnutar       cr4\n+\tbnstarl      cr4\n+\tbnutarl      cr4\n+\tbgetar-      cr4\n+\tbnltar-      cr4\n+\tbgetarl-     cr4\n+\tbnltarl-     cr4\n+\tbletar-      cr4\n+\tbngtar-      cr4\n+\tbletarl-     cr4\n+\tbngtarl-     cr4\n+\tbnetar-      cr4\n+\tbnetarl-     cr4\n+\tbnstar-      cr4\n+\tbnutar-      cr4\n+\tbnstarl-     cr4\n+\tbnutarl-     cr4\n+\tbgetar+      cr4\n+\tbnltar+      cr4\n+\tbgetarl+     cr4\n+\tbnltarl+     cr4\n+\tbletar+      cr4\n+\tbngtar+      cr4\n+\tbletarl+     cr4\n+\tbngtarl+     cr4\n+\tbnetar+      cr4\n+\tbnetarl+     cr4\n+\tbnstar+      cr4\n+\tbnutar+      cr4\n+\tbnstarl+     cr4\n+\tbnutarl+     cr4\n+\tblttar       cr4\n+\tblttarl      cr4\n+\tbgttar       cr4\n+\tbgttarl      cr4\n+\tbeqtar       cr4\n+\tbeqtarl      cr4\n+\tbsotar       cr4\n+\tbuntar       cr4\n+\tbsotarl      cr4\n+\tbuntarl      cr4\n+\tblttar-      cr4\n+\tblttarl-     cr4\n+\tbgttar-      cr4\n+\tbgttarl-     cr4\n+\tbeqtar-      cr4\n+\tbeqtarl-     cr4\n+\tbsotar-      cr4\n+\tbuntar-      cr4\n+\tbsotarl-     cr4\n+\tbuntarl-     cr4\n+\tblttar+      cr4\n+\tblttarl+     cr4\n+\tbgttar+      cr4\n+\tbgttarl+     cr4\n+\tbeqtar+      cr4\n+\tbeqtarl+     cr4\n+\tbsotar+      cr4\n+\tbuntar+      cr4\n+\tbsotarl+     cr4\n+\tbuntarl+     cr4\n+\tbdnzftar     4*cr2+lt\n+\tbdnzftarl    4*cr2+lt\n+\tbdzftar      4*cr2+lt\n+\tbdzftarl     4*cr2+lt\n+\tbftar\t     4*cr2+lt\n+\tbftarl       4*cr2+lt\n+\tbftar-       4*cr2+lt\n+\tbftarl-      4*cr2+lt\n+\tbftar+       4*cr2+lt\n+\tbftarl+      4*cr2+lt\n+\tbdnzttar     4*cr2+lt\n+\tbdnzttarl    4*cr2+lt\n+\tbdzttar      4*cr2+lt\n+\tbdzttarl     4*cr2+lt\n+\tbttar\t     4*cr2+lt\n+\tbttarl       4*cr2+lt\n+\tbttar-       4*cr2+lt\n+\tbttarl-      4*cr2+lt\n+\tbttar+       4*cr2+lt\n+\tbttarl+      4*cr2+lt\n+\tbctar-       0b01100,4*cr2+eq\n+\tbctarl-      0b01100,4*cr2+eq\n+\tbctar+       0b01100,4*cr2+eq\n+\tbctarl+      0b01100,4*cr2+eq\n+\tbctar\t     0b01100,4*cr2+gt\n+\tbctar\t     0b01100,4*cr2+gt,0\n+\tbctar\t     0b01100,4*cr2+gt,3\n+\tbctarl       0b01100,4*cr2+gt\n+\tbctarl       0b01100,4*cr2+gt,0\n+\tbctarl       0b01100,4*cr2+gt,3"
    },
    {
      "sha": "2a44b3ae4c65f905cb478d46ce01964b62b59335",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -1,3 +1,39 @@\n+2019-04-04  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR gas/24349\n+\t* ppc-opc.c (valid_bo_pre_v2): Add comments.\n+\t(valid_bo_post_v2): Add support for 'at' branch hints.\n+\t(insert_bo): Only error on branch on ctr.\n+\t(get_bo_hint_mask): New function.\n+\t(insert_boe): Add new 'branch_taken' formal argument.  Add support\n+\tfor inserting 'at' branch hints.\n+\t(extract_boe): Add new 'branch_taken' formal argument.  Add support\n+\tfor extracting 'at' branch hints.\n+\t(insert_bom, extract_bom, insert_bop, extract_bop): New functions.\n+\t(BOE): Delete operand.\n+\t(BOM, BOP): New operands.\n+\t(RM): Update value.\n+\t(XLYLK, XLYLK_MASK, XLYBB_MASK): Delete.\n+\t(powerpc_opcodes) <bc-, bcl-, bca-, bcla-, bclr-, bclrl-, bcctr-,\n+\tbcctrl-, bctar-, bctarl->: Replace BOE with BOM.\n+\t(powerpc_opcodes) <bc+, bcl+, bca+, bcla+, bclr+, bclrl+, bcctr+,\n+\tbcctrl+, bctar+, bctarl+>: Replace BOE with BOP.\n+\t<bdnztar, bdnztarl, bdztar, bdztarl, btar, btarl, bdnztar-, bdnztarl-,\n+\tbdnztar+, bdnztarl+, bdztar-, bdztarl-, bdztar+, bdztarl+, bgetar,\n+\tbnltar, bgetarl, bnltarl, bletar, bngtar, bletarl, bngtarl, bnetar,\n+\tbnetarl, bnstar, bnutar, bnstarl, bnutarl, bgetar-, bnltar-, bgetarl-,\n+\tbnltarl-, bletar-, bngtar-, bletarl-, bngtarl-, bnetar-, bnetarl-,\n+\tbnstar-, bnutar-, bnstarl-, bnutarl-, bgetar+, bnltar+, bgetarl+,\n+\tbnltarl+, bletar+, bngtar+, bletarl+, bngtarl+, bnetar+, bnetarl+,\n+\tbnstar+, bnutar+, bnstarl+, bnutarl+, blttar, blttarl, bgttar, bgttarl,\n+\tbeqtar, beqtarl, bsotar, buntar, bsotarl, buntarl, blttar-, blttarl-,\n+\tbgttar-, bgttarl-, beqtar-, beqtarl-, bsotar-, buntar-, bsotarl-,\n+\tbuntarl-, blttar+, blttarl+, bgttar+, bgttarl+, beqtar+, beqtarl+,\n+\tbsotar+, buntar+, bsotarl+, buntarl+, bdnzftar, bdnzftarl, bdzftar,\n+\tbdzftarl, bftar, bftarl, bftar-, bftarl-, bftar+, bftarl+, bdnzttar,\n+\tbdnzttarl, bdzttar, bdzttarl, bttar, bttarl, bttar-, bttarl-, bttar+,\n+\tbttarl+>: New extended mnemonics.\n+\n 2019-03-28  Alan Modra  <amodra@gmail.com>\n \n \tPR 24390"
    },
    {
      "sha": "94ad733b97d3994160d6799e90152e2a68565420",
      "filename": "opcodes/ppc-opc.c",
      "status": "modified",
      "additions": 262,
      "deletions": 49,
      "changes": 311,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aae9718e4d4e8d01dcee22684e82b000203d3e52/opcodes/ppc-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aae9718e4d4e8d01dcee22684e82b000203d3e52/opcodes/ppc-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-opc.c?ref=aae9718e4d4e8d01dcee22684e82b000203d3e52",
      "patch": "@@ -321,12 +321,16 @@ valid_bo_pre_v2 (int64_t value)\n \t 1z1zz\n   */\n   if ((value & 0x14) == 0)\n+    /* BO: 0000y, 0001y, 0100y, 0101y.  */\n     return 1;\n   else if ((value & 0x14) == 0x4)\n+    /* BO: 001zy, 011zy.  */\n     return (value & 0x2) == 0;\n   else if ((value & 0x14) == 0x10)\n+    /* BO: 1z00y, 1z01y.  */\n     return (value & 0x8) == 0;\n   else\n+    /* BO: 1z1zz.  */\n     return value == 0x14;\n }\n \n@@ -346,9 +350,17 @@ valid_bo_post_v2 (int64_t value)\n \t 1z1zz\n   */\n   if ((value & 0x14) == 0)\n+    /* BO: 0000z, 0001z, 0100z, 0101z.  */\n     return (value & 0x1) == 0;\n   else if ((value & 0x14) == 0x14)\n+    /* BO: 1z1zz.  */\n     return value == 0x14;\n+  else if ((value & 0x14) == 0x4)\n+    /* BO: 001at, 011at, with \"at\" == 0b01 being reserved.  */\n+    return (value & 0x3) != 1;\n+  else if ((value & 0x14) == 0x10)\n+    /* BO: 1a00t, 1a01t, with \"at\" == 0b01 being reserved.  */\n+    return (value & 0x9) != 1;\n   else\n     return 1;\n }\n@@ -382,7 +394,8 @@ insert_bo (uint64_t insn,\n {\n   if (!valid_bo (value, dialect, 0))\n     *errmsg = _(\"invalid conditional option\");\n-  else if (PPC_OP (insn) == 19 && (insn & 0x400) && ! (value & 4))\n+  else if (PPC_OP (insn) == 19\n+\t   && (((insn >> 1) & 0x3ff) == 528) && ! (value & 4))\n     *errmsg = _(\"invalid counter access\");\n   return insn | ((value & 0x1f) << 21);\n }\n@@ -398,35 +411,128 @@ extract_bo (uint64_t insn,\n   return value;\n }\n \n-/* The BO field in a B form instruction when the + or - modifier is\n-   used.  This is like the BO field, but it must be even.  When\n-   extracting it, we force it to be even.  */\n+/* For the given BO value, return a bit mask detailing which bits\n+   define the branch hints.  */\n+\n+static int64_t\n+get_bo_hint_mask (int64_t bo, ppc_cpu_t dialect)\n+{\n+  if ((dialect & ISA_V2) == 0)\n+    {\n+      if ((bo & 0x14) != 0x14)\n+\t/* BO: 0000y, 0001y, 001zy, 0100y, 0101y, 011zy, 1z00y, 1z01y .  */\n+\treturn 1;\n+      else\n+\t/* BO: 1z1zz.  */\n+\treturn 0;\n+    }\n+  else\n+    {\n+      if ((bo & 0x14) == 0x4)\n+\t/* BO: 001at, 011at.  */\n+\treturn 0x3;\n+      else if ((bo & 0x14) == 0x10)\n+\t/* BO: 1a00t, 1a01t.  */\n+\treturn 0x9;\n+      else\n+\t/* BO: 0000z, 0001z, 0100z, 0101z, 1z1zz.  */\n+\treturn 0;\n+    }\n+}\n+\n+/* The BO field in a B form instruction when the + or - modifier is used.  */\n \n static uint64_t\n insert_boe (uint64_t insn,\n \t    int64_t value,\n \t    ppc_cpu_t dialect,\n-\t    const char **errmsg)\n+\t    const char **errmsg,\n+\t    int branch_taken)\n {\n-  if (!valid_bo (value, dialect, 0))\n-    *errmsg = _(\"invalid conditional option\");\n-  else if (PPC_OP (insn) == 19 && (insn & 0x400) && ! (value & 4))\n-    *errmsg = _(\"invalid counter access\");\n-  else if ((value & 1) != 0)\n-    *errmsg = _(\"attempt to set y bit when using + or - modifier\");\n+  int64_t implied_hint;\n+  int64_t hint_mask = get_bo_hint_mask (value, dialect);\n \n-  return insn | ((value & 0x1f) << 21);\n+  if (branch_taken)\n+    implied_hint = hint_mask;\n+  else\n+    implied_hint = hint_mask & ~1;\n+\n+  /* The branch hint bit(s) in the BO field must either be zero or exactly\n+     match the branch hint bits implied by the '+' or '-' modifier.  */\n+  if (implied_hint == 0)\n+    *errmsg = _(\"BO value implies no branch hint, when using + or - modifier\");\n+  else if ((value & hint_mask) != 0\n+\t   && (value & hint_mask) != implied_hint)\n+    {\n+      if ((dialect & ISA_V2) == 0)\n+\t*errmsg = _(\"attempt to set y bit when using + or - modifier\");\n+      else\n+\t*errmsg = _(\"attempt to set 'at' bits when using + or - modifier\");\n+    }\n+\n+  value |= implied_hint;\n+\n+  return insert_bo (insn, value, dialect, errmsg);\n }\n \n static int64_t\n extract_boe (uint64_t insn,\n \t     ppc_cpu_t dialect,\n-\t     int *invalid)\n+\t     int *invalid,\n+\t     int branch_taken)\n {\n   int64_t value = (insn >> 21) & 0x1f;\n-  if (!valid_bo (value, dialect, 1))\n+  int64_t implied_hint;\n+  int64_t hint_mask = get_bo_hint_mask (value, dialect);\n+\n+  if (branch_taken)\n+    implied_hint = hint_mask;\n+  else\n+    implied_hint = hint_mask & ~1;\n+\n+  if (!valid_bo (value, dialect, 1)\n+      || implied_hint == 0\n+      || (value & hint_mask) != implied_hint)\n     *invalid = 1;\n-  return value & 0x1e;\n+  return value;\n+}\n+\n+/* The BO field in a B form instruction when the - modifier is used.  */\n+\n+static uint64_t\n+insert_bom (uint64_t insn,\n+\t    int64_t value,\n+\t    ppc_cpu_t dialect,\n+\t    const char **errmsg)\n+{\n+  return insert_boe (insn, value, dialect, errmsg, 0);\n+}\n+\n+static int64_t\n+extract_bom (uint64_t insn,\n+\t     ppc_cpu_t dialect,\n+\t     int *invalid)\n+{\n+  return extract_boe (insn, dialect, invalid, 0);\n+}\n+\n+/* The BO field in a B form instruction when the + modifier is used.  */\n+\n+static uint64_t\n+insert_bop (uint64_t insn,\n+\t    int64_t value,\n+\t    ppc_cpu_t dialect,\n+\t    const char **errmsg)\n+{\n+  return insert_boe (insn, value, dialect, errmsg, 1);\n+}\n+\n+static int64_t\n+extract_bop (uint64_t insn,\n+\t     ppc_cpu_t dialect,\n+\t     int *invalid)\n+{\n+  return extract_boe (insn, dialect, invalid, 1);\n }\n \n /* The DCMX field in a X form instruction when the field is split\n@@ -1820,13 +1926,16 @@ const struct powerpc_operand powerpc_operands[] =\n #define BO_MASK (0x1f << 21)\n   { 0x1f, 21, insert_bo, extract_bo, 0 },\n \n-  /* The BO field in a B form instruction when the + or - modifier is\n-     used.  This is like the BO field, but it must be even.  */\n-#define BOE BO + 1\n-  { 0x1e, 21, insert_boe, extract_boe, 0 },\n+  /* The BO field in a B form instruction when the - modifier is used.  */\n+#define BOM BO + 1\n+  { 0x1f, 21, insert_bom, extract_bom, 0 },\n+\n+  /* The BO field in a B form instruction when the + modifier is used.  */\n+#define BOP BOM + 1\n+  { 0x1f, 21, insert_bop, extract_bop, 0 },\n \n   /* The RM field in an X form instruction.  */\n-#define RM BOE + 1\n+#define RM BOP + 1\n #define DD RM\n   { 0x3, 11, NULL, NULL, 0 },\n \n@@ -3259,22 +3368,14 @@ const unsigned int num_powerpc_operands = (sizeof (powerpc_operands)\n   (XLLK ((op), (xop), (lk)) | ((((uint64_t)(bo)) & 0x1f) << 21))\n #define XLO_MASK (XL_MASK | BO_MASK)\n \n-/* An XL form instruction which explicitly sets the y bit of the BO\n-   field.  */\n-#define XLYLK(op, xop, y, lk)\t\t\t\\\n-  (XLLK ((op), (xop), (lk))\t\t\t\\\n-   | ((((uint64_t)(y)) & 1) << 21))\n-#define XLYLK_MASK (XL_MASK | Y_MASK)\n-\n /* An XL form instruction which sets the BO field and the condition\n    bits of the BI field.  */\n #define XLOCB(op, bo, cb, xop, lk) \\\n   (XLO ((op), (bo), (xop), (lk)) | ((((uint64_t)(cb)) & 3) << 16))\n #define XLOCB_MASK XLOCB (0x3f, 0x1f, 0x3, 0x3ff, 1)\n \n-/* An XL_MASK or XLYLK_MASK or XLOCB_MASK with the BB field fixed.  */\n+/* An XL_MASK or XLOCB_MASK with the BB field fixed.  */\n #define XLBB_MASK (XL_MASK | BB_MASK)\n-#define XLYBB_MASK (XLYLK_MASK | BB_MASK)\n #define XLBOCBBB_MASK (XLOCB_MASK | BB_MASK)\n \n /* A mask for branch instructions using the BH field.  */\n@@ -4689,17 +4790,17 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"btla\",     BBO(16,BOT,1,1),\t\tBBOAT_MASK,    PPCCOM,\t PPCVLE,\t{BI, BDA}},\n {\"bbtla\",    BBO(16,BOT,1,1),\t\tBBOAT_MASK,    PWRCOM,\t PPCVLE,\t{BI, BDA}},\n \n-{\"bc-\",\t\tB(16,0,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDM}},\n-{\"bc+\",\t\tB(16,0,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDP}},\n+{\"bc-\",\t\tB(16,0,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOM, BI, BDM}},\n+{\"bc+\",\t\tB(16,0,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOP, BI, BDP}},\n {\"bc\",\t\tB(16,0,0),\tB_MASK,\t     COM,\tPPCVLE,\t\t{BO, BI, BD}},\n-{\"bcl-\",\tB(16,0,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDM}},\n-{\"bcl+\",\tB(16,0,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDP}},\n+{\"bcl-\",\tB(16,0,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOM, BI, BDM}},\n+{\"bcl+\",\tB(16,0,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOP, BI, BDP}},\n {\"bcl\",\t\tB(16,0,1),\tB_MASK,\t     COM,\tPPCVLE,\t\t{BO, BI, BD}},\n-{\"bca-\",\tB(16,1,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDMA}},\n-{\"bca+\",\tB(16,1,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDPA}},\n+{\"bca-\",\tB(16,1,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOM, BI, BDMA}},\n+{\"bca+\",\tB(16,1,0),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOP, BI, BDPA}},\n {\"bca\",\t\tB(16,1,0),\tB_MASK,\t     COM,\tPPCVLE,\t\t{BO, BI, BDA}},\n-{\"bcla-\",\tB(16,1,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDMA}},\n-{\"bcla+\",\tB(16,1,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOE, BI, BDPA}},\n+{\"bcla-\",\tB(16,1,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOM, BI, BDMA}},\n+{\"bcla+\",\tB(16,1,1),\tB_MASK,\t     PPCCOM,\tPPCVLE,\t\t{BOP, BI, BDPA}},\n {\"bcla\",\tB(16,1,1),\tB_MASK,\t     COM,\tPPCVLE,\t\t{BO, BI, BDA}},\n \n {\"svc\",\t\tSC(17,0,0),\tSC_MASK,     POWER,\tPPCVLE,\t\t{SVC_LEV, FL1, FL2}},\n@@ -4935,10 +5036,10 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"btlr+\",    XLO(19,BOTP4,16,0),\tXLBOBB_MASK,   ISA_V2,\t PPCVLE,\t{BI}},\n {\"btlrl+\",   XLO(19,BOTP4,16,1),\tXLBOBB_MASK,   ISA_V2,\t PPCVLE,\t{BI}},\n \n-{\"bclr-\",    XLYLK(19,16,0,0),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bclrl-\",   XLYLK(19,16,0,1),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bclr+\",    XLYLK(19,16,1,0),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bclrl+\",   XLYLK(19,16,1,1),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n+{\"bclr-\",    XLLK(19,16,0),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOM, BI}},\n+{\"bclrl-\",   XLLK(19,16,1),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOM, BI}},\n+{\"bclr+\",    XLLK(19,16,0),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOP, BI}},\n+{\"bclrl+\",   XLLK(19,16,1),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOP, BI}},\n {\"bclr\",     XLLK(19,16,0),\t\tXLBH_MASK,     PPCCOM,\t PPCVLE,\t{BO, BI, BH}},\n {\"bcr\",\t     XLLK(19,16,0),\t\tXLBB_MASK,     PWRCOM,\t PPCVLE,\t{BO, BI}},\n {\"bclrl\",    XLLK(19,16,1),\t\tXLBH_MASK,     PPCCOM,\t PPCVLE,\t{BO, BI, BH}},\n@@ -5140,19 +5241,131 @@ const struct powerpc_opcode powerpc_opcodes[] = {\n {\"btctr+\",  XLO(19,BOTP4,528,0),\tXLBOBB_MASK,   ISA_V2,\t PPCVLE,\t{BI}},\n {\"btctrl+\", XLO(19,BOTP4,528,1),\tXLBOBB_MASK,   ISA_V2,\t PPCVLE,\t{BI}},\n \n-{\"bcctr-\",  XLYLK(19,528,0,0),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bcctrl-\", XLYLK(19,528,0,1),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bcctr+\",  XLYLK(19,528,1,0),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n-{\"bcctrl+\", XLYLK(19,528,1,1),\t\tXLYBB_MASK,    PPCCOM,\t PPCVLE,\t{BOE, BI}},\n+{\"bcctr-\",  XLLK(19,528,0),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOM, BI}},\n+{\"bcctrl-\", XLLK(19,528,1),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOM, BI}},\n+{\"bcctr+\",  XLLK(19,528,0),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOP, BI}},\n+{\"bcctrl+\", XLLK(19,528,1),\t\tXLBB_MASK,     PPCCOM,\t PPCVLE,\t{BOP, BI}},\n {\"bcctr\",   XLLK(19,528,0),\t\tXLBH_MASK,     PPCCOM,\t PPCVLE,\t{BO, BI, BH}},\n {\"bcc\",\t    XLLK(19,528,0),\t\tXLBB_MASK,     PWRCOM,\t PPCVLE,\t{BO, BI}},\n {\"bcctrl\",  XLLK(19,528,1),\t\tXLBH_MASK,     PPCCOM,\t PPCVLE,\t{BO, BI, BH}},\n {\"bccl\",    XLLK(19,528,1),\t\tXLBB_MASK,     PWRCOM,\t PPCVLE,\t{BO, BI}},\n \n-{\"bctar-\",  XLYLK(19,560,0,0),\t\tXLYBB_MASK,    POWER8,\t PPCVLE,\t{BOE, BI}},\n-{\"bctarl-\", XLYLK(19,560,0,1),\t\tXLYBB_MASK,    POWER8,\t PPCVLE,\t{BOE, BI}},\n-{\"bctar+\",  XLYLK(19,560,1,0),\t\tXLYBB_MASK,    POWER8,\t PPCVLE,\t{BOE, BI}},\n-{\"bctarl+\", XLYLK(19,560,1,1),\t\tXLYBB_MASK,    POWER8,\t PPCVLE,\t{BOE, BI}},\n+{\"bdnztar\",   XLO(19,BODNZ,560,0),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdnztarl\",  XLO(19,BODNZ,560,1),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztar\",    XLO(19,BODZ,560,0),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztarl\",   XLO(19,BODZ,560,1),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"btar\",      XLO(19,BOU,560,0),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"btarl\",     XLO(19,BOU,560,1),\tXLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdnztar-\",  XLO(19,BODNZM4,560,0),    XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdnztarl-\", XLO(19,BODNZM4,560,1),    XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdnztar+\",  XLO(19,BODNZP4,560,0),    XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdnztarl+\", XLO(19,BODNZP4,560,1),    XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztar-\",   XLO(19,BODZM4,560,0),     XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztarl-\",  XLO(19,BODZM4,560,1),     XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztar+\",   XLO(19,BODZP4,560,0),     XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+{\"bdztarl+\",  XLO(19,BODZP4,560,1),     XLBOBIBB_MASK, POWER8,   PPCVLE,\t{0}},\n+\n+{\"bgetar\",  XLOCB(19,BOF,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltar\",  XLOCB(19,BOF,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgetarl\", XLOCB(19,BOF,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltarl\", XLOCB(19,BOF,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletar\",  XLOCB(19,BOF,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtar\",  XLOCB(19,BOF,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletarl\", XLOCB(19,BOF,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtarl\", XLOCB(19,BOF,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetar\",  XLOCB(19,BOF,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetarl\", XLOCB(19,BOF,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstar\",  XLOCB(19,BOF,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutar\",  XLOCB(19,BOF,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstarl\", XLOCB(19,BOF,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutarl\", XLOCB(19,BOF,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgetar-\", XLOCB(19,BOFM4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltar-\", XLOCB(19,BOFM4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgetarl-\",XLOCB(19,BOFM4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltarl-\",XLOCB(19,BOFM4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletar-\", XLOCB(19,BOFM4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtar-\", XLOCB(19,BOFM4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletarl-\",XLOCB(19,BOFM4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtarl-\",XLOCB(19,BOFM4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetar-\", XLOCB(19,BOFM4,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetarl-\",XLOCB(19,BOFM4,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstar-\", XLOCB(19,BOFM4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutar-\", XLOCB(19,BOFM4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstarl-\",XLOCB(19,BOFM4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutarl-\",XLOCB(19,BOFM4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgetar+\", XLOCB(19,BOFP4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltar+\", XLOCB(19,BOFP4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgetarl+\",XLOCB(19,BOFP4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnltarl+\",XLOCB(19,BOFP4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletar+\", XLOCB(19,BOFP4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtar+\", XLOCB(19,BOFP4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bletarl+\",XLOCB(19,BOFP4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bngtarl+\",XLOCB(19,BOFP4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetar+\", XLOCB(19,BOFP4,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnetarl+\",XLOCB(19,BOFP4,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstar+\", XLOCB(19,BOFP4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutar+\", XLOCB(19,BOFP4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnstarl+\",XLOCB(19,BOFP4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bnutarl+\",XLOCB(19,BOFP4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttar\",  XLOCB(19,BOT,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttarl\", XLOCB(19,BOT,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttar\",  XLOCB(19,BOT,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttarl\", XLOCB(19,BOT,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtar\",  XLOCB(19,BOT,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtarl\", XLOCB(19,BOT,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotar\",  XLOCB(19,BOT,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntar\",  XLOCB(19,BOT,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotarl\", XLOCB(19,BOT,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntarl\", XLOCB(19,BOT,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttar-\", XLOCB(19,BOTM4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttarl-\",XLOCB(19,BOTM4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttar-\", XLOCB(19,BOTM4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttarl-\",XLOCB(19,BOTM4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtar-\", XLOCB(19,BOTM4,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtarl-\",XLOCB(19,BOTM4,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotar-\", XLOCB(19,BOTM4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntar-\", XLOCB(19,BOTM4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotarl-\",XLOCB(19,BOTM4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntarl-\",XLOCB(19,BOTM4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttar+\", XLOCB(19,BOTP4,CBLT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"blttarl+\",XLOCB(19,BOTP4,CBLT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttar+\", XLOCB(19,BOTP4,CBGT,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bgttarl+\",XLOCB(19,BOTP4,CBGT,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtar+\", XLOCB(19,BOTP4,CBEQ,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"beqtarl+\",XLOCB(19,BOTP4,CBEQ,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotar+\", XLOCB(19,BOTP4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntar+\", XLOCB(19,BOTP4,CBSO,560,0),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"bsotarl+\",XLOCB(19,BOTP4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+{\"buntarl+\",XLOCB(19,BOTP4,CBSO,560,1),\tXLBOCBBB_MASK, POWER8,\t PPCVLE,\t{CR}},\n+\n+{\"bdnzftar\",  XLO(19,BODNZF,560,0),     XLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdnzftarl\", XLO(19,BODNZF,560,1),     XLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdzftar\",   XLO(19,BODZF,560,0),\tXLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdzftarl\",  XLO(19,BODZF,560,1),\tXLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+\n+{\"bftar\",     XLO(19,BOF,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bftarl\",    XLO(19,BOF,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bftar-\",    XLO(19,BOFM4,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bftarl-\",   XLO(19,BOFM4,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bftar+\",    XLO(19,BOFP4,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bftarl+\",   XLO(19,BOFP4,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+\n+{\"bdnzttar\",  XLO(19,BODNZT,560,0),     XLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdnzttarl\", XLO(19,BODNZT,560,1),     XLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdzttar\",   XLO(19,BODZT,560,0),\tXLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+{\"bdzttarl\",  XLO(19,BODZT,560,1),\tXLBOBB_MASK,   POWER8,   PPCVLE,\t{BI}},\n+\n+{\"bttar\",     XLO(19,BOT,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bttarl\",    XLO(19,BOT,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bttar-\",    XLO(19,BOTM4,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bttarl-\",   XLO(19,BOTM4,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bttar+\",    XLO(19,BOTP4,560,0),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+{\"bttarl+\",   XLO(19,BOTP4,560,1),\tXLBOBB_MASK,   POWER8,\t PPCVLE,\t{BI}},\n+\n+{\"bctar-\",  XLLK(19,560,0),\t\tXLBB_MASK,     POWER8,\t PPCVLE,\t{BOM, BI}},\n+{\"bctarl-\", XLLK(19,560,1),\t\tXLBB_MASK,     POWER8,\t PPCVLE,\t{BOM, BI}},\n+{\"bctar+\",  XLLK(19,560,0),\t\tXLBB_MASK,     POWER8,\t PPCVLE,\t{BOP, BI}},\n+{\"bctarl+\", XLLK(19,560,1),\t\tXLBB_MASK,     POWER8,\t PPCVLE,\t{BOP, BI}},\n {\"bctar\",   XLLK(19,560,0),\t\tXLBH_MASK,     POWER8,\t PPCVLE,\t{BO, BI, BH}},\n {\"bctarl\",  XLLK(19,560,1),\t\tXLBH_MASK,     POWER8,\t PPCVLE,\t{BO, BI, BH}},\n "
    }
  ]
}