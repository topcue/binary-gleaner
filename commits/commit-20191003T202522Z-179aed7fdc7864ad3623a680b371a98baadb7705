{
  "sha": "179aed7fdc7864ad3623a680b371a98baadb7705",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTc5YWVkN2ZkYzc4NjRhZDM2MjNhNjgwYjM3MWE5OGJhYWRiNzcwNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-09-02T22:31:10Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-10-03T20:25:22Z"
    },
    "message": "gdb/fortran: Allow for matching symbols with missing scope\n\nThis commit allows symbol matching within Fortran code without having\nto specify all of the symbol's scope.  For example, given this Fortran\ncode:\n\n    module aaa\n    contains\n      subroutine foo\n        print *, \"hello.\"\n      end subroutine foo\n    end module aaa\n\n    subroutine foo\n      print *, \"hello.\"\n    end subroutine foo\n\n    program test\n      call foo\n    contains\n      subroutine foo\n        print *, \"hello.\"\n      end subroutine foo\n\n      subroutine bar\n        use aaa\n        call foo\n      end subroutine bar\n    end program test\n\nThe user can now do this:\n\n    (gdb) b foo\n    Breakpoint 1 at 0x4006c2: foo. (3 locations)\n    (gdb) info breakpoints\n    Num     Type           Disp Enb Address            What\n    1       breakpoint     keep y   <MULTIPLE>\n    1.1                         y   0x00000000004006c2 in aaa::foo at nest.f90:4\n    1.2                         y   0x0000000000400730 in foo at nest.f90:9\n    1.3                         y   0x00000000004007c3 in test::foo at nest.f90:16\n\nThe user asks for a breakpoint on 'foo' and is given a breakpoint on\nall three possible 'foo' locations.  The user is, of course, still\nable to specify the scope in order to place a single breakpoint on\njust one of the foo functions (or use 'break -qualified foo' to break\non just the global foo).\n\ngdb/ChangeLog:\n\n\t* f-lang.c (f_language_defn): Use cp_get_symbol_name_matcher and\n\tcp_search_name_hash.\n\t* NEWS: Add entry about nested function support.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/nested-funcs-2.exp: Run tests with and without the\n\tnested function prefix.",
    "tree": {
      "sha": "880688ca6f543acc9afb09ccf88d89ecd563ae8c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/880688ca6f543acc9afb09ccf88d89ecd563ae8c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/179aed7fdc7864ad3623a680b371a98baadb7705",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/179aed7fdc7864ad3623a680b371a98baadb7705",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/179aed7fdc7864ad3623a680b371a98baadb7705",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/179aed7fdc7864ad3623a680b371a98baadb7705/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0a4b09130aa8c2d2e1c1605a69962fe0a2499479",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0a4b09130aa8c2d2e1c1605a69962fe0a2499479",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0a4b09130aa8c2d2e1c1605a69962fe0a2499479"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 23,
    "deletions": 12
  },
  "files": [
    {
      "sha": "446c45501dcd778d8aeaba446cfe1ac01aa352ae",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=179aed7fdc7864ad3623a680b371a98baadb7705",
      "patch": "@@ -1,3 +1,9 @@\n+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (f_language_defn): Use cp_get_symbol_name_matcher and\n+\tcp_search_name_hash.\n+\t* NEWS: Add entry about nested function support.\n+\n 2019-10-03  Bernhard Heckel  <bernhard.heckel@intel.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "
    },
    {
      "sha": "25e67e43c88ab0123a84effba2ae37cef9062a63",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=179aed7fdc7864ad3623a680b371a98baadb7705",
      "patch": "@@ -37,6 +37,15 @@\n * New convenience variable $_ada_exception holds the address of the\n   Ada exception being thrown.  This is set by Ada-related catchpoints.\n \n+* GDB can now place breakpoints on nested functions and subroutines in\n+  Fortran code.  The '::' operator can be used between parent and\n+  child scopes when placing breakpoints, for example:\n+\n+    (gdb) break outer_function::inner_function\n+\n+  The 'outer_function::' prefix is only needed if 'inner_function' is\n+  not visible in the current scope.\n+\n * Python API\n \n   ** The gdb.Value type has a new method 'format_string' which returns a"
    },
    {
      "sha": "5681379b3b3c0872e071b857300adbdf1c89d070",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=179aed7fdc7864ad3623a680b371a98baadb7705",
      "patch": "@@ -673,9 +673,9 @@ extern const struct language_defn f_language_defn =\n   default_pass_by_reference,\n   default_get_string,\n   c_watch_location_expression,\n-  NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n+  cp_get_symbol_name_matcher,\t/* la_get_symbol_name_matcher */\n   iterate_over_symbols,\n-  default_search_name_hash,\n+  cp_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n   NULL,"
    },
    {
      "sha": "fd7614403c23f584fccc8b2ffb9e1e7bdb1ab1ad",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=179aed7fdc7864ad3623a680b371a98baadb7705",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-03  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/nested-funcs-2.exp: Run tests with and without the\n+\tnested function prefix.\n+\n 2019-10-03  Bernhard Heckel  <bernhard.heckel@intel.com>\n \t    Richard Bunt  <richard.bunt@arm.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>"
    },
    {
      "sha": "4dc49bc726880e1a37cbc211e786d4713d696de6",
      "filename": "gdb/testsuite/gdb.fortran/nested-funcs-2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/testsuite/gdb.fortran/nested-funcs-2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/179aed7fdc7864ad3623a680b371a98baadb7705/gdb/testsuite/gdb.fortran/nested-funcs-2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/nested-funcs-2.exp?ref=179aed7fdc7864ad3623a680b371a98baadb7705",
      "patch": "@@ -124,12 +124,6 @@ proc do_bp_tests {with_src_prefix_p with_nest_prefix_p} {\n \t\".*print \\\\\\*, program_i ! post_hidden\"\n     gdb_test \"p program_i\" \" = 30\" \"printing hidden global\"\n \n-    # Check that the methods in the container module still require the\n-    # module name as context.\n-    gdb_test_no_output \"set confirm off\"\n-    gdb_test \"break print_from_module\" \\\n-        \"Function \\\\\\\"print_from_module\\\\\\\" not defined.\"\n-\n     # Check info symbol, whatis and ptype can find information on\n     # these nested functions.\n     foreach entry \\\n@@ -150,10 +144,7 @@ proc do_bp_tests {with_src_prefix_p with_nest_prefix_p} {\n }\n \n foreach_with_prefix src_prefix { 0 1 } {\n-    # For now this loop is only run with a value of '1'.  A later\n-    # patch will extend this with the value '0', at which point this\n-    # comment will be removed.\n-    foreach_with_prefix nest_prefix { 1 } {\n+    foreach_with_prefix nest_prefix { 0 1 } {\n \tdo_bp_tests ${src_prefix} ${nest_prefix}\n     }\n }"
    }
  ]
}