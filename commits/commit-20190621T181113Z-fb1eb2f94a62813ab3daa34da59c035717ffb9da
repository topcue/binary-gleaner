{
  "sha": "fb1eb2f94a62813ab3daa34da59c035717ffb9da",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmIxZWIyZjk0YTYyODEzYWIzZGFhMzRkYTU5YzAzNTcxN2ZmYjlkYQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2019-06-21T18:10:57Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-06-21T18:11:13Z"
    },
    "message": "dwarf2read: Make dwo_file::dbfd a gdb_bfd_ref_ptr\n\nThis removes the manual call to gdb_bfd_ref in favor of gdb_bfd_ref_ptr.\n\ngdb/ChangeLog:\n\n\t* dwarf2read.c (struct dwo_file) <dbfd>: Change type to\n\tgdb_bfd_ref_ptr.\n\t<~dwo_file>: Remove call to gdb_bfd_unref.\n\t(open_and_init_dwo_file): Move gdb_bfd_ref_ptr into dbfd field. Call\n\tgdb_bfd_ref_ptr::get.",
    "tree": {
      "sha": "56fad8e196e3e57f5f773d5a6e035676806f748c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/56fad8e196e3e57f5f773d5a6e035676806f748c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fb1eb2f94a62813ab3daa34da59c035717ffb9da",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb1eb2f94a62813ab3daa34da59c035717ffb9da",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fb1eb2f94a62813ab3daa34da59c035717ffb9da",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb1eb2f94a62813ab3daa34da59c035717ffb9da/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51ac9db596ea9f0affa9f7db25bb179cf70beac4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51ac9db596ea9f0affa9f7db25bb179cf70beac4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51ac9db596ea9f0affa9f7db25bb179cf70beac4"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 12,
    "deletions": 6
  },
  "files": [
    {
      "sha": "c17ca42545aafbdd58f75363a1934fb524daa4e4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb1eb2f94a62813ab3daa34da59c035717ffb9da/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb1eb2f94a62813ab3daa34da59c035717ffb9da/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fb1eb2f94a62813ab3daa34da59c035717ffb9da",
      "patch": "@@ -1,3 +1,11 @@\n+2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2read.c (struct dwo_file) <dbfd>: Change type to\n+\tgdb_bfd_ref_ptr.\n+\t<~dwo_file>: Remove call to gdb_bfd_unref.\n+\t(open_and_init_dwo_file): Move gdb_bfd_ref_ptr into dbfd field. Call\n+\tgdb_bfd_ref_ptr::get.\n+\n 2019-06-21  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2read.h (struct dwarf2_per_objfile) <dwo_files>: Change"
    },
    {
      "sha": "05c872017066b567f1c939ee9894dc64ec78541e",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb1eb2f94a62813ab3daa34da59c035717ffb9da/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb1eb2f94a62813ab3daa34da59c035717ffb9da/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=fb1eb2f94a62813ab3daa34da59c035717ffb9da",
      "patch": "@@ -708,8 +708,6 @@ struct dwo_file\n \n   ~dwo_file ()\n   {\n-    gdb_bfd_unref (dbfd);\n-\n     VEC_free (dwarf2_section_info_def, sections.types);\n   }\n \n@@ -724,7 +722,7 @@ struct dwo_file\n \n   /* The bfd, when the file is open.  Otherwise this is NULL.\n      This is unused(NULL) for virtual DWO files where we use dwp_file.dbfd.  */\n-  bfd *dbfd = nullptr;\n+  gdb_bfd_ref_ptr dbfd;\n \n   /* The sections that make up this DWO file.\n      Remember that for virtual DWO files in DWP V2, these are virtual\n@@ -12960,7 +12958,7 @@ open_and_init_dwo_file (struct dwarf2_per_cu_data *per_cu,\n {\n   struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n \n-  gdb_bfd_ref_ptr dbfd (open_dwo_file (dwarf2_per_objfile, dwo_name, comp_dir));\n+  gdb_bfd_ref_ptr dbfd = open_dwo_file (dwarf2_per_objfile, dwo_name, comp_dir);\n   if (dbfd == NULL)\n     {\n       if (dwarf_read_debug)\n@@ -12971,9 +12969,9 @@ open_and_init_dwo_file (struct dwarf2_per_cu_data *per_cu,\n   dwo_file_up dwo_file (new struct dwo_file);\n   dwo_file->dwo_name = dwo_name;\n   dwo_file->comp_dir = comp_dir;\n-  dwo_file->dbfd = dbfd.release ();\n+  dwo_file->dbfd = std::move (dbfd);\n \n-  bfd_map_over_sections (dwo_file->dbfd, dwarf2_locate_dwo_sections,\n+  bfd_map_over_sections (dwo_file->dbfd.get (), dwarf2_locate_dwo_sections,\n \t\t\t &dwo_file->sections);\n \n   create_cus_hash_table (dwarf2_per_objfile, *dwo_file, dwo_file->sections.info,"
    }
  ]
}