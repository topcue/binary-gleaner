{
  "sha": "cb63de7ca804e4178a48dc500423bcb89726d893",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2I2M2RlN2NhODA0ZTQxNzhhNDhkYzUwMDQyM2JjYjg5NzI2ZDg5Mw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:28Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-04-02T13:11:28Z"
    },
    "message": "gdbserver/linux-low: turn 'siginfo_fixup' into a method\n\ngdbserver/ChangeLog:\n2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn the 'siginfo_fixup' linux target op into a method of\n\tlinux_process_target.\n\n\t* linux-low.h (struct linux_target_ops): Remove the op.\n\t(class linux_process_target) <siginfo_fixup>\n\t<low_siginfo_fixup>: Declare.\n\t* linux-low.cc (siginfo_fixup): Turn into...\n\t(linux_process_target::siginfo_fixup): ...this.\n\t(linux_process_target::low_siginfo_fixup): Define.\n\t* linux-x86-low.cc (class x86_target) <low_siginfo_fixup>: Declare.\n\t(x86_siginfo_fixup): Turn into...\n\t(x86_target::low_siginfo_fixup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-aarch64-low.cc (class aarch64_target):\n\t<low_siginfo_fixup>: Declare.\n\t(aarch64_linux_siginfo_fixup): Turn into...\n\t(aarch64_target::low_siginfo_fixup): ...this.\n\t(the_low_target): Remove the op field.\n\t* linux-arm-low.cc (the_low_target): Remove the op field.\n\t* linux-bfin-low.cc (the_low_target): Ditto.\n\t* linux-crisv32-low.cc (the_low_target): Ditto.\n\t* linux-m32r-low.cc (the_low_target): Ditto.\n\t* linux-m68k-low.cc (the_low_target): Ditto.\n\t* linux-mips-low.cc (the_low_target): Ditto.\n\t* linux-ppc-low.cc (the_low_target): Ditto.\n\t* linux-s390-low.cc (the_low_target): Ditto.\n\t* linux-sh-low.cc (the_low_target): Ditto.\n\t* linux-tic6x-low.cc (the_low_target): Ditto.\n\t* linux-tile-low.cc (the_low_target): Ditto.\n\t* linux-xtensa-low.cc (the_low_target): Ditto.",
    "tree": {
      "sha": "5bddea0fd2ff0ca90cb0ab0a39c36b4fbb82eb27",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5bddea0fd2ff0ca90cb0ab0a39c36b4fbb82eb27"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cb63de7ca804e4178a48dc500423bcb89726d893",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb63de7ca804e4178a48dc500423bcb89726d893",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cb63de7ca804e4178a48dc500423bcb89726d893",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb63de7ca804e4178a48dc500423bcb89726d893/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b35db73327cf54445a20533305fcf705e88a520b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b35db73327cf54445a20533305fcf705e88a520b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b35db73327cf54445a20533305fcf705e88a520b"
    }
  ],
  "stats": {
    "total": 110,
    "additions": 72,
    "deletions": 38
  },
  "files": [
    {
      "sha": "6ca38f07e52e087e0b9674c69f657026f21083cd",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -1,3 +1,36 @@\n+2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn the 'siginfo_fixup' linux target op into a method of\n+\tlinux_process_target.\n+\n+\t* linux-low.h (struct linux_target_ops): Remove the op.\n+\t(class linux_process_target) <siginfo_fixup>\n+\t<low_siginfo_fixup>: Declare.\n+\t* linux-low.cc (siginfo_fixup): Turn into...\n+\t(linux_process_target::siginfo_fixup): ...this.\n+\t(linux_process_target::low_siginfo_fixup): Define.\n+\t* linux-x86-low.cc (class x86_target) <low_siginfo_fixup>: Declare.\n+\t(x86_siginfo_fixup): Turn into...\n+\t(x86_target::low_siginfo_fixup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-aarch64-low.cc (class aarch64_target):\n+\t<low_siginfo_fixup>: Declare.\n+\t(aarch64_linux_siginfo_fixup): Turn into...\n+\t(aarch64_target::low_siginfo_fixup): ...this.\n+\t(the_low_target): Remove the op field.\n+\t* linux-arm-low.cc (the_low_target): Remove the op field.\n+\t* linux-bfin-low.cc (the_low_target): Ditto.\n+\t* linux-crisv32-low.cc (the_low_target): Ditto.\n+\t* linux-m32r-low.cc (the_low_target): Ditto.\n+\t* linux-m68k-low.cc (the_low_target): Ditto.\n+\t* linux-mips-low.cc (the_low_target): Ditto.\n+\t* linux-ppc-low.cc (the_low_target): Ditto.\n+\t* linux-s390-low.cc (the_low_target): Ditto.\n+\t* linux-sh-low.cc (the_low_target): Ditto.\n+\t* linux-tic6x-low.cc (the_low_target): Ditto.\n+\t* linux-tile-low.cc (the_low_target): Ditto.\n+\t* linux-xtensa-low.cc (the_low_target): Ditto.\n+\n 2020-04-02  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn the 'collect_ptrace_register' and 'supply_ptrace_register'"
    },
    {
      "sha": "79c7db92e76260d638181b4b0252d97d1bdfca1b",
      "filename": "gdbserver/linux-aarch64-low.cc",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-aarch64-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-aarch64-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-aarch64-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -90,6 +90,9 @@ class aarch64_target : public linux_process_target\n   bool low_stopped_by_watchpoint () override;\n \n   CORE_ADDR low_stopped_data_address () override;\n+\n+  bool low_siginfo_fixup (siginfo_t *native, gdb_byte *inf,\n+\t\t\t  int direction) override;\n };\n \n /* The singleton target ops object.  */\n@@ -493,10 +496,11 @@ ps_get_thread_area (struct ps_prochandle *ph,\n \t\t\t\t     is_64bit_tdesc ());\n }\n \n-/* Implementation of linux_target_ops method \"siginfo_fixup\".  */\n+/* Implementation of linux target ops method \"low_siginfo_fixup\".  */\n \n-static int\n-aarch64_linux_siginfo_fixup (siginfo_t *native, gdb_byte *inf, int direction)\n+bool\n+aarch64_target::low_siginfo_fixup (siginfo_t *native, gdb_byte *inf,\n+\t\t\t\t   int direction)\n {\n   /* Is the inferior 32-bit?  If so, then fixup the siginfo object.  */\n   if (!is_64bit_tdesc ())\n@@ -508,10 +512,10 @@ aarch64_linux_siginfo_fixup (siginfo_t *native, gdb_byte *inf, int direction)\n \taarch64_siginfo_from_compat_siginfo (native,\n \t\t\t\t\t     (struct compat_siginfo *) inf);\n \n-      return 1;\n+      return true;\n     }\n \n-  return 0;\n+  return false;\n }\n \n /* Implementation of linux_target_ops method \"new_process\".  */\n@@ -3113,7 +3117,6 @@ aarch64_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  aarch64_linux_siginfo_fixup,\n   aarch64_linux_new_process,\n   aarch64_linux_delete_process,\n   aarch64_linux_new_thread,"
    },
    {
      "sha": "267899f99ef786fa7b52d922e5b8a170d4c26052",
      "filename": "gdbserver/linux-arm-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-arm-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-arm-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-arm-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -1105,7 +1105,6 @@ arm_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   arm_new_process,\n   arm_delete_process,\n   arm_new_thread,"
    },
    {
      "sha": "6beb61ff3de6df6fc8f8582830ef34f7eb30f5e9",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -171,7 +171,6 @@ bfin_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "a7f8b480799cf5d77579a836aa09ce45e013aa0f",
      "filename": "gdbserver/linux-crisv32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-crisv32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-crisv32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-crisv32-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -468,7 +468,6 @@ crisv32_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "755c3e00a9e4aaf056389ce39e0f59de0f5931fc",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -6016,16 +6016,11 @@ linux_process_target::qxfer_osdata (const char *annex,\n   return linux_common_xfer_osdata (annex, readbuf, offset, len);\n }\n \n-/* Convert a native/host siginfo object, into/from the siginfo in the\n-   layout of the inferiors' architecture.  */\n-\n-static void\n-siginfo_fixup (siginfo_t *siginfo, gdb_byte *inf_siginfo, int direction)\n+void\n+linux_process_target::siginfo_fixup (siginfo_t *siginfo,\n+\t\t\t\t     gdb_byte *inf_siginfo, int direction)\n {\n-  int done = 0;\n-\n-  if (the_low_target.siginfo_fixup != NULL)\n-    done = the_low_target.siginfo_fixup (siginfo, inf_siginfo, direction);\n+  bool done = low_siginfo_fixup (siginfo, inf_siginfo, direction);\n \n   /* If there was no callback, or the callback didn't do anything,\n      then just do a straight memcpy.  */\n@@ -6038,6 +6033,13 @@ siginfo_fixup (siginfo_t *siginfo, gdb_byte *inf_siginfo, int direction)\n     }\n }\n \n+bool\n+linux_process_target::low_siginfo_fixup (siginfo_t *native, gdb_byte *inf,\n+\t\t\t\t\t int direction)\n+{\n+  return false;\n+}\n+\n bool\n linux_process_target::supports_qxfer_siginfo ()\n {"
    },
    {
      "sha": "599aead0665cea3b910fd483fb8d90dc02800e83",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -131,12 +131,6 @@ struct lwp_info;\n \n struct linux_target_ops\n {\n-  /* Hook to convert from target format to ptrace format and back.\n-     Returns true if any conversion was done; false otherwise.\n-     If DIRECTION is 1, then copy from INF to NATIVE.\n-     If DIRECTION is 0, copy from NATIVE to INF.  */\n-  int (*siginfo_fixup) (siginfo_t *native, gdb_byte *inf, int direction);\n-\n   /* Hook to call when a new process is created or attached to.\n      If extra per-process architecture-specific data is needed,\n      allocate it here.  */\n@@ -628,6 +622,11 @@ class linux_process_target : public process_stratum_target\n      registers meanwhile, we have the cached data we can rely on.  */\n   bool check_stopped_by_watchpoint (lwp_info *child);\n \n+  /* Convert a native/host siginfo object, into/from the siginfo in the\n+     layout of the inferiors' architecture.  */\n+  void siginfo_fixup (siginfo_t *siginfo, gdb_byte *inf_siginfo,\n+\t\t      int direction);\n+\n protected:\n   /* The architecture-specific \"low\" methods are listed below.  */\n \n@@ -683,6 +682,13 @@ class linux_process_target : public process_stratum_target\n   virtual void low_supply_ptrace_register (regcache *regcache, int regno,\n \t\t\t\t\t   const char *buf);\n \n+  /* Hook to convert from target format to ptrace format and back.\n+     Returns true if any conversion was done; false otherwise.\n+     If DIRECTION is 1, then copy from INF to NATIVE.\n+     If DIRECTION is 0, copy from NATIVE to INF.  */\n+  virtual bool low_siginfo_fixup (siginfo_t *native, gdb_byte *inf,\n+\t\t\t\t  int direction);\n+\n   /* How many bytes the PC should be decremented after a break.  */\n   virtual int low_decr_pc_after_break ();\n };"
    },
    {
      "sha": "f42cb2792b0193830ad7a633a4e716e7ea66f0b8",
      "filename": "gdbserver/linux-m32r-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-m32r-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-m32r-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m32r-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -161,7 +161,6 @@ m32r_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "bc0f37b52e5edbf69dd70dbdc1cc8d67d51581a1",
      "filename": "gdbserver/linux-m68k-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-m68k-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-m68k-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-m68k-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -265,7 +265,6 @@ m68k_supports_hardware_single_step (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "b7098a72c6c5129334a9ff2d40f6d1d73d612928",
      "filename": "gdbserver/linux-mips-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-mips-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-mips-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-mips-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -986,7 +986,6 @@ mips_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   mips_linux_new_process,\n   mips_linux_delete_process,\n   mips_linux_new_thread,"
    },
    {
      "sha": "573a6d60557cb5543749be94ad26bf6aa83c2f46",
      "filename": "gdbserver/linux-ppc-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-ppc-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-ppc-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-ppc-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -3428,7 +3428,6 @@ ppc_get_ipa_tdesc_idx (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "cd4dc8ab31e783f03df7d3438f4b7593dd03f867",
      "filename": "gdbserver/linux-s390-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-s390-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-s390-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-s390-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -2845,7 +2845,6 @@ s390_emit_ops (void)\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "070d21fbdd90fb567bceae25bf9f91311a4fcddc",
      "filename": "gdbserver/linux-sh-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-sh-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-sh-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-sh-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -192,7 +192,6 @@ sh_target::low_arch_setup ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "573b4581565a0e78e4c2a72ea3e310f9a9541579",
      "filename": "gdbserver/linux-tic6x-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-tic6x-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-tic6x-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tic6x-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -423,7 +423,6 @@ tic6x_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "ce487967aad9438c57c1c60a94a7092076a327d6",
      "filename": "gdbserver/linux-tile-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-tile-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-tile-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-tile-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -224,7 +224,6 @@ tile_supports_hardware_single_step (void)\n \n struct linux_target_ops the_low_target =\n {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    },
    {
      "sha": "bf4e6ec2c8ce6d33f70c7913a3e746f651a71456",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -141,6 +141,10 @@ class x86_target : public linux_process_target\n   /* collect_ptrace_register/supply_ptrace_register are not needed in the\n      native i386 case (no registers smaller than an xfer unit), and are not\n      used in the biarch case (HAVE_LINUX_USRREGS is not defined).  */\n+\n+  /* Need to fix up i386 siginfo if host is amd64.  */\n+  bool low_siginfo_fixup (siginfo_t *native, gdb_byte *inf,\n+\t\t\t  int direction) override;\n };\n \n /* The singleton target ops object.  */\n@@ -757,8 +761,8 @@ x86_debug_reg_state (pid_t pid)\n    from INF to PTRACE.  If DIRECTION is 0, copy from PTRACE to\n    INF.  */\n \n-static int\n-x86_siginfo_fixup (siginfo_t *ptrace, gdb_byte *inf, int direction)\n+bool\n+x86_target::low_siginfo_fixup (siginfo_t *ptrace, gdb_byte *inf, int direction)\n {\n #ifdef __x86_64__\n   unsigned int machine;\n@@ -775,7 +779,7 @@ x86_siginfo_fixup (siginfo_t *ptrace, gdb_byte *inf, int direction)\n \t\t\t\t\t     FIXUP_X32);\n #endif\n \n-  return 0;\n+  return false;\n }\n \f\n static int use_xml;\n@@ -2926,8 +2930,6 @@ x86_get_ipa_tdesc_idx (void)\n \n struct linux_target_ops the_low_target =\n {\n-  /* need to fix up i386 siginfo if host is amd64 */\n-  x86_siginfo_fixup,\n   x86_linux_new_process,\n   x86_linux_delete_process,\n   x86_linux_new_thread,"
    },
    {
      "sha": "b55a6f6674012ddf7a5144f14437508a16303f06",
      "filename": "gdbserver/linux-xtensa-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-xtensa-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cb63de7ca804e4178a48dc500423bcb89726d893/gdbserver/linux-xtensa-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-xtensa-low.cc?ref=cb63de7ca804e4178a48dc500423bcb89726d893",
      "patch": "@@ -329,7 +329,6 @@ xtensa_target::get_regs_info ()\n }\n \n struct linux_target_ops the_low_target = {\n-  NULL, /* siginfo_fixup */\n   NULL, /* new_process */\n   NULL, /* delete_process */\n   NULL, /* new_thread */"
    }
  ]
}