{
  "sha": "e594a5d19e855cf19a89dab29196d13f53ced7da",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTU5NGE1ZDE5ZTg1NWNmMTlhODlkYWIyOTE5NmQxM2Y1M2NlZDdkYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-18T20:01:56Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-30T18:57:07Z"
    },
    "message": "Turn two locator functions into methods\n\nThis changes tui_set_locator_fullname and tui_set_locator_info to be\nmethods on tui_locator_window.  This enables some subsequent\ncleannups.\n\ngdb/ChangeLog\n2019-08-30  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-stack.h (struct tui_locator_window) <set_locator_info,\n\tset_locator_fullname>: New methods.\n\t* tui/tui-stack.c (tui_locator_window::set_locator_fullname):\n\tRename from tui_set_locator_fullname.\n\t(tui_locator_window::set_locator_info): Rename from\n\ttui_set_locator_info.  Return bool.\n\t(tui_update_locator_fullname, tui_show_frame_info): Update.",
    "tree": {
      "sha": "6079bc2a7ca0f9fcb3da9c8e061cfe1c0d76b931",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6079bc2a7ca0f9fcb3da9c8e061cfe1c0d76b931"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e594a5d19e855cf19a89dab29196d13f53ced7da",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e594a5d19e855cf19a89dab29196d13f53ced7da",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e594a5d19e855cf19a89dab29196d13f53ced7da",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e594a5d19e855cf19a89dab29196d13f53ced7da/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "715bb467feab6e94e01bdf4f5aced092df7398c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/715bb467feab6e94e01bdf4f5aced092df7398c0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/715bb467feab6e94e01bdf4f5aced092df7398c0"
    }
  ],
  "stats": {
    "total": 106,
    "additions": 59,
    "deletions": 47
  },
  "files": [
    {
      "sha": "a069b0a6e148f16da36e7120a254ba42a282321d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e594a5d19e855cf19a89dab29196d13f53ced7da",
      "patch": "@@ -1,3 +1,13 @@\n+2019-08-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-stack.h (struct tui_locator_window) <set_locator_info,\n+\tset_locator_fullname>: New methods.\n+\t* tui/tui-stack.c (tui_locator_window::set_locator_fullname):\n+\tRename from tui_set_locator_fullname.\n+\t(tui_locator_window::set_locator_info): Rename from\n+\ttui_set_locator_info.  Return bool.\n+\t(tui_update_locator_fullname, tui_show_frame_info): Update.\n+\n 2019-08-30  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (show_layout): Don't call tui_refresh_all."
    },
    {
      "sha": "a4adf36365e385eacaa4fa6307ea16197b7f1104",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 37,
      "deletions": 47,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=e594a5d19e855cf19a89dab29196d13f53ced7da",
      "patch": "@@ -58,15 +58,6 @@ static struct tui_locator_window _locator;\n    Returns a pointer to a static area holding the result.  */\n static char *tui_get_function_from_frame (struct frame_info *fi);\n \n-/* Set the full_name portion of the locator.  */\n-static void tui_set_locator_fullname (const char *fullname);\n-\n-/* Update the locator, with the provided arguments.  */\n-static int tui_set_locator_info (struct gdbarch *gdbarch,\n-\t\t\t\t const char *fullname,\n-\t\t\t\t const char *procname,\n-                                 int lineno, CORE_ADDR addr);\n-\n static void tui_update_command (const char *, int);\n \f\n \n@@ -295,51 +286,48 @@ tui_locator_window::rerender ()\n   tui_show_locator_content ();\n }\n \n-/* Set the filename portion of the locator.  */\n-static void\n-tui_set_locator_fullname (const char *fullname)\n+/* See tui-stack.h.  */\n+\n+void\n+tui_locator_window::set_locator_fullname (const char *fullname)\n {\n   struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n \n   locator->full_name[0] = 0;\n   strcat_to_buf (locator->full_name, MAX_LOCATOR_ELEMENT_LEN, fullname);\n }\n \n-/* Update the locator, with the provided arguments.\n+/* See tui-stack.h.  */\n \n-   Returns 1 if any of the locator's fields were actually changed,\n-   and 0 otherwise.  */\n-\n-static int\n-tui_set_locator_info (struct gdbarch *gdbarch,\n-\t\t      const char *fullname,\n-\t\t      const char *procname, \n-\t\t      int lineno,\n-                      CORE_ADDR addr)\n+bool\n+tui_locator_window::set_locator_info (struct gdbarch *gdbarch_in,\n+\t\t\t\t      const char *fullname,\n+\t\t\t\t      const char *procname, \n+\t\t\t\t      int lineno,\n+\t\t\t\t      CORE_ADDR addr_in)\n {\n-  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-  int locator_changed_p = 0;\n+  bool locator_changed_p = false;\n \n   if (procname == NULL)\n     procname = \"\";\n \n   if (fullname == NULL)\n     fullname = \"\";\n \n-  locator_changed_p |= strncmp (locator->proc_name, procname,\n+  locator_changed_p |= strncmp (proc_name, procname,\n \t\t\t\tMAX_LOCATOR_ELEMENT_LEN) != 0;\n-  locator_changed_p |= lineno != locator->line_no;\n-  locator_changed_p |= addr != locator->addr;\n-  locator_changed_p |= gdbarch != locator->gdbarch;\n-  locator_changed_p |= strncmp (locator->full_name, fullname,\n+  locator_changed_p |= lineno != line_no;\n+  locator_changed_p |= addr_in != addr;\n+  locator_changed_p |= gdbarch_in != gdbarch;\n+  locator_changed_p |= strncmp (full_name, fullname,\n \t\t\t\tMAX_LOCATOR_ELEMENT_LEN) != 0;\n \n-  locator->proc_name[0] = (char) 0;\n-  strcat_to_buf (locator->proc_name, MAX_LOCATOR_ELEMENT_LEN, procname);\n-  locator->line_no = lineno;\n-  locator->addr = addr;\n-  locator->gdbarch = gdbarch;\n-  tui_set_locator_fullname (fullname);\n+  proc_name[0] = (char) 0;\n+  strcat_to_buf (proc_name, MAX_LOCATOR_ELEMENT_LEN, procname);\n+  line_no = lineno;\n+  addr = addr_in;\n+  gdbarch = gdbarch_in;\n+  set_locator_fullname (fullname);\n \n   return locator_changed_p;\n }\n@@ -348,7 +336,9 @@ tui_set_locator_info (struct gdbarch *gdbarch,\n void\n tui_update_locator_fullname (const char *fullname)\n {\n-  tui_set_locator_fullname (fullname);\n+  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n+\n+  locator->set_locator_fullname (fullname);\n   tui_show_locator_content ();\n }\n \n@@ -361,11 +351,11 @@ tui_update_locator_fullname (const char *fullname)\n int\n tui_show_frame_info (struct frame_info *fi)\n {\n-  int locator_changed_p;\n+  bool locator_changed_p;\n+  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n \n   if (fi)\n     {\n-      struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n       CORE_ADDR pc;\n \n       symtab_and_line sal = find_frame_sal (fi);\n@@ -376,16 +366,16 @@ tui_show_frame_info (struct frame_info *fi)\n \n       if (get_frame_pc_if_available (fi, &pc))\n \tlocator_changed_p\n-\t  = tui_set_locator_info (get_frame_arch (fi),\n-\t\t\t\t  (sal.symtab == 0\n-\t\t\t\t   ? \"??\" : fullname),\n-\t\t\t\t  tui_get_function_from_frame (fi),\n-\t\t\t\t  sal.line,\n-\t\t\t\t  pc);\n+\t  = locator->set_locator_info (get_frame_arch (fi),\n+\t\t\t\t       (sal.symtab == 0\n+\t\t\t\t\t? \"??\" : fullname),\n+\t\t\t\t       tui_get_function_from_frame (fi),\n+\t\t\t\t       sal.line,\n+\t\t\t\t       pc);\n       else\n \tlocator_changed_p\n-\t  = tui_set_locator_info (get_frame_arch (fi),\n-\t\t\t\t  \"??\", _(\"<unavailable>\"), sal.line, 0);\n+\t  = locator->set_locator_info (get_frame_arch (fi),\n+\t\t\t\t       \"??\", _(\"<unavailable>\"), sal.line, 0);\n \n       /* If the locator information has not changed, then frame information has\n \t not changed.  If frame information has not changed, then the windows'\n@@ -405,7 +395,7 @@ tui_show_frame_info (struct frame_info *fi)\n   else\n     {\n       locator_changed_p\n-\t= tui_set_locator_info (NULL, NULL, NULL, 0, (CORE_ADDR) 0);\n+\t= locator->set_locator_info (NULL, NULL, NULL, 0, (CORE_ADDR) 0);\n \n       if (!locator_changed_p)\n \treturn 0;"
    },
    {
      "sha": "86239b0d284ac5cd60fd082701662f370c64299c",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e594a5d19e855cf19a89dab29196d13f53ced7da/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=e594a5d19e855cf19a89dab29196d13f53ced7da",
      "patch": "@@ -45,6 +45,18 @@ struct tui_locator_window : public tui_gen_win_info\n \n   void rerender () override;\n \n+  /* Update the locator, with the provided arguments.\n+\n+     Returns true if any of the locator's fields were actually\n+     changed, and false otherwise.  */\n+  bool set_locator_info (struct gdbarch *gdbarch,\n+\t\t\t const char *fullname,\n+\t\t\t const char *procname,\n+\t\t\t int lineno, CORE_ADDR addr);\n+\n+  /* Set the full_name portion of the locator.  */\n+  void set_locator_fullname (const char *fullname);\n+\n   char full_name[MAX_LOCATOR_ELEMENT_LEN];\n   char proc_name[MAX_LOCATOR_ELEMENT_LEN];\n   int line_no = 0;"
    }
  ]
}