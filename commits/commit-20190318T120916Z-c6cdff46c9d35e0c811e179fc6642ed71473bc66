{
  "sha": "c6cdff46c9d35e0c811e179fc6642ed71473bc66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzZjZGZmNDZjOWQzNWUwYzgxMWUxNzlmYzY2NDJlZDcxNDczYmM2Ng==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-18T11:46:24Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-03-18T12:09:16Z"
    },
    "message": "Fix MRI mode testsuite failures\n\nThese fails were introduced by git commit 2469b3c584 with the\ninroduction of \"input_from_string\":\nm68k-linux  FAIL: MRI structured for\nm68k-linux  FAIL: MRI structured if\nm68k-linux  FAIL: MRI structured repeat\nm68k-linux  FAIL: MRI structured while\n\nSince the m68k parser called expression() without setting\ninput_from_string, get_symbol_name rejected FAKE_LABEL_CHAR in names.\n\n\t* config/m68k-parse.y (yylex): Use temp_ilp and restore_ilp.",
    "tree": {
      "sha": "ac4259478c1057a1a8e00e8bb0caf3f01e0a8f20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ac4259478c1057a1a8e00e8bb0caf3f01e0a8f20"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c6cdff46c9d35e0c811e179fc6642ed71473bc66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c6cdff46c9d35e0c811e179fc6642ed71473bc66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c6cdff46c9d35e0c811e179fc6642ed71473bc66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c6cdff46c9d35e0c811e179fc6642ed71473bc66/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cd1fe1bf525b59f4d07e5790d11d49eee7e8494",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8cd1fe1bf525b59f4d07e5790d11d49eee7e8494",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8cd1fe1bf525b59f4d07e5790d11d49eee7e8494"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 8,
    "deletions": 7
  },
  "files": [
    {
      "sha": "dbfde1e3cf9d9496dbb1dce07370113cf9645413",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c6cdff46c9d35e0c811e179fc6642ed71473bc66/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c6cdff46c9d35e0c811e179fc6642ed71473bc66/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c6cdff46c9d35e0c811e179fc6642ed71473bc66",
      "patch": "@@ -1,3 +1,7 @@\n+2019-03-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/m68k-parse.y (yylex): Use temp_ilp and restore_ilp.\n+\n 2019-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/gas/i386/att-regs.d: Pass -O0 to assembler."
    },
    {
      "sha": "8bc96d13d16e68535e3a748fb7bf7ac5debc36fb",
      "filename": "gas/config/m68k-parse.y",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c6cdff46c9d35e0c811e179fc6642ed71473bc66/gas/config/m68k-parse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c6cdff46c9d35e0c811e179fc6642ed71473bc66/gas/config/m68k-parse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/m68k-parse.y?ref=c6cdff46c9d35e0c811e179fc6642ed71473bc66",
      "patch": "@@ -754,7 +754,6 @@ yylex (void)\n   int parens;\n   int c = 0;\n   int tail = 0;\n-  char *hold;\n \n   if (*str == ' ')\n     ++str;\n@@ -913,11 +912,10 @@ yylex (void)\n \n \t  ++s;\n \n-\t  hold = input_line_pointer;\n-\t  input_line_pointer = s;\n+\t  temp_ilp (s);\n \t  expression (&scale);\n \t  s = input_line_pointer;\n-\t  input_line_pointer = hold;\n+\t  restore_ilp ();\n \n \t  if (scale.X_op != O_constant)\n \t    yyerror (_(\"scale specification must resolve to a number\"));\n@@ -1071,11 +1069,10 @@ yylex (void)\n       s[-tail] = 0;\n     }\n \n-  hold = input_line_pointer;\n-  input_line_pointer = str;\n+  temp_ilp (str);\n   expression (&yylval.exp.exp);\n   str = input_line_pointer;\n-  input_line_pointer = hold;\n+  restore_ilp ();\n \n   if (tail != 0)\n     {"
    }
  ]
}