{
  "sha": "2d83e710a14c62cb6a9501c84fc46062f817428d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmQ4M2U3MTBhMTRjNjJjYjZhOTUwMWM4NGZjNDYwNjJmODE3NDI4ZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-12T00:03:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-16T17:28:33Z"
    },
    "message": "Remove separate visibility flag\n\nTUI windows keep track of their visibility in a boolean field.\nHowever, this is not needed, because a window is visible if and only\nif it has an underlying curses handle.  So, we can remove this\nseparate field.\n\ngdb/ChangeLog\n2019-08-16  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_is_window_visible): Update.\n\t* tui/tui-wingeneral.c (tui_make_window)\n\t(tui_gen_win_info::make_visible, tui_refresh_all): Update.\n\t* tui/tui-win.c (window_name_completer, tui_refresh_all_win)\n\t(tui_set_focus_command, tui_all_windows_info, update_tab_width)\n\t(tui_set_win_height_command, parse_scrolling_args): Update.\n\t* tui/tui-source.c (tui_source_window::style_changed): Update.\n\t* tui/tui-regs.c (tui_show_registers)\n\t(tui_data_window::first_data_item_displayed)\n\t(tui_data_window::delete_data_content_windows)\n\t(tui_check_register_values, tui_reg_command): Update.\n\t* tui/tui-disasm.c (tui_show_disassem): Update.\n\t* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: New\n\tmethod.\n\t<is_visible>: Remove field.\n\t* tui/tui-data.c (tui_next_win, tui_prev_win)\n\t(tui_delete_invisible_windows): Update.",
    "tree": {
      "sha": "41d8a7abaf3e973def1e830242591b5eb24d432e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41d8a7abaf3e973def1e830242591b5eb24d432e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2d83e710a14c62cb6a9501c84fc46062f817428d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d83e710a14c62cb6a9501c84fc46062f817428d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2d83e710a14c62cb6a9501c84fc46062f817428d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d83e710a14c62cb6a9501c84fc46062f817428d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4ab829a2477d454bd38544f1b88a043ec58581c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4ab829a2477d454bd38544f1b88a043ec58581c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4ab829a2477d454bd38544f1b88a043ec58581c"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 46,
    "deletions": 25
  },
  "files": [
    {
      "sha": "34b10ed7608a221febc7760ae689c2dc343e8725",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -1,3 +1,23 @@\n+2019-08-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_is_window_visible): Update.\n+\t* tui/tui-wingeneral.c (tui_make_window)\n+\t(tui_gen_win_info::make_visible, tui_refresh_all): Update.\n+\t* tui/tui-win.c (window_name_completer, tui_refresh_all_win)\n+\t(tui_set_focus_command, tui_all_windows_info, update_tab_width)\n+\t(tui_set_win_height_command, parse_scrolling_args): Update.\n+\t* tui/tui-source.c (tui_source_window::style_changed): Update.\n+\t* tui/tui-regs.c (tui_show_registers)\n+\t(tui_data_window::first_data_item_displayed)\n+\t(tui_data_window::delete_data_content_windows)\n+\t(tui_check_register_values, tui_reg_command): Update.\n+\t* tui/tui-disasm.c (tui_show_disassem): Update.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <is_visible>: New\n+\tmethod.\n+\t<is_visible>: Remove field.\n+\t* tui/tui-data.c (tui_next_win, tui_prev_win)\n+\t(tui_delete_invisible_windows): Update.\n+\n 2019-08-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_base)"
    },
    {
      "sha": "9b80aca028edf9730dde08102766708b2a950df6",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -148,7 +148,7 @@ tui_next_win (struct tui_win_info *cur_win)\n   while (type != cur_win->type && (next_win == NULL))\n     {\n       if (tui_win_list[type]\n-\t  && tui_win_list[type]->is_visible)\n+\t  && tui_win_list[type]->is_visible ())\n \tnext_win = tui_win_list[type];\n       else\n \t{\n@@ -178,7 +178,7 @@ tui_prev_win (struct tui_win_info *cur_win)\n   while (type != cur_win->type && (prev == NULL))\n     {\n       if (tui_win_list[type]\n-\t  && tui_win_list[type]->is_visible)\n+\t  && tui_win_list[type]->is_visible ())\n \tprev = tui_win_list[type];\n       else\n \t{\n@@ -220,7 +220,7 @@ tui_delete_invisible_windows ()\n   for (int win_type = SRC_WIN; (win_type < MAX_MAJOR_WINDOWS); win_type++)\n     {\n       if (tui_win_list[win_type] != NULL\n-\t  && !tui_win_list[win_type]->is_visible)\n+\t  && !tui_win_list[win_type]->is_visible ())\n \t{\n \t  /* This should always be made visible before a call to this\n \t     function.  */"
    },
    {
      "sha": "7993c639376d37f426a9aa52fd9e6e3b892428c2",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -79,6 +79,12 @@ struct tui_gen_win_info\n     return false;\n   }\n \n+  /* Return true if this window is visible.  */\n+  bool is_visible () const\n+  {\n+    return handle != nullptr;\n+  }\n+\n   /* Window handle.  */\n   WINDOW *handle = nullptr;\n   /* Type of window.  */\n@@ -91,8 +97,6 @@ struct tui_gen_win_info\n   struct tui_point origin = {0, 0};\n   /* Viewport height.  */\n   int viewport_height = 0;\n-  /* Whether the window is visible or not.  */\n-  bool is_visible = false;\n   /* Window title to display.  */\n   char *title = nullptr;\n };"
    },
    {
      "sha": "3ebe303f75191e9048912a52f218e32bc08a4811",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -253,7 +253,7 @@ tui_show_disassem (struct gdbarch *gdbarch, CORE_ADDR start_addr)\n   struct tui_win_info *win_with_focus = tui_win_with_focus ();\n   struct tui_line_or_address val;\n \n-  gdb_assert (TUI_DISASM_WIN != nullptr && TUI_DISASM_WIN->is_visible);\n+  gdb_assert (TUI_DISASM_WIN != nullptr && TUI_DISASM_WIN->is_visible ());\n \n   val.loa = LOA_ADDRESS;\n   val.u.addr = start_addr;"
    },
    {
      "sha": "36973ff51aeb0630c626080f6a66d415a9919e5e",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -138,7 +138,7 @@ tui_show_registers (struct reggroup *group)\n \n   /* Make sure the register window is visible.  If not, select an\n      appropriate layout.  */\n-  if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible)\n+  if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible ())\n     tui_reg_layout ();\n \n   if (group == 0)\n@@ -411,7 +411,7 @@ tui_data_window::first_data_item_displayed ()\n       struct tui_gen_win_info *data_item_win;\n \n       data_item_win = regs_content[i].get ();\n-      if (data_item_win->handle != NULL && data_item_win->is_visible)\n+      if (data_item_win->is_visible ())\n \treturn i;\n     }\n \n@@ -427,7 +427,6 @@ tui_data_window::delete_data_content_windows ()\n     {\n       tui_delete_win (win->handle);\n       win->handle = NULL;\n-      win->is_visible = false;\n     }\n }\n \n@@ -552,7 +551,7 @@ void\n tui_check_register_values (struct frame_info *frame)\n {\n   if (TUI_DATA_WIN != NULL\n-      && TUI_DATA_WIN->is_visible)\n+      && TUI_DATA_WIN->is_visible ())\n     {\n       if (TUI_DATA_WIN->regs_content.empty ()\n \t  && TUI_DATA_WIN->display_regs)\n@@ -667,7 +666,7 @@ tui_reg_command (const char *args, int from_tty)\n       /* Make sure the register window is visible.  If not, select an\n \t appropriate layout.  We need to do this before trying to run the\n \t 'next' or 'prev' commands.  */\n-      if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible)\n+      if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible ())\n \ttui_reg_layout ();\n \n       struct reggroup *current_group = NULL;"
    },
    {
      "sha": "c86af84423ea3cf0fe251eb10767f3c8122a1482",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -279,7 +279,7 @@ tui_source_window::~tui_source_window ()\n void\n tui_source_window::style_changed ()\n {\n-  if (tui_active && is_visible)\n+  if (tui_active && is_visible ())\n     refill ();\n }\n "
    },
    {
      "sha": "64e38880a2cf8f879119b199a1fa164be9c416fa",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -367,7 +367,7 @@ window_name_completer (completion_tracker &tracker,\n       const char *completion_name = NULL;\n \n       /* We can't focus on an invisible window.  */\n-      if (!win_info->is_visible)\n+      if (!win_info->is_visible ())\n \tcontinue;\n \n       completion_name = win_info->name ();\n@@ -506,7 +506,7 @@ tui_refresh_all_win (void)\n   tui_refresh_all ();\n   for (tui_win_info *win_info : all_tui_windows ())\n     {\n-      if (win_info->is_visible)\n+      if (win_info->is_visible ())\n \twin_info->refresh_all ();\n     }\n   tui_show_locator_content ();\n@@ -813,7 +813,7 @@ tui_set_focus_command (const char *arg, int from_tty)\n       else\n \twin_info = tui_partial_win_by_name (buf_ptr);\n \n-      if (win_info == NULL || !win_info->is_visible)\n+      if (win_info == NULL || !win_info->is_visible ())\n \twarning (_(\"Invalid window specified. \\n\\\n The window name specified must be valid and visible.\\n\"));\n       else\n@@ -836,7 +836,7 @@ tui_all_windows_info (const char *arg, int from_tty)\n   struct tui_win_info *win_with_focus = tui_win_with_focus ();\n \n   for (tui_win_info *win_info : all_tui_windows ())\n-    if (win_info->is_visible)\n+    if (win_info->is_visible ())\n       {\n \tif (win_with_focus == win_info)\n \t  printf_filtered (\"        %s\\t(%d lines)  <has focus>\\n\",\n@@ -875,7 +875,7 @@ update_tab_width ()\n {\n   for (tui_win_info *win_info : all_tui_windows ())\n     {\n-      if (win_info->is_visible)\n+      if (win_info->is_visible ())\n \twin_info->update_tab_width ();\n     }\n }\n@@ -956,7 +956,7 @@ tui_set_win_height_command (const char *arg, int from_tty)\n \t    wname[i] = tolower (wname[i]);\n \t  win_info = tui_partial_win_by_name (wname);\n \n-\t  if (win_info == NULL || !win_info->is_visible)\n+\t  if (win_info == NULL || !win_info->is_visible ())\n \t    warning (_(\"Invalid window specified. \\n\\\n The window name specified must be valid and visible.\\n\"));\n \t  else\n@@ -1347,7 +1347,7 @@ parse_scrolling_args (const char *arg,\n \n \t  if (*win_to_scroll == NULL)\n \t    error (_(\"Unrecognized window `%s'\"), wname);\n-\t  if (!(*win_to_scroll)->is_visible)\n+\t  if (!(*win_to_scroll)->is_visible ())\n \t    error (_(\"Window is not visible\"));\n \t  else if (*win_to_scroll == TUI_CMD_WIN)\n \t    *win_to_scroll = *(tui_source_windows ().begin ());"
    },
    {
      "sha": "4e565bdc6534d7bf960d6ad09ed8449484ba42df",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -139,7 +139,6 @@ tui_make_window (struct tui_gen_win_info *win_info)\n     {\n       if (win_info->can_box ())\n \tbox_win (win_info, NO_HILITE);\n-      win_info->is_visible = true;\n       scrollok (handle, TRUE);\n     }\n }\n@@ -151,9 +150,8 @@ tui_make_window (struct tui_gen_win_info *win_info)\n void\n tui_gen_win_info::make_visible (bool visible)\n {\n-  if (is_visible == visible)\n+  if (is_visible () == visible)\n     return;\n-  is_visible = visible;\n \n   if (visible)\n     tui_make_window (this);\n@@ -182,10 +180,10 @@ tui_refresh_all ()\n \n   for (tui_win_info *win_info : all_tui_windows ())\n     {\n-      if (win_info->is_visible)\n+      if (win_info->is_visible ())\n \twin_info->refresh_window ();\n     }\n-  if (locator->is_visible)\n+  if (locator->is_visible ())\n     locator->refresh_window ();\n }\n "
    },
    {
      "sha": "db34e0c0441cd88a5f9cbb8b0473a92e81f1b84c",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d83e710a14c62cb6a9501c84fc46062f817428d/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=2d83e710a14c62cb6a9501c84fc46062f817428d",
      "patch": "@@ -661,7 +661,7 @@ tui_is_window_visible (enum tui_win_type type)\n   if (tui_win_list[type] == 0)\n     return false;\n   \n-  return tui_win_list[type]->is_visible;\n+  return tui_win_list[type]->is_visible ();\n }\n \n int"
    }
  ]
}