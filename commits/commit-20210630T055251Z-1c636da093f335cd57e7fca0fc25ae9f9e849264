{
  "sha": "1c636da093f335cd57e7fca0fc25ae9f9e849264",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWM2MzZkYTA5M2YzMzVjZDU3ZTdmY2EwZmMyNWFlOWY5ZTg0OTI2NA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-29T01:42:56Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-30T05:52:51Z"
    },
    "message": "sim: namespace sim_machs\n\nWe want to do a single build with all arches in one binary which means\nwe need to namespace sim_machs on a per-arch basis.  Move it from a\nglobal variable to the sim description structure so it can be setup at\nruntime.\n\nChanging the SIM_MODEL->num from an enum to an int is unfortunate, but\nwe specifically don't want to maintain a centralized list anymore, and\nthis was never used directly in common code, just passed to per-arch\ncallbacks.",
    "tree": {
      "sha": "e33d33c678ae988d2ad31027bb2b23c8f009e34e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e33d33c678ae988d2ad31027bb2b23c8f009e34e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c636da093f335cd57e7fca0fc25ae9f9e849264",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c636da093f335cd57e7fca0fc25ae9f9e849264",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c636da093f335cd57e7fca0fc25ae9f9e849264",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c636da093f335cd57e7fca0fc25ae9f9e849264/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f8261de1b22cc1a72ae18a2300df8b2cf7f027db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f8261de1b22cc1a72ae18a2300df8b2cf7f027db",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f8261de1b22cc1a72ae18a2300df8b2cf7f027db"
    }
  ],
  "stats": {
    "total": 213,
    "additions": 167,
    "deletions": 46
  },
  "files": [
    {
      "sha": "6b0000ac7cf116574bb3d742d1f1756de6edc646",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Set STATE_MACHS.\n+\t* machs.c (sim_machs): Rename to ...\n+\t(bfin_sim_machs): ... this.\n+\t* machs.h (bfin_sim_machs): New decl.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* machs.c (sim_machs): Mark const."
    },
    {
      "sha": "dcc7a132d765bcb6304ec939a3d03e2123d08e4a",
      "filename": "sim/bfin/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/interp.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -703,6 +703,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \t\t\t\t       sizeof (struct bfin_board_data));\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = bfin_sim_machs;\n   current_alignment = STRICT_ALIGNMENT;\n   current_target_byte_order = BFD_ENDIAN_LITTLE;\n "
    },
    {
      "sha": "a6f7033a1aefe9df1d7dd4d1ba10d8a7ee5b1175",
      "filename": "sim/bfin/machs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/machs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/machs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/machs.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1962,7 +1962,7 @@ static const SIM_MACH bfin_mach =\n   bfin_prepare_run\n };\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const bfin_sim_machs[] =\n {\n   & bfin_mach,\n   NULL"
    },
    {
      "sha": "55c260a15b55bf2d782475eda5422cf396a6d965",
      "filename": "sim/bfin/machs.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/machs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bfin/machs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/machs.h?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -32,6 +32,7 @@ struct bfin_board_data {\n void bfin_model_cpu_init (SIM_DESC, SIM_CPU *);\n bu32 bfin_model_get_chipid (SIM_DESC);\n bu32 bfin_model_get_dspid (SIM_DESC);\n+extern const SIM_MACH * const bfin_sim_machs[];\n \n #define BFIN_COREMMR_CEC_BASE\t\t0xFFE02100\n #define BFIN_COREMMR_CEC_SIZE\t\t(4 * 5)"
    },
    {
      "sha": "959c63f97a969dce26770df64d6f23e952268188",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(bpf_sim_machs): ... this.\n+\t* sim-if.c (bpf_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "c9f98c5962db62013c85ac701262bbb186cb70a8",
      "filename": "sim/bpf/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -25,7 +25,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const bpf_sim_machs[] =\n {\n #ifdef HAVE_CPU_BPFBF\n   & bpf_mach,"
    },
    {
      "sha": "150f5cd67861083d914cbccbbe9876171842e0a4",
      "filename": "sim/bpf/sim-if.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/bpf/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -111,6 +111,8 @@ bpf_free_state (SIM_DESC sd)\n   sim_state_free (sd);\n }\n \n+extern const SIM_MACH * const bpf_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -125,6 +127,9 @@ sim_open (SIM_OPEN_KIND kind,\n \n   SIM_DESC sd = sim_state_alloc (kind, callback);\n \n+  /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = bpf_sim_machs;\n+\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     goto error;\n "
    },
    {
      "sha": "63e7f3be345d9302f10b4976c36422dce231a107",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,27 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* cgen-defs.h (cgen_cpu_max_extra_bytes): Add SIM_DESC arg.\n+\t* cgen-utils.c (cgen_cpu_max_extra_bytes): Likewise.  Change sim_machs\n+\tto STATE_MACHS.\n+\t* sim-base.h (struct sim_state): Add machs.\n+\t(STATE_MACHS): New define.\n+\t* sim-cpu.c (sim_cpu_alloc): Pass sd to cgen_cpu_max_extra_bytes.\n+\t* sim-model.c (model_option_handler): Pass sd to sim_model_lookup.\n+\tChange sim_machs to STATE_MACHS.\n+\t(sim_model_lookup): Add SIM_DESC arg.  Change sim_machs to\n+\tSTATE_MACHS.\n+\t(sim_mach_lookup): Likewiwse.\n+\t(sim_mach_lookup_bfd_name): Likewise.\n+\t(sim_model_init): Pass sd to sim_model_lookup and\n+\tsim_mach_lookup_bfd_name.\n+\t(sim_machs): Delete.\n+\t* sim-model.h (enum mach_attr): Delete.\n+\t(SIM_MODEL): Change num to int.\n+\t(sim_machs): Delete.\n+\t(sim_model_lookup): Add SIM_DESC arg.\n+\t(sim_mach_lookup): Likewise.\n+\t(sim_mach_lookup_bfd_name): Likewise.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Make-common.in (Makefile): Replace $(arch) and pass more files to"
    },
    {
      "sha": "b6ed2ee3a20534d6732cbf1b90863fbd2f9f6b9a",
      "filename": "sim/common/cgen-defs.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/cgen-defs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/cgen-defs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/cgen-defs.h?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -146,7 +146,7 @@ extern CPU_INSN_NAME_FN cgen_insn_name;\n /* Return the maximum number of extra bytes required for a sim_cpu struct.  */\n /* ??? Ok, yes, this is less pretty than it should be.  Give me a better\n    language [or suggest a better way].  */\n-extern int cgen_cpu_max_extra_bytes (void);\n+extern int cgen_cpu_max_extra_bytes (SIM_DESC);\n \n /* Target supplied routine to process an invalid instruction.  */\n extern SEM_PC sim_engine_invalid_insn (SIM_CPU *, IADDR, SEM_PC);"
    },
    {
      "sha": "d9c3ea9aa80432812efba6edebaee95c3c85bd87",
      "filename": "sim/common/cgen-utils.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/cgen-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/cgen-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/cgen-utils.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -101,14 +101,16 @@ cgen_insn_name (SIM_CPU *cpu, int i)\n /* Return the maximum number of extra bytes required for a SIM_CPU struct.  */\n \n int\n-cgen_cpu_max_extra_bytes (void)\n+cgen_cpu_max_extra_bytes (SIM_DESC sd)\n {\n-  int i;\n+  const SIM_MACH * const *machp;\n   int extra = 0;\n \n-  for (i = 0; sim_machs[i] != 0; ++i)\n+  SIM_ASSERT (STATE_MACHS (sd) != NULL);\n+\n+  for (machp = STATE_MACHS (sd); *machp != NULL; ++machp)\n     {\n-      int size = IMP_PROPS_SIM_CPU_SIZE (MACH_IMP_PROPS (sim_machs[i]));\n+      int size = IMP_PROPS_SIM_CPU_SIZE (MACH_IMP_PROPS (*machp));\n       if (size > extra)\n \textra = size;\n     }"
    },
    {
      "sha": "8eae988eb50be9a982b694f708f98d0288d05be5",
      "filename": "sim/common/sim-base.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-base.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-base.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-base.h?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -143,6 +143,10 @@ struct sim_state {\n   const char *target;\n #define STATE_TARGET(sd) ((sd)->target)\n \n+  /* List of machs available.  */\n+  const SIM_MACH * const *machs;\n+#define STATE_MACHS(sd) ((sd)->machs)\n+\n   /* In standalone simulator, this is the program's arguments passed\n      on the command line.  */\n   char **prog_argv;"
    },
    {
      "sha": "bde3e617ce319d369730e93d338b6de7a9dc3e5e",
      "filename": "sim/common/sim-cpu.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-cpu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-cpu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-cpu.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -48,7 +48,7 @@ sim_cpu_alloc (SIM_DESC sd)\n   int extra_bytes = 0;\n \n #ifdef CGEN_ARCH\n-  extra_bytes += cgen_cpu_max_extra_bytes ();\n+  extra_bytes += cgen_cpu_max_extra_bytes (sd);\n #endif\n \n   return zalloc (sizeof (sim_cpu) + extra_bytes);"
    },
    {
      "sha": "4c5e463f1a07de3faa4b6405c2112362218d4ffc",
      "filename": "sim/common/sim-model.c",
      "status": "modified",
      "additions": 27,
      "deletions": 19,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-model.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-model.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-model.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -62,7 +62,7 @@ model_option_handler (SIM_DESC sd, sim_cpu *cpu, int opt,\n     {\n     case OPTION_MODEL :\n       {\n-\tconst SIM_MODEL *model = sim_model_lookup (arg);\n+\tconst SIM_MODEL *model = sim_model_lookup (sd, arg);\n \tif (! model)\n \t  {\n \t    sim_io_eprintf (sd, \"unknown model `%s'\\n\", arg);\n@@ -76,7 +76,14 @@ model_option_handler (SIM_DESC sd, sim_cpu *cpu, int opt,\n       {\n \tconst SIM_MACH * const *machp;\n \tconst SIM_MODEL *model;\n-\tfor (machp = & sim_machs[0]; *machp != NULL; ++machp)\n+\n+\tif (STATE_MACHS (sd) == NULL)\n+\t  {\n+\t    sim_io_printf (sd, \"This target does not support any models\\n\");\n+\t    return SIM_RC_FAIL;\n+\t  }\n+\n+\tfor (machp = STATE_MACHS(sd); *machp != NULL; ++machp)\n \t  {\n \t    sim_io_printf (sd, \"Models for architecture `%s':\\n\",\n \t\t\t   MACH_NAME (*machp));\n@@ -138,12 +145,15 @@ sim_model_set (SIM_DESC sd, sim_cpu *cpu, const SIM_MODEL *model)\n    Result is pointer to MODEL entry or NULL if not found.  */\n \n const SIM_MODEL *\n-sim_model_lookup (const char *name)\n+sim_model_lookup (SIM_DESC sd, const char *name)\n {\n   const SIM_MACH * const *machp;\n   const SIM_MODEL *model;\n \n-  for (machp = & sim_machs[0]; *machp != NULL; ++machp)\n+  if (STATE_MACHS (sd) == NULL)\n+    return NULL;\n+\n+  for (machp = STATE_MACHS (sd); *machp != NULL; ++machp)\n     {\n       for (model = MACH_MODELS (*machp); MODEL_NAME (model) != NULL; ++model)\n \t{\n@@ -158,11 +168,14 @@ sim_model_lookup (const char *name)\n    Result is pointer to MACH entry or NULL if not found.  */\n \n const SIM_MACH *\n-sim_mach_lookup (const char *name)\n+sim_mach_lookup (SIM_DESC sd, const char *name)\n {\n   const SIM_MACH * const *machp;\n \n-  for (machp = & sim_machs[0]; *machp != NULL; ++machp)\n+  if (STATE_MACHS (sd) == NULL)\n+    return NULL;\n+\n+  for (machp = STATE_MACHS (sd); *machp != NULL; ++machp)\n     {\n       if (strcmp (MACH_NAME (*machp), name) == 0)\n \treturn *machp;\n@@ -174,11 +187,14 @@ sim_mach_lookup (const char *name)\n    Result is pointer to MACH entry or NULL if not found.  */\n \n const SIM_MACH *\n-sim_mach_lookup_bfd_name (const char *name)\n+sim_mach_lookup_bfd_name (SIM_DESC sd, const char *name)\n {\n   const SIM_MACH * const *machp;\n \n-  for (machp = & sim_machs[0]; *machp != NULL; ++machp)\n+  if (STATE_MACHS (sd) == NULL)\n+    return NULL;\n+\n+  for (machp = STATE_MACHS (sd); *machp != NULL; ++machp)\n     {\n       if (strcmp (MACH_BFD_NAME (*machp), name) == 0)\n \treturn *machp;\n@@ -209,7 +225,7 @@ sim_model_init (SIM_DESC sd)\n       && ! CPU_MACH (cpu))\n     {\n       /* Set the default model.  */\n-      const SIM_MODEL *model = sim_model_lookup (WITH_DEFAULT_MODEL);\n+      const SIM_MODEL *model = sim_model_lookup (sd, WITH_DEFAULT_MODEL);\n       SIM_ASSERT (model != NULL);\n       sim_model_set (sd, NULL, model);\n     }\n@@ -230,7 +246,8 @@ sim_model_init (SIM_DESC sd)\n     {\n       /* Use the default model for the selected machine.\n \t The default model is the first one in the list.  */\n-      const SIM_MACH *mach = sim_mach_lookup_bfd_name (STATE_ARCHITECTURE (sd)->printable_name);\n+      const SIM_MACH *mach =\n+\tsim_mach_lookup_bfd_name (sd, STATE_ARCHITECTURE (sd)->printable_name);\n \n       if (mach == NULL)\n \t{\n@@ -247,12 +264,3 @@ sim_model_init (SIM_DESC sd)\n \n   return SIM_RC_OK;\n }\n-\f\n-#if !WITH_MODEL_P\n-/* Set up basic model support.  This is a stub for ports that do not define\n-   models.  See sim-model.h for more details.  */\n-const SIM_MACH * const sim_machs[] =\n-{\n-  NULL\n-};\n-#endif"
    },
    {
      "sha": "e735feb4b9ad2dddfdd914f60bfc08b52b370194",
      "filename": "sim/common/sim-model.h",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-model.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/common/sim-model.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-model.h?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -48,8 +48,6 @@ typedef struct {\n #endif\n \n #ifndef WITH_DEFAULT_MODEL\n-/* Just a stub for ports that do not define models.  */\n-enum mach_attr { _MACH_NONE };\n # define WITH_DEFAULT_MODEL NULL\n # define WITH_MODEL_P 0\n #else\n@@ -92,7 +90,7 @@ typedef struct {\n   /* This is the argument to bfd_scan_arch.  */\n   const char *bfd_name;\n #define MACH_BFD_NAME(m) ((m)->bfd_name)\n-  enum mach_attr num;\n+  int num;\n #define MACH_NUM(m) ((m)->num)\n \n   int word_bitsize;\n@@ -136,19 +134,13 @@ typedef struct model {\n #define MODEL_INIT(m) ((m)->init)\n } SIM_MODEL;\n \n-/* Tables of supported machines.  */\n-/* ??? In a simulator of multiple architectures, will need multiple copies of\n-   this.  Have an `archs' array that contains a pointer to the machs array\n-   for each (which in turn has a pointer to the models array for each).  */\n-extern const SIM_MACH * const sim_machs[];\n-\n /* Model module handlers.  */\n extern MODULE_INSTALL_FN sim_model_install;\n \n /* Support routines.  */\n extern void sim_model_set (SIM_DESC sd_, sim_cpu *cpu_, const SIM_MODEL *model_);\n-extern const SIM_MODEL *sim_model_lookup (const char *name_);\n-extern const SIM_MACH *sim_mach_lookup (const char *name_);\n-extern const SIM_MACH *sim_mach_lookup_bfd_name (const char *bfd_name_);\n+extern const SIM_MODEL *sim_model_lookup (SIM_DESC, const char *name_);\n+extern const SIM_MACH *sim_mach_lookup (SIM_DESC, const char *name_);\n+extern const SIM_MACH *sim_mach_lookup_bfd_name (SIM_DESC, const char *bfd_name_);\n \n #endif /* SIM_MODEL_H */"
    },
    {
      "sha": "292085038d554a5cab0784955b44fdd782d8ad14",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(cris_sim_machs): ... this.\n+\t* sim-if.c (cris_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in (stamp-v10fcpu): Do not insert cgen-ops.h include."
    },
    {
      "sha": "cd83edeaaedc709264a9a00f90d0a882399b755d",
      "filename": "sim/cris/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -24,7 +24,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const cris_sim_machs[] =\n {\n #ifdef HAVE_CPU_CRISV10F\n   & crisv10_mach,"
    },
    {
      "sha": "37a1d5b558a0c4110d4b1f3cbbaf4fe973e3bb9b",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -608,6 +608,8 @@ cris_handle_interpreter (SIM_DESC sd, struct bfd *abfd)\n   return ok;\n }\n \n+extern const SIM_MACH * const cris_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -656,6 +658,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   bfd_byte sp_init[4] = {0, 0, 0, 0};\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = cris_sim_machs;\n   current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */"
    },
    {
      "sha": "7cc35c5f74d773ae4f4927bc70f3a8c4b94e5421",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(frv_sim_machs): ... this.\n+\t* sim-if.c (frv_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "db18ec4d72772563362b2cad9de53c3cfdcc5688",
      "filename": "sim/frv/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -24,7 +24,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const frv_sim_machs[] =\n {\n #ifdef HAVE_CPU_FRVBF\n   & frv_mach,"
    },
    {
      "sha": "82f4bd845f5da605a421ac245aa678217b929dce",
      "filename": "sim/frv/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/frv/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -42,6 +42,8 @@ free_state (SIM_DESC sd)\n   sim_state_free (sd);\n }\n \n+extern const SIM_MACH * const frv_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -54,6 +56,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, bfd *abfd,\n   SIM_DESC sd = sim_state_alloc (kind, callback);\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = frv_sim_machs;\n   current_alignment = STRICT_ALIGNMENT;\n   current_target_byte_order = BFD_ENDIAN_BIG;\n "
    },
    {
      "sha": "130c6bf726cf4dd1b59fad85387245c4e71c0dd5",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(iq2000_sim_machs): ... this.\n+\t* sim-if.c (iq2000_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "523dfe1bc005f9e5531670e123ac37d670361f7a",
      "filename": "sim/iq2000/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -24,7 +24,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const iq2000_sim_machs[] =\n {\n #ifdef HAVE_CPU_IQ2000BF\n   & iq2000_mach,"
    },
    {
      "sha": "6df4b944300e5e0d140e4b9b85409e839fae5f14",
      "filename": "sim/iq2000/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/iq2000/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -50,6 +50,8 @@ free_state (SIM_DESC sd)\n   sim_state_free (sd);\n }\n \n+extern const SIM_MACH * const iq2000_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -61,6 +63,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   SIM_DESC sd = sim_state_alloc (kind, callback);\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = iq2000_sim_machs;\n   current_alignment = STRICT_ALIGNMENT;\n   current_target_byte_order = BFD_ENDIAN_BIG;\n "
    },
    {
      "sha": "6d2d238d66f432773c09e527566fa76afdcf0aa8",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(lm32_sim_machs): ... this.\n+\t* sim-if.c (lm32_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "4c485140fdb70bba57812facdd1fa3d5515184d6",
      "filename": "sim/lm32/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -24,7 +24,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const lm32_sim_machs[] =\n {\n #ifdef HAVE_CPU_LM32BF\n   & lm32_mach,"
    },
    {
      "sha": "abb9ad7b042c43011da8d72f05cd2288b46bcb7b",
      "filename": "sim/lm32/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/lm32/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -80,6 +80,8 @@ find_limit (SIM_DESC sd)\n   return (addr + 65536) & ~(0xffffUL);\n }\n \n+extern const SIM_MACH * const lm32_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -92,6 +94,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   unsigned long base, limit;\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = lm32_sim_machs;\n   current_alignment = STRICT_ALIGNMENT;\n   current_target_byte_order = BFD_ENDIAN_BIG;\n "
    },
    {
      "sha": "d2abefc90b969f8d6eac1d27a4b752e7952f110a",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(m32r_sim_machs): ... this.\n+\t* sim-if.c (m32r_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "b25cd3f990cc58604b7431131fb26803609c24ba",
      "filename": "sim/m32r/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -24,7 +24,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const m32r_sim_machs[] =\n {\n #ifdef HAVE_CPU_M32RBF\n   & m32r_mach,"
    },
    {
      "sha": "33ae7c106e391b42016202982f39f0ea4d1fad85",
      "filename": "sim/m32r/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/m32r/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -44,6 +44,8 @@ free_state (SIM_DESC sd)\n   sim_state_free (sd);\n }\n \n+extern const SIM_MACH * const m32r_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -55,6 +57,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   int i;\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = m32r_sim_machs;\n   current_alignment = STRICT_ALIGNMENT;\n   current_target_byte_order = BFD_ENDIAN_BIG;\n "
    },
    {
      "sha": "94e7e0e8c2ca0e01a39177550dd41ab91b4d3a4c",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* arch.c (sim_machs): Rename to ...\n+\t(or1k_sim_machs): ... this.\n+\t* sim-if.c (or1k_sim_machs): New decl.\n+\t(sim_open): Set STATE_MACH.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* arch.c (sim_machs): Mark const."
    },
    {
      "sha": "87b37249fb31ddf03b107edb3e89a0fb8844bdbe",
      "filename": "sim/or1k/arch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/arch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/arch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/arch.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -25,7 +25,7 @@ This file is part of the GNU simulators.\n #include \"sim-main.h\"\n #include \"bfd.h\"\n \n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const or1k_sim_machs[] =\n {\n #ifdef HAVE_CPU_OR1K32BF\n   & or32_mach,"
    },
    {
      "sha": "e8353887c828e4adee7269d061fce5a2aa5f8604",
      "filename": "sim/or1k/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/or1k/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/sim-if.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -150,6 +150,8 @@ or1k_option_handler (SIM_DESC sd, sim_cpu *cpu, int opt, char *arg,\n   return SIM_RC_FAIL;\n }\n \n+extern const SIM_MACH * const or1k_sim_machs[];\n+\n /* Create an instance of the simulator.  */\n \n SIM_DESC\n@@ -161,6 +163,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   int i;\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = or1k_sim_machs;\n   current_target_byte_order = BFD_ENDIAN_BIG;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */"
    },
    {
      "sha": "1c98ed58338d980329d54b19f3c8a7a38d292659",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Set STATE_MACHS.\n+\t(riscv_sim_machs): New decl.\n+\t* machs.c (sim_machs): Rename to ...\n+\t(riscv_sim_machs): ... this.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* machs.c (sim_machs): Mark const."
    },
    {
      "sha": "8908ed12ae874f5e80e8369d15ea50db7bba76f2",
      "filename": "sim/riscv/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/interp.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -53,6 +53,8 @@ free_state (SIM_DESC sd)\n   sim_state_free (sd);\n }\n \n+extern const SIM_MACH * const riscv_sim_machs[];\n+\n SIM_DESC\n sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \t  struct bfd *abfd, char * const *argv)\n@@ -63,6 +65,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \t\t\t\t       sizeof (struct riscv_sim_state));\n \n   /* Set default options before parsing user options.  */\n+  STATE_MACHS (sd) = riscv_sim_machs;\n   current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */"
    },
    {
      "sha": "339e5ba4754dcf4c3c5bed6daedc5d3c9e94e98a",
      "filename": "sim/riscv/machs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/machs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c636da093f335cd57e7fca0fc25ae9f9e849264/sim/riscv/machs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/machs.c?ref=1c636da093f335cd57e7fca0fc25ae9f9e849264",
      "patch": "@@ -111,7 +111,7 @@ static const SIM_MACH rv128i_mach =\n #endif\n \n /* Order matters here.  */\n-const SIM_MACH * const sim_machs[] =\n+const SIM_MACH * const riscv_sim_machs[] =\n {\n #if WITH_TARGET_WORD_BITSIZE >= 128\n   &rv128i_mach,"
    }
  ]
}