{
  "sha": "b97bd976233ee4d43c2fe18f6356e62779cbe82d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjk3YmQ5NzYyMzNlZTRkNDNjMmZlMThmNjM1NmU2Mjc3OWNiZTgyZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-20T09:16:57Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-20T10:45:48Z"
    },
    "message": "PR28106, build of 2.37 fails on FreeBSD and Clang\n\nhttps://en.cppreference.com/w/cpp/types/NULL says NULL might be\ndefined as nullptr.\nhttps://en.cppreference.com/w/cpp/language/reinterpret_cast says\nreinterpret_cast can't be used on nullptr.\n\n\tPR gold/28106\n\tPR gold/27815\n\t* gc.h (gc_process_relocs): Use static_cast in Section_id constructor.",
    "tree": {
      "sha": "dd0c04bae30dbf5f72920631361520224b4f5a90",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dd0c04bae30dbf5f72920631361520224b4f5a90"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b97bd976233ee4d43c2fe18f6356e62779cbe82d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b97bd976233ee4d43c2fe18f6356e62779cbe82d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b97bd976233ee4d43c2fe18f6356e62779cbe82d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b97bd976233ee4d43c2fe18f6356e62779cbe82d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05558223b5b52bf41036eb80335d2e541187e78f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05558223b5b52bf41036eb80335d2e541187e78f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05558223b5b52bf41036eb80335d2e541187e78f"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "df92052da7dd850baf64d4ba08e2e37434319da1",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b97bd976233ee4d43c2fe18f6356e62779cbe82d/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b97bd976233ee4d43c2fe18f6356e62779cbe82d/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=b97bd976233ee4d43c2fe18f6356e62779cbe82d",
      "patch": "@@ -1,3 +1,9 @@\n+2021-07-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR gold/28106\n+\tPR gold/27815\n+\t* gc.h (gc_process_relocs): Use static_cast in Section_id constructor.\n+\n 2021-07-17  Michael Krasnyk  <michael.krasnyk@gmail.com>\n \n \tPR gold/28098"
    },
    {
      "sha": "4a1368f5abe4d54171de76e31df574477a504916",
      "filename": "gold/gc.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b97bd976233ee4d43c2fe18f6356e62779cbe82d/gold/gc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b97bd976233ee4d43c2fe18f6356e62779cbe82d/gold/gc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/gc.h?ref=b97bd976233ee4d43c2fe18f6356e62779cbe82d",
      "patch": "@@ -247,7 +247,7 @@ gc_process_relocs(\n \t      if (is_ordinary) \n \t\t(*secvec).push_back(Section_id(src_obj, dst_indx));\n \t      else\n-\t\t(*secvec).push_back(Section_id(reinterpret_cast<Relobj*>(NULL), 0));\n+\t\t(*secvec).push_back(Section_id(static_cast<Relobj*>(NULL), 0));\n               // If the target of the relocation is an STT_SECTION symbol,\n               // make a note of that by storing -1 in the symbol vector.\n               if (lsym.get_st_type() == elfcpp::STT_SECTION)\n@@ -329,7 +329,7 @@ gc_process_relocs(\n               if (is_ordinary && dst_obj != NULL)\n \t\t(*secvec).push_back(Section_id(dst_obj, dst_indx));\n \t      else\n-\t\t(*secvec).push_back(Section_id(reinterpret_cast<Relobj*>(NULL), 0));\n+\t\t(*secvec).push_back(Section_id(static_cast<Relobj*>(NULL), 0));\n               (*symvec).push_back(gsym);\n \t      (*addendvec).push_back(std::make_pair(\n \t\t\t\t\tstatic_cast<long long>(symvalue),"
    }
  ]
}