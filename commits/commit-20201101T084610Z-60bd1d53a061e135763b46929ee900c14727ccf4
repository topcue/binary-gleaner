{
  "sha": "60bd1d53a061e135763b46929ee900c14727ccf4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjBiZDFkNTNhMDYxZTEzNTc2M2I0NjkyOWVlOTAwYzE0NzI3Y2NmNA==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-01T07:41:06Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-01T08:46:10Z"
    },
    "message": "ada-lang.c: Rename gnat_encoded_fixed_type_info\n\nThis commit renames gnat_encoded_fixed_type_info into\ngnat_encoded_fixed_point_type_info, so as to be more consistent\nwith the naming used for the other associated routines (i.e.\nuse \"fixed_point\" rather than just \"fixed\").\n\ngdb/ChangeLog:\n\n        * ada-lang.c (gnat_encoded_fixed_point_type_info): Renames\n        gnat_encoded_fixed_type_info.  Update all callers.",
    "tree": {
      "sha": "b6b4eab5f664a0e69ab3ddd5703c8279a0e8ffb5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b6b4eab5f664a0e69ab3ddd5703c8279a0e8ffb5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60bd1d53a061e135763b46929ee900c14727ccf4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60bd1d53a061e135763b46929ee900c14727ccf4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60bd1d53a061e135763b46929ee900c14727ccf4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60bd1d53a061e135763b46929ee900c14727ccf4/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db99d0d055a05d746fdc8d84a0a667c53154f760",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db99d0d055a05d746fdc8d84a0a667c53154f760",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/db99d0d055a05d746fdc8d84a0a667c53154f760"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 10,
    "deletions": 5
  },
  "files": [
    {
      "sha": "5ec5d2512150044c3979a45d293ef3e498cbf394",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60bd1d53a061e135763b46929ee900c14727ccf4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60bd1d53a061e135763b46929ee900c14727ccf4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=60bd1d53a061e135763b46929ee900c14727ccf4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-01  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* ada-lang.c (gnat_encoded_fixed_point_type_info): Renames\n+\tgnat_encoded_fixed_type_info.  Update all callers.\n+\n 2020-11-01  Joel Brobecker  <brobecker@adacore.com>\n \n \t* ada-lang.c (cast_from_gnat_encoded_fixed_point_type): Split"
    },
    {
      "sha": "930a5146c048b6f7125bc72acbe8ec23d7d91ba6",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60bd1d53a061e135763b46929ee900c14727ccf4/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60bd1d53a061e135763b46929ee900c14727ccf4/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=60bd1d53a061e135763b46929ee900c14727ccf4",
      "patch": "@@ -11120,7 +11120,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n    Otherwise, return NULL.  */\n \n static const char *\n-gnat_encoded_fixed_type_info (struct type *type)\n+gnat_encoded_fixed_point_type_info (struct type *type)\n {\n   const char *name = ada_type_name (type);\n   enum type_code code = (type == NULL) ? TYPE_CODE_UNDEF : type->code ();\n@@ -11135,7 +11135,7 @@ gnat_encoded_fixed_type_info (struct type *type)\n         return tail + 5;\n     }\n   else if (code == TYPE_CODE_RANGE && TYPE_TARGET_TYPE (type) != type)\n-    return gnat_encoded_fixed_type_info (TYPE_TARGET_TYPE (type));\n+    return gnat_encoded_fixed_point_type_info (TYPE_TARGET_TYPE (type));\n   else\n     return NULL;\n }\n@@ -11145,7 +11145,7 @@ gnat_encoded_fixed_type_info (struct type *type)\n int\n ada_is_gnat_encoded_fixed_point_type (struct type *type)\n {\n-  return gnat_encoded_fixed_type_info (type) != NULL;\n+  return gnat_encoded_fixed_point_type_info (type) != NULL;\n }\n \n /* Return non-zero iff TYPE represents a System.Address type.  */\n@@ -11173,7 +11173,7 @@ ada_scaling_type (struct type *type)\n struct value *\n gnat_encoded_fixed_point_delta (struct type *type)\n {\n-  const char *encoding = gnat_encoded_fixed_type_info (type);\n+  const char *encoding = gnat_encoded_fixed_point_type_info (type);\n   struct type *scale_type = ada_scaling_type (type);\n \n   long long num, den;\n@@ -11191,7 +11191,7 @@ gnat_encoded_fixed_point_delta (struct type *type)\n struct value *\n gnat_encoded_fixed_point_scaling_factor (struct type *type)\n {\n-  const char *encoding = gnat_encoded_fixed_type_info (type);\n+  const char *encoding = gnat_encoded_fixed_point_type_info (type);\n   struct type *scale_type = ada_scaling_type (type);\n \n   long long num0, den0, num1, den1;"
    }
  ]
}