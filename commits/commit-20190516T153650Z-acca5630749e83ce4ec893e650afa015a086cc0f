{
  "sha": "acca5630749e83ce4ec893e650afa015a086cc0f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWNjYTU2MzA3NDllODNjZTRlYzg5M2U2NTBhZmEwMTVhMDg2Y2MwZg==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T12:44:14Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:50Z"
    },
    "message": "[PATCH 35/57][Arm][GAS] Add support for MVE instructions: vshlc and vshll\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_mve_vshll): New encoding function.\n\t(do_mve_vshlc): Likewise.\n\t(insns): Add entries for MVE mnemonics.\n\t* testsuite/gas/arm/mve-vshlc-bad.d: New test.\n\t* testsuite/gas/arm/mve-vshlc-bad.l: New test.\n\t* testsuite/gas/arm/mve-vshlc-bad.s: New test.\n\t* testsuite/gas/arm/mve-vshll-bad.d: New test.\n\t* testsuite/gas/arm/mve-vshll-bad.l: New test.\n\t* testsuite/gas/arm/mve-vshll-bad.s: New test.",
    "tree": {
      "sha": "6f8328feef0c4abe0c8285fd89a556e1e2d2435c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f8328feef0c4abe0c8285fd89a556e1e2d2435c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/acca5630749e83ce4ec893e650afa015a086cc0f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acca5630749e83ce4ec893e650afa015a086cc0f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/acca5630749e83ce4ec893e650afa015a086cc0f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acca5630749e83ce4ec893e650afa015a086cc0f/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5150f0d83e7525e75d900c6859163db8797507c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5150f0d83e7525e75d900c6859163db8797507c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5150f0d83e7525e75d900c6859163db8797507c3"
    }
  ],
  "stats": {
    "total": 195,
    "additions": 195,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f7883edf584713f27d9a6d230625d0b1c8b38a1d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -1,3 +1,15 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_mve_vshll): New encoding function.\n+\t(do_mve_vshlc): Likewise.\n+\t(insns): Add entries for MVE mnemonics.\n+\t* testsuite/gas/arm/mve-vshlc-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vshlc-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vshlc-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vshll-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vshll-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vshll-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (enum operand_parse_code): Add new operand."
    },
    {
      "sha": "ab672c1fdbb03002d66b6989d7971391d0c42ba0",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 61,
      "deletions": 0,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -15771,6 +15771,63 @@ do_mve_vmlas (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_vshll (void)\n+{\n+  struct neon_type_el et\n+    = neon_check_type (2, NS_QQI, N_EQK, N_S8 | N_U8 | N_S16 | N_U16 | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  int imm = inst.operands[2].imm;\n+  constraint (imm < 1 || (unsigned)imm > et.size,\n+\t      _(\"immediate value out of range\"));\n+\n+  if ((unsigned)imm == et.size)\n+    {\n+      inst.instruction |= neon_logbits (et.size) << 18;\n+      inst.instruction |= 0x110001;\n+    }\n+  else\n+    {\n+      inst.instruction |= (et.size + imm) << 16;\n+      inst.instruction |= 0x800140;\n+    }\n+\n+  inst.instruction |= (et.type == NT_unsigned) << 28;\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= HI1 (inst.operands[1].reg) << 5;\n+  inst.instruction |= LOW4 (inst.operands[1].reg);\n+  inst.is_neon = 1;\n+}\n+\n+static void\n+do_mve_vshlc (void)\n+{\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  if (inst.operands[1].reg == REG_PC)\n+    as_tsktsk (MVE_BAD_PC);\n+  else if (inst.operands[1].reg == REG_SP)\n+    as_tsktsk (MVE_BAD_SP);\n+\n+  int imm = inst.operands[2].imm;\n+  constraint (imm < 1 || imm > 32, _(\"immediate value out of range\"));\n+\n+  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+  inst.instruction |= (imm & 0x1f) << 16;\n+  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+  inst.instruction |= inst.operands[1].reg;\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vshrn (void)\n {\n@@ -25179,6 +25236,10 @@ static const struct asm_opcode insns[] =\n  mCEF(vqrshrunt,  _vqrshrunt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n  mCEF(vqrshrunb,  _vqrshrunb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n \n+ mToC(\"vshlc\",\t    eea00fc0,\t   3, (RMQ, RR, I32z),\t    mve_vshlc),\n+ mToC(\"vshllt\",\t    ee201e00,\t   3, (RMQ, RMQ, I32),\t    mve_vshll),\n+ mToC(\"vshllb\",\t    ee200e00,\t   3, (RMQ, RMQ, I32),\t    mve_vshll),\n+\n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n  mToC(\"vcmul\", ee300e00,   4, (RMQ, RMQ, RMQ, EXPi),\t\t  mve_vcmul),"
    },
    {
      "sha": "fcaafd3abb19f473e0b92537c43645e8bdedf6eb",
      "filename": "gas/testsuite/gas/arm/mve-vshlc-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshlc-bad.d?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSHLC instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vshlc-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "5aa4ef997b130b54d5968e669ca4109b265dcf11",
      "filename": "gas/testsuite/gas/arm/mve-vshlc-bad.l",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshlc-bad.l?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,16 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: immediate value out of range -- `vshlc q0,r1,#0'\n+[^:]*:11: Error: immediate value out of range -- `vshlc q0,r1,#33'\n+[^:]*:12: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:13: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:14: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:16: Error: syntax error -- `vshlceq q0,r1,#2'\n+[^:]*:17: Error: syntax error -- `vshlceq q0,r1,#2'\n+[^:]*:19: Error: syntax error -- `vshlceq q0,r1,#2'\n+[^:]*:20: Error: vector predicated instruction should be in VPT/VPST block -- `vshlct q0,r1,#2'\n+[^:]*:22: Error: instruction missing MVE vector predication code -- `vshlc q0,r1,#2'"
    },
    {
      "sha": "777fa76fd8f32a03dbff4a1c08d8a9307af09d23",
      "filename": "gas/testsuite/gas/arm/mve-vshlc-bad.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshlc-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshlc-bad.s?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,22 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vshlc q0, r1, #2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vshlc q0, r1, #0\n+vshlc q0, r1, #33\n+vshlc q0, sp, #1\n+vshlc q0, pc, #1\n+cond\n+it eq\n+vshlceq q0, r1, #2\n+vshlceq q0, r1, #2\n+vpst\n+vshlceq q0, r1, #2\n+vshlct q0, r1, #2\n+vpst\n+vshlc q0, r1, #2"
    },
    {
      "sha": "df0cfa350e7672bd37c5faefbff9ad792cf3118f",
      "filename": "gas/testsuite/gas/arm/mve-vshll-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshll-bad.d?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSHLLT and VSHLLB instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vshll-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "42152f48b2f42f926c7d8b9e81124a1f0c8f91d6",
      "filename": "gas/testsuite/gas/arm/mve-vshll-bad.l",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshll-bad.l?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,35 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vshllt.s32 q0,q1,#1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vshllt.i8 q0,q1,#1'\n+[^:]*:12: Error: immediate value out of range -- `vshllt.u8 q0,q1,#0'\n+[^:]*:13: Error: immediate value out of range -- `vshllt.u8 q0,q1,#9'\n+[^:]*:14: Error: immediate value out of range -- `vshllt.s16 q0,q1,#0'\n+[^:]*:15: Error: immediate value out of range -- `vshllt.s16 q0,q1,#17'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vshllb.s32 q0,q1,#1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vshllb.i8 q0,q1,#1'\n+[^:]*:18: Error: immediate value out of range -- `vshllb.u8 q0,q1,#0'\n+[^:]*:19: Error: immediate value out of range -- `vshllb.u8 q0,q1,#9'\n+[^:]*:20: Error: immediate value out of range -- `vshllb.s16 q0,q1,#0'\n+[^:]*:21: Error: immediate value out of range -- `vshllb.s16 q0,q1,#17'\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vshllteq.s8 q0,q1,#1'\n+[^:]*:26: Error: syntax error -- `vshllteq.s8 q0,q1,#1'\n+[^:]*:28: Error: syntax error -- `vshllteq.s8 q0,q1,#1'\n+[^:]*:29: Error: vector predicated instruction should be in VPT/VPST block -- `vshlltt.s8 q0,q1,#1'\n+[^:]*:31: Error: instruction missing MVE vector predication code -- `vshllt.s8 q0,q1,#1'\n+[^:]*:33: Error: syntax error -- `vshllbeq.s8 q0,q1,#1'\n+[^:]*:34: Error: syntax error -- `vshllbeq.s8 q0,q1,#1'\n+[^:]*:36: Error: syntax error -- `vshllbeq.s8 q0,q1,#1'\n+[^:]*:37: Error: vector predicated instruction should be in VPT/VPST block -- `vshllbt.s8 q0,q1,#1'\n+[^:]*:39: Error: instruction missing MVE vector predication code -- `vshllb.s8 q0,q1,#1'"
    },
    {
      "sha": "01d52c65bbe4f8d0a20e2d6fd8cf9be5d16369f9",
      "filename": "gas/testsuite/gas/arm/mve-vshll-bad.s",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acca5630749e83ce4ec893e650afa015a086cc0f/gas/testsuite/gas/arm/mve-vshll-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshll-bad.s?ref=acca5630749e83ce4ec893e650afa015a086cc0f",
      "patch": "@@ -0,0 +1,39 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s16 q0, q1, #4\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vshllt.s32 q0, q1, #1\n+vshllt.i8 q0, q1, #1\n+vshllt.u8 q0, q1, #0\n+vshllt.u8 q0, q1, #9\n+vshllt.s16 q0, q1, #0\n+vshllt.s16 q0, q1, #17\n+vshllb.s32 q0, q1, #1\n+vshllb.i8 q0, q1, #1\n+vshllb.u8 q0, q1, #0\n+vshllb.u8 q0, q1, #9\n+vshllb.s16 q0, q1, #0\n+vshllb.s16 q0, q1, #17\n+cond vshllt\n+cond vshllb\n+it eq\n+vshllteq.s8 q0, q1, #1\n+vshllteq.s8 q0, q1, #1\n+vpst\n+vshllteq.s8 q0, q1, #1\n+vshlltt.s8 q0, q1, #1\n+vpst\n+vshllt.s8 q0, q1, #1\n+it eq\n+vshllbeq.s8 q0, q1, #1\n+vshllbeq.s8 q0, q1, #1\n+vpst\n+vshllbeq.s8 q0, q1, #1\n+vshllbt.s8 q0, q1, #1\n+vpst\n+vshllb.s8 q0, q1, #1"
    }
  ]
}