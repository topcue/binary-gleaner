{
  "sha": "a710b305c5ca8307e8b9d14bbb014641f60d3b48",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTcxMGIzMDVjNWNhODMwN2U4YjlkMTRiYmIwMTQ2NDFmNjBkM2I0OA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T11:07:22Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:50Z"
    },
    "message": "[PATCH 32/57][Arm][GAS] Add support for MVE instructions: vrintn, vrintx, vrinta, vrintz, vrintm and vrintp\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_vrint_1): Accept MVE variants.\n\t(insns): Change entries to accept MVE variants.\n\t* testsuite/gas/arm/mve-vrint-bad.d: New test.\n\t* testsuite/gas/arm/mve-vrint-bad.l: New test.\n\t* testsuite/gas/arm/mve-vrint-bad.s: New test.",
    "tree": {
      "sha": "aacf17fec9826dc841af416f99d955de240cda69",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aacf17fec9826dc841af416f99d955de240cda69"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a710b305c5ca8307e8b9d14bbb014641f60d3b48",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a710b305c5ca8307e8b9d14bbb014641f60d3b48",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a710b305c5ca8307e8b9d14bbb014641f60d3b48",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a710b305c5ca8307e8b9d14bbb014641f60d3b48/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4aa88b50c4eec0256bcba33e02135f224a725d68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4aa88b50c4eec0256bcba33e02135f224a725d68",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4aa88b50c4eec0256bcba33e02135f224a725d68"
    }
  ],
  "stats": {
    "total": 137,
    "additions": 127,
    "deletions": 10
  },
  "files": [
    {
      "sha": "fdcc2fef86a82b5d79a4736bc10c6af811256d77",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=a710b305c5ca8307e8b9d14bbb014641f60d3b48",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_vrint_1): Accept MVE variants.\n+\t(insns): Change entries to accept MVE variants.\n+\t* testsuite/gas/arm/mve-vrint-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vrint-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vrint-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (M_MNEM_vshrnt, M_MNEM_vshrnb, M_MNEM_vrshrnt,"
    },
    {
      "sha": "4b1dd29176df0eaa5056e089d4f3238325efdf18",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 9,
      "deletions": 10,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=a710b305c5ca8307e8b9d14bbb014641f60d3b48",
      "patch": "@@ -20416,12 +20416,11 @@ do_vrint_1 (enum neon_cvt_mode mode)\n       if (et.type == NT_invtype)\n \treturn;\n \n-      set_pred_insn_type (OUTSIDE_PRED_INSN);\n-      NEON_ENCODE (FLOAT, inst);\n-\n-      if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH8) == FAIL)\n+      if (check_simd_pred_availability (1, NEON_CHECK_CC | NEON_CHECK_ARCH8))\n \treturn;\n \n+      NEON_ENCODE (FLOAT, inst);\n+\n       inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n       inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n       inst.instruction |= LOW4 (inst.operands[1].reg);\n@@ -23556,12 +23555,12 @@ static const struct asm_opcode insns[] =\n   nUF(vselge, _vselge, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n   nUF(vselgt, _vselgt, 3, (RVSD, RVSD, RVSD),\t\tvsel),\n   nCE(vrintr, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintr),\n-  nCE(vrintz, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintz),\n-  nCE(vrintx, _vrintr, 2, (RNSDQ, oRNSDQ),\t\tvrintx),\n-  nUF(vrinta, _vrinta, 2, (RNSDQ, oRNSDQ),\t\tvrinta),\n-  nUF(vrintn, _vrinta, 2, (RNSDQ, oRNSDQ),\t\tvrintn),\n-  nUF(vrintp, _vrinta, 2, (RNSDQ, oRNSDQ),\t\tvrintp),\n-  nUF(vrintm, _vrinta, 2, (RNSDQ, oRNSDQ),\t\tvrintm),\n+  mnCE(vrintz, _vrintr, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrintz),\n+  mnCE(vrintx, _vrintr, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrintx),\n+  mnUF(vrinta, _vrinta, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrinta),\n+  mnUF(vrintn, _vrinta, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrintn),\n+  mnUF(vrintp, _vrinta, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrintp),\n+  mnUF(vrintm, _vrinta, 2, (RNSDQMQ, oRNSDQMQ),\t\tvrintm),\n \n   /* Crypto v1 extensions.  */\n #undef  ARM_VARIANT"
    },
    {
      "sha": "081a00880eb27107f9435ee0a41d2cae7e3f5953",
      "filename": "gas/testsuite/gas/arm/mve-vrint-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vrint-bad.d?ref=a710b305c5ca8307e8b9d14bbb014641f60d3b48",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VRINT instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vrint-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "1d68a82badabae2a56559f476b356fdec9713c48",
      "filename": "gas/testsuite/gas/arm/mve-vrint-bad.l",
      "status": "added",
      "additions": 80,
      "deletions": 0,
      "changes": 80,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vrint-bad.l?ref=a710b305c5ca8307e8b9d14bbb014641f60d3b48",
      "patch": "@@ -0,0 +1,80 @@\n+[^:]*: Assembler messages:\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintn.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintn.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintx.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintx.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrinta.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrinta.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintz.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintz.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintm.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintm.f64 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintp.i16 q0,q1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrintp.f64 q0,q1'\n+[^:]*:14: Error: invalid rounding mode -- `vrintr.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintneq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintneq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintneq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintnt.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrintn.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintxeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintxeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintxeq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintxt.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrintx.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintaeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintaeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintaeq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintat.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrinta.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintzeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintzeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintzeq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintzt.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrintz.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintmeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintmeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintmeq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintmt.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrintm.f16 q0,q1'\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Error: syntax error -- `vrintpeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintpeq.f16 q0,q1'\n+[^:]*:25: Error: syntax error -- `vrintpeq.f16 q0,q1'\n+[^:]*:25: Error: vector predicated instruction should be in VPT/VPST block -- `vrintpt.f16 q0,q1'\n+[^:]*:25: Error: instruction missing MVE vector predication code -- `vrintp.f16 q0,q1'"
    },
    {
      "sha": "7e9a531a2b1f3374bd3dfe41370d4ea43f5b2038",
      "filename": "gas/testsuite/gas/arm/mve-vrint-bad.s",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a710b305c5ca8307e8b9d14bbb014641f60d3b48/gas/testsuite/gas/arm/mve-vrint-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vrint-bad.s?ref=a710b305c5ca8307e8b9d14bbb014641f60d3b48",
      "patch": "@@ -0,0 +1,25 @@\n+.macro cond, mode\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vrint\\mode\\().f16 q0, q1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+.irp mode, n, x, a, z, m, p\n+vrint\\mode\\().i16 q0, q1\n+vrint\\mode\\().f64 q0, q1\n+.endr\n+vrintr.f16 q0, q1\n+.irp mode, n, x, a, z, m, p\n+cond \\mode\n+it eq\n+vrint\\mode\\()eq.f16 q0, q1\n+vrint\\mode\\()eq.f16 q0, q1\n+vpst\n+vrint\\mode\\()eq.f16 q0, q1\n+vrint\\mode\\()t.f16 q0, q1\n+vpst\n+vrint\\mode\\().f16 q0, q1\n+.endr"
    }
  ]
}