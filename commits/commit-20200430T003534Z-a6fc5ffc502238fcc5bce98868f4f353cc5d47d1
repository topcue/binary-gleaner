{
  "sha": "a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTZmYzVmZmM1MDIyMzhmY2M1YmNlOTg4NjhmNGYzNTNjYzVkNDdkMQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:34Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-04-30T00:35:34Z"
    },
    "message": "gdb: fix shellcheck warnings SC2086 (missing double quotes) in gdbarch.sh\n\nFix all instances of:\n\n    In gdbarch.sh line 31:\n        if test ! -r ${file}\n                     ^-----^ SC2086: Double quote to prevent globbing and word splitting.\n\n    Did you mean:\n        if test ! -r \"${file}\"\n\nNote that some instances of these are in text that is eval'ed.  I'm\npretty sure that things could go wrong during the eval too, but that's\nnot something shellcheck can check.\n\ngdb/ChangeLog:\n\n\t* gdbarch.sh: Use double quotes around variables.",
    "tree": {
      "sha": "c22fa7d5424462a68f23c6a4ef2ff84f5d697125",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c22fa7d5424462a68f23c6a4ef2ff84f5d697125"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d113d130ef87c982896412f89154a5fa5afc9ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d113d130ef87c982896412f89154a5fa5afc9ac",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d113d130ef87c982896412f89154a5fa5afc9ac"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 12,
    "deletions": 8
  },
  "files": [
    {
      "sha": "eefeac4c180dc19db56a01647bfb90ecdb4f20cb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
      "patch": "@@ -1,3 +1,7 @@\n+2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbarch.sh: Use double quotes around variables.\n+\n 2020-04-29  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbarch.sh: Use %s with printf, instead of variables in the"
    },
    {
      "sha": "a934a7aa6bc1b3d08a9c408e45c5bf6fc347f342",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a6fc5ffc502238fcc5bce98868f4f353cc5d47d1/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=a6fc5ffc502238fcc5bce98868f4f353cc5d47d1",
      "patch": "@@ -28,10 +28,10 @@ LC_ALL=C ; export LC_ALL\n compare_new ()\n {\n     file=$1\n-    if test ! -r ${file}\n+    if test ! -r \"${file}\"\n     then\n \techo \"${file} missing? cp new-${file} ${file}\" 1>&2\n-    elif diff -u ${file} new-${file}\n+    elif diff -u \"${file}\" \"new-${file}\"\n     then\n \techo \"${file} unchanged\" 1>&2\n     else\n@@ -70,7 +70,7 @@ ${line}\"\n \t    line=\"`echo \"${line}\" | sed -e 's/;;/; ;/g' -e 's/;;/; ;/g'`\"\n \n \t    OFS=\"${IFS}\" ; IFS=\"[;]\"\n-\t    eval read ${read} <<EOF\n+\t    eval read \"${read}\" <<EOF\n ${line}\n EOF\n \t    IFS=\"${OFS}\"\n@@ -86,9 +86,9 @@ EOF\n \t    # that ended up with just that space character.\n \t    for r in ${read}\n \t    do\n-\t\tif eval test \\\"\\${${r}}\\\" = \\\"\\ \\\"\n+\t\tif eval test \"\\\"\\${${r}}\\\" = ' '\"\n \t\tthen\n-\t\t    eval ${r}=\"\"\n+\t\t    eval \"${r}=\"\n \t\tfi\n \t    done\n \n@@ -1227,7 +1227,7 @@ ${class} ${returntype} ${function} ($formal)\n EOF\n     for r in ${read}\n     do\n-\teval echo \\\"\\ \\ \\ \\ ${r}=\\${${r}}\\\"\n+\teval echo \"\\\"    ${r}=\\${${r}}\\\"\"\n     done\n     if class_is_predicate_p && fallback_default_p\n     then\n@@ -2162,7 +2162,7 @@ do\n \tprintf \"\\n\"\n \tprintf \"void\\n\"\n \tprintf \"set_gdbarch_%s (struct gdbarch *gdbarch,\\n\" \"$function\"\n-        printf \"            `echo ${function} | sed -e 's/./ /g'`  gdbarch_%s_ftype %s)\\n\" \"$function\" \"$function\"\n+        printf \"            `echo \"$function\" | sed -e 's/./ /g'`  gdbarch_%s_ftype %s)\\n\" \"$function\" \"$function\"\n \tprintf \"{\\n\"\n \tprintf \"  gdbarch->%s = %s;\\n\" \"$function\" \"$function\"\n \tprintf \"}\\n\"\n@@ -2192,7 +2192,7 @@ do\n \tprintf \"\\n\"\n \tprintf \"void\\n\"\n \tprintf \"set_gdbarch_%s (struct gdbarch *gdbarch,\\n\" \"$function\"\n-        printf \"            `echo ${function} | sed -e 's/./ /g'`  %s %s)\\n\" \"$returntype\" \"$function\"\n+        printf \"            `echo \"$function\" | sed -e 's/./ /g'`  %s %s)\\n\" \"$returntype\" \"$function\"\n \tprintf \"{\\n\"\n \tprintf \"  gdbarch->%s = %s;\\n\" \"$function\" \"$function\"\n \tprintf \"}\\n\""
    }
  ]
}