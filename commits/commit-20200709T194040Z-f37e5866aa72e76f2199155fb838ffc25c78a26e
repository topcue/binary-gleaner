{
  "sha": "f37e5866aa72e76f2199155fb838ffc25c78a26e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjM3ZTU4NjZhYTcyZTc2ZjIxOTkxNTVmYjgzOGZmYzI1Yzc4YTI2ZQ==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-07-09T19:40:40Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-07-09T19:40:40Z"
    },
    "message": "Don't compare the pid returned from 'wait' against inferior_ptid.\n\n'inf_ptrace::wait' needs to discard termination events reported by\ndetached child processes.  Previously it compared the returned pid\nagainst the pid in inferior_ptid to determine if a termination event\nshould be discarded or reported.  The multi-target changes cleared\ninferior_ptid to null_ptid in 'wait' target methods, so this was\nalways failing and never reporting exit events.  Instead, report\ntermination events whose pid matches any inferior belonging to the\ncurrent target.\n\nSeveral tests started failing on FreeBSD after the multi-target\nchanges and pass again after this change.\n\ngdb/ChangeLog:\n\n\t* inf-ptrace.c (inf_ptrace_target::wait): Don't compare against\n\tinferior_ptid.",
    "tree": {
      "sha": "c6a593841eb4baf31a4f2c8f7ff4375bca9f7365",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c6a593841eb4baf31a4f2c8f7ff4375bca9f7365"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f37e5866aa72e76f2199155fb838ffc25c78a26e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f37e5866aa72e76f2199155fb838ffc25c78a26e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f37e5866aa72e76f2199155fb838ffc25c78a26e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f37e5866aa72e76f2199155fb838ffc25c78a26e/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "39776b1117bdbdc34eb46151edc8e09eecce1530",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39776b1117bdbdc34eb46151edc8e09eecce1530",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39776b1117bdbdc34eb46151edc8e09eecce1530"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "bdab91dd2d626f8c7a5753f5bc27083185a7f55d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f37e5866aa72e76f2199155fb838ffc25c78a26e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f37e5866aa72e76f2199155fb838ffc25c78a26e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f37e5866aa72e76f2199155fb838ffc25c78a26e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-09  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* inf-ptrace.c (inf_ptrace_target::wait): Don't compare against\n+\tinferior_ptid.\n+\n 2020-07-09  John Baldwin  <jhb@FreeBSD.org>\n \n \t* fbsd-tdep.c (fbsd_print_auxv_entry): Handle AT_FREEBSD_ARGC,"
    },
    {
      "sha": "ae0b0f7ff0d50c1f77220636d13a0b515849d86d",
      "filename": "gdb/inf-ptrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f37e5866aa72e76f2199155fb838ffc25c78a26e/gdb/inf-ptrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f37e5866aa72e76f2199155fb838ffc25c78a26e/gdb/inf-ptrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-ptrace.c?ref=f37e5866aa72e76f2199155fb838ffc25c78a26e",
      "patch": "@@ -347,7 +347,7 @@ inf_ptrace_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n \t}\n \n       /* Ignore terminated detached child processes.  */\n-      if (!WIFSTOPPED (status) && pid != inferior_ptid.pid ())\n+      if (!WIFSTOPPED (status) && find_inferior_pid (this, pid) == nullptr)\n \tpid = -1;\n     }\n   while (pid == -1);"
    }
  ]
}