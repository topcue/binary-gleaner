{
  "sha": "8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODM5OTQyNWY1ZjQ3MmFkOGU2MzBiYjMwYWQyZGJlZmVkZGJiNjhiNw==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:39:02Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:45:48Z"
    },
    "message": "Support TLS variables on FreeBSD/powerpc.\n\nDerive the pointer to the DTV array from the %r2 register on 32-bit\npowerpc and %r13 on 64-bit powerpc.\n\ngdb/ChangeLog:\n\n\t* ppc-fbsd-tdep.c (ppcfbsd_get_thread_local_address): New.\n\t(ppcfbsd_init_abi): Install gdbarch\n\t\"fetch_tls_load_module_address\" and \"get_thread_local_address\"\n\tmethods.",
    "tree": {
      "sha": "06996585158f9c0050039be45da18bacfbbdd25e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06996585158f9c0050039be45da18bacfbbdd25e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8399425f5f472ad8e630bb30ad2dbefeddbb68b7/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0f87ed032bb68a9965de81cbf9fd676a83b9174",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0f87ed032bb68a9965de81cbf9fd676a83b9174",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0f87ed032bb68a9965de81cbf9fd676a83b9174"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 42,
    "deletions": 0
  },
  "files": [
    {
      "sha": "fe7504c27a7fa639bd9bb106d924563f4a30a457",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8399425f5f472ad8e630bb30ad2dbefeddbb68b7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8399425f5f472ad8e630bb30ad2dbefeddbb68b7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
      "patch": "@@ -1,3 +1,10 @@\n+2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* ppc-fbsd-tdep.c (ppcfbsd_get_thread_local_address): New.\n+\t(ppcfbsd_init_abi): Install gdbarch\n+\t\"fetch_tls_load_module_address\" and \"get_thread_local_address\"\n+\tmethods.\n+\n 2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n \n \t* riscv-fbsd-tdep.c (riscv_fbsd_get_thread_local_address): New."
    },
    {
      "sha": "290bd1fd88281c79fce3b7ac965942b5acd99aec",
      "filename": "gdb/ppc-fbsd-tdep.c",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8399425f5f472ad8e630bb30ad2dbefeddbb68b7/gdb/ppc-fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8399425f5f472ad8e630bb30ad2dbefeddbb68b7/gdb/ppc-fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-fbsd-tdep.c?ref=8399425f5f472ad8e630bb30ad2dbefeddbb68b7",
      "patch": "@@ -279,6 +279,39 @@ ppcfbsd_return_value (struct gdbarch *gdbarch, struct value *function,\n \t\t\t\t\t   regcache, readbuf, writebuf);\n }\n \n+/* Implement the \"get_thread_local_address\" gdbarch method.  */\n+\n+static CORE_ADDR\n+ppcfbsd_get_thread_local_address (struct gdbarch *gdbarch, ptid_t ptid,\n+\t\t\t\t  CORE_ADDR lm_addr, CORE_ADDR offset)\n+{\n+  struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);\n+  struct regcache *regcache;\n+  int tp_offset, tp_regnum;\n+\n+  regcache = get_thread_arch_regcache (ptid, gdbarch);\n+\n+  if (tdep->wordsize == 4)\n+    {\n+      tp_offset = 0x7008;\n+      tp_regnum = PPC_R0_REGNUM + 2;\n+    }\n+  else\n+    {\n+      tp_offset = 0x7010;\n+      tp_regnum = PPC_R0_REGNUM + 13;\n+    }\n+  target_fetch_registers (regcache, tp_regnum);\n+\n+  ULONGEST tp;\n+  if (regcache->cooked_read (tp_regnum, &tp) != REG_VALID)\n+    error (_(\"Unable to fetch tcb pointer\"));\n+\n+  /* tp points to the end of the TCB block.  The first member of the\n+     TCB is the pointer to the DTV array.  */\n+  CORE_ADDR dtv_addr = tp - tp_offset;\n+  return fbsd_get_thread_local_address (gdbarch, dtv_addr, lm_addr, offset);\n+}\n \n static void\n ppcfbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n@@ -322,6 +355,8 @@ ppcfbsd_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \n   set_gdbarch_fetch_tls_load_module_address (gdbarch,\n \t\t\t\t\t     svr4_fetch_objfile_link_map);\n+  set_gdbarch_get_thread_local_address (gdbarch,\n+\t\t\t\t\tppcfbsd_get_thread_local_address);\n }\n \n void"
    }
  ]
}