{
  "sha": "71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzFhMjVlZDJlNzdmZDcyZTAxZDM4YWE4NGY1YTBmYmU1ZjA4MTQ3NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-23T22:43:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-09-20T19:49:05Z"
    },
    "message": "Change tui_make_status_line to be a method\n\nThis changes tui_make_status_line to be a method on\ntui_locator_window.  This is a minor cleanup.\n\nThis also changes the new method to use the locator's width, rather\nthan the terminal width.  This is important if we ever want to allow\nwindows to be made more narrow.\n\ngdb/ChangeLog\n2019-09-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-stack.h (struct tui_locator_window) <make_status_line>:\n\tDeclare.\n\t* tui/tui-stack.c (tui_locator_window::make_status_line): Rename\n\tfrom tui_make_status_line.\n\t(tui_locator_window::rerender): Update.",
    "tree": {
      "sha": "423c0557ab025c8ea8ba0acc0891588cd1d306d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/423c0557ab025c8ea8ba0acc0891588cd1d306d7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f85321544357a44a824d9d31fd57ed4d3aae1a4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f85321544357a44a824d9d31fd57ed4d3aae1a4a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f85321544357a44a824d9d31fd57ed4d3aae1a4a"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 28,
    "deletions": 18
  },
  "files": [
    {
      "sha": "b6a15347b52791d51bde4cf1fee2ba303fec3a76",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-stack.h (struct tui_locator_window) <make_status_line>:\n+\tDeclare.\n+\t* tui/tui-stack.c (tui_locator_window::make_status_line): Rename\n+\tfrom tui_make_status_line.\n+\t(tui_locator_window::rerender): Update.\n+\n 2019-09-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-stack.c (tui_make_status_line): Return std::string."
    },
    {
      "sha": "163a5ad7255fb612b9a56df62e233c4f08cd63e9",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 12,
      "deletions": 18,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
      "patch": "@@ -63,13 +63,10 @@ tui_locator_win_info_ptr (void)\n   return &_locator;\n }\n \n-/* Create the status line to display as much information as we can on\n-   this single line: target name, process number, current function,\n-   current line, current PC, SingleKey mode.  */\n-static std::string\n-tui_make_status_line (struct tui_locator_window *loc)\n+std::string\n+tui_locator_window::make_status_line () const\n {\n-  char line_buf[50], *pname;\n+  char line_buf[50];\n   int status_size;\n   int proc_width;\n   const char *pid_name;\n@@ -94,20 +91,20 @@ tui_make_status_line (struct tui_locator_window *loc)\n   if (pid_width > MAX_PID_WIDTH)\n     pid_width = MAX_PID_WIDTH;\n \n-  status_size = tui_term_width ();\n+  status_size = width;\n \n   /* Translate line number and obtain its size.  */\n-  if (loc->line_no > 0)\n-    xsnprintf (line_buf, sizeof (line_buf), \"%d\", loc->line_no);\n+  if (line_no > 0)\n+    xsnprintf (line_buf, sizeof (line_buf), \"%d\", line_no);\n   else\n     strcpy (line_buf, \"??\");\n   line_width = strlen (line_buf);\n   if (line_width < MIN_LINE_WIDTH)\n     line_width = MIN_LINE_WIDTH;\n \n   /* Translate PC address.  */\n-  std::string pc_out (loc->gdbarch\n-\t\t      ? paddress (loc->gdbarch, loc->addr)\n+  std::string pc_out (gdbarch\n+\t\t      ? paddress (gdbarch, addr)\n \t\t      : \"??\");\n   const char *pc_buf = pc_out.c_str ();\n   int pc_width = pc_out.size ();\n@@ -150,9 +147,6 @@ tui_make_status_line (struct tui_locator_window *loc)\n         }\n     }\n \n-  /* Now convert elements to string form.  */\n-  pname = loc->proc_name;\n-\n   /* Now create the locator line from the string version of the\n      elements.  */\n   string_file string;\n@@ -172,12 +166,12 @@ tui_make_status_line (struct tui_locator_window *loc)\n   /* Procedure/class name.  */\n   if (proc_width > 0)\n     {\n-      if (strlen (pname) > proc_width)\n+      if (strlen (proc_name) > proc_width)\n         string.printf (\"%s%*.*s* \", PROC_PREFIX,\n-\t\t       1 - proc_width, proc_width - 1, pname);\n+\t\t       1 - proc_width, proc_width - 1, proc_name);\n       else\n         string.printf (\"%s%*.*s \", PROC_PREFIX,\n-\t\t       -proc_width, proc_width, pname);\n+\t\t       -proc_width, proc_width, proc_name);\n     }\n \n   if (line_width > 0)\n@@ -234,7 +228,7 @@ tui_locator_window::rerender ()\n {\n   if (handle != NULL)\n     {\n-      std::string string = tui_make_status_line (this);\n+      std::string string = make_status_line ();\n       wmove (handle, 0, 0);\n       /* We ignore the return value from wstandout and wstandend, casting\n \t them to void in order to avoid a compiler warning.  The warning"
    },
    {
      "sha": "b6ffa986a6f93f50d16d961a06f549dd7261ca98",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/71a25ed2e77fd72e01d38aa84f5a0fbe5f081474/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=71a25ed2e77fd72e01d38aa84f5a0fbe5f081474",
      "patch": "@@ -63,6 +63,14 @@ struct tui_locator_window : public tui_gen_win_info\n   CORE_ADDR addr = 0;\n   /* Architecture associated with code at this location.  */\n   struct gdbarch *gdbarch = nullptr;\n+\n+private:\n+\n+  /* Create the status line to display as much information as we can\n+     on this single line: target name, process number, current\n+     function, current line, current PC, SingleKey mode.  */\n+\n+  std::string make_status_line () const;\n };\n \n extern void tui_update_locator_fullname (const char *);"
    }
  ]
}