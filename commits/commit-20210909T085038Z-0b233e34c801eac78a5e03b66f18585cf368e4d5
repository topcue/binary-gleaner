{
  "sha": "0b233e34c801eac78a5e03b66f18585cf368e4d5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGIyMzNlMzRjODAxZWFjNzhhNWUwM2I2NmYxODU4NWNmMzY4ZTRkNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-01T13:24:15Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-09-09T08:50:38Z"
    },
    "message": "gdb/python: remove all uses of Py_TPFLAGS_HAVE_ITER\n\nPython 2 has a bit flag Py_TPFLAGS_HAVE_ITER which can be passed as\npart of the tp_flags field when defining a new object type.  This flag\nis not defined in Python 3 and so we define it to 0 in\npython-internal.h (when IS_PY3K is defined).\n\nThe meaning of this flag is that the object has the fields tp_iter and\ntp_iternext.  Note the use of \"has\" here, the flag says nothing about\nthe values in those fields, just that the type object has the fields.\n\nIn early versions of Python 2 these fields were no part of the\nPyTypeObject struct, they were added in version 2.2 (see\nhttps://docs.python.org/release/2.3/api/type-structs.html).  And so,\nthere could be a some code compiled out there which has a PyTypeObject\nstructure within it that doesn't even have the tp_iter and tp_iternext\nfields, attempting to access these fields would be undefined\nbehaviour.\n\nAnd so Python added the Py_TPFLAGS_HAVE_ITER flag.  If the flag is\npresent then Python is free to access the tp_iter and tp_iternext\nfields.\n\nIf we consider GDB then we always assume that the tp_iter and\ntp_iternext fields are part of PyTypeObject.  If someone was crazy\nenough to try and compile GDB against Python 2.1 then we'd get lots of\nbuild errors saying that we were passing too many fields when\ninitializing PyTypeObject structures.  And so, I claim, we can be sure\nthat GDB will always be compiled with a version of Python that has the\ntp_iter and tp_iternext fields in PyTypeObject.\n\nNext we can look at the Py_TPFLAGS_DEFAULT flag.  In Python 2, each\ntime additional fields are added to PyTypeObject a new Py_TPFLAGS_*\nflag would be defined to indicate whether those flags are present or\nnot.  And, those new flags would be added to Py_TPFLAGS_DEFAULT.  And\nso, in the latest version of Python 2 the Py_TPFLAGS_DEFAULT flag\nincludes Py_TPFLAGS_HAVE_ITER (see\nhttps://docs.python.org/2.7/c-api/typeobj.html).\n\nIn GDB we pass Py_TPFLAGS_DEFAULT as part of the tp_flags for all\nobjects we define.\n\nAnd so, in this commit, I propose to remove all uses of\nPy_TPFLAGS_HAVE_ITER from GDB, it's simply not needed.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "ffbf9145c61b0c3bb07b08b206f703fc9cc92a82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ffbf9145c61b0c3bb07b08b206f703fc9cc92a82"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b233e34c801eac78a5e03b66f18585cf368e4d5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b233e34c801eac78a5e03b66f18585cf368e4d5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b233e34c801eac78a5e03b66f18585cf368e4d5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b233e34c801eac78a5e03b66f18585cf368e4d5/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "21b9b99cd797fd2581ed559b89ec0c2cc6e87edf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/21b9b99cd797fd2581ed559b89ec0c2cc6e87edf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/21b9b99cd797fd2581ed559b89ec0c2cc6e87edf"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 10,
    "deletions": 11
  },
  "files": [
    {
      "sha": "fe0efd62d46a69683d6d5428ed8e60a0c25f383d",
      "filename": "gdb/python/py-block.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-block.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-block.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-block.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -510,7 +510,7 @@ PyTypeObject block_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB block object\",\t\t  /* tp_doc */\n   0,\t\t\t\t  /* tp_traverse */\n   0,\t\t\t\t  /* tp_clear */\n@@ -550,7 +550,7 @@ PyTypeObject block_syms_iterator_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB block syms iterator object\",\t      /*tp_doc */\n   0,\t\t\t\t  /*tp_traverse */\n   0,\t\t\t\t  /*tp_clear */"
    },
    {
      "sha": "0659c28ea9c5da4b03252bd1648c3a9fa8846497",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -1026,7 +1026,7 @@ PyTypeObject inferior_object_type =\n   0,\t\t\t\t  /* tp_getattro */\n   0,\t\t\t\t  /* tp_setattro */\n   0,\t\t\t\t  /* tp_as_buffer */\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /* tp_flags */\n+  Py_TPFLAGS_DEFAULT,\t\t  /* tp_flags */\n   \"GDB inferior object\",\t  /* tp_doc */\n   0,\t\t\t\t  /* tp_traverse */\n   0,\t\t\t\t  /* tp_clear */"
    },
    {
      "sha": "5645442a42696ed21d9841ec5a9b21c7a7a93b3e",
      "filename": "gdb/python/py-infthread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-infthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-infthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infthread.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -408,7 +408,7 @@ PyTypeObject thread_object_type =\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB thread object\",\t\t  /* tp_doc */\n   0,\t\t\t\t  /* tp_traverse */\n   0,\t\t\t\t  /* tp_clear */"
    },
    {
      "sha": "071341f6cebf3ffa024a2023276c2ca4fddad7eb",
      "filename": "gdb/python/py-linetable.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-linetable.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-linetable.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-linetable.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -531,7 +531,7 @@ PyTypeObject ltpy_iterator_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB line table iterator object\",\t      /*tp_doc */\n   0,\t\t\t\t  /*tp_traverse */\n   0,\t\t\t\t  /*tp_clear */"
    },
    {
      "sha": "df0ba764b46d9bc61a117b1913b48fc783a1670a",
      "filename": "gdb/python/py-registers.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-registers.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-registers.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-registers.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -497,7 +497,7 @@ PyTypeObject register_descriptor_iterator_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,\t\t\t/*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB architecture register descriptor iterator object\",\t/*tp_doc */\n   0,\t\t\t\t  /*tp_traverse */\n   0,\t\t\t\t  /*tp_clear */\n@@ -567,7 +567,7 @@ PyTypeObject reggroup_iterator_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,\t/*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB register groups iterator object\",\t/*tp_doc */\n   0,\t\t\t\t  /*tp_traverse */\n   0,\t\t\t\t  /*tp_clear */"
    },
    {
      "sha": "d82bdf849579e322ab69531126bb99399a8202d7",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -1633,7 +1633,7 @@ PyTypeObject type_object_type =\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB type object\",\t\t  /* tp_doc */\n   0,\t\t\t\t  /* tp_traverse */\n   0,\t\t\t\t  /* tp_clear */\n@@ -1682,7 +1682,7 @@ PyTypeObject field_object_type =\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB field object\",\t\t  /* tp_doc */\n   0,\t\t\t\t  /* tp_traverse */\n   0,\t\t\t\t  /* tp_clear */\n@@ -1723,7 +1723,7 @@ PyTypeObject type_iterator_object_type = {\n   0,\t\t\t\t  /*tp_getattro*/\n   0,\t\t\t\t  /*tp_setattro*/\n   0,\t\t\t\t  /*tp_as_buffer*/\n-  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_ITER,  /*tp_flags*/\n+  Py_TPFLAGS_DEFAULT,\t\t  /*tp_flags*/\n   \"GDB type iterator object\",\t  /*tp_doc */\n   0,\t\t\t\t  /*tp_traverse */\n   0,\t\t\t\t  /*tp_clear */"
    },
    {
      "sha": "368681b797cb146a73658c9fac5352ba17c537f5",
      "filename": "gdb/python/python-internal.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/python-internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b233e34c801eac78a5e03b66f18585cf368e4d5/gdb/python/python-internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python-internal.h?ref=0b233e34c801eac78a5e03b66f18585cf368e4d5",
      "patch": "@@ -92,7 +92,6 @@\n #endif\n \n #ifdef IS_PY3K\n-#define Py_TPFLAGS_HAVE_ITER 0\n #define Py_TPFLAGS_CHECKTYPES 0\n \n #define PyInt_Check PyLong_Check"
    }
  ]
}