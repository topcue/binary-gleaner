{
  "sha": "aa0380cc7ef6844158408ea5892ccede177d5be9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWEwMzgwY2M3ZWY2ODQ0MTU4NDA4ZWE1ODkyY2NlZGUxNzdkNWJlOQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-09-09T01:26:14Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-09-09T01:32:34Z"
    },
    "message": "sim: microblaze: replace custom basic types with common ones\n\nThe basic \"byte\" type conflicts with Windows headers, and we already\nhave common types that provide the right sizes.  So replace these with\nthe common ones to avoid issues.\n\n  CC     dv-sockser.o\nIn file included from /usr/i686-w64-mingw32/usr/include/wtypes.h:8,\n                 from /usr/i686-w64-mingw32/usr/include/winscard.h:10,\n                 from /usr/i686-w64-mingw32/usr/include/windows.h:97,\n                 from /usr/i686-w64-mingw32/usr/include/winsock2.h:23,\n                 from ../../gnulib/import/sys/socket.h:684,\n                 from ../../gnulib/import/netinet/in.h:43,\n                 from .../build/sim/../../../sim/microblaze/../common/dv-sockser.c:39:\n/usr/i686-w64-mingw32/usr/include/rpcndr.h:63:25: error: conflicting types for 'byte'; have 'unsigned char'\n   63 |   typedef unsigned char byte;\n      |                         ^~~~\nIn file included from .../buildsim/../../../sim/microblaze/sim-main.h:21,\n                 from .../buildsim/../../../sim/microblaze/../common/dv-sockser.c:24:\n.../buildsim/../../../sim/microblaze/microblaze.h:94:25: note: previous declaration of 'byte' with type 'byte' {aka 'char'}\n   94 | typedef char            byte;\n      |                         ^~~~\nmake: *** [Makefile:513: dv-sockser.o] Error 1",
    "tree": {
      "sha": "89b2f6400f9fdb453d238f673baa096030e7aec0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89b2f6400f9fdb453d238f673baa096030e7aec0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa0380cc7ef6844158408ea5892ccede177d5be9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa0380cc7ef6844158408ea5892ccede177d5be9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa0380cc7ef6844158408ea5892ccede177d5be9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa0380cc7ef6844158408ea5892ccede177d5be9/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c7dee84894df6231bb7fce34cf36242c34d7f891",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7dee84894df6231bb7fce34cf36242c34d7f891",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c7dee84894df6231bb7fce34cf36242c34d7f891"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 26,
    "deletions": 33
  },
  "files": [
    {
      "sha": "d2bd9e907e26014fe51205fa770e2f39a85bf15b",
      "filename": "sim/microblaze/interp.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/interp.c?ref=aa0380cc7ef6844158408ea5892ccede177d5be9",
      "patch": "@@ -121,19 +121,19 @@ sim_engine_run (SIM_DESC sd,\n {\n   SIM_CPU *cpu = STATE_CPU (sd, 0);\n   int needfetch;\n-  word inst;\n+  signed_4 inst;\n   enum microblaze_instr op;\n   int memops;\n   int bonus_cycles;\n   int insts;\n   int w;\n   int cycs;\n-  word WLhash;\n-  ubyte carry;\n+  signed_4 WLhash;\n+  unsigned_1 carry;\n   bool imm_unsigned;\n   short ra, rb, rd;\n   long immword;\n-  uword oldpc, newpc;\n+  unsigned_4 oldpc, newpc;\n   short delay_slot_enable;\n   short branch_taken;\n   short num_delay_slot; /* UNUSED except as reqd parameter */"
    },
    {
      "sha": "2e1ddd32ca619dee8bdbf8d7cc2562c3dcd2d172",
      "filename": "sim/microblaze/microblaze.h",
      "status": "modified",
      "additions": 6,
      "deletions": 13,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/microblaze.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/microblaze.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/microblaze.h?ref=aa0380cc7ef6844158408ea5892ccede177d5be9",
      "patch": "@@ -39,7 +39,7 @@\n #define IMM_ENABLE CPU.imm_enable\n \n #define IMM             (IMM_ENABLE ?\t\t\t\t\t\\\n-                         (((uhalf)IMM_H << 16) | (uhalf)IMM_L) :\t\\\n+                         (((unsigned_2)IMM_H << 16) | (unsigned_2)IMM_L) :\t\\\n                          (imm_unsigned ?\t\t\t\t\\\n \t\t\t  (0xFFFF & IMM_L) :\t\t\t\t\\\n                           (IMM_L & 0x8000 ?                             \\\n@@ -55,9 +55,9 @@\n #define MEM_RD_BYTE(X)\tsim_core_read_1 (cpu, 0, read_map, X)\n #define MEM_RD_HALF(X)\tsim_core_read_2 (cpu, 0, read_map, X)\n #define MEM_RD_WORD(X)\tsim_core_read_4 (cpu, 0, read_map, X)\n-#define MEM_RD_UBYTE(X) (ubyte) MEM_RD_BYTE(X)\n-#define MEM_RD_UHALF(X) (uhalf) MEM_RD_HALF(X)\n-#define MEM_RD_UWORD(X) (uword) MEM_RD_WORD(X)\n+#define MEM_RD_UBYTE(X) (unsigned_1) MEM_RD_BYTE(X)\n+#define MEM_RD_UHALF(X) (unsigned_2) MEM_RD_HALF(X)\n+#define MEM_RD_UWORD(X) (unsigned_4) MEM_RD_WORD(X)\n \n #define MEM_WR_BYTE(X, D) sim_core_write_1 (cpu, 0, write_map, X, D)\n #define MEM_WR_HALF(X, D) sim_core_write_2 (cpu, 0, write_map, X, D)\n@@ -72,9 +72,9 @@\n #define C_rd\t\t((MSR & 0x4) >> 2)\n #define C_wr(D)\t\tMSR = (D ? MSR | 0x80000004 : MSR & 0x7FFFFFFB)\n \n-#define C_calc(X, Y, C)\t((((uword)Y == MAX_WORD) && (C == 1)) ?\t\t \\\n+#define C_calc(X, Y, C)\t((((unsigned_4)Y == MAX_WORD) && (C == 1)) ?\t\t \\\n \t\t\t 1 :\t\t\t\t\t\t \\\n-\t\t\t ((MAX_WORD - (uword)X) < ((uword)Y + C)))\n+\t\t\t ((MAX_WORD - (unsigned_4)X) < ((unsigned_4)Y + C)))\n \n #define BIP_MASK\t0x00000008\n #define CARRY_MASK\t0x00000004\n@@ -91,12 +91,5 @@\n #define MAX_WORD\t0xFFFFFFFF\n #define MICROBLAZE_HALT_INST  0xb8000000\n \n-typedef char\t\tbyte;\n-typedef short\t\thalf;\n-typedef int\t\tword;\n-typedef unsigned char\tubyte;\n-typedef unsigned short\tuhalf;\n-typedef unsigned int\tuword;\n-\n #endif /* MICROBLAZE_H */\n "
    },
    {
      "sha": "c811dce01194b12649ae43d8193d06425fa964bd",
      "filename": "sim/microblaze/microblaze.isa",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/microblaze.isa",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/microblaze.isa",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/microblaze.isa?ref=aa0380cc7ef6844158408ea5892ccede177d5be9",
      "patch": "@@ -171,31 +171,31 @@ INSTRUCTION(mul,\n INSTRUCTION(bsrl,\n \t    0x11,\n \t    INST_TYPE_RD_RA_RB,\n-\t    RD = (uword)RA >> RB;\n+\t    RD = (unsigned_4)RA >> RB;\n \t    PC += INST_SIZE)\n \n INSTRUCTION(bsra,\n \t    0x11,\n \t    INST_TYPE_RD_RA_RB,\n-\t    RD = (word)RA >> RB;\n+\t    RD = (signed_4)RA >> RB;\n \t    PC += INST_SIZE)\n \n INSTRUCTION(bsll,\n \t    0x11,\n \t    INST_TYPE_RD_RA_RB,\n-\t    RD = (uword)RA << RB;\n+\t    RD = (unsigned_4)RA << RB;\n \t    PC += INST_SIZE)\n \n INSTRUCTION(idiv,\n \t    0x12,\n \t    INST_TYPE_RD_RA_RB,\n-\t    RD = (word) RB / (word) RA;\n+\t    RD = (signed_4) RB / (signed_4) RA;\n \t    PC += INST_SIZE)\n \n INSTRUCTION(idivu,\n \t    0x12,\n \t    INST_TYPE_RD_RA_RB,\n-\t    RD = (uword) RB / (uword) RA;\n+\t    RD = (unsigned_4) RB / (unsigned_4) RA;\n \t    PC += INST_SIZE)\n \n INSTRUCTION(muli,\n@@ -207,19 +207,19 @@ INSTRUCTION(muli,\n INSTRUCTION(bsrli,\n \t    0x19,\n \t    INST_TYPE_RD_RA_IMM5,\n-\t    RD = (uword)RA >> (IMM & 0x1F);\n+\t    RD = (unsigned_4)RA >> (IMM & 0x1F);\n \t    PC += INST_SIZE)\n \n INSTRUCTION(bsrai,\n \t    0x19,\n \t    INST_TYPE_RD_RA_IMM5,\n-\t    RD = (word)RA >> (IMM & 0x1F);\n+\t    RD = (signed_4)RA >> (IMM & 0x1F);\n \t    PC += INST_SIZE)\n \n INSTRUCTION(bslli,\n \t    0x19,\n \t    INST_TYPE_RD_RA_IMM5,\n-\t    RD = (uword)RA << (IMM & 0x1F);\n+\t    RD = (unsigned_4)RA << (IMM & 0x1F);\n \t    PC += INST_SIZE)\n \n INSTRUCTION(get,\n@@ -298,15 +298,15 @@ INSTRUCTION(src,\n \t    0x24,\n             INST_TYPE_RD_RA,\n \t    CARRY = (RA & 0x1);\n-            RD = ((((int) (RA >> 1)) & 0x7FFFFFFF) | (uword)(C_rd << 31));\n+            RD = ((((int) (RA >> 1)) & 0x7FFFFFFF) | (unsigned_4)(C_rd << 31));\n             C_wr(CARRY);\n \t    PC += INST_SIZE)\n \n INSTRUCTION(srl,\n \t    0x24,\n             INST_TYPE_RD_RA,\n             CARRY = (RA & 0x1);\n-\t    RD = (uword) ((RA >> 1) & 0x7FFFFFFF);\n+\t    RD = (unsigned_4) ((RA >> 1) & 0x7FFFFFFF);\n             C_wr(CARRY);\n \t    PC += INST_SIZE)\n "
    },
    {
      "sha": "cc301473ca23c55b1126bfaf14d958788507ba9a",
      "filename": "sim/microblaze/sim-main.h",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa0380cc7ef6844158408ea5892ccede177d5be9/sim/microblaze/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/sim-main.h?ref=aa0380cc7ef6844158408ea5892ccede177d5be9",
      "patch": "@@ -35,12 +35,12 @@\n    gdb/config/microblaze/tm-microblaze.h file in the REGISTER_NAMES macro.  */\n  struct microblaze_regset\n {\n-  word\t          regs[32];\t\t/* primary registers */\n-  word\t          spregs[2];\t\t/* pc + msr */\n-  int\t\t  cycles;\n-  int\t\t  insts;\n-  ubyte           imm_enable;\n-  half            imm_high;\n+  signed_4\tregs[32];\t\t/* primary registers */\n+  signed_4\tspregs[2];\t\t/* pc + msr */\n+  int\t\tcycles;\n+  int\t\tinsts;\n+  unsigned_1\timm_enable;\n+  signed_2\timm_high;\n };\n \n struct _sim_cpu {"
    }
  ]
}