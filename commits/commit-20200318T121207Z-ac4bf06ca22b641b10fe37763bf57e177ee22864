{
  "sha": "ac4bf06ca22b641b10fe37763bf57e177ee22864",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWM0YmYwNmNhMjJiNjQxYjEwZmUzNzc2M2JmNTdlMTc3ZWUyMjg2NA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-18T12:12:07Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-18T12:12:07Z"
    },
    "message": "Fix seg-fault in strip when copying a file containing corrupt secondary relocs.\n\n\tPR 25673\n\t* elf.c (_bfd_elf_write_secondary_reloc_section): Fix illegal\n\tmemory access when processing a corrupt secondary reloc section.",
    "tree": {
      "sha": "933fb96cda97d524f3f99982803edd1c69cdc26f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/933fb96cda97d524f3f99982803edd1c69cdc26f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ac4bf06ca22b641b10fe37763bf57e177ee22864",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac4bf06ca22b641b10fe37763bf57e177ee22864",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ac4bf06ca22b641b10fe37763bf57e177ee22864",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ac4bf06ca22b641b10fe37763bf57e177ee22864/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "53215f214c61b850085196a8d69774eed026ecd9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53215f214c61b850085196a8d69774eed026ecd9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/53215f214c61b850085196a8d69774eed026ecd9"
    }
  ],
  "stats": {
    "total": 137,
    "additions": 97,
    "deletions": 40
  },
  "files": [
    {
      "sha": "a3f731349e2e984181af85dd0218b2fa384be5f4",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac4bf06ca22b641b10fe37763bf57e177ee22864/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac4bf06ca22b641b10fe37763bf57e177ee22864/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=ac4bf06ca22b641b10fe37763bf57e177ee22864",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25673\n+\t* elf.c (_bfd_elf_write_secondary_reloc_section): Fix illegal\n+\tmemory access when processing a corrupt secondary reloc section.\n+\n 2020-03-18  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* elf32-arm.c (arm_build_one_stub): Emit a fatal error message"
    },
    {
      "sha": "d182387ed4be6a1d1cb2bbe62d4cfaef5d84600e",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 91,
      "deletions": 40,
      "changes": 131,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ac4bf06ca22b641b10fe37763bf57e177ee22864/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ac4bf06ca22b641b10fe37763bf57e177ee22864/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=ac4bf06ca22b641b10fe37763bf57e177ee22864",
      "patch": "@@ -12637,6 +12637,10 @@ _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)\n   bfd_vma addr_offset;\n   asection * relsec;\n   bfd_vma (*r_info) (bfd_vma, bfd_vma);\n+  bfd_boolean result = TRUE;\n+\n+  if (sec == NULL)\n+    return FALSE;\n \n #if BFD_DEFAULT_TARGET_SIZE > 32\n   if (bfd_arch_bits_per_address (abfd) != 32)\n@@ -12645,9 +12649,6 @@ _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)\n #endif\n     r_info = elf32_r_info;\n \n-  if (sec == NULL)\n-    return FALSE;\n-\n   /* The address of an ELF reloc is section relative for an object\n      file, and absolute for an executable file or shared library.\n      The address of a BFD reloc is always section relative.  */\n@@ -12672,10 +12673,28 @@ _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)\n \t  arelent *    src_irel;\n \t  bfd_byte *   dst_rela;\n \n-\t  BFD_ASSERT (hdr->contents == NULL);\n+\t  if (hdr->contents != NULL)\n+\t    {\n+\t      _bfd_error_handler\n+\t\t/* xgettext:c-format */\n+\t\t(_(\"%pB(%pA): error: secondary reloc section processed twice\"),\n+\t\t abfd, relsec);\n+\t      bfd_set_error (bfd_error_bad_value);\n+\t      result = FALSE;\n+\t      continue;\n+\t    }\n \n \t  reloc_count = hdr->sh_size / hdr->sh_entsize;\n-\t  BFD_ASSERT (reloc_count > 0);\n+\t  if (reloc_count <= 0)\n+\t    {\n+\t      _bfd_error_handler\n+\t\t/* xgettext:c-format */\n+\t\t(_(\"%pB(%pA): error: secondary reloc section is empty!\"),\n+\t\t abfd, relsec);\n+\t      bfd_set_error (bfd_error_bad_value);\n+\t      result = FALSE;\n+\t      continue;\n+\t    }\n \n \t  hdr->contents = bfd_alloc (abfd, hdr->sh_size);\n \t  if (hdr->contents == NULL)\n@@ -12689,7 +12708,16 @@ _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)\n \t  last_sym_idx = 0;\n \t  dst_rela = hdr->contents;\n \t  src_irel = (arelent *) esd->sec_info;\n-\t  BFD_ASSERT (src_irel != NULL);\n+\t  if (src_irel == NULL)\n+\t    {\n+\t      _bfd_error_handler\n+\t\t/* xgettext:c-format */\n+\t\t(_(\"%pB(%pA): error: internal relocs missing for secondary reloc section\"),\n+\t\t abfd, relsec);\n+\t      bfd_set_error (bfd_error_bad_value);\n+\t      result = FALSE;\n+\t      continue;\n+\t    }\n \n \t  for (idx = 0; idx < reloc_count; idx++, dst_rela += hdr->sh_entsize)\n \t    {\n@@ -12699,55 +12727,78 @@ _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)\n \t      int n;\n \n \t      ptr = src_irel + idx;\n-\t      sym = *ptr->sym_ptr_ptr;\n+\t      if (ptr == NULL)\n+\t\t{\n+\t\t  _bfd_error_handler\n+\t\t    /* xgettext:c-format */\n+\t\t    (_(\"%pB(%pA): error: reloc table entry %u is empty\"),\n+\t\t     abfd, relsec, idx);\n+\t\t  bfd_set_error (bfd_error_bad_value);\n+\t\t  result = FALSE;\n+\t\t  break;\n+\t\t}\n \n-\t      if (sym == last_sym)\n-\t\tn = last_sym_idx;\n+\t      if (ptr->sym_ptr_ptr == NULL)\n+\t\t{\n+\t\t  /* FIXME: Is this an error ? */\n+\t\t  n = 0;\n+\t\t}\n \t      else\n \t\t{\n-\t\t  last_sym = sym;\n-\t\t  n = _bfd_elf_symbol_from_bfd_symbol (abfd, & sym);\n-\t\t  if (n < 0)\n+\t\t  sym = *ptr->sym_ptr_ptr;\n+\n+\t\t  if (sym == last_sym)\n+\t\t    n = last_sym_idx;\n+\t\t  else\n \t\t    {\n-#if DEBUG_SECONDARY_RELOCS\n-\t\t      fprintf (stderr, \"failed to find symbol %s whilst rewriting relocs\\n\",\n-\t\t\t       sym->name);\n-#endif\n-\t\t      /* FIXME: Signal failure somehow.  */\n-\t\t      n = 0;\n+\t\t      n = _bfd_elf_symbol_from_bfd_symbol (abfd, & sym);\n+\t\t      if (n < 0)\n+\t\t\t{\n+\t\t\t  _bfd_error_handler\n+\t\t\t    /* xgettext:c-format */\n+\t\t\t    (_(\"%pB(%pA): error: secondary reloc %u references a missing symbol\"),\n+\t\t\t     abfd, relsec, idx);\n+\t\t\t  bfd_set_error (bfd_error_bad_value);\n+\t\t\t  result = FALSE;\n+\t\t\t  n = 0;\n+\t\t\t}\n+\n+\t\t      last_sym = sym;\n+\t\t      last_sym_idx = n;\n \t\t    }\n-\t\t  last_sym_idx = n;\n-\t\t}\n \n-\t      if ((*ptr->sym_ptr_ptr)->the_bfd != NULL\n-\t\t  && (*ptr->sym_ptr_ptr)->the_bfd->xvec != abfd->xvec\n-\t\t  && ! _bfd_elf_validate_reloc (abfd, ptr))\n-\t\t{\n-#if DEBUG_SECONDARY_RELOCS\n-\t\t  fprintf (stderr, \"symbol %s is not in the output bfd\\n\",\n-\t\t\t   sym->name);\n-#endif\n-\t\t  /* FIXME: Signal failure somehow.  */\n-\t\t  n = 0;\n+\t\t  if (sym->the_bfd != NULL\n+\t\t      && sym->the_bfd->xvec != abfd->xvec\n+\t\t      && ! _bfd_elf_validate_reloc (abfd, ptr))\n+\t\t    {\n+\t\t      _bfd_error_handler\n+\t\t\t/* xgettext:c-format */\n+\t\t\t(_(\"%pB(%pA): error: secondary reloc %u references a deleted symbol\"),\n+\t\t\t abfd, relsec, idx);\n+\t\t      bfd_set_error (bfd_error_bad_value);\n+\t\t      result = FALSE;\n+\t\t      n = 0;\n+\t\t    }\n \t\t}\n \n+\t      src_rela.r_offset = ptr->address + addr_offset;\n \t      if (ptr->howto == NULL)\n \t\t{\n-#if DEBUG_SECONDARY_RELOCS\n-\t\t  fprintf (stderr, \"reloc for symbol %s does not have a howto associated with it\\n\",\n-\t\t\t   sym->name);\n-#endif\n-\t\t  /* FIXME: Signal failure somehow.  */\n-\t\t  n = 0;\n+\t\t  _bfd_error_handler\n+\t\t    /* xgettext:c-format */\n+\t\t    (_(\"%pB(%pA): error: secondary reloc %u is of an unknown type\"),\n+\t\t     abfd, relsec, idx);\n+\t\t  bfd_set_error (bfd_error_bad_value);\n+\t\t  result = FALSE;\n+\t\t  src_rela.r_info = r_info (0, 0);\n \t\t}\n-\n-\t      src_rela.r_offset = ptr->address + addr_offset;\n-\t      src_rela.r_info = r_info (n, ptr->howto->type);\n+\t      else\n+\t\tsrc_rela.r_info = r_info (n, ptr->howto->type);\n \t      src_rela.r_addend = ptr->addend;\n \t      ebd->s->swap_reloca_out (abfd, &src_rela, dst_rela);\n \t    }\n \t}\n     }\n \n-  return TRUE;\n+  return result;\n }"
    }
  ]
}