{
  "sha": "6e3fd7e948d158a04c0af7130e6648ad75aaba66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmUzZmQ3ZTk0OGQxNThhMDRjMGFmNzEzMGU2NjQ4YWQ3NWFhYmE2Ng==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:56Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:09Z"
    },
    "message": "gdbserver: turn target op 'get_tls_address' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's get_tls_address op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.  Also add\n\t'supports_get_tls_address'.\n\t* target.cc (process_target::get_tls_address): Define.\n\t(process_target::supports_get_tls_address): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* server.cc (handle_query): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_process_target::supports_get_tls_address): Define.\n\t(linux_process_target::get_tls_address): Define.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t* win32-low.cc (win32_target_ops): Update.",
    "tree": {
      "sha": "cc8d41ef8c8b428c99f62ba37997117eeb19bb33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc8d41ef8c8b428c99f62ba37997117eeb19bb33"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6e3fd7e948d158a04c0af7130e6648ad75aaba66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6e3fd7e948d158a04c0af7130e6648ad75aaba66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6e3fd7e948d158a04c0af7130e6648ad75aaba66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6e3fd7e948d158a04c0af7130e6648ad75aaba66/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5203ae1e870191ef058c1b4590f9b9fbf6b594ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5203ae1e870191ef058c1b4590f9b9fbf6b594ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5203ae1e870191ef058c1b4590f9b9fbf6b594ed"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 77,
    "deletions": 20
  },
  "files": [
    {
      "sha": "8b1d55cf4b1fb61dcb85e9801e4b98dd49a7238c",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -1,3 +1,25 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's get_tls_address op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.  Also add\n+\t'supports_get_tls_address'.\n+\t* target.cc (process_target::get_tls_address): Define.\n+\t(process_target::supports_get_tls_address): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* server.cc (handle_query): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_process_target::supports_get_tls_address): Define.\n+\t(linux_process_target::get_tls_address): Define.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's read_offsets op into a method of"
    },
    {
      "sha": "ee5a6c027122cfbbe1fb2d0aafe2e3c8d6d428ca",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 23,
      "deletions": 5,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -6123,6 +6123,29 @@ linux_process_target::read_offsets (CORE_ADDR *text_p, CORE_ADDR *data_p)\n #endif\n }\n \n+bool\n+linux_process_target::supports_get_tls_address ()\n+{\n+#ifdef USE_THREAD_DB\n+  return true;\n+#else\n+  return false;\n+#endif\n+}\n+\n+int\n+linux_process_target::get_tls_address (thread_info *thread,\n+\t\t\t\t       CORE_ADDR offset,\n+\t\t\t\t       CORE_ADDR load_module,\n+\t\t\t\t       CORE_ADDR *address)\n+{\n+#ifdef USE_THREAD_DB\n+  return thread_db_get_tls_address (thread, offset, load_module, address);\n+#else\n+  return -1;\n+#endif\n+}\n+\n static int\n linux_qxfer_osdata (const char *annex,\n \t\t    unsigned char *readbuf, unsigned const char *writebuf,\n@@ -7392,11 +7415,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-#ifdef USE_THREAD_DB\n-  thread_db_get_tls_address,\n-#else\n-  NULL,\n-#endif\n   hostio_last_error_from_errno,\n   linux_qxfer_osdata,\n   linux_xfer_siginfo,"
    },
    {
      "sha": "3c2fdaf8fc345d874114cdc536782a3a876938df",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -340,6 +340,11 @@ class linux_process_target : public process_target\n   bool supports_read_offsets () override;\n \n   int read_offsets (CORE_ADDR *text, CORE_ADDR *data) override;\n+\n+  bool supports_get_tls_address () override;\n+\n+  int get_tls_address (thread_info *thread, CORE_ADDR offset,\n+\t\t       CORE_ADDR load_module, CORE_ADDR *address) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "f0d0d4456c47815d442ea26015463cd2b6956ee8",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -735,7 +735,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* get_tls_address */\n   NULL,  /* hostio_last_error */\n   NULL,  /* qxfer_osdata */\n   NULL,  /* qxfer_siginfo */"
    },
    {
      "sha": "b9e7ed06337d81dac82a957684d2b124f67c1240",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -956,7 +956,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  NULL, /* thread_db_set_tls_address */\n   hostio_last_error_from_errno,\n   NULL, /* nto_qxfer_osdata */\n   NULL, /* xfer_siginfo */"
    },
    {
      "sha": "01d41af0f89cc60168853e0151c086e9e0a918ee",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -2467,7 +2467,7 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n     }\n \n   /* Thread-local storage support.  */\n-  if (the_target->get_tls_address != NULL\n+  if (the_target->pt->supports_get_tls_address ()\n       && startswith (own_buf, \"qGetTLSAddr:\"))\n     {\n       char *p = own_buf + 12;\n@@ -2513,8 +2513,8 @@ handle_query (char *own_buf, int packet_len, int *new_packet_len_p)\n \t  if (thread == NULL)\n \t    err = 2;\n \t  else\n-\t    err = the_target->get_tls_address (thread, parts[0], parts[1],\n-\t\t\t\t\t       &address);\n+\t    err = the_target->pt->get_tls_address (thread, parts[0], parts[1],\n+\t\t\t\t\t\t   &address);\n \t}\n \n       if (err == 0)"
    },
    {
      "sha": "f578dbea0da07b83184911c5a037e1d0a4725b39",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -493,3 +493,16 @@ process_target::read_offsets (CORE_ADDR *text, CORE_ADDR *data)\n {\n   gdb_assert_not_reached (\"target op read_offsets not supported\");\n }\n+\n+bool\n+process_target::supports_get_tls_address ()\n+{\n+  return false;\n+}\n+\n+int\n+process_target::get_tls_address (thread_info *thread, CORE_ADDR offset,\n+\t\t\t\t CORE_ADDR load_module, CORE_ADDR *address)\n+{\n+  gdb_assert_not_reached (\"target op get_tls_address not supported\");\n+}"
    },
    {
      "sha": "2c818b3fb124b171b82c124a975674cfde4ee43f",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 11,
      "deletions": 9,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -70,15 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Fetch the address associated with a specific thread local storage\n-     area, determined by the specified THREAD, OFFSET, and LOAD_MODULE.\n-     Stores it in *ADDRESS and returns zero on success; otherwise returns\n-     an error code.  A return value of -1 means this system does not\n-     support the operation.  */\n-\n-  int (*get_tls_address) (struct thread_info *thread, CORE_ADDR offset,\n-\t\t\t  CORE_ADDR load_module, CORE_ADDR *address);\n-\n   /* Fill BUF with an hostio error packet representing the last hostio\n      error.  */\n   void (*hostio_last_error) (char *buf);\n@@ -477,6 +468,17 @@ class process_target\n      needed for uclinux where the executable is relocated during load\n      time.  */\n   virtual int read_offsets (CORE_ADDR *text, CORE_ADDR *data);\n+\n+  /* Return true if the get_tls_address target op is supported.  */\n+  virtual bool supports_get_tls_address ();\n+\n+  /* Fetch the address associated with a specific thread local storage\n+     area, determined by the specified THREAD, OFFSET, and LOAD_MODULE.\n+     Stores it in *ADDRESS and returns zero on success; otherwise returns\n+     an error code.  A return value of -1 means this system does not\n+     support the operation.  */\n+  virtual int get_tls_address (thread_info *thread, CORE_ADDR offset,\n+\t\t\t       CORE_ADDR load_module, CORE_ADDR *address);\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "84223e129bfd909e650c77a64903670ed0c52709",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6e3fd7e948d158a04c0af7130e6648ad75aaba66/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=6e3fd7e948d158a04c0af7130e6648ad75aaba66",
      "patch": "@@ -1844,7 +1844,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  NULL, /* get_tls_address */\n #ifdef _WIN32_WCE\n   wince_hostio_last_error,\n #else"
    }
  ]
}