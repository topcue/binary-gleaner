{
  "sha": "f1fdc960664c24d911d6189b94e5c054b4bb9053",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjFmZGM5NjA2NjRjMjRkOTExZDYxODliOTRlNWMwNTRiNGJiOTA1Mw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-17T00:37:20Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-30T09:36:56Z"
    },
    "message": "gdb/fortran: Update rules for printing whitespace in types\n\nThe whitespace produced as types are printed seems inconsistent.  This\ncommit updates the rules in an attempt to make whitespace more\nbalanced and consistent.  Expected results are updated.\n\ngdb/ChangeLog:\n\n\t* f-typeprint.c (f_print_type): Update rules for printing\n\twhitespace.\n\t(f_type_print_varspec_suffix): Likewise.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/ptr-indentation.exp: Update expected results.\n\t* gdb.fortran/ptype-on-functions.exp: Likewise.\n\t* gdb.fortran/vla-ptr-info.exp: Likewise.\n\t* gdb.fortran/vla-value.exp: Likewise.",
    "tree": {
      "sha": "d561d6e01f2adc4d032f35157eca9831f11c4357",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d561d6e01f2adc4d032f35157eca9831f11c4357"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f1fdc960664c24d911d6189b94e5c054b4bb9053",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1fdc960664c24d911d6189b94e5c054b4bb9053",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f1fdc960664c24d911d6189b94e5c054b4bb9053",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1fdc960664c24d911d6189b94e5c054b4bb9053/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bf7a4de1722a63c8b017d010e75d5e9e5e622f36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf7a4de1722a63c8b017d010e75d5e9e5e622f36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bf7a4de1722a63c8b017d010e75d5e9e5e622f36"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 34,
    "deletions": 14
  },
  "files": [
    {
      "sha": "fcc784c4678a7443d325d253ec976d976e59e52b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-typeprint.c (f_print_type): Update rules for printing\n+\twhitespace.\n+\t(f_type_print_varspec_suffix): Likewise.\n+\n 2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \t    Chris January  <chris.january@arm.com>\n "
    },
    {
      "sha": "66a450a65c7f3dfa4c7629539319a848fb841181",
      "filename": "gdb/f-typeprint.c",
      "status": "modified",
      "additions": 14,
      "deletions": 7,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/f-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/f-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-typeprint.c?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -68,13 +68,20 @@ f_print_type (struct type *type, const char *varstring, struct ui_file *stream,\n   f_type_print_base (type, stream, show, level);\n   code = TYPE_CODE (type);\n   if ((varstring != NULL && *varstring != '\\0')\n-  /* Need a space if going to print stars or brackets;\n-     but not if we will print just a type name.  */\n-      || ((show > 0 || TYPE_NAME (type) == 0)\n-          && (code == TYPE_CODE_PTR || code == TYPE_CODE_FUNC\n+      /* Need a space if going to print stars or brackets; but not if we\n+\t will print just a type name.  */\n+      || ((show > 0\n+\t   || TYPE_NAME (type) == 0)\n+          && (code == TYPE_CODE_FUNC\n \t      || code == TYPE_CODE_METHOD\n \t      || code == TYPE_CODE_ARRAY\n-\t      || code == TYPE_CODE_REF)))\n+\t      || ((code == TYPE_CODE_PTR\n+\t\t   || code == TYPE_CODE_REF)\n+\t\t  && (TYPE_CODE (TYPE_TARGET_TYPE (type)) == TYPE_CODE_FUNC\n+\t\t      || (TYPE_CODE (TYPE_TARGET_TYPE (type))\n+\t\t\t  == TYPE_CODE_METHOD)\n+\t\t      || (TYPE_CODE (TYPE_TARGET_TYPE (type))\n+\t\t\t  == TYPE_CODE_ARRAY))))))\n     fputs_filtered (\" \", stream);\n   f_type_print_varspec_prefix (type, stream, show, 0);\n \n@@ -222,7 +229,7 @@ f_type_print_varspec_suffix (struct type *type, struct ui_file *stream,\n     case TYPE_CODE_REF:\n       f_type_print_varspec_suffix (TYPE_TARGET_TYPE (type), stream, 0, 1, 0,\n \t\t\t\t   arrayprint_recurse_level);\n-      fprintf_filtered (stream, \")\");\n+      fprintf_filtered (stream, \" )\");\n       break;\n \n     case TYPE_CODE_FUNC:\n@@ -232,7 +239,7 @@ f_type_print_varspec_suffix (struct type *type, struct ui_file *stream,\n \tf_type_print_varspec_suffix (TYPE_TARGET_TYPE (type), stream, 0,\n \t\t\t\t     passed_a_ptr, 0, arrayprint_recurse_level);\n \tif (passed_a_ptr)\n-\t  fprintf_filtered (stream, \")\");\n+\t  fprintf_filtered (stream, \") \");\n \tfprintf_filtered (stream, \"(\");\n \tif (nfields == 0 && TYPE_PROTOTYPED (type))\n \t  f_print_type (builtin_f_type (get_type_arch (type))->builtin_void,"
    },
    {
      "sha": "636d36d6044732228d6a374d78fc6e9cf5043fe3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/ptr-indentation.exp: Update expected results.\n+\t* gdb.fortran/ptype-on-functions.exp: Likewise.\n+\t* gdb.fortran/vla-ptr-info.exp: Likewise.\n+\t* gdb.fortran/vla-value.exp: Likewise.\n+\n 2019-04-30  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/ptype-on-functions.exp: New file."
    },
    {
      "sha": "0c5d225580201f5a6c037a9eb3478281d781574f",
      "filename": "gdb/testsuite/gdb.fortran/ptr-indentation.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/ptr-indentation.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/ptr-indentation.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/ptr-indentation.exp?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -37,5 +37,5 @@ gdb_continue_to_breakpoint \"BP1\"\n gdb_test \"ptype tinsta\" \\\n   [multi_line \"type = Type tuserdef\" \\\n               \"    $int :: i\" \\\n-              \"    PTR TO -> \\\\( $real :: ptr\\\\)\" \\\n+              \"    PTR TO -> \\\\( $real :: ptr \\\\)\" \\\n               \"End Type tuserdef\"]"
    },
    {
      "sha": "528828663c4aeb85f80d4cb3ac181b21d0967805",
      "filename": "gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/ptype-on-functions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/ptype-on-functions.exp?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -42,4 +42,4 @@ gdb_test \"ptype say_numbers\" \\\n     \"type = void \\\\(integer\\\\(kind=4\\\\), integer\\\\(kind=4\\\\), integer\\\\(kind=4\\\\)\\\\)\"\n \n gdb_test \"ptype fun_ptr\" \\\n-    \"type = PTR TO -> \\\\( integer\\\\(kind=4\\\\) \\\\(\\\\)\\\\(REF TO -> \\\\( integer\\\\(kind=4\\\\) \\\\)\\\\)\\\\)\"\n+    \"type = PTR TO -> \\\\( integer\\\\(kind=4\\\\) \\\\(\\\\) \\\\(REF TO -> \\\\( integer\\\\(kind=4\\\\) \\\\)\\\\) \\\\)\""
    },
    {
      "sha": "6b9625ad9963e2341c7240c3bb45ee5078daf6d3",
      "filename": "gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/vla-ptr-info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-ptr-info.exp?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -28,5 +28,5 @@ if ![runto_main] {\n # Check the status of a pointer to a dynamic array.\n gdb_breakpoint [gdb_get_line_number \"pvla-associated\"]\n gdb_continue_to_breakpoint \"pvla-associated\"\n-gdb_test \"print &pvla\" \" = \\\\(PTR TO -> \\\\( real\\\\(kind=4\\\\) \\\\(10,10,10\\\\)\\\\)\\\\) ${hex}\" \\\n+gdb_test \"print &pvla\" \" = \\\\(PTR TO -> \\\\( real\\\\(kind=4\\\\) \\\\(10,10,10\\\\) \\\\)\\\\) ${hex}\" \\\n   \"print pvla pointer information\""
    },
    {
      "sha": "507137bed2186b748d0c775322004c9800756b9a",
      "filename": "gdb/testsuite/gdb.fortran/vla-value.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/vla-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1fdc960664c24d911d6189b94e5c054b4bb9053/gdb/testsuite/gdb.fortran/vla-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/vla-value.exp?ref=f1fdc960664c24d911d6189b94e5c054b4bb9053",
      "patch": "@@ -35,7 +35,7 @@ gdb_breakpoint [gdb_get_line_number \"vla1-init\"]\n gdb_continue_to_breakpoint \"vla1-init\"\n gdb_test \"print vla1\" \" = <not allocated>\" \"print non-allocated vla1\"\n gdb_test \"print &vla1\" \\\n-  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(<not allocated>\\\\\\)\\\\\\)\\\\\\) $hex\" \\\n+  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(<not allocated>\\\\\\) \\\\\\)\\\\\\) $hex\" \\\n   \"print non-allocated &vla1\"\n gdb_test \"print vla1(1,1,1)\" \"no such vector element \\\\\\(vector not allocated\\\\\\)\" \\\n   \"print member in non-allocated vla1 (1)\"\n@@ -56,7 +56,7 @@ with_timeout_factor 15 {\n \t\"step over value assignment of vla1\"\n }\n gdb_test \"print &vla1\" \\\n-  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(10,10,10\\\\\\)\\\\\\)\\\\\\) $hex\" \\\n+  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(10,10,10\\\\\\) \\\\\\)\\\\\\) $hex\" \\\n   \"print allocated &vla1\"\n gdb_test \"print vla1(3, 6, 9)\" \" = 1311\" \"print allocated vla1(3,6,9)\"\n gdb_test \"print vla1(1, 3, 8)\" \" = 1311\" \"print allocated vla1(1,3,8)\"\n@@ -76,7 +76,7 @@ gdb_test \"print vla1(9, 9, 9)\" \" = 999\" \\\n # Try to access values in undefined pointer to VLA (dangling)\n gdb_test \"print pvla\" \" = <not associated>\" \"print undefined pvla\"\n gdb_test \"print &pvla\" \\\n-  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(<not associated>\\\\\\)\\\\\\)\\\\\\) $hex\" \\\n+  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(<not associated>\\\\\\) \\\\\\)\\\\\\) $hex\" \\\n   \"print non-associated &pvla\"\n gdb_test \"print pvla(1, 3, 8)\" \"no such vector element \\\\\\(vector not associated\\\\\\)\" \\\n   \"print undefined pvla(1,3,8)\"\n@@ -85,7 +85,7 @@ gdb_test \"print pvla(1, 3, 8)\" \"no such vector element \\\\\\(vector not associated\n gdb_breakpoint [gdb_get_line_number \"pvla-associated\"]\n gdb_continue_to_breakpoint \"pvla-associated\"\n gdb_test \"print &pvla\" \\\n-  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(10,10,10\\\\\\)\\\\\\)\\\\\\) $hex\" \\\n+  \" = \\\\\\(PTR TO -> \\\\\\( $real \\\\\\(10,10,10\\\\\\) \\\\\\)\\\\\\) $hex\" \\\n   \"print associated &pvla\"\n gdb_test \"print pvla(3, 6, 9)\" \" = 42\" \"print associated pvla(3,6,9)\"\n gdb_test \"print pvla(1, 3, 8)\" \" = 1001\" \"print associated pvla(1,3,8)\""
    }
  ]
}