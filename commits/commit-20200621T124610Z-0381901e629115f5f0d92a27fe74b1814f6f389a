{
  "sha": "0381901e629115f5f0d92a27fe74b1814f6f389a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM4MTkwMWU2MjkxMTVmNWYwZDkyYTI3ZmU3NGIxODE0ZjZmMzg5YQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-21T04:53:46Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-21T12:46:10Z"
    },
    "message": "Do without ld ENABLE_PLUGINS\n\nInstead, use BFD_SUPPORTS_PLUGINS.\n\n\t* ldfile.c: Replace uses of ENABLE_PLUGINS with BFD_SUPPORTS_PLUGINS.\n\t* ldlang.c: Likewise.\n\t* ldlang.h: Likewise.\n\t* ldlex.h: Likewise.\n\t* ldmain.c: Likewise.\n\t* lexsup.c: Likewise.\n\t* plugin.c: Wrap body of file in #if BFD_SUPPORTS_PLUGINS.\n\t* testplug.c: Likewise.\n\t* testplug2.c: Likewise.\n\t* testplug3.c: Likewise.\n\t* testplug4.c: Likewise.\n\t* configure.ac (ENABLE_PLUGINS): Don't define AM_CONTITIONAL.\n\t* Makefile.am: Remove ENABLE_PLUGINS conditionals.\n\t(PLUGIN_CFLAGS): Don't define.\n\t(PLUGIN_C, PLUGIN_H, PLUGIN_OBJECT): Likewise.  Substitute all\n\tuses with plugin file name.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.",
    "tree": {
      "sha": "70d1c2ebef5f3039131b03ae96d7af9841a77f03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/70d1c2ebef5f3039131b03ae96d7af9841a77f03"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0381901e629115f5f0d92a27fe74b1814f6f389a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0381901e629115f5f0d92a27fe74b1814f6f389a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0381901e629115f5f0d92a27fe74b1814f6f389a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0381901e629115f5f0d92a27fe74b1814f6f389a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "48e9cc84058771da089a2e8e652f70ac20a8fac0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48e9cc84058771da089a2e8e652f70ac20a8fac0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/48e9cc84058771da089a2e8e652f70ac20a8fac0"
    }
  ],
  "stats": {
    "total": 230,
    "additions": 106,
    "deletions": 124
  },
  "files": [
    {
      "sha": "5d460cfefa0951476456b340f9ca4b3dfc38c09b",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -1,3 +1,24 @@\n+2020-06-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* ldfile.c: Replace uses of ENABLE_PLUGINS with BFD_SUPPORTS_PLUGINS.\n+\t* ldlang.c: Likewise.\n+\t* ldlang.h: Likewise.\n+\t* ldlex.h: Likewise.\n+\t* ldmain.c: Likewise.\n+\t* lexsup.c: Likewise.\n+\t* plugin.c: Wrap body of file in #if BFD_SUPPORTS_PLUGINS.\n+\t* testplug.c: Likewise.\n+\t* testplug2.c: Likewise.\n+\t* testplug3.c: Likewise.\n+\t* testplug4.c: Likewise.\n+\t* configure.ac (ENABLE_PLUGINS): Don't define AM_CONTITIONAL.\n+\t* Makefile.am: Remove ENABLE_PLUGINS conditionals.\n+\t(PLUGIN_CFLAGS): Don't define.\n+\t(PLUGIN_C, PLUGIN_H, PLUGIN_OBJECT): Likewise.  Substitute all\n+\tuses with plugin file name.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n 2020-06-20  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/lib/ld-lib.exp (default_ld_compile): Don't perror on"
    },
    {
      "sha": "f0767f2be3dac8f62cf380d5b3242731325fef62",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 5,
      "deletions": 20,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -47,19 +47,6 @@ WARN_CFLAGS = @WARN_CFLAGS@\n NO_WERROR = @NO_WERROR@\n AM_CFLAGS = $(WARN_CFLAGS) $(ELF_CLFAGS)\n \n-# Conditionally enable the plugin interface.\n-if ENABLE_PLUGINS\n-PLUGIN_C = plugin.c\n-PLUGIN_H = plugin.h\n-PLUGIN_OBJECT = plugin.@OBJEXT@\n-PLUGIN_CFLAGS = -DENABLE_PLUGINS\n-else\n-PLUGIN_C =\n-PLUGIN_H =\n-PLUGIN_OBJECT =\n-PLUGIN_CFLAGS =\n-endif\n-\n # We put the scripts in the directory $(scriptdir)/ldscripts.\n # We can't put the scripts in $(datadir) because the SEARCH_DIR\n # directives need to be different for native and cross linkers.\n@@ -152,7 +139,7 @@ TEXI2DVI = texi2dvi -I $(srcdir) -I $(BFDDIR)/doc -I ../bfd/doc \\\n \t\t    -I $(top_srcdir)/../libiberty\n \n AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) @zlibinc@ \\\n-\t@INCINTL@ $(HDEFINES) $(CFLAGS) $(PLUGIN_CFLAGS) \\\n+\t@INCINTL@ $(HDEFINES) $(CFLAGS) \\\n \t-DLOCALEDIR=\"\\\"$(datadir)/locale\\\"\"\n \n BFDLIB = ../bfd/libbfd.la\n@@ -482,12 +469,12 @@ ALL_64_EMUL_EXTRA_OFILES = \\\n CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \\\n \tldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \\\n \tmri.c ldcref.c pe-dll.c pep-dll.c ldlex-wrapper.c \\\n-\t$(PLUGIN_C) ldbuildid.c ldelf.c ldelfgen.c\n+\tplugin.c ldbuildid.c ldelf.c ldelfgen.c\n \n HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \\\n \tldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \\\n \tldwrite.h mri.h deffile.h pe-dll.h pep-dll.h \\\n-\telf-hints-local.h $(PLUGIN_H) ldbuildid.h ldelf.h ldelfgen.h\n+\telf-hints-local.h plugin.h ldbuildid.h ldelf.h ldelfgen.h\n \n GENERATED_CFILES = ldgram.c ldlex.c deffilep.c\n GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h\n@@ -497,7 +484,7 @@ GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h\n BUILT_SOURCES = $(GENERATED_HFILES)\n \n OFILES = ldgram.@OBJEXT@ ldlex-wrapper.@OBJEXT@ lexsup.@OBJEXT@ ldlang.@OBJEXT@ \\\n-\tmri.@OBJEXT@ ldctor.@OBJEXT@ ldmain.@OBJEXT@ $(PLUGIN_OBJECT) \\\n+\tmri.@OBJEXT@ ldctor.@OBJEXT@ ldmain.@OBJEXT@ plugin.@OBJEXT@ \\\n \tldwrite.@OBJEXT@ ldexp.@OBJEXT@  ldemul.@OBJEXT@ ldver.@OBJEXT@ ldmisc.@OBJEXT@ \\\n \tldfile.@OBJEXT@ ldcref.@OBJEXT@ ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES} \\\n \tldbuildid.@OBJEXT@\n@@ -959,7 +946,7 @@ EXTRA_ld_new_SOURCES = deffilep.y ldlex.l\n EXTRA_ld_new_SOURCES += pep-dll.c pe-dll.c ldelf.c ldelfgen.c\n \n ld_new_SOURCES = ldgram.y ldlex-wrapper.c lexsup.c ldlang.c mri.c ldctor.c ldmain.c \\\n-\tldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c $(PLUGIN_C) \\\n+\tldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c plugin.c \\\n \tldbuildid.c\n ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) \\\n \t\t      $(BFDLIB) $(LIBCTF) $(LIBIBERTY) $(LIBINTL_DEP)\n@@ -997,7 +984,6 @@ development.exp: $(BFDDIR)/development.sh\n #\n # Build a dummy plugin using libtool.\n #\n-if ENABLE_PLUGINS\n noinst_LTLIBRARIES = libldtestplug.la libldtestplug2.la \\\n \t\t     libldtestplug3.la libldtestplug4.la\n libldtestplug_la_SOURCES = testplug.c\n@@ -1012,7 +998,6 @@ libldtestplug3_la_LDFLAGS = -no-undefined -rpath /nowhere\n libldtestplug4_la_SOURCES = testplug4.c\n libldtestplug4_la_CFLAGS= -g -O2\n libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere\n-endif\n \n # DOCUMENTATION TARGETS\n # Manual configuration file; not usually attached to normal configuration,"
    },
    {
      "sha": "be0291ceecdf4bc163a836ceb7cadd4e5a31d690",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 29,
      "deletions": 48,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -138,8 +138,7 @@ CONFIG_CLEAN_FILES = po/Makefile.in\n CONFIG_CLEAN_VPATH_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n libldtestplug_la_LIBADD =\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug_la_OBJECTS =  \\\n-@ENABLE_PLUGINS_TRUE@\tlibldtestplug_la-testplug.lo\n+am_libldtestplug_la_OBJECTS = libldtestplug_la-testplug.lo\n libldtestplug_la_OBJECTS = $(am_libldtestplug_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n@@ -149,44 +148,36 @@ libldtestplug_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug_la_CFLAGS) $(CFLAGS) \\\n \t$(libldtestplug_la_LDFLAGS) $(LDFLAGS) -o $@\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug_la_rpath =\n libldtestplug2_la_LIBADD =\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug2_la_OBJECTS =  \\\n-@ENABLE_PLUGINS_TRUE@\tlibldtestplug2_la-testplug2.lo\n+am_libldtestplug2_la_OBJECTS = libldtestplug2_la-testplug2.lo\n libldtestplug2_la_OBJECTS = $(am_libldtestplug2_la_OBJECTS)\n libldtestplug2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug2_la_CFLAGS) $(CFLAGS) \\\n \t$(libldtestplug2_la_LDFLAGS) $(LDFLAGS) -o $@\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug2_la_rpath =\n libldtestplug3_la_LIBADD =\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug3_la_OBJECTS =  \\\n-@ENABLE_PLUGINS_TRUE@\tlibldtestplug3_la-testplug3.lo\n+am_libldtestplug3_la_OBJECTS = libldtestplug3_la-testplug3.lo\n libldtestplug3_la_OBJECTS = $(am_libldtestplug3_la_OBJECTS)\n libldtestplug3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug3_la_CFLAGS) $(CFLAGS) \\\n \t$(libldtestplug3_la_LDFLAGS) $(LDFLAGS) -o $@\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug3_la_rpath =\n libldtestplug4_la_LIBADD =\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug4_la_OBJECTS =  \\\n-@ENABLE_PLUGINS_TRUE@\tlibldtestplug4_la-testplug4.lo\n+am_libldtestplug4_la_OBJECTS = libldtestplug4_la-testplug4.lo\n libldtestplug4_la_OBJECTS = $(am_libldtestplug4_la_OBJECTS)\n libldtestplug4_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\\n \t$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n \t$(libldtestplug4_la_CFLAGS) $(CFLAGS) \\\n \t$(libldtestplug4_la_LDFLAGS) $(LDFLAGS) -o $@\n-@ENABLE_PLUGINS_TRUE@am_libldtestplug4_la_rpath =\n am__installdirs = \"$(DESTDIR)$(bindir)\" \"$(DESTDIR)$(infodir)\" \\\n \t\"$(DESTDIR)$(man1dir)\"\n PROGRAMS = $(bin_PROGRAMS)\n-@ENABLE_PLUGINS_TRUE@am__objects_1 = plugin.$(OBJEXT)\n am_ld_new_OBJECTS = ldgram.$(OBJEXT) ldlex-wrapper.$(OBJEXT) \\\n \tlexsup.$(OBJEXT) ldlang.$(OBJEXT) mri.$(OBJEXT) \\\n \tldctor.$(OBJEXT) ldmain.$(OBJEXT) ldwrite.$(OBJEXT) \\\n \tldexp.$(OBJEXT) ldemul.$(OBJEXT) ldver.$(OBJEXT) \\\n \tldmisc.$(OBJEXT) ldfile.$(OBJEXT) ldcref.$(OBJEXT) \\\n-\t$(am__objects_1) ldbuildid.$(OBJEXT)\n+\tplugin.$(OBJEXT) ldbuildid.$(OBJEXT)\n ld_new_OBJECTS = $(am_ld_new_OBJECTS)\n am__DEPENDENCIES_1 =\n AM_V_P = $(am__v_P_@AM_V@)\n@@ -558,16 +549,6 @@ ELF_CLFAGS = -DELF_LIST_OPTIONS=@elf_list_options@ \\\n \t   -DELF_PLT_UNWIND_LIST_OPTIONS=@elf_plt_unwind_list_options@\n \n AM_CFLAGS = $(WARN_CFLAGS) $(ELF_CLFAGS)\n-@ENABLE_PLUGINS_FALSE@PLUGIN_C = \n-\n-# Conditionally enable the plugin interface.\n-@ENABLE_PLUGINS_TRUE@PLUGIN_C = plugin.c\n-@ENABLE_PLUGINS_FALSE@PLUGIN_H = \n-@ENABLE_PLUGINS_TRUE@PLUGIN_H = plugin.h\n-@ENABLE_PLUGINS_FALSE@PLUGIN_OBJECT = \n-@ENABLE_PLUGINS_TRUE@PLUGIN_OBJECT = plugin.@OBJEXT@\n-@ENABLE_PLUGINS_FALSE@PLUGIN_CFLAGS = \n-@ENABLE_PLUGINS_TRUE@PLUGIN_CFLAGS = -DENABLE_PLUGINS\n \n # We put the scripts in the directory $(scriptdir)/ldscripts.\n # We can't put the scripts in $(datadir) because the SEARCH_DIR\n@@ -642,7 +623,7 @@ TEXI2DVI = texi2dvi -I $(srcdir) -I $(BFDDIR)/doc -I ../bfd/doc \\\n \t\t    -I $(top_srcdir)/../libiberty\n \n AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) @zlibinc@ \\\n-\t@INCINTL@ $(HDEFINES) $(CFLAGS) $(PLUGIN_CFLAGS) \\\n+\t@INCINTL@ $(HDEFINES) $(CFLAGS) \\\n \t-DLOCALEDIR=\"\\\"$(datadir)/locale\\\"\"\n \n BFDLIB = ../bfd/libbfd.la\n@@ -970,12 +951,12 @@ ALL_64_EMUL_EXTRA_OFILES = \\\n CFILES = ldctor.c ldemul.c ldexp.c ldfile.c ldlang.c \\\n \tldmain.c ldmisc.c ldver.c ldwrite.c lexsup.c \\\n \tmri.c ldcref.c pe-dll.c pep-dll.c ldlex-wrapper.c \\\n-\t$(PLUGIN_C) ldbuildid.c ldelf.c ldelfgen.c\n+\tplugin.c ldbuildid.c ldelf.c ldelfgen.c\n \n HFILES = ld.h ldctor.h ldemul.h ldexp.h ldfile.h \\\n \tldlang.h ldlex.h ldmain.h ldmisc.h ldver.h \\\n \tldwrite.h mri.h deffile.h pe-dll.h pep-dll.h \\\n-\telf-hints-local.h $(PLUGIN_H) ldbuildid.h ldelf.h ldelfgen.h\n+\telf-hints-local.h plugin.h ldbuildid.h ldelf.h ldelfgen.h\n \n GENERATED_CFILES = ldgram.c ldlex.c deffilep.c\n GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h\n@@ -984,7 +965,7 @@ GENERATED_HFILES = ldgram.h ldemul-list.h deffilep.h\n # tracking will not cause them to be built beforehand.\n BUILT_SOURCES = $(GENERATED_HFILES)\n OFILES = ldgram.@OBJEXT@ ldlex-wrapper.@OBJEXT@ lexsup.@OBJEXT@ ldlang.@OBJEXT@ \\\n-\tmri.@OBJEXT@ ldctor.@OBJEXT@ ldmain.@OBJEXT@ $(PLUGIN_OBJECT) \\\n+\tmri.@OBJEXT@ ldctor.@OBJEXT@ ldmain.@OBJEXT@ plugin.@OBJEXT@ \\\n \tldwrite.@OBJEXT@ ldexp.@OBJEXT@  ldemul.@OBJEXT@ ldver.@OBJEXT@ ldmisc.@OBJEXT@ \\\n \tldfile.@OBJEXT@ ldcref.@OBJEXT@ ${EMULATION_OFILES} ${EMUL_EXTRA_OFILES} \\\n \tldbuildid.@OBJEXT@\n@@ -1005,7 +986,7 @@ EXTRA_ld_new_SOURCES = deffilep.y ldlex.l pep-dll.c pe-dll.c ldelf.c \\\n \tldelfgen.c $(ALL_EMULATION_SOURCES) \\\n \t$(ALL_64_EMULATION_SOURCES)\n ld_new_SOURCES = ldgram.y ldlex-wrapper.c lexsup.c ldlang.c mri.c ldctor.c ldmain.c \\\n-\tldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c $(PLUGIN_C) \\\n+\tldwrite.c ldexp.c ldemul.c ldver.c ldmisc.c ldfile.c ldcref.c plugin.c \\\n \tldbuildid.c\n \n ld_new_DEPENDENCIES = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) \\\n@@ -1016,21 +997,21 @@ ld_new_LDADD = $(EMULATION_OFILES) $(EMUL_EXTRA_OFILES) $(BFDLIB) $(LIBCTF) $(LI\n #\n # Build a dummy plugin using libtool.\n #\n-@ENABLE_PLUGINS_TRUE@noinst_LTLIBRARIES = libldtestplug.la libldtestplug2.la \\\n-@ENABLE_PLUGINS_TRUE@\t\t     libldtestplug3.la libldtestplug4.la\n-\n-@ENABLE_PLUGINS_TRUE@libldtestplug_la_SOURCES = testplug.c\n-@ENABLE_PLUGINS_TRUE@libldtestplug_la_CFLAGS = -g -O2\n-@ENABLE_PLUGINS_TRUE@libldtestplug_la_LDFLAGS = -no-undefined -rpath /nowhere\n-@ENABLE_PLUGINS_TRUE@libldtestplug2_la_SOURCES = testplug2.c\n-@ENABLE_PLUGINS_TRUE@libldtestplug2_la_CFLAGS = -g -O2\n-@ENABLE_PLUGINS_TRUE@libldtestplug2_la_LDFLAGS = -no-undefined -rpath /nowhere\n-@ENABLE_PLUGINS_TRUE@libldtestplug3_la_SOURCES = testplug3.c\n-@ENABLE_PLUGINS_TRUE@libldtestplug3_la_CFLAGS = -g -O2\n-@ENABLE_PLUGINS_TRUE@libldtestplug3_la_LDFLAGS = -no-undefined -rpath /nowhere\n-@ENABLE_PLUGINS_TRUE@libldtestplug4_la_SOURCES = testplug4.c\n-@ENABLE_PLUGINS_TRUE@libldtestplug4_la_CFLAGS = -g -O2\n-@ENABLE_PLUGINS_TRUE@libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere\n+noinst_LTLIBRARIES = libldtestplug.la libldtestplug2.la \\\n+\t\t     libldtestplug3.la libldtestplug4.la\n+\n+libldtestplug_la_SOURCES = testplug.c\n+libldtestplug_la_CFLAGS = -g -O2\n+libldtestplug_la_LDFLAGS = -no-undefined -rpath /nowhere\n+libldtestplug2_la_SOURCES = testplug2.c\n+libldtestplug2_la_CFLAGS = -g -O2\n+libldtestplug2_la_LDFLAGS = -no-undefined -rpath /nowhere\n+libldtestplug3_la_SOURCES = testplug3.c\n+libldtestplug3_la_CFLAGS = -g -O2\n+libldtestplug3_la_LDFLAGS = -no-undefined -rpath /nowhere\n+libldtestplug4_la_SOURCES = testplug4.c\n+libldtestplug4_la_CFLAGS = -g -O2\n+libldtestplug4_la_LDFLAGS = -no-undefined -rpath /nowhere\n MAINTAINERCLEANFILES = configdoc.texi ld.1 ld.info\n \n # We want to reconfigure if configure.host or configure.tgt changes.\n@@ -1118,16 +1099,16 @@ clean-noinstLTLIBRARIES:\n \t}\n \n libldtestplug.la: $(libldtestplug_la_OBJECTS) $(libldtestplug_la_DEPENDENCIES) $(EXTRA_libldtestplug_la_DEPENDENCIES) \n-\t$(AM_V_CCLD)$(libldtestplug_la_LINK) $(am_libldtestplug_la_rpath) $(libldtestplug_la_OBJECTS) $(libldtestplug_la_LIBADD) $(LIBS)\n+\t$(AM_V_CCLD)$(libldtestplug_la_LINK)  $(libldtestplug_la_OBJECTS) $(libldtestplug_la_LIBADD) $(LIBS)\n \n libldtestplug2.la: $(libldtestplug2_la_OBJECTS) $(libldtestplug2_la_DEPENDENCIES) $(EXTRA_libldtestplug2_la_DEPENDENCIES) \n-\t$(AM_V_CCLD)$(libldtestplug2_la_LINK) $(am_libldtestplug2_la_rpath) $(libldtestplug2_la_OBJECTS) $(libldtestplug2_la_LIBADD) $(LIBS)\n+\t$(AM_V_CCLD)$(libldtestplug2_la_LINK)  $(libldtestplug2_la_OBJECTS) $(libldtestplug2_la_LIBADD) $(LIBS)\n \n libldtestplug3.la: $(libldtestplug3_la_OBJECTS) $(libldtestplug3_la_DEPENDENCIES) $(EXTRA_libldtestplug3_la_DEPENDENCIES) \n-\t$(AM_V_CCLD)$(libldtestplug3_la_LINK) $(am_libldtestplug3_la_rpath) $(libldtestplug3_la_OBJECTS) $(libldtestplug3_la_LIBADD) $(LIBS)\n+\t$(AM_V_CCLD)$(libldtestplug3_la_LINK)  $(libldtestplug3_la_OBJECTS) $(libldtestplug3_la_LIBADD) $(LIBS)\n \n libldtestplug4.la: $(libldtestplug4_la_OBJECTS) $(libldtestplug4_la_DEPENDENCIES) $(EXTRA_libldtestplug4_la_DEPENDENCIES) \n-\t$(AM_V_CCLD)$(libldtestplug4_la_LINK) $(am_libldtestplug4_la_rpath) $(libldtestplug4_la_OBJECTS) $(libldtestplug4_la_LIBADD) $(LIBS)\n+\t$(AM_V_CCLD)$(libldtestplug4_la_LINK)  $(libldtestplug4_la_OBJECTS) $(libldtestplug4_la_LIBADD) $(LIBS)\n install-binPROGRAMS: $(bin_PROGRAMS)\n \t@$(NORMAL_INSTALL)\n \t@list='$(bin_PROGRAMS)'; test -n \"$(bindir)\" || list=; \\"
    },
    {
      "sha": "fba65c58e222f98000bde8be57944de81f27f1e7",
      "filename": "ld/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 16,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -649,8 +649,6 @@ STRINGIFY\n zlibinc\n zlibdir\n enable_initfini_array\n-ENABLE_PLUGINS_FALSE\n-ENABLE_PLUGINS_TRUE\n NATIVE_LIB_DIRS\n HDEFINES\n do_compare\n@@ -12035,7 +12033,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12038 \"configure\"\n+#line 12036 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12141,7 +12139,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12144 \"configure\"\n+#line 12142 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17285,14 +17283,6 @@ if test \"$ac_res\" != no; then :\n \n fi\n \n- if test x$plugins = xyes; then\n-  ENABLE_PLUGINS_TRUE=\n-  ENABLE_PLUGINS_FALSE='#'\n-else\n-  ENABLE_PLUGINS_TRUE='#'\n-  ENABLE_PLUGINS_FALSE=\n-fi\n-\n \n # Check whether --enable-initfini-array was given.\n if test \"${enable_initfini_array+set}\" = set; then :\n@@ -17890,10 +17880,6 @@ if test -z \"${GENINSRC_NEVER_TRUE}\" && test -z \"${GENINSRC_NEVER_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"GENINSRC_NEVER\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n-if test -z \"${ENABLE_PLUGINS_TRUE}\" && test -z \"${ENABLE_PLUGINS_FALSE}\"; then\n-  as_fn_error $? \"conditional \\\"ENABLE_PLUGINS\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n-fi\n \n : \"${CONFIG_STATUS=./config.status}\"\n ac_write_fail=0"
    },
    {
      "sha": "2b6c0480e90179024479c2aae22e35aee7ca23b1",
      "filename": "ld/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.ac?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -274,7 +274,6 @@ dnl AC_CHECK_HEADERS(sys/mman.h)\n AC_FUNC_MMAP\n \n AC_SEARCH_LIBS([dlopen], [dl])\n-AM_CONDITIONAL([ENABLE_PLUGINS], [test x$plugins = xyes])\n \n AC_ARG_ENABLE(initfini-array,\n [  --disable-initfini-array do not use .init_array/.fini_array sections],"
    },
    {
      "sha": "f3de2c2356a21fc85e3d54c55357dd240ebd3bf0",
      "filename": "ld/ldfile.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldfile.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -34,10 +34,10 @@\n #include \"ldemul.h\"\n #include \"libiberty.h\"\n #include \"filenames.h\"\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin-api.h\"\n #include \"plugin.h\"\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n bfd_boolean ldfile_assumed_script = FALSE;\n const char *ldfile_output_machine_name = \"\";\n@@ -148,7 +148,7 @@ ldfile_try_open_bfd (const char *attempt,\n   /* This is a linker input BFD.  */\n   entry->the_bfd->is_linker_input = 1;\n \n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   if (entry->flags.lto_output)\n     entry->the_bfd->lto_output = 1;\n #endif\n@@ -302,7 +302,7 @@ ldfile_try_open_bfd (const char *attempt,\n \t}\n     }\n  success:\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   /* If plugins are active, they get first chance to claim\n      any successfully-opened input file.  We skip archives\n      here; the plugin wants us to offer it the individual\n@@ -316,7 +316,7 @@ ldfile_try_open_bfd (const char *attempt,\n       && !no_more_claiming\n       && bfd_check_format (entry->the_bfd, bfd_object))\n     plugin_maybe_claim (entry);\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n   /* It opened OK, the format checked out, and the plugins have had\n      their chance to claim it, so this is success.  */"
    },
    {
      "sha": "8ab6a0b0c36f69660e544493d6ff4b454f0cfe43",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -42,9 +42,9 @@\n #include \"demangle.h\"\n #include \"hashtab.h\"\n #include \"elf-bfd.h\"\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin.h\"\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n #ifndef offsetof\n #define offsetof(TYPE, MEMBER) ((size_t) & (((TYPE*) 0)->MEMBER))\n@@ -3526,7 +3526,7 @@ enum open_bfd_mode\n     OPEN_BFD_FORCE = 1,\n     OPEN_BFD_RESCAN = 2\n   };\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n static lang_input_statement_type *plugin_insert = NULL;\n static struct bfd_link_hash_entry *plugin_undefs = NULL;\n #endif\n@@ -3556,7 +3556,7 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)\n \tcase lang_group_statement_enum:\n \t  {\n \t    struct bfd_link_hash_entry *undefs;\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t    lang_input_statement_type *plugin_insert_save;\n #endif\n \n@@ -3566,15 +3566,15 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)\n \n \t    do\n \t      {\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t\tplugin_insert_save = plugin_insert;\n #endif\n \t\tundefs = link_info.hash->undefs_tail;\n \t\topen_input_bfds (s->group_statement.children.head,\n \t\t\t\t mode | OPEN_BFD_FORCE);\n \t      }\n \t    while (undefs != link_info.hash->undefs_tail\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t\t   /* Objects inserted by a plugin, which are loaded\n \t\t      before we hit this loop, may have added new\n \t\t      undefs.  */\n@@ -3601,7 +3601,7 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)\n \t\t has been loaded already.  Do the same for a rescan.\n \t\t Likewise reload --as-needed shared libs.  */\n \t      if (mode != OPEN_BFD_NORMAL\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t\t  && ((mode & OPEN_BFD_RESCAN) == 0\n \t\t      || plugin_insert == NULL)\n #endif\n@@ -3648,7 +3648,7 @@ open_input_bfds (lang_statement_union_type *s, enum open_bfd_mode mode)\n \t\t    }\n \t\t}\n \t    }\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t  /* If we have found the point at which a plugin added new\n \t     files, clear plugin_insert to enable archive rescan.  */\n \t  if (&s->input_statement == plugin_insert)\n@@ -6899,11 +6899,11 @@ lang_check (void)\n        file != NULL;\n        file = file->next)\n     {\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n       /* Don't check format of files claimed by plugin.  */\n       if (file->flags.claimed)\n \tcontinue;\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n       input_bfd = file->the_bfd;\n       compatible\n \t= bfd_arch_get_compatible (input_bfd, link_info.output_bfd,\n@@ -7438,7 +7438,7 @@ lang_gc_sections (void)\n       LANG_FOR_EACH_INPUT_STATEMENT (f)\n \t{\n \t  asection *sec;\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t  if (f->flags.claimed)\n \t    continue;\n #endif\n@@ -7585,7 +7585,7 @@ lang_relax_sections (bfd_boolean need_layout)\n     }\n }\n \n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n /* Find the insert point for the plugin's replacement files.  We\n    place them after the first claimed real object file, or if the\n    first claimed object is an archive member, after the last real\n@@ -7728,7 +7728,7 @@ find_next_input_statement (lang_statement_union_type **s)\n     }\n   return s;\n }\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n /* Add NAME to the list of garbage collection entry points.  */\n \n@@ -7819,7 +7819,7 @@ lang_process (void)\n      to symbolic origin/length now.  */\n   lang_do_memory_regions ();\n \n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   if (link_info.lto_plugin_active)\n     {\n       lang_statement_list_type added;\n@@ -7922,7 +7922,7 @@ lang_process (void)\n \t    }\n \t}\n     }\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n   /* Make sure that nobody has tried to add a symbol to this list\n      before now.  */"
    },
    {
      "sha": "196debfa37e8ed15f2b1b67d57df05d8c9cf21f2",
      "filename": "ld/ldlang.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.h?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -271,7 +271,7 @@ struct lang_input_statement_flags\n   /* Set if reloading an archive or --as-needed lib.  */\n   unsigned int reload : 1;\n \n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   /* Set if the file was claimed by a plugin.  */\n   unsigned int claimed : 1;\n \n@@ -280,7 +280,7 @@ struct lang_input_statement_flags\n \n   /* Set if added by the lto plugin add_input_file callback.  */\n   unsigned int lto_output : 1;\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n   /* Head of list of pushed flags.  */\n   struct lang_input_statement_flags *pushed;"
    },
    {
      "sha": "7868dca3499016b00c10bd36b31c4230b5522aec",
      "filename": "ld/ldlex.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldlex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlex.h?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -135,10 +135,10 @@ enum option_values\n   OPTION_WARN_TEXTREL,\n   OPTION_WARN_ALTERNATE_EM,\n   OPTION_REDUCE_MEMORY_OVERHEADS,\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   OPTION_PLUGIN,\n   OPTION_PLUGIN_OPT,\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n   OPTION_DEFAULT_SCRIPT,\n   OPTION_PRINT_OUTPUT_FORMAT,\n   OPTION_PRINT_SYSROOT,"
    },
    {
      "sha": "d34d30ae3371a88e94abb5d9774a8325149daee9",
      "filename": "ld/ldmain.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldmain.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/ldmain.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldmain.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -40,10 +40,10 @@\n #include \"ldfile.h\"\n #include \"ldemul.h\"\n #include \"ldctor.h\"\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin.h\"\n #include \"plugin-api.h\"\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n /* Somewhere above, sys/stat.h got included.  */\n #if !defined(S_ISDIR) && defined(S_IFDIR)\n@@ -164,7 +164,7 @@ static void\n ld_cleanup (void)\n {\n   bfd_cache_close_all ();\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   plugin_call_cleanup ();\n #endif\n   if (output_filename && delete_output_file_on_failure)\n@@ -323,10 +323,10 @@ main (int argc, char **argv)\n   if (config.hash_table_size != 0)\n     bfd_hash_set_default_size (config.hash_table_size);\n \n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   /* Now all the plugin arguments have been gathered, we can load them.  */\n   plugin_load_plugins ();\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n   ldemul_set_symbols ();\n \n@@ -830,7 +830,7 @@ add_archive_element (struct bfd_link_info *info,\n      (if enabled) may possibly alter it to point to a replacement\n      BFD, but we still want to output the original BFD filename.  */\n   orig_input = *input;\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   if (link_info.lto_plugin_active)\n     {\n       /* We must offer this archive member to the plugins to claim.  */\n@@ -851,7 +851,7 @@ add_archive_element (struct bfd_link_info *info,\n \t  *subsbfd = input->the_bfd;\n \t}\n     }\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n   ldlang_add_file (input);\n "
    },
    {
      "sha": "65a945318520ce840b2bd27afab761c017d8a267",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -39,9 +39,9 @@\n #include \"ldver.h\"\n #include \"ldemul.h\"\n #include \"demangle.h\"\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin.h\"\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \n #ifndef PATH_SEPARATOR\n #if defined (__MSDOS__) || (defined (_WIN32) && ! defined (__CYGWIN32__))\n@@ -174,7 +174,7 @@ static const struct ld_option ld_options[] =\n     'O', NULL, N_(\"Optimize output file\"), ONE_DASH },\n   { {\"out-implib\", required_argument, NULL, OPTION_OUT_IMPLIB},\n     '\\0', N_(\"FILE\"), N_(\"Generate import library\"), TWO_DASHES },\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n   { {\"plugin\", required_argument, NULL, OPTION_PLUGIN},\n     '\\0', N_(\"PLUGIN\"), N_(\"Load named plugin\"), ONE_DASH },\n   { {\"plugin-opt\", required_argument, NULL, OPTION_PLUGIN_OPT},\n@@ -190,7 +190,7 @@ static const struct ld_option ld_options[] =\n     '\\0', N_(\"PLUGIN\"), N_(\"Load named plugin (ignored)\"), ONE_DASH },\n   { {\"plugin-opt\", required_argument, NULL, OPTION_IGNORE},\n     '\\0', N_(\"ARG\"), N_(\"Send arg to last-loaded plugin (ignored)\"), ONE_DASH },\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n   { {\"fuse-ld=\", required_argument, NULL, OPTION_IGNORE},\n     '\\0', NULL, N_(\"Ignored for GCC linker option compatibility\"),\n     ONE_DASH },\n@@ -1066,15 +1066,15 @@ parse_args (unsigned argc, char **argv)\n \tcase OPTION_PRINT_OUTPUT_FORMAT:\n \t  command_line.print_output_format = TRUE;\n \t  break;\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \tcase OPTION_PLUGIN:\n \t  plugin_opt_plugin (optarg);\n \t  break;\n \tcase OPTION_PLUGIN_OPT:\n \t  if (plugin_opt_plugin_arg (optarg))\n \t    einfo (_(\"%F%P: bad -plugin-opt option\\n\"));\n \t  break;\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \tcase 'q':\n \t  link_info.emitrelocations = TRUE;\n \t  break;\n@@ -1368,9 +1368,9 @@ parse_args (unsigned argc, char **argv)\n \t      int level ATTRIBUTE_UNUSED = strtoul (optarg, &end, 0);\n \t      if (*end)\n \t\teinfo (_(\"%F%P: invalid number `%s'\\n\"), optarg);\n-#ifdef ENABLE_PLUGINS\n+#if BFD_SUPPORTS_PLUGINS\n \t      report_plugin_symbols = level > 1;\n-#endif /* ENABLE_PLUGINS */\n+#endif /* BFD_SUPPORTS_PLUGINS */\n \t    }\n \t  break;\n \tcase 'v':"
    },
    {
      "sha": "b455af6d6762321200f37a7103619271b99779b2",
      "filename": "ld/plugin.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/plugin.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -21,6 +21,7 @@\n #include \"sysdep.h\"\n #include \"libiberty.h\"\n #include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n #include \"bfdlink.h\"\n #include \"bfdver.h\"\n #include \"ctf-api.h\"\n@@ -1462,3 +1463,4 @@ plugin_notice (struct bfd_link_info *info,\n \t\t\t\t      abfd, section, value, flags);\n   return TRUE;\n }\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    },
    {
      "sha": "e386e8d47885e59a3e7c1084444feb6f6f6933c6",
      "filename": "ld/testplug.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testplug.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -20,6 +20,7 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin-api.h\"\n /* For ARRAY_SIZE macro only - we don't link the library itself.  */\n #include \"libiberty.h\"\n@@ -669,3 +670,4 @@ oncleanup (void)\n   fflush (NULL);\n   return cleanup_ret;\n }\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    },
    {
      "sha": "5b69d0e21b7d60ba1cb121acb7426eb927f9be16",
      "filename": "ld/testplug2.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testplug2.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -21,6 +21,7 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin-api.h\"\n #include \"filenames.h\"\n /* For ARRAY_SIZE macro only - we don't link the library itself.  */\n@@ -669,3 +670,4 @@ oncleanup (void)\n   fflush (NULL);\n   return cleanup_ret;\n }\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    },
    {
      "sha": "3b0e9b3b35a16a4c3d9f34f95d5afa0f30b082b5",
      "filename": "ld/testplug3.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug3.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug3.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testplug3.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -21,6 +21,7 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin-api.h\"\n #include \"filenames.h\"\n /* For ARRAY_SIZE macro only - we don't link the library itself.  */\n@@ -627,3 +628,4 @@ oncleanup (void)\n   fflush (NULL);\n   return cleanup_ret;\n }\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    },
    {
      "sha": "6e41f81298b04e6e6ef3ea8e30fb852baa77603b",
      "filename": "ld/testplug4.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug4.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0381901e629115f5f0d92a27fe74b1814f6f389a/ld/testplug4.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testplug4.c?ref=0381901e629115f5f0d92a27fe74b1814f6f389a",
      "patch": "@@ -21,6 +21,7 @@\n \n #include \"sysdep.h\"\n #include \"bfd.h\"\n+#if BFD_SUPPORTS_PLUGINS\n #include \"plugin-api.h\"\n #include \"filenames.h\"\n /* For ARRAY_SIZE macro only - we don't link the library itself.  */\n@@ -675,3 +676,4 @@ oncleanup (void)\n   fflush (NULL);\n   return cleanup_ret;\n }\n+#endif /* BFD_SUPPORTS_PLUGINS */"
    }
  ]
}