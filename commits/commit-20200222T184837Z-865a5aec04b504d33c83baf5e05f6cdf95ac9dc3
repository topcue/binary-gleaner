{
  "sha": "865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODY1YTVhZWMwNGI1MDRkMzNjODNiYWY1ZTA1ZjZjZGY5NWFjOWRjMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:37Z"
    },
    "message": "Remove tui_delete_invisible_windows and tui_make_all_invisible\n\ntui_delete_invisible_windows is only needed after applying a layout,\nand tui_make_all_invisible is only needed before applying a layout.\n\nThis patch removes these functions, in favor of doing this management\ndirectly in tui_apply_current_layout.  This is needed so that the\nlifetimes of non-built-in windows will be properly managed.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.h (tui_make_all_invisible): Don't declare.\n\t* tui/tui-wingeneral.c (tui_make_all_invisible): Remove.\n\t* tui/tui-win.c (tui_resize_all): Don't call\n\ttui_delete_invisible_windows.\n\t* tui/tui-layout.c (tui_apply_current_layout): Delete windows when\n\tdone.\n\t(tui_set_layout): Update.\n\t(tui_add_win_to_layout): Don't call tui_delete_invisible_windows.\n\t* tui/tui-data.h (tui_delete_invisible_windows): Don't declare.\n\t* tui/tui-data.c (tui_delete_invisible_windows): Remove.\n\nChange-Id: Ia3603b021dcb7ec31700a4a32640cd09b00b8f3b",
    "tree": {
      "sha": "cb6615c32bc06e7163e5e58b717cad91f5a496ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cb6615c32bc06e7163e5e58b717cad91f5a496ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e098d18cfc12c750616b7c934b9a9057f71f3553",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e098d18cfc12c750616b7c934b9a9057f71f3553",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e098d18cfc12c750616b7c934b9a9057f71f3553"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 48,
    "deletions": 52
  },
  "files": [
    {
      "sha": "31bfb9f680006a0829ceae25bf494013a1801425",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -1,3 +1,16 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.h (tui_make_all_invisible): Don't declare.\n+\t* tui/tui-wingeneral.c (tui_make_all_invisible): Remove.\n+\t* tui/tui-win.c (tui_resize_all): Don't call\n+\ttui_delete_invisible_windows.\n+\t* tui/tui-layout.c (tui_apply_current_layout): Delete windows when\n+\tdone.\n+\t(tui_set_layout): Update.\n+\t(tui_add_win_to_layout): Don't call tui_delete_invisible_windows.\n+\t* tui/tui-data.h (tui_delete_invisible_windows): Don't declare.\n+\t* tui/tui-data.c (tui_delete_invisible_windows): Remove.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-win.c (tui_partial_win_by_name): Handle ambiguity"
    },
    {
      "sha": "ead8b1043ca3c897f98413666bfe2cce3d57e643",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -129,29 +129,6 @@ tui_prev_win (struct tui_win_info *cur_win)\n }\n \n \n-/* See tui-data.h.  */\n-\n-void\n-tui_delete_invisible_windows ()\n-{\n-  for (int win_type = SRC_WIN; (win_type < MAX_MAJOR_WINDOWS); win_type++)\n-    {\n-      if (tui_win_list[win_type] != NULL\n-\t  && !tui_win_list[win_type]->is_visible ())\n-\t{\n-\t  /* This should always be made visible before a call to this\n-\t     function.  */\n-\t  gdb_assert (win_type != CMD_WIN);\n-\n-\t  if (win_with_focus == tui_win_list[win_type])\n-\t    win_with_focus = nullptr;\n-\n-\t  delete tui_win_list[win_type];\n-\t  tui_win_list[win_type] = NULL;\n-\t}\n-    }\n-}\n-\n tui_win_info::tui_win_info (enum tui_win_type type)\n   : tui_gen_win_info (type)\n {"
    },
    {
      "sha": "cd62b5758e60d27cbffe9e32e6d8f178c4780d4f",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -263,11 +263,6 @@ extern void tui_set_win_resized_to (bool);\n extern struct tui_win_info *tui_next_win (struct tui_win_info *);\n extern struct tui_win_info *tui_prev_win (struct tui_win_info *);\n \n-/* Delete all the invisible windows.  Note that it is an error to call\n-   this when the command window is invisible -- we don't allow the\n-   command window to be removed from the layout.  */\n-extern void tui_delete_invisible_windows ();\n-\n extern unsigned int tui_tab_width;\n \n #endif /* TUI_TUI_DATA_H */"
    },
    {
      "sha": "c27a8d086e28618de99c968b5926a5e3c8f8fc5c",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 35,
      "deletions": 11,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -69,8 +69,43 @@ std::vector<tui_win_info *> tui_windows;\n void\n tui_apply_current_layout ()\n {\n+  struct gdbarch *gdbarch;\n+  CORE_ADDR addr;\n+\n+  extract_display_start_addr (&gdbarch, &addr);\n+\n+  std::vector<tui_win_info *> saved_windows = std::move (tui_windows);\n   tui_windows.clear ();\n+\n+  for (tui_win_info *win_info : saved_windows)\n+    win_info->make_visible (false);\n+\n   applied_layout->apply (0, 0, tui_term_width (), tui_term_height ());\n+\n+  /* Keep the list of internal windows up-to-date.  */\n+  for (int win_type = SRC_WIN; (win_type < MAX_MAJOR_WINDOWS); win_type++)\n+    if (tui_win_list[win_type] != nullptr\n+\t&& !tui_win_list[win_type]->is_visible ())\n+      tui_win_list[win_type] = nullptr;\n+\n+  /* This should always be made visible by a layout.  */\n+  gdb_assert (TUI_CMD_WIN->is_visible ());\n+\n+  /* Now delete any window that was not re-applied.  */\n+  tui_win_info *focus = tui_win_with_focus ();\n+  for (tui_win_info *win_info : saved_windows)\n+    {\n+      if (!win_info->is_visible ())\n+\t{\n+\t  if (focus == win_info)\n+\t    tui_set_win_focus_to (tui_windows[0]);\n+\t  delete win_info;\n+\t}\n+    }\n+\n+  if (gdbarch == nullptr && TUI_DISASM_WIN != nullptr)\n+    tui_get_begin_asm_address (&gdbarch, &addr);\n+  tui_update_source_windows_with_addr (gdbarch, addr);\n }\n \n /* See tui-layout.  */\n@@ -86,19 +121,9 @@ tui_adjust_window_height (struct tui_win_info *win, int new_height)\n static void\n tui_set_layout (tui_layout_split *layout)\n {\n-  struct gdbarch *gdbarch;\n-  CORE_ADDR addr;\n-\n-  extract_display_start_addr (&gdbarch, &addr);\n-  tui_make_all_invisible ();\n   applied_skeleton = layout;\n   applied_layout = layout->clone ();\n   tui_apply_current_layout ();\n-  tui_delete_invisible_windows ();\n-\n-  if (gdbarch == nullptr && TUI_DISASM_WIN != nullptr)\n-    tui_get_begin_asm_address (&gdbarch, &addr);\n-  tui_update_source_windows_with_addr (gdbarch, addr);\n }\n \n /* See tui-layout.h.  */\n@@ -121,7 +146,6 @@ tui_add_win_to_layout (enum tui_win_type type)\n   const char *name = type == SRC_WIN ? SRC_NAME : DISASSEM_NAME;\n   applied_layout->replace_window (tui_win_list[other]->name (), name);\n   tui_apply_current_layout ();\n-  tui_delete_invisible_windows ();\n }\n \n /* Find LAYOUT in the \"layouts\" global and return its index.  */"
    },
    {
      "sha": "ac314d7d2ac20e51b81e8a6bcfc3cff5623b3ede",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -550,7 +550,6 @@ tui_resize_all (void)\n       erase ();\n       clearok (curscr, TRUE);\n       tui_apply_current_layout ();\n-      tui_delete_invisible_windows ();\n       /* Turn keypad back on, unless focus is in the command\n \t window.  */\n       if (win_with_focus != TUI_CMD_WIN)"
    },
    {
      "sha": "35468d43abcd40612fe5a0f7de92246f077b36ac",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -202,15 +202,6 @@ tui_gen_win_info::make_visible (bool visible)\n     handle.reset (nullptr);\n }\n \n-/* See tui-wingeneral.h.  */\n-\n-void\n-tui_make_all_invisible (void)\n-{\n-  for (tui_win_info *win_info : all_tui_windows ())\n-    win_info->make_visible (false);\n-}\n-\n /* Function to refresh all the windows currently displayed.  */\n \n void"
    },
    {
      "sha": "9302342e769c81a2671d04217f3b0d420d873b27",
      "filename": "gdb/tui/tui-wingeneral.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-wingeneral.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3/gdb/tui/tui-wingeneral.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.h?ref=865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "patch": "@@ -26,9 +26,6 @@\n \n struct tui_win_info;\n \n-/* Makes all windows invisible.  */\n-extern void tui_make_all_invisible (void);\n-\n extern void tui_unhighlight_win (struct tui_win_info *);\n extern void tui_highlight_win (struct tui_win_info *);\n extern void tui_refresh_all ();"
    }
  ]
}