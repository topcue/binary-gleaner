{
  "sha": "54d7dae59a2239720c848985a7d50a0a8b3319eb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTRkN2RhZTU5YTIyMzk3MjBjODQ4OTg1YTdkNTBhMGE4YjMzMTllYg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-07-18T15:01:45Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-07-18T15:01:54Z"
    },
    "message": "ld -r: Don't merge with member of output section group\n\nWhen doing a relocatable link, members of input section group are\nplaced in their own output sections.  We need to make sure that no\ninput sections are merged with member of output section group.\n\n\tPR ld/24819\n\t* emultempl/elf32.em (elf_orphan_compatible): Return FALSE for\n\tmember of output section group when doing a relocatable link.\n\t* testsuite/ld-elf/pr24819.d: New file.\n\t* testsuite/ld-elf/pr24819.s: Likewise.",
    "tree": {
      "sha": "df6fb11da6155641175b1840bf6b04df81779e50",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df6fb11da6155641175b1840bf6b04df81779e50"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/54d7dae59a2239720c848985a7d50a0a8b3319eb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d7dae59a2239720c848985a7d50a0a8b3319eb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/54d7dae59a2239720c848985a7d50a0a8b3319eb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d7dae59a2239720c848985a7d50a0a8b3319eb/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/71c4e95abe66ec9fc2c064268e3f9640a5b951d8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/71c4e95abe66ec9fc2c064268e3f9640a5b951d8"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 26,
    "deletions": 3
  },
  "files": [
    {
      "sha": "782d426ad08db8ad6c68c070228fe8bb419bffc6",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=54d7dae59a2239720c848985a7d50a0a8b3319eb",
      "patch": "@@ -1,3 +1,11 @@\n+2019-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/24819\n+\t* emultempl/elf32.em (elf_orphan_compatible): Return FALSE for\n+\tmember of output section group when doing a relocatable link.\n+\t* testsuite/ld-elf/pr24819.d: New file.\n+\t* testsuite/ld-elf/pr24819.s: Likewise.\n+\n 2019-07-13  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/tlsso.r: Update."
    },
    {
      "sha": "f3c6e3adeee5d78b6c0a8b764eed299be1424fc4",
      "filename": "ld/emultempl/elf32.em",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/emultempl/elf32.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/emultempl/elf32.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf32.em?ref=54d7dae59a2239720c848985a7d50a0a8b3319eb",
      "patch": "@@ -2028,10 +2028,13 @@ elf_orphan_compatible (asection *in, asection *out)\n   if (elf_section_data (out)->this_hdr.sh_info\n       != elf_section_data (in)->this_hdr.sh_info)\n     return FALSE;\n-  /* We can't merge two sections with differing SHF_EXCLUDE when doing\n-     a relocatable link.  */\n+  /* We can't merge with member of output section group nor merge two\n+     sections with differing SHF_EXCLUDE when doing a relocatable link.\n+   */\n   if (bfd_link_relocatable (&link_info)\n-      && ((elf_section_flags (out) ^ elf_section_flags (in)) & SHF_EXCLUDE) != 0)\n+      && (elf_next_in_group (out) != NULL\n+\t  || ((elf_section_flags (out) ^ elf_section_flags (in))\n+\t      & SHF_EXCLUDE) != 0))\n     return FALSE;\n   return _bfd_elf_match_sections_by_type (link_info.output_bfd, out,\n \t\t\t\t\t  in->owner, in);"
    },
    {
      "sha": "0a82b63c3999072c5605d315a9ee543b3441db26",
      "filename": "ld/testsuite/ld-elf/pr24819.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/testsuite/ld-elf/pr24819.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/testsuite/ld-elf/pr24819.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr24819.d?ref=54d7dae59a2239720c848985a7d50a0a8b3319eb",
      "patch": "@@ -0,0 +1,8 @@\n+#ld: -r\n+#readelf: -S --wide\n+\n+#...\n+  \\[[ 0-9]+\\] \\.data\\.foo[ \\t]+PROGBITS[ \\t0-9a-f]+WAG .*\n+#...\n+  \\[[ 0-9]+\\] \\.data\\.foo[ \\t]+PROGBITS[ \\t0-9a-f]+WA .*\n+#pass"
    },
    {
      "sha": "08ba2b8437b21524dfc4aded14248d3129a095b8",
      "filename": "ld/testsuite/ld-elf/pr24819.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/testsuite/ld-elf/pr24819.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d7dae59a2239720c848985a7d50a0a8b3319eb/ld/testsuite/ld-elf/pr24819.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr24819.s?ref=54d7dae59a2239720c848985a7d50a0a8b3319eb",
      "patch": "@@ -0,0 +1,4 @@\n+\t.section\t.data.foo,\"awG\",%progbits,.group1,comdat\n+\t.byte 0\n+\t.section\t.data.foo,\"aw\",%progbits\n+\t.byte 0"
    }
  ]
}