{
  "sha": "c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
  "node_id": "C_kwDOANOeidoAKGM0YThkZjE5YmEwYTgyYWE4ZGVhODhkOWY3MmVkOWU2M2NiMWZhODQ",
  "commit": {
    "author": {
      "name": "Martin Storsj",
      "email": "martin@martin.st",
      "date": "2022-01-11T15:43:59Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2022-01-11T15:43:59Z"
    },
    "message": "Fix multiple problems with DLL generation.\n\nld\t* pe-dll.c (make_head): Prefix the symbol name with the dll name.\n\t(make_tail, make_one, make_singleton_name_thunk): Likewise.\n\t(make_import_fixup_entry, make_runtime_pseudo_reloc): Likewise.\n\t(pe_create_runtime_relocator_reference): Likewise.\n\t(pe_dll_generate_implib): Set dll_symname_len.\n\t(pe_process_import_defs): Likewise.\n\nbinutils\n\t* dlltool.c (main): If a prefix has not been provided, attempt to\n\tuse a deterministic one based upon the dll name.",
    "tree": {
      "sha": "b173da05b0a8815f2f3ca4fd6e046beea7950371",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b173da05b0a8815f2f3ca4fd6e046beea7950371"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/comments",
  "author": {
    "login": "mstorsjo",
    "id": 69727,
    "node_id": "MDQ6VXNlcjY5NzI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/69727?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mstorsjo",
    "html_url": "https://github.com/mstorsjo",
    "followers_url": "https://api.github.com/users/mstorsjo/followers",
    "following_url": "https://api.github.com/users/mstorsjo/following{/other_user}",
    "gists_url": "https://api.github.com/users/mstorsjo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mstorsjo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mstorsjo/subscriptions",
    "organizations_url": "https://api.github.com/users/mstorsjo/orgs",
    "repos_url": "https://api.github.com/users/mstorsjo/repos",
    "events_url": "https://api.github.com/users/mstorsjo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mstorsjo/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d02f2788c34418483927d16db7e98a8a18fd508e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d02f2788c34418483927d16db7e98a8a18fd508e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d02f2788c34418483927d16db7e98a8a18fd508e"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 49,
    "deletions": 17
  },
  "files": [
    {
      "sha": "8e31f1472cc85f09b7a6148c577f99d54cfb1590",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "patch": "@@ -1,3 +1,8 @@\n+2022-01-11  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* dlltool.c (main): If a prefix has not been provided, attempt to\n+\tuse a deterministic one based upon the dll name.\n+\n 2022-01-07  Pavel Mayorov  <pmayorov@cloudlinux.com>\n \n \tPR 28718"
    },
    {
      "sha": "a1e2b484328ad69e302e55947e6cb45c896649ce",
      "filename": "binutils/dlltool.c",
      "status": "modified",
      "additions": 17,
      "deletions": 3,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/binutils/dlltool.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/binutils/dlltool.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dlltool.c?ref=c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "patch": "@@ -348,7 +348,7 @@ typedef struct iheadt\n static iheadtype *import_list = NULL;\n static char *as_name = NULL;\n static char * as_flags = \"\";\n-static char *tmp_prefix;\n+static char *tmp_prefix = NULL;\n static int no_idata4;\n static int no_idata5;\n static char *exp_name;\n@@ -3930,8 +3930,22 @@ main (int ac, char **av)\n \t}\n     }\n \n-  if (!tmp_prefix)\n-    tmp_prefix = prefix_encode (\"d\", getpid ());\n+  if (tmp_prefix == NULL)\n+    {\n+      /* If possible use a deterministic prefix.  */\n+      if (dll_name)\n+        {\n+          tmp_prefix = xmalloc (strlen (dll_name) + 2);\n+          sprintf (tmp_prefix, \"%s_\", dll_name);\n+          for (i = 0; tmp_prefix[i]; i++)\n+            if (!ISALNUM (tmp_prefix[i]))\n+              tmp_prefix[i] = '_';\n+        }\n+      else\n+        {\n+          tmp_prefix = prefix_encode (\"d\", getpid ());\n+        }\n+    }\n \n   for (i = 0; mtable[i].type; i++)\n     if (strcmp (mtable[i].type, mname) == 0)"
    },
    {
      "sha": "441187db2396143badf0452089d0dee4b01713ac",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "patch": "@@ -1,3 +1,12 @@\n+2022-01-11  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* pe-dll.c (make_head): Prefix the symbol name with the dll name.\n+\t(make_tail, make_one, make_singleton_name_thunk): Likewise.\n+\t(make_import_fixup_entry, make_runtime_pseudo_reloc): Likewise.\n+\t(pe_create_runtime_relocator_reference): Likewise.\n+\t(pe_dll_generate_implib): Set dll_symname_len.\n+\t(pe_process_import_defs): Likewise.\n+\n 2021-12-16  Nick Clifton  <nickc@redhat.com>\n \n \tPR 28686"
    },
    {
      "sha": "95de94b84745076989442531ee42a2859344f4ca",
      "filename": "ld/pe-dll.c",
      "status": "modified",
      "additions": 18,
      "deletions": 14,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/ld/pe-dll.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84/ld/pe-dll.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pe-dll.c?ref=c4a8df19ba0a82aa8dea88d9f72ed9e63cb1fa84",
      "patch": "@@ -348,6 +348,7 @@ static const autofilter_entry_type autofilter_liblist[] =\n   { STRING_COMMA_LEN (\"libgcj\") },\n   { STRING_COMMA_LEN (\"libmsvcrt\") },\n   { STRING_COMMA_LEN (\"libmsvcrt-os\") },\n+  { STRING_COMMA_LEN (\"libucrt\") },\n   { STRING_COMMA_LEN (\"libucrtbase\") },\n   { NULL, 0 }\n };\n@@ -1972,6 +1973,7 @@ static int symptr;\n static int tmp_seq;\n static const char *dll_filename;\n static char *dll_symname;\n+static int dll_symname_len;\n \n #define UNDSEC bfd_und_section_ptr\n \n@@ -2082,8 +2084,8 @@ make_head (bfd *parent)\n   char *oname;\n   bfd *abfd;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"d%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_d%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2171,8 +2173,8 @@ make_tail (bfd *parent)\n   char *oname;\n   bfd *abfd;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"d%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_d%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2322,8 +2324,8 @@ make_one (def_file_export *exp, bfd *parent, bool include_jmp_stub)\n \t}\n     }\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"d%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_d%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2508,8 +2510,8 @@ make_singleton_name_thunk (const char *import, bfd *parent)\n   char *oname;\n   bfd *abfd;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"nmth%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_nmth%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2584,8 +2586,8 @@ make_import_fixup_entry (const char *name,\n   char *oname;\n   bfd *abfd;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"fu%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_fu%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2638,8 +2640,8 @@ make_runtime_pseudo_reloc (const char *name ATTRIBUTE_UNUSED,\n   bfd *abfd;\n   bfd_size_type size;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"rtr%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_rtr%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2725,8 +2727,8 @@ pe_create_runtime_relocator_reference (bfd *parent)\n   char *oname;\n   bfd *abfd;\n \n-  oname = xmalloc (20);\n-  sprintf (oname, \"ertr%06d.o\", tmp_seq);\n+  oname = xmalloc (20 + dll_symname_len);\n+  sprintf (oname, \"%s_ertr%06d.o\", dll_symname, tmp_seq);\n   tmp_seq++;\n \n   abfd = bfd_create (oname, parent);\n@@ -2833,6 +2835,7 @@ pe_dll_generate_implib (def_file *def, const char *impfilename, struct bfd_link_\n \n   dll_filename = (def->name) ? def->name : dll_name;\n   dll_symname = xstrdup (dll_filename);\n+  dll_symname_len = strlen (dll_symname);\n   for (i = 0; dll_symname[i]; i++)\n     if (!ISALNUM (dll_symname[i]))\n       dll_symname[i] = '_';\n@@ -3201,6 +3204,7 @@ pe_process_import_defs (bfd *output_bfd, struct bfd_link_info *linfo)\n \n       dll_filename = module->name;\n       dll_symname = xstrdup (module->name);\n+      dll_symname_len = strlen (dll_symname);\n       for (j = 0; dll_symname[j]; j++)\n \tif (!ISALNUM (dll_symname[j]))\n \t  dll_symname[j] = '_';"
    }
  ]
}