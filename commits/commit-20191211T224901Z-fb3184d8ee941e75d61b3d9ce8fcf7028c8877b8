{
  "sha": "fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmIzMTg0ZDhlZTk0MWU3NWQ2MWIzZDljZThmY2Y3MDI4Yzg4NzdiOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-26T22:00:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-11T22:49:01Z"
    },
    "message": "Remove struct tui_point\n\nstruct tui_point does not help very much.  It is only used for\nstorage, and never passed between functions.  I think it makes the\ncode more verbose without any corresponding benefit, so this patch\nremoves it.\n\ngdb/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.c (tui_gen_win_info::make_window): Update.\n\t* tui/tui-win.c (tui_adjust_win_heights, tui_resize_all): Update.\n\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n\t* tui/tui-data.h (struct tui_point): Remove.\n\t(struct tui_gen_win_info) <origin>: Remove.\n\t<x, y>: New fields.\n\t* tui/tui-command.c (tui_cmd_window::resize): Update.\n\nChange-Id: I3f77920585b9ea9e2b4b189f3f3ae32d4da0c252",
    "tree": {
      "sha": "cce972bd6e7ad46dda877683a4b3619932bff290",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cce972bd6e7ad46dda877683a4b3619932bff290"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc7ff8a60818f002d7b759210202e0aaabfeebc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dc7ff8a60818f002d7b759210202e0aaabfeebc3"
    }
  ],
  "stats": {
    "total": 65,
    "additions": 35,
    "deletions": 30
  },
  "files": [
    {
      "sha": "7821d2cdd7de17f71b79d4c7186bbd9277a0b28f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -1,3 +1,13 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.c (tui_gen_win_info::make_window): Update.\n+\t* tui/tui-win.c (tui_adjust_win_heights, tui_resize_all): Update.\n+\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n+\t* tui/tui-data.h (struct tui_point): Remove.\n+\t(struct tui_gen_win_info) <origin>: Remove.\n+\t<x, y>: New fields.\n+\t* tui/tui-command.c (tui_cmd_window::resize): Update.\n+\n 2019-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-stack.h (struct tui_locator_window) <min_height>:"
    },
    {
      "sha": "e4c3a1b749161298a057a9e83339793951222d38",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -50,8 +50,8 @@ tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n     }\n   else\n     viewport_height = 1;\n-  origin.x = origin_x;\n-  origin.y = origin_y;\n+  x = origin_x;\n+  y = origin_y;\n \n   if (handle == nullptr)\n     make_window ();\n@@ -66,7 +66,7 @@ tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n #ifdef HAVE_WRESIZE\n       wresize (handle.get (), height, width);\n #endif\n-      mvwin (handle.get (), origin.y, origin.x);\n+      mvwin (handle.get (), y, x);\n       wmove (handle.get (), 0, 0);\n     }\n }"
    },
    {
      "sha": "a0e296fa68c5ed2480c7c8c1c23b7a652c1122c2",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 2,
      "deletions": 7,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -30,12 +30,6 @@ struct tui_cmd_window;\n struct tui_source_window_base;\n struct tui_source_window;\n \n-/* This is a point definition.  */\n-struct tui_point\n-{\n-  int x, y;\n-};\n-\n /* A deleter that calls delwin.  */\n struct curses_deleter\n {\n@@ -114,7 +108,8 @@ struct tui_gen_win_info\n   /* Window height.  */\n   int height = 0;\n   /* Origin of window.  */\n-  struct tui_point origin = {0, 0};\n+  int x = 0;\n+  int y = 0;\n   /* Viewport height.  */\n   int viewport_height = 0;\n };"
    },
    {
      "sha": "0a7812a53ea5d581939fb06aef21e6add9588e94",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -468,7 +468,7 @@ tui_gen_win_info::resize (int height_, int width_,\n \t\t\t  int origin_x_, int origin_y_)\n {\n   if (width == width_ && height == height_\n-      && origin.x == origin_x_ && origin.y == origin_y_\n+      && x == origin_x_ && y == origin_y_\n       && handle != nullptr)\n     return;\n \n@@ -478,14 +478,14 @@ tui_gen_win_info::resize (int height_, int width_,\n     viewport_height = height - 2;\n   else\n     viewport_height = 1;\n-  origin.x = origin_x_;\n-  origin.y = origin_y_;\n+  x = origin_x_;\n+  y = origin_y_;\n \n   if (handle != nullptr)\n     {\n #ifdef HAVE_WRESIZE\n       wresize (handle.get (), height, width);\n-      mvwin (handle.get (), origin.y, origin.x);\n+      mvwin (handle.get (), y, x);\n       wmove (handle.get (), 0, 0);\n #else\n       handle.reset (nullptr);"
    },
    {
      "sha": "4339b7e967abe38d98ac32a20a58fbcdd9bf2fcb",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -593,7 +593,7 @@ tui_resize_all (void)\n \n \t  new_height = screenheight - (new_height + 1);\n \t  TUI_CMD_WIN->resize (new_height, screenwidth,\n-\t\t\t       0, locator->origin.y + 1);\n+\t\t\t       0, locator->y + 1);\n \t  break;\n \tdefault:\n \t  if (cur_layout == SRC_DISASSEM_COMMAND)\n@@ -646,12 +646,12 @@ tui_resize_all (void)\n \t\t\t      0, first_win->height - 1);\n \n \t  locator->resize (1, screenwidth,\n-\t\t\t   0, second_win->origin.y + new_height);\n+\t\t\t   0, second_win->y + new_height);\n \n \t  /* Change the command window's height/width.  */\n-\t  new_height = screenheight - (locator->origin.y + 1);\n+\t  new_height = screenheight - (locator->y + 1);\n \t  TUI_CMD_WIN->resize (new_height, screenwidth,\n-\t\t\t       0, locator->origin.y + 1);\n+\t\t\t       0, locator->y + 1);\n \t  break;\n \t}\n \n@@ -1078,7 +1078,7 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t      struct tui_win_info *src_win_info;\n \n \t      primary_win_info->resize (new_height, width,\n-\t\t\t\t\t0, primary_win_info->origin.y);\n+\t\t\t\t\t0, primary_win_info->y);\n \t      if (primary_win_info->type == CMD_WIN)\n \t\t{\n \t\t  win_info = *(tui_source_windows ().begin ());\n@@ -1090,8 +1090,8 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t  src_win_info = primary_win_info;\n \t\t}\n \t      win_info->resize (win_info->height + diff, width,\n-\t\t\t\t0, win_info->origin.y);\n-\t      TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n+\t\t\t\t0, win_info->y);\n+\t      TUI_CMD_WIN->y = locator->y + 1;\n \t      if ((src_win_info->type == SRC_WIN\n \t\t   || src_win_info->type == DISASSEM_WIN))\n \t\t{\n@@ -1156,16 +1156,16 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t    }\n \t\t  first_win->resize (first_win->height + first_split_diff,\n \t\t\t\t     width,\n-\t\t\t\t     0, first_win->origin.y);\n+\t\t\t\t     0, first_win->y);\n \t\t  second_win->resize (second_win->height + second_split_diff,\n \t\t\t\t      width,\n \t\t\t\t      0, first_win->height - 1);\n \t\t  locator->resize (1, width,\n-\t\t\t\t   0, (second_win->origin.y\n+\t\t\t\t   0, (second_win->y\n \t\t\t\t       + second_win->height + 1));\n \n \t\t  TUI_CMD_WIN->resize (new_height, width,\n-\t\t\t\t       0, locator->origin.y + 1);\n+\t\t\t\t       0, locator->y + 1);\n \t\t}\n \t      else\n \t\t{\n@@ -1189,22 +1189,22 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t    first_win->resize (new_height, width, 0, 0);\n \t\t  else\n \t\t    first_win->resize (first_win->height, width, 0, 0);\n-\t\t  second_win->origin.y = first_win->height - 1;\n+\t\t  second_win->y = first_win->height - 1;\n \t\t  if (primary_win_info == second_win)\n \t\t    second_win->resize (new_height, width,\n \t\t\t\t\t0, first_win->height - 1);\n \t\t  else\n \t\t    second_win->resize (second_win->height, width,\n \t\t\t\t\t0, first_win->height - 1);\n \t\t  locator->resize (1, width,\n-\t\t\t\t   0, (second_win->origin.y\n+\t\t\t\t   0, (second_win->y\n \t\t\t\t       + second_win->height + 1));\n-\t\t  TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n+\t\t  TUI_CMD_WIN->y = locator->y + 1;\n \t\t  if ((TUI_CMD_WIN->height + diff) < 1)\n-\t\t    TUI_CMD_WIN->resize (1, width, 0, locator->origin.y + 1);\n+\t\t    TUI_CMD_WIN->resize (1, width, 0, locator->y + 1);\n \t\t  else\n \t\t    TUI_CMD_WIN->resize (TUI_CMD_WIN->height + diff, width,\n-\t\t\t\t\t 0, locator->origin.y + 1);\n+\t\t\t\t\t 0, locator->y + 1);\n \t\t}\n \t      if (src1 != nullptr && src1->content.empty ())\n \t\tsrc1->erase_source_content ();"
    },
    {
      "sha": "17be3e23e9a6430b34b3c1180a66939ce829e6dd",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=fb3184d8ee941e75d61b3d9ce8fcf7028c8877b8",
      "patch": "@@ -131,7 +131,7 @@ tui_win_info::check_and_display_highlight_if_needed ()\n void\n tui_gen_win_info::make_window ()\n {\n-  handle.reset (newwin (height, width, origin.y, origin.x));\n+  handle.reset (newwin (height, width, y, x));\n   if (handle != NULL)\n     scrollok (handle.get (), TRUE);\n }"
    }
  ]
}