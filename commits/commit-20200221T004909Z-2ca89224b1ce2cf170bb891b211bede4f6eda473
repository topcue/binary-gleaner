{
  "sha": "2ca89224b1ce2cf170bb891b211bede4f6eda473",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmNhODkyMjRiMWNlMmNmMTcwYmI4OTFiMjExYmVkZTRmNmVkYTQ3Mw==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-02-12T10:18:50Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-02-21T00:49:09Z"
    },
    "message": "RISC-V: Disable the CSR checking by default.\n\nAdd new .option `csr-check/no-csr-check` and GAS option `-mcsr-check\n/-mno-csr-check` to enbale/disable the CSR checking.  Disable the CSR\nchecking by default.\n\n\tgas/\n\t* config/tc-riscv.c: Add new .option and GAS options to enbale/disable\n\tthe CSR checking.  We disable the CSR checking by default.\n\t(reg_lookup_internal): Check the `riscv_opts.csr_check`\n\tbefore we doing the CSR checking.\n\n\t* doc/c-riscv.texi: Add description for the new .option and assembler\n\toptions.\n\n\t* testsuite/gas/riscv/priv-reg-fail-fext.d: Add `-mcsr-check` to enable\n\tthe CSR checking.\n\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.",
    "tree": {
      "sha": "084816dc38df12ac10a6d561c81aa2e6cc9f80f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/084816dc38df12ac10a6d561c81aa2e6cc9f80f3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2ca89224b1ce2cf170bb891b211bede4f6eda473",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ca89224b1ce2cf170bb891b211bede4f6eda473",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2ca89224b1ce2cf170bb891b211bede4f6eda473",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ca89224b1ce2cf170bb891b211bede4f6eda473/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 50,
    "deletions": 3
  },
  "files": [
    {
      "sha": "643f8c7e45b7aad714a522a33a17f60243d7560b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2ca89224b1ce2cf170bb891b211bede4f6eda473",
      "patch": "@@ -1,5 +1,19 @@\n 2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n \n+\t* config/tc-riscv.c (struct riscv_set_options): New field csr_check.\n+\t(riscv_opts): Initialize it.\n+\t(reg_lookup_internal): Check the `riscv_opts.csr_check`\n+\tbefore doing the CSR checking.\n+\t(enum options): Add OPTION_CSR_CHECK and OPTION_NO_CSR_CHECK.\n+\t(md_longopts): Add mcsr-check and mno-csr-check.\n+\t(md_parse_option): Handle new enum option values.\n+\t(s_riscv_option): Handle new long options.\n+\t* doc/c-riscv.texi: Add description for the new .option and assembler\n+\toptions.\n+\t* testsuite/gas/riscv/priv-reg-fail-fext.d: Add `-mcsr-check` to enable\n+\tthe CSR checking.\n+\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: Likewise.\n+\n \t* config/tc-riscv.c (csr_extra_hash): New.\n \t(enum riscv_csr_class): New enum.  Used to decide\n \twhether or not this CSR is legal in the current ISA string."
    },
    {
      "sha": "5972f02656d61698dd1f7c2ba53bf4ef4f98e6f9",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=2ca89224b1ce2cf170bb891b211bede4f6eda473",
      "patch": "@@ -83,6 +83,7 @@ struct riscv_set_options\n   int rve; /* Generate RVE code.  */\n   int relax; /* Emit relocs the linker is allowed to relax.  */\n   int arch_attr; /* Emit arch attribute.  */\n+  int csr_check; /* Enable the CSR checking.  */\n };\n \n static struct riscv_set_options riscv_opts =\n@@ -92,6 +93,7 @@ static struct riscv_set_options riscv_opts =\n   0,\t/* rve */\n   1,\t/* relax */\n   DEFAULT_RISCV_ATTR, /* arch_attr */\n+  0.\t/* csr_check */\n };\n \n static void\n@@ -572,7 +574,9 @@ reg_lookup_internal (const char *s, enum reg_class class)\n   if (riscv_opts.rve && class == RCLASS_GPR && DECODE_REG_NUM (r) > 15)\n     return -1;\n \n-  if (class == RCLASS_CSR && !reg_csr_lookup_internal (s))\n+  if (class == RCLASS_CSR\n+      && riscv_opts.csr_check\n+      && !reg_csr_lookup_internal (s))\n     return -1;\n \n   return DECODE_REG_NUM (r);\n@@ -2272,6 +2276,8 @@ enum options\n   OPTION_NO_RELAX,\n   OPTION_ARCH_ATTR,\n   OPTION_NO_ARCH_ATTR,\n+  OPTION_CSR_CHECK,\n+  OPTION_NO_CSR_CHECK,\n   OPTION_END_OF_ENUM\n };\n \n@@ -2286,6 +2292,8 @@ struct option md_longopts[] =\n   {\"mno-relax\", no_argument, NULL, OPTION_NO_RELAX},\n   {\"march-attr\", no_argument, NULL, OPTION_ARCH_ATTR},\n   {\"mno-arch-attr\", no_argument, NULL, OPTION_NO_ARCH_ATTR},\n+  {\"mcsr-check\", no_argument, NULL, OPTION_CSR_CHECK},\n+  {\"mno-csr-check\", no_argument, NULL, OPTION_NO_CSR_CHECK},\n \n   {NULL, no_argument, NULL, 0}\n };\n@@ -2364,6 +2372,14 @@ md_parse_option (int c, const char *arg)\n       riscv_opts.arch_attr = FALSE;\n       break;\n \n+    case OPTION_CSR_CHECK:\n+      riscv_opts.csr_check = TRUE;\n+      break;\n+\n+    case OPTION_NO_CSR_CHECK:\n+      riscv_opts.csr_check = FALSE;\n+      break;\n+\n     default:\n       return 0;\n     }\n@@ -2756,6 +2772,10 @@ s_riscv_option (int x ATTRIBUTE_UNUSED)\n     riscv_opts.relax = TRUE;\n   else if (strcmp (name, \"norelax\") == 0)\n     riscv_opts.relax = FALSE;\n+  else if (strcmp (name, \"csr-check\") == 0)\n+    riscv_opts.csr_check = TRUE;\n+  else if (strcmp (name, \"no-csr-check\") == 0)\n+    riscv_opts.csr_check = FALSE;\n   else if (strcmp (name, \"push\") == 0)\n     {\n       struct riscv_option_stack *s;"
    },
    {
      "sha": "599b5cf8afeb8b0d027b3ce4632e8d400eb9f6f6",
      "filename": "gas/doc/c-riscv.texi",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/doc/c-riscv.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/doc/c-riscv.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-riscv.texi?ref=2ca89224b1ce2cf170bb891b211bede4f6eda473",
      "patch": "@@ -73,6 +73,15 @@ specification.\n Don't generate the default riscv elf attribute section if the .attribute\n directives are not set.\n \n+@cindex @samp{-mcsr-check} option, RISC-V\n+@item -mcsr-check\n+Enable the CSR checking for the ISA-dependent CRS and the read-only CSR.\n+The ISA-dependent CSR are only valid when the specific ISA is set.  The\n+read-only CSR can not be written by the CSR instructions.\n+\n+@cindex @samp{-mno-csr-check} option, RISC-V\n+@item -mno-csr-check\n+Don't do CSR cheching.\n @end table\n @c man end\n \n@@ -174,6 +183,10 @@ opportunistically relax some code sequences, but sometimes this behavior is not\n desirable.\n @end table\n \n+@item csr-check\n+@itemx no-csr-check\n+Enables or disables the CSR checking.\n+\n @cindex INSN directives\n @item .insn @var{value}\n @itemx .insn @var{value}"
    },
    {
      "sha": "da5356636934b73b397e728faa45e3188506107c",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-fext.d?ref=2ca89224b1ce2cf170bb891b211bede4f6eda473",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv32i\n+#as: -march=rv32i -mcsr-check\n #source: priv-reg.s\n #warning_output: priv-reg-fail-fext.l"
    },
    {
      "sha": "d71b2615c5f1463f347f9a92d070f664f9db4890",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2ca89224b1ce2cf170bb891b211bede4f6eda473/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d?ref=2ca89224b1ce2cf170bb891b211bede4f6eda473",
      "patch": "@@ -1,3 +1,3 @@\n-#as: -march=rv64if\n+#as: -march=rv64if -mcsr-check\n #source: priv-reg.s\n #warning_output: priv-reg-fail-rv32-only.l"
    }
  ]
}