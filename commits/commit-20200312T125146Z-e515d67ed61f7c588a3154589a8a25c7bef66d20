{
  "sha": "e515d67ed61f7c588a3154589a8a25c7bef66d20",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTUxNWQ2N2VkNjFmN2M1ODhhMzE1NDU4OWE4YTI1YzdiZWY2NmQyMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T12:51:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-12T12:51:46Z"
    },
    "message": "[gdb/testsuite] Fix internal buffer full error in gdb.fortran/module.exp\n\nWith test-case gdb.fortran/module.exp, I run into:\n...\nPASS: gdb.fortran/module.exp: fully qualified name of DW_TAG_constant\nERROR: internal buffer is full.\nUNRESOLVED: gdb.fortran/module.exp: info variables -n\n...\n\nFix this by using exp_continue while matching the output of \"info variable\n-n\".\n\nTested on x86_64-linux, using make targets check and check-read1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-12  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.fortran/module.exp: Use exp_continue during matching of output\n\tof \"info variable -n\".",
    "tree": {
      "sha": "1ea9e2c71a3bf45c08d1f7b04dbd04d03daeb9a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ea9e2c71a3bf45c08d1f7b04dbd04d03daeb9a4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e515d67ed61f7c588a3154589a8a25c7bef66d20",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e515d67ed61f7c588a3154589a8a25c7bef66d20",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e515d67ed61f7c588a3154589a8a25c7bef66d20",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e515d67ed61f7c588a3154589a8a25c7bef66d20/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "307eafd8df3ec820bb62a71324aeed06b86ec050",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/307eafd8df3ec820bb62a71324aeed06b86ec050",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/307eafd8df3ec820bb62a71324aeed06b86ec050"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 33,
    "deletions": 9
  },
  "files": [
    {
      "sha": "f6b1a562c56736f5e9e20782b5dbe7490f5807a7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e515d67ed61f7c588a3154589a8a25c7bef66d20/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e515d67ed61f7c588a3154589a8a25c7bef66d20/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e515d67ed61f7c588a3154589a8a25c7bef66d20",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-12  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.fortran/module.exp: Use exp_continue during matching of output\n+\tof \"info variable -n\".\n+\n 2020-03-12  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.dwarf2/dw2-ranges-base.exp: Limit \"maint info line-table\" to"
    },
    {
      "sha": "1c269e2fedfe70f2cd813cf7e0da445d6a091c5a",
      "filename": "gdb/testsuite/gdb.fortran/module.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 9,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e515d67ed61f7c588a3154589a8a25c7bef66d20/gdb/testsuite/gdb.fortran/module.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e515d67ed61f7c588a3154589a8a25c7bef66d20/gdb/testsuite/gdb.fortran/module.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/module.exp?ref=e515d67ed61f7c588a3154589a8a25c7bef66d20",
      "patch": "@@ -37,11 +37,8 @@ if ![runto MAIN__] then {\n set int_type [fortran_int4]\n \n # Test 'info variables' can find module variables.\n-gdb_test \"info variables -n\" \\\n+set mod_re \\\n     [multi_line \\\n-\t \"All defined variables:\" \\\n-\t \"\" \\\n-\t \"File .*$srcfile:\" \\\n \t \"18:\\[ \\t\\]+${int_type} mod1::var_const;\" \\\n \t \"17:\\[ \\t\\]+${int_type} mod1::var_i;\" \\\n \t \"23:\\[ \\t\\]+${int_type} mod2::var_i;\" \\\n@@ -53,11 +50,33 @@ gdb_test \"info variables -n\" \\\n \t \"33:\\[ \\t\\]+${int_type} modmany::var_c;\" \\\n \t \"33:\\[ \\t\\]+${int_type} modmany::var_i;\" \\\n \t \"37:\\[ \\t\\]+${int_type} moduse::var_x;\" \\\n-\t \"37:\\[ \\t\\]+${int_type} moduse::var_y;(\" \\\n-\t \"\" \\\n-\t \"File .*:(\" \\\n-\t \"$decimal:.*)+)*\"]\n-\n+\t \"37:\\[ \\t\\]+${int_type} moduse::var_y;\"]\n+\n+set state 0\n+gdb_test_multiple \"info variables -n\" \"\" {\n+    -re \"\\r\\nAll defined variables:\" {\n+\tif { $state == 0 } { set state 1 }\n+\texp_continue\n+    }\n+    -re \"\\r\\n\\r\\nFile .*[string_to_regexp $srcfile]:\" {\n+\tif { $state == 1 } { set state 2 }\n+\texp_continue\n+    }\n+    -re $mod_re\t{\n+\tif { $state == 2 } { set state 3 }\n+\texp_continue\n+    }\n+    -re \"\\r\\n\\r\\nFile \\[^\\r\\n\\]*:\" {\n+\texp_continue\n+    }\n+    -re -wrap \"\" {\n+\tif { $state == 3} {\n+\t    pass $gdb_test_name\n+\t} else {\n+\t    fail $gdb_test_name\n+\t}\n+    }\n+}\n \n # Do not use simple single-letter names as GDB would pick up for expectedly\n # nonexisting symbols some static variables from system libraries debuginfos."
    }
  ]
}