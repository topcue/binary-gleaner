{
  "sha": "7a8a5d47c37832da7203f5c54d41623c2f065b22",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2E4YTVkNDdjMzc4MzJkYTcyMDNmNWM1NGQ0MTYyM2MyZjA2NWIyMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:47:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:58:56Z"
    },
    "message": "Use htab_up in linespec.c\n\nThis changes linespec.c to use htab_up rather than explicit calls to\nhtab_delete.  Note that a use still exists in this file, because\nlinespec_state hasn't been converted to have a real destructor.\n\ngdb/ChangeLog\n2020-09-17  Tom Tromey  <tom@tromey.com>\n\n\t* linespec.c (class decode_compound_collector)\n\t<~decode_compound_collector>: Remove.\n\t<m_unique_syms>: Now htab_up.\n\t(decode_compound_collector::operator ()): Update.\n\t(class symtab_collector) <~symtab_collector>: Remove.\n\t<m_symtab_table>: Now htab_up.\n\t(symtab_collector::operator ()): Update.",
    "tree": {
      "sha": "7d5f121c5426d050a369efb9a9bffab947ccebfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7d5f121c5426d050a369efb9a9bffab947ccebfd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a8a5d47c37832da7203f5c54d41623c2f065b22",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a8a5d47c37832da7203f5c54d41623c2f065b22",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a8a5d47c37832da7203f5c54d41623c2f065b22",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a8a5d47c37832da7203f5c54d41623c2f065b22/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "99032cfcc6c12006ba6184318c5df5b08a65e58a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99032cfcc6c12006ba6184318c5df5b08a65e58a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/99032cfcc6c12006ba6184318c5df5b08a65e58a"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 19,
    "deletions": 21
  },
  "files": [
    {
      "sha": "837e1a4090c82fd1a8d823d1da50c73ebb1725d5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a8a5d47c37832da7203f5c54d41623c2f065b22/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a8a5d47c37832da7203f5c54d41623c2f065b22/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7a8a5d47c37832da7203f5c54d41623c2f065b22",
      "patch": "@@ -1,3 +1,13 @@\n+2020-09-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* linespec.c (class decode_compound_collector)\n+\t<~decode_compound_collector>: Remove.\n+\t<m_unique_syms>: Now htab_up.\n+\t(decode_compound_collector::operator ()): Update.\n+\t(class symtab_collector) <~symtab_collector>: Remove.\n+\t<m_symtab_table>: Now htab_up.\n+\t(symtab_collector::operator ()): Update.\n+\n 2020-09-17  Tom Tromey  <tom@tromey.com>\n \n \t* filename-seen-cache.c (filename_seen_cache::filename_seen_cache)"
    },
    {
      "sha": "b05b8ad89a860850e003498f9b101903ee84bdfa",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 9,
      "deletions": 21,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a8a5d47c37832da7203f5c54d41623c2f065b22/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a8a5d47c37832da7203f5c54d41623c2f065b22/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=7a8a5d47c37832da7203f5c54d41623c2f065b22",
      "patch": "@@ -3453,16 +3453,10 @@ class decode_compound_collector\n {\n public:\n   decode_compound_collector ()\n+    : m_unique_syms (htab_create_alloc (1, htab_hash_pointer,\n+\t\t\t\t\thtab_eq_pointer, NULL,\n+\t\t\t\t\txcalloc, xfree))\n   {\n-    m_unique_syms = htab_create_alloc (1, htab_hash_pointer,\n-\t\t\t\t       htab_eq_pointer, NULL,\n-\t\t\t\t       xcalloc, xfree);\n-  }\n-\n-  ~decode_compound_collector ()\n-  {\n-    if (m_unique_syms != NULL)\n-      htab_delete (m_unique_syms);\n   }\n \n   /* Return all symbols collected.  */\n@@ -3477,7 +3471,7 @@ class decode_compound_collector\n private:\n   /* A hash table of all symbols we found.  We use this to avoid\n      adding any symbol more than once.  */\n-  htab_t m_unique_syms;\n+  htab_up m_unique_syms;\n \n   /* The result vector.  */\n   std::vector<block_symbol>  m_symbols;\n@@ -3500,7 +3494,7 @@ decode_compound_collector::operator () (block_symbol *bsym)\n       && t->code () != TYPE_CODE_NAMESPACE)\n     return true; /* Continue iterating.  */\n \n-  slot = htab_find_slot (m_unique_syms, sym, INSERT);\n+  slot = htab_find_slot (m_unique_syms.get (), sym, INSERT);\n   if (!*slot)\n     {\n       *slot = sym;\n@@ -3730,15 +3724,9 @@ class symtab_collector\n {\n public:\n   symtab_collector ()\n+    : m_symtab_table (htab_create (1, htab_hash_pointer, htab_eq_pointer,\n+\t\t\t\t   NULL))\n   {\n-    m_symtab_table = htab_create (1, htab_hash_pointer, htab_eq_pointer,\n-\t\t\t\t  NULL);\n-  }\n-\n-  ~symtab_collector ()\n-  {\n-    if (m_symtab_table != NULL)\n-      htab_delete (m_symtab_table);\n   }\n \n   /* Callable as a symbol_found_callback_ftype callback.  */\n@@ -3755,15 +3743,15 @@ class symtab_collector\n   std::vector<symtab *> m_symtabs;\n \n   /* This is used to ensure the symtabs are unique.  */\n-  htab_t m_symtab_table;\n+  htab_up m_symtab_table;\n };\n \n bool\n symtab_collector::operator () (struct symtab *symtab)\n {\n   void **slot;\n \n-  slot = htab_find_slot (m_symtab_table, symtab, INSERT);\n+  slot = htab_find_slot (m_symtab_table.get (), symtab, INSERT);\n   if (!*slot)\n     {\n       *slot = symtab;"
    }
  ]
}