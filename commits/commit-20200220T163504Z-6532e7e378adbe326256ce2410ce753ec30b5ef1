{
  "sha": "6532e7e378adbe326256ce2410ce753ec30b5ef1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjUzMmU3ZTM3OGFkYmUzMjYyNTZjZTI0MTBjZTc1M2VjMzBiNWVmMQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:52Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:04Z"
    },
    "message": "gdbserver: turn target op 'wait' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's wait op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\n\tUpdate the derived classes and callers below.\n\n\t* target.cc (target_wait): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_wait): Turn into ...\n\t(linux_process_target::wait): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t(lynx_wait): Turn into ...\n\t(lynx_process_target::wait): ... this.\n\t* lynx-low.h (class lynx_process_target): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_wait): Turn into ...\n\t(nto_process_target::wait): ... this.\n\t* nto-low.h (class nto_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_wait): Turn into ...\n\t(win32_process_target::wait): ... this.\n\t(do_initial_child_stuff): Update.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "934abaeef5e7886a8b3a3da762db7fc3290ed160",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/934abaeef5e7886a8b3a3da762db7fc3290ed160"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6532e7e378adbe326256ce2410ce753ec30b5ef1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6532e7e378adbe326256ce2410ce753ec30b5ef1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6532e7e378adbe326256ce2410ce753ec30b5ef1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6532e7e378adbe326256ce2410ce753ec30b5ef1/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e4d7e35fbd551e61cf72adae4806aa8c5230a1a"
    }
  ],
  "stats": {
    "total": 104,
    "additions": 71,
    "deletions": 33
  },
  "files": [
    {
      "sha": "e0ba3077dfa324e239565653eeb016ae8e86e59d",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -1,3 +1,32 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's wait op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* target.cc (target_wait): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_wait): Turn into ...\n+\t(linux_process_target::wait): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t(lynx_wait): Turn into ...\n+\t(lynx_process_target::wait): ... this.\n+\t* lynx-low.h (class lynx_process_target): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_wait): Turn into ...\n+\t(nto_process_target::wait): ... this.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_wait): Turn into ...\n+\t(win32_process_target::wait): ... this.\n+\t(do_initial_child_stuff): Update.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's resume op into a method of"
    },
    {
      "sha": "49511125897dcad50055cfefac91f13af6069a3a",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -3833,9 +3833,10 @@ async_file_mark (void)\n      be awakened anyway.  */\n }\n \n-static ptid_t\n-linux_wait (ptid_t ptid,\n-\t    struct target_waitstatus *ourstatus, int target_options)\n+ptid_t\n+linux_process_target::wait (ptid_t ptid,\n+\t\t\t    target_waitstatus *ourstatus,\n+\t\t\t    int target_options)\n {\n   ptid_t event_ptid;\n \n@@ -7358,7 +7359,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_wait,\n   linux_fetch_registers,\n   linux_store_registers,\n   linux_prepare_to_access_memory,"
    },
    {
      "sha": "d1d89106e50c50178ebf8a9259912edb342e74fa",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -288,6 +288,9 @@ class linux_process_target : public process_target\n   bool thread_alive (ptid_t pid) override;\n \n   void resume (thread_resume *resume_info, size_t n) override;\n+\n+  ptid_t wait (ptid_t ptid, target_waitstatus *status,\n+\t       int options) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "f38c3110cbd69853d349b1b42fb5b4d12b6c45a0",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -505,12 +505,13 @@ lynx_wait_1 (ptid_t ptid, struct target_waitstatus *status, int options)\n /* A wrapper around lynx_wait_1 that also prints debug traces when\n    such debug traces have been activated.  */\n \n-static ptid_t\n-lynx_wait (ptid_t ptid, struct target_waitstatus *status, int options)\n+ptid_t\n+lynx_process_target::wait (ptid_t ptid, target_waitstatus *status,\n+\t\t\t   int options)\n {\n   ptid_t new_ptid;\n \n-  lynx_debug (\"lynx_wait (pid = %d, tid = %ld)\",\n+  lynx_debug (\"wait (pid = %d, tid = %ld)\",\n               lynx_ptid_get_pid (ptid), lynx_ptid_get_tid (ptid));\n   new_ptid = lynx_wait_1 (ptid, status, options);\n   lynx_debug (\"          -> (pid=%d, tid=%ld, status->kind = %d)\",\n@@ -726,7 +727,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  lynx_wait,\n   lynx_fetch_registers,\n   lynx_store_registers,\n   NULL,  /* prepare_to_access_memory */"
    },
    {
      "sha": "35714713fd2d4e5fe1ebed218195a7808df40a11",
      "filename": "gdbserver/lynx-low.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/lynx-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/lynx-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.h?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -74,6 +74,9 @@ class lynx_process_target : public process_target\n   bool thread_alive (ptid_t pid) override;\n \n   void resume (thread_resume *resume_info, size_t n) override;\n+\n+  ptid_t wait (ptid_t ptid, target_waitstatus *status,\n+\t       int options) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "6cac6eb4329f96307267e5fa1797cc9744b6f9ca",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -518,9 +518,9 @@ nto_process_target::resume (thread_resume *resume_info, size_t n)\n \n    Return ptid of thread that caused the event.  */\n \n-static ptid_t\n-nto_wait (ptid_t ptid,\n-\t  struct target_waitstatus *ourstatus, int target_options)\n+ptid_t\n+nto_process_target::wait (ptid_t ptid, target_waitstatus *ourstatus,\n+\t\t\t  int target_options)\n {\n   sigset_t set;\n   siginfo_t info;\n@@ -941,7 +941,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  nto_wait,\n   nto_fetch_registers,\n   nto_store_registers,\n   NULL, /* prepare_to_access_memory */"
    },
    {
      "sha": "94837ab605134ee86f6e8c1d20617e36009748dd",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -64,6 +64,9 @@ class nto_process_target : public process_target\n   bool thread_alive (ptid_t pid) override;\n \n   void resume (thread_resume *resume_info, size_t n) override;\n+\n+  ptid_t wait (ptid_t ptid, target_waitstatus *status,\n+\t       int options) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "b73c4465f1c347641ad8b91d6c40a67518e588fc",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -223,7 +223,7 @@ target_stop_and_wait (ptid_t ptid)\n ptid_t\n target_wait (ptid_t ptid, struct target_waitstatus *status, int options)\n {\n-  return (*the_target->wait) (ptid, status, options);\n+  return the_target->pt->wait (ptid, status, options);\n }\n \n /* See target/target.h.  */"
    },
    {
      "sha": "16daf93440ed00ee3d5585983ffd34cc9474fabd",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -70,19 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Wait for the inferior process or thread to change state.  Store\n-     status through argument pointer STATUS.\n-\n-     PTID = -1 to wait for any pid to do something, PTID(pid,0,0) to\n-     wait for any thread of process pid to do something.  Return ptid\n-     of child, or -1 in case of error; store status through argument\n-     pointer STATUS.  OPTIONS is a bit set of options defined as\n-     TARGET_W* above.  If options contains TARGET_WNOHANG and there's\n-     no child stop to report, return is\n-     null_ptid/TARGET_WAITKIND_IGNORE.  */\n-\n-  ptid_t (*wait) (ptid_t ptid, struct target_waitstatus *status, int options);\n-\n   /* Fetch registers from the inferior process.\n \n      If REGNO is -1, fetch all registers; otherwise, fetch at least REGNO.  */\n@@ -482,6 +469,19 @@ class process_target\n \n   /* Resume the inferior process.  */\n   virtual void resume (thread_resume *resume_info, size_t n) = 0;\n+\n+  /* Wait for the inferior process or thread to change state.  Store\n+     status through argument pointer STATUS.\n+\n+     PTID = -1 to wait for any pid to do something, PTID(pid,0,0) to\n+     wait for any thread of process pid to do something.  Return ptid\n+     of child, or -1 in case of error; store status through argument\n+     pointer STATUS.  OPTIONS is a bit set of options defined as\n+     TARGET_W* above.  If options contains TARGET_WNOHANG and there's\n+     no child stop to report, return is\n+     null_ptid/TARGET_WAITKIND_IGNORE.  */\n+  virtual ptid_t wait (ptid_t ptid, target_waitstatus *status,\n+\t\t       int options) = 0;\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "e7df444451df8588952396d81bebd047a60aa90d",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 5,
      "deletions": 7,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -103,8 +103,6 @@ typedef BOOL (WINAPI *winapi_DebugSetProcessKillOnExit) (BOOL KillOnExit);\n typedef BOOL (WINAPI *winapi_DebugBreakProcess) (HANDLE);\n typedef BOOL (WINAPI *winapi_GenerateConsoleCtrlEvent) (DWORD, DWORD);\n \n-static ptid_t win32_wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n-\t\t\t  int options);\n #ifndef _WIN32_WCE\n static void win32_add_all_dlls (void);\n #endif\n@@ -379,7 +377,7 @@ do_initial_child_stuff (HANDLE proch, DWORD pid, int attached)\n     {\n       struct target_waitstatus status;\n \n-      win32_wait (minus_one_ptid, &status, 0);\n+      the_target->pt->wait (minus_one_ptid, &status, 0);\n \n       /* Note win32_wait doesn't return thread events.  */\n       if (status.kind != TARGET_WAITKIND_LOADED)\n@@ -714,7 +712,7 @@ win32_process_target::create_inferior (const char *program,\n \n   /* Wait till we are at 1st instruction in program, return new pid\n      (assuming success).  */\n-  cs.last_ptid = win32_wait (ptid_t (current_process_id), &cs.last_status, 0);\n+  cs.last_ptid = wait (ptid_t (current_process_id), &cs.last_status, 0);\n \n   /* Necessary for handle_v_kill.  */\n   signal_pid = current_process_id;\n@@ -1610,8 +1608,9 @@ get_child_debug_event (struct target_waitstatus *ourstatus)\n /* Wait for the inferior process to change state.\n    STATUS will be filled in with a response code to send to GDB.\n    Returns the signal which caused the process to stop. */\n-static ptid_t\n-win32_wait (ptid_t ptid, struct target_waitstatus *ourstatus, int options)\n+ptid_t\n+win32_process_target::wait (ptid_t ptid, target_waitstatus *ourstatus,\n+\t\t\t    int options)\n {\n   struct regcache *regcache;\n \n@@ -1838,7 +1837,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_wait,\n   win32_fetch_inferior_registers,\n   win32_store_inferior_registers,\n   NULL, /* prepare_to_access_memory */"
    },
    {
      "sha": "9c74ffa9c585cc497f14963cd52795749a6badf2",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6532e7e378adbe326256ce2410ce753ec30b5ef1/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=6532e7e378adbe326256ce2410ce753ec30b5ef1",
      "patch": "@@ -123,6 +123,9 @@ class win32_process_target : public process_target\n   bool thread_alive (ptid_t pid) override;\n \n   void resume (thread_resume *resume_info, size_t n) override;\n+\n+  ptid_t wait (ptid_t ptid, target_waitstatus *status,\n+\t       int options) override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}