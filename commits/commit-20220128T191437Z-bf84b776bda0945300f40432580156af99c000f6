{
  "sha": "bf84b776bda0945300f40432580156af99c000f6",
  "node_id": "C_kwDOANOeidoAKGJmODRiNzc2YmRhMDk0NTMwMGY0MDQzMjU4MDE1NmFmOTljMDAwZjY",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "message": "Remove support for pre-5.0 FreeBSD/i386 signal trampolines.\n\nThe last relevant release (FreeBSD 4.11) was released in January of\n2005.",
    "tree": {
      "sha": "094fff91fe66d49cf4ae852258837bb88f89cf5c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/094fff91fe66d49cf4ae852258837bb88f89cf5c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf84b776bda0945300f40432580156af99c000f6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf84b776bda0945300f40432580156af99c000f6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf84b776bda0945300f40432580156af99c000f6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf84b776bda0945300f40432580156af99c000f6/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "187365caaad2d020b335485c50b0fcd00c5e5b48",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/187365caaad2d020b335485c50b0fcd00c5e5b48",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/187365caaad2d020b335485c50b0fcd00c5e5b48"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 9,
    "deletions": 84
  },
  "files": [
    {
      "sha": "8c19b44724350f98bacc03b374afef12b29a28d7",
      "filename": "gdb/i386-fbsd-tdep.c",
      "status": "modified",
      "additions": 9,
      "deletions": 84,
      "changes": 93,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf84b776bda0945300f40432580156af99c000f6/gdb/i386-fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf84b776bda0945300f40432580156af99c000f6/gdb/i386-fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-fbsd-tdep.c?ref=bf84b776bda0945300f40432580156af99c000f6",
      "patch": "@@ -37,12 +37,10 @@\n /* Return whether THIS_FRAME corresponds to a FreeBSD sigtramp\n    routine.  */\n \n-/* FreeBSD/i386 supports three different signal trampolines, one for\n-   versions before 4.0, a second for 4.x, and a third for 5.0 and\n-   later.  To complicate matters, FreeBSD/i386 binaries running under\n-   an amd64 kernel use a different set of trampolines.  These\n-   trampolines differ from the i386 kernel trampolines in that they\n-   omit a middle section that conditionally restores %gs.  */\n+/* FreeBSD/i386 binaries running under an amd64 kernel use a different\n+   trampoline This trampoline differs from the i386 kernel trampoline\n+   in that it omits a middle section that conditionally restores\n+   %gs.  */\n \n static const gdb_byte i386fbsd_sigtramp_start[] =\n {\n@@ -65,62 +63,6 @@ static const gdb_byte i386fbsd_sigtramp_end[] =\n   0xcd, 0x80\t\t\t/* int\t   $0x80 */\n };\n \n-static const gdb_byte i386fbsd_freebsd4_sigtramp_start[] =\n-{\n-  0x8d, 0x44, 0x24, 0x14,\t/* lea\t   SIGF_UC4(%esp),%eax */\n-  0x50\t\t\t\t/* pushl   %eax */\n-};\n-\n-static const gdb_byte i386fbsd_freebsd4_sigtramp_middle[] =\n-{\n-  0xf7, 0x40, 0x54, 0x00, 0x00, 0x02, 0x00,\n-\t\t\t\t/* testl   $PSL_VM,UC4_EFLAGS(%eax) */\n-  0x75, 0x03,\t\t\t/* jne\t   +3 */\n-  0x8e, 0x68, 0x14\t\t/* mov\t   UC4_GS(%eax),%gs */\n-};\n-\n-static const gdb_byte i386fbsd_freebsd4_sigtramp_end[] =\n-{\n-  0xb8, 0x58, 0x01, 0x00, 0x00, /* movl    $344,%eax */\n-  0x50,\t\t\t/* pushl   %eax */\n-  0xcd, 0x80\t\t\t/* int\t   $0x80 */\n-};\n-\n-static const gdb_byte i386fbsd_osigtramp_start[] =\n-{\n-  0x8d, 0x44, 0x24, 0x14,\t/* lea\t   SIGF_SC(%esp),%eax */\n-  0x50\t\t\t\t/* pushl   %eax */\n-};\n-\n-static const gdb_byte i386fbsd_osigtramp_middle[] =\n-{\n-  0xf7, 0x40, 0x18, 0x00, 0x00, 0x02, 0x00,\n-\t\t\t\t/* testl   $PSL_VM,SC_PS(%eax) */\n-  0x75, 0x03,\t\t\t/* jne\t   +3 */\n-  0x8e, 0x68, 0x44\t\t/* mov\t   SC_GS(%eax),%gs */\n-};\n-\n-static const gdb_byte i386fbsd_osigtramp_end[] =\n-{\n-  0xb8, 0x67, 0x00, 0x00, 0x00, /* movl    $103,%eax */\n-  0x50,\t\t\t/* pushl   %eax */\n-  0xcd, 0x80\t\t\t/* int\t   $0x80 */\n-};\n-\n-/* The three different trampolines are all the same size.  */\n-gdb_static_assert (sizeof i386fbsd_sigtramp_start\n-\t\t   == sizeof i386fbsd_freebsd4_sigtramp_start);\n-gdb_static_assert (sizeof i386fbsd_sigtramp_start\n-\t\t   == sizeof i386fbsd_osigtramp_start);\n-gdb_static_assert (sizeof i386fbsd_sigtramp_middle\n-\t\t   == sizeof i386fbsd_freebsd4_sigtramp_middle);\n-gdb_static_assert (sizeof i386fbsd_sigtramp_middle\n-\t\t   == sizeof i386fbsd_osigtramp_middle);\n-gdb_static_assert (sizeof i386fbsd_sigtramp_end\n-\t\t   == sizeof i386fbsd_freebsd4_sigtramp_end);\n-gdb_static_assert (sizeof i386fbsd_sigtramp_end\n-\t\t   == sizeof i386fbsd_osigtramp_end);\n-\n /* We assume that the middle is the largest chunk below.  */\n gdb_static_assert (sizeof i386fbsd_sigtramp_middle\n \t\t   > sizeof i386fbsd_sigtramp_start);\n@@ -132,31 +74,13 @@ i386fbsd_sigtramp_p (struct frame_info *this_frame)\n {\n   CORE_ADDR pc = get_frame_pc (this_frame);\n   gdb_byte buf[sizeof i386fbsd_sigtramp_middle];\n-  const gdb_byte *middle, *end;\n \n   /* Look for a matching start.  */\n   if (!safe_frame_unwind_memory (this_frame, pc,\n \t\t\t\t {buf, sizeof i386fbsd_sigtramp_start}))\n     return 0;\n   if (memcmp (buf, i386fbsd_sigtramp_start, sizeof i386fbsd_sigtramp_start)\n-      == 0)\n-    {\n-      middle = i386fbsd_sigtramp_middle;\n-      end = i386fbsd_sigtramp_end;\n-    }\n-  else if (memcmp (buf, i386fbsd_freebsd4_sigtramp_start,\n-\t\t   sizeof i386fbsd_freebsd4_sigtramp_start) == 0)\n-    {\n-      middle = i386fbsd_freebsd4_sigtramp_middle;\n-      end = i386fbsd_freebsd4_sigtramp_end;\n-    }\n-  else if (memcmp (buf, i386fbsd_osigtramp_start,\n-\t\t   sizeof i386fbsd_osigtramp_start) == 0)\n-    {\n-      middle = i386fbsd_osigtramp_middle;\n-      end = i386fbsd_osigtramp_end;\n-    }\n-  else\n+      != 0)\n     return 0;\n \n   /* Since the end is shorter than the middle, check for a matching end\n@@ -165,22 +89,23 @@ i386fbsd_sigtramp_p (struct frame_info *this_frame)\n   if (!safe_frame_unwind_memory (this_frame, pc,\n \t\t\t\t {buf, sizeof i386fbsd_sigtramp_end}))\n     return 0;\n-  if (memcmp (buf, end, sizeof i386fbsd_sigtramp_end) == 0)\n+  if (memcmp (buf, i386fbsd_sigtramp_end, sizeof i386fbsd_sigtramp_end) == 0)\n     return 1;\n \n   /* If the end didn't match, check for a matching middle.  */\n   if (!safe_frame_unwind_memory (this_frame, pc,\n \t\t\t\t {buf, sizeof i386fbsd_sigtramp_middle}))\n     return 0;\n-  if (memcmp (buf, middle, sizeof i386fbsd_sigtramp_middle) != 0)\n+  if (memcmp (buf, i386fbsd_sigtramp_middle, sizeof i386fbsd_sigtramp_middle)\n+      != 0)\n     return 0;\n \n   /* The middle matched, check for a matching end.  */\n   pc += sizeof i386fbsd_sigtramp_middle;\n   if (!safe_frame_unwind_memory (this_frame, pc,\n \t\t\t\t {buf, sizeof i386fbsd_sigtramp_end}))\n     return 0;\n-  if (memcmp (buf, end, sizeof i386fbsd_sigtramp_end) != 0)\n+  if (memcmp (buf, i386fbsd_sigtramp_end, sizeof i386fbsd_sigtramp_end) != 0)\n     return 0;\n \n   return 1;"
    }
  ]
}