{
  "sha": "e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTFjNmNmNjE4Y2JlZWJiYWZkMzRhZmM1ZWU5MjFmY2JmNzA2MWJmYQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-14T10:15:53Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-15T01:59:21Z"
    },
    "message": "PR25384, PowerPC64 ELFv1 copy relocs against function symbols\n\nFunction symbols of course don't normally want .dynbss copies but\nwith some old versions of gcc they are needed to copy the function\ndescriptor.  This patch restricts the cases where they are useful to\ncompilers using dot-symbols, and enables the warning regardless of\nwhether a PLT entry is emitted in the executable.  PLTs in shared\nlibraries are affected by a .dynbss copy in the executable.\n\nbfd/\n\tPR 25384\n\t* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.\n\t(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies\n\tof function symbols unless dot symbols are present.  Do warn\n\twhenever one is created, regardles of whether a PLT entry is\n\talso emitted for the function symbol.\nld/\n\t* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.\n\t* testsuite/ld-powerpc/funref.s: Align func_tab.\n\t* testsuite/ld-powerpc/funref2.s: Likewise.\n\t* testsuite/ld-powerpc/funv1.s: Add dot symbols.",
    "tree": {
      "sha": "0b4df69086860715c0142805e45013a0ce383555",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0b4df69086860715c0142805e45013a0ce383555"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ff47f4f06d296b672337e2c7363a745cd2725f58",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ff47f4f06d296b672337e2c7363a745cd2725f58",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ff47f4f06d296b672337e2c7363a745cd2725f58"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 58,
    "deletions": 27
  },
  "files": [
    {
      "sha": "21f6769ba4637bb578959c2680f4f2dea2404f70",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25384\n+\t* elf64-ppc.c (ELIMINATE_COPY_RELOCS): Update comment.\n+\t(ppc64_elf_adjust_dynamic_symbol): Don't allow .dynbss copies\n+\tof function symbols unless dot symbols are present.  Do warn\n+\twhenever one is created, regardles of whether a PLT entry is\n+\talso emitted for the function symbol.\n+\n 2020-01-14  Alan Modra  <amodra@gmail.com>\n \n \t* som.c (som_bfd_count_ar_symbols): Error when file position"
    },
    {
      "sha": "8319a21940880020a543c7d40439b24418fd6b85",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 29,
      "deletions": 19,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -2788,20 +2788,20 @@ must_be_dyn_reloc (struct bfd_link_info *info,\n }\n \n /* If ELIMINATE_COPY_RELOCS is non-zero, the linker will try to avoid\n-   copying dynamic variables from a shared lib into an app's dynbss\n+   copying dynamic variables from a shared lib into an app's .dynbss\n    section, and instead use a dynamic relocation to point into the\n-   shared lib.  With code that gcc generates, it's vital that this be\n-   enabled;  In the PowerPC64 ABI, the address of a function is actually\n-   the address of a function descriptor, which resides in the .opd\n-   section.  gcc uses the descriptor directly rather than going via the\n-   GOT as some other ABI's do, which means that initialized function\n-   pointers must reference the descriptor.  Thus, a function pointer\n-   initialized to the address of a function in a shared library will\n-   either require a copy reloc, or a dynamic reloc.  Using a copy reloc\n-   redefines the function descriptor symbol to point to the copy.  This\n-   presents a problem as a plt entry for that function is also\n-   initialized from the function descriptor symbol and the copy reloc\n-   may not be initialized first.  */\n+   shared lib.  With code that gcc generates it is vital that this be\n+   enabled;  In the PowerPC64 ELFv1 ABI the address of a function is\n+   actually the address of a function descriptor which resides in the\n+   .opd section.  gcc uses the descriptor directly rather than going\n+   via the GOT as some other ABIs do, which means that initialized\n+   function pointers reference the descriptor.  Thus, a function\n+   pointer initialized to the address of a function in a shared\n+   library will either require a .dynbss copy and a copy reloc, or a\n+   dynamic reloc.  Using a .dynbss copy redefines the function\n+   descriptor symbol to point to the copy.  This presents a problem as\n+   a PLT entry for that function is also initialized from the function\n+   descriptor symbol and the copy may not be initialized first.  */\n #define ELIMINATE_COPY_RELOCS 1\n \n /* Section name for stubs is the associated section name plus this\n@@ -6462,13 +6462,23 @@ ppc64_elf_adjust_dynamic_symbol (struct bfd_link_info *info,\n       || h->protected_def)\n     return TRUE;\n \n-  if (h->plt.plist != NULL)\n+  if (h->type == STT_FUNC\n+      || h->type == STT_GNU_IFUNC)\n     {\n-      /* We should never get here, but unfortunately there are versions\n-\t of gcc out there that improperly (for this ABI) put initialized\n-\t function pointers, vtable refs and suchlike in read-only\n-\t sections.  Allow them to proceed, but warn that this might\n-\t break at runtime.  */\n+      /* .dynbss copies of function symbols only work if we have\n+\t ELFv1 dot-symbols.  ELFv1 compilers since 2004 default to not\n+\t use dot-symbols and set the function symbol size to the text\n+\t size of the function rather than the size of the descriptor.\n+\t That's wrong for copying a descriptor.  */\n+      if (((struct ppc_link_hash_entry *) h)->oh == NULL\n+\t  || !(h->size == 24 || h->size == 16))\n+\treturn TRUE;\n+\n+      /* We should never get here, but unfortunately there are old\n+\t versions of gcc (circa gcc-3.2) that improperly for the\n+\t ELFv1 ABI put initialized function pointers, vtable refs and\n+\t suchlike in read-only sections.  Allow them to proceed, but\n+\t warn that this might break at runtime.  */\n       info->callbacks->einfo\n \t(_(\"%P: copy reloc against `%pT' requires lazy plt linking; \"\n \t   \"avoid setting LD_BIND_NOW=1 or upgrade gcc\\n\"),"
    },
    {
      "sha": "c68d92038c05527fe96b02081bca28103fbfaaa3",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ld-powerpc/ambiguousv1b.d: Adjust expected output.\n+\t* testsuite/ld-powerpc/funref.s: Align func_tab.\n+\t* testsuite/ld-powerpc/funref2.s: Likewise.\n+\t* testsuite/ld-powerpc/funv1.s: Add dot symbols.\n+\n 2020-01-14  Lili Cui <lili.cui@intel.com>\n \n \t* testsuite/ld-i386/align-branch-1.d: Updated for i686-pc-elf."
    },
    {
      "sha": "205f7ea46f38f18d24992d285b9b68ab7fd20533",
      "filename": "ld/testsuite/ld-powerpc/ambiguousv1b.d",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/ambiguousv1b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/ambiguousv1b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/ambiguousv1b.d?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -3,6 +3,7 @@\n #as: -a64\n #ld: -melf64ppc --emit-stub-syms\n #ld_after_inputfiles: tmpdir/funv1.so\n+#warning: .*requires lazy plt linking.*\n #readelf: -rs --wide\n # Check that we do the right thing with funref2.s that doesn't have\n # anything to mark it as ELFv1 or ELFv2.  Since my_func address is\n@@ -15,9 +16,9 @@ Relocation section .* contains 1 entry:\n \n Symbol table '\\.dynsym' contains 2 entries:\n #...\n-.*: 0*[1-9a-f][0-9a-f]*     4 FUNC    GLOBAL DEFAULT   1[23] my_func\n+.*: 0*[1-9a-f][0-9a-f]* +24 FUNC +GLOBAL DEFAULT +1[23] my_func\n #...\n Symbol table '\\.symtab' contains .* entries:\n #...\n-.*: 0*[1-9a-f][0-9a-f]*     4 FUNC    GLOBAL DEFAULT   1[23] my_func\n+.*: 0*[1-9a-f][0-9a-f]* +24 FUNC +GLOBAL DEFAULT +1[23] my_func\n #pass"
    },
    {
      "sha": "27c1bcf6b1b4ec7605f28899b418877827a8fb4f",
      "filename": "ld/testsuite/ld-powerpc/funref.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funref.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funref.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/funref.s?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -1,4 +1,5 @@\n  .data\n  .globl func_tab\n+ .p2align 3\n func_tab:\n  .dc.a my_func"
    },
    {
      "sha": "14c58f0123d7de8d5da8abf35434dab2dff2114f",
      "filename": "ld/testsuite/ld-powerpc/funref2.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funref2.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funref2.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/funref2.s?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -1,4 +1,5 @@\n  .section .rodata,\"a\",@progbits\n  .globl func_tab\n+ .p2align 3\n func_tab:\n  .dc.a my_func"
    },
    {
      "sha": "988ad0d8c14e8f09d45eaac897238149f24c2b69",
      "filename": "ld/testsuite/ld-powerpc/funv1.s",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funv1.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa/ld/testsuite/ld-powerpc/funv1.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/funv1.s?ref=e1c6cf618cbeebbafd34afc5ee921fcbf7061bfa",
      "patch": "@@ -1,10 +1,12 @@\n- .globl my_func\n- .type my_func,@function\n- .section .opd,\"aw\",@progbits\n+# old style ELFv1, with dot-symbols\n+ .globl my_func, .my_func\n+ .type .my_func, @function\n+ .section .opd, \"aw\", @progbits\n my_func:\n- .quad .Lmy_func, .TOC.@tocbase\n+ .quad .my_func, .TOC.@tocbase, 0\n+ .size my_func, . - my_func\n \n  .text\n-.Lmy_func:\n+.my_func:\n  blr\n- .size my_func,.-.Lmy_func\n+ .size .my_func, . - .my_func"
    }
  ]
}