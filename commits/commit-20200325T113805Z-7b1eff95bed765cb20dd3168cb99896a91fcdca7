{
  "sha": "7b1eff95bed765cb20dd3168cb99896a91fcdca7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2IxZWZmOTViZWQ3NjVjYjIwZGQzMTY4Y2I5OTg5NmE5MWZjZGNhNw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-25T11:38:05Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-25T11:38:05Z"
    },
    "message": "[gdb] Print user/includes fields for maint commands\n\nThe type struct compunit_symtab contains two fields (disregarding field next)\nthat express relations with other compunit_symtabs: user and includes.\n\nThese fields are currently not printed with \"maint info symtabs\" and\n\"maint print symbols\".\n\nFix this such that for \"maint info symtabs\" we print:\n...\n   { ((struct compunit_symtab *) 0x23e8450)\n     debugformat DWARF 2\n     producer (null)\n     dirname (null)\n     blockvector ((struct blockvector *) 0x23e8590)\n+    user ((struct compunit_symtab *) 0x2336280)\n+    ( includes\n+      ((struct compunit_symtab *) 0x23e85e0)\n+      ((struct compunit_symtab *) 0x23e8960)\n+    )\n         { symtab <unknown> ((struct symtab *) 0x23e85b0)\n           fullname (null)\n           linetable ((struct linetable *) 0x0)\n         }\n   }\n...\n\nAnd for \"maint print symbols\" we print:\n...\n-Symtab for file <unknown>\n+Symtab for file <unknown> at 0x23e85b0\n Read from object file /data/gdb_versions/devel/a.out (0x233ccf0)\n Language: c\n\n Blockvector:\n\n block #000, object at 0x23e8530, 0 syms/buckets in 0x0..0x0\n   block #001, object at 0x23e84d0 under 0x23e8530, 0 syms/buckets in 0x0..0x0\n\n+Compunit user: 0x2336300\n+Compunit include: 0x23e8900\n+Compunit include: 0x23dd970\n...\nNote: for user and includes we don't list the actual compunit_symtab address,\nbut instead the corresponding symtab address, which allows us to find that\nsymtab elsewhere in the output (given that we also now print the address of\nsymtabs).\n\ngdb/ChangeLog:\n\n2020-03-25  Tom de Vries  <tdevries@suse.de>\n\n\t* symtab.h (is_main_symtab_of_compunit_symtab): New function.\n\t* symmisc.c (dump_symtab_1): Print user and includes fields.\n\t(maintenance_info_symtabs): Same.",
    "tree": {
      "sha": "a9f9a6269d4e3ab29b8c26c5323d1ae1cd3528fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a9f9a6269d4e3ab29b8c26c5323d1ae1cd3528fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7b1eff95bed765cb20dd3168cb99896a91fcdca7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b1eff95bed765cb20dd3168cb99896a91fcdca7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7b1eff95bed765cb20dd3168cb99896a91fcdca7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b1eff95bed765cb20dd3168cb99896a91fcdca7/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd8953924b0966e363c27ee38a0663c08f742fa0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd8953924b0966e363c27ee38a0663c08f742fa0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd8953924b0966e363c27ee38a0663c08f742fa0"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 64,
    "deletions": 3
  },
  "files": [
    {
      "sha": "f5e54f6d654a0af3cbbcff5692ef458316e91aab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7b1eff95bed765cb20dd3168cb99896a91fcdca7",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-25  Tom de Vries  <tdevries@suse.de>\n+\n+\t* symtab.h (is_main_symtab_of_compunit_symtab): New function.\n+\t* symmisc.c (dump_symtab_1): Print user and includes fields.\n+\t(maintenance_info_symtabs): Same.\n+\n 2020-03-25  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \tPR gdb/25534"
    },
    {
      "sha": "bee136ed4652fe2d66b231f98097db9c59e2515c",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 51,
      "deletions": 3,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=7b1eff95bed765cb20dd3168cb99896a91fcdca7",
      "patch": "@@ -279,8 +279,10 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n   const struct block *b;\n   int depth;\n \n-  fprintf_filtered (outfile, \"\\nSymtab for file %s\\n\",\n-\t\t    symtab_to_filename_for_display (symtab));\n+  fprintf_filtered (outfile, \"\\nSymtab for file %s at %s\\n\",\n+\t\t    symtab_to_filename_for_display (symtab),\n+\t\t    host_address_to_string (symtab));\n+\n   if (SYMTAB_DIRNAME (symtab) != NULL)\n     fprintf_filtered (outfile, \"Compilation directory is %s\\n\",\n \t\t      SYMTAB_DIRNAME (symtab));\n@@ -308,7 +310,7 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n     }\n   /* Now print the block info, but only for compunit symtabs since we will\n      print lots of duplicate info otherwise.  */\n-  if (symtab == COMPUNIT_FILETABS (SYMTAB_COMPUNIT (symtab)))\n+  if (is_main_symtab_of_compunit_symtab (symtab))\n     {\n       fprintf_filtered (outfile, \"\\nBlockvector:\\n\\n\");\n       bv = SYMTAB_BLOCKVECTOR (symtab);\n@@ -371,6 +373,30 @@ dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n \t\t\t\"\\nBlockvector same as owning compunit: %s\\n\\n\",\n \t\t\tcompunit_filename);\n     }\n+\n+  /* Print info about the user of this compunit_symtab, and the\n+     compunit_symtabs included by this one. */\n+  if (is_main_symtab_of_compunit_symtab (symtab))\n+    {\n+      struct compunit_symtab *cust = SYMTAB_COMPUNIT (symtab);\n+\n+      if (cust->user != nullptr)\n+\t{\n+\t  const char *addr\n+\t    = host_address_to_string (COMPUNIT_FILETABS (cust->user));\n+\t  fprintf_filtered (outfile, \"Compunit user: %s\\n\", addr);\n+\t}\n+      if (cust->includes != nullptr)\n+\tfor (i = 0; ; ++i)\n+\t  {\n+\t    struct compunit_symtab *include = cust->includes[i];\n+\t    if (include == nullptr)\n+\t      break;\n+\t    const char *addr\n+\t      = host_address_to_string (COMPUNIT_FILETABS (include));\n+\t    fprintf_filtered (outfile, \"Compunit include: %s\\n\", addr);\n+\t  }\n+    }\n }\n \n static void\n@@ -809,6 +835,28 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t\t\t\t\t \" ((struct blockvector *) %s)\\n\",\n \t\t\t\t\t host_address_to_string\n \t\t\t\t         (COMPUNIT_BLOCKVECTOR (cust)));\n+\t\t\tprintf_filtered (\"    user\"\n+\t\t\t\t\t \" ((struct compunit_symtab *) %s)\\n\",\n+\t\t\t\t\t cust->user != nullptr\n+\t\t\t\t\t ? host_address_to_string (cust->user)\n+\t\t\t\t\t : \"(null)\");\n+\t\t\tif (cust->includes != nullptr)\n+\t\t\t  {\n+\t\t\t    printf_filtered (\"    ( includes\\n\");\n+\t\t\t    for (int i = 0; ; ++i)\n+\t\t\t      {\n+\t\t\t\tstruct compunit_symtab *include\n+\t\t\t\t  = cust->includes[i];\n+\t\t\t\tif (include == nullptr)\n+\t\t\t\t  break;\n+\t\t\t\tconst char *addr\n+\t\t\t\t  = host_address_to_string (include);\n+\t\t\t\tprintf_filtered (\"      (%s %s)\\n\",\n+\t\t\t\t\t\t \"(struct compunit_symtab *)\",\n+\t\t\t\t\t\t addr);\n+\t\t\t      }\n+\t\t\t    printf_filtered (\"    )\\n\");\n+\t\t\t  }\n \t\t\tprinted_compunit_symtab_start = 1;\n \t\t      }\n "
    },
    {
      "sha": "18be5d51b85397ce5a1f819ff9090636e569266f",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b1eff95bed765cb20dd3168cb99896a91fcdca7/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=7b1eff95bed765cb20dd3168cb99896a91fcdca7",
      "patch": "@@ -1513,6 +1513,13 @@ extern struct symtab *\n \n extern enum language compunit_language (const struct compunit_symtab *cust);\n \n+/* Return true if this symtab is the \"main\" symtab of its compunit_symtab.  */\n+\n+static inline bool\n+is_main_symtab_of_compunit_symtab (struct symtab *symtab)\n+{\n+  return symtab == COMPUNIT_FILETABS (SYMTAB_COMPUNIT (symtab));\n+}\n \f\n \n /* The virtual function table is now an array of structures which have the"
    }
  ]
}