{
  "sha": "f20ff8373775e236e63e45ca2d4683d5f69882a7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjIwZmY4MzczNzc1ZTIzNmU2M2U0NWNhMmQ0NjgzZDVmNjk4ODJhNw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-19T21:33:42Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-19T21:33:42Z"
    },
    "message": "[gdb/testsuite] Fix funcall_ref.exp xpass\n\nWhen running gdb.ada/funcall_ref.exp I run into two XPASSes:\n...\n(gdb) p get (\"Hello world!\")^M\n$1 = (n => 12, s => \"Hello world!\")^M\n(gdb) XPASS: gdb.ada/funcall_ref.exp: p get (\"Hello world!\")\nptype get (\"Hello world!\")^M\ntype = <ref> record^M\n    n: natural;^M\n    s: access array (1 .. n) of character;^M\nend record^M\n(gdb) XPASS: gdb.ada/funcall_ref.exp: ptype get (\"Hello world!\")\n...\n\nThe xfails are documented in funcall_ref.exp:\n...\n # Currently, GCC describes such functions as returning pointers (instead of\n # references).\n setup_xfail *-*-*\n...\n\nUsing gnatmake 4.8, we can reproduce the XFAILs:\n...\n(gdb) p get (\"Hello world!\")^M\n$1 = (access foo.bar) 0x6147b0 <system.secondary_stack.chunk+48>^M\n(gdb) XFAIL: gdb.ada/funcall_ref.exp: p get (\"Hello world!\")\nptype get (\"Hello world!\")^M\ntype = access record^M\n    n: natural;^M\n    s: access array (1 .. n) of character;^M\nend record^M\n(gdb) XFAIL: gdb.ada/funcall_ref.exp: ptype get (\"Hello world!\")\n...\n\nFix the XPASSes by:\n- removing the xfail setup\n- switching the order of the two tests\n- detecting the \"access record\" type and declaring the first test unsupported,\n  and skipping the second test\n\nTested on x86_64-linux, both with gnatmake 4.8.5 and gnatmake 7.5.0.\n\ngdb/testsuite/ChangeLog:\n\n2020-02-19  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.ada/funcall_ref.exp: Replace xfail setup by unsupported check.",
    "tree": {
      "sha": "8fd8a6c604228f1f11b1bcb5fec5ea423e08a042",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8fd8a6c604228f1f11b1bcb5fec5ea423e08a042"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f20ff8373775e236e63e45ca2d4683d5f69882a7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f20ff8373775e236e63e45ca2d4683d5f69882a7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f20ff8373775e236e63e45ca2d4683d5f69882a7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f20ff8373775e236e63e45ca2d4683d5f69882a7/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "298e9637305ee85f630638ba723494fb208eabad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/298e9637305ee85f630638ba723494fb208eabad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/298e9637305ee85f630638ba723494fb208eabad"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 28,
    "deletions": 9
  },
  "files": [
    {
      "sha": "bfa1afc7f0f95595724c477f4af11b6b7fa780db",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f20ff8373775e236e63e45ca2d4683d5f69882a7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f20ff8373775e236e63e45ca2d4683d5f69882a7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f20ff8373775e236e63e45ca2d4683d5f69882a7",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-19  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.ada/funcall_ref.exp: Replace xfail setup by unsupported check.\n+\n 2020-02-19  Doug Evans  <dje@google.com>\n \n \tPR rust/25535"
    },
    {
      "sha": "02664f6ad3296cc385ff4fc563884588f78f91ec",
      "filename": "gdb/testsuite/gdb.ada/funcall_ref.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 9,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f20ff8373775e236e63e45ca2d4683d5f69882a7/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f20ff8373775e236e63e45ca2d4683d5f69882a7/gdb/testsuite/gdb.ada/funcall_ref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/funcall_ref.exp?ref=f20ff8373775e236e63e45ca2d4683d5f69882a7",
      "patch": "@@ -32,13 +32,28 @@ runto \"foo.adb:$bp_location\"\n \n # Currently, GCC describes such functions as returning pointers (instead of\n # references).\n-setup_xfail *-*-*\n+set pass_re [multi_line \"type = <ref> record\" \\\n+\t\t \"    n: natural;\" \\\n+\t\t \"    s: access array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n+\t\t \"end record\"]\n+set unsupported_re [multi_line \"type = access record\" \\\n+\t\t \"    n: natural;\" \\\n+\t\t \"    s: access array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n+\t\t \"end record\"]\n+set supported 1\n+gdb_test_multiple \"ptype get (\\\"Hello world!\\\")\" \"\" {\n+    -re -wrap $pass_re {\n+\tpass $gdb_test_name\n+    }\n+    -re -wrap $unsupported_re {\n+\tunsupported $gdb_test_name\n+\tset supported 0\n+    }\n+}\n+\n+if { $supported == 0 } {\n+    return 0\n+}\n+\n gdb_test \"p get (\\\"Hello world!\\\")\" \\\n-         \"= \\\\(n => 12, s => \\\"Hello world!\\\"\\\\)\" \\\n-\n-setup_xfail *-*-*\n-gdb_test \"ptype get (\\\"Hello world!\\\")\" \\\n-         [multi_line \"type = <ref> record\" \\\n-                     \"    n: natural;\" \\\n-                     \"    s: access array \\\\(1 \\\\.\\\\. n\\\\) of character;\" \\\n-                     \"end record\"] \\\n+    \"= \\\\(n => 12, s => \\\"Hello world!\\\"\\\\)\""
    }
  ]
}