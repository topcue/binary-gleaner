{
  "sha": "76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzYwNTVjYmU4OGNjNjYyM2Y4OGM4YWU0M2VkOGI4YWU2ODgzZGY5ZQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-12-19T22:24:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:43Z"
    },
    "message": "gdb/riscv: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nThis change has been tested with no regressions.\n\ngdb/ChangeLog:\n\n\t* gdb/riscv-tdep.c (riscv_dummy_id): Delete.\n\t(riscv_unwind_pc): Delete.\n\t(riscv_unwind_sp): Delete.\n\t(riscv_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "8fee1681999c7337af6c11e50a1b5b03c3945602",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8fee1681999c7337af6c11e50a1b5b03c3945602"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4133e5a13f15d86bb1f834090de98cca4c34759d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4133e5a13f15d86bb1f834090de98cca4c34759d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4133e5a13f15d86bb1f834090de98cca4c34759d"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 8,
    "deletions": 30
  },
  "files": [
    {
      "sha": "49e312f01d88e9d8e53bf4f2203dfe33037b5714",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/riscv-tdep.c (riscv_dummy_id): Delete.\n+\t(riscv_unwind_pc): Delete.\n+\t(riscv_unwind_sp): Delete.\n+\t(riscv_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/csky-tdep.c (csky_dummy_id): Delete."
    },
    {
      "sha": "8a996f32d39846c29cc406333556d45c4254d1e6",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/76055cbe88cc6623f88c8ae43ed8b8ae6883df9e/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=76055cbe88cc6623f88c8ae43ed8b8ae6883df9e",
      "patch": "@@ -2731,31 +2731,6 @@ riscv_frame_align (struct gdbarch *gdbarch, CORE_ADDR addr)\n   return align_down (addr, 16);\n }\n \n-/* Implement the unwind_pc gdbarch method.  */\n-\n-static CORE_ADDR\n-riscv_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, RISCV_PC_REGNUM);\n-}\n-\n-/* Implement the unwind_sp gdbarch method.  */\n-\n-static CORE_ADDR\n-riscv_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, RISCV_SP_REGNUM);\n-}\n-\n-/* Implement the dummy_id gdbarch method.  */\n-\n-static struct frame_id\n-riscv_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_id_build (get_frame_register_signed (this_frame, RISCV_SP_REGNUM),\n-\t\t\t get_frame_pc (this_frame));\n-}\n-\n /* Generate, or return the cached frame cache for the RiscV frame\n    unwinder.  */\n \n@@ -3193,15 +3168,10 @@ riscv_gdbarch_init (struct gdbarch_info info,\n   set_gdbarch_inner_than (gdbarch, core_addr_lessthan);\n   set_gdbarch_frame_align (gdbarch, riscv_frame_align);\n \n-  /* Functions to access frame data.  */\n-  set_gdbarch_unwind_pc (gdbarch, riscv_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, riscv_unwind_sp);\n-\n   /* Functions handling dummy frames.  */\n   set_gdbarch_call_dummy_location (gdbarch, ON_STACK);\n   set_gdbarch_push_dummy_code (gdbarch, riscv_push_dummy_code);\n   set_gdbarch_push_dummy_call (gdbarch, riscv_push_dummy_call);\n-  set_gdbarch_dummy_id (gdbarch, riscv_dummy_id);\n \n   /* Frame unwinders.  Use DWARF debug info if available, otherwise use our own\n      unwinder.  */"
    }
  ]
}