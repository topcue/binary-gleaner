{
  "sha": "23182ac0d832477d316547ec2a758d22b43d0837",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjMxODJhYzBkODMyNDc3ZDMxNjU0N2VjMmE3NThkMjJiNDNkMDgzNw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-05-10T13:44:31Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-05-10T13:44:31Z"
    },
    "message": "Fix an indirection via uninitialised memory when parsing a corrupt input file.\n\n\tPR 27839\n\t* simple.c (simple_dummy_add_to_set): New function.\n\t(simple_dummy_constructor): New function.\n\t(simple_dummy_multiple_common): New function.\n\t(bfd_simple_get_relocated_section_contents): Zero out the\n\tcallbacks structure, and then set the add_to_set, constructor and\n\tmultiple_common fields.",
    "tree": {
      "sha": "889767d191f7e93ed2d404e3fda29600b29da074",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/889767d191f7e93ed2d404e3fda29600b29da074"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/23182ac0d832477d316547ec2a758d22b43d0837",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23182ac0d832477d316547ec2a758d22b43d0837",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/23182ac0d832477d316547ec2a758d22b43d0837",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23182ac0d832477d316547ec2a758d22b43d0837/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5b45e89f56db79fc22ecbb1657eff8ef39fc2c5f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b45e89f56db79fc22ecbb1657eff8ef39fc2c5f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5b45e89f56db79fc22ecbb1657eff8ef39fc2c5f"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 46,
    "deletions": 0
  },
  "files": [
    {
      "sha": "59cba9a22f6f46b80514615ec2c4cb55bb384df5",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23182ac0d832477d316547ec2a758d22b43d0837/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23182ac0d832477d316547ec2a758d22b43d0837/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=23182ac0d832477d316547ec2a758d22b43d0837",
      "patch": "@@ -1,3 +1,13 @@\n+2021-05-10  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 27839\n+\t* simple.c (simple_dummy_add_to_set): New function.\n+\t(simple_dummy_constructor): New function.\n+\t(simple_dummy_multiple_common): New function.\n+\t(bfd_simple_get_relocated_section_contents): Zero out the\n+\tcallbacks structure, and then set the add_to_set, constructor and\n+\tmultiple_common fields.\n+\n 2021-05-10  Dimitar Dimitrov  <dimitar@dinux.eu>\n \n \t* elf32-pru.c (elf_backend_can_gc_sections): Define as 1."
    },
    {
      "sha": "3266f5b8b6781cb82f8df017a2b160a292860e41",
      "filename": "bfd/simple.c",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/23182ac0d832477d316547ec2a758d22b43d0837/bfd/simple.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/23182ac0d832477d316547ec2a758d22b43d0837/bfd/simple.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/simple.c?ref=23182ac0d832477d316547ec2a758d22b43d0837",
      "patch": "@@ -24,6 +24,35 @@\n #include \"libbfd.h\"\n #include \"bfdlink.h\"\n \n+static void\n+simple_dummy_add_to_set (struct bfd_link_info * info ATTRIBUTE_UNUSED,\n+\t\t\t struct bfd_link_hash_entry *entry ATTRIBUTE_UNUSED,\n+\t\t\t bfd_reloc_code_real_type reloc ATTRIBUTE_UNUSED,\n+\t\t\t bfd *abfd ATTRIBUTE_UNUSED,\n+\t\t\t asection *sec ATTRIBUTE_UNUSED,\n+\t\t\t bfd_vma value ATTRIBUTE_UNUSED)\n+{\n+}\n+\n+static  void\n+simple_dummy_constructor (struct bfd_link_info * info ATTRIBUTE_UNUSED,\n+\t\t\t  bool constructor ATTRIBUTE_UNUSED,\n+\t\t\t  const char *name ATTRIBUTE_UNUSED,\n+\t\t\t  bfd *abfd ATTRIBUTE_UNUSED,\n+\t\t\t  asection *sec ATTRIBUTE_UNUSED,\n+\t\t\t  bfd_vma value ATTRIBUTE_UNUSED)\n+{\n+}\n+\n+static void\n+simple_dummy_multiple_common (struct bfd_link_info * info ATTRIBUTE_UNUSED,\n+\t\t\t      struct bfd_link_hash_entry * entry ATTRIBUTE_UNUSED,\n+\t\t\t      bfd * abfd ATTRIBUTE_UNUSED,\n+\t\t\t      enum bfd_link_hash_type type ATTRIBUTE_UNUSED,\n+\t\t\t      bfd_vma size ATTRIBUTE_UNUSED)\n+{\n+}\n+\n static void\n simple_dummy_warning (struct bfd_link_info *link_info ATTRIBUTE_UNUSED,\n \t\t      const char *warning ATTRIBUTE_UNUSED,\n@@ -208,14 +237,21 @@ bfd_simple_get_relocated_section_contents (bfd *abfd,\n   abfd->link.next = NULL;\n   link_info.hash = _bfd_generic_link_hash_table_create (abfd);\n   link_info.callbacks = &callbacks;\n+  /* Make sure that any fields not initialised below do not\n+     result in a potential indirection via a random address.  */\n+  memset (&callbacks, 0, sizeof callbacks);\n   callbacks.warning = simple_dummy_warning;\n   callbacks.undefined_symbol = simple_dummy_undefined_symbol;\n   callbacks.reloc_overflow = simple_dummy_reloc_overflow;\n   callbacks.reloc_dangerous = simple_dummy_reloc_dangerous;\n   callbacks.unattached_reloc = simple_dummy_unattached_reloc;\n   callbacks.multiple_definition = simple_dummy_multiple_definition;\n   callbacks.einfo = simple_dummy_einfo;\n+  callbacks.multiple_common = simple_dummy_multiple_common;\n+  callbacks.constructor = simple_dummy_constructor;\n+  callbacks.add_to_set = simple_dummy_add_to_set;\n \n+fprintf (stderr, \"SIMPLE CALLBACKS %p\\n\", & callbacks);\n   memset (&link_order, 0, sizeof (link_order));\n   link_order.next = NULL;\n   link_order.type = bfd_indirect_link_order;"
    }
  ]
}