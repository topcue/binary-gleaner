{
  "sha": "5990e377e5a339bce715fabfc3e45b24b459a7af",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTk5MGUzNzdlNWEzMzliY2U3MTVmYWJmYzNlNDViMjRiNDU5YTdhZg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-02-12T15:19:03Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-02-12T15:19:03Z"
    },
    "message": "x86-64: Intel64 adjustments for insns dealing with far pointers\n\nAMD and Intel differ in their handling of far indirect branches as well\nas LFS/LGS/LSS: AMD CPUs ignore REX.W while Intel ones honors it. (Note\nhow the latter three were hybrids so far, while far branches were fully\nAMD-like.)",
    "tree": {
      "sha": "d14b42a87167ad6209f6dee222588556eeb8da7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d14b42a87167ad6209f6dee222588556eeb8da7b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5990e377e5a339bce715fabfc3e45b24b459a7af",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5990e377e5a339bce715fabfc3e45b24b459a7af",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5990e377e5a339bce715fabfc3e45b24b459a7af",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5990e377e5a339bce715fabfc3e45b24b459a7af/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f20e3e823d56e54ffe56792ea6a2fe947c2dec0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f20e3e823d56e54ffe56792ea6a2fe947c2dec0d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f20e3e823d56e54ffe56792ea6a2fe947c2dec0d"
    }
  ],
  "stats": {
    "total": 252,
    "additions": 224,
    "deletions": 28
  },
  "files": [
    {
      "sha": "e7fac9530c517571a66345326e00d46cd528d37b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -1,3 +1,20 @@\n+2020-02-12  Jan Beulich  <jbeulich@suse.com>\n+\n+\tPR gas/24546\n+\t* config/tc-i386.c (match_template): Apply AMD64 check to 64-bit\n+\tcode only.\n+\t* config/tc-i386-intel.c (i386_intel_operand): Also handle\n+\tCALL/JMP in O_tbyte_ptr case.\n+\t* doc/c-i386.texi: Mention far call and full pointer load ISA\n+\tdifferences.\n+\t* testsuite/gas/i386/x86-64-branch-3.s,\n+\ttestsuite/gas/i386/x86-64-intel64.s: Add 64-bit far call cases.\n+\t* testsuite/gas/i386/x86-64-branch-3.d,\n+\ttestsuite/gas/i386/x86-64-intel64.d: Adjust expectations.\n+\t* testsuite/gas/i386/x86-64-branch-5.l,\n+\ttestsuite/gas/i386/x86-64-branch-5.s: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2020-02-12  Jan Beulich  <jbeulich@suse.com>\n \n \tPR gas/25438"
    },
    {
      "sha": "76fc9972709d1c849edb14809b95e8261ab1c6d7",
      "filename": "gas/config/tc-i386-intel.c",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/config/tc-i386-intel.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/config/tc-i386-intel.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386-intel.c?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -694,9 +694,11 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t  if (got_a_float == 1)\n \t    suffix = LONG_DOUBLE_MNEM_SUFFIX;\n \t  else if ((current_templates->start->operand_types[0].bitfield.fword\n-\t\t    || current_templates->start->operand_types[0].bitfield.tbyte)\n+\t\t    || current_templates->start->operand_types[0].bitfield.tbyte\n+\t\t    || current_templates->start->opcode_modifier.jump == JUMP_DWORD\n+\t\t    || current_templates->start->opcode_modifier.jump == JUMP)\n \t\t   && flag_code == CODE_64BIT)\n-\t    suffix = QWORD_MNEM_SUFFIX; /* l[fgs]s, [ls][gi]dt */\n+\t    suffix = QWORD_MNEM_SUFFIX; /* l[fgs]s, [ls][gi]dt, call, jmp */\n \t  else\n \t    i.types[this_operand].bitfield.byte = 1; /* cause an error */\n \t  break;"
    },
    {
      "sha": "ac141b84d0b6ee914ab5ed67bdf094da367efeac",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -5827,7 +5827,7 @@ match_template (char mnem_suffix)\n \t  break;\n \tcase intel64:\n \t  /* -mintel64: Don't accept AMD64.  */\n-\t  if (t->opcode_modifier.isa64 == AMD64)\n+\t  if (t->opcode_modifier.isa64 == AMD64 && flag_code == CODE_64BIT)\n \t    continue;\n \t  break;\n \t}"
    },
    {
      "sha": "4eaf53311fd442794546ec782b14db93978cca84",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -1455,6 +1455,18 @@ There are some discrepancies between AMD64 and Intel64 ISAs.\n @item For @samp{movsxd} with 16-bit destination register, AMD64\n supports 32-bit source operand and Intel64 supports 16-bit source\n operand.\n+\n+@item For far branches (with explicit memory operand), both ISAs support\n+32- and 16-bit operand size.  Intel64 additionally supports 64-bit\n+operand size, encoded as @samp{ljmpq} and @samp{lcallq} in AT&T syntax\n+and with an explicit @samp{tbyte ptr} operand size specifier in Intel\n+syntax.\n+\n+@item @samp{lfs}, @samp{lgs}, and @samp{lss} similarly allow for 16-\n+and 32-bit operand size (32- and 48-bit memory operand) in both ISAs,\n+while Intel64 additionally supports 64-bit operand sise (80-bit memory\n+operands).\n+\n @end itemize\n \n @node i386-Bugs"
    },
    {
      "sha": "2ca8a941329002c172e18ce6c2dcd3a02f8268ae",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -1140,6 +1140,7 @@ if [expr ([istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"]) && [gas_64_check]] t\n \trun_dump_test \"x86-64-branch-2\"\n \trun_dump_test \"x86-64-branch-3\"\n \trun_list_test \"x86-64-branch-4\" \"-al -mintel64\"\n+\trun_list_test \"x86-64-branch-5\" \"-al\"\n \n \trun_dump_test \"x86-64-gotpcrel\"\n \trun_dump_test \"x86-64-gotpcrel-no-relax\""
    },
    {
      "sha": "1d0e64e4ebba4bfd52d80ff12bd560e4827288a0",
      "filename": "gas/testsuite/gas/i386/x86-64-branch-3.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-3.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-3.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-branch-3.d?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -16,4 +16,6 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t66 48 e8 00 00 00 00 \tdata16 rex\\.W callq 1c <bar\\+0xf>\t18: R_X86_64_PLT32\tfoo-0x4\n [ \t]*[a-f0-9]+:\t66 c7 f8 00 00       \txbeginw 21 <bar\\+0x14>\t1f: R_X86_64_PC16\tfoo-0x2\n [ \t]*[a-f0-9]+:\t66 48 c7 f8 00 00 00 00 \tdata16 xbeginq 29 <bar\\+0x1c>\t25: R_X86_64_PLT32\tfoo-0x4\n+[ \t]*[a-f0-9]+:\t48 ff 18             \tlcallq \\*\\(%rax\\)\n+[ \t]*[a-f0-9]+:\t48 ff 29             \tljmpq  \\*\\(%rcx\\)\n #pass"
    },
    {
      "sha": "898e5d90e1c75125e38cffea550530b5c4ffc4e9",
      "filename": "gas/testsuite/gas/i386/x86-64-branch-3.s",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-branch-3.s?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -10,3 +10,6 @@ bar:\n \n \tdata16 xbegin foo\n \tdata16 rex.w xbegin foo\n+\n+\tlcallq *(%rax)\n+\tljmpq *(%rcx)"
    },
    {
      "sha": "188b6c2184b9e7e2a026e49a52940433a7248d1e",
      "filename": "gas/testsuite/gas/i386/x86-64-branch-5.l",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-5.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-5.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-branch-5.l?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -0,0 +1,19 @@\n+.*: Assembler messages:\n+.*:2: Error: unsupported syntax for `lcall'\n+.*:3: Error: unsupported syntax for `lfs'\n+.*:4: Error: unsupported syntax for `lfs'\n+.*:5: Error: unsupported syntax for `lgs'\n+.*:6: Error: unsupported syntax for `lgs'\n+.*:7: Error: unsupported syntax for `ljmp'\n+.*:8: Error: unsupported syntax for `lss'\n+.*:9: Error: unsupported syntax for `lss'\n+.*:12: Error: unsupported syntax for `call'\n+.*:13: Error: unsupported syntax for `lfs'\n+.*:14: Error: unsupported syntax for `lfs'\n+.*:15: Error: unsupported syntax for `lgs'\n+.*:16: Error: unsupported syntax for `lgs'\n+.*:17: Error: unsupported syntax for `jmp'\n+.*:18: Error: unsupported syntax for `lss'\n+.*:19: Error: unsupported syntax for `lss'\n+GAS LISTING .*\n+#pass"
    },
    {
      "sha": "f6a4ee21fd30888aa600d5f6779d75319afd3bda",
      "filename": "gas/testsuite/gas/i386/x86-64-branch-5.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-5.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-branch-5.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-branch-5.s?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -0,0 +1,19 @@\n+\t.text\n+\tlcallq\t*(%rax)\n+\tlfs\t(%rax), %rax\n+\tlfsq\t(%rax), %rax\n+\tlgs\t(%rax), %rax\n+\tlgsq\t(%rax), %rax\n+\tljmpq\t*(%rax)\n+\tlss\t(%rax), %rax\n+\tlssq\t(%rax), %rax\n+\n+\t.intel_syntax noprefix\n+\tcall\tTBYTE PTR [rax]\n+\tlfs\trax, [rax]\n+\tlfs\trax, TBYTE PTR [rax]\n+\tlgs\trax, [rax]\n+\tlgs\trax, TBYTE PTR [rax]\n+\tjmp\tTBYTE PTR [rax]\n+\tlss\trax, [rax]\n+\tlss\trax, TBYTE PTR [rax]"
    },
    {
      "sha": "10c820f8dd2bfa21b291e9a2d5d985efbdae01e1",
      "filename": "gas/testsuite/gas/i386/x86-64-intel64.d",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-intel64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-intel64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-intel64.d?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -12,6 +12,8 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t48 0f b5 11          \tlgs    \\(%rcx\\),%rdx\n [ \t]*[a-f0-9]+:\t48 0f b2 1a          \tlss    \\(%rdx\\),%rbx\n [ \t]*[a-f0-9]+:\t48 0f b2 1a          \tlss    \\(%rdx\\),%rbx\n+[ \t]*[a-f0-9]+:\t48 ff 18             \trex\\.W lcall \\*\\(%rax\\)\n+[ \t]*[a-f0-9]+:\t48 ff 29             \trex\\.W ljmp \\*\\(%rcx\\)\n [ \t]*[a-f0-9]+:\t0f 05                \tsyscall \n [ \t]*[a-f0-9]+:\t0f 07                \tsysret \n [ \t]*[a-f0-9]+:\t48 0f 07             \tsysretq *\n@@ -21,4 +23,6 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\t48 0f b5 0a          \tlgs    \\(%rdx\\),%rcx\n [ \t]*[a-f0-9]+:\t48 0f b2 13          \tlss    \\(%rbx\\),%rdx\n [ \t]*[a-f0-9]+:\t48 0f b2 13          \tlss    \\(%rbx\\),%rdx\n+[ \t]*[a-f0-9]+:\t48 ff 19             \trex\\.W lcall \\*\\(%rcx\\)\n+[ \t]*[a-f0-9]+:\t48 ff 2a             \trex\\.W ljmp \\*\\(%rdx\\)\n #pass"
    },
    {
      "sha": "7097877b118b69044fbd7683af8432b501d8cb58",
      "filename": "gas/testsuite/gas/i386/x86-64-intel64.s",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-intel64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/gas/testsuite/gas/i386/x86-64-intel64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-intel64.s?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -10,6 +10,9 @@ _start:\n \tlss\t(%rdx), %rbx\n \tlssq\t(%rdx), %rbx\n \n+\tlcallq\t*(%rax)\n+\tljmpq\t*(%rcx)\n+\n \tsyscall\n \tsysretl\n \tsysretq\n@@ -21,3 +24,6 @@ _start:\n \tlgs\trcx, tbyte ptr [rdx]\n \tlss\trdx, [rbx]\n \tlss\trdx, tbyte ptr [rbx]\n+\n+\tcall\ttbyte ptr [rcx]\n+\tjmp\ttbyte ptr [rdx]"
    },
    {
      "sha": "d92d5c447e8f815536fbe39fcb0b4b3de1fb710c",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -1,3 +1,13 @@\n+2020-02-12  Jan Beulich  <jbeulich@suse.com>\n+\n+\tPR gas/24546\n+\t* i386-dis.c (putop): Handle REX.W in '^' case for Intel64 mode.\n+\t* i386-opc.tbl (lfs, lgs, lss, lcall, ljmp): Split into\n+\tAmd64 and Intel64 templates.\n+\t(call, jmp): Likewise for far indirect variants. Dro\n+\tUnspecified.\n+\t* i386-tbl.h: Re-generate.\n+\n 2020-02-11  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (opcode_modifiers): Remove ShortForm entry."
    },
    {
      "sha": "8e0a9500903082b1c65ff178ef23102fdd3a0c86",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -2331,8 +2331,8 @@ struct dis386 {\n    'Z' => print 'q' in 64bit mode and behave as 'L' otherwise\n    '!' => change condition from true to false or from false to true.\n    '%' => add 1 upper case letter to the macro.\n-   '^' => print 'w' or 'l' depending on operand size prefix or\n-\t  suffix_always is true (lcall/ljmp).\n+   '^' => print 'w', 'l', or 'q' (Intel64 ISA only) depending on operand size\n+\t  prefix or suffix_always is true (lcall/ljmp).\n    '@' => print 'q' for Intel64 ISA, 'w' or 'q' for AMD64 ISA depending\n \t  on operand size prefix.\n    '&' => print 'q' in 64bit mode for Intel64 ISA or if instruction\n@@ -13296,6 +13296,12 @@ putop (const char *in_template, int sizeflag)\n \tcase '^':\n \t  if (intel_syntax)\n \t    break;\n+\t  if (isa64 == intel64 && (rex & REX_W))\n+\t    {\n+\t      USED_REX (REX_W);\n+\t      *obufp++ = 'q';\n+\t      break;\n+\t    }\n \t  if ((prefixes & PREFIX_DATA) || (sizeflag & SUFFIX_ALWAYS))\n \t    {\n \t      if (sizeflag & DFLAG)"
    },
    {
      "sha": "c9bab40dc2754dc562c4f6151174646e835fc52a",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 16,
      "deletions": 11,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -204,9 +204,12 @@ lea, 2, 0x8d, None, 1, 0, Modrm|Anysize|No_bSuf|No_sSuf|No_ldSuf, { BaseIndex, R\n // Load segment registers from memory.\n lds, 2, 0xc5, None, 1, CpuNo64, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n les, 2, 0xc4, None, 1, CpuNo64, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n-lfs, 2, 0xfb4, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n-lgs, 2, 0xfb5, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n-lss, 2, 0xfb2, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lfs, 2, 0xfb4, None, 2, Cpu386, Amd64|Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n+lfs, 2, 0xfb4, None, 2, Cpu64, Intel64|Modrm|No_bSuf|No_sSuf|No_ldSuf, { Dword|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lgs, 2, 0xfb5, None, 2, Cpu386, Amd64|Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n+lgs, 2, 0xfb5, None, 2, Cpu64, Intel64|Modrm|No_bSuf|No_sSuf|No_ldSuf, { Dword|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lss, 2, 0xfb2, None, 2, Cpu386, Amd64|Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n+lss, 2, 0xfb2, None, 2, Cpu64, Intel64|Modrm|No_bSuf|No_sSuf|No_ldSuf, { Dword|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n \n // Flags register instructions.\n clc, 0, 0xf8, None, 1, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n@@ -382,25 +385,27 @@ call, 1, 0xe8, None, 1, Cpu64, Intel64|JumpDword|No_bSuf|No_wSuf|No_lSuf|No_sSuf\n call, 1, 0xff, 0x2, 1, CpuNo64, Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg32|Unspecified|BaseIndex }\n call, 1, 0xff, 0x2, 1, Cpu64, Amd64|Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n call, 1, 0xff, 0x2, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg64|Unspecified|BaseIndex }\n-// Intel Syntax\n+// Intel Syntax remaining call instances.\n call, 2, 0x9a, None, 1, CpuNo64, JumpInterSegment|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n-// Intel Syntax\n-call, 1, 0xff, 0x3, 1, 0, Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf, { Dword|Fword|Unspecified|BaseIndex }\n+call, 1, 0xff, 0x3, 1, 0, Amd64|Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf, { Dword|Fword|BaseIndex }\n+call, 1, 0xff, 0x3, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Fword|Tbyte|BaseIndex }\n lcall, 2, 0x9a, None, 1, CpuNo64, JumpInterSegment|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n-lcall, 1, 0xff, 0x3, 1, 0, Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex }\n+lcall, 1, 0xff, 0x3, 1, 0, Amd64|Modrm|JumpAbsolute|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex }\n+lcall, 1, 0xff, 0x3, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_ldSuf, { Unspecified|BaseIndex }\n \n jmp, 1, 0xeb, None, 1, CpuNo64, Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp16|Disp32 }\n jmp, 1, 0xeb, None, 1, Cpu64, Amd64|Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp16|Disp32S }\n jmp, 1, 0xeb, None, 1, Cpu64, Intel64|Jump|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk, { Disp8|Disp32S }\n jmp, 1, 0xff, 0x4, 1, CpuNo64, Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg32|Unspecified|BaseIndex }\n jmp, 1, 0xff, 0x4, 1, Cpu64, Amd64|Modrm|JumpAbsolute|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg16|Reg64|Unspecified|BaseIndex }\n jmp, 1, 0xff, 0x4, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64|BNDPrefixOk|NoTrackPrefixOk, { Reg64|Unspecified|BaseIndex }\n-// Intel Syntax.\n+// Intel Syntax remaining jmp instances.\n jmp, 2, 0xea, None, 1, CpuNo64, JumpInterSegment|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n-// Intel Syntax.\n-jmp, 1, 0xff, 0x5, 1, 0, Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf, { Dword|Fword|Unspecified|BaseIndex }\n+jmp, 1, 0xff, 0x5, 1, 0, Amd64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf, { Dword|Fword|BaseIndex }\n+jmp, 1, 0xff, 0x5, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { Dword|Fword|Tbyte|BaseIndex }\n ljmp, 2, 0xea, None, 1, CpuNo64, JumpInterSegment|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16, Imm16|Imm32 }\n-ljmp, 1, 0xff, 0x5, 1, 0, Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex }\n+ljmp, 1, 0xff, 0x5, 1, 0, Amd64|Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Unspecified|BaseIndex }\n+ljmp, 1, 0xff, 0x5, 1, Cpu64, Intel64|Modrm|JumpAbsolute|No_bSuf|No_sSuf|No_ldSuf, { Unspecified|BaseIndex }\n \n ret, 0, 0xc3, None, 1, CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|RepPrefixOk|BNDPrefixOk, { 0 }\n ret, 1, 0xc2, None, 1, CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf|RepPrefixOk|BNDPrefixOk, { Imm16 }"
    },
    {
      "sha": "c8db352d369143c0f8fae78f69c66b509239e594",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 102,
      "deletions": 12,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5990e377e5a339bce715fabfc3e45b24b459a7af/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=5990e377e5a339bce715fabfc3e45b24b459a7af",
      "patch": "@@ -979,10 +979,24 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n+\t  0, 0, 0, 0, 1, 0 } },\n+      { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0 } } } },\n+  { \"lfs\", 0xfb4, None, 2, 2,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n \t  1, 0, 0, 0, 1, 0 } },\n       { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n \t  0, 0, 0, 0, 0, 0 } } } },\n@@ -993,10 +1007,24 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n+\t  0, 0, 0, 0, 1, 0 } },\n+      { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0 } } } },\n+  { \"lgs\", 0xfb5, None, 2, 2,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n \t  1, 0, 0, 0, 1, 0 } },\n       { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n \t  0, 0, 0, 0, 0, 0 } } } },\n@@ -1007,10 +1035,24 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n+\t  0, 0, 0, 0, 1, 0 } },\n+      { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n+\t  0, 0, 0, 0, 0, 0 } } } },\n+  { \"lss\", 0xfb2, None, 2, 2,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n \t  1, 0, 0, 0, 1, 0 } },\n       { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n \t  0, 0, 0, 0, 0, 0 } } } },\n@@ -2779,9 +2821,21 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n-\t  0, 0, 0, 0, 1, 0 } } } },\n+\t  0, 0, 0, 0, 0, 0 } } } },\n+  { \"call\", 0xff, 0x3, 1, 1,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n+\t  1, 0, 0, 0, 0, 0 } } } },\n   { \"lcall\", 0x9a, None, 1, 2,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -2805,9 +2859,21 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 1, 0 } } } },\n+  { \"lcall\", 0xff, 0x3, 1, 1,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n+\t  0, 0, 0, 0, 1, 0 } } } },\n   { \"jmp\", 0xeb, None, 1, 1,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -2903,9 +2969,21 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n-\t  0, 0, 0, 0, 1, 0 } } } },\n+\t  0, 0, 0, 0, 0, 0 } } } },\n+  { \"jmp\", 0xff, 0x5, 1, 1,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n+\t  1, 0, 0, 0, 0, 0 } } } },\n   { \"ljmp\", 0xea, None, 1, 2,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n@@ -2929,9 +3007,21 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n     { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n-      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n \t  0, 0, 0, 0, 1, 0 } } } },\n+  { \"ljmp\", 0xff, 0x5, 1, 1,\n+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0 } },\n+    { 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 },\n+    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n+\t  0, 0, 0, 0, 1, 0 } } } },\n   { \"ret\", 0xc3, None, 1, 0,\n     { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    }
  ]
}