{
  "sha": "64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjRmNTJiM2VjMTg1M2QxNDI5M2Q1YTQ2MWQ3YWJjOGJkZTVlM2Y2Mg==",
  "commit": {
    "author": {
      "name": "F\u0101ng-ru\u00ec S\u00f2ng",
      "email": "maskray@google.com",
      "date": "2019-11-01T21:47:55Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-04T01:25:28Z"
    },
    "message": "Implement objcopy/strip --keep-section=<sectionpattern>\n\nllvm-objcopy and llvm-strip support an option --keep-section that\nkeeps some sections from being removed.\n\n\t* objcopy.c (enum option_values): Add OPTION_KEEP_SECTION.\n\t(SECTION_CONTEXT_KEEP): Define.  Adjust other SECTION_CONTEXT macros.\n\t(copy_usage): Describe --keep-section.\n\t(strip_usage): Likewise.\n\t(copy_main): Handle SECTION_CONTEXT_KEEP.\n\t(strip_main): Likewise.\n\t(is_strip_section_1): Likewise.\n\t* testsuite/binutils-all/objcopy.exp: Add tests.\n\t* testsuite/binutils-all/keep-section-1.d: New test driver file.\n\t* testsuite/binutils-all/keep-section-2.d: Likewise.\n\t* doc/binutils.texi: Document the new feature.\n\t* NEWS: Mention the new feature.",
    "tree": {
      "sha": "c51b92c5e9a8c8cb49eed60c703e817a1f3aa248",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c51b92c5e9a8c8cb49eed60c703e817a1f3aa248"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/comments",
  "author": {
    "login": "MaskRay",
    "id": 416322,
    "node_id": "MDQ6VXNlcjQxNjMyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/416322?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaskRay",
    "html_url": "https://github.com/MaskRay",
    "followers_url": "https://api.github.com/users/MaskRay/followers",
    "following_url": "https://api.github.com/users/MaskRay/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaskRay/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaskRay/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaskRay/subscriptions",
    "organizations_url": "https://api.github.com/users/MaskRay/orgs",
    "repos_url": "https://api.github.com/users/MaskRay/repos",
    "events_url": "https://api.github.com/users/MaskRay/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaskRay/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5e874de30bb9e50ac7401f028e3c64e282854d2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e874de30bb9e50ac7401f028e3c64e282854d2e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5e874de30bb9e50ac7401f028e3c64e282854d2e"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 73,
    "deletions": 7
  },
  "files": [
    {
      "sha": "0f5d06b5a699f4458e9f8a5351e4432fb8fc0d4e",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -1,3 +1,18 @@\n+2019-11-04  Fangrui Song  <maskray@google.com>\n+\n+\t* objcopy.c (enum option_values): Add OPTION_KEEP_SECTION.\n+\t(SECTION_CONTEXT_KEEP): Define.  Adjust other SECTION_CONTEXT macros.\n+\t(copy_usage): Describe --keep-section.\n+\t(strip_usage): Likewise.\n+\t(copy_main): Handle SECTION_CONTEXT_KEEP.\n+\t(strip_main): Likewise.\n+\t(is_strip_section_1): Likewise.\n+\t* testsuite/binutils-all/objcopy.exp: Add tests.\n+\t* testsuite/binutils-all/keep-section-1.d: New test driver file.\n+\t* testsuite/binutils-all/keep-section-2.d: Likewise.\n+\t* doc/binutils.texi: Document the new feature.\n+\t* NEWS: Mention the new feature.\n+\n 2019-10-20  Palmer Dabbelt  <palmer@sifive.com>\n \n         * MAINTAINERS: Change palmer@sifive.com to palmer@dabbelt.com."
    },
    {
      "sha": "88b048995a8fe4fac320fd54cda4172c0c9a5450",
      "filename": "binutils/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/NEWS?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -3,6 +3,9 @@\n * Add --output option to the \"ar\" program.  This option can be used to specify\n   the output directory when extracting members from an archive.\n \n+* Add --keep-section option to objcopy and strip.  This option keeps the\n+  specified section from being removed.\n+\n Changes in 2.33:\n \n * Add --source-comment[=<txt>] option to objdump which if present,"
    },
    {
      "sha": "2a86b92033af83230f541c0a515111bb3623ed0f",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -1186,6 +1186,7 @@ objcopy [@option{-F} @var{bfdname}|@option{--target=}@var{bfdname}]\n         [@option{--interleave-width=}@var{width}]\n         [@option{-j} @var{sectionpattern}|@option{--only-section=}@var{sectionpattern}]\n         [@option{-R} @var{sectionpattern}|@option{--remove-section=}@var{sectionpattern}]\n+        [@option{--keep-section=}@var{sectionpattern}]\n         [@option{--remove-relocations=}@var{sectionpattern}]\n         [@option{-p}|@option{--preserve-dates}]\n         [@option{-D}|@option{--enable-deterministic-archives}]\n@@ -1369,6 +1370,10 @@ would otherwise remove it.  For example:\n will remove all sections matching the pattern '.text.*', but will not\n remove the section '.text.foo'.\n \n+@item --keep-section=@var{sectionpattern}\n+When removing sections from the output file, keep sections that match\n+@var{sectionpattern}.\n+\n @item --remove-relocations=@var{sectionpattern}\n Remove non-dynamic relocations from the output file for any section\n matching @var{sectionpattern}.  This option may be given more than\n@@ -3242,6 +3247,7 @@ strip [@option{-F} @var{bfdname} |@option{--target=}@var{bfdname}]\n       [@option{-w}|@option{--wildcard}]\n       [@option{-x}|@option{--discard-all}] [@option{-X} |@option{--discard-locals}]\n       [@option{-R} @var{sectionname} |@option{--remove-section=}@var{sectionname}]\n+      [@option{--keep-section=}@var{sectionpattern}]\n       [@option{--remove-relocations=}@var{sectionpattern}]\n       [@option{-o} @var{file}] [@option{-p}|@option{--preserve-dates}]\n       [@option{-D}|@option{--enable-deterministic-archives}]\n@@ -3312,6 +3318,10 @@ would otherwise remove it.  For example:\n will remove all sections matching the pattern '.text.*', but will not\n remove the section '.text.foo'.\n \n+@item --keep-section=@var{sectionpattern}\n+When removing sections from the output file, keep sections that match\n+@var{sectionpattern}.\n+\n @item --remove-relocations=@var{sectionpattern}\n Remove relocations from the output file for any section matching\n @var{sectionpattern}.  This option may be given more than once.  Note"
    },
    {
      "sha": "56439700c229c4e501bb8b7f881bdb1cc6b1ceb8",
      "filename": "binutils/objcopy.c",
      "status": "modified",
      "additions": 24,
      "deletions": 7,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/objcopy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/objcopy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objcopy.c?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -143,13 +143,14 @@ struct section_list\n      COPY and REMOVE are mutually exlusive.  SET and ALTER are mutually exclusive.  */\n #define SECTION_CONTEXT_REMOVE    (1 << 0) /* Remove this section.  */\n #define SECTION_CONTEXT_COPY      (1 << 1) /* Copy this section, delete all non-copied section.  */\n-#define SECTION_CONTEXT_SET_VMA   (1 << 2) /* Set the sections' VMA address.  */\n-#define SECTION_CONTEXT_ALTER_VMA (1 << 3) /* Increment or decrement the section's VMA address.  */\n-#define SECTION_CONTEXT_SET_LMA   (1 << 4) /* Set the sections' LMA address.  */\n-#define SECTION_CONTEXT_ALTER_LMA (1 << 5) /* Increment or decrement the section's LMA address.  */\n-#define SECTION_CONTEXT_SET_FLAGS (1 << 6) /* Set the section's flags.  */\n-#define SECTION_CONTEXT_REMOVE_RELOCS (1 << 7) /* Remove relocations for this section.  */\n-#define SECTION_CONTEXT_SET_ALIGNMENT (1 << 8) /* Set alignment for section.  */\n+#define SECTION_CONTEXT_KEEP      (1 << 2) /* Keep this section.  */\n+#define SECTION_CONTEXT_SET_VMA   (1 << 3) /* Set the sections' VMA address.  */\n+#define SECTION_CONTEXT_ALTER_VMA (1 << 4) /* Increment or decrement the section's VMA address.  */\n+#define SECTION_CONTEXT_SET_LMA   (1 << 5) /* Set the sections' LMA address.  */\n+#define SECTION_CONTEXT_ALTER_LMA (1 << 6) /* Increment or decrement the section's LMA address.  */\n+#define SECTION_CONTEXT_SET_FLAGS (1 << 7) /* Set the section's flags.  */\n+#define SECTION_CONTEXT_REMOVE_RELOCS (1 << 8) /* Remove relocations for this section.  */\n+#define SECTION_CONTEXT_SET_ALIGNMENT (1 << 9) /* Set alignment for section.  */\n \n   bfd_vma\t\tvma_val;   /* Amount to change by or set to.  */\n   bfd_vma\t\tlma_val;   /* Amount to change by or set to.  */\n@@ -332,6 +333,7 @@ enum command_line_switch\n   OPTION_INTERLEAVE_WIDTH,\n   OPTION_KEEPGLOBAL_SYMBOLS,\n   OPTION_KEEP_FILE_SYMBOLS,\n+  OPTION_KEEP_SECTION,\n   OPTION_KEEP_SYMBOLS,\n   OPTION_LOCALIZE_HIDDEN,\n   OPTION_LOCALIZE_SYMBOLS,\n@@ -386,6 +388,7 @@ static struct option strip_options[] =\n   {\"input-format\", required_argument, 0, 'I'}, /* Obsolete */\n   {\"input-target\", required_argument, 0, 'I'},\n   {\"keep-file-symbols\", no_argument, 0, OPTION_KEEP_FILE_SYMBOLS},\n+  {\"keep-section\", required_argument, 0, OPTION_KEEP_SECTION},\n   {\"keep-symbol\", required_argument, 0, 'K'},\n   {\"merge-notes\", no_argument, 0, 'M'},\n   {\"no-merge-notes\", no_argument, 0, OPTION_NO_MERGE_NOTES},\n@@ -457,6 +460,7 @@ static struct option copy_options[] =\n   {\"keep-file-symbols\", no_argument, 0, OPTION_KEEP_FILE_SYMBOLS},\n   {\"keep-global-symbol\", required_argument, 0, 'G'},\n   {\"keep-global-symbols\", required_argument, 0, OPTION_KEEPGLOBAL_SYMBOLS},\n+  {\"keep-section\", required_argument, 0, OPTION_KEEP_SECTION},\n   {\"keep-symbol\", required_argument, 0, 'K'},\n   {\"keep-symbols\", required_argument, 0, OPTION_KEEP_SYMBOLS},\n   {\"localize-hidden\", no_argument, 0, OPTION_LOCALIZE_HIDDEN},\n@@ -589,6 +593,7 @@ copy_usage (FILE *stream, int exit_status)\n      --only-keep-debug             Strip everything but the debug information\\n\\\n      --extract-dwo                 Copy only DWO sections\\n\\\n      --extract-symbol              Remove section contents but keep symbols\\n\\\n+     --keep-section <name>         Do not strip section <name>\\n\\\n   -K --keep-symbol <name>          Do not strip symbol <name>\\n\\\n      --keep-file-symbols           Do not strip file symbol(s)\\n\\\n      --localize-hidden             Turn all ELF hidden symbols into locals\\n\\\n@@ -722,6 +727,7 @@ strip_usage (FILE *stream, int exit_status)\n   -M  --merge-notes                Remove redundant entries in note sections (default)\\n\\\n       --no-merge-notes             Do not attempt to remove redundant notes\\n\\\n   -N --strip-symbol=<name>         Do not copy symbol <name>\\n\\\n+     --keep-section=<name>         Do not strip section <name>\\n\\\n   -K --keep-symbol=<name>          Do not strip symbol <name>\\n\\\n      --keep-file-symbols           Do not strip file symbol(s)\\n\\\n   -w --wildcard                    Permit wildcard in symbol comparison\\n\\\n@@ -1311,6 +1317,10 @@ is_mergeable_note_section (bfd * abfd, asection * sec)\n static bfd_boolean\n is_strip_section_1 (bfd *abfd ATTRIBUTE_UNUSED, asection *sec)\n {\n+  if (find_section_list (bfd_section_name (sec), FALSE, SECTION_CONTEXT_KEEP)\n+      != NULL)\n+    return FALSE;\n+\n   if (sections_removed || sections_copied)\n     {\n       struct section_list *p;\n@@ -4584,6 +4594,9 @@ strip_main (int argc, char *argv[])\n \tcase 'R':\n \t  handle_remove_section_option (optarg);\n \t  break;\n+\tcase OPTION_KEEP_SECTION:\n+\t  find_section_list (optarg, TRUE, SECTION_CONTEXT_KEEP);\n+\t  break;\n \tcase OPTION_REMOVE_RELOCS:\n \t  handle_remove_relocations_option (optarg);\n \t  break;\n@@ -5010,6 +5023,10 @@ copy_main (int argc, char *argv[])\n \t  handle_remove_section_option (optarg);\n \t  break;\n \n+\tcase OPTION_KEEP_SECTION:\n+\t  find_section_list (optarg, TRUE, SECTION_CONTEXT_KEEP);\n+\t  break;\n+\n         case OPTION_REMOVE_RELOCS:\n \t  handle_remove_relocations_option (optarg);\n \t  break;"
    },
    {
      "sha": "b28e29c17038cbff8562ff33eba3d1c5d36dea3c",
      "filename": "binutils/testsuite/binutils-all/keep-section-1.d",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/keep-section-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/keep-section-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/keep-section-1.d?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -0,0 +1,8 @@\n+#PROG: objcopy\n+#source: data-sections.s\n+#objcopy: --remove-section=.data.aa.* --keep-section=.data.aa.02\n+#readelf: -WS\n+\n+#...\n+  \\[ [0-9]+\\] \\.data\\.aa\\.02.*\n+#..."
    },
    {
      "sha": "7fea62f149ac83b0d6c86786b0a4619a9faa485f",
      "filename": "binutils/testsuite/binutils-all/keep-section-2.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/keep-section-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/keep-section-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/keep-section-2.d?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -0,0 +1,10 @@\n+#PROG: objcopy\n+#source: data-sections.s\n+#objcopy: --remove-section=.data.aa.* --keep-section=.data.aa.*\n+#readelf: -WS\n+\n+#...\n+  \\[ [0-9]+\\] \\.data\\.aa\\.01.*\n+  \\[ [0-9]+\\] \\.data\\.aa\\.02.*\n+  \\[ [0-9]+\\] \\.data\\.aa\\.03.*\n+#..."
    },
    {
      "sha": "6739ab7de842456cab1ab5506f2355c87b405b19",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/64f52b3ec1853d14293d5a461d7abc8bde5e3f62/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=64f52b3ec1853d14293d5a461d7abc8bde5e3f62",
      "patch": "@@ -1222,6 +1222,9 @@ if [is_elf_format] {\n     run_dump_test \"only-section-01\"\n     run_dump_test \"remove-section-01\"\n \n+    run_dump_test \"keep-section-1\"\n+    run_dump_test \"keep-section-2\"\n+\n     # Test the remove relocation functionality\n     set test_list [lsort [glob -nocomplain $srcdir/$subdir/remove-relocs-*.d]]\n     foreach t $test_list {"
    }
  ]
}