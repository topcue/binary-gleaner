{
  "sha": "ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWIwZTFmMWE0NTA3ZjkxNTM2YjU4M2M1N2E0OTJjYjlkM2FhZjZmMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T22:47:31Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:45:50Z"
    },
    "message": "Change tui_make_window to be a method\n\nI combined several small changes into one patch here.  I believe I\nstarted by noticing that the \"title\" is not needed by tui_gen_win_info\nand could be self-managing (i.e. std::string).  Moving this revealed\nthat \"can_box\" is also a property of tui_win_info and not\ntui_gen_win_info; and this in turn caused the changes to\ntui_make_window and box_win.\n\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.h (tui_make_window): Don't declare.\n\t* tui/tui-wingeneral.c (box_win): Change type of win_info.\n\t(box_win): Update.\n\t(tui_gen_win_info::make_window): Rename from tui_make_window.\n\t(tui_win_info::make_window): New method.\n\t(tui_gen_win_info::make_visible): Update.\n\t* tui/tui-source.c (tui_source_window::set_contents): Update.\n\t* tui/tui-regs.c (tui_data_window::show_register_group): Update.\n\t(tui_data_window::display_registers_from): Update.\n\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n\t* tui/tui-data.h (struct tui_gen_win_info) <make_window>:\n\tDeclare.\n\t<can_box>: Remove.\n\t<title>: Remove.\n\t(struct tui_win_info) <make_window>: Declare.\n\t<can_box>: Now virtual.\n\t<title>: New member.\n\t* tui/tui-data.c (~tui_gen_win_info): Don't free title.\n\t* tui/tui-command.c (tui_cmd_window::resize): Update.",
    "tree": {
      "sha": "cea4886a288944d3af598bb3fc9d26af76dbd3ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cea4886a288944d3af598bb3fc9d26af76dbd3ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "100c2bf31fa9bde80d997a5b39d1a07e0505a1cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/100c2bf31fa9bde80d997a5b39d1a07e0505a1cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/100c2bf31fa9bde80d997a5b39d1a07e0505a1cb"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 49,
    "deletions": 35
  },
  "files": [
    {
      "sha": "e65b84d25157088cd17ae5ceb6135333de28f73a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -1,3 +1,25 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.h (tui_make_window): Don't declare.\n+\t* tui/tui-wingeneral.c (box_win): Change type of win_info.\n+\t(box_win): Update.\n+\t(tui_gen_win_info::make_window): Rename from tui_make_window.\n+\t(tui_win_info::make_window): New method.\n+\t(tui_gen_win_info::make_visible): Update.\n+\t* tui/tui-source.c (tui_source_window::set_contents): Update.\n+\t* tui/tui-regs.c (tui_data_window::show_register_group): Update.\n+\t(tui_data_window::display_registers_from): Update.\n+\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <make_window>:\n+\tDeclare.\n+\t<can_box>: Remove.\n+\t<title>: Remove.\n+\t(struct tui_win_info) <make_window>: Declare.\n+\t<can_box>: Now virtual.\n+\t<title>: New member.\n+\t* tui/tui-data.c (~tui_gen_win_info): Don't free title.\n+\t* tui/tui-command.c (tui_cmd_window::resize): Update.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_window) <display_regs>: Remove."
    },
    {
      "sha": "62595808cd8ae1bc5a3b5d6ed31cb7e3c0bf6248",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -54,7 +54,7 @@ tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n   origin.y = origin_y;\n \n   if (handle == nullptr)\n-    tui_make_window (this);\n+    make_window ();\n   else\n     {\n       /* Another reason we don't call the base class method here is"
    },
    {
      "sha": "c11aa43340c37e68dc650199dd9db3142fe910df",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -243,7 +243,6 @@ tui_win_info::tui_win_info (enum tui_win_type type)\n tui_gen_win_info::~tui_gen_win_info ()\n {\n   tui_delete_win (handle);\n-  xfree (title);\n }\n \n void"
    },
    {
      "sha": "a5ff5e2260e88d8410dafcd64f5c301caaa8cbff",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -52,6 +52,8 @@ struct tui_gen_win_info\n   {\n   }\n \n+  virtual void make_window ();\n+\n public:\n \n   virtual ~tui_gen_win_info ();\n@@ -73,12 +75,6 @@ struct tui_gen_win_info\n   virtual void resize (int height, int width,\n \t\t       int origin_x, int origin_y);\n \n-  /* Return true if this can be boxed.  */\n-  virtual bool can_box () const\n-  {\n-    return false;\n-  }\n-\n   /* Return true if this window is visible.  */\n   bool is_visible () const\n   {\n@@ -97,8 +93,6 @@ struct tui_gen_win_info\n   struct tui_point origin = {0, 0};\n   /* Viewport height.  */\n   int viewport_height = 0;\n-  /* Window title to display.  */\n-  char *title = nullptr;\n };\n \n /* Constant definitions.  */\n@@ -173,6 +167,8 @@ struct tui_win_info : public tui_gen_win_info\n \n   void rerender () override;\n \n+  void make_window () override;\n+\n public:\n \n   ~tui_win_info () override\n@@ -213,13 +209,16 @@ struct tui_win_info : public tui_gen_win_info\n     return true;\n   }\n \n-  bool can_box () const override\n+  virtual bool can_box () const\n   {\n     return true;\n   }\n \n   void check_and_display_highlight_if_needed ();\n \n+  /* Window title to display.  */\n+  std::string title;\n+\n   /* Can this window ever be highlighted?  */\n   bool can_highlight = true;\n "
    },
    {
      "sha": "01d50e437e5f5049d6e40f6f74cfebef2d9e5962",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -602,7 +602,7 @@ tui_gen_win_info::resize (int height_, int width_,\n     }\n \n   if (handle == nullptr)\n-    tui_make_window (this);\n+    make_window ();\n \n   rerender ();\n }"
    },
    {
      "sha": "71037d410470aec0d6142046851f069a74893be6",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -185,8 +185,7 @@ tui_data_window::show_register_group (struct reggroup *group,\n   int regnum, pos;\n \n   /* Make a new title showing which group we display.  */\n-  xfree (title);\n-  title = xstrprintf (\"Register group: %s\", reggroup_name (group));\n+  title = string_printf (\"Register group: %s\", reggroup_name (group));\n \n   /* See how many registers must be displayed.  */\n   nr_regs = 0;\n@@ -302,7 +301,7 @@ tui_data_window::display_registers_from (int start_element_no)\n \t\t  data_item_win->width = item_win_width;\n \t\t  data_item_win->origin.x = (item_win_width * j) + 1;\n \t\t  data_item_win->origin.y = cur_y;\n-\t\t  tui_make_window (data_item_win);\n+\t\t  data_item_win->make_visible (true);\n                   scrollok (data_item_win->handle, FALSE);\n \t\t}\n               touchwin (data_item_win->handle);"
    },
    {
      "sha": "906006a4225ab4240a803ad82ee1212c791f459c",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -153,8 +153,7 @@ tui_source_window::set_contents (struct gdbarch *arch,\n \t    = tui_locator_win_info_ptr ();\n \t  const char *s_filename = symtab_to_filename_for_display (s);\n \n-\t  xfree (title);\n-\t  title = xstrdup (s_filename);\n+\t  title = s_filename;\n \n \t  xfree (fullname);\n \t  fullname = xstrdup (symtab_to_fullname (s));"
    },
    {
      "sha": "5fa4cfd9eee99ee6bef17e8e3c675c63ab7a859b",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 14,
      "deletions": 17,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -55,7 +55,7 @@ tui_delete_win (WINDOW *window)\n \n /* Draw a border arround the window.  */\n static void\n-box_win (struct tui_gen_win_info *win_info, \n+box_win (struct tui_win_info *win_info, \n \t int highlight_flag)\n {\n   if (win_info && win_info->handle)\n@@ -78,8 +78,8 @@ box_win (struct tui_gen_win_info *win_info,\n #else\n       box (win, tui_border_vline, tui_border_hline);\n #endif\n-      if (win_info->title)\n-        mvwaddstr (win, 0, 3, win_info->title);\n+      if (!win_info->title.empty ())\n+        mvwaddstr (win, 0, 3, win_info->title.c_str ());\n       wattroff (win, attrs);\n     }\n }\n@@ -126,23 +126,20 @@ tui_win_info::check_and_display_highlight_if_needed ()\n \n \n void\n-tui_make_window (struct tui_gen_win_info *win_info)\n+tui_gen_win_info::make_window ()\n {\n-  WINDOW *handle;\n-\n-  handle = newwin (win_info->height,\n-\t\t   win_info->width,\n-\t\t   win_info->origin.y,\n-\t\t   win_info->origin.x);\n-  win_info->handle = handle;\n+  handle = newwin (height, width, origin.y, origin.x);\n   if (handle != NULL)\n-    {\n-      if (win_info->can_box ())\n-\tbox_win (win_info, NO_HILITE);\n-      scrollok (handle, TRUE);\n-    }\n+    scrollok (handle, TRUE);\n }\n \n+void\n+tui_win_info::make_window ()\n+{\n+  tui_gen_win_info::make_window ();\n+  if (handle != NULL && can_box ())\n+    box_win (this, NO_HILITE);\n+}\n \n /* We can't really make windows visible, or invisible.  So we have to\n    delete the entire window when making it visible, and create it\n@@ -154,7 +151,7 @@ tui_gen_win_info::make_visible (bool visible)\n     return;\n \n   if (visible)\n-    tui_make_window (this);\n+    make_window ();\n   else\n     {\n       tui_delete_win (handle);"
    },
    {
      "sha": "53d72327b9431cf9fbfb24888093d594b517cc34",
      "filename": "gdb/tui/tui-wingeneral.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-wingeneral.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2/gdb/tui/tui-wingeneral.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.h?ref=ab0e1f1a4507f91536b583c57a492cb9d3aaf6f2",
      "patch": "@@ -31,7 +31,6 @@ struct tui_gen_win_info;\n extern void tui_make_all_invisible (void);\n \n extern void tui_unhighlight_win (struct tui_win_info *);\n-extern void tui_make_window (struct tui_gen_win_info *);\n extern void tui_highlight_win (struct tui_win_info *);\n extern void tui_refresh_all ();\n extern void tui_delete_win (WINDOW *window);"
    }
  ]
}