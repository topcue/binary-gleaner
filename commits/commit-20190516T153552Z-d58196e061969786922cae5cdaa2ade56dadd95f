{
  "sha": "d58196e061969786922cae5cdaa2ade56dadd95f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDU4MTk2ZTA2MTk2OTc4NjkyMmNhZTVjZGFhMmFkZTU2ZGFkZDk1Zg==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T10:39:24Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:35:52Z"
    },
    "message": "[PATCH 17/57][Arm][GAS] Add support for MVE instructions: vfma and vfms\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (do_neon_fmac): Change to support MVE variants.\n\t(insns): Change to accept MVE variants.\n\t* testsuite/gas/arm/mve-vfma-vfms-bad.d: New test.\n\t* testsuite/gas/arm/mve-vfma-vfms-bad.l: New test.\n\t* testsuite/gas/arm/mve-vfma-vfms-bad.s: New test.",
    "tree": {
      "sha": "21874267f24261c4b4a0df4c641266620312c207",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/21874267f24261c4b4a0df4c641266620312c207"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d58196e061969786922cae5cdaa2ade56dadd95f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d58196e061969786922cae5cdaa2ade56dadd95f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d58196e061969786922cae5cdaa2ade56dadd95f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d58196e061969786922cae5cdaa2ade56dadd95f/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b409bdb60e6a5c1b865dd25eb6bae484eb9b1b04"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 133,
    "deletions": 5
  },
  "files": [
    {
      "sha": "d51ec393c0de462e58e86868cce8868141e7c785",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d58196e061969786922cae5cdaa2ade56dadd95f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d58196e061969786922cae5cdaa2ade56dadd95f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d58196e061969786922cae5cdaa2ade56dadd95f",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (do_neon_fmac): Change to support MVE variants.\n+\t(insns): Change to accept MVE variants.\n+\t* testsuite/gas/arm/mve-vfma-vfms-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vfma-vfms-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vfma-vfms-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (M_MNEM_vddup, M_MNEM_vdwdup, M_MNEM_vidup,"
    },
    {
      "sha": "58b8258a4754b82995fbe17f5ec3e1aa75e37088",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 36,
      "deletions": 5,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d58196e061969786922cae5cdaa2ade56dadd95f/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d58196e061969786922cae5cdaa2ade56dadd95f/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=d58196e061969786922cae5cdaa2ade56dadd95f",
      "patch": "@@ -16882,12 +16882,42 @@ do_neon_mac_maybe_scalar (void)\n static void\n do_neon_fmac (void)\n {\n-  if (try_vfp_nsyn (3, do_vfp_nsyn_fma_fms) == SUCCESS)\n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, fpu_vfp_ext_fma)\n+      && try_vfp_nsyn (3, do_vfp_nsyn_fma_fms) == SUCCESS)\n     return;\n \n-  if (vfp_or_neon_is_neon (NEON_CHECK_CC | NEON_CHECK_ARCH) == FAIL)\n+  if (check_simd_pred_availability (1, NEON_CHECK_CC | NEON_CHECK_ARCH))\n     return;\n \n+  if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_fp_ext))\n+    {\n+      enum neon_shape rs = neon_select_shape (NS_QQQ, NS_QQR, NS_NULL);\n+      struct neon_type_el et = neon_check_type (3, rs, N_F_MVE | N_KEY, N_EQK,\n+\t\t\t\t\t\tN_EQK);\n+\n+      if (rs == NS_QQR)\n+\t{\n+\t  if (inst.operands[2].reg == REG_SP)\n+\t    as_tsktsk (MVE_BAD_SP);\n+\t  else if (inst.operands[2].reg == REG_PC)\n+\t    as_tsktsk (MVE_BAD_PC);\n+\n+\t  inst.instruction = 0xee310e40;\n+\t  inst.instruction |= (et.size == 16) << 28;\n+\t  inst.instruction |= HI1 (inst.operands[0].reg) << 22;\n+\t  inst.instruction |= LOW4 (inst.operands[1].reg) << 16;\n+\t  inst.instruction |= LOW4 (inst.operands[0].reg) << 12;\n+\t  inst.instruction |= HI1 (inst.operands[1].reg) << 6;\n+\t  inst.instruction |= inst.operands[2].reg;\n+\t  inst.is_neon = 1;\n+\t  return;\n+\t}\n+    }\n+  else\n+    {\n+      constraint (!inst.operands[2].isvec, BAD_FPU);\n+    }\n+\n   neon_dyadic_misc (NT_untyped, N_IF_32, 0);\n }\n \n@@ -23819,11 +23849,12 @@ static const struct asm_opcode insns[] =\n #define ARM_VARIANT    & fpu_vfp_ext_fma\n #undef  THUMB_VARIANT\n #define THUMB_VARIANT  & fpu_vfp_ext_fma\n- /* Mnemonics shared by Neon and VFP.  These are included in the\n+ /* Mnemonics shared by Neon, VFP and MVE.  These are included in the\n     VFP FMA variant; NEON and VFP FMA always includes the NEON\n     FMA instructions.  */\n- nCEF(vfma,     _vfma,    3, (RNSDQ, oRNSDQ, RNSDQ), neon_fmac),\n- nCEF(vfms,     _vfms,    3, (RNSDQ, oRNSDQ, RNSDQ), neon_fmac),\n+ mnCEF(vfma,     _vfma,    3, (RNSDQMQ, oRNSDQMQ, RNSDQMQR), neon_fmac),\n+ mnCEF(vfms,     _vfms,    3, (RNSDQMQ, oRNSDQMQ, RNSDQMQ),  neon_fmac),\n+\n  /* ffmas/ffmad/ffmss/ffmsd are dummy mnemonics to satisfy gas;\n     the v form should always be used.  */\n  cCE(\"ffmas\",\tea00a00, 3, (RVS, RVS, RVS),  vfp_sp_dyadic),"
    },
    {
      "sha": "925d74edf93760d927bad3d31e0c595d4213877c",
      "filename": "gas/testsuite/gas/arm/mve-vfma-vfms-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfma-vfms-bad.d?ref=d58196e061969786922cae5cdaa2ade56dadd95f",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE FP VFMA and VFMS instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vfma-vfms-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "9a01adb665e6bd12a5d08160d0c9ea24bc35a116",
      "filename": "gas/testsuite/gas/arm/mve-vfma-vfms-bad.l",
      "status": "added",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfma-vfms-bad.l?ref=d58196e061969786922cae5cdaa2ade56dadd95f",
      "patch": "@@ -0,0 +1,35 @@\n+[^:]*: Assembler messages:\n+[^:]*:24: Warning: instruction is UNPREDICTABLE with SP operand\n+[^:]*:25: Warning: instruction is UNPREDICTABLE with PC operand\n+[^:]*:26: Error: bad type in SIMD instruction -- `vfma.f64 q0,q1,q2'\n+[^:]*:27: Error: bad type in SIMD instruction -- `vfma.32 q0,q1,q2'\n+[^:]*:28: Error: bad type in SIMD instruction -- `vfms.f64 q0,q1,q2'\n+[^:]*:29: Error: bad type in SIMD instruction -- `vfms.32 q0,q1,q2'\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:31: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:32: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:33: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:35: Error: syntax error -- `vfmaeq.f16 q0,q1,q2'\n+[^:]*:36: Error: syntax error -- `vfmaeq.f16 q0,q1,q2'\n+[^:]*:38: Error: syntax error -- `vfmaeq.f16 q0,q1,q2'\n+[^:]*:39: Error: vector predicated instruction should be in VPT/VPST block -- `vfmat.f16 q0,q1,q2'\n+[^:]*:41: Error: instruction missing MVE vector predication code -- `vfma.f16 q0,q1,q2'\n+[^:]*:43: Error: syntax error -- `vfmseq.f16 q0,q1,q2'\n+[^:]*:44: Error: syntax error -- `vfmseq.f16 q0,q1,q2'\n+[^:]*:46: Error: syntax error -- `vfmseq.f16 q0,q1,q2'\n+[^:]*:47: Error: vector predicated instruction should be in VPT/VPST block -- `vfmst.f16 q0,q1,q2'\n+[^:]*:49: Error: instruction missing MVE vector predication code -- `vfms.f16 q0,q1,q2'"
    },
    {
      "sha": "c821f2b44106d83bc7a11d4bd7811be73dd4eb1a",
      "filename": "gas/testsuite/gas/arm/mve-vfma-vfms-bad.s",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d58196e061969786922cae5cdaa2ade56dadd95f/gas/testsuite/gas/arm/mve-vfma-vfms-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vfma-vfms-bad.s?ref=d58196e061969786922cae5cdaa2ade56dadd95f",
      "patch": "@@ -0,0 +1,49 @@\n+.macro cond1\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vfma.f32 q0, q1, q2\n+.endr\n+.endm\n+\n+.macro cond2\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vfma.f32 q0, q1, r2\n+.endr\n+.endm\n+\n+.macro cond3\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vfms.f32 q0, q1, q2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vfma.f32 q0, q1, sp\n+vfma.f32 q0, q1, pc\n+vfma.f64 q0, q1, q2\n+vfma.32 q0, q1, q2\n+vfms.f64 q0, q1, q2\n+vfms.32 q0, q1, q2\n+vfma.f64 d0, d1, d2\n+cond1\n+cond2\n+cond3\n+it eq\n+vfmaeq.f16 q0, q1, q2\n+vfmaeq.f16 q0, q1, q2\n+vpst\n+vfmaeq.f16 q0, q1, q2\n+vfmat.f16 q0, q1, q2\n+vpst\n+vfma.f16 q0, q1, q2\n+it eq\n+vfmseq.f16 q0, q1, q2\n+vfmseq.f16 q0, q1, q2\n+vpst\n+vfmseq.f16 q0, q1, q2\n+vfmst.f16 q0, q1, q2\n+vpst\n+vfms.f16 q0, q1, q2"
    }
  ]
}