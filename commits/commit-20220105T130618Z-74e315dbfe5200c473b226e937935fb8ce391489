{
  "sha": "74e315dbfe5200c473b226e937935fb8ce391489",
  "node_id": "C_kwDOANOeidoAKDc0ZTMxNWRiZmU1MjAwYzQ3M2IyMjZlOTM3OTM1ZmI4Y2UzOTE0ODk",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-12-14T03:46:04Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2022-01-05T13:06:18Z"
    },
    "message": "elf: Set p_align to the minimum page size if possible\n\nCurrently, on 32-bit and 64-bit ARM, it seems that ld generates p_align\nvalues of 0x10000 even if no section alignment is greater than 0x1000.\nThe issue is more general and probably affects other targets with multiple\npage sizes.\n\nWhile file layout absolutely must take 64K page size into account, that\ndoes not have to be reflected in the p_align value.  If running on a 64K\nkernel, the file will be loaded at a 64K page boundary by necessity. On\na 4K kernel, 64K alignment is not needed.\n\nThe glibc loader has been fixed to honor p_align:\n\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=28676\n\nsimilar to kernel:\n\ncommit ce81bb256a224259ab686742a6284930cbe4f1fa\nAuthor: Chris Kennelly <ckennelly@google.com>\nDate:   Thu Oct 15 20:12:32 2020 -0700\n\n    fs/binfmt_elf: use PT_LOAD p_align values for suitable start address\n\nThis means that on 4K kernels, we will start to do extra work for 64K\np_align, but this pointless for pretty much all binaries (whose section\nalignment rarely exceeds 16).\n\nThe minimum page size is used, instead of the maximum section alignment\ndue to this glibc bug:\n\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=28688\n\nIt has been fixed in glibc 2.35.  But linker output must work on existing\nglibc binaries.\n\n1. Set p_align to the minimum page size while laying out segments aligning\nto the maximum page size or section alignment.  The run-time loader can\nalign segments to the minimum page size or above, depending on system page\nsize.\n2. If -z max-page-size=NNN is used, p_align will be set to the maximum\npage size or the largest section alignment.\n3. If a section requires alignment higher than the minimum page size,\ndon't set p_align to the minimum page size.\n4. If a section requires alignment higher than the maximum page size,\nset p_align to the section alignment.\n5. For objcopy, when the minimum page size != the maximum page size,\np_align may be set to the minimum page size while segments are aligned\nto the maximum page size.  In this case, the input p_align will be\nignored and the maximum page size will be used to align the ouput\nsegments.\n6. Update linker to disallow the common page size > the maximum page size.\n7. Update linker to avoid the common page size > the maximum page size.\n8. Adjust pru_irq_map-1.d to expect p_align == sh_addralign:\n\nSection Headers:\n  [Nr] Name   Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]        NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .text  PROGBITS        20000000 00007c 000004 00  AX  0   0  4\n...\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  LOAD           0x000074 0x00000000 0x00000000 0x00008 0x00008 RW  0x1\n  LOAD           0x00007c 0x20000000 0x20000000 0x00004 0x00004 R E 0x4\n\nvs.\n\nSection Headers:\n  [Nr] Name   Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]        NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .text  PROGBITS        20000000 00007c 000004 00  AX  0   0  4\n...\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  LOAD           0x000074 0x00000000 0x00000000 0x00008 0x00008 RW  0x1\n  LOAD           0x00007c 0x20000000 0x20000000 0x00004 0x00004 R E 0x1\n\nTo enable this linker optimization, the backend should define ELF_P_ALIGN\nto ELF_MINPAGESIZE.\n\nbfd/\n\n\tPR ld/28689\n\tPR ld/28695\n\t* elf-bfd.h (elf_backend_data): Add p_align.\n\t* elf.c (assign_file_positions_for_load_sections): Set p_align\n\tto the default p_align value while laying out segments aligning\n\tto maximum page size or section alignment.\n\t(elf_is_p_align_valid): New function.\n\t(copy_elf_program_header): Call elf_is_p_align_valid to determine\n\tif p_align is valid.\n\t* elfxx-target.h (ELF_P_ALIGN): New.  Default to 0.\n\t(elfNN_bed): Add ELF_P_ALIGN.\n\t* elfxx-x86.h (ELF_P_ALIGN): New.  Set to ELF_MINPAGESIZE.\n\ninclude/\n\n\tPR ld/28689\n\tPR ld/28695\n\t* bfdlink.h (bfd_link_info): Add maxpagesize_is_set.\n\nld/\n\n\tPR ld/28689\n\tPR ld/28695\n\t* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Set\n\tlink_info.maxpagesize_is_set for -z max-page-size=NNN.\n\t* ldelf.c (ldelf_after_parse): Disallow link_info.commonpagesize\n\t> link_info.maxpagesize.\n\t* testsuite/ld-elf/elf.exp: Pass -z max-page-size=0x4000 to\n\tlinker to build mbind2a and mbind2b.\n\t* testsuite/ld-elf/header.d: Add -z common-page-size=0x100.\n\t* testsuite/ld-elf/linux-x86.exp: Add PR ld/28689 tests.\n\t* testsuite/ld-elf/p_align-1.c: New file.\n\t* testsuite/ld-elf/page-size-1.d: New test.\n\t* testsuite/ld-elf/pr26936.d: Add -z common-page-size=0x1000.\n\t* testsuite/ld-elf/seg.d: Likewise.\n\t* testsuite/ld-scripts/rgn-at5.d: Likewise.\n\t* testsuite/ld-pru/pru_irq_map-1.d: Append 1 to name.  Adjust\n\texpected PT_LOAD segment alignment.\n\t* testsuite/ld-pru/pru_irq_map-2.d: Append 2 to name.\n\t* testsuite/ld-scripts/pr23571.d: Add -z max-page-size=0x1000.",
    "tree": {
      "sha": "0dd599fc7c02c929e81fdce2fb518c4e0aef296c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0dd599fc7c02c929e81fdce2fb518c4e0aef296c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74e315dbfe5200c473b226e937935fb8ce391489",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74e315dbfe5200c473b226e937935fb8ce391489",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74e315dbfe5200c473b226e937935fb8ce391489",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74e315dbfe5200c473b226e937935fb8ce391489/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10371501814d6944dc625477e75f5d7b89288ddf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10371501814d6944dc625477e75f5d7b89288ddf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10371501814d6944dc625477e75f5d7b89288ddf"
    }
  ],
  "stats": {
    "total": 174,
    "additions": 162,
    "deletions": 12
  },
  "files": [
    {
      "sha": "896aa08fd76455a6fae34cf2a65741d6fe228744",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -945,6 +945,10 @@ struct elf_backend_data\n   /* The value of commonpagesize to use when -z relro for this backend.  */\n   bfd_vma relropagesize;\n \n+  /* The p_align value for this backend.  If it is set, p_align of\n+      PT_LOAD alignment will be to p_align by default.  */\n+  bfd_vma p_align;\n+\n   /* The BFD flags applied to sections created for dynamic linking.  */\n   flagword dynamic_sec_flags;\n "
    },
    {
      "sha": "1003bd2cdbedba3a3849a4a421f10cb45574325c",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 69,
      "deletions": 2,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -5407,6 +5407,8 @@ assign_file_positions_for_load_sections (bfd *abfd,\n   Elf_Internal_Phdr *p;\n   file_ptr off;  /* Octets.  */\n   bfd_size_type maxpagesize;\n+  bfd_size_type p_align;\n+  bool p_align_p = false;\n   unsigned int alloc, actual;\n   unsigned int i, j;\n   struct elf_segment_map **sorted_seg_map;\n@@ -5491,6 +5493,7 @@ assign_file_positions_for_load_sections (bfd *abfd,\n     qsort (sorted_seg_map, alloc, sizeof (*sorted_seg_map),\n \t   elf_sort_segments);\n \n+  p_align = bed->p_align;\n   maxpagesize = 1;\n   if ((abfd->flags & D_PAGED) != 0)\n     {\n@@ -5561,6 +5564,15 @@ assign_file_positions_for_load_sections (bfd *abfd,\n \t     segment.  */\n \t  if (m->p_align_valid)\n \t    maxpagesize = m->p_align;\n+\t  else if (p_align != 0\n+\t\t   && (link_info == NULL\n+\t\t       || !link_info->maxpagesize_is_set))\n+\t    /* Set p_align to the default p_align value while laying\n+\t       out segments aligning to the maximum page size or the\n+\t       largest section alignment.  The run-time loader can\n+\t       align segments to the default p_align value or the\n+\t       maximum page size, depending on system page size.  */\n+\t    p_align_p = true;\n \n \t  p->p_align = maxpagesize;\n \t}\n@@ -5598,7 +5610,22 @@ assign_file_positions_for_load_sections (bfd *abfd,\n \t\t}\n \t      align = (bfd_size_type) 1 << align_power;\n \t      if (align < maxpagesize)\n-\t\talign = maxpagesize;\n+\t\t{\n+\t\t  /* If a section requires alignment higher than the\n+\t\t     default p_align value, don't set p_align to the\n+\t\t     default p_align value.  */\n+\t\t  if (align > p_align)\n+\t\t    p_align_p = false;\n+\t\t  align = maxpagesize;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* If a section requires alignment higher than the\n+\t\t     maximum page size, set p_align to the section\n+\t\t     alignment.  */\n+\t\t  p_align_p = true;\n+\t\t  p_align = align;\n+\t\t}\n \t    }\n \n \t  for (i = 0; i < m->count; i++)\n@@ -5977,6 +6004,9 @@ assign_file_positions_for_load_sections (bfd *abfd,\n \t\t  print_segment_map (m);\n \t\t}\n \t    }\n+\n+\t  if (p_align_p)\n+\t    p->p_align = p_align;\n \t}\n     }\n \n@@ -7484,6 +7514,40 @@ rewrite_elf_program_header (bfd *ibfd, bfd *obfd, bfd_vma maxpagesize)\n   return true;\n }\n \n+/* Return true if p_align in the ELF program header in ABFD is valid.  */\n+\n+static bool\n+elf_is_p_align_valid (bfd *abfd)\n+{\n+  unsigned int i;\n+  Elf_Internal_Phdr *segment;\n+  unsigned int num_segments;\n+  const struct elf_backend_data *bed = get_elf_backend_data (abfd);\n+  bfd_size_type maxpagesize = bed->maxpagesize;\n+  bfd_size_type p_align = bed->p_align;\n+\n+  /* Return true if the default p_align value isn't set or the maximum\n+     page size is the same as the minimum page size.  */\n+  if (p_align == 0 || maxpagesize == bed->minpagesize)\n+    return true;\n+\n+  /* When the default p_align value is set, p_align may be set to the\n+     default p_align value while segments are aligned to the maximum\n+     page size.  In this case, the input p_align will be ignored and\n+     the maximum page size will be used to align the output segments.  */\n+  segment = elf_tdata (abfd)->phdr;\n+  num_segments = elf_elfheader (abfd)->e_phnum;\n+  for (i = 0; i < num_segments; i++, segment++)\n+    if (segment->p_type == PT_LOAD\n+\t&& (segment->p_align != p_align\n+\t    || vma_page_aligned_bias (segment->p_vaddr,\n+\t\t\t\t      segment->p_offset,\n+\t\t\t\t      maxpagesize) != 0))\n+      return true;\n+\n+  return false;\n+}\n+\n /* Copy ELF program header information.  */\n \n static bool\n@@ -7498,6 +7562,7 @@ copy_elf_program_header (bfd *ibfd, bfd *obfd)\n   unsigned int num_segments;\n   bool phdr_included = false;\n   bool p_paddr_valid;\n+  bool p_palign_valid;\n   unsigned int opb = bfd_octets_per_byte (ibfd, NULL);\n \n   iehdr = elf_elfheader (ibfd);\n@@ -7518,6 +7583,8 @@ copy_elf_program_header (bfd *ibfd, bfd *obfd)\n \tbreak;\n       }\n \n+  p_palign_valid = elf_is_p_align_valid (ibfd);\n+\n   for (i = 0, segment = elf_tdata (ibfd)->phdr;\n        i < num_segments;\n        i++, segment++)\n@@ -7560,7 +7627,7 @@ copy_elf_program_header (bfd *ibfd, bfd *obfd)\n       map->p_paddr = segment->p_paddr;\n       map->p_paddr_valid = p_paddr_valid;\n       map->p_align = segment->p_align;\n-      map->p_align_valid = 1;\n+      map->p_align_valid = p_palign_valid;\n       map->p_vaddr_offset = 0;\n \n       if (map->p_type == PT_GNU_RELRO"
    },
    {
      "sha": "360b056ff58f5ddfeb6c789e095d9740b88fa015",
      "filename": "bfd/elfxx-target.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elfxx-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elfxx-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-target.h?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -400,6 +400,10 @@\n # error ELF_MINPAGESIZE > ELF_RELROPAGESIZE\n #endif\n \n+#ifndef ELF_P_ALIGN\n+#define ELF_P_ALIGN 0\n+#endif\n+\n #ifndef ELF_DYNAMIC_SEC_FLAGS\n /* Note that we set the SEC_IN_MEMORY flag for these sections.  */\n #define ELF_DYNAMIC_SEC_FLAGS\t\t\t\\\n@@ -813,6 +817,7 @@ static const struct elf_backend_data elfNN_bed =\n   ELF_MINPAGESIZE,\t\t/* minpagesize */\n   ELF_COMMONPAGESIZE,\t\t/* commonpagesize */\n   ELF_RELROPAGESIZE,\t\t/* commonpagesize to use with -z relro */\n+  ELF_P_ALIGN,\t\t\t/* p_align */\n   ELF_DYNAMIC_SEC_FLAGS,\t/* dynamic_sec_flags */\n   elf_backend_arch_data,\n   elf_info_to_howto,"
    },
    {
      "sha": "25791af27d7acd60791ad81119dc541cd42e053b",
      "filename": "bfd/elfxx-x86.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elfxx-x86.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/bfd/elfxx-x86.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-x86.h?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -755,6 +755,8 @@ extern void _bfd_x86_elf_link_report_relative_reloc\n #define elf_backend_fixup_gnu_properties \\\n   _bfd_x86_elf_link_fixup_gnu_properties\n \n+#define ELF_P_ALIGN ELF_MINPAGESIZE\n+\n /* Return true if H is a __start_SECNAME/__stop_SECNAME symbol for the\n    SECNAME section which has been garbage collected by --gc-sections\n    -z start-stop-gc.  */"
    },
    {
      "sha": "01f57c22edfceaabc83d232d259b7394d5869e67",
      "filename": "include/bfdlink.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/include/bfdlink.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/include/bfdlink.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/bfdlink.h?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -525,6 +525,9 @@ struct bfd_link_info\n   /* TRUE if all symbol names should be unique.  */\n   unsigned int unique_symbol : 1;\n \n+  /* TRUE if maxpagesize is set on command-line.  */\n+  unsigned int maxpagesize_is_set : 1;\n+\n   /* Char that may appear as the first char of a symbol, but should be\n      skipped (like symbol_leading_char) when looking up symbols in\n      wrap_hash.  Used by PowerPC Linux for 'dot' symbols.  */"
    },
    {
      "sha": "59775260b0620ac5bc2d4d45516f5ac683a3f0df",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -721,6 +721,7 @@ fragment <<EOF\n \t      || (link_info.maxpagesize & (link_info.maxpagesize - 1)) != 0)\n \t    einfo (_(\"%F%P: invalid maximum page size \\`%s'\\n\"),\n \t\t   optarg + 14);\n+\t  link_info.maxpagesize_is_set = true;\n \t}\n       else if (startswith (optarg, \"common-page-size=\"))\n \t{"
    },
    {
      "sha": "d15f027e91a663149d1ba46546cc4b85898fd77e",
      "filename": "ld/ldelf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/ldelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/ldelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelf.c?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -72,6 +72,9 @@ ldelf_after_parse (void)\n       link_info.dynamic_undefined_weak = 0;\n     }\n   after_parse_default ();\n+  if (link_info.commonpagesize > link_info.maxpagesize)\n+    einfo (_(\"%F%P: common page size (0x%v) > maximum page size (0x%v)\\n\"),\n+\t   link_info.commonpagesize, link_info.maxpagesize);\n }\n \n /* Handle the generation of DT_NEEDED tags.  */"
    },
    {
      "sha": "16128c2989f8b5e364474886a1164beaee4ba5ef",
      "filename": "ld/testsuite/ld-elf/elf.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/elf.exp?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -365,7 +365,7 @@ if { [istarget *-*-linux*]\n     run_ld_link_exec_tests [list \\\n \t[list \\\n \t    \"Run mbind2a\" \\\n-\t    \"$NOPIE_LDFLAGS -Wl,-z,common-page-size=0x4000\" \\\n+\t    \"$NOPIE_LDFLAGS -Wl,-z,common-page-size=0x4000,-z,max-page-size=0x4000\" \\\n \t    \"\" \\\n \t    { mbind2a.s mbind2b.c } \\\n \t    \"mbind2a\" \\\n@@ -374,7 +374,7 @@ if { [istarget *-*-linux*]\n \t] \\\n \t[list \\\n \t    \"Run mbind2b\" \\\n-\t    \"-static -Wl,-z,common-page-size=0x4000\" \\\n+\t    \"-static -Wl,-z,common-page-size=0x4000,-z,max-page-size=0x4000\" \\\n \t    \"\" \\\n \t    { mbind2a.s mbind2b.c } \\\n \t    \"mbind2b\" \\"
    },
    {
      "sha": "67f0c981920f4392cea5118a490784ec3edee92a",
      "filename": "ld/testsuite/ld-elf/header.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/header.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/header.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/header.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,5 +1,5 @@\n # target: *-*-linux* *-*-gnu* *-*-vxworks arm*-*-uclinuxfdpiceabi\n-# ld: -T header.t -z max-page-size=0x100\n+# ld: -T header.t -z max-page-size=0x100 -z common-page-size=0x100\n # objdump: -hpw\n \n #..."
    },
    {
      "sha": "2e0cbd37f1764ebc0e7d2ae308150b1d051972f3",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -185,6 +185,42 @@ run_ld_link_exec_tests [list \\\n \t\"\" \\\n \t\"tmpdir/indirect-extern-access-2.so\" \\\n     ] \\\n+    [list \\\n+\t\"Run p_align-1a without PIE\" \\\n+\t\"$NOPIE_LDFLAGS\" \\\n+\t\"\" \\\n+\t{ p_align-1.c } \\\n+\t\"p_align-1a\" \\\n+\t\"pass.out\" \\\n+\t\"$NOPIE_CFLAGS\" \\\n+    ] \\\n+    [list \\\n+\t\"Run p_align-1b with PIE\" \\\n+\t\"-pie\" \\\n+\t\"\" \\\n+\t{ p_align-1.c } \\\n+\t\"p_align-1b\" \\\n+\t\"pass.out\" \\\n+\t\"-fpie\" \\\n+    ] \\\n+    [list \\\n+\t\"Run p_align-1c with -Wl,-z,max-page-size=0x1000 without PIE\" \\\n+\t\"$NOPIE_LDFLAGS -Wl,-z,max-page-size=0x1000\" \\\n+\t\"\" \\\n+\t{ p_align-1.c } \\\n+\t\"p_align-1c\" \\\n+\t\"pass.out\" \\\n+\t\"$NOPIE_CFLAGS\" \\\n+    ] \\\n+    [list \\\n+\t\"Run p_align-1d with -Wl,-z,max-page-size=0x1000 with PIE\" \\\n+\t\"-pie -Wl,-z,max-page-size=0x1000\" \\\n+\t\"\" \\\n+\t{ p_align-1.c } \\\n+\t\"p_align-1d\" \\\n+\t\"pass.out\" \\\n+\t\"-fpie\" \\\n+    ] \\\n ]\n \n proc elfedit_test { options test output } {"
    },
    {
      "sha": "6579cd74e524a87c4905392f2069042643478fbb",
      "filename": "ld/testsuite/ld-elf/p_align-1.c",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/p_align-1.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/p_align-1.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/p_align-1.c?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -0,0 +1,25 @@\n+#include <stdio.h>\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#ifndef ALIGN\n+# define ALIGN 0x800000\n+#endif\n+\n+int\n+__attribute__ ((weak))\n+is_aligned (void *p, int align)\n+{\n+  return (((uintptr_t) p) & (align - 1)) == 0;\n+}\n+\n+int foo __attribute__ ((aligned (ALIGN))) = 1;\n+\n+int\n+main (void)\n+{\n+  if (!is_aligned (&foo, ALIGN))\n+    abort ();\n+  printf (\"PASS\\n\");\n+  return 0;\n+}"
    },
    {
      "sha": "04d2153b2f996c49ca59d1bafb82146b6bc9fb1c",
      "filename": "ld/testsuite/ld-elf/page-size-1.d",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/page-size-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/page-size-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/page-size-1.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -0,0 +1,4 @@\n+#source: dummy.s\n+#ld: -z common-page-size=0x4000 -z max-page-size=0x1000\n+#error: common page size \\(0x4000\\) > maximum page size \\(0x1000\\)\n+#target: *-*-linux-gnu *-*-gnu* arm*-*-uclinuxfdpiceabi"
    },
    {
      "sha": "c479f475829b7d3cc21298dee9ddb056c160e720",
      "filename": "ld/testsuite/ld-elf/pr26936.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/pr26936.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/pr26936.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr26936.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -2,7 +2,7 @@\n #source: pr26936b.s\n #source: pr26936c.s\n #as: --gen-debug\n-#ld: -z noseparate-code -Ttext-segment 0x10000 -z max-page-size=0x1000\n+#ld: -z noseparate-code -Ttext-segment 0x10000 -z max-page-size=0x1000 -z common-page-size=0x1000\n #readelf: -wL -W\n #target: [check_shared_lib_support]\n # Assembly source file for the HPPA assembler is renamed and modifed by"
    },
    {
      "sha": "9dce11e59e32ae37c3c8acdb920f23341f2a2665",
      "filename": "ld/testsuite/ld-elf/seg.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/seg.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-elf/seg.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/seg.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,6 +1,6 @@\n #target: *-*-linux* *-*-gnu* *-*-vxworks arm*-*-uclinuxfdpiceabi\n #source: seg.s\n-#ld: -T seg.t -z max-page-size=0x1000\n+#ld: -T seg.t -z max-page-size=0x1000 -z common-page-size=0x1000\n #readelf: -l --wide\n \n #..."
    },
    {
      "sha": "2538f4c4edb787cf2134645f4eb44c0d1b677dd1",
      "filename": "ld/testsuite/ld-pru/pru_irq_map-1.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-pru/pru_irq_map-1.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-pru/pru_irq_map-1.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pru/pru_irq_map-1.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,4 +1,4 @@\n-#name: pru_irq_map special section for host\n+#name: pru_irq_map special section for host 1\n #source: pru_irq_map.s\n #ld: --defsym=__HEAP_SIZE=0 --defsym=__STACK_SIZE=0\n #readelf: -l --wide\n@@ -9,7 +9,7 @@\n Program Headers:\n  +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg +Align\n  +LOAD +0x[0-9a-f]+ 0x0+ 0x0+ 0x0+8 0x0+8 RW  0x1\n- +LOAD +0x[0-9a-f]+ 0x20+ 0x20+ 0x0+4 0x0+4 R E 0x1\n+ +LOAD +0x[0-9a-f]+ 0x20+ 0x20+ 0x0+4 0x0+4 R E 0x4\n \n  Section to Segment mapping:\n  +Segment Sections..."
    },
    {
      "sha": "d6c583f1d9c7e303b58d10fceb145b2ea47ce7ea",
      "filename": "ld/testsuite/ld-pru/pru_irq_map-2.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-pru/pru_irq_map-2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-pru/pru_irq_map-2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pru/pru_irq_map-2.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,4 +1,4 @@\n-#name: pru_irq_map special section for host\n+#name: pru_irq_map special section for host 2\n #source: pru_irq_map.s\n #ld: --defsym=__HEAP_SIZE=0 --defsym=__STACK_SIZE=0\n #readelf: -S --wide"
    },
    {
      "sha": "45b40592d3b721de10e774b29cf56e552195367d",
      "filename": "ld/testsuite/ld-scripts/pr23571.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-scripts/pr23571.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-scripts/pr23571.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/pr23571.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,5 +1,5 @@\n #source: align2a.s\n-#ld: -T pr23571.t -z common-page-size=0x1000\n+#ld: -T pr23571.t -z common-page-size=0x1000 -z max-page-size=0x1000\n #objdump: -h -w\n \n .*: +file format .*"
    },
    {
      "sha": "e9ab08123dfa33263bce2235cc52d4798621523a",
      "filename": "ld/testsuite/ld-scripts/rgn-at5.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-scripts/rgn-at5.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74e315dbfe5200c473b226e937935fb8ce391489/ld/testsuite/ld-scripts/rgn-at5.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/rgn-at5.d?ref=74e315dbfe5200c473b226e937935fb8ce391489",
      "patch": "@@ -1,6 +1,6 @@\n # name: rgn-at5\n # source: rgn-at5.s\n-# ld: -T rgn-at5.t -z max-page-size=0x1000\n+# ld: -T rgn-at5.t -z max-page-size=0x1000 -z common-page-size=0x1000\n # objdump: -w -h\n # target: *-*-linux* *-*-gnu* arm*-*-uclinuxfdpiceabi\n # xfail: rx-*-*"
    }
  ]
}