{
  "sha": "acee94686be0601a096c5d6e09c531c41318a429",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWNlZTk0Njg2YmUwNjAxYTA5NmM1ZDZlMDljNTMxYzQxMzE4YTQyOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:03Z"
    },
    "message": "Split out eval_op_alignof\n\nThis splits UNOP_ALIGNOF into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_alignof): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "c6947f4ce14aee132cca3c68442e13228f3cad44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c6947f4ce14aee132cca3c68442e13228f3cad44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/acee94686be0601a096c5d6e09c531c41318a429",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acee94686be0601a096c5d6e09c531c41318a429",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/acee94686be0601a096c5d6e09c531c41318a429",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/acee94686be0601a096c5d6e09c531c41318a429/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "786f70ee4d370b3c308ef574bdeda06c6393db06",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/786f70ee4d370b3c308ef574bdeda06c6393db06",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/786f70ee4d370b3c308ef574bdeda06c6393db06"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 23,
    "deletions": 10
  },
  "files": [
    {
      "sha": "1bfac7eab264c8698b8fa523623a42fbb4255432",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acee94686be0601a096c5d6e09c531c41318a429/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acee94686be0601a096c5d6e09c531c41318a429/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=acee94686be0601a096c5d6e09c531c41318a429",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_alignof): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_ind): New function."
    },
    {
      "sha": "729933f29a993eff4afbbc93c93308aac8561693",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 18,
      "deletions": 10,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/acee94686be0601a096c5d6e09c531c41318a429/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/acee94686be0601a096c5d6e09c531c41318a429/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=acee94686be0601a096c5d6e09c531c41318a429",
      "patch": "@@ -1878,6 +1878,22 @@ eval_op_ind (struct type *expect_type, struct expression *exp,\n   return value_ind (arg1);\n }\n \n+/* A helper function for UNOP_ALIGNOF.  */\n+\n+static struct value *\n+eval_op_alignof (struct type *expect_type, struct expression *exp,\n+\t\t enum noside noside,\n+\t\t struct value *arg1)\n+{\n+  struct type *type = value_type (arg1);\n+  /* FIXME: This should be size_t.  */\n+  struct type *size_type = builtin_type (exp->gdbarch)->builtin_int;\n+  ULONGEST align = type_align (type);\n+  if (align == 0)\n+    error (_(\"could not determine alignment of type\"));\n+  return value_from_longest (size_type, align);\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2769,16 +2785,8 @@ evaluate_subexp_standard (struct type *expect_type,\n       return evaluate_subexp_for_sizeof (exp, pos, noside);\n \n     case UNOP_ALIGNOF:\n-      {\n-\ttype = value_type (\n-\t  evaluate_subexp (nullptr, exp, pos, EVAL_AVOID_SIDE_EFFECTS));\n-\t/* FIXME: This should be size_t.  */\n-\tstruct type *size_type = builtin_type (exp->gdbarch)->builtin_int;\n-\tULONGEST align = type_align (type);\n-\tif (align == 0)\n-\t  error (_(\"could not determine alignment of type\"));\n-\treturn value_from_longest (size_type, align);\n-      }\n+      arg1 = evaluate_subexp (nullptr, exp, pos, EVAL_AVOID_SIDE_EFFECTS);\n+      return eval_op_alignof (expect_type, exp, noside, arg1);\n \n     case UNOP_CAST:\n       (*pos) += 2;"
    }
  ]
}