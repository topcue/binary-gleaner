{
  "sha": "c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzU1MGU3YmE5MzdlNmE1ZTA0YzE3Mjc1ZWZjMzYyYTc0ZjhmZDFiMQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-06-27T12:15:37Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-07-01T10:05:59Z"
    },
    "message": "libctf: disambiguate hex output in dumps\n\nWe were sometimes printing hex values without prefixing them with '0x',\nleading to confusion about what base the numbers were actually in.\n\nlibctf/\n\t* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.\n\t(ctf_dump_funcs): Likewise.",
    "tree": {
      "sha": "dc5fcab486d821c4f7664b80417224c37d14ed52",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dc5fcab486d821c4f7664b80417224c37d14ed52"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c550e7ba937e6a5e04c17275efc362a74f8fd1b1/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "900e33b9cf45dd70012af7fc509119edebb93339",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/900e33b9cf45dd70012af7fc509119edebb93339",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/900e33b9cf45dd70012af7fc509119edebb93339"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d91abd278abe0f67bbafdc3ae63572980eed0949",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c550e7ba937e6a5e04c17275efc362a74f8fd1b1/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c550e7ba937e6a5e04c17275efc362a74f8fd1b1/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-28  Nick Alcock <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Prefix hex strings with 0x.\n+\t(ctf_dump_funcs): Likewise.\n+\n 2019-06-19  Nick Alcock <nick.alcock@oracle.com>\n \n \t* ctf-open-bfd.c: Add swap.h and ctf-endian.h."
    },
    {
      "sha": "0e8ab202dd8240f1e3b3934dc9dcfd55c525af19",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c550e7ba937e6a5e04c17275efc362a74f8fd1b1/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c550e7ba937e6a5e04c17275efc362a74f8fd1b1/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=c550e7ba937e6a5e04c17275efc362a74f8fd1b1",
      "patch": "@@ -121,7 +121,7 @@ ctf_dump_format_type (ctf_file_t *fp, ctf_id_t id)\n \t}\n       else\n \t{\n-\t  if (asprintf (&bit, \" %lx: %s (size %lx)\", id, buf[0] == '\\0' ?\n+\t  if (asprintf (&bit, \" %lx: %s (size 0x%lx)\", id, buf[0] == '\\0' ?\n \t\t\t\"(nameless)\" : buf,\n \t\t\t(unsigned long) ctf_type_size (fp, id)) < 0)\n \t    goto oom;\n@@ -280,12 +280,12 @@ ctf_dump_funcs (ctf_file_t *fp, ctf_dump_state_t *state)\n       sym_name = ctf_lookup_symbol_name (fp, i);\n       if (sym_name[0] == '\\0')\n \t{\n-\t  if (asprintf (&bit, \"%lx \", (unsigned long) i) < 0)\n+\t  if (asprintf (&bit, \"0x%lx \", (unsigned long) i) < 0)\n \t    goto oom;\n \t}\n       else\n \t{\n-\t  if (asprintf (&bit, \"%s (%lx) \", sym_name, (unsigned long) i) < 0)\n+\t  if (asprintf (&bit, \"%s (0x%lx) \", sym_name, (unsigned long) i) < 0)\n \t    goto oom;\n \t}\n       str = ctf_str_append (str, bit);"
    }
  ]
}