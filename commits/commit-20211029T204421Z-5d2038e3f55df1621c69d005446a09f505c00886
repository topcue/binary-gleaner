{
  "sha": "5d2038e3f55df1621c69d005446a09f505c00886",
  "node_id": "C_kwDOANOeidoAKDVkMjAzOGUzZjU1ZGYxNjIxYzY5ZDAwNTQ0NmEwOWY1MDVjMDA4ODY",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-09-24T03:47:08Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-29T20:44:21Z"
    },
    "message": "gdb: remove FIELD_ENUMVAL macro\n\nRemove FIELD_ENUMVAL, replace its uses with field::loc_enumval.\n\nChange-Id: Id4861cee91a8bb583a9836f1aa5da0a320fbf4d9",
    "tree": {
      "sha": "59e9aac528e10987b38976d7b769b183e102e6fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/59e9aac528e10987b38976d7b769b183e102e6fa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d2038e3f55df1621c69d005446a09f505c00886",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d2038e3f55df1621c69d005446a09f505c00886",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d2038e3f55df1621c69d005446a09f505c00886",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d2038e3f55df1621c69d005446a09f505c00886/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a543e211e963c6ff131e9275524d4632309f15b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a543e211e963c6ff131e9275524d4632309f15b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3a543e211e963c6ff131e9275524d4632309f15b"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 3,
    "deletions": 4
  },
  "files": [
    {
      "sha": "adaaa30647fc6b8a33a0e62b7ea152b1e709086b",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d2038e3f55df1621c69d005446a09f505c00886/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d2038e3f55df1621c69d005446a09f505c00886/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=5d2038e3f55df1621c69d005446a09f505c00886",
      "patch": "@@ -4215,7 +4215,7 @@ check_types_equal (struct type *type1, struct type *type2,\n \t\treturn false;\n \t      break;\n \t    case FIELD_LOC_KIND_ENUMVAL:\n-\t      if (FIELD_ENUMVAL (*field1) != FIELD_ENUMVAL (*field2))\n+\t      if (field1->loc_enumval () != field2->loc_enumval ())\n \t\treturn false;\n \t      /* Don't compare types of enum fields, because they don't\n \t\t have a type.  */"
    },
    {
      "sha": "a84b3bc93fc5a754362909cc4580de14ac03dabc",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d2038e3f55df1621c69d005446a09f505c00886/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d2038e3f55df1621c69d005446a09f505c00886/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=5d2038e3f55df1621c69d005446a09f505c00886",
      "patch": "@@ -2125,7 +2125,6 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n   (TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits == NULL ? 0 \\\n     : B_TST(TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits, (index)))\n \n-#define FIELD_ENUMVAL(thisfld) ((thisfld).loc_enumval ())\n #define FIELD_STATIC_PHYSNAME(thisfld) ((thisfld).loc_physname ())\n #define FIELD_STATIC_PHYSADDR(thisfld) ((thisfld).loc_physaddr ())\n #define FIELD_DWARF_BLOCK(thisfld) ((thisfld).loc_dwarf_block ())\n@@ -2134,7 +2133,7 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n \n #define TYPE_FIELD_LOC_KIND(thistype, n) ((thistype)->field (n).loc_kind ())\n #define TYPE_FIELD_BITPOS(thistype, n) ((thistype)->field (n).loc_bitpos ())\n-#define TYPE_FIELD_ENUMVAL(thistype, n) FIELD_ENUMVAL ((thistype)->field (n))\n+#define TYPE_FIELD_ENUMVAL(thistype, n) ((thistype)->field (n).loc_enumval ())\n #define TYPE_FIELD_STATIC_PHYSNAME(thistype, n) FIELD_STATIC_PHYSNAME ((thistype)->field (n))\n #define TYPE_FIELD_STATIC_PHYSADDR(thistype, n) FIELD_STATIC_PHYSADDR ((thistype)->field (n))\n #define TYPE_FIELD_DWARF_BLOCK(thistype, n) FIELD_DWARF_BLOCK ((thistype)->field (n))"
    },
    {
      "sha": "eef50dec19a49757f508bfaa2324c69c3b6f5d02",
      "filename": "gdb/guile/scm-type.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d2038e3f55df1621c69d005446a09f505c00886/gdb/guile/scm-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d2038e3f55df1621c69d005446a09f505c00886/gdb/guile/scm-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-type.c?ref=5d2038e3f55df1621c69d005446a09f505c00886",
      "patch": "@@ -1166,7 +1166,7 @@ gdbscm_field_enumval (SCM self)\n   SCM_ASSERT_TYPE (type->code () == TYPE_CODE_ENUM,\n \t\t   self, SCM_ARG1, FUNC_NAME, _(\"enum type\"));\n \n-  return scm_from_long (FIELD_ENUMVAL (*field));\n+  return scm_from_long (field->loc_enumval ());\n }\n \n /* (field-bitpos <gdb:field>) -> integer"
    }
  ]
}