{
  "sha": "8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGM0Mjc3N2NkOGUxNTU3ZmZiMjlmZTljMTcyZWRkOGNjMWRlMTRiNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-21T18:37:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:48Z"
    },
    "message": "Convert symfile-debug.c to type-safe registry API\n\nThis changes symfile-debug.c to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* symfile-debug.c (struct debug_sym_fns_data): Add initializers.\n\t(symfile_debug_objfile_data_key): Change type.\n\t(symfile_debug_installed, debug_qf_has_symbols)\n\t(debug_qf_find_last_source_symtab)\n\t(debug_qf_forget_cached_source_info)\n\t(debug_qf_map_symtabs_matching_filename, debug_qf_lookup_symbol)\n\t(debug_qf_print_stats, debug_qf_dump)\n\t(debug_qf_expand_symtabs_for_function)\n\t(debug_qf_expand_all_symtabs)\n\t(debug_qf_expand_symtabs_with_fullname)\n\t(debug_qf_map_matching_symbols)\n\t(debug_qf_expand_symtabs_matching)\n\t(debug_qf_find_pc_sect_compunit_symtab)\n\t(debug_qf_map_symbol_filenames)\n\t(debug_qf_find_compunit_symtab_by_address, debug_sym_get_probes)\n\t(debug_sym_new_init, debug_sym_init, debug_sym_read)\n\t(debug_sym_read_psymbols, debug_sym_finish, debug_sym_offsets)\n\t(debug_sym_read_linetable, debug_sym_relocate): Update.\n\t(symfile_debug_free_objfile): Remove.\n\t(install_symfile_debug_logging, _initialize_symfile_debug):\n\tUpdate.",
    "tree": {
      "sha": "0c0b911f94a3524c0f6b0c0a5bfa5083d5c44e78",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c0b911f94a3524c0f6b0c0a5bfa5083d5c44e78"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5bfd760d66c816d53a930635a84990c8536bb545",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5bfd760d66c816d53a930635a84990c8536bb545",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5bfd760d66c816d53a930635a84990c8536bb545"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 57,
    "deletions": 69
  },
  "files": [
    {
      "sha": "2867d2488ef1ff2d4db001d06e10e873cf210e86",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
      "patch": "@@ -1,3 +1,27 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* symfile-debug.c (struct debug_sym_fns_data): Add initializers.\n+\t(symfile_debug_objfile_data_key): Change type.\n+\t(symfile_debug_installed, debug_qf_has_symbols)\n+\t(debug_qf_find_last_source_symtab)\n+\t(debug_qf_forget_cached_source_info)\n+\t(debug_qf_map_symtabs_matching_filename, debug_qf_lookup_symbol)\n+\t(debug_qf_print_stats, debug_qf_dump)\n+\t(debug_qf_expand_symtabs_for_function)\n+\t(debug_qf_expand_all_symtabs)\n+\t(debug_qf_expand_symtabs_with_fullname)\n+\t(debug_qf_map_matching_symbols)\n+\t(debug_qf_expand_symtabs_matching)\n+\t(debug_qf_find_pc_sect_compunit_symtab)\n+\t(debug_qf_map_symbol_filenames)\n+\t(debug_qf_find_compunit_symtab_by_address, debug_sym_get_probes)\n+\t(debug_sym_new_init, debug_sym_init, debug_sym_read)\n+\t(debug_sym_read_psymbols, debug_sym_finish, debug_sym_offsets)\n+\t(debug_sym_read_linetable, debug_sym_relocate): Update.\n+\t(symfile_debug_free_objfile): Remove.\n+\t(install_symfile_debug_logging, _initialize_symfile_debug):\n+\tUpdate.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2read.h (struct dwarf2_per_objfile): Don't inherit from"
    },
    {
      "sha": "8266ecbabf0523090dfd7c21867ee3d14ba2e778",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 33,
      "deletions": 69,
      "changes": 102,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c42777cd8e1557ffb29fe9c172edd8cc1de14b7/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=8c42777cd8e1557ffb29fe9c172edd8cc1de14b7",
      "patch": "@@ -39,13 +39,14 @@\n \n struct debug_sym_fns_data\n {\n-  const struct sym_fns *real_sf;\n-  struct sym_fns debug_sf;\n+  const struct sym_fns *real_sf = nullptr;\n+  struct sym_fns debug_sf {};\n };\n \n /* We need to record a pointer to the real set of functions for each\n    objfile.  */\n-static const struct objfile_data *symfile_debug_objfile_data_key;\n+static const struct objfile_key<debug_sym_fns_data>\n+  symfile_debug_objfile_data_key;\n \n /* If non-zero all calls to the symfile functions are logged.  */\n static int debug_symfile = 0;\n@@ -56,7 +57,7 @@ static int\n symfile_debug_installed (struct objfile *objfile)\n {\n   return (objfile->sf != NULL\n-\t  && objfile_data (objfile, symfile_debug_objfile_data_key) != NULL);\n+\t  && symfile_debug_objfile_data_key.get (objfile) != NULL);\n }\n \n /* Utility return the name to print for SYMTAB.  */\n@@ -73,8 +74,7 @@ static int\n debug_qf_has_symbols (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   int retval;\n \n   retval = debug_data->real_sf->qf->has_symbols (objfile);\n@@ -89,8 +89,7 @@ static struct symtab *\n debug_qf_find_last_source_symtab (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   struct symtab *retval;\n \n   fprintf_filtered (gdb_stdlog, \"qf->find_last_source_symtab (%s)\\n\",\n@@ -108,8 +107,7 @@ static void\n debug_qf_forget_cached_source_info (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"qf->forget_cached_source_info (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -123,8 +121,7 @@ debug_qf_map_symtabs_matching_filename\n    gdb::function_view<bool (symtab *)> callback)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->map_symtabs_matching_filename (%s, \\\"%s\\\", \\\"%s\\\", %s)\\n\",\n@@ -147,8 +144,7 @@ debug_qf_lookup_symbol (struct objfile *objfile, int kind, const char *name,\n \t\t\tdomain_enum domain)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   struct compunit_symtab *retval;\n \n   fprintf_filtered (gdb_stdlog,\n@@ -171,8 +167,7 @@ static void\n debug_qf_print_stats (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"qf->print_stats (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -184,8 +179,7 @@ static void\n debug_qf_dump (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"qf->dump (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -198,8 +192,7 @@ debug_qf_expand_symtabs_for_function (struct objfile *objfile,\n \t\t\t\t      const char *func_name)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->expand_symtabs_for_function (%s, \\\"%s\\\")\\n\",\n@@ -212,8 +205,7 @@ static void\n debug_qf_expand_all_symtabs (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"qf->expand_all_symtabs (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -226,8 +218,7 @@ debug_qf_expand_symtabs_with_fullname (struct objfile *objfile,\n \t\t\t\t       const char *fullname)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->expand_symtabs_with_fullname (%s, \\\"%s\\\")\\n\",\n@@ -247,8 +238,7 @@ debug_qf_map_matching_symbols (struct objfile *objfile,\n \t\t\t       symbol_compare_ftype *ordered_compare)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->map_matching_symbols (%s, \\\"%s\\\", %s, %d, %s, %s, %s, %s)\\n\",\n@@ -276,8 +266,7 @@ debug_qf_expand_symtabs_matching\n    enum search_domain kind)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->expand_symtabs_matching (%s, %s, %s, %s, %s)\\n\",\n@@ -303,8 +292,7 @@ debug_qf_find_pc_sect_compunit_symtab (struct objfile *objfile,\n \t\t\t\t       int warn_if_readin)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   struct compunit_symtab *retval;\n \n   fprintf_filtered (gdb_stdlog,\n@@ -335,8 +323,7 @@ debug_qf_map_symbol_filenames (struct objfile *objfile,\n \t\t\t       int need_fullname)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->map_symbol_filenames (%s, %s, %s, %d)\\n\",\n \t\t    objfile_debug_name (objfile),\n@@ -353,8 +340,7 @@ debug_qf_find_compunit_symtab_by_address (struct objfile *objfile,\n \t\t\t\t\t  CORE_ADDR address)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   fprintf_filtered (gdb_stdlog,\n \t\t    \"qf->find_compunit_symtab_by_address (%s, %s)\\n\",\n \t\t    objfile_debug_name (objfile),\n@@ -400,8 +386,7 @@ static const std::vector<probe *> &\n debug_sym_get_probes (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   const std::vector<probe *> &retval\n     = debug_data->real_sf->sym_probe_fns->sym_get_probes (objfile);\n@@ -425,8 +410,7 @@ static void\n debug_sym_new_init (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_new_init (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -438,8 +422,7 @@ static void\n debug_sym_init (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_init (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -451,8 +434,7 @@ static void\n debug_sym_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_read (%s, 0x%x)\\n\",\n \t\t    objfile_debug_name (objfile), (unsigned) symfile_flags);\n@@ -464,8 +446,7 @@ static void\n debug_sym_read_psymbols (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_read_psymbols (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -477,8 +458,7 @@ static void\n debug_sym_finish (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_finish (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -491,8 +471,7 @@ debug_sym_offsets (struct objfile *objfile,\n \t\t   const section_addr_info &info)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_offsets (%s, %s)\\n\",\n \t\t    objfile_debug_name (objfile),\n@@ -514,8 +493,7 @@ static void\n debug_sym_read_linetable (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog, \"sf->sym_read_linetable (%s)\\n\",\n \t\t    objfile_debug_name (objfile));\n@@ -527,8 +505,7 @@ static bfd_byte *\n debug_sym_relocate (struct objfile *objfile, asection *sectp, bfd_byte *buf)\n {\n   const struct debug_sym_fns_data *debug_data\n-    = ((const struct debug_sym_fns_data *)\n-       objfile_data (objfile, symfile_debug_objfile_data_key));\n+    = symfile_debug_objfile_data_key.get (objfile);\n   bfd_byte *retval;\n \n   retval = debug_data->real_sf->sym_relocate (objfile, sectp, buf);\n@@ -563,14 +540,6 @@ static const struct sym_fns debug_sym_fns =\n   &debug_sym_quick_functions\n };\n \f\n-/* Free the copy of sym_fns recorded in the registry.  */\n-\n-static void\n-symfile_debug_free_objfile (struct objfile *objfile, void *datum)\n-{\n-  xfree (datum);\n-}\n-\n /* Install the debugging versions of the symfile functions for OBJFILE.\n    Do not call this if the debug versions are already installed.  */\n \n@@ -586,7 +555,7 @@ install_symfile_debug_logging (struct objfile *objfile)\n   real_sf = objfile->sf;\n \n   /* Alas we have to preserve NULL entries in REAL_SF.  */\n-  debug_data = XCNEW (struct debug_sym_fns_data);\n+  debug_data = new struct debug_sym_fns_data;\n \n #define COPY_SF_PTR(from, to, name, func)\t\\\n   do {\t\t\t\t\t\t\\\n@@ -612,7 +581,7 @@ install_symfile_debug_logging (struct objfile *objfile)\n #undef COPY_SF_PTR\n \n   debug_data->real_sf = real_sf;\n-  set_objfile_data (objfile, symfile_debug_objfile_data_key, debug_data);\n+  symfile_debug_objfile_data_key.set (objfile, debug_data);\n   objfile->sf = &debug_data->debug_sf;\n }\n \n@@ -627,12 +596,10 @@ uninstall_symfile_debug_logging (struct objfile *objfile)\n   /* The debug versions should be currently installed.  */\n   gdb_assert (symfile_debug_installed (objfile));\n \n-  debug_data = ((struct debug_sym_fns_data *)\n-\t\tobjfile_data (objfile, symfile_debug_objfile_data_key));\n+  debug_data = symfile_debug_objfile_data_key.get (objfile);\n \n   objfile->sf = debug_data->real_sf;\n-  xfree (debug_data);\n-  set_objfile_data (objfile, symfile_debug_objfile_data_key, NULL);\n+  symfile_debug_objfile_data_key.clear (objfile);\n }\n \n /* Call this function to set OBJFILE->SF.\n@@ -687,9 +654,6 @@ show_debug_symfile (struct ui_file *file, int from_tty,\n void\n _initialize_symfile_debug (void)\n {\n-  symfile_debug_objfile_data_key\n-    = register_objfile_data_with_cleanup (NULL, symfile_debug_free_objfile);\n-\n   add_setshow_boolean_cmd (\"symfile\", no_class, &debug_symfile, _(\"\\\n Set debugging of the symfile functions.\"), _(\"\\\n Show debugging of the symfile functions.\"), _(\"\\"
    }
  ]
}