{
  "sha": "134df964367c19afa2eef81a0841fe1c181a9edc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTM0ZGY5NjQzNjdjMTlhZmEyZWVmODFhMDg0MWZlMWMxODFhOWVkYw==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-05-17T14:41:09Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2021-06-25T13:08:38Z"
    },
    "message": "Update the core file architecture if a target description is present\n\nAt the moment, the core target has its own gdbarch (m_core_gdbarch), and that\ngets set from the core_bfd on the core target's constructor.\n\nThat gdbarch doesn't contain a target description because it is constructed\nbefore we get a chance to fetch the target description.\n\nAs a result, some hooks that depend on the target description being set are\nnot set, and that leads to problems. One of the examples is\ngdbarch_report_signal_info, which is used to show AArch64 tag violation\ninformation.\n\nFix this by reading the target description before fetching the core file's\ngdbarch.\n\ngdb/ChangeLog:\n\n2021-06-25  Luis Machado  <luis.machado@linaro.org>\n\n\t* corelow.c (core_target::core_target) Update to read target\n\tdescription.",
    "tree": {
      "sha": "8a10b6e451b6d0fd6824840b1177df1214c4f805",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a10b6e451b6d0fd6824840b1177df1214c4f805"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/134df964367c19afa2eef81a0841fe1c181a9edc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/134df964367c19afa2eef81a0841fe1c181a9edc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/134df964367c19afa2eef81a0841fe1c181a9edc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/134df964367c19afa2eef81a0841fe1c181a9edc/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7cde6df4039dc575469430bbb7caa4706840d93",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7cde6df4039dc575469430bbb7caa4706840d93",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7cde6df4039dc575469430bbb7caa4706840d93"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 20,
    "deletions": 0
  },
  "files": [
    {
      "sha": "820a9d36b4523fc2cd9cf90a583489ebb21745fd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/134df964367c19afa2eef81a0841fe1c181a9edc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/134df964367c19afa2eef81a0841fe1c181a9edc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=134df964367c19afa2eef81a0841fe1c181a9edc",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-25  Luis Machado  <luis.machado@linaro.org>\n+\n+\t* corelow.c (core_target::core_target) Update to read target\n+\tdescription.\n+\n 2021-06-22  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* python/lib/gdb/__init__.py: Format."
    },
    {
      "sha": "b762eaa0f2f4fff55234a47be588757a7eba1522",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/134df964367c19afa2eef81a0841fe1c181a9edc/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/134df964367c19afa2eef81a0841fe1c181a9edc/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=134df964367c19afa2eef81a0841fe1c181a9edc",
      "patch": "@@ -154,8 +154,23 @@ class core_target final : public process_stratum_target\n \n core_target::core_target ()\n {\n+  /* Find a first arch based on the BFD.  We need the initial gdbarch so\n+     we can setup the hooks to find a target description.  */\n   m_core_gdbarch = gdbarch_from_bfd (core_bfd);\n \n+  /* If the arch is able to read a target description from the core, it\n+     could yield a more specific gdbarch.  */\n+  const struct target_desc *tdesc = read_description ();\n+\n+  if (tdesc != nullptr)\n+    {\n+      struct gdbarch_info info;\n+      gdbarch_info_init (&info);\n+      info.abfd = core_bfd;\n+      info.target_desc = tdesc;\n+      m_core_gdbarch = gdbarch_find_by_info (info);\n+    }\n+\n   if (!m_core_gdbarch\n       || !gdbarch_iterate_over_regset_sections_p (m_core_gdbarch))\n     error (_(\"\\\"%s\\\": Core file format not supported\"),"
    }
  ]
}