{
  "sha": "6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
  "node_id": "C_kwDOANOeidoAKDZhYjViNmQwZjNhZGMzNjMwM2QyY2M1MzA4YTkyY2Y5NWUyODAxZjk",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-09-27T19:31:21Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-09-27T19:31:26Z"
    },
    "message": "libctf, lookup: fix bounds of pptrtab lookup\n\nAn off-by-one bug in the check for pptrtab lookup meant that we could\naccess the pptrtab past its bounds (*well* past its bounds),\nparticularly if we called ctf_lookup_by_name in a child dict with \"*foo\"\nwhere \"foo\" is a type that exists in the parent but not the child and no\nprevious lookups by name have been carried out.  (Note that \"*foo\" is\nnot even a valid thing to call ctf_lookup_by_name with: foo * is.\nNonetheless, users sometimes do call ctf_lookup_by_name with invalid\ncontent, and it should return ECTF_NOTYPE, not crash.)\n\nctf_pptrtab_len, as its name suggests (and as other tests of it in\nctf-lookup.c confirm), is one higher than the maximum valid permissible\nindex, so the comparison is wrong.\n\n(Test added, which should fail pretty reliably in the presence of this\nbug on any machine with 4KiB pages.)\n\nlibctf/ChangeLog\n2021-09-27  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-lookup.c (ctf_lookup_by_name_internal): Fix pptrtab bounds.\n\t* testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.*:\n\tNew test.",
    "tree": {
      "sha": "93320a807a43abf51f1ea4fb91f1a15a7908ae95",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/93320a807a43abf51f1ea4fb91f1a15a7908ae95"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e695879142a8e8b9f7e220a7919f38ad3ee614e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e695879142a8e8b9f7e220a7919f38ad3ee614e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e695879142a8e8b9f7e220a7919f38ad3ee614e6"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 78,
    "deletions": 2
  },
  "files": [
    {
      "sha": "5907e2f856ae529322fb47bf617166962860bb65",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-09-27  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-lookup.c (ctf_lookup_by_name_internal): Fix pptrtab bounds.\n+\t* testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.*:\n+\tNew test.\n+\n 2021-09-27  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* testsuite/libctf-lookup/enum-symbol.c: Remove unused label."
    },
    {
      "sha": "d1828f8e15a8cedaeb1a6becd078e035dc8a8f1f",
      "filename": "libctf/ctf-lookup.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/ctf-lookup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/ctf-lookup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-lookup.c?ref=6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
      "patch": "@@ -176,7 +176,7 @@ ctf_lookup_by_name_internal (ctf_dict_t *fp, ctf_dict_t *child,\n \t  int in_child = 0;\n \n \t  ntype = CTF_ERR;\n-\t  if (child && idx <= child->ctf_pptrtab_len)\n+\t  if (child && idx < child->ctf_pptrtab_len)\n \t    {\n \t      ntype = child->ctf_pptrtab[idx];\n \t      if (ntype)\n@@ -206,7 +206,7 @@ ctf_lookup_by_name_internal (ctf_dict_t *fp, ctf_dict_t *child,\n \t      idx = LCTF_TYPE_TO_INDEX (fp, ntype);\n \n \t      ntype = CTF_ERR;\n-\t      if (child && idx <= child->ctf_pptrtab_len)\n+\t      if (child && idx < child->ctf_pptrtab_len)\n \t\t{\n \t\t  ntype = child->ctf_pptrtab[idx];\n \t\t  if (ntype)"
    },
    {
      "sha": "ca42065a872cc460eb499206250291e909480266",
      "filename": "libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.c",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.c?ref=6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
      "patch": "@@ -0,0 +1,68 @@\n+/* Make sure we can look up a pointer-to-type where the type is more than a page\n+   into the parent and the child has never had a lookup before.  */\n+\n+#include <ctf-api.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+int\n+main (void)\n+{\n+  ctf_dict_t *pfp, *cfp;\n+  ctf_encoding_t e = { CTF_INT_SIGNED, 0, sizeof (long) };\n+  ctf_id_t ptype, ptrtype, type, foo;\n+  size_t i;\n+  int err;\n+\n+  if ((pfp = ctf_create (&err)) == NULL)\n+    goto create_err;\n+\n+  if ((ptype = ctf_add_integer (pfp, CTF_ADD_NONROOT, \"blah\", &e)) == CTF_ERR)\n+    goto create_parent;\n+\n+  for (i = 0; i < 4096; i++)\n+    if ((foo = ctf_add_pointer (pfp, CTF_ADD_NONROOT, ptype)) == CTF_ERR)\n+      goto create_parent;\n+\n+  if ((cfp = ctf_create (&err)) == NULL)\n+    goto create_err;\n+\n+  if (ctf_import (cfp, pfp) < 0)\n+    goto create_child;\n+\n+  if ((ptype = ctf_add_integer (pfp, CTF_ADD_ROOT, \"foo\", &e)) == CTF_ERR)\n+    goto create_parent;\n+\n+  if ((ptrtype = ctf_add_pointer (pfp, CTF_ADD_ROOT, ptype)) == CTF_ERR)\n+    goto create_parent;\n+\n+  if ((type = ctf_lookup_by_name (cfp, \"*foo\")) != CTF_ERR)\n+    {\n+      fprintf (stderr, \"Type lookup unexpectedly succeeded: %s\\n\", ctf_errmsg (ctf_errno (cfp)));\n+      exit (1);\n+    }\n+\n+  if ((type = ctf_lookup_by_name (cfp, \"foo *\")) == CTF_ERR)\n+    {\n+      fprintf (stderr, \"Type lookup error: %s\\n\", ctf_errmsg (ctf_errno (cfp)));\n+      exit (1);\n+    }\n+\n+  ctf_dict_close (cfp);\n+  ctf_dict_close (pfp);\n+\n+  printf (\"Type lookup succeeded.\\n\");\n+\n+  return 0;\n+\n+ create_err:\n+  fprintf (stderr, \"Creation failed: %s\\n\", ctf_errmsg (err));\n+  exit (1);\n+ create_parent:\n+  fprintf (stderr, \"Cannot create parent type: %s\\n\", ctf_errmsg (ctf_errno (pfp)));\n+  exit (1);\n+ create_child:\n+  fprintf (stderr, \"Cannot create child type: %s\\n\", ctf_errmsg (ctf_errno (cfp)));\n+  exit (1);\n+}"
    },
    {
      "sha": "4f23d14d63e4eee6abd29cdffed01da6092afeac",
      "filename": "libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.lk",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.lk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.lk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/libctf-writable/pptrtab-writable-page-deep-lookup.lk?ref=6ab5b6d0f3adc36303d2cc5308a92cf95e2801f9",
      "patch": "@@ -0,0 +1,2 @@\n+Type lookup succeeded.\n+"
    }
  ]
}