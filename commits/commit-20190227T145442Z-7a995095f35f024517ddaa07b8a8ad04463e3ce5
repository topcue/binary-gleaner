{
  "sha": "7a995095f35f024517ddaa07b8a8ad04463e3ce5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2E5OTUwOTVmMzVmMDI0NTE3ZGRhYTA3YjhhOGFkMDQ0NjNlM2NlNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-09-09T14:52:28Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:42Z"
    },
    "message": "gdb/aarch64: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/aarch64-tdep.c (aarch64_dummy_id): Delete.\n\t(aarch64_unwind_pc): Delete.\n\t(aarch64_unwind_sp): Delete.\n\t(aarch64_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "fbbb762927e26794c1f4fd94cc89cc2a1ac8dc47",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fbbb762927e26794c1f4fd94cc89cc2a1ac8dc47"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a995095f35f024517ddaa07b8a8ad04463e3ce5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a995095f35f024517ddaa07b8a8ad04463e3ce5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a995095f35f024517ddaa07b8a8ad04463e3ce5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a995095f35f024517ddaa07b8a8ad04463e3ce5/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "52d6f3ee9439bb20c45421ecfeef2a69fd0b5511",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52d6f3ee9439bb20c45421ecfeef2a69fd0b5511",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/52d6f3ee9439bb20c45421ecfeef2a69fd0b5511"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 8,
    "deletions": 38
  },
  "files": [
    {
      "sha": "e06d2d9c72567e055ce456a0e48722dba9d3a9af",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a995095f35f024517ddaa07b8a8ad04463e3ce5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a995095f35f024517ddaa07b8a8ad04463e3ce5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7a995095f35f024517ddaa07b8a8ad04463e3ce5",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/aarch64-tdep.c (aarch64_dummy_id): Delete.\n+\t(aarch64_unwind_pc): Delete.\n+\t(aarch64_unwind_sp): Delete.\n+\t(aarch64_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdbtypes.c (type_align): Don't consider static members when"
    },
    {
      "sha": "dd57ef987396f784a26dffc96cd87a46f16771ab",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a995095f35f024517ddaa07b8a8ad04463e3ce5/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a995095f35f024517ddaa07b8a8ad04463e3ce5/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=7a995095f35f024517ddaa07b8a8ad04463e3ce5",
      "patch": "@@ -998,39 +998,6 @@ struct frame_base aarch64_normal_base =\n   aarch64_normal_frame_base\n };\n \n-/* Assuming THIS_FRAME is a dummy, return the frame ID of that\n-   dummy frame.  The frame ID's base needs to match the TOS value\n-   saved by save_dummy_frame_tos () and returned from\n-   aarch64_push_dummy_call, and the PC needs to match the dummy\n-   frame's breakpoint.  */\n-\n-static struct frame_id\n-aarch64_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_id_build (get_frame_register_unsigned (this_frame,\n-\t\t\t\t\t\t      AARCH64_SP_REGNUM),\n-\t\t\t get_frame_pc (this_frame));\n-}\n-\n-/* Implement the \"unwind_pc\" gdbarch method.  */\n-\n-static CORE_ADDR\n-aarch64_unwind_pc (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  CORE_ADDR pc\n-    = frame_unwind_register_unsigned (this_frame, AARCH64_PC_REGNUM);\n-\n-  return pc;\n-}\n-\n-/* Implement the \"unwind_sp\" gdbarch method.  */\n-\n-static CORE_ADDR\n-aarch64_unwind_sp (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_unwind_register_unsigned (this_frame, AARCH64_SP_REGNUM);\n-}\n-\n /* Return the value of the REGNUM register in the previous frame of\n    *THIS_FRAME.  */\n \n@@ -3091,11 +3058,6 @@ aarch64_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_push_dummy_call (gdbarch, aarch64_push_dummy_call);\n   set_gdbarch_frame_align (gdbarch, aarch64_frame_align);\n \n-  /* Frame handling.  */\n-  set_gdbarch_dummy_id (gdbarch, aarch64_dummy_id);\n-  set_gdbarch_unwind_pc (gdbarch, aarch64_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, aarch64_unwind_sp);\n-\n   /* Advance PC across function entry code.  */\n   set_gdbarch_skip_prologue (gdbarch, aarch64_skip_prologue);\n "
    }
  ]
}