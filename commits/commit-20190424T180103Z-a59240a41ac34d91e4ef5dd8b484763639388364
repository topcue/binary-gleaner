{
  "sha": "a59240a41ac34d91e4ef5dd8b484763639388364",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTU5MjQwYTQxYWMzNGQ5MWU0ZWY1ZGQ4YjQ4NDc2MzYzOTM4ODM2NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-16T17:11:10Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-24T18:01:03Z"
    },
    "message": "Fix passing of struct with bitfields on x86-64\n\nCommit 4aa866af (\"Fix AMD64 return value ABI in expression\nevaluation\") introduced a regression when calling a function with a\nstructure that contains bitfields.\n\nBecause the caller of amd64_has_unaligned_fields handles bitfields\nalready, it seemed to me that the simplest fix was to ignore bitfields\nhere.\n\ngdb/ChangeLog\n2019-04-24  Tom Tromey  <tromey@adacore.com>\n\n\t* amd64-tdep.c (amd64_has_unaligned_fields): Ignore bitfields.\n\ngdb/testsuite/ChangeLog\n2019-04-24  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.arch/amd64-eval.exp: Test bitfield return.\n\t* gdb.arch/amd64-eval.cc (struct Bitfields): New.\n\t(class Foo) <return_bitfields>: New method.\n\t(main): Call it.",
    "tree": {
      "sha": "8543a94201f810ff63de79fcf095c68bb84f2eb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8543a94201f810ff63de79fcf095c68bb84f2eb1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a59240a41ac34d91e4ef5dd8b484763639388364",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a59240a41ac34d91e4ef5dd8b484763639388364",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a59240a41ac34d91e4ef5dd8b484763639388364",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a59240a41ac34d91e4ef5dd8b484763639388364/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1b8dd6432644c256ab294d205a8e00f6c6dc5073",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b8dd6432644c256ab294d205a8e00f6c6dc5073",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1b8dd6432644c256ab294d205a8e00f6c6dc5073"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 37,
    "deletions": 4
  },
  "files": [
    {
      "sha": "490c1817626f6224dd294d555cae4724b0860e13",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a59240a41ac34d91e4ef5dd8b484763639388364",
      "patch": "@@ -1,3 +1,7 @@\n+2019-04-24  Tom Tromey  <tromey@adacore.com>\n+\n+\t* amd64-tdep.c (amd64_has_unaligned_fields): Ignore bitfields.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* s12z-tdep.c (s12z_unwind_pc): Delete."
    },
    {
      "sha": "31791f9a9f19b30eb229c1e8b6b94d539985d769",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=a59240a41ac34d91e4ef5dd8b484763639388364",
      "patch": "@@ -555,11 +555,13 @@ amd64_has_unaligned_fields (struct type *type)\n \t  int bitpos = TYPE_FIELD_BITPOS (type, i);\n \t  int align = type_align(subtype);\n \n-\t  /* Ignore static fields, or empty fields, for example nested\n-\t     empty structures.  */\n+\t  /* Ignore static fields, empty fields (for example nested\n+\t     empty structures), and bitfields (these are handled by\n+\t     the caller).  */\n \t  if (field_is_static (&TYPE_FIELD (type, i))\n \t      || (TYPE_FIELD_BITSIZE (type, i) == 0\n-\t\t  && TYPE_LENGTH (subtype) == 0))\n+\t\t  && TYPE_LENGTH (subtype) == 0)\n+\t      || TYPE_FIELD_PACKED (type, i))\n \t    continue;\n \n \t  if (bitpos % 8 != 0)\n@@ -569,7 +571,7 @@ amd64_has_unaligned_fields (struct type *type)\n \t  if (bytepos % align != 0)\n \t    return true;\n \n-\t  if (amd64_has_unaligned_fields(subtype))\n+\t  if (amd64_has_unaligned_fields (subtype))\n \t    return true;\n \t}\n     }"
    },
    {
      "sha": "23ff7bc433d1e5074785080dfb919044b05c9692",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=a59240a41ac34d91e4ef5dd8b484763639388364",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-24  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.arch/amd64-eval.exp: Test bitfield return.\n+\t* gdb.arch/amd64-eval.cc (struct Bitfields): New.\n+\t(class Foo) <return_bitfields>: New method.\n+\t(main): Call it.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.cp/many-args.cc: New file."
    },
    {
      "sha": "907233ff04ab2ff7d9a7411ed53946a60adf1bc0",
      "filename": "gdb/testsuite/gdb.arch/amd64-eval.cc",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/gdb.arch/amd64-eval.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/gdb.arch/amd64-eval.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/amd64-eval.cc?ref=a59240a41ac34d91e4ef5dd8b484763639388364",
      "patch": "@@ -63,6 +63,16 @@ struct UnalignedFieldsInBase : public UnalignedFields\n   int32_t x2;\n };\n \n+struct Bitfields\n+{\n+  Bitfields(unsigned int x, unsigned int y)\n+    : fld(x), fld2(y)\n+  {}\n+\n+  unsigned fld : 7;\n+  unsigned fld2 : 7;\n+};\n+\n class Foo\n {\n public:\n@@ -101,6 +111,13 @@ class Foo\n     return UnalignedFieldsInBase (x, y, x2);\n   }\n \n+  Bitfields\n+  return_bitfields (unsigned int x, unsigned int y)\n+  {\n+    assert (this->tag == EXPECTED_TAG);\n+    return Bitfields(x, y);\n+  }\n+\n private:\n   /* Use a tag to detect if the \"this\" value is correct.  */\n   static const int EXPECTED_TAG = 0xF00F00F0;\n@@ -116,5 +133,6 @@ main (int argc, char *argv[])\n   foo.return_non_trivial_destructor(3);\n   foo.return_unaligned(4, 5);\n   foo.return_unaligned_in_base(6, 7, 8);\n+  foo.return_bitfields(23, 74);\n   return 0;  // break-here\n }"
    },
    {
      "sha": "beef46ad133d4e899225b9e59eccbd86274745d7",
      "filename": "gdb/testsuite/gdb.arch/amd64-eval.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/gdb.arch/amd64-eval.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a59240a41ac34d91e4ef5dd8b484763639388364/gdb/testsuite/gdb.arch/amd64-eval.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/amd64-eval.exp?ref=a59240a41ac34d91e4ef5dd8b484763639388364",
      "patch": "@@ -41,3 +41,5 @@ gdb_test \"call foo.return_unaligned(78, 9.25)\" \\\n     \" = {x = 78, y = 9.25}\"\n gdb_test \"call foo.return_unaligned_in_base(23, 4.5, 67)\" \\\n     \" = {<UnalignedFields> = {x = 23, y = 4.5}, x2 = 67}\"\n+gdb_test \"call foo.return_bitfields(23, 74)\" \\\n+    \" = {fld = 23, fld2 = 74}\""
    }
  ]
}