{
  "sha": "9a28444faa68e2f93210cf8ed5a2375e79de19a9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWEyODQ0NGZhYTY4ZTJmOTMyMTBjZjhlZDVhMjM3NWU3OWRlMTlhOQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-23T04:41:21Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-23T21:40:32Z"
    },
    "message": "sim: rl78: rename open symbol to avoid collisions\n\nIf the header files define open(), make sure our local open var\ndoesn't shadow it.",
    "tree": {
      "sha": "72e97973090958df51ffd6d1bff88f954a5211a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/72e97973090958df51ffd6d1bff88f954a5211a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9a28444faa68e2f93210cf8ed5a2375e79de19a9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a28444faa68e2f93210cf8ed5a2375e79de19a9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9a28444faa68e2f93210cf8ed5a2375e79de19a9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a28444faa68e2f93210cf8ed5a2375e79de19a9/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e82a36be9a4bb2b27379b2b3862c5ff09cdfab8b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e82a36be9a4bb2b27379b2b3862c5ff09cdfab8b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e82a36be9a4bb2b27379b2b3862c5ff09cdfab8b"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 10,
    "deletions": 4
  },
  "files": [
    {
      "sha": "60102ee97a8741fdde8814d25aeef44a40e26a1b",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a28444faa68e2f93210cf8ed5a2375e79de19a9/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a28444faa68e2f93210cf8ed5a2375e79de19a9/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=9a28444faa68e2f93210cf8ed5a2375e79de19a9",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-23  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gdb-if.c (open): Rename to ...\n+\t(is_open): ... this.\n+\t(sim_open, sim_close): Rename open to is_open.\n+\n 2021-05-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cpu.c, gdb-if.c, load.c, main.c, mem.c, rl78.c, trace.c: Replace"
    },
    {
      "sha": "ee799657076ed57c7b10c81b3f228785401babbb",
      "filename": "sim/rl78/gdb-if.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a28444faa68e2f93210cf8ed5a2375e79de19a9/sim/rl78/gdb-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a28444faa68e2f93210cf8ed5a2375e79de19a9/sim/rl78/gdb-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/gdb-if.c?ref=9a28444faa68e2f93210cf8ed5a2375e79de19a9",
      "patch": "@@ -56,7 +56,7 @@ static struct sim_state the_minisim = {\n   \"This is the sole rl78 minisim instance.\"\n };\n \n-static int open;\n+static int is_open;\n \n static struct host_callback_struct *host_callbacks;\n \n@@ -69,7 +69,7 @@ sim_open (SIM_OPEN_KIND kind,\n \t  struct host_callback_struct *callback,\n \t  struct bfd *abfd, char * const *argv)\n {\n-  if (open)\n+  if (is_open)\n     fprintf (stderr, \"rl78 minisim: re-opened sim\\n\");\n \n   /* The 'run' interface doesn't use this function, so we don't care\n@@ -88,7 +88,7 @@ sim_open (SIM_OPEN_KIND kind,\n   trace = 0;\n \n   sim_disasm_init (abfd);\n-  open = 1;\n+  is_open = 1;\n \n   while (argv != NULL && *argv != NULL)\n     {\n@@ -145,7 +145,7 @@ sim_close (SIM_DESC sd, int quitting)\n   /* Not much to do.  At least free up our memory.  */\n   init_mem ();\n \n-  open = 0;\n+  is_open = 0;\n }\n \n /* Open the program to run; print a message if the program cannot"
    }
  ]
}