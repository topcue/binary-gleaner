{
  "sha": "e6fcee3a73ddab55e3b35b7705b01035383e5417",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTZmY2VlM2E3M2RkYWI1NWUzYjM1Yjc3MDViMDEwMzUzODNlNTQxNw==",
  "commit": {
    "author": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:49:13Z"
    },
    "committer": {
      "name": "Joel Brobecker",
      "email": "brobecker@adacore.com",
      "date": "2020-11-24T02:49:13Z"
    },
    "message": "Make function fixed_point_scaling_factor a method of struct type\n\nThis logically connects this function to the object it inspects.\n\ngdb/ChangeLog:\n\n        * gdbtypes.h (struct type) <fixed_point_scaling_factor>: New method,\n        replacing fixed_point_scaling_factor.  All callers updated\n        throughout this project.\n        (fixed_point_scaling_factor): Delete declaration.\n        * gdbtypes.c (type::fixed_point_scaling_factor): Replaces\n        fixed_point_scaling_factor.  Adjust implementation accordingly.",
    "tree": {
      "sha": "38ef476f6ba4c32b607fefa0b189cca54ff667a3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/38ef476f6ba4c32b607fefa0b189cca54ff667a3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e6fcee3a73ddab55e3b35b7705b01035383e5417",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6fcee3a73ddab55e3b35b7705b01035383e5417",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e6fcee3a73ddab55e3b35b7705b01035383e5417",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6fcee3a73ddab55e3b35b7705b01035383e5417/comments",
  "author": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "brobecke",
    "id": 11981700,
    "node_id": "MDQ6VXNlcjExOTgxNzAw",
    "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/brobecke",
    "html_url": "https://github.com/brobecke",
    "followers_url": "https://api.github.com/users/brobecke/followers",
    "following_url": "https://api.github.com/users/brobecke/following{/other_user}",
    "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions",
    "organizations_url": "https://api.github.com/users/brobecke/orgs",
    "repos_url": "https://api.github.com/users/brobecke/repos",
    "events_url": "https://api.github.com/users/brobecke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/brobecke/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d19937a74c51872e8bbff6e37d9b89b202519b07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d19937a74c51872e8bbff6e37d9b89b202519b07",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d19937a74c51872e8bbff6e37d9b89b202519b07"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 26,
    "deletions": 15
  },
  "files": [
    {
      "sha": "d1a1b9584f477dcd7360907eb350906949b6b172",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -1,3 +1,12 @@\n+2020-11-24  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* gdbtypes.h (struct type) <fixed_point_scaling_factor>: New method,\n+\treplacing fixed_point_scaling_factor.  All callers updated\n+\tthroughout this project.\n+\t(fixed_point_scaling_factor): Delete declaration.\n+\t* gdbtypes.c (type::fixed_point_scaling_factor): Replaces\n+\tfixed_point_scaling_factor.  Adjust implementation accordingly.\n+\n 2020-11-24  Joel Brobecker  <brobecker@adacore.com>\n \n \t* gdbtypes.h (struct type) <fixed_point_type_base_type> New method,"
    },
    {
      "sha": "4eaefa5ee652f7bc75b007a321fde71f595abda7",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -4927,7 +4927,7 @@ static void\n print_fixed_point_type_info (struct type *type, int spaces)\n {\n   printfi_filtered (spaces + 2, \"scaling factor: %s\\n\",\n-\t\t    fixed_point_scaling_factor (type).str ().c_str ());\n+\t\t    type->fixed_point_scaling_factor ().str ().c_str ());\n }\n \n static struct obstack dont_print_type_obstack;\n@@ -5881,9 +5881,9 @@ type::fixed_point_type_base_type ()\n /* See gdbtypes.h.  */\n \n const gdb_mpq &\n-fixed_point_scaling_factor (struct type *type)\n+type::fixed_point_scaling_factor ()\n {\n-  type = type->fixed_point_type_base_type ();\n+  struct type *type = this->fixed_point_type_base_type ();\n \n   return type->fixed_point_info ().scaling_factor;\n }"
    },
    {
      "sha": "eecd874cfae1a668e8743f13fbddaa94a3651573",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -1224,6 +1224,11 @@ struct type\n \n   struct type *fixed_point_type_base_type ();\n \n+  /* * Assuming that THIS is a TYPE_CODE_FIXED_POINT, return its scaling\n+     factor.  */\n+\n+  const gdb_mpq &fixed_point_scaling_factor ();\n+\n   /* * Return the dynamic property of the requested KIND from this type's\n      list of dynamic properties.  */\n   dynamic_prop *dyn_prop (dynamic_prop_node_kind kind) const;\n@@ -2596,9 +2601,6 @@ extern int type_not_associated (const struct type *type);\n    a range type whose base type is a TYPE_CODE_FIXED_POINT.  */\n extern bool is_fixed_point_type (struct type *type);\n \n-/* Given TYPE, which is a fixed point type, return its scaling factor.  */\n-extern const gdb_mpq &fixed_point_scaling_factor (struct type *type);\n-\n /* Allocate a fixed-point type info for TYPE.  This should only be\n    called by INIT_FIXED_POINT_SPECIFIC.  */\n extern void allocate_fixed_point_type_info (struct type *type);"
    },
    {
      "sha": "a3fc9ccff306b7a9e492cb15b06e82a73cac63bb",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -667,7 +667,7 @@ print_type_scalar (struct type *type, LONGEST val, struct ui_file *stream)\n void\n print_type_fixed_point (struct type *type, struct ui_file *stream)\n {\n-  std::string small_img = fixed_point_scaling_factor (type).str ();\n+  std::string small_img = type->fixed_point_scaling_factor ().str ();\n \n   fprintf_filtered (stream, \"%s-byte fixed point (small = %s)\",\n \t\t    pulongest (TYPE_LENGTH (type)), small_img.c_str ());"
    },
    {
      "sha": "29ac46b4492b295d7b8af0602044f369063a28c2",
      "filename": "gdb/valarith.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valarith.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valarith.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valarith.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -911,11 +911,11 @@ fixed_point_binop (struct value *arg1, struct value *arg2, enum exp_opcode op)\n   v1.read_fixed_point (gdb::make_array_view (value_contents (arg1),\n \t\t\t\t\t     TYPE_LENGTH (type1)),\n \t\t       type_byte_order (type1), type1->is_unsigned (),\n-\t\t       fixed_point_scaling_factor (type1));\n+\t\t       type1->fixed_point_scaling_factor ());\n   v2.read_fixed_point (gdb::make_array_view (value_contents (arg2),\n \t\t\t\t\t     TYPE_LENGTH (type2)),\n \t\t       type_byte_order (type2), type2->is_unsigned (),\n-\t\t       fixed_point_scaling_factor (type2));\n+\t\t       type2->fixed_point_scaling_factor ());\n \n #define INIT_VAL_WITH_FIXED_POINT_VAL(RESULT) \\\n   do { \\\n@@ -924,7 +924,7 @@ fixed_point_binop (struct value *arg1, struct value *arg2, enum exp_opcode op)\n         (gdb::make_array_view (value_contents_raw (val), \\\n \t\t\t       TYPE_LENGTH (type1)), \\\n \t type_byte_order (type1), type1->is_unsigned (), \\\n-\t fixed_point_scaling_factor (type1)); \\\n+\t type1->fixed_point_scaling_factor ()); \\\n      } while (0)\n \n   switch (op)"
    },
    {
      "sha": "4d0e002b20d618c0e146d54c70e570aa942c6447",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -363,7 +363,7 @@ value_cast_to_fixed_point (struct type *to_type, struct value *from_val)\n       mpq_set_z (vq.val, vz.val);\n \n       if (is_fixed_point_type (from_type))\n-\tmpq_mul (vq.val, vq.val, fixed_point_scaling_factor (from_type).val);\n+\tmpq_mul (vq.val, vq.val, from_type->fixed_point_scaling_factor ().val);\n     }\n \n   else\n@@ -373,7 +373,7 @@ value_cast_to_fixed_point (struct type *to_type, struct value *from_val)\n   /* Divide that value by the scaling factor to obtain the unscaled\n      value, first in rational form, and then in integer form.  */\n \n-  mpq_div (vq.val, vq.val, fixed_point_scaling_factor (to_type).val);\n+  mpq_div (vq.val, vq.val, to_type->fixed_point_scaling_factor ().val);\n   gdb_mpz unscaled = vq.get_rounded ();\n \n   /* Finally, create the result value, and pack the unscaled value\n@@ -527,7 +527,7 @@ value_cast (struct type *type, struct value *arg2)\n \t  fp_val.read_fixed_point\n \t    (gdb::make_array_view (value_contents (arg2), TYPE_LENGTH (type2)),\n \t     type_byte_order (type2), type2->is_unsigned (),\n-\t     fixed_point_scaling_factor (type2));\n+\t     type2->fixed_point_scaling_factor ());\n \n \t  struct value *v = allocate_value (to_type);\n \t  target_float_from_host_double (value_contents_raw (v),"
    },
    {
      "sha": "50278ac30933e229633108a86700c48a027902e4",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -811,7 +811,7 @@ generic_val_print_fixed_point (struct value *val, struct ui_file *stream,\n \n       f.read_fixed_point (gdb::make_array_view (valaddr, TYPE_LENGTH (type)),\n \t\t\t  type_byte_order (type), type->is_unsigned (),\n-\t\t\t  fixed_point_scaling_factor (type));\n+\t\t\t  type->fixed_point_scaling_factor ());\n \n       const char *fmt = TYPE_LENGTH (type) < 4 ? \"%.11Fg\" : \"%.17Fg\";\n       std::string str = gmp_string_printf (fmt, f.val);"
    },
    {
      "sha": "0087fe577a17e4e678da6cfab67572f21d0b49af",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6fcee3a73ddab55e3b35b7705b01035383e5417/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=e6fcee3a73ddab55e3b35b7705b01035383e5417",
      "patch": "@@ -2814,7 +2814,7 @@ unpack_long (struct type *type, const gdb_byte *valaddr)\n \tgdb_mpq vq;\n \tvq.read_fixed_point (gdb::make_array_view (valaddr, len),\n \t\t\t     byte_order, nosign,\n-\t\t\t     fixed_point_scaling_factor (type));\n+\t\t\t     type->fixed_point_scaling_factor ());\n \n \tgdb_mpz vz;\n \tmpz_tdiv_q (vz.val, mpq_numref (vq.val), mpq_denref (vq.val));"
    }
  ]
}