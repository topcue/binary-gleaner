{
  "sha": "57cb32b3c366585f7fafd6a741771ce826ba95f3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTdjYjMyYjNjMzY2NTg1ZjdmYWZkNmE3NDE3NzFjZTgyNmJhOTVmMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-22T09:56:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-22T12:52:13Z"
    },
    "message": "H8300 use of uninitialised value\n\n\t* h8300-dis.c (bfd_h8_disassemble): Limit data[] access to that\n\tsuccessflly read from section.",
    "tree": {
      "sha": "fce9a462408e44551f2c3a1b797034fdcc1a6268",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fce9a462408e44551f2c3a1b797034fdcc1a6268"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/57cb32b3c366585f7fafd6a741771ce826ba95f3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57cb32b3c366585f7fafd6a741771ce826ba95f3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/57cb32b3c366585f7fafd6a741771ce826ba95f3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57cb32b3c366585f7fafd6a741771ce826ba95f3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "beea5cc1bc2249389dc77ea0c86ab82dafd05bb5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/beea5cc1bc2249389dc77ea0c86ab82dafd05bb5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/beea5cc1bc2249389dc77ea0c86ab82dafd05bb5"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 33,
    "deletions": 6
  },
  "files": [
    {
      "sha": "4c05e849daf5037899be53d4d64f5efba54258b3",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57cb32b3c366585f7fafd6a741771ce826ba95f3/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57cb32b3c366585f7fafd6a741771ce826ba95f3/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=57cb32b3c366585f7fafd6a741771ce826ba95f3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* h8300-dis.c (bfd_h8_disassemble): Limit data[] access to that\n+\tsuccessflly read from section.\n+\n 2020-03-22  Alan Modra  <amodra@gmail.com>\n \n \t* arc-dis.c (find_format): Use ISO C string concatenation rather"
    },
    {
      "sha": "f5e00c40c1b2a499d5ef0b11685f169ae0852633",
      "filename": "opcodes/h8300-dis.c",
      "status": "modified",
      "additions": 28,
      "deletions": 6,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57cb32b3c366585f7fafd6a741771ce826ba95f3/opcodes/h8300-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57cb32b3c366585f7fafd6a741771ce826ba95f3/opcodes/h8300-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/h8300-dis.c?ref=57cb32b3c366585f7fafd6a741771ce826ba95f3",
      "patch": "@@ -327,7 +327,7 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n   const struct h8_instruction *qi;\n   char const **pregnames = mach != 0 ? lregnames : wregnames;\n   int status;\n-  unsigned int l;\n+  unsigned int maxlen;\n   unsigned char data[MAX_CODE_NIBBLES];\n   void *stream = info->stream;\n   fprintf_ftype outfn = info->fprintf_func;\n@@ -345,8 +345,8 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n       return -1;\n     }\n \n-  for (l = 2; status == 0 && l < sizeof (data) / 2; l += 2)\n-    status = info->read_memory_func (addr + l, data + l, 2, info);\n+  for (maxlen = 2; status == 0 && maxlen < sizeof (data) / 2; maxlen += 2)\n+    status = info->read_memory_func (addr + maxlen, data + maxlen, 2, info);\n \n   /* Find the exact opcode/arg combo.  */\n   for (qi = h8_instructions; qi->opcode->name; qi++)\n@@ -355,7 +355,7 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n       const op_type *nib = q->data.nib;\n       unsigned int len = 0;\n \n-      while (1)\n+      while (len / 2 < maxlen)\n \t{\n \t  op_type looking_for = *nib;\n \t  int thisnib = data[len / 2];\n@@ -462,6 +462,22 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n \t\t       || (looking_for & MODE) == INDEXW\n \t\t       || (looking_for & MODE) == INDEXL)\n \t\t{\n+\t\t  int extra;\n+\t\t  switch (looking_for & SIZE)\n+\t\t    {\n+\t\t    case L_16:\n+\t\t    case L_16U:\n+\t\t      extra = 1;\n+\t\t      break;\n+\t\t    case L_32:\n+\t\t      extra = 3;\n+\t\t      break;\n+\t\t    default:\n+\t\t      extra = 0;\n+\t\t      break;\n+\t\t    }\n+\t\t  if (len / 2 + extra >= maxlen)\n+\t\t    break;\n \t\t  extract_immediate (stream, looking_for, thisnib,\n \t\t\t\t     data + len / 2, cst + opnr,\n \t\t\t\t     cstlen + opnr, q);\n@@ -516,6 +532,8 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n \t      else if ((looking_for & SIZE) == L_16\n \t\t       || (looking_for & SIZE) == L_16U)\n \t\t{\n+\t\t  if (len / 2 + 1 >= maxlen)\n+\t\t    break;\n \t\t  cst[opnr] = (data[len / 2]) * 256 + data[(len + 2) / 2];\n \t\t  cstlen[opnr] = 16;\n \t\t}\n@@ -529,8 +547,10 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n \t\t}\n \t      else if ((looking_for & SIZE) == L_32)\n \t\t{\n-\t\t  int i = len / 2;\n+\t\t  unsigned int i = len / 2;\n \n+\t\t  if (i + 3 >= maxlen)\n+\t\t    break;\n \t\t  cst[opnr] = (((unsigned) data[i] << 24)\n \t\t\t       | (data[i + 1] << 16)\n \t\t\t       | (data[i + 2] << 8)\n@@ -540,8 +560,10 @@ bfd_h8_disassemble (bfd_vma addr, disassemble_info *info, int mach)\n \t\t}\n \t      else if ((looking_for & SIZE) == L_24)\n \t\t{\n-\t\t  int i = len / 2;\n+\t\t  unsigned int i = len / 2;\n \n+\t\t  if (i + 2 >= maxlen)\n+\t\t    break;\n \t\t  cst[opnr] =\n \t\t    (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);\n \t\t  cstlen[opnr] = 24;"
    }
  ]
}