{
  "sha": "336b30e58ae98fe66862ab8480d3f7bb885fef23",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzM2YjMwZTU4YWU5OGZlNjY4NjJhYjg0ODBkM2Y3YmI4ODVmZWYyMw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-06-17T15:23:03Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-06-17T18:39:08Z"
    },
    "message": "Don't call sigtimedwait for scoped_ignore_sigttou\n\nBecause SIGTTOU is sent to the whole process instead of to a specific\nthread, consuming a pending SIGTTOU in the destructor of\nscoped_ignore_sigttou could consume a SIGTTOU signal raised due to\nactions done by some other thread.  Simply avoid sigtimedwait in\nscoped_ignore_sigttou, thus plugging the race.  This works because we\nknow that when the thread writes to the terminal and the signal is\nblocked, the kernel does not raise the signal at all.\n\nTested on GNU/Linux, Solaris 11 and FreeBSD.\n\ngdb/ChangeLog:\nyyyy-mm-dd  Pedro Alves  <pedro@palves.net>\n\n\t* scoped_ignore_signal.h (scoped_ignore_signal): Add\n\tConsumePending template parameter.\n\t(scoped_ignore_signal::~scoped_ignore_signal): Skip calling\n\tsigtimedwait if ConsumePending is false.\n\t(scoped_ignore_sigpipe): Initialize with ConsumePending=true.\n\t* scoped_ignore_sigttou.h (scoped_ignore_sigttou)\n\t<m_ignore_signal>: Initialize with ConsumePending=false.\n\nChange-Id: I92f754dbc45c45819dce2ce68b8c067d8d5c61b1",
    "tree": {
      "sha": "b0def784a1fefc869831e11a4ec3b29edea55501",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b0def784a1fefc869831e11a4ec3b29edea55501"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/336b30e58ae98fe66862ab8480d3f7bb885fef23",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/336b30e58ae98fe66862ab8480d3f7bb885fef23",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/336b30e58ae98fe66862ab8480d3f7bb885fef23",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/336b30e58ae98fe66862ab8480d3f7bb885fef23/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e013d20dc73b40d4b70c4a366c9adc619503e66b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e013d20dc73b40d4b70c4a366c9adc619503e66b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e013d20dc73b40d4b70c4a366c9adc619503e66b"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 24,
    "deletions": 6
  },
  "files": [
    {
      "sha": "c70f6ef5329f8eed5f3d921fa906e1cc762008fc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=336b30e58ae98fe66862ab8480d3f7bb885fef23",
      "patch": "@@ -1,3 +1,13 @@\n+2021-06-17  Pedro Alves  <pedro@palves.net>\n+\n+\t* scoped_ignore_signal.h (scoped_ignore_signal): Add\n+\tConsumePending template parameter.\n+\t(scoped_ignore_signal::~scoped_ignore_signal): Skip calling\n+\tsigtimedwait if ConsumePending is false.\n+\t(scoped_ignore_sigpipe): Initialize with ConsumePending=true.\n+\t* scoped_ignore_sigttou.h (scoped_ignore_sigttou)\n+\t<m_ignore_signal>: Initialize with ConsumePending=false.\n+\n 2021-06-17  Pedro Alves  <pedro@palves.net>\n \n \t* Makefile.in (SELFTESTS_SRCS): Add"
    },
    {
      "sha": "a14c96779bf214d6a407dc2efcb8e3226c86347b",
      "filename": "gdbsupport/scoped_ignore_signal.h",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdbsupport/scoped_ignore_signal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdbsupport/scoped_ignore_signal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/scoped_ignore_signal.h?ref=336b30e58ae98fe66862ab8480d3f7bb885fef23",
      "patch": "@@ -25,9 +25,16 @@\n /* RAII class used to ignore a signal in a scope.  If sigprocmask is\n    supported, then the signal is only ignored by the calling thread.\n    Otherwise, the signal disposition is set to SIG_IGN, which affects\n-   the whole process.  */\n-\n-template <int Sig>\n+   the whole process.  If ConsumePending is true, the destructor\n+   consumes a pending Sig.  SIGPIPE for example is queued on the\n+   thread even if blocked at the time the pipe is written to.  SIGTTOU\n+   OTOH is not raised at all if the thread writing to the terminal has\n+   it blocked.  Because SIGTTOU is sent to the whole process instead\n+   of to a specific thread, consuming a pending SIGTTOU in the\n+   destructor could consume a signal raised due to actions done by\n+   some other thread.  */\n+\n+template <int Sig, bool ConsumePending>\n class scoped_ignore_signal\n {\n public:\n@@ -58,7 +65,8 @@ class scoped_ignore_signal\n \n \t/* If we got a pending Sig signal, consume it before\n \t   unblocking.  */\n-\tsigtimedwait (&set, nullptr, &zero_timeout);\n+\tif (ConsumePending)\n+\t  sigtimedwait (&set, nullptr, &zero_timeout);\n \n \tsigprocmask (SIG_UNBLOCK, &set, nullptr);\n       }\n@@ -89,7 +97,7 @@ struct scoped_ignore_signal_nop\n };\n \n #ifdef SIGPIPE\n-using scoped_ignore_sigpipe = scoped_ignore_signal<SIGPIPE>;\n+using scoped_ignore_sigpipe = scoped_ignore_signal<SIGPIPE, true>;\n #else\n using scoped_ignore_sigpipe = scoped_ignore_signal_nop;\n #endif"
    },
    {
      "sha": "5695c5db9054b4f0fa34f153b94ff24bdc118e71",
      "filename": "gdbsupport/scoped_ignore_sigttou.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdbsupport/scoped_ignore_sigttou.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/336b30e58ae98fe66862ab8480d3f7bb885fef23/gdbsupport/scoped_ignore_sigttou.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/scoped_ignore_sigttou.h?ref=336b30e58ae98fe66862ab8480d3f7bb885fef23",
      "patch": "@@ -75,7 +75,7 @@ class scoped_ignore_sigttou\n   DISABLE_COPY_AND_ASSIGN (scoped_ignore_sigttou);\n \n private:\n-  lazy_init<scoped_ignore_signal<SIGTTOU>> m_ignore_signal;\n+  lazy_init<scoped_ignore_signal<SIGTTOU, false>> m_ignore_signal;\n };\n \n #else"
    }
  ]
}