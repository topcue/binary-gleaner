{
  "sha": "dd5fd28346863006668d3a04957f7b066f3b8b2a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGQ1ZmQyODM0Njg2MzAwNjY2OGQzYTA0OTU3ZjdiMDY2ZjNiOGIyYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:13Z"
    },
    "message": "Split out ada_binop_exp\n\nThis splits BINOP_EXP into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ada-lang.c (ada_binop_exp): New function.\n\t(ada_evaluate_subexp): Use it.",
    "tree": {
      "sha": "0c49e70bb92624c93d3513c0495e433f56142862",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c49e70bb92624c93d3513c0495e433f56142862"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dd5fd28346863006668d3a04957f7b066f3b8b2a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5fd28346863006668d3a04957f7b066f3b8b2a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dd5fd28346863006668d3a04957f7b066f3b8b2a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd5fd28346863006668d3a04957f7b066f3b8b2a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3848abd6e1d50d7b3da96a018ac39e0a5db2ac6b"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 29,
    "deletions": 13
  },
  "files": [
    {
      "sha": "2ac0fe7847d46550662639763a921c48b2ef4810",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd5fd28346863006668d3a04957f7b066f3b8b2a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd5fd28346863006668d3a04957f7b066f3b8b2a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=dd5fd28346863006668d3a04957f7b066f3b8b2a",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ada-lang.c (ada_binop_exp): New function.\n+\t(ada_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* ada-lang.c (ada_val_atr): Rename from value_val_atr.  Change"
    },
    {
      "sha": "be1827cedd81a157f0d916e76568dbf6431c547b",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 24,
      "deletions": 13,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dd5fd28346863006668d3a04957f7b066f3b8b2a/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dd5fd28346863006668d3a04957f7b066f3b8b2a/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=dd5fd28346863006668d3a04957f7b066f3b8b2a",
      "patch": "@@ -10364,6 +10364,29 @@ ada_binop_minmax (struct type *expect_type,\n     }\n }\n \n+/* A helper function for BINOP_EXP.  */\n+\n+static struct value *\n+ada_binop_exp (struct type *expect_type,\n+\t       struct expression *exp,\n+\t       enum noside noside, enum exp_opcode op,\n+\t       struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (value_type (arg1), not_lval);\n+  else\n+    {\n+      /* For integer exponentiation operations,\n+\t only promote the first argument.  */\n+      if (is_integral_type (value_type (arg2)))\n+\tunop_promote (exp->language_defn, exp->gdbarch, &arg1);\n+      else\n+\tbinop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n+\n+      return value_binop (arg1, arg2, op);\n+    }\n+}\n+\n /* Implement the evaluate_exp routine in the exp_descriptor structure\n    for the Ada language.  */\n \n@@ -10926,19 +10949,7 @@ ada_evaluate_subexp (struct type *expect_type, struct expression *exp,\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n       if (noside == EVAL_SKIP)\n \tgoto nosideret;\n-      else if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn value_zero (value_type (arg1), not_lval);\n-      else\n-\t{\n-\t  /* For integer exponentiation operations,\n-\t     only promote the first argument.  */\n-\t  if (is_integral_type (value_type (arg2)))\n-\t    unop_promote (exp->language_defn, exp->gdbarch, &arg1);\n-\t  else\n-\t    binop_promote (exp->language_defn, exp->gdbarch, &arg1, &arg2);\n-\n-\t  return value_binop (arg1, arg2, op);\n-\t}\n+      return ada_binop_exp (expect_type, exp, noside, op, arg1, arg2);\n \n     case UNOP_PLUS:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);"
    }
  ]
}