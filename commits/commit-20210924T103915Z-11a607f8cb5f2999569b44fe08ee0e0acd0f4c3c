{
  "sha": "11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c",
  "node_id": "C_kwDOANOeidoAKDExYTYwN2Y4Y2I1ZjI5OTk1NjliNDRmZTA4ZWUwZTBhY2QwZjRjM2M",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T10:39:15Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T10:39:15Z"
    },
    "message": "[gdb/testsuite] Fix DUPLICATEs gdb.dwarf2/dw2-is-stmt.exp\n\nFix these DUPLICATEs by using with_test_prefix:\n...\nDUPLICATE: gdb.dwarf2/dw2-is-stmt.exp: ensure we saw a valid line pattern, 1\nDUPLICATE: gdb.dwarf2/dw2-is-stmt.exp: ensure we saw a valid line pattern, 2\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "89b3c7bce12fd44a1608a9ec55936dc4fa4d2866",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89b3c7bce12fd44a1608a9ec55936dc4fa4d2866"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dfca0ed23fc32c7a6a157c46796a9cc56689a5ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dfca0ed23fc32c7a6a157c46796a9cc56689a5ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dfca0ed23fc32c7a6a157c46796a9cc56689a5ad"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 54,
    "deletions": 46
  },
  "files": [
    {
      "sha": "a226b6d73239311a3b7b04c07371b58d1529b7e7",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "status": "modified",
      "additions": 54,
      "deletions": 46,
      "changes": 100,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-is-stmt.exp?ref=11a607f8cb5f2999569b44fe08ee0e0acd0f4c3c",
      "patch": "@@ -188,59 +188,67 @@ runto_main\n # be a single instruction between line_label_1 and line_label_2, but\n # we allow for up to 25 (just a random number).\n \n-set i 0\n-set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n-\t   \"get pc before stepi loop at line_label_1\"]\n-while { $pc < $ll2 } {\n-    incr i\n-    set line_changed -1\n-    gdb_test_multiple \"stepi\" \"stepi until line_label_2, $i\" {\n-\t-re \"main, set var to 99.*$gdb_prompt\" {\n-\t    set line_changed 0\n-\t}\n-\t-re \"main, set var to 0.*$gdb_prompt \" {\n-\t    set line_changed 1\n-\t}\n-    }\n-    gdb_assert { $line_changed != -1 } \\\n-\t\"ensure we saw a valid line pattern, $i\"\n+with_test_prefix \"stepi until line_label_2\" {\n+    set i 0\n     set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n-\t\t\"get pc inside stepi loop from line_label_1, $i\"]\n-    if { $ll2 == $pc } {\n-\tgdb_assert { $line_changed } \\\n-\t    \"line must change at line_label_2\"\n-    } else {\n-\tgdb_assert { !$line_changed } \\\n-\t    \"line should not change until line_label_2, $i\"\n+\t\t\"get pc before stepi loop at line_label_1\"]\n+    while { $pc < $ll2 } {\n+\tincr i\n+\twith_test_prefix $i {\n+\t    set line_changed -1\n+\t    gdb_test_multiple \"stepi\" \"stepi until line_label_2\" {\n+\t\t-re \"main, set var to 99.*$gdb_prompt\" {\n+\t\t    set line_changed 0\n+\t\t}\n+\t\t-re \"main, set var to 0.*$gdb_prompt \" {\n+\t\t    set line_changed 1\n+\t\t}\n+\t    }\n+\t    gdb_assert { $line_changed != -1 } \\\n+\t\t\"ensure we saw a valid line pattern\"\n+\t    set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n+\t\t\t\"get pc inside stepi loop from line_label_1\"]\n+\t    if { $ll2 == $pc } {\n+\t\tgdb_assert { $line_changed } \\\n+\t\t    \"line must change at line_label_2\"\n+\t    } else {\n+\t\tgdb_assert { !$line_changed } \\\n+\t\t    \"line should not change until line_label_2\"\n+\t    }\n+\t}\n     }\n }\n \n # Now single instruction step forward until GDB reports a new source\n # line, at which point we should be at line_label_5.\n \n-set i 0\n-set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n-\t   \"get pc before stepi loop at line_label_2\"]\n-while { $pc < $ll5 } {\n-    incr i\n-    set line_changed -1\n-    gdb_test_multiple \"stepi\" \"stepi until line_label_5, $i\" {\n-\t-re \"main, set var to 0.*$gdb_prompt\" {\n-\t    set line_changed 0\n-\t}\n-\t-re \"main end.*$gdb_prompt \" {\n-\t    set line_changed 1\n-\t}\n-    }\n-    gdb_assert { $line_changed != -1 } \\\n-\t\"ensure we saw a valid line pattern, $i\"\n+with_test_prefix \"stepi until line_label_5\" {\n+    set i 0\n     set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n-\t\t\"get pc inside stepi loop from line_label_2, $i\"]\n-    if { $ll5 == $pc } {\n-\tgdb_assert { $line_changed } \\\n-\t    \"line must change at line_label_5\"\n-    } else {\n-\tgdb_assert { !$line_changed } \\\n-\t    \"line should not change until line_label_5, $i\"\n+\t\t\"get pc before stepi loop at line_label_2\"]\n+    while { $pc < $ll5 } {\n+\tincr i\n+\twith_test_prefix $i {\n+\t    set line_changed -1\n+\t    gdb_test_multiple \"stepi\" \"stepi until line_label_5\" {\n+\t\t-re \"main, set var to 0.*$gdb_prompt\" {\n+\t\t    set line_changed 0\n+\t\t}\n+\t\t-re \"main end.*$gdb_prompt \" {\n+\t\t    set line_changed 1\n+\t\t}\n+\t    }\n+\t    gdb_assert { $line_changed != -1 } \\\n+\t\t\"ensure we saw a valid line pattern\"\n+\t    set pc [get_hexadecimal_valueof \"\\$pc\" \"NO-PC\" \\\n+\t\t\t\"get pc inside stepi loop from line_label_2\"]\n+\t    if { $ll5 == $pc } {\n+\t\tgdb_assert { $line_changed } \\\n+\t\t    \"line must change at line_label_5\"\n+\t    } else {\n+\t\tgdb_assert { !$line_changed } \\\n+\t\t    \"line should not change until line_label_5\"\n+\t    }\n+\t}\n     }\n }"
    }
  ]
}