{
  "sha": "0ba59a29407a9d24559a653ce0401a26d9a37aaa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGJhNTlhMjk0MDdhOWQyNDU1OWE2NTNjZTA0MDFhMjZkOWEzN2FhYQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:45:17Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2019-12-04T09:45:17Z"
    },
    "message": "x86-64: accept 64-bit LFS/LGS/LSS forms with suffix or operand size specifier\n\nSince we accept these without suffix / operand size specifier, we should\nalso do so with one. (The fact that we unilaterally accept these, other\nthan far branches, rather than limiting them to Intel64 mode, will be\ntaken care of later on.)\n\nAlso take the opportunity and make sure \"lfs <reg>, tbyte ptr <mem>\"\net al get rejected outside of 64-bit mode. This became broken by\ndc2be329b950 (\"i386: Only check suffix in instruction mnemonic\").\nFurthermore cover lgdt et al in the Intel syntax handling as well, which\ncontinued to work after said commit just by coincidence.",
    "tree": {
      "sha": "e69a7402cea6bd8fa6d76132ad97b1ee8bdb89e5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e69a7402cea6bd8fa6d76132ad97b1ee8bdb89e5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0ba59a29407a9d24559a653ce0401a26d9a37aaa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ba59a29407a9d24559a653ce0401a26d9a37aaa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0ba59a29407a9d24559a653ce0401a26d9a37aaa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ba59a29407a9d24559a653ce0401a26d9a37aaa/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d488367a421f4c4fd47d37ae0013318024b1019b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d488367a421f4c4fd47d37ae0013318024b1019b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d488367a421f4c4fd47d37ae0013318024b1019b"
    }
  ],
  "stats": {
    "total": 115,
    "additions": 101,
    "deletions": 14
  },
  "files": [
    {
      "sha": "992be9bbe3c7f20052090e92584bb84d6ffe4255",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -1,3 +1,17 @@\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386-intel.c (i386_intel_operand): Handle LFS et al\n+\tas well as LGDT at al when processing O_tbyte_ptr.\n+\t* testsuite/gas/i386/intelbad.s: Add LDS et al cases.\n+\t* testsuite/gas/i386/x86-64-intel64.s,\n+\t* testsuite/gas/i386/x86-64-opcode.s:  Add LFS et al cases.\n+\t* testsuite/gas/i386/ilp32/x86-64-intel64.d: Add -mintel64\n+\tcommand line option and fold expectations with parent dir test.\n+\t* testsuite/gas/i386/x86-64-intel64.d: Add -mintel64 command\n+\tline option and adjust expectations.\n+\t* testsuite/gas/i386/intelbad.l,\n+\ttestsuite/gas/i386/x86-64-opcode.d: Adjust expectations.\n+\n 2019-12-04  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386-intel.c (i386_intel_operand): Also handle DWORD"
    },
    {
      "sha": "b639ab7dd6b6743b0e6aa7df75030040b11bd0f6",
      "filename": "gas/config/tc-i386-intel.c",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/config/tc-i386-intel.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/config/tc-i386-intel.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386-intel.c?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -698,6 +698,15 @@ i386_intel_operand (char *operand_string, int got_a_float)\n \t  i.types[this_operand].bitfield.tbyte = 1;\n \t  if (got_a_float == 1)\n \t    suffix = LONG_DOUBLE_MNEM_SUFFIX;\n+\t  else if (current_templates->start->operand_types[0].bitfield.fword\n+\t\t   || current_templates->start->operand_types[0].bitfield.tbyte)\n+\t    {\n+\t      /* l[defgs]s, [ls][gi]dt */\n+\t      if (flag_code == CODE_64BIT)\n+\t\tsuffix = QWORD_MNEM_SUFFIX;\n+\t      else\n+\t\ti.types[this_operand].bitfield.byte = 1; /* cause an error */\n+\t    }\n \t  else\n \t    suffix = BYTE_MNEM_SUFFIX; /* so it will cause an error */\n \t  break;"
    },
    {
      "sha": "120e56708878eb1c82e66e4404ef0797d4f8f8d7",
      "filename": "gas/testsuite/gas/i386/ilp32/x86-64-intel64.d",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/ilp32/x86-64-intel64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/ilp32/x86-64-intel64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/ilp32/x86-64-intel64.d?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -1,11 +1,5 @@\n #source: ../x86-64-intel64.s\n+#as: -mintel64\n #objdump: -dw\n #name: x86-64 (ILP32) Intel64\n-\n-.*: +file format .*\n-\n-Disassembly of section .text:\n-0+ <_start>:\n-[ \t]*[a-f0-9]+:\t0f 05                \tsyscall \n-[ \t]*[a-f0-9]+:\t0f 07                \tsysret \n-#pass\n+#dump: ../x86-64-intel64.d"
    },
    {
      "sha": "4dc091741f6ba06d24d10557263f37da1d00e9bb",
      "filename": "gas/testsuite/gas/i386/intelbad.l",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/intelbad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/intelbad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/intelbad.l?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -152,3 +152,8 @@\n .*:168: Error: .*\n .*:169: Error: .*\n .*:172: Error: .*\n+.*:174: Error: .*\n+.*:175: Error: .*\n+.*:176: Warning: .*\n+.*:177: Error: .*\n+.*:178: Error: .*"
    },
    {
      "sha": "93e1c44e84b3ab646bb1ce8bd932e219af644bd3",
      "filename": "gas/testsuite/gas/i386/intelbad.s",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/intelbad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/intelbad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/intelbad.s?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -170,3 +170,9 @@ start:\n #XXX?\tmovzx\teax, byte ptr [1]\n \n \tmov\teax, 3:5\n+\n+\tlds\teax, byte ptr [eax]\n+\tles\teax, word ptr [eax]\n+\tlfs\teax, dword ptr [eax]\n+\tlgs\teax, qword ptr [eax]\n+\tlss\teax, tbyte ptr [eax]"
    },
    {
      "sha": "545fcdcfc5408a445ed0443e9036101871e4a421",
      "filename": "gas/testsuite/gas/i386/x86-64-intel64.d",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-intel64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-intel64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-intel64.d?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -1,10 +1,23 @@\n+#as: -mintel64\n #objdump: -dw\n #name: x86-64 Intel64\n \n .*: +file format .*\n \n Disassembly of section .text:\n 0+ <_start>:\n+[ \t]*[a-f0-9]+:\t48 0f b4 08          \tlfs    \\(%rax\\),%rcx\n+[ \t]*[a-f0-9]+:\t48 0f b4 08          \tlfs    \\(%rax\\),%rcx\n+[ \t]*[a-f0-9]+:\t48 0f b5 11          \tlgs    \\(%rcx\\),%rdx\n+[ \t]*[a-f0-9]+:\t48 0f b5 11          \tlgs    \\(%rcx\\),%rdx\n+[ \t]*[a-f0-9]+:\t48 0f b2 1a          \tlss    \\(%rdx\\),%rbx\n+[ \t]*[a-f0-9]+:\t48 0f b2 1a          \tlss    \\(%rdx\\),%rbx\n [ \t]*[a-f0-9]+:\t0f 05                \tsyscall \n [ \t]*[a-f0-9]+:\t0f 07                \tsysret \n+[ \t]*[a-f0-9]+:\t48 0f b4 01          \tlfs    \\(%rcx\\),%rax\n+[ \t]*[a-f0-9]+:\t48 0f b4 01          \tlfs    \\(%rcx\\),%rax\n+[ \t]*[a-f0-9]+:\t48 0f b5 0a          \tlgs    \\(%rdx\\),%rcx\n+[ \t]*[a-f0-9]+:\t48 0f b5 0a          \tlgs    \\(%rdx\\),%rcx\n+[ \t]*[a-f0-9]+:\t48 0f b2 13          \tlss    \\(%rbx\\),%rdx\n+[ \t]*[a-f0-9]+:\t48 0f b2 13          \tlss    \\(%rbx\\),%rdx\n #pass"
    },
    {
      "sha": "233f6b72a6086d471844126011d1aac14fec1346",
      "filename": "gas/testsuite/gas/i386/x86-64-intel64.s",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-intel64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-intel64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-intel64.s?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -3,5 +3,20 @@\n \t.text\n \t.arch core2\n _start:\n+\tlfs\t(%rax), %rcx\n+\tlfsq\t(%rax), %rcx\n+\tlgs\t(%rcx), %rdx\n+\tlgsq\t(%rcx), %rdx\n+\tlss\t(%rdx), %rbx\n+\tlssq\t(%rdx), %rbx\n+\n \tsyscall\n \tsysret\n+\n+\t.intel_syntax noprefix\n+\tlfs\trax, [rcx]\n+\tlfs\trax, tbyte ptr [rcx]\n+\tlgs\trcx, [rdx]\n+\tlgs\trcx, tbyte ptr [rdx]\n+\tlss\trdx, [rbx]\n+\tlss\trdx, tbyte ptr [rbx]"
    },
    {
      "sha": "70e40307f0b5c9489ea98722ed0234ba41b5ca10",
      "filename": "gas/testsuite/gas/i386/x86-64-opcode.d",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-opcode.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-opcode.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-opcode.d?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -45,6 +45,18 @@ Disassembly of section .text:\n [ \t]*[a-f0-9]+:\tc7 00 00 00 00 70    \tmovl   \\$0x70000000,\\(%rax\\)\n [ \t]*[a-f0-9]+:\t49 c7 00 00 00 00 70 \tmovq   \\$0x70000000,\\(%r8\\)\n [ \t]*[a-f0-9]+:\t48 c7 00 00 00 00 70 \tmovq   \\$0x70000000,\\(%rax\\)\n+[ \t]*[a-f0-9]+:\t0f b4 08             \tlfs    \\(%rax\\),%ecx\n+[ \t]*[a-f0-9]+:\t0f b4 01             \tlfs    \\(%rcx\\),%eax\n+[ \t]*[a-f0-9]+:\t66 0f b4 08          \tlfs    \\(%rax\\),%cx\n+[ \t]*[a-f0-9]+:\t66 0f b4 01          \tlfs    \\(%rcx\\),%ax\n+[ \t]*[a-f0-9]+:\t0f b5 11             \tlgs    \\(%rcx\\),%edx\n+[ \t]*[a-f0-9]+:\t0f b5 0a             \tlgs    \\(%rdx\\),%ecx\n+[ \t]*[a-f0-9]+:\t66 0f b5 11          \tlgs    \\(%rcx\\),%dx\n+[ \t]*[a-f0-9]+:\t66 0f b5 0a          \tlgs    \\(%rdx\\),%cx\n+[ \t]*[a-f0-9]+:\t0f b2 1a             \tlss    \\(%rdx\\),%ebx\n+[ \t]*[a-f0-9]+:\t0f b2 13             \tlss    \\(%rbx\\),%edx\n+[ \t]*[a-f0-9]+:\t66 0f b2 1a          \tlss    \\(%rdx\\),%bx\n+[ \t]*[a-f0-9]+:\t66 0f b2 13          \tlss    \\(%rbx\\),%dx\n [ \t]*[a-f0-9]+:\t41 0f c3 00          \tmovnti %eax,\\(%r8\\)\n [ \t]*[a-f0-9]+:\t0f c3 00             \tmovnti %eax,\\(%rax\\)\n [ \t]*[a-f0-9]+:\t49 0f c3 00          \tmovnti %rax,\\(%r8\\)"
    },
    {
      "sha": "f066e613bd3c9e71a18f97c20b666d6a20c4b183",
      "filename": "gas/testsuite/gas/i386/x86-64-opcode.s",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-opcode.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/gas/testsuite/gas/i386/x86-64-opcode.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-opcode.s?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -50,6 +50,20 @@\n \tMOVq $0x70000000,(%r8)\t      # --  --  -- 49   C7 00 00 00 00 70\t\t ; REX for 64-bit operand size. REX to access upper reg.\n \tMOVq $0x70000000,(%rax)\t      # --  --  -- 48   C7 00 00 00 00 70\t\t ; REX for 64-bit operand size\n \n+\t# LFS etc\n+\tLFS  (%rax), %ecx             # --  --  -- --   0F B4 ..\n+\tLFSl (%rcx), %eax             # --  --  -- --   0F B4 ..\n+\tLFS  (%rax), %cx              # 66  --  -- --   0F B4 ..\n+\tLFSw (%rcx), %ax              # 66  --  -- --   0F B4 ..\n+\tLGS  (%rcx), %edx             # --  --  -- --   0F B5 ..\n+\tLGSl (%rdx), %ecx             # --  --  -- --   0F B5 ..\n+\tLGS  (%rcx), %dx              # 66  --  -- --   0F B5 ..\n+\tLGSw (%rdx), %cx              # 66  --  -- --   0F B5 ..\n+\tLSS  (%rdx), %ebx             # --  --  -- --   0F B2 ..\n+\tLSSl (%rbx), %edx             # --  --  -- --   0F B2 ..\n+\tLSS  (%rdx), %bx              # 66  --  -- --   0F B2 ..\n+\tLSSw (%rbx), %dx              # 66  --  -- --   0F B2 ..\n+\n \t# MOVNTI\n \tMOVNTI %eax,(%r8)\t      # --  --  -- 41   0f c3 00\t\t\t ; REX to access upper reg.\n \tMOVNTI %eax,(%rax)\t      # --  --  -- --   0f c3 00"
    },
    {
      "sha": "19e719d677d3d8c2bb45fa695ba7038575387086",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (lfs, lgs, lss): Drop No_qSuf.\n+\t* i386-tbl.h: Re-generate.\n+\n 2019-12-04  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (mod_table): Use Ev instead of Em for movdiri."
    },
    {
      "sha": "4c7c65e572499f15dcd95494fdc696682440ba60",
      "filename": "opcodes/i386-opc.tbl",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/i386-opc.tbl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/i386-opc.tbl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-opc.tbl?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -201,9 +201,9 @@ lea, 2, 0x8d, None, 1, 0, Modrm|Anysize|No_bSuf|No_sSuf|No_ldSuf, { BaseIndex, R\n // Load segment registers from memory.\n lds, 2, 0xc5, None, 1, CpuNo64, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n les, 2, 0xc4, None, 1, CpuNo64, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Unspecified|BaseIndex, Reg16|Reg32 }\n-lfs, 2, 0xfb4, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n-lgs, 2, 0xfb5, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n-lss, 2, 0xfb2, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lfs, 2, 0xfb4, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lgs, 2, 0xfb5, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n+lss, 2, 0xfb2, None, 2, Cpu386, Modrm|No_bSuf|No_sSuf|No_ldSuf, { DWord|Fword|Tbyte|Unspecified|BaseIndex, Reg16|Reg32|Reg64 }\n \n // Flags register instructions.\n clc, 0, 0xf8, None, 1, 0, No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }"
    },
    {
      "sha": "e09a91bfcea874e3c24d60c764518e93c7259b56",
      "filename": "opcodes/i386-tbl.h",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/i386-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ba59a29407a9d24559a653ce0401a26d9a37aaa/opcodes/i386-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-tbl.h?ref=0ba59a29407a9d24559a653ce0401a26d9a37aaa",
      "patch": "@@ -965,7 +965,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n@@ -979,7 +979,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n@@ -993,7 +993,7 @@ const insn_template i386_optab[] =\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },\n-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n+    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },\n     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,"
    }
  ]
}