{
  "sha": "3047c7869d38d4d7f84720d815d31085f3c788fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzA0N2M3ODY5ZDM4ZDRkN2Y4NDcyMGQ4MTVkMzEwODVmM2M3ODhmYQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-13T18:16:36Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-13T18:16:36Z"
    },
    "message": "[gdb/tdep] Fix exec check in gdb_print_insn_arm\n\nWith a gdb build with --enable-targets=all we run into a KFAIL:\n...\nKFAIL: gdb.gdb/unittest.exp: executable loaded: maintenance selftest, \\\n  failed none (PRMS: gdb/27891)\n...\ndue to:\n...\nRunning selftest print_one_insn.^M\nSelf test failed: arch armv8.1-m.main: self-test failed at \\\n  disasm-selftests.c:165^M\n...\n\nThe test fails because we expect disassembling of one arm insn to consume 4\nbytes and produce (using verbose = true in disasm-selftests.c):\n...\narm mov r0, #0\n...\nbut instead the disassembler uses thumb mode and only consumes 2\nbytes and produces:\n...\narm movs        r0, r0\n...\n\nThe failure does not show up in the \"no executable loaded\" variant because\nthis code in gdb_print_insn_arm isn't triggered:\n...\n  if (current_program_space->exec_bfd () != NULL)\n    info->flags |= USER_SPECIFIED_MACHINE_TYPE;\n...\nand consequently we do this in print_insn:\n...\n      if ((info->flags & USER_SPECIFIED_MACHINE_TYPE) == 0)\n        info->mach = bfd_mach_arm_unknown;\n...\nand don't set force_thumb to true in select_arm_features.\n\nThe code in gdb_print_insn_arm makes the assumption that the disassembly\narchitecture matches the exec architecture, which in this case is incorrect,\nbecause the exec architecture is x86_64, and the disassembly architecture is\narmv8.1-m.main.  Fix that by explicitly checking it:\n...\n  if (current_program_space->exec_bfd () != NULL\n      && (current_program_space->exec_bfd ()->arch_info\n\t  == gdbarch_bfd_arch_info (gdbarch)))\n...\n\nThis fixes the print_one_insn failure, so remove the KFAIL.\n\nTested on x86_64-linux.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=27891",
    "tree": {
      "sha": "f4acc1d3c2c07c549a46ccb48c01ac43f15e0ac3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f4acc1d3c2c07c549a46ccb48c01ac43f15e0ac3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3047c7869d38d4d7f84720d815d31085f3c788fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3047c7869d38d4d7f84720d815d31085f3c788fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3047c7869d38d4d7f84720d815d31085f3c788fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3047c7869d38d4d7f84720d815d31085f3c788fa/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cad152f2211282b938f11b021f2acf3df517557e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cad152f2211282b938f11b021f2acf3df517557e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cad152f2211282b938f11b021f2acf3df517557e"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 3,
    "deletions": 8
  },
  "files": [
    {
      "sha": "ab6999ae2094757de4bbfb4f566f31e4d234357c",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3047c7869d38d4d7f84720d815d31085f3c788fa/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3047c7869d38d4d7f84720d815d31085f3c788fa/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=3047c7869d38d4d7f84720d815d31085f3c788fa",
      "patch": "@@ -7727,7 +7727,9 @@ gdb_print_insn_arm (bfd_vma memaddr, disassemble_info *info)\n      the assert on the mismatch of info->mach and\n      bfd_get_mach (current_program_space->exec_bfd ()) in\n      default_print_insn.  */\n-  if (current_program_space->exec_bfd () != NULL)\n+  if (current_program_space->exec_bfd () != NULL\n+      && (current_program_space->exec_bfd ()->arch_info\n+\t  == gdbarch_bfd_arch_info (gdbarch)))\n     info->flags |= USER_SPECIFIED_MACHINE_TYPE;\n \n   return default_print_insn (memaddr, info);"
    },
    {
      "sha": "3622243492cc83cf7874184d67c06f40ea62e25a",
      "filename": "gdb/testsuite/gdb.gdb/unittest.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 7,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3047c7869d38d4d7f84720d815d31085f3c788fa/gdb/testsuite/gdb.gdb/unittest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3047c7869d38d4d7f84720d815d31085f3c788fa/gdb/testsuite/gdb.gdb/unittest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/unittest.exp?ref=3047c7869d38d4d7f84720d815d31085f3c788fa",
      "patch": "@@ -51,13 +51,6 @@ proc run_selftests { binfile } {\n \t    set num_ran $expect_out(1,string)\n \t    set num_failed $expect_out(2,string)\n \t    gdb_assert \"$num_ran > 0\" \"$test, ran some tests\"\n-\n-\t    if { $binfile != \"\" } {\n-\t\t# There's a known issue here (see PR gdb/27891),\n-\t\t# however, we should not have more than 1 failure.\n-\t\tgdb_assert \"$num_failed <= 1\" \"$test, failed no more than 1\"\n-\t\tsetup_kfail \"gdb/27891\" \"*-*-*\"\n-\t    }\n \t    gdb_assert \"$num_failed == 0\" \"$test, failed none\"\n \t}\n \t-re \"Selftests have been disabled for this build.\\r\\n$gdb_prompt $\" {"
    }
  ]
}