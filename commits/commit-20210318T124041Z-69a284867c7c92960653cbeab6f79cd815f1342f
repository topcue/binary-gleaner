{
  "sha": "69a284867c7c92960653cbeab6f79cd815f1342f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjlhMjg0ODY3YzdjOTI5NjA2NTNjYmVhYjZmNzljZDgxNWYxMzQyZg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:37:52Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-18T12:40:41Z"
    },
    "message": "libctf: support encodings for enums\n\nThe previous commit started to error-check the lookup of\nctf_type_encoding for the underlying type that is internally done when\ncarrying out a ctf_type_encoding on a slice.\n\nUnfortunately, enums have no encoding, so this has historically been\nreturning an error (which is ignored) and then populating the cte_format\nwith uninitialized data.  Now the error is not ignored, this is\nreturning an error, which breaks linking of CTF containing bitfields of\nenumerated type.\n\nCTF format v3 does not record the actual underlying type of a enum, but\nwe can mock up something that is not *too* wrong, and that is at any\nrate better than uninitialized data.\n\nld/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* testsuite/ld-ctf/slice.c: Check slices of enums too.\n\t* testsuite/ld-ctf/slice.d: Results adjusted.\n\nlibctf/ChangeLog\n2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-types.c (ctf_type_encoding): Support, after a fashion, for enums.\n\t* ctf-dump.c (ctf_dump_format_type): Do not report enums' degenerate\n\tencoding.",
    "tree": {
      "sha": "b48c8b256ea735b8fe62da5019c550bc1357667b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b48c8b256ea735b8fe62da5019c550bc1357667b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/69a284867c7c92960653cbeab6f79cd815f1342f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69a284867c7c92960653cbeab6f79cd815f1342f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/69a284867c7c92960653cbeab6f79cd815f1342f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69a284867c7c92960653cbeab6f79cd815f1342f/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e4c78f303df55b3dfc5746c8d1817cc0df1b76c3"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 27,
    "deletions": 4
  },
  "files": [
    {
      "sha": "265f0fb6e7947d410f12353d82491c0d841924ae",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* testsuite/ld-ctf/slice.c: Check slices of enums too.\n+\t* testsuite/ld-ctf/slice.d: Results adjusted.\n+\n 2021-03-16  Nick Clifton  <nickc@redhat.com>\n \n \t* pe-dll.c (pe_find_cdecl_alias_match): Use memmove to overwrite"
    },
    {
      "sha": "fb38852142e7d6913cc4a575fdd1661598a5722b",
      "filename": "ld/testsuite/ld-ctf/slice.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/ld/testsuite/ld-ctf/slice.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/ld/testsuite/ld-ctf/slice.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/slice.c?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -1,6 +1,9 @@\n+enum foo { FOO_BAR };\n+\n struct slices {\n   int one : 1;\n   int two : 2;\n   int six : 6;\n   int ten :10;\n+  enum foo bar:1;\n } slices; "
    },
    {
      "sha": "72a7074f9efca56c057d1539ca33070cddf6a9d5",
      "filename": "ld/testsuite/ld-ctf/slice.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/ld/testsuite/ld-ctf/slice.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/ld/testsuite/ld-ctf/slice.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/slice.d?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -15,7 +15,7 @@ Contents of CTF section .ctf:\n     Compilation unit name: .*slice.c\n #...\n     Data object section:\t.* \\(0x4 bytes\\)\n-    Type section:\t.* \\(0x9c bytes\\)\n+    Type section:\t.* \\(0xd0 bytes\\)\n     String section:\t.*\n #...\n   Data objects:\n@@ -28,5 +28,5 @@ Contents of CTF section .ctf:\n         *\\[0x1\\] two: ID 0x[0-9a-f]*: \\(kind 1\\) int:2 \\[slice 0x1:0x2\\] \\(format 0x1\\) \\(size 0x1\\) \\(aligned at 0x1\\)\n         *\\[0x3\\] six: ID 0x[0-9a-f]*: \\(kind 1\\) int:6 \\[slice 0x3:0x6\\] \\(format 0x1\\) \\(size 0x1\\) \\(aligned at 0x1\\)\n         *\\[0x9\\] ten: ID 0x[0-9a-f]*: \\(kind 1\\) int:10 \\[slice 0x9:0xa\\] \\(format 0x1\\) \\(size 0x2\\) \\(aligned at 0x2\\)\n-\n+        *\\[0x13\\] bar: ID 0x[0-9a-f]*: \\(kind 8\\) enum foo:1 \\[slice 0x13:0x1\\] \\(format 0x1\\) \\(size 0x1\\) \\(aligned at 0x1\\)\n #..."
    },
    {
      "sha": "d19327ee58a268a31672df31e5b12eddfedd5c48",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_encoding): Support, after a fashion, for enums.\n+\t* ctf-dump.c (ctf_dump_format_type): Do not report enums' degenerate\n+\tencoding.\n+\n 2021-03-18  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-dedup.c (ctf_dedup_rhash_type): Report errors on the input"
    },
    {
      "sha": "8540212eadd4fa8b204bc812742c199f98d29638",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -142,7 +142,10 @@ ctf_dump_format_type (ctf_dict_t *fp, ctf_id_t id, int flag)\n       unsliced_kind = ctf_type_kind_unsliced (fp, id);\n       kind = ctf_type_kind (fp, id);\n \n-      if (ctf_type_encoding (fp, id, &ep) == 0)\n+      /* Report encodings of everything with an encoding other than enums:\n+\t base-type enums cannot have a nonzero cte_offset or cte_bits value.\n+\t (Slices of them can, but they are of kind CTF_K_SLICE.)  */\n+      if (unsliced_kind != CTF_K_ENUM && ctf_type_encoding (fp, id, &ep) == 0)\n \t{\n \t  if ((ssize_t) ep.cte_bits != ctf_type_size (fp, id) * CHAR_BIT\n \t      && flag & CTF_FT_BITFIELD)"
    },
    {
      "sha": "9afe06ba112db4af14901b470b893354ccdf34fd",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69a284867c7c92960653cbeab6f79cd815f1342f/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=69a284867c7c92960653cbeab6f79cd815f1342f",
      "patch": "@@ -1157,7 +1157,7 @@ ctf_type_pointer (ctf_dict_t *fp, ctf_id_t type)\n   return (ctf_set_errno (ofp, ECTF_NOTYPE));\n }\n \n-/* Return the encoding for the specified INTEGER or FLOAT.  */\n+/* Return the encoding for the specified INTEGER, FLOAT, or ENUM.  */\n \n int\n ctf_type_encoding (ctf_dict_t *fp, ctf_id_t type, ctf_encoding_t *ep)\n@@ -1194,6 +1194,12 @@ ctf_type_encoding (ctf_dict_t *fp, ctf_id_t type, ctf_encoding_t *ep)\n       ep->cte_offset = CTF_FP_OFFSET (data);\n       ep->cte_bits = CTF_FP_BITS (data);\n       break;\n+    case CTF_K_ENUM:\n+      /* v3 only: we must guess at the underlying integral format.  */\n+      ep->cte_format = CTF_INT_SIGNED;\n+      ep->cte_offset = 0;\n+      ep->cte_bits = 0;\n+      break;\n     case CTF_K_SLICE:\n       {\n \tconst ctf_slice_t *slice;"
    }
  ]
}