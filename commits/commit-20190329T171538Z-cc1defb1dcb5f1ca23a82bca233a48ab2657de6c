{
  "sha": "cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2MxZGVmYjFkY2I1ZjFjYTIzYTgyYmNhMjMzYTQ4YWIyNjU3ZGU2Yw==",
  "commit": {
    "author": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2019-03-29T17:15:38Z"
    },
    "committer": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2019-03-29T17:15:38Z"
    },
    "message": "Allow really large fortran array bounds: TYPE_LENGTH to ULONGEST\n\nThis series is revisit of Siddhesh Poyarekar's patch from back in\n2012. The last status on the patch is in the following gdb-patches\nthread:\n\n  https://sourceware.org/ml/gdb-patches/2012-08/msg00562.html\n\nIt appears that Tom approved the patch, but Jan had some issues\nwith a compiler error that made the test fail on -m32 test runs.\nHe wrote up a hand-tweaked .S file to deal with it. Siddesh said\nhe would update tests. Then nothing.\n\nSiddesh and Jan have both moved on since.\n\nThe patch originally required a large precursor patch to work.\nI have whittled this down to/rewritten the bare minimum, and this\nfirst patch is the result, changing the type of TYPE_LENGTH\nto ULONGEST from unsigned int.\n\nThe majority of the changes involve changing printf format\nstrings to use %s and pulongest instead of %d.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_template_to_fixed_record_type_1): Use\n\t%s/pulongest for TYPE_LENGTH instead of %d in format\n\tstrings.\n\t* ada-typerint.c (ada_print_type): Likewise.\n\t* amd64-windows-tdep.c (amd64_windows_store_arg_in_reg): Likewise.\n\t* compile/compile-c-support.c (generate_register_struct): Likewise.\n\t* gdbtypes.c (recursive_dump_type): Likewise.\n\t* gdbtypes.h (struct type) <length>: Change type to ULONGEST.\n\t* m2-typeprint.c (m2_array):  Use %s/pulongest for TYPE_LENGTH\n\tinstead of %d in format strings.\n\t* riscv-tdep.c (riscv_type_alignment): Cast second argument\n\tto std::min to ULONGEST.\n\t* symmisc.c (print_symbol): Use %s/pulongest for TYPE_LENGTH\n\tinstead of %d in format strings.\n\t* tracepoint.c (info_scope_command): Likewise.\n\t* typeprint.c (print_offset_data::update)\n\t(print_offset_data::finish): Likewise.\n\t* xtensa-tdep.c (xtensa_store_return_value)\n\t(xtensa_push_dummy_call): Likewise.",
    "tree": {
      "sha": "c9319b63cfd5d879cbd1c3102643554b54a9f8aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9319b63cfd5d879cbd1c3102643554b54a9f8aa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "2487ef07c28b961c6e2b8c51161f88f93b181d07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2487ef07c28b961c6e2b8c51161f88f93b181d07",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2487ef07c28b961c6e2b8c51161f88f93b181d07"
    }
  ],
  "stats": {
    "total": 81,
    "additions": 54,
    "deletions": 27
  },
  "files": [
    {
      "sha": "71951b776407b014427bbbcffeb859bf9ec606c1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -1,3 +1,25 @@\n+2019-03-29  Keith Seitz  <keiths@redhat.com>\n+\n+\t* ada-lang.c (ada_template_to_fixed_record_type_1): Use\n+\t%s/pulongest for TYPE_LENGTH instead of %d in format\n+\tstrings.\n+\t* ada-typerint.c (ada_print_type): Likewise.\n+\t* amd64-windows-tdep.c (amd64_windows_store_arg_in_reg): Likewise.\n+\t* compile/compile-c-support.c (generate_register_struct): Likewise.\n+\t* gdbtypes.c (recursive_dump_type): Likewise.\n+\t* gdbtypes.h (struct type) <length>: Change type to ULONGEST.\n+\t* m2-typeprint.c (m2_array):  Use %s/pulongest for TYPE_LENGTH\n+\tinstead of %d in format strings.\n+\t* riscv-tdep.c (riscv_type_alignment): Cast second argument\n+\tto std::min to ULONGEST.\n+\t* symmisc.c (print_symbol): Use %s/pulongest for TYPE_LENGTH\n+\tinstead of %d in format strings.\n+\t* tracepoint.c (info_scope_command): Likewise.\n+\t* typeprint.c (print_offset_data::update)\n+\t(print_offset_data::finish): Likewise.\n+\t* xtensa-tdep.c (xtensa_store_return_value)\n+\t(xtensa_push_dummy_call): Likewise.\n+\n 2019-03-28  Jon Turney  <jon.turney@dronecode.org.uk>\n \n \t* windows-nat.c (display_selector): Fixed format specifications"
    },
    {
      "sha": "cdaf5589bc4fec3cb51dc68cc75c378d9079ea72",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -8500,11 +8500,11 @@ ada_template_to_fixed_record_type_1 (struct type *type,\n   if (TYPE_LENGTH (type) <= 0)\n     {\n       if (TYPE_NAME (rtype))\n-\twarning (_(\"Invalid type size for `%s' detected: %d.\"),\n-\t\t TYPE_NAME (rtype), TYPE_LENGTH (type));\n+\twarning (_(\"Invalid type size for `%s' detected: %s.\"),\n+\t\t TYPE_NAME (rtype), pulongest (TYPE_LENGTH (type)));\n       else\n-\twarning (_(\"Invalid type size for <unnamed> detected: %d.\"),\n-\t\t TYPE_LENGTH (type));\n+\twarning (_(\"Invalid type size for <unnamed> detected: %s.\"),\n+\t\t pulongest (TYPE_LENGTH (type)));\n     }\n   else\n     {"
    },
    {
      "sha": "efcd14bedc57952be228e6f0853c071f590935e6",
      "filename": "gdb/ada-typeprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ada-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/ada-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-typeprint.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -895,8 +895,8 @@ ada_print_type (struct type *type0, const char *varstring,\n \t    const char *name = ada_type_name (type);\n \n \t    if (!ada_is_range_type_name (name))\n-\t      fprintf_filtered (stream, _(\"<%d-byte integer>\"),\n-\t\t\t\tTYPE_LENGTH (type));\n+\t      fprintf_filtered (stream, _(\"<%s-byte integer>\"),\n+\t\t\t\tpulongest (TYPE_LENGTH (type)));\n \t    else\n \t      {\n \t\tfprintf_filtered (stream, \"range \");\n@@ -917,7 +917,8 @@ ada_print_type (struct type *type0, const char *varstring,\n \t  }\n \tbreak;\n       case TYPE_CODE_FLT:\n-\tfprintf_filtered (stream, _(\"<%d-byte float>\"), TYPE_LENGTH (type));\n+\tfprintf_filtered (stream, _(\"<%s-byte float>\"),\n+\t\t\t  pulongest (TYPE_LENGTH (type)));\n \tbreak;\n       case TYPE_CODE_ENUM:\n \tif (show < 0)"
    },
    {
      "sha": "922da9e48bcbcba08eb4fbd45c013117606bcd24",
      "filename": "gdb/amd64-windows-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/amd64-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/amd64-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-windows-tdep.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -144,7 +144,7 @@ amd64_windows_store_arg_in_reg (struct regcache *regcache,\n \n   gdb_assert (TYPE_LENGTH (type) <= 8);\n   memset (buf, 0, sizeof buf);\n-  memcpy (buf, valbuf, std::min (TYPE_LENGTH (type), (unsigned int) 8));\n+  memcpy (buf, valbuf, std::min (TYPE_LENGTH (type), (ULONGEST) 8));\n   regcache->cooked_write (regno, buf);\n }\n "
    },
    {
      "sha": "d1947da6570bc655f578e3eb87d98d462dd5ede0",
      "filename": "gdb/compile/compile-c-support.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/compile/compile-c-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/compile/compile-c-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-c-support.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -270,11 +270,11 @@ generate_register_struct (struct ui_file *stream, struct gdbarch *gdbarch,\n \n \t      default:\n \t\tfprintf_unfiltered (stream,\n-\t\t\t\t    \"  unsigned char %s[%d]\"\n+\t\t\t\t    \"  unsigned char %s[%s]\"\n \t\t\t\t    \" __attribute__((__aligned__(\"\n \t\t\t\t    \"__BIGGEST_ALIGNMENT__)))\",\n \t\t\t\t    regname.c_str (),\n-\t\t\t\t    TYPE_LENGTH (regtype));\n+\t\t\t\t    pulongest (TYPE_LENGTH (regtype)));\n \t      }\n \t    fputs_unfiltered (\";\\n\", stream);\n \t  }"
    },
    {
      "sha": "b1a51374d967eb1f81d0dbb54f55909f290fa7a7",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -4591,7 +4591,7 @@ recursive_dump_type (struct type *type, int spaces)\n       break;\n     }\n   puts_filtered (\"\\n\");\n-  printfi_filtered (spaces, \"length %d\\n\", TYPE_LENGTH (type));\n+  printfi_filtered (spaces, \"length %s\\n\", pulongest (TYPE_LENGTH (type)));\n   if (TYPE_OBJFILE_OWNED (type))\n     {\n       printfi_filtered (spaces, \"objfile \");"
    },
    {
      "sha": "2125ed991d0f6f7a86f0babb0e1f0935dec86041",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -859,7 +859,7 @@ struct type\n      type_length_units function should be used in order to get the length\n      expressed in target addressable memory units.  */\n \n-  unsigned int length;\n+  ULONGEST length;\n \n   /* * Core type, shared by a group of qualified types.  */\n "
    },
    {
      "sha": "dae07d1c531a02c6eac4cb9b56cc9ad7e793aae7",
      "filename": "gdb/m2-typeprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/m2-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/m2-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-typeprint.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -234,9 +234,9 @@ static void m2_array (struct type *type, struct ui_file *stream,\n \t  m2_print_bounds (TYPE_INDEX_TYPE (type), stream, show, -1, 1);\n \t}\n       else\n-\tfprintf_filtered (stream, \"%d\",\n-\t\t\t  (TYPE_LENGTH (type)\n-\t\t\t   / TYPE_LENGTH (TYPE_TARGET_TYPE (type))));\n+\tfputs_filtered (pulongest ((TYPE_LENGTH (type)\n+\t\t\t\t    / TYPE_LENGTH (TYPE_TARGET_TYPE (type)))),\n+\t\t\tstream);\n     }\n   fprintf_filtered (stream, \"] OF \");\n   m2_print_type (TYPE_TARGET_TYPE (type), \"\", stream, show, level, flags);"
    },
    {
      "sha": "ff5f36e76217eee62da3fe2b2b97bcd743934389",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -1645,7 +1645,7 @@ riscv_type_alignment (struct type *t)\n \n     case TYPE_CODE_ARRAY:\n       if (TYPE_VECTOR (t))\n-\treturn std::min (TYPE_LENGTH (t), (unsigned) BIGGEST_ALIGNMENT);\n+\treturn std::min (TYPE_LENGTH (t), (ULONGEST) BIGGEST_ALIGNMENT);\n       /* FALLTHROUGH */\n \n     case TYPE_CODE_COMPLEX:"
    },
    {
      "sha": "0220b42749e9df98bfddd35f9da28d8d9a4903f1",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -583,8 +583,8 @@ print_symbol (struct gdbarch *gdbarch, struct symbol *symbol,\n \t    unsigned i;\n \t    struct type *type = check_typedef (SYMBOL_TYPE (symbol));\n \n-\t    fprintf_filtered (outfile, \"const %u hex bytes:\",\n-\t\t\t      TYPE_LENGTH (type));\n+\t    fprintf_filtered (outfile, \"const %s hex bytes:\",\n+\t\t\t      pulongest (TYPE_LENGTH (type)));\n \t    for (i = 0; i < TYPE_LENGTH (type); i++)\n \t      fprintf_filtered (outfile, \" %02x\",\n \t\t\t\t(unsigned) SYMBOL_VALUE_BYTES (symbol)[i]);"
    },
    {
      "sha": "c7585c67839d97cd39e7cf7b58f08708d0397847",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -2636,8 +2636,11 @@ info_scope_command (const char *args_in, int from_tty)\n \t\t}\n \t    }\n \t  if (SYMBOL_TYPE (sym))\n-\t    printf_filtered (\", length %d.\\n\",\n-\t\t\t     TYPE_LENGTH (check_typedef (SYMBOL_TYPE (sym))));\n+\t    {\n+\t      struct type *t = check_typedef (SYMBOL_TYPE (sym));\n+\n+\t      printf_filtered (\", length %s.\\n\", pulongest (TYPE_LENGTH (t)));\n+\t    }\n \t}\n       if (BLOCK_FUNCTION (block))\n \tbreak;"
    },
    {
      "sha": "0a93a831b86130a0a57c80df636c45ee558311fa",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -120,7 +120,8 @@ print_offset_data::update (struct type *type, unsigned int field_idx,\n     {\n       /* Since union fields don't have the concept of offsets, we just\n \t print their sizes.  */\n-      fprintf_filtered (stream, \"/*              %4u */\", TYPE_LENGTH (ftype));\n+      fprintf_filtered (stream, \"/*              %4s */\",\n+\t\t\tpulongest (TYPE_LENGTH (ftype)));\n       return;\n     }\n \n@@ -183,8 +184,8 @@ print_offset_data::finish (struct type *type, int level,\n \n   fputs_filtered (\"\\n\", stream);\n   print_spaces_filtered (level + 4 + print_offset_data::indentation, stream);\n-  fprintf_filtered (stream, \"/* total size (bytes): %4u */\\n\",\n-\t\t    TYPE_LENGTH (type));\n+  fprintf_filtered (stream, \"/* total size (bytes): %4s */\\n\",\n+\t\t    pulongest (TYPE_LENGTH (type)));\n }\n \n \f"
    },
    {
      "sha": "efa0bcb1dc3ba05cd037874aa2431d060873aa3f",
      "filename": "gdb/xtensa-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/xtensa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc1defb1dcb5f1ca23a82bca233a48ab2657de6c/gdb/xtensa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xtensa-tdep.c?ref=cc1defb1dcb5f1ca23a82bca233a48ab2657de6c",
      "patch": "@@ -1615,8 +1615,8 @@ xtensa_store_return_value (struct type *type,\n \n       if (len > (callsize > 8 ? 8 : 16))\n \tinternal_error (__FILE__, __LINE__,\n-\t\t\t_(\"unimplemented for this length: %d\"),\n-\t\t\tTYPE_LENGTH (type));\n+\t\t\t_(\"unimplemented for this length: %s\"),\n+\t\t\tpulongest (TYPE_LENGTH (type)));\n       areg = arreg_number (gdbarch,\n \t\t\t   gdbarch_tdep (gdbarch)->a0_base + 2 + callsize, wb);\n \n@@ -1723,9 +1723,9 @@ xtensa_push_dummy_call (struct gdbarch *gdbarch,\n         {\n \t  struct value *arg = args[i];\n \t  struct type *arg_type = check_typedef (value_type (arg));\n-\t  fprintf_unfiltered (gdb_stdlog, \"%2d: %s %3d \", i,\n+\t  fprintf_unfiltered (gdb_stdlog, \"%2d: %s %3s \", i,\n \t\t\t      host_address_to_string (arg),\n-\t\t\t      TYPE_LENGTH (arg_type));\n+\t\t\t      pulongest (TYPE_LENGTH (arg_type)));\n \t  switch (TYPE_CODE (arg_type))\n \t    {\n \t    case TYPE_CODE_INT:"
    }
  ]
}