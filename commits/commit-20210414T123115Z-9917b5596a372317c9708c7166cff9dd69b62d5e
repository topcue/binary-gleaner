{
  "sha": "9917b5596a372317c9708c7166cff9dd69b62d5e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTkxN2I1NTk2YTM3MjMxN2M5NzA4YzcxNjZjZmY5ZGQ2OWI2MmQ1ZQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-04-14T12:30:59Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-04-14T12:31:15Z"
    },
    "message": "elf: Set p_memsz to p_filesz for loadable PT_NOTE segment\n\nSince p_memsz of the loadable PT_NOTE segment should be the same as\np_filesz, set p_memsz on the loadable PT_NOTE segment when updating\np_filesz.\n\nbfd/\n\n\tPR binutils/27708\n\t* elf.c (assign_file_positions_for_non_load_sections): Set\n\tp_memsz to p_filesz for the loadable PT_NOTE segment.\n\nbinutils/\n\n\tPR binutils/27708\n\t* testsuite/binutils-all/x86-64/pr27708.dump: New file.\n\t* testsuite/binutils-all/x86-64/pr27708.exe.bz2: Likewise.\n\t* testsuite/binutils-all/x86-64/x86-64.exp: Run binutils/27708\n\ttest.",
    "tree": {
      "sha": "43350626d6b8db288bbdb35c327a7ed587c8fa6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/43350626d6b8db288bbdb35c327a7ed587c8fa6d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9917b5596a372317c9708c7166cff9dd69b62d5e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9917b5596a372317c9708c7166cff9dd69b62d5e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9917b5596a372317c9708c7166cff9dd69b62d5e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9917b5596a372317c9708c7166cff9dd69b62d5e/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6be872a439e15d12e86e7c5889f9e0b7804e59c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6be872a439e15d12e86e7c5889f9e0b7804e59c6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6be872a439e15d12e86e7c5889f9e0b7804e59c6"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 90,
    "deletions": 0
  },
  "files": [
    {
      "sha": "6c89655664f50bc29b29fd92b591547d39debebe",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=9917b5596a372317c9708c7166cff9dd69b62d5e",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/27708\n+\t* elf.c (assign_file_positions_for_non_load_sections): Set\n+\tp_memsz to p_filesz for the loadable PT_NOTE segment.\n+\n 2021-04-14  Frederic Cambus  <fred@statdns.com>\n \n \t* elf.c (elfcore_grok_netbsd_note): Remove unneeded #ifdef"
    },
    {
      "sha": "11ae2f3a81b83dbee4fd6574ddf4ee46d14a5136",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=9917b5596a372317c9708c7166cff9dd69b62d5e",
      "patch": "@@ -6300,6 +6300,11 @@ assign_file_positions_for_non_load_sections (bfd *abfd,\n \t\t    {\n \t\t      p->p_filesz = (sect->filepos - m->sections[0]->filepos\n \t\t\t\t     + hdr->sh_size);\n+\t\t      /* NB: p_memsz of the loadable PT_NOTE segment\n+\t\t\t should be the same as p_filesz.  */\n+\t\t      if (p->p_type == PT_NOTE\n+\t\t\t  && (hdr->sh_flags & SHF_ALLOC) != 0)\n+\t\t\tp->p_memsz = p->p_filesz;\n \t\t      break;\n \t\t    }\n \t\t}"
    },
    {
      "sha": "b109e3e5c2a71c8239c5a391cfce1f2878af24db",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=9917b5596a372317c9708c7166cff9dd69b62d5e",
      "patch": "@@ -1,3 +1,11 @@\n+2021-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/27708\n+\t* testsuite/binutils-all/x86-64/pr27708.dump: New file.\n+\t* testsuite/binutils-all/x86-64/pr27708.exe.bz2: Likewise.\n+\t* testsuite/binutils-all/x86-64/x86-64.exp: Run binutils/27708\n+\ttest.\n+\n 2021-04-14  Mark Harmstone  <mark@harmstone.com>\n \n \tPR 27686"
    },
    {
      "sha": "e9123df9c42e0d7f6a9446c47e9e842a2c5e2b80",
      "filename": "binutils/testsuite/binutils-all/x86-64/pr27708.dump",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/pr27708.dump",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/pr27708.dump",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/x86-64/pr27708.dump?ref=9917b5596a372317c9708c7166cff9dd69b62d5e",
      "patch": "@@ -0,0 +1,33 @@\n+\n+Elf file type is DYN (Shared object file)\n+Entry point 0x5f0\n+There are 11 program headers, starting at offset 64\n+\n+Program Headers:\n+  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align\n+  PHDR           0x000040 0x0000000000000040 0x0000000000000040 0x000268 0x000268 R   0x8\n+  INTERP         0x0002a8 0x00000000000002a8 0x00000000000002a8 0x00001c 0x00001c R   0x1\n+      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]\n+  LOAD           0x000000 0x0000000000000000 0x0000000000000000 0x000938 0x000938 R E 0x1000\n+  LOAD           0x000da0 0x0000000000001da0 0x0000000000001da0 0x000278 0x000279 RW  0x1000\n+  DYNAMIC        0x000db0 0x0000000000001db0 0x0000000000001db0 0x000210 0x000210 RW  0x8\n+  NOTE           0x0002e8 0x00000000000002e8 0x00000000000002e8 0x000030 0x000030 R   0x8\n+  NOTE           0x0002c4 0x00000000000002c4 0x00000000000002c4 0x000078 0x000078 R   0x4\n+  GNU_EH_FRAME   0x0008ec 0x00000000000008ec 0x00000000000008ec 0x00004c 0x00004c R   0x4\n+  GNU_STACK      0x000000 0x0000000000000000 0x0000000000000000 0x000000 0x000000 RW  0x10\n+  TLS            0x000da0 0x0000000000001da0 0x0000000000001da0 0x000000 0x000009 R   0x8\n+  GNU_RELRO      0x000da0 0x0000000000001da0 0x0000000000001da0 0x000260 0x000260 RW  0x8\n+\n+ Section to Segment mapping:\n+  Segment Sections...\n+   00     \n+   01     .interp \n+   02     .interp .note.ABI-tag .note.gnu.property .note.gnu.build-id .dynsym .dynstr .gnu.hash .hash .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .text .fini .rodata .eh_frame .eh_frame_hdr \n+   03     .fini_array .init_array .dynamic .got .got.plt .data .bss \n+   04     .dynamic \n+   05     .note.gnu.property \n+   06     .note.ABI-tag .note.gnu.property .note.gnu.build-id \n+   07     .eh_frame_hdr \n+   08     \n+   09     .tbss \n+   10     .fini_array .init_array .dynamic .got "
    },
    {
      "sha": "94063c6c2852dcb6e782807d13422d2345b72137",
      "filename": "binutils/testsuite/binutils-all/x86-64/pr27708.exe.bz2",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/pr27708.exe.bz2",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/pr27708.exe.bz2",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/x86-64/pr27708.exe.bz2?ref=9917b5596a372317c9708c7166cff9dd69b62d5e"
    },
    {
      "sha": "29ba1f029c4cb1599b163cde6ddc51b81b561365",
      "filename": "binutils/testsuite/binutils-all/x86-64/x86-64.exp",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9917b5596a372317c9708c7166cff9dd69b62d5e/binutils/testsuite/binutils-all/x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/x86-64/x86-64.exp?ref=9917b5596a372317c9708c7166cff9dd69b62d5e",
      "patch": "@@ -58,3 +58,41 @@ if {[catch \"system \\\"bzip2 -dc $t > $tempfile\\\"\"] != 0} {\n \t}\n     }\n }\n+\n+set t $srcdir/$subdir/pr27708.exe.bz2\n+# We need to strip the \".bz2\", but can leave the dirname.\n+set test $subdir/[file tail $t]\n+set testname [file rootname $test]\n+verbose $testname\n+if {[catch \"system \\\"bzip2 -dc $t > $tempfile\\\"\"] != 0} {\n+  untested \"bzip2 -dc ($testname)\"\n+} else {\n+    send_log \"$STRIP $tempfile -o ${tempfile}.strip\\n\"\n+    verbose \"$STRIP $tempfile -o ${tempfile}.strip\" 1\n+    set got [catch \"system \\\"$STRIP $tempfile -o ${tempfile}.strip\\\"\"]\n+    if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]]} then {\n+\tfail $testname\n+    } else {\n+\tsend_log \"$READELF -lW ${tempfile}.strip > tmpdir/pr27708.out 2> /dev/null\\n\"\n+\tverbose \"$READELF -lW ${tempfile}.strip > tmpdir/pr27708.out 2> /dev/null\" 1\n+\tset got [catch \"system \\\"$READELF -lW ${tempfile}.strip > tmpdir/pr27708.out 2> /dev/null\\\"\"]\n+\n+\tif { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]]} then {\n+\t    fail $testname\n+\t} else {\n+\t    send_log \"cmp tmpdir/pr27708.out $srcdir/$subdir/pr27708.dump\\n\"\n+\t    verbose \"cmp tmpdir/pr27708.out $srcdir/$subdir/pr26808.dump\" 1\n+\t    set status [remote_exec build cmp \"tmpdir/pr27708.out $srcdir/$subdir/pr27708.dump\"]\n+\t    set exec_output [lindex $status 1]\n+\t    set exec_output [prune_warnings $exec_output]\n+\n+\t    if [string match \"\" $exec_output] then {\n+\t\tpass \"strip ($testname)\"\n+\t    } else {\n+\t\tsend_log \"$exec_output\\n\"\n+\t\tverbose \"$exec_output\" 1\n+\t\tfail \"strip ($testname)\"\n+\t    }\n+\t}\n+    }\n+}"
    }
  ]
}