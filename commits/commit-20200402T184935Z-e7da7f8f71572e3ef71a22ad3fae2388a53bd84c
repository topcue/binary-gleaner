{
  "sha": "e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTdkYTdmOGY3MTU3MmUzZWY3MWEyMmFkM2ZhZTIzODhhNTNiZDg0Yw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-02T18:49:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-02T18:49:35Z"
    },
    "message": "Micro-optimize partial_die_info::read\n\nWhile profiling the DWARF reader, I noticed that\npartial_die_info::read creates a vector to store attributes.  However,\nthe vector is not needed, as this code only processes a single\nattribute at a time.\n\nThis patch removes the vector.  On my machine, this improves the time\nof \"./gdb ./gdb\" from 2.22 seconds to 1.92 seconds (mean times over 10\nruns).\n\nNote that the attribute is initialized by read_attribute, so it does\nnot need any special initialization.  Avoiding this also improves\nperformance a bit.\n\nTested on x86-64 Fedora 30.  I'm checking this in.\n\ngdb/ChangeLog\n2020-04-02  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2/read.c (partial_die_info::read): Do not create a vector\n\tof attributes.",
    "tree": {
      "sha": "a9878cff6821b6e1c1829eea5a3bde8f68b5c36f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a9878cff6821b6e1c1829eea5a3bde8f68b5c36f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c90d28ac8903c5781b1a82e487072081383fd7b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c90d28ac8903c5781b1a82e487072081383fd7b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c90d28ac8903c5781b1a82e487072081383fd7b9"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "993a358d34573e513dfe8c934f13d347bebeafc9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-02  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2/read.c (partial_die_info::read): Do not create a vector\n+\tof attributes.\n+\n 2020-04-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \t    Bernd Edlinger <bernd.edlinger@hotmail.de>\n \t    Tom Tromey  <tromey@adacore.com>"
    },
    {
      "sha": "0df5676c4d3ab57b97204e6ecd702ad56661210a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7da7f8f71572e3ef71a22ad3fae2388a53bd84c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=e7da7f8f71572e3ef71a22ad3fae2388a53bd84c",
      "patch": "@@ -17879,18 +17879,17 @@ partial_die_info::read (const struct die_reader_specs *reader,\n   int has_high_pc_attr = 0;\n   int high_pc_relative = 0;\n \n-  std::vector<struct attribute> attr_vec (abbrev.num_attrs);\n   for (i = 0; i < abbrev.num_attrs; ++i)\n     {\n+      attribute attr;\n       bool need_reprocess;\n-      info_ptr = read_attribute (reader, &attr_vec[i], &abbrev.attrs[i],\n+      info_ptr = read_attribute (reader, &attr, &abbrev.attrs[i],\n \t\t\t\t info_ptr, &need_reprocess);\n       /* String and address offsets that need to do the reprocessing have\n          already been read at this point, so there is no need to wait until\n \t the loop terminates to do the reprocessing.  */\n       if (need_reprocess)\n-\tread_attribute_reprocess (reader, &attr_vec[i]);\n-      attribute &attr = attr_vec[i];\n+\tread_attribute_reprocess (reader, &attr);\n       /* Store the data if it is of an attribute we want to keep in a\n          partial symbol table.  */\n       switch (attr.name)"
    }
  ]
}