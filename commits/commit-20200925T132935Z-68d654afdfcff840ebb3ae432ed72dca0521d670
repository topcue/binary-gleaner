{
  "sha": "68d654afdfcff840ebb3ae432ed72dca0521d670",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjhkNjU0YWZkZmNmZjg0MGViYjNhZTQzMmVkNzJkY2EwNTIxZDY3MA==",
  "commit": {
    "author": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-09-25T13:29:35Z"
    },
    "committer": {
      "name": "Gary Benson",
      "email": "gbenson@redhat.com",
      "date": "2020-09-25T13:29:35Z"
    },
    "message": "Fix compilation of .c files as C++ when using Clang\n\nIn commit 221db974e653659edb280787af1b3efdd1615083, this patch:\n\n    2020-06-24  Pedro Alves  <palves@redhat.com>\n\n    * lib/gdb.exp (gdb_compile): Pass \"-x c++\" explicitly when\n    compiling C++ programs.\n\nattempted to fix problems with testcases that compile .c files\nwith the C++ compiler.  They pass the \"c++\" option to gdb_compile,\nresulting in the following error when using Clang:\n\n    gdb compile failed, clang-10: warning: treating 'c' input as 'c++'\n    when in C++ mode, this behavior is deprecated [-Wdeprecated]\n\nThis fix did not work for gdb.base/infcall-nested-structs-c++.exp,\nhowever: the \"-x c++\" appeared in the compiler's commandline after\nthe .c file, so the option was not enabled for that file.\n\nThe previous files fixed all used build_executable_from_specs, which\ncompiles and links in separate steps, using gdb_compile: the compile\nstep passes $type=object to gdb_compile, while the link step passes\n$type=executable.\n\ngdb.base/infcall-nested-structs-c++.exp uses gdb_compile directly\ninstead, and it passes $type=executable to compile and link all in\none step.  Pedro found that DejaGnu's default_target_compile adds\nthe sources at the end when $type=object, but at the beginning when\n$type=executable:\n\n    # This is obscure: we put SOURCES at the end when building an\n    # object, because otherwise, in some situations, libtool will\n    # become confused about the name of the actual source file.\n    if {$type == \"object\"} {\n        set opts \"$add_flags $sources\"\n    } else {\n        set opts \"$sources $add_flags\"\n    }\n\nThis commit moves the \"-x c++\" earlier in the compiler's commandline.\nUnfortunately this then broke the testcase that required the original\nfix, gdb.compile/compile-cplus.exp: the \"-x c++\" was being parsed for\nthe linker pass, causing the compiler to attempt to parse the .o files\nas C++.  This commit makes passing \"-x c++\" conditional on the source\nbeing a .c file.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/gdb.exp (gdb_compile): Pass \"-x c++\" earlier, and only\n\tfor .c files.",
    "tree": {
      "sha": "adbc11d735563e1c04d45a93be13566a4d4ead9a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/adbc11d735563e1c04d45a93be13566a4d4ead9a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68d654afdfcff840ebb3ae432ed72dca0521d670",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68d654afdfcff840ebb3ae432ed72dca0521d670",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68d654afdfcff840ebb3ae432ed72dca0521d670",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68d654afdfcff840ebb3ae432ed72dca0521d670/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "5a805384b831e5946cc8dae13a75617cb4b9c080",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a805384b831e5946cc8dae13a75617cb4b9c080",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5a805384b831e5946cc8dae13a75617cb4b9c080"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 8,
    "deletions": 2
  },
  "files": [
    {
      "sha": "a19af885d39da7e7a9edce1d58ef06fe8ec86d2a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68d654afdfcff840ebb3ae432ed72dca0521d670/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68d654afdfcff840ebb3ae432ed72dca0521d670/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=68d654afdfcff840ebb3ae432ed72dca0521d670",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-25  Gary Benson <gbenson@redhat.com>\n+\n+\t* lib/gdb.exp (gdb_compile): Pass \"-x c++\" earlier, and only\n+\tfor .c files.\n+\n 2020-09-24  Tom Tromey  <tromey@adacore.com>\n \n \tPR tui/26638:"
    },
    {
      "sha": "608469953bf3af2dc5ba57affd64d30c4ce3b351",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68d654afdfcff840ebb3ae432ed72dca0521d670/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68d654afdfcff840ebb3ae432ed72dca0521d670/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=68d654afdfcff840ebb3ae432ed72dca0521d670",
      "patch": "@@ -3944,8 +3944,9 @@ proc gdb_compile {source dest type options} {\n     # explicitly force C++ language.\n     if { [lsearch -exact $options getting_compiler_info] == -1\n \t && [lsearch -exact $options c++] != -1\n-\t && [test_compiler_info \"clang-*\"]} {\n-\tlappend new_options additional_flags=-x\\ c++\n+\t && [string match *.c $source] != 0\n+\t && [test_compiler_info \"clang-*\"] } {\n+\tlappend new_options early_flags=-x\\ c++\n     }\n \n     # Place (and look for) Fortran `.mod` files in the output"
    }
  ]
}