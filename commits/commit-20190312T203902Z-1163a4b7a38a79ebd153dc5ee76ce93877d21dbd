{
  "sha": "1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTE2M2E0YjdhMzhhNzllYmQxNTNkYzVlZTc2Y2U5Mzg3N2QyMWRiZA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:39:02Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2019-03-12T20:39:02Z"
    },
    "message": "Support the fs_base and gs_base registers on i386.\n\nAs on amd64, these registers hold the base address of the fs and gs\nsegments, respectively.  For i386 these two registers are 32 bits.\n\ngdb/ChangeLog:\n\n\t* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):\n\tUpdate calls to i386_target_description to add 'segments'\n\tparameter.\n\t* amd64-tdep.c (amd64_init_abi): Set tdep->fsbase_regnum.  Don't\n\tadd segment base registers.\n\t* arch/i386.c (i386_create_target_description): Add 'segments'\n\tparameter to enable segment base registers.\n\t* arch/i386.h (i386_create_target_description): Likewise.\n\t* features/i386/32bit-segments.xml: New file.\n\t* features/i386/32bit-segments.c: Generate.\n\t* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Update\n\tcall to i386_target_description to add 'segments' parameter.\n\t* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.\n\t* i386-go32-tdep.c (i386_go32_init_abi): Likewise.\n\t* i386-linux-tdep.c (i386_linux_read_description): Likewise.\n\t* i386-tdep.c (i386_validate_tdesc_p): Add segment base registers\n\tif feature is present.\n\t(i386_gdbarch_init): Pass I386_NUM_REGS to set_gdbarch_num_regs.\n\tAdd 'segments' parameter to call to i386_target_description.\n\t(i386_target_description): Add 'segments' parameter to enable\n\tsegment base registers.\n\t(_initialize_i386_tdep) [GDB_SELF_TEST]: Add 'segments' parameter\n\tto call to i386_target_description.\n\t* i386-tdep.h (struct gdbarch_tdep): Add 'fsbase_regnum'.\n\t(enum i386_regnum): Add I386_FSBASE_REGNUM and I386_GSBASE_REGNUM.\n\tDefine I386_NUM_REGS.\n\t(i386_target_description): Add 'segments' parameter to enable\n\tsegment base registers.\n\ngdb/gdbserver/ChangeLog:\n\n\t* linux-x86-tdesc.c (i386_linux_read_description): Update call to\n\ti386_create_target_description for 'segments' parameter.\n\t* lynx-i386-low.c (lynx_i386_arch_setup): Likewise.\n\t* nto-x86-low.c (nto_x86_arch_setup): Likewise.\n\t* win32-i386-low.c (i386_arch_setup): Likewise.",
    "tree": {
      "sha": "a05739b03daf22efcb07be32a1526f26ca19a9fd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a05739b03daf22efcb07be32a1526f26ca19a9fd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7cde5fc2ec2e32e8a81ac613d26cf86bf8623816",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cde5fc2ec2e32e8a81ac613d26cf86bf8623816",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7cde5fc2ec2e32e8a81ac613d26cf86bf8623816"
    }
  ],
  "stats": {
    "total": 150,
    "additions": 119,
    "deletions": 31
  },
  "files": [
    {
      "sha": "79ba9416780b4a5c4f1f70fc2b50ba8cc2d68531",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -1,3 +1,34 @@\n+2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* amd64-fbsd-nat.c (amd64_fbsd_nat_target::read_description):\n+\tUpdate calls to i386_target_description to add 'segments'\n+\tparameter.\n+\t* amd64-tdep.c (amd64_init_abi): Set tdep->fsbase_regnum.  Don't\n+\tadd segment base registers.\n+\t* arch/i386.c (i386_create_target_description): Add 'segments'\n+\tparameter to enable segment base registers.\n+\t* arch/i386.h (i386_create_target_description): Likewise.\n+\t* features/i386/32bit-segments.xml: New file.\n+\t* features/i386/32bit-segments.c: Generate.\n+\t* i386-fbsd-nat.c (i386_fbsd_nat_target::read_description): Update\n+\tcall to i386_target_description to add 'segments' parameter.\n+\t* i386-fbsd-tdep.c (i386fbsd_core_read_description): Likewise.\n+\t* i386-go32-tdep.c (i386_go32_init_abi): Likewise.\n+\t* i386-linux-tdep.c (i386_linux_read_description): Likewise.\n+\t* i386-tdep.c (i386_validate_tdesc_p): Add segment base registers\n+\tif feature is present.\n+\t(i386_gdbarch_init): Pass I386_NUM_REGS to set_gdbarch_num_regs.\n+\tAdd 'segments' parameter to call to i386_target_description.\n+\t(i386_target_description): Add 'segments' parameter to enable\n+\tsegment base registers.\n+\t(_initialize_i386_tdep) [GDB_SELF_TEST]: Add 'segments' parameter\n+\tto call to i386_target_description.\n+\t* i386-tdep.h (struct gdbarch_tdep): Add 'fsbase_regnum'.\n+\t(enum i386_regnum): Add I386_FSBASE_REGNUM and I386_GSBASE_REGNUM.\n+\tDefine I386_NUM_REGS.\n+\t(i386_target_description): Add 'segments' parameter to enable\n+\tsegment base registers.\n+\n 2019-03-12  Eli Zaretskii  <eliz@gnu.org>\n \n \tPR/24325"
    },
    {
      "sha": "9fff763dd366b205bc2852defd6cf97df90dbf27",
      "filename": "gdb/amd64-fbsd-nat.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/amd64-fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/amd64-fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-fbsd-nat.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -190,13 +190,13 @@ amd64_fbsd_nat_target::read_description ()\n       if (is64)\n \treturn amd64_target_description (xcr0, true);\n       else\n-\treturn i386_target_description (xcr0);\n+\treturn i386_target_description (xcr0, false);\n     }\n #endif\n   if (is64)\n     return amd64_target_description (X86_XSTATE_SSE_MASK, true);\n   else\n-    return i386_target_description (X86_XSTATE_SSE_MASK);\n+    return i386_target_description (X86_XSTATE_SSE_MASK, false);\n }\n \n #if defined(HAVE_PT_GETDBREGS) && defined(USE_SIGTRAP_SIGINFO)"
    },
    {
      "sha": "d5892954d74e24bfdf558f7c74d8698e92bc52f4",
      "filename": "gdb/amd64-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/amd64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/amd64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-tdep.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -3107,15 +3107,7 @@ amd64_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch,\n \n   if (tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.segments\") != NULL)\n     {\n-      const struct tdesc_feature *feature =\n-\t  tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.segments\");\n-      struct tdesc_arch_data *tdesc_data_segments =\n-\t  (struct tdesc_arch_data *) info.tdep_info;\n-\n-      tdesc_numbered_register (feature, tdesc_data_segments,\n-\t\t       AMD64_FSBASE_REGNUM, \"fs_base\");\n-      tdesc_numbered_register (feature, tdesc_data_segments,\n-\t\t       AMD64_GSBASE_REGNUM, \"gs_base\");\n+      tdep->fsbase_regnum = AMD64_FSBASE_REGNUM;\n     }\n \n   if (tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.pkeys\") != NULL)"
    },
    {
      "sha": "ab24cf71cb59f51b33b3f04e98950c4d955ab624",
      "filename": "gdb/arch/i386.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/arch/i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/arch/i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/i386.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -28,11 +28,12 @@\n #include \"../features/i386/32bit-avx512.c\"\n #include \"../features/i386/32bit-mpx.c\"\n #include \"../features/i386/32bit-pkeys.c\"\n+#include \"../features/i386/32bit-segments.c\"\n \n /* Create i386 target descriptions according to XCR0.  */\n \n target_desc *\n-i386_create_target_description (uint64_t xcr0, bool is_linux)\n+i386_create_target_description (uint64_t xcr0, bool is_linux, bool segments)\n {\n   target_desc *tdesc = allocate_target_description ();\n \n@@ -53,6 +54,9 @@ i386_create_target_description (uint64_t xcr0, bool is_linux)\n   if (is_linux)\n     regnum = create_feature_i386_32bit_linux (tdesc, regnum);\n \n+  if (segments)\n+    regnum = create_feature_i386_32bit_segments (tdesc, regnum);\n+\n   if (xcr0 & X86_XSTATE_AVX)\n     regnum = create_feature_i386_32bit_avx (tdesc, regnum);\n "
    },
    {
      "sha": "9a831cea30029b923f5182b3c2ac6f40b232fbe6",
      "filename": "gdb/arch/i386.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/arch/i386.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/arch/i386.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch/i386.h?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -21,6 +21,7 @@\n #include \"common/tdesc.h\"\n #include <stdint.h>\n \n-target_desc *i386_create_target_description (uint64_t xcr0, bool is_linux);\n+target_desc *i386_create_target_description (uint64_t xcr0, bool is_linux,\n+\t\t\t\t\t     bool segments);\n \n #endif /* ARCH_I386_H */"
    },
    {
      "sha": "c22c3dfbc3cb6c03ae0758d44b08188098497b18",
      "filename": "gdb/features/i386/32bit-segments.c",
      "status": "added",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/features/i386/32bit-segments.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/features/i386/32bit-segments.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/32bit-segments.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -0,0 +1,15 @@\n+/* THIS FILE IS GENERATED.  -*- buffer-read-only: t -*- vi:set ro:\n+  Original: 32bit-segments.xml */\n+\n+#include \"common/tdesc.h\"\n+\n+static int\n+create_feature_i386_32bit_segments (struct target_desc *result, long regnum)\n+{\n+  struct tdesc_feature *feature;\n+\n+  feature = tdesc_create_feature (result, \"org.gnu.gdb.i386.segments\");\n+  tdesc_create_reg (feature, \"fs_base\", regnum++, 1, NULL, 32, \"int\");\n+  tdesc_create_reg (feature, \"gs_base\", regnum++, 1, NULL, 32, \"int\");\n+  return regnum;\n+}"
    },
    {
      "sha": "098948e5ecec1274e4b0b852ad1421e4d10b1ffe",
      "filename": "gdb/features/i386/32bit-segments.xml",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/features/i386/32bit-segments.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/features/i386/32bit-segments.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/i386/32bit-segments.xml?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\"?>\n+<!-- Copyright (C) 2016-2018 Free Software Foundation, Inc.\n+\n+     Copying and distribution of this file, with or without modification,\n+     are permitted in any medium without royalty provided the copyright\n+     notice and this notice are preserved.  -->\n+\n+<!DOCTYPE feature SYSTEM \"gdb-target.dtd\">\n+<feature name=\"org.gnu.gdb.i386.segments\">\n+  <reg name=\"fs_base\" bitsize=\"32\" type=\"int\"/>\n+  <reg name=\"gs_base\" bitsize=\"32\" type=\"int\"/>\n+</feature>"
    },
    {
      "sha": "9879481b17ef01671e2d1e96c39535fbbbce3def",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-12  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* linux-x86-tdesc.c (i386_linux_read_description): Update call to\n+\ti386_create_target_description for 'segments' parameter.\n+\t* lynx-i386-low.c (lynx_i386_arch_setup): Likewise.\n+\t* nto-x86-low.c (nto_x86_arch_setup): Likewise.\n+\t* win32-i386-low.c (i386_arch_setup): Likewise.\n+\n 2019-03-12  Tom Tromey  <tromey@adacore.com>\n \n \t* linux-low.c (iterate_over_lwps): Update."
    },
    {
      "sha": "8f24a3d72d161e960ef1119aba04ac13fb53c949",
      "filename": "gdb/gdbserver/linux-x86-tdesc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/linux-x86-tdesc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/linux-x86-tdesc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/linux-x86-tdesc.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -87,7 +87,7 @@ i386_linux_read_description (uint64_t xcr0)\n \n   if (*tdesc == NULL)\n     {\n-      *tdesc = i386_create_target_description (xcr0, true);\n+      *tdesc = i386_create_target_description (xcr0, true, false);\n \n       init_target_desc (*tdesc, i386_expedite_regs);\n     }"
    },
    {
      "sha": "e47f6b92f637695cced3eaa9d96bf08d84ef528b",
      "filename": "gdb/gdbserver/lynx-i386-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/lynx-i386-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/lynx-i386-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/lynx-i386-low.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -331,7 +331,7 @@ static void\n lynx_i386_arch_setup (void)\n {\n   struct target_desc *tdesc\n-    = i386_create_target_description (X86_XSTATE_SSE_MASK, false);\n+    = i386_create_target_description (X86_XSTATE_SSE_MASK, false, false);\n \n   init_target_desc (tdesc, i386_expedite_regs);\n "
    },
    {
      "sha": "cfbe7ba6d810c1f116a833797f5134cd71a7f687",
      "filename": "gdb/gdbserver/nto-x86-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/nto-x86-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/nto-x86-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/nto-x86-low.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -89,7 +89,7 @@ nto_x86_arch_setup (void)\n {\n   the_low_target.num_regs = 16;\n   struct target_desc *tdesc\n-    = i386_create_target_description (X86_XSTATE_SSE_MASK, false);\n+    = i386_create_target_description (X86_XSTATE_SSE_MASK, false, false);\n \n   init_target_desc (tdesc, i386_expedite_regs);\n "
    },
    {
      "sha": "7b187d3bea3e5da8b39244d5bfce8ee0f69fedde",
      "filename": "gdb/gdbserver/win32-i386-low.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/win32-i386-low.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/gdbserver/win32-i386-low.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/win32-i386-low.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -439,7 +439,7 @@ i386_arch_setup (void)\n \t\t\t\t\t   false, false);\n   const char **expedite_regs = amd64_expedite_regs;\n #else\n-  tdesc = i386_create_target_description (X86_XSTATE_SSE_MASK, false);\n+  tdesc = i386_create_target_description (X86_XSTATE_SSE_MASK, false, false);\n   const char **expedite_regs = i386_expedite_regs;\n #endif\n "
    },
    {
      "sha": "7106e9080145a84aa1aa5b334825e39ab73d4129",
      "filename": "gdb/i386-fbsd-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-fbsd-nat.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -160,7 +160,7 @@ i386_fbsd_nat_target::read_description ()\n   if (x86bsd_xsave_len == 0)\n     xcr0 = X86_XSTATE_SSE_MASK;\n \n-  return i386_target_description (xcr0);\n+  return i386_target_description (xcr0, false);\n }\n #endif\n "
    },
    {
      "sha": "2f28bad7286503d080150041a863acea4ceda43c",
      "filename": "gdb/i386-fbsd-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-fbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-fbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-fbsd-tdep.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -267,7 +267,7 @@ i386fbsd_core_read_description (struct gdbarch *gdbarch,\n \t\t\t\tstruct target_ops *target,\n \t\t\t\tbfd *abfd)\n {\n-  return i386_target_description (i386fbsd_core_read_xcr0 (abfd));\n+  return i386_target_description (i386fbsd_core_read_xcr0 (abfd), false);\n }\n \n /* Similar to i386_supply_fpregset, but use XSAVE extended state.  */"
    },
    {
      "sha": "30db72d880e0be0fd80e91c3c8ec6a7b2f7299d3",
      "filename": "gdb/i386-go32-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-go32-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-go32-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-go32-tdep.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -35,7 +35,7 @@ i386_go32_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)\n \n   /* DJGPP does not support the SSE registers.  */\n   if (!tdesc_has_registers (info.target_desc))\n-    tdep->tdesc = i386_target_description (X86_XSTATE_X87_MASK);\n+    tdep->tdesc = i386_target_description (X86_XSTATE_X87_MASK, false);\n \n   /* Native compiler is GCC, which uses the SVR4 register numbering\n      even in COFF and STABS.  See the comment in i386_gdbarch_init,"
    },
    {
      "sha": "fa6b86f1c89baacddb49af0254e783ca21d1fc6c",
      "filename": "gdb/i386-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-linux-tdep.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -694,7 +694,7 @@ i386_linux_read_description (uint64_t xcr0)\n     [(xcr0 & X86_XSTATE_PKRU) ? 1 : 0];\n \n   if (*tdesc == NULL)\n-    *tdesc = i386_create_target_description (xcr0, true);\n+    *tdesc = i386_create_target_description (xcr0, true, false);\n \n   return *tdesc;\n }"
    },
    {
      "sha": "4e63832b0e6f6ec0017d234e5aa8f85691be3466",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 25,
      "deletions": 8,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -8175,7 +8175,7 @@ i386_validate_tdesc_p (struct gdbarch_tdep *tdep,\n   const struct tdesc_feature *feature_core;\n \n   const struct tdesc_feature *feature_sse, *feature_avx, *feature_mpx,\n-\t\t\t     *feature_avx512, *feature_pkeys;\n+\t\t\t     *feature_avx512, *feature_pkeys, *feature_segments;\n   int i, num_regs, valid_p;\n \n   if (! tdesc_has_registers (tdesc))\n@@ -8198,6 +8198,9 @@ i386_validate_tdesc_p (struct gdbarch_tdep *tdep,\n   /* Try AVX512 registers.  */\n   feature_avx512 = tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.avx512\");\n \n+  /* Try segment base registers.  */\n+  feature_segments = tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.segments\");\n+\n   /* Try PKEYS  */\n   feature_pkeys = tdesc_find_feature (tdesc, \"org.gnu.gdb.i386.pkeys\");\n \n@@ -8307,6 +8310,16 @@ i386_validate_tdesc_p (struct gdbarch_tdep *tdep,\n \t    tdep->mpx_register_names[i]);\n     }\n \n+  if (feature_segments)\n+    {\n+      if (tdep->fsbase_regnum < 0)\n+\ttdep->fsbase_regnum = I386_FSBASE_REGNUM;\n+      valid_p &= tdesc_numbered_register (feature_segments, tdesc_data,\n+\t\t\t\t\t  tdep->fsbase_regnum, \"fs_base\");\n+      valid_p &= tdesc_numbered_register (feature_segments, tdesc_data,\n+\t\t\t\t\t  tdep->fsbase_regnum + 1, \"gs_base\");\n+    }\n+\n   if (feature_pkeys)\n     {\n       tdep->xcr0 |= X86_XSTATE_PKRU;\n@@ -8543,14 +8556,14 @@ i386_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   /* Even though the default ABI only includes general-purpose registers,\n      floating-point registers and the SSE registers, we have to leave a\n      gap for the upper AVX, MPX and AVX512 registers.  */\n-  set_gdbarch_num_regs (gdbarch, I386_PKEYS_NUM_REGS);\n+  set_gdbarch_num_regs (gdbarch, I386_NUM_REGS);\n \n   set_gdbarch_gnu_triplet_regexp (gdbarch, i386_gnu_triplet_regexp);\n \n   /* Get the x86 target description from INFO.  */\n   tdesc = info.target_desc;\n   if (! tdesc_has_registers (tdesc))\n-    tdesc = i386_target_description (X86_XSTATE_SSE_MASK);\n+    tdesc = i386_target_description (X86_XSTATE_SSE_MASK, false);\n   tdep->tdesc = tdesc;\n \n   tdep->num_core_regs = I386_NUM_GREGS + I387_NUM_REGS;\n@@ -8592,6 +8605,9 @@ i386_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   tdep->pkru_regnum = -1;\n   tdep->num_pkeys_regs = 0;\n \n+  /* No segment base registers.  */\n+  tdep->fsbase_regnum = -1;\n+\n   tdesc_data = tdesc_data_alloc ();\n \n   set_gdbarch_relocate_instruction (gdbarch, i386_relocate_instruction);\n@@ -8717,20 +8733,21 @@ i386_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n /* Return the target description for a specified XSAVE feature mask.  */\n \n const struct target_desc *\n-i386_target_description (uint64_t xcr0)\n+i386_target_description (uint64_t xcr0, bool segments)\n {\n   static target_desc *i386_tdescs \\\n-    [2/*SSE*/][2/*AVX*/][2/*MPX*/][2/*AVX512*/][2/*PKRU*/] = {};\n+    [2/*SSE*/][2/*AVX*/][2/*MPX*/][2/*AVX512*/][2/*PKRU*/][2/*segments*/] = {};\n   target_desc **tdesc;\n \n   tdesc = &i386_tdescs[(xcr0 & X86_XSTATE_SSE) ? 1 : 0]\n     [(xcr0 & X86_XSTATE_AVX) ? 1 : 0]\n     [(xcr0 & X86_XSTATE_MPX) ? 1 : 0]\n     [(xcr0 & X86_XSTATE_AVX512) ? 1 : 0]\n-    [(xcr0 & X86_XSTATE_PKRU) ? 1 : 0];\n+    [(xcr0 & X86_XSTATE_PKRU) ? 1 : 0]\n+    [segments ? 1 : 0];\n \n   if (*tdesc == NULL)\n-    *tdesc = i386_create_target_description (xcr0, false);\n+    *tdesc = i386_create_target_description (xcr0, false, segments);\n \n   return *tdesc;\n }\n@@ -9072,7 +9089,7 @@ Show Intel Memory Protection Extensions specific variables.\"),\n \n   for (auto &a : xml_masks)\n     {\n-      auto tdesc = i386_target_description (a.mask);\n+      auto tdesc = i386_target_description (a.mask, false);\n \n       selftests::record_xml_tdesc (a.xml, tdesc);\n     }"
    },
    {
      "sha": "c0d494824cccc27d6d20280f9b8799c21a34afd9",
      "filename": "gdb/i386-tdep.h",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1163a4b7a38a79ebd153dc5ee76ce93877d21dbd/gdb/i386-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.h?ref=1163a4b7a38a79ebd153dc5ee76ce93877d21dbd",
      "patch": "@@ -200,6 +200,10 @@ struct gdbarch_tdep\n   /* PKEYS register names.  */\n   const char **pkeys_register_names;\n \n+  /* Register number for %fsbase.  Set this to -1 to indicate the\n+     absence of segment base registers.  */\n+  int fsbase_regnum;\n+\n   /* Target description.  */\n   const struct target_desc *tdesc;\n \n@@ -296,7 +300,9 @@ enum i386_regnum\n   I386_K7_REGNUM = I386_K0_REGNUM + 7,\n   I386_ZMM0H_REGNUM,\t\t/* %zmm0h */\n   I386_ZMM7H_REGNUM = I386_ZMM0H_REGNUM + 7,\n-  I386_PKRU_REGNUM\n+  I386_PKRU_REGNUM,\n+  I386_FSBASE_REGNUM,\n+  I386_GSBASE_REGNUM\n };\n \n /* Register numbers of RECORD_REGMAP.  */\n@@ -337,6 +343,7 @@ enum record_i386_regnum\n #define I386_MPX_NUM_REGS\t(I386_BNDSTATUS_REGNUM + 1)\n #define I386_AVX512_NUM_REGS\t(I386_ZMM7H_REGNUM + 1)\n #define I386_PKEYS_NUM_REGS\t(I386_PKRU_REGNUM + 1)\n+#define I386_NUM_REGS\t\t(I386_GSBASE_REGNUM + 1)\n \n /* Size of the largest register.  */\n #define I386_MAX_REGISTER_SIZE\t64\n@@ -440,7 +447,8 @@ extern int i386_svr4_reg_to_regnum (struct gdbarch *gdbarch, int reg);\n \n extern int i386_process_record (struct gdbarch *gdbarch,\n                                 struct regcache *regcache, CORE_ADDR addr);\n-extern const struct target_desc *i386_target_description (uint64_t xcr0);\n+extern const struct target_desc *i386_target_description (uint64_t xcr0,\n+\t\t\t\t\t\t\t  bool segments);\n \n /* Return true iff the current target is MPX enabled.  */\n extern int i386_mpx_enabled (void);"
    }
  ]
}