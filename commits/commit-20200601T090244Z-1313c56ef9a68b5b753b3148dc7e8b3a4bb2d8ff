{
  "sha": "1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTMxM2M1NmVmOWE2OGI1Yjc1M2IzMTQ4ZGM3ZThiM2E0YmIyZDhmZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-04-03T19:32:38Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-01T09:02:44Z"
    },
    "message": "gdb: Preserve is-stmt lines when switch between files\n\nAfter the is-stmt support commit:\n\n  commit 8c95582da858ac981f689a6f599acacb8c5c490f\n  Date:   Mon Dec 30 21:04:51 2019 +0000\n\n      gdb: Add support for tracking the DWARF line table is-stmt field\n\nA regression was observed where a breakpoint could no longer be placed\nin some cases.\n\nConsider a line table like this:\n\n  File 1: test.c\n  File 2: test.h\n\n  | Addr | File | Line | Stmt |\n  |------|------|------|------|\n  | 1    | 1    | 16   | Y    |\n  | 2    | 1    | 17   | Y    |\n  | 3    | 2    | 21   | Y    |\n  | 4    | 2    | 22   | Y    |\n  | 4    | 1    | 18   | N    |\n  | 5    | 2    | 23   | N    |\n  | 6    | 1    | 24   | Y    |\n  | 7    | 1    | END  | Y    |\n  |------|------|------|------|\n\nBefore the is-stmt patch GDB would ignore any non-stmt lines, so GDB\nbuilt two line table structures:\n\n  File 1                 File 2\n  ------                 ------\n\n  | Addr | Line |        | Addr | Line |\n  |------|------|        |------|------|\n  | 1    | 16   |        | 3    | 21   |\n  | 2    | 17   |        | 4    | 22   |\n  | 3    | END  |        | 6    | END  |\n  | 6    | 24   |        |------|------|\n  | 7    | END  |\n  |------|------|\n\nAfter the is-stmt patch GDB now records non-stmt lines, so the\ngenerated line table structures look like this:\n\n  File 1                   File 2\n  ------                   ------\n\n  | Addr | Line | Stmt |  | Addr | Line | Stmt |\n  |------|------|------|  |------|------|------|\n  | 1    | 16   | Y    |  | 3    | 21   | Y    |\n  | 2    | 17   | Y    |  | 4    | 22   | Y    |\n  | 3    | END  | Y    |  | 4    | END  | Y    |\n  | 4    | 18   | N    |  | 5    | 23   | N    |\n  | 5    | END  | Y    |  | 6    | END  | Y    |\n  | 6    | 24   | Y    |  |------|------|------|\n  | 7    | END  | Y    |\n  |------|------|------|\n\nThe problem is that in 'File 2', end END marker at address 4 causes\nthe previous line table entry to be discarded, so we actually end up\nwith this:\n\n  File 2\n  ------\n\n  | Addr | Line | Stmt |\n  |------|------|------|\n  | 3    | 21   | Y    |\n  | 4    | END  | Y    |\n  | 5    | 23   | N    |\n  | 6    | END  | Y    |\n  |------|------|------|\n\nWhen a user tries to place a breakpoint in file 2 at line 22, this is\nno longer possible.\n\nThe solution I propose here is that we ignore line table entries that\nwould trigger a change of file if:\n\n  1. The new line being added is at the same address as the previous\n  line, and\n\n  2. We have previously seen an is-stmt line at the current address.\n\nThe result of this is that GDB switches file, and knows that some line\nentry (or entries) are going to be discarded, prefer to keep is-stmt\nlines and discard non-stmt lines.\n\nAfter this commit the lines tables are now:\n\n  File 1                   File 2\n  ------                   ------\n\n  | Addr | Line | Stmt |  | Addr | Line | Stmt |\n  |------|------|------|  |------|------|------|\n  | 1    | 16   | Y    |  | 3    | 21   | Y    |\n  | 2    | 17   | Y    |  | 4    | 22   | Y    |\n  | 3    | END  | Y    |  | 5    | 23   | N    |\n  | 5    | END  | Y    |  | 6    | END  | Y    |\n  | 6    | 24   | Y    |  |------|------|------|\n  | 7    | END  | Y    |\n  |------|------|------|\n\nWe've lost the non-stmt entry for file 1, line 18, but retained the\nis-stmt entry for file 2, line 22.  The user can now place a\nbreakpoint at that location.\n\nOne problem that came from this commit was the test\ngdb.cp/step-and-next-inline.exp, which broke in several places.  After\nlooking at this test again I think that in some cases this test was\nonly ever passing by pure luck.  The debug GCC is producing for this\ntest is pretty broken.  I raised this GCC bug:\n\n  https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94474\n\nfor this and disabled one entire half of the test.  There are still\nsome cases in here that do pass, and if/when GCC is fixed it would be\ngreat to enable this test again.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (class lnp_state_machine) <m_last_address>: New\n\tmember variable.\n\t<m_stmt_at_address>: New member variable.\n\t(lnp_state_machine::record_line): Don't record some lines, update\n\ttracking of is_stmt at the same address.\n\t(lnp_state_machine::lnp_state_machine): Initialise new member\n\tvariables.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.cp/step-and-next-inline.exp (do_test): Skip all tests in the\n\tuse_header case.\n\t* gdb.dwarf2/dw2-inline-header-1.exp: New file.\n\t* gdb.dwarf2/dw2-inline-header-2.exp: New file.\n\t* gdb.dwarf2/dw2-inline-header-3.exp: New file.\n\t* gdb.dwarf2/dw2-inline-header-lbls.c: New file.\n\t* gdb.dwarf2/dw2-inline-header.c: New file.\n\t* gdb.dwarf2/dw2-inline-header.h: New file.",
    "tree": {
      "sha": "f15c8066a1abd9532b2841b90d0a6685107a0684",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f15c8066a1abd9532b2841b90d0a6685107a0684"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b7ed9f3d466700d4e766083b1e4f3a132e5fd4b4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7ed9f3d466700d4e766083b1e4f3a132e5fd4b4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b7ed9f3d466700d4e766083b1e4f3a132e5fd4b4"
    }
  ],
  "stats": {
    "total": 737,
    "additions": 734,
    "deletions": 3
  },
  "files": [
    {
      "sha": "b74167e31efee691b0c352411e2906ce5bb3f109",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -1,3 +1,13 @@\n+2020-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf2/read.c (class lnp_state_machine) <m_last_address>: New\n+\tmember variable.\n+\t<m_stmt_at_address>: New member variable.\n+\t(lnp_state_machine::record_line): Don't record some lines, update\n+\ttracking of is_stmt at the same address.\n+\t(lnp_state_machine::lnp_state_machine): Initialise new member\n+\tvariables.\n+\n 2020-06-01  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n \n \t* config/i386/i386gnu.mn [%_S.o %_U.o] (COMPILE.post): Add"
    },
    {
      "sha": "e6566f9649f8da631be48decdcabd344dc45ec39",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 44,
      "deletions": 3,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -20040,6 +20040,15 @@ class lnp_state_machine\n   /* The last file a line number was recorded for.  */\n   struct subfile *m_last_subfile = NULL;\n \n+  /* The address of the last line entry.  */\n+  CORE_ADDR m_last_address;\n+\n+  /* Set to true when a previous line at the same address (using\n+     m_last_address) had m_is_stmt true.  This is reset to false when a\n+     line entry at a new address (m_address different to m_last_address) is\n+     processed.  */\n+  bool m_stmt_at_address = false;\n+\n   /* When true, record the lines we decode.  */\n   bool m_currently_recording_lines = false;\n \n@@ -20233,14 +20242,34 @@ lnp_state_machine::record_line (bool end_sequence)\n       fe->included_p = 1;\n       if (m_record_lines_p)\n \t{\n-\t  if (m_last_subfile != m_cu->get_builder ()->get_current_subfile ()\n-\t      || end_sequence)\n+\t  /* When we switch files we insert an end maker in the first file,\n+\t     switch to the second file and add a new line entry.  The\n+\t     problem is that the end marker inserted in the first file will\n+\t     discard any previous line entries at the same address.  If the\n+\t     line entries in the first file are marked as is-stmt, while\n+\t     the new line in the second file is non-stmt, then this means\n+\t     the end marker will discard is-stmt lines so we can have a\n+\t     non-stmt line.  This means that there are less addresses at\n+\t     which the user can insert a breakpoint.\n+\n+\t     To improve this we track the last address in m_last_address,\n+\t     and whether we have seen an is-stmt at this address.  Then\n+\t     when switching files, if we have seen a stmt at the current\n+\t     address, and we are switching to create a non-stmt line, then\n+\t     discard the new line.  */\n+\t  bool file_changed\n+\t    = m_last_subfile != m_cu->get_builder ()->get_current_subfile ();\n+\t  bool ignore_this_line\n+\t    = (file_changed && !end_sequence && m_last_address == m_address\n+\t       && !m_is_stmt && m_stmt_at_address);\n+\n+\t  if ((file_changed && !ignore_this_line) || end_sequence)\n \t    {\n \t      dwarf_finish_line (m_gdbarch, m_last_subfile, m_address,\n \t\t\t\t m_currently_recording_lines ? m_cu : nullptr);\n \t    }\n \n-\t  if (!end_sequence)\n+\t  if (!end_sequence && !ignore_this_line)\n \t    {\n \t      bool is_stmt = producer_is_codewarrior (m_cu) || m_is_stmt;\n \n@@ -20259,6 +20288,15 @@ lnp_state_machine::record_line (bool end_sequence)\n \t    }\n \t}\n     }\n+\n+  /* Track whether we have seen any m_is_stmt true at m_address in case we\n+     have multiple line table entries all at m_address.  */\n+  if (m_last_address != m_address)\n+    {\n+      m_stmt_at_address = false;\n+      m_last_address = m_address;\n+    }\n+  m_stmt_at_address |= m_is_stmt;\n }\n \n lnp_state_machine::lnp_state_machine (struct dwarf2_cu *cu, gdbarch *arch,\n@@ -20278,6 +20316,9 @@ lnp_state_machine::lnp_state_machine (struct dwarf2_cu *cu, gdbarch *arch,\n   m_address = gdbarch_adjust_dwarf2_line (arch, 0, 0);\n   m_is_stmt = lh->default_is_stmt;\n   m_discriminator = 0;\n+\n+  m_last_address = m_address;\n+  m_stmt_at_address = false;\n }\n \n void"
    },
    {
      "sha": "ec6b24a018314cad3cc3290923f83f9171dece71",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -1,3 +1,14 @@\n+2020-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.cp/step-and-next-inline.exp (do_test): Skip all tests in the\n+\tuse_header case.\n+\t* gdb.dwarf2/dw2-inline-header-1.exp: New file.\n+\t* gdb.dwarf2/dw2-inline-header-2.exp: New file.\n+\t* gdb.dwarf2/dw2-inline-header-3.exp: New file.\n+\t* gdb.dwarf2/dw2-inline-header-lbls.c: New file.\n+\t* gdb.dwarf2/dw2-inline-header.c: New file.\n+\t* gdb.dwarf2/dw2-inline-header.h: New file.\n+\n 2020-05-30  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.linespec/cp-replace-typedefs-ns-template.cc: New."
    },
    {
      "sha": "a95e21194f9c92b1e9f2bfd543ec83942558164e",
      "filename": "gdb/testsuite/gdb.cp/step-and-next-inline.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.cp/step-and-next-inline.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.cp/step-and-next-inline.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/step-and-next-inline.exp?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -24,6 +24,13 @@ if { ![supports_statement_frontiers] } {\n proc do_test { use_header } {\n     global srcfile testfile\n \n+    if { $use_header } {\n+\t# This test will not pass due to poor debug information\n+\t# generated by GCC (at least upto 10.x).  See\n+\t# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94474\n+\treturn\n+    }\n+\n     set options {c++ debug nowarnings optimize=-O2\\ -gstatement-frontiers}\n     if { $use_header } {\n \tlappend options additional_flags=-DUSE_NEXT_INLINE_H"
    },
    {
      "sha": "dc7ec9292367554bd3405282080a3794dc056a29",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header-1.exp",
      "status": "added",
      "additions": 186,
      "deletions": 0,
      "changes": 186,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header-1.exp?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,186 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Setup a line table where:\n+#\n+# |      |      |      |      | Inline | Inline |\n+# | Addr | File | Line | Stmt | Rng A  | Rng B  |\n+# |------|------|------|------|--------|--------|\n+# | 1    | 1    | 16   | Y    |        |        |\n+# | 2    | 1    | 17   | Y    |        |        |\n+# | 3    | 2    | 21   | Y    | X      |        |\n+# | 4    | 2    | 22   | Y    | X      |        |\n+# | 4    | 1    | 18   | N    | X      |        |\n+# | 5    | 2    | 23   | N    | X      | X      |\n+# | 6    | 1    | 24   | Y    |        |        |\n+# | 7    | 1    | END  | Y    |        |        |\n+# |------|------|------|------|--------|--------|\n+#\n+# Places a brekpoint at file 2, line 22.  Previously GDB would discard\n+# the line table entry for this line due to switching files for the\n+# file 1, line 18 non-statement line.  After patching however, GDB now\n+# discards the file 1, line 18 entry instead, and the breakpoint at\n+# line 22 should succeed.\n+#\n+# The two inlined subroutine ranges 'A' and 'B' represent two possible\n+# ways that a compiler might represent this siuatio in the DWARF.\n+#\n+# Range 'B' is something that has been seen in the wild using GCC 8.2.\n+# In this case the compilers range information is clearly wrong, but\n+# this shouldn't impact the main point of the test.\n+#\n+# Range 'A' is a hypothetical case of how the compiler might choose to\n+# represent this range, this has never been seen in the wild, but is\n+# an improved debug experiece over range 'B'.  However, if we ever run\n+# in to the situation where GDB can support the range 'A' test, or\n+# support some real DWARF seen in the wild, then the range 'A' case\n+# should be dropped in favour of supporting real world cases.  This is\n+# included here as it \"just worked\" once the range 'B' case was\n+# working.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    return 0\n+}\n+\n+# Prepare and run the test.\n+proc do_test { start_label func_name tag } {\n+    global srcfile srcfile2 srcfile3 srcfile4 testfile\n+\n+    standard_testfile dw2-inline-header-lbls.c dw2-inline-header-${tag}.S \\\n+\tdw2-inline-header.c dw2-inline-header.h\n+\n+    set build_options {nodebug optimize=-O1}\n+\n+    set asm_file [standard_output_file $srcfile2]\n+    Dwarf::assemble $asm_file {\n+\tglobal srcdir subdir srcfile srcfile3 srcfile4 testfile\n+\tupvar build_options build_options\n+\tupvar start_label start_label\n+\tdeclare_labels lines_label callee_subprog_label\n+\n+\tget_func_info main $build_options\n+\n+\tcu {} {\n+\t    compile_unit {\n+\t\t{producer \"gcc\" }\n+\t\t{language @DW_LANG_C}\n+\t\t{name ${srcfile3}}\n+\t\t{low_pc 0 addr}\n+\t\t{stmt_list ${lines_label} DW_FORM_sec_offset}\n+\t    } {\n+\t\tcallee_subprog_label: subprogram {\n+\t\t    {external 1 flag}\n+\t\t    {name callee}\n+\t\t    {inline 3 data1}\n+\t\t}\n+\t\tsubprogram {\n+\t\t    {external 1 flag}\n+\t\t    {name main}\n+\t\t    {low_pc $main_start addr}\n+\t\t    {high_pc \"$main_start + $main_len\" addr}\n+\t\t} {\n+\t\t    inlined_subroutine {\n+\t\t\t{abstract_origin %$callee_subprog_label}\n+\t\t\t{low_pc $start_label addr}\n+\t\t\t{high_pc line_label_6 addr}\n+\t\t\t{call_file 1 data1}\n+\t\t\t{call_line 18 data1}\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+\n+\tlines {version 2 default_is_stmt 1} lines_label {\n+\t    include_dir \"${srcdir}/${subdir}\"\n+\t    file_name \"$srcfile3\" 1\n+\t    file_name \"$srcfile4\" 1\n+\n+\t    program {\n+\t\t{DW_LNE_set_address line_label_1}\n+\t\t{DW_LNS_advance_line 15}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address line_label_2}\n+\t\t{DW_LNS_advance_line 1}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNS_set_file 2}\n+\t\t{DW_LNE_set_address line_label_3}\n+\t\t{DW_LNS_advance_line 4}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address line_label_4}\n+\t\t{DW_LNS_advance_line 1}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNS_advance_line -4}\n+\t\t{DW_LNS_set_file 1}\n+\t\t{DW_LNS_negate_stmt}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNS_set_file 2}\n+\t\t{DW_LNE_set_address line_label_5}\n+\t\t{DW_LNS_advance_line 5}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNS_negate_stmt}\n+\t\t{DW_LNS_set_file 1}\n+\t\t{DW_LNE_set_address line_label_6}\n+\t\t{DW_LNS_advance_line 1}\n+\t\t{DW_LNS_copy}\n+\n+\t\t{DW_LNE_set_address line_label_7}\n+\t\t{DW_LNE_end_sequence}\n+\t    }\n+\t}\n+    }\n+\n+    if { [prepare_for_testing \"failed to prepare\" ${testfile}-${tag} \\\n+\t      [list $srcfile $asm_file] $build_options] } {\n+\treturn -1\n+    }\n+\n+    if ![runto_main] {\n+\treturn -1\n+    }\n+\n+    # Delete all breakpoints so that the output of \"info breakpoints\"\n+    # below will only contain a single breakpoint.\n+    delete_breakpoints\n+\n+    # Place a breakpoint within the function in the header file.\n+    gdb_breakpoint \"${srcfile4}:22\"\n+\n+    # Check that the breakpoint was placed where we expected.  It should\n+    # appear at the requested line.  When the bug in GDB was present the\n+    # breakpoint would be placed on one of the following lines instead.\n+    gdb_test \"info breakpoints\" \\\n+\t\".* in $func_name at \\[^\\r\\n\\]+${srcfile4}:22\\\\y.*\" \\\n+\t\"info breakpoints, $tag\"\n+}\n+\n+do_test line_label_3 \"callee\" \"range-a\"\n+do_test line_label_5 \"main\" \"range-b\""
    },
    {
      "sha": "9f09f353273765a5586aa72e8b9fdef896a9e62c",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header-2.exp",
      "status": "added",
      "additions": 189,
      "deletions": 0,
      "changes": 189,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header-2.exp?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,189 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Setup a line table where:\n+#\n+# | Addr | File | Line | Stmt | Inline |\n+# |------|------|------|------|--------|\n+# | 1    | 1    | 16   | Y    |        |\n+# | 2    | 1    | 17   | Y    |        |\n+# | 3    | 2    | 21   | Y    | X      |\n+# | 4    | 2    | 22   | Y    | X      |\n+# | 4    | 1    | 18   | N    | X      |\n+# | 5    | 1    | 19   | Y    |        |\n+# | 6    | 1    | 20   | Y    |        |\n+# | 7    | 1    | END  | Y    |        |\n+# |------|------|------|------|--------|\n+#\n+#\n+# Place the first brekpoint at file 2, line 22 and a second breakpoint\n+# at file 1, line 19.  A third breakpoint is placed at file 1, line\n+# 18, but as this line table entry will have been discarded[1] the\n+# third breakpoint will actually be placed at the same location as the\n+# second breakpoint.\n+#\n+# This test is designed to test GDB's internal behaviour with respect\n+# to discarding particular line table entries.  GCC and DWARF are\n+# starting to introduce the idea of line table views.  As the views\n+# information becomes better supported within GDB it is likely that\n+# this will become out of date.  This is fine, the test will have\n+# served its purpose by that point and can be deleted.\n+#\n+# [1] The entry for file 1, line 18 is discarded because it is at the\n+# same address as the previous entry, but the previous entry is-stmt,\n+# while line 18 is a non-stmt.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    return 0\n+}\n+\n+standard_testfile dw2-inline-header-lbls.c dw2-inline-header.S \\\n+    dw2-inline-header.c dw2-inline-header.h\n+\n+set build_options {nodebug optimize=-O1}\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile srcfile3 srcfile4\n+    global build_options\n+    declare_labels lines_label callee_subprog_label\n+\n+    get_func_info main $build_options\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {producer \"gcc\" }\n+\t    {language @DW_LANG_C}\n+\t    {name ${srcfile3}}\n+\t    {low_pc 0 addr}\n+\t    {stmt_list ${lines_label} DW_FORM_sec_offset}\n+\t} {\n+\t    callee_subprog_label: subprogram {\n+\t\t{external 1 flag}\n+\t\t{name callee}\n+\t\t{inline 3 data1}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name main}\n+\t\t{low_pc $main_start addr}\n+\t\t{high_pc \"$main_start + $main_len\" addr}\n+\t    } {\n+\t\tinlined_subroutine {\n+\t\t    {abstract_origin %$callee_subprog_label}\n+\t\t    {low_pc line_label_3 addr}\n+\t\t    {high_pc line_label_5 addr}\n+\t\t    {call_file 1 data1}\n+\t\t    {call_line 18 data1}\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+    lines {version 2 default_is_stmt 1} lines_label {\n+\tinclude_dir \"${srcdir}/${subdir}\"\n+\tfile_name \"$srcfile3\" 1\n+\tfile_name \"$srcfile4\" 1\n+\n+\tprogram {\n+\t    {DW_LNE_set_address line_label_1}\n+\t    {DW_LNS_advance_line 15}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_2}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNS_set_file 2}\n+\t    {DW_LNE_set_address line_label_3}\n+\t    {DW_LNS_advance_line 4}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_4}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNS_advance_line -4}\n+\t    {DW_LNS_set_file 1}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_5}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_6}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_7}\n+\t    {DW_LNE_end_sequence}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] $build_options] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+# Delete all breakpoints so that the output of \"info breakpoints\"\n+# below will only contain a single breakpoint.\n+delete_breakpoints\n+\n+# Place a breakpoint within the function in the header file.\n+gdb_breakpoint \"${srcfile4}:22\"\n+\n+# Check that the breakpoint was placed where we expected.  It should\n+# appear at the requested line.  When the bug in GDB was present the\n+# breakpoint would be placed on one of the following lines instead.\n+gdb_test \"info breakpoints\" \\\n+    \".* in callee at \\[^\\r\\n\\]+${srcfile4}:22\\\\y.*\" \\\n+    \"check for breakpoint at ${srcfile4}\"\n+\n+# Delete all breakpoints so that the output of \"info breakpoints\"\n+# below will only contain a single breakpoint.\n+delete_breakpoints\n+\n+# Place a breakpoint within the function in the header file.\n+gdb_breakpoint \"${srcfile3}:19\"\n+\n+# Check that the breakpoint was placed where we expected.  It should\n+# appear at the requested line.  When the bug in GDB was present the\n+# breakpoint would be placed on one of the following lines instead.\n+gdb_test \"info breakpoints\" \\\n+    \".* in main at \\[^\\r\\n\\]+${srcfile3}:19\\\\y.*\" \\\n+    \"check for breakpoint at ${srcfile3}\"\n+\n+# Line table entry for line 18 will have been discarded, so this\n+# brekpoint will be at the same location as line 19.\n+gdb_test \"break ${srcfile3}:18\" \\\n+    \"Note: breakpoint $decimal also set at pc $hex.*\""
    },
    {
      "sha": "a3820f16d57d5408f2e178019eebc452d1b507d4",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header-3.exp",
      "status": "added",
      "additions": 193,
      "deletions": 0,
      "changes": 193,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-3.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-3.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header-3.exp?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,193 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Setup a line table where:\n+#\n+# | Addr | File | Line | Stmt | Inline |\n+# |------|------|------|------|--------|\n+# | 1    | 1    | 16   | Y    |        |\n+# | 2    | 1    | 17   | Y    |        |\n+# | 3    | 2    | 21   | Y    | X      |\n+# | 4    | 2    | 22   | Y    | X      |\n+# | 4    | 1    | 18   | N    |        |\n+# | 5    | 1    | 19   | N    |        |\n+# | 6    | 1    | 20   | Y    |        |\n+# | 7    | 1    | END  | Y    |        |\n+# |------|------|------|------|--------|\n+#\n+# Break at file 2, line 22, then single instruction step forward.  We\n+# should pass through line 19 and then encounter line 20.\n+#\n+# Currently we don't expect GDB to see file 1, line 18, as this is a\n+# non-stmt line in a different file at the same address as the\n+# previous is-stmt line.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    return 0\n+}\n+\n+standard_testfile dw2-inline-header-lbls.c dw2-inline-header.S \\\n+    dw2-inline-header.c dw2-inline-header.h\n+\n+set build_options {nodebug optimize=-O1}\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile srcfile3 srcfile4\n+    global build_options\n+    declare_labels lines_label callee_subprog_label\n+\n+    get_func_info main $build_options\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {producer \"gcc\" }\n+\t    {language @DW_LANG_C}\n+\t    {name ${srcfile3}}\n+\t    {low_pc 0 addr}\n+\t    {stmt_list ${lines_label} DW_FORM_sec_offset}\n+\t} {\n+\t    callee_subprog_label: subprogram {\n+\t\t{external 1 flag}\n+\t\t{name callee}\n+\t\t{inline 3 data1}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name main}\n+\t\t{low_pc $main_start addr}\n+\t\t{high_pc \"$main_start + $main_len\" addr}\n+\t    } {\n+\t\tinlined_subroutine {\n+\t\t    {abstract_origin %$callee_subprog_label}\n+\t\t    {low_pc line_label_3 addr}\n+\t\t    {high_pc line_label_5 addr}\n+\t\t    {call_file 1 data1}\n+\t\t    {call_line 18 data1}\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+    lines {version 2 default_is_stmt 1} lines_label {\n+\tinclude_dir \"${srcdir}/${subdir}\"\n+\tfile_name \"$srcfile3\" 1\n+\tfile_name \"$srcfile4\" 1\n+\n+\tprogram {\n+\t    {DW_LNE_set_address line_label_1}\n+\t    {DW_LNS_advance_line 15}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_2}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNS_set_file 2}\n+\t    {DW_LNE_set_address line_label_3}\n+\t    {DW_LNS_advance_line 4}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_4}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNS_advance_line -4}\n+\t    {DW_LNS_set_file 1}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_5}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_6}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_7}\n+\t    {DW_LNE_end_sequence}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] $build_options] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+# Delete all breakpoints so that the output of \"info breakpoints\"\n+# below will only contain a single breakpoint.\n+delete_breakpoints\n+\n+# Place a breakpoint within the function in the header file.\n+gdb_breakpoint \"${srcfile4}:22\"\n+\n+# Check that the breakpoint was placed where we expected.  It should\n+# appear at the requested line.  When the bug in GDB was present the\n+# breakpoint would be placed on one of the following lines instead.\n+gdb_test \"info breakpoints\" \\\n+    \".* in callee at \\[^\\r\\n\\]+${srcfile4}:22\\\\y.*\"\n+\n+gdb_continue_to_breakpoint \"${srcfile4}:22\" \\\n+    \".* ${srcfile4} : 22 .*\"\n+\n+# Now single instruction step forward.  Eventually we should hit\n+# ${srcfile3}:20, but before we do we should hit the non-statement\n+# line ${srcfile3}:19.\n+#\n+# We don't know how many instructions we'll need to step, but 100\n+# should be enough for everyone (surely), and this stops us looping\n+# forever if something goes wrong.\n+set found_line_19 0\n+set found_line_20 0\n+set keep_going 1\n+for { set i 0 } { $i < 100 && $keep_going } { incr i } {\n+    set keep_going 0\n+    gdb_test_multiple \"stepi\" \"stepi ${i}\" {\n+\t-re \"${srcfile3} : 19 .*${gdb_prompt} \" {\n+\t    set found_line_19 1\n+\t    set keep_going 1\n+\t}\n+\n+\t-re \"${srcfile3} : 20 .*${gdb_prompt} \" {\n+\t    set found_line_20 1\n+\t}\n+\n+\t-re \"${srcfile4} : 22 .*${gdb_prompt} \" {\n+\t    # Not left line 22 yet.\n+\t    set keep_going 1\n+\t}\n+    }\n+}\n+\n+gdb_assert { $found_line_19 && $found_line_20 } \\\n+    \"found line 19 and 20\""
    },
    {
      "sha": "a1b7b17cbebc6c0613d3d5c68014aeaf037ecb9f",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header-lbls.c",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-lbls.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header-lbls.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header-lbls.c?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,46 @@\n+/* Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Used to insert labels with which we can build a fake line table.  */\n+#define LL(N) asm (\"line_label_\" #N \": .globl line_label_\" #N)\n+\n+volatile int var;\n+volatile int bar;\n+\n+/* Generate some code to take up some space.  */\n+#define FILLER do { \\\n+    var = 99;\t    \\\n+} while (0)\n+\n+int\n+main ()\n+{\t\t\t\t\t/* main prologue */\n+  asm (\"main_label: .globl main_label\");\n+  LL (1);\t// F1, Ln 16\n+  FILLER;\n+  LL (2);\t// F1, Ln 17\n+  FILLER;\n+  LL (3);\t// F2, Ln 21\n+  FILLER;\n+  LL (4);\t// F2, Ln 22 // F1, Ln 18, !S\n+  FILLER;\n+  LL (5);\t// F1, Ln 19 !S\n+  FILLER;\n+  LL (6);\t// F1, Ln 20\n+  FILLER;\n+  LL (7);\n+  FILLER;\n+  return 0;\t\t\t\t/* main end */\n+}"
    },
    {
      "sha": "a8331268a09539e6282d252757dff1c3025cd4f3",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header.c",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header.c?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,24 @@\n+/* Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* dw2-inline-header.c : 16 */\n+/* dw2-inline-header.c : 17 */\n+/* dw2-inline-header.c : 18 */\n+/* dw2-inline-header.c : 19 */\n+/* dw2-inline-header.c : 20 */\n+/* dw2-inline-header.c : 21 */\n+/* dw2-inline-header.c : 22 */\n+/* dw2-inline-header.c : 23 */\n+/* dw2-inline-header.c : 24 */"
    },
    {
      "sha": "7233acbcd76c8358d579cfc960b6ad9639419521",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-inline-header.h",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff/gdb/testsuite/gdb.dwarf2/dw2-inline-header.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-inline-header.h?ref=1313c56ef9a68b5b753b3148dc7e8b3a4bb2d8ff",
      "patch": "@@ -0,0 +1,24 @@\n+/* Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* dw2-inline-header.h : 16 */\n+/* dw2-inline-header.h : 17 */\n+/* dw2-inline-header.h : 18 */\n+/* dw2-inline-header.h : 19 */\n+/* dw2-inline-header.h : 20 */\n+/* dw2-inline-header.h : 21 */\n+/* dw2-inline-header.h : 22 */\n+/* dw2-inline-header.h : 23 */\n+/* dw2-inline-header.h : 24 */"
    }
  ]
}