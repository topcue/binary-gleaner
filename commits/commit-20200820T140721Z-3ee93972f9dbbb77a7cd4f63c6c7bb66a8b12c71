{
  "sha": "3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2VlOTM5NzJmOWRiYmI3N2E3Y2Q0ZjYzYzZjN2JiNjZhOGIxMmM3MQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-20T14:07:21Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-20T14:07:21Z"
    },
    "message": "gdb: clear regcaches at the start of regcaches selftest\n\nIt currently does not work to run the `regcaches` selftest while\ndebugging something.  This is because we expect that there exists no\nregcache at the start of the test.  If we are debugging something, there\nmight exist some regcaches.\n\nFix it by making the test clear regcaches at the start.\n\nWhile at it, make the test clean up after it self and clear the\nregcaches at the end too.\n\ngdb/ChangeLog:\n\n\t* regcache.c (regcaches_test): Call registers_changed.\n\nChange-Id: I9d4f83ecb0ff9721a71e2c5cbd19e6e6d4e6c30c",
    "tree": {
      "sha": "30889ffcdcd329127c834fe622e08200a9817955",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30889ffcdcd329127c834fe622e08200a9817955"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "01147b208215ae457e7ef2d5a105c9dac93d955a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01147b208215ae457e7ef2d5a105c9dac93d955a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/01147b208215ae457e7ef2d5a105c9dac93d955a"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 9,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a6835f0b287f6e78affea1f8b8e34c92bf1426f9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
      "patch": "@@ -1,3 +1,7 @@\n+2020-08-20  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* regcache.c (regcaches_test): Call registers_changed.\n+\n 2020-08-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* infrun.c (process_event_stop_test): Fix typo \"breapoint\"."
    },
    {
      "sha": "9f560acd3edde4bc0980c8a1d0dfab41c492f1d4",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=3ee93972f9dbbb77a7cd4f63c6c7bb66a8b12c71",
      "patch": "@@ -1506,7 +1506,8 @@ test_get_thread_arch_aspace_regcache (process_stratum_target *target,\n static void\n regcaches_test ()\n {\n-  /* It is empty at the start.  */\n+  /* Ensure the regcaches container is empty at the start.  */\n+  registers_changed ();\n   SELF_CHECK (regcaches_size () == 0);\n \n   ptid_t ptid1 (1), ptid2 (2), ptid3 (3);\n@@ -1565,6 +1566,9 @@ regcaches_test ()\n      clears REGCACHES.  */\n   registers_changed_ptid (nullptr, minus_one_ptid);\n   SELF_CHECK (regcaches_size () == 0);\n+\n+  /* Make sure to leave the global regcaches container empty.  */\n+  registers_changed ();\n }\n \n class target_ops_no_register : public test_target_ops"
    }
  ]
}