{
  "sha": "f9a4d54332f9e1f75701ba43249a03cc631ec736",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjlhNGQ1NDMzMmY5ZTFmNzU3MDFiYTQzMjQ5YTAzY2M2MzFlYzczNg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-15T23:51:52Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-18T03:20:13Z"
    },
    "message": "sim: overhaul & unify endian settings management\n\nThe m4 macro has 2 args: the \"wire\" settings (which represents the\nhardwired port behavior), and the default settings (which are used\nif nothing else is specified).  If none are specified, the arch is\nexpected to support both, and the value will be probed based on the\nuser runtime options or the input program.\n\nOnly two arches today set the default value (bpf & mips).  We can\nprobably let this go as it only shows up in one scenario: the sim\nis invoked, but with no inputs, and no user endian selection.  This\nmeans bpf will not behave like the other arches: an error is shown\nand forces the user to make a choice.  If an input program is used\nthough, we'll still switch the default to that.  This allows us to\nremove the WITH_DEFAULT_TARGET_BYTE_ORDER setting.\n\nFor the ports that set a \"wire\" endian, move it to the runtime init\nof the respective sim_open calls.  This allows us to change the\nWITH_TARGET_BYTE_ORDER to purely a user-selected configure setting\nif they want to force a specific endianness.\n\nWith all the endian logic moved to runtime selection, we can move\nthe configure call up to the common dir so we only process it once\nacross all ports.\n\nThe ppc arch was picking the wire endian based on the target used,\nbut since we weren't doing that for other biendian arches, we can\nlet this go too.  We'll rely on the input selecting the endian, or\nmake the user decide.",
    "tree": {
      "sha": "2dd0b32c633005ac4378a2282d9726885e09a7b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2dd0b32c633005ac4378a2282d9726885e09a7b5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f9a4d54332f9e1f75701ba43249a03cc631ec736",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9a4d54332f9e1f75701ba43249a03cc631ec736",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f9a4d54332f9e1f75701ba43249a03cc631ec736",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9a4d54332f9e1f75701ba43249a03cc631ec736/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4470708442cef1c818c4322f975d9017307f0243",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4470708442cef1c818c4322f975d9017307f0243",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4470708442cef1c818c4322f975d9017307f0243"
    }
  ],
  "stats": {
    "total": 2069,
    "additions": 348,
    "deletions": 1721
  },
  "files": [
    {
      "sha": "9740e1311bc44851bfe03fc2fcdb440fde3afb7c",
      "filename": "sim/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Call SIM_AC_OPTION_ENDIAN.\n+\t* m4/sim_ac_option_endian.m4: Delete wire & default arguments.\n+\t* m4/sim_ac_output.m4: Delete sim_alignment & sim_endian.\n+\t* aclocal.m4, Makefile.in, config.h.in, configure: Regenerate.\n+\n 2021-06-16  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* common/Make-common.in (COMPILE, libsim.a, run$(EXEEXT),"
    },
    {
      "sha": "f77abe38d8ad44a18548ca424da50a91826e4845",
      "filename": "sim/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/Makefile.in?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -201,6 +201,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_alignment.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_assert.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_debug.m4 \\\n+\t$(top_srcdir)/m4/sim_ac_option_endian.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_environment.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_profile.m4 \\\n \t$(top_srcdir)/m4/sim_ac_option_stdio.m4 \\"
    },
    {
      "sha": "a522fcf0ef77235a58b41a5de0d39d5a19906058",
      "filename": "sim/aarch64/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/aarch64/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/aarch64/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "849e957f827783c9b91d1326195e8a529477cdaf",
      "filename": "sim/aarch64/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aarch64/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aarch64/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -24,6 +24,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "773ba0fc6cfc173e571c056dacd3c0209d31ebe6",
      "filename": "sim/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1174,6 +1174,7 @@ m4_include([../config/override.m4])\n m4_include([m4/sim_ac_option_alignment.m4])\n m4_include([m4/sim_ac_option_assert.m4])\n m4_include([m4/sim_ac_option_debug.m4])\n+m4_include([m4/sim_ac_option_endian.m4])\n m4_include([m4/sim_ac_option_environment.m4])\n m4_include([m4/sim_ac_option_profile.m4])\n m4_include([m4/sim_ac_option_stdio.m4])"
    },
    {
      "sha": "8bb9bffbfb0fc2c9d5a3abaf33565c27edf1be33",
      "filename": "sim/arm/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/arm/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/arm/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/arm/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/arm/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/arm/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "156e7f26e566c13bdc18c02b80122d09edcb1d6c",
      "filename": "sim/avr/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/avr/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/avr/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/avr/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "2bd72731b5553486e52b72c52cbb3295d7498755",
      "filename": "sim/avr/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/avr/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/avr/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1686,6 +1686,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "fa97d8e6a761a460e162a7f60a7a4c0eb7adeb4d",
      "filename": "sim/bfin/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "4957db847636ada65f6d713371617afc1a539a49",
      "filename": "sim/bfin/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "d4aa3a21f0cd2002dbb958a1b0341a456f0127a9",
      "filename": "sim/bfin/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -635,7 +635,6 @@ sim_reserved_bits\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n SDL_LIBS\n SDL_CFLAGS\n@@ -758,7 +757,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -773,7 +771,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_default_model\n enable_sim_hardware\n enable_werror\n@@ -1422,8 +1419,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-sim-hardware=LIST\n@@ -10762,7 +10757,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10765 \"configure\"\n+#line 10760 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10868,7 +10863,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10871 \"configure\"\n+#line 10866 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11164,51 +11159,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_default_model=\"bf537\"\n # Check whether --enable-sim-default-model was given.\n if test \"${enable_sim_default_model+set}\" = set; then :\n@@ -11744,8 +11694,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9b17dc4212fe692b6001c7ff468340c55bd228f0",
      "filename": "sim/bfin/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_DEFAULT_MODEL(bf537)\n SIM_AC_OPTION_HARDWARE(\\\n \tbfin_cec \\"
    },
    {
      "sha": "216cefe2c21c558a76333c0e858ebb55968a4548",
      "filename": "sim/bfin/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bfin/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bfin/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -704,6 +704,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "5e2b222438d369e114db255972033ca34a638b70",
      "filename": "sim/bpf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "d3a56933952162c0036c336bdeccc5371c465d59",
      "filename": "sim/bpf/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -113,7 +113,6 @@ m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "a0ed8ab4c37787ab6749933077df620bef82b014",
      "filename": "sim/bpf/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -633,7 +633,6 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n sim_float\n-sim_alignment\n cgen_breaks\n cgen\n cgendir\n@@ -755,7 +754,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -772,7 +770,6 @@ enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n enable_sim_bitsize\n-enable_sim_endian\n enable_sim_scache\n enable_sim_default_model\n enable_werror\n@@ -1419,8 +1416,6 @@ Optional Features:\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n@@ -10755,7 +10750,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10758 \"configure\"\n+#line 10753 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10861,7 +10856,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10864 \"configure\"\n+#line 10859 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11216,51 +11211,6 @@ fi\n fi\n \n \n-wire_endian=\"\"\n-default_endian=\"LITTLE\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11549,8 +11499,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "d2ec00c5a34c559aa21f3491b82df36df385fbb4",
      "filename": "sim/bpf/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/bpf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/bpf/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -5,7 +5,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n SIM_AC_COMMON\n \n SIM_AC_OPTION_BITSIZE([64])\n-SIM_AC_OPTION_ENDIAN([], [LITTLE])\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([bpf-def])\n SIM_AC_OPTION_WARNINGS(no)"
    },
    {
      "sha": "0d260eb71238a304282db7c6e80dd6391027fd52",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Make-common.in (SIM_ENDIAN): Delete.\n+\t* sim-config.c (sim_config): Delete WITH_DEFAULT_TARGET_BYTE_ORDER.\n+\t(sim_config_print): Likewise.\n+\t* sim-config.h (WITH_TARGET_BYTE_ORDER): Delete.\n+\t(WITH_DEFAULT_TARGET_BYTE_ORDER): Likewise.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cgen-trace.c: Include sim/callback.h."
    },
    {
      "sha": "7a6a2030a47b5ac6a0b112029887c3c79f0e2ce7",
      "filename": "sim/common/Make-common.in",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/Make-common.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/Make-common.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/Make-common.in?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -86,7 +86,6 @@ LDFLAGS = @LDFLAGS@\n \n SIM_BITSIZE = @sim_bitsize@\n SIM_DEFAULT_MODEL = @sim_default_model@\n-SIM_ENDIAN = @sim_endian@\n SIM_FLOAT = @sim_float@\n SIM_HW_CFLAGS = @sim_hw_cflags@\n SIM_HW_OBJS = @sim_hw_objs@\n@@ -223,7 +222,6 @@ CONFIG_CFLAGS = \\\n \t-DHAVE_CONFIG_H \\\n \t$(SIM_DEFAULT_MODEL) \\\n \t$(SIM_BITSIZE) \\\n-\t$(SIM_ENDIAN) \\\n \t$(SIM_FLOAT) \\\n \t$(SIM_HW_CFLAGS) \\\n \t$(SIM_INLINE) \\"
    },
    {
      "sha": "fc6b09a7238d13ebf779e57ebe2878d6e2779229",
      "filename": "sim/common/sim-config.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/sim-config.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/sim-config.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-config.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -169,8 +169,6 @@ sim_config (SIM_DESC sd)\n     current_target_byte_order = prefered_target_byte_order;\n   if (current_target_byte_order == BFD_ENDIAN_UNKNOWN)\n     current_target_byte_order = WITH_TARGET_BYTE_ORDER;\n-  if (current_target_byte_order == BFD_ENDIAN_UNKNOWN)\n-    current_target_byte_order = WITH_DEFAULT_TARGET_BYTE_ORDER;\n \n   /* verify the target byte order */\n   if (CURRENT_TARGET_BYTE_ORDER == BFD_ENDIAN_UNKNOWN)\n@@ -302,9 +300,6 @@ sim_config_print (SIM_DESC sd)\n   sim_io_printf (sd, \"WITH_TARGET_BYTE_ORDER = %s\\n\",\n \t\t config_byte_order_to_a (WITH_TARGET_BYTE_ORDER));\n \n-  sim_io_printf (sd, \"WITH_DEFAULT_TARGET_BYTE_ORDER = %s\\n\",\n-\t\t config_byte_order_to_a (WITH_DEFAULT_TARGET_BYTE_ORDER));\n-\n   sim_io_printf (sd, \"HOST_BYTE_ORDER = %s\\n\",\n \t\t config_byte_order_to_a (HOST_BYTE_ORDER));\n "
    },
    {
      "sha": "5b1713cff706af6618d926606d353575db7652d3",
      "filename": "sim/common/sim-config.h",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/sim-config.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/common/sim-config.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-config.h?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -50,14 +50,6 @@\n \n    Possible values are BFD_ENDIAN_UNKNOWN, BFD_ENDIAN_LITTLE, or BFD_ENDIAN_BIG.  */\n \n-#ifndef WITH_TARGET_BYTE_ORDER\n-#define WITH_TARGET_BYTE_ORDER\t\tBFD_ENDIAN_UNKNOWN\n-#endif\n-\n-#ifndef WITH_DEFAULT_TARGET_BYTE_ORDER\n-#define WITH_DEFAULT_TARGET_BYTE_ORDER\tBFD_ENDIAN_UNKNOWN\n-#endif\n-\n extern enum bfd_endian current_target_byte_order;\n #define CURRENT_TARGET_BYTE_ORDER \\\n   (WITH_TARGET_BYTE_ORDER != BFD_ENDIAN_UNKNOWN \\"
    },
    {
      "sha": "af6b591d9eef2a5410843ad878adff3d0274d5f0",
      "filename": "sim/config.h.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/config.h.in?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -452,6 +452,9 @@\n /* How to route I/O */\n #undef WITH_STDIO\n \n+/* Sim endian settings */\n+#undef WITH_TARGET_BYTE_ORDER\n+\n /* Sim trace settings */\n #undef WITH_TRACE\n "
    },
    {
      "sha": "959fa9037ade6be57688ee64c7f1d179caa1938f",
      "filename": "sim/configure",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -758,6 +758,7 @@ enable_targets\n enable_sim_alignment\n enable_sim_assert\n enable_sim_debug\n+enable_sim_endian\n enable_sim_environment\n enable_sim_profile\n enable_sim_stdio\n@@ -1440,6 +1441,8 @@ Optional Features:\n   --enable-sim-assert     Specify whether to perform random assertions\n   --enable-sim-debug=opts Enable debugging flags (for developers of the sim\n                           itself)\n+  --enable-sim-endian=endian\n+                          Specify target byte endian orientation\n   --enable-sim-environment=environment\n                           Specify mixed, user, virtual or operating\n                           environment\n@@ -6751,6 +6754,26 @@ _ACEOF\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $sim_debug\" >&5\n $as_echo \"$sim_debug\" >&6; }\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to force sim endianness\" >&5\n+$as_echo_n \"checking whether to force sim endianness... \" >&6; }\n+sim_endian=\n+# Check whether --enable-sim-endian was given.\n+if test \"${enable_sim_endian+set}\" = set; then :\n+  enableval=$enable_sim_endian; case \"${enableval}\" in\n+  b*|B*) sim_endian=\"BFD_ENDIAN_BIG\";;\n+  l*|L*) sim_endian=\"BFD_ENDIAN_LITTLE\";;\n+  yes | no) ;;\n+  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5;;\n+esac\n+fi\n+\n+cat >>confdefs.h <<_ACEOF\n+#define WITH_TARGET_BYTE_ORDER ${sim_endian:-BFD_ENDIAN_UNKNOWN}\n+_ACEOF\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${sim_alignment:-no}\" >&5\n+$as_echo \"${sim_alignment:-no}\" >&6; }\n+\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking default sim environment setting\" >&5\n $as_echo_n \"checking default sim environment setting... \" >&6; }"
    },
    {
      "sha": "4ba2921ebaf35eb305f65a1b59e23ed40f12f7a7",
      "filename": "sim/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,6 +112,7 @@ dnl Eventually all simulators will support these.\n SIM_AC_OPTION_ALIGNMENT\n SIM_AC_OPTION_ASSERT\n SIM_AC_OPTION_DEBUG\n+SIM_AC_OPTION_ENDIAN\n SIM_AC_OPTION_ENVIRONMENT\n SIM_AC_OPTION_PROFILE\n SIM_AC_OPTION_STDIO"
    },
    {
      "sha": "dc4c1e8b239c3857ce7860439dd61a23d85a4000",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/cr16/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/cr16/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/cr16/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "6e3438c9d809ccd7161c9497eeecd0529459a1f3",
      "filename": "sim/cr16/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cr16/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -398,6 +398,9 @@ sim_open (SIM_OPEN_KIND kind, struct host_callback_struct *cb,\n   SIM_DESC sd = sim_state_alloc (kind, cb);\n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "61d064cd067eb63148be24c75222b13e24e7b3ad",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c: Include sim/callback.h."
    },
    {
      "sha": "612939868c20b0127409b912cdf487a79b07c7aa",
      "filename": "sim/cris/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "cd6fe7831750f5ff61228c3b8763ba30a78769c8",
      "filename": "sim/cris/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n cgen\n cgendir\n@@ -756,7 +755,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -771,7 +769,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_scache\n enable_werror\n enable_build_warnings\n@@ -1417,8 +1414,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-werror         treat compile warnings as errors\n@@ -10753,7 +10748,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10756 \"configure\"\n+#line 10751 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10859,7 +10854,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10862 \"configure\"\n+#line 10857 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11155,51 +11150,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11490,8 +11440,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "48c4bbeabac20ffe9e64799ac73f98e38ed04267",
      "filename": "sim/cris/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_HARDWARE(rv cris cris_900000xx)"
    },
    {
      "sha": "c183856fa4c8ae929a24ecc3075cc656c2c70d7a",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -654,6 +654,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n      standard ;-) that the rest of the elements won't be initialized.  */\n   bfd_byte sp_init[4] = {0, 0, 0, 0};\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "d5881766da7fa3762bc1f3b65136cfb418f93dc8",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/d10v/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/d10v/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/d10v/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/d10v/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "24d1aacb7d71a3c53c34f842bba80715e2150d8a",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2b10dc4be1dacd8651970074ba6a8f927663a660",
      "filename": "sim/erc32/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/erc32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/erc32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -635,9 +635,7 @@ sim_reserved_bits\n sim_default_model\n sim_scache\n sim_float\n-sim_endian\n sim_bitsize\n-sim_alignment\n cgen_breaks\n READLINE_CFLAGS\n READLINE\n@@ -10742,7 +10740,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10743 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10846,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10849 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11504,8 +11502,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "4f2c8c58715174519e7463993bb81314a49c6c33",
      "filename": "sim/example-synacor/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/example-synacor/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/example-synacor/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/example-synacor/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "57b1bee7cd9d167b31b4e49406c50a93478e6b77",
      "filename": "sim/example-synacor/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/example-synacor/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/example-synacor/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -84,6 +84,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "264d33e926c2b83ba25a5182d8371059be4186ce",
      "filename": "sim/frv/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* traps.c: Include sim/callback.h."
    },
    {
      "sha": "612939868c20b0127409b912cdf487a79b07c7aa",
      "filename": "sim/frv/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "a578200c5b9a4dea2f38855ceea3fbb6e1f636b2",
      "filename": "sim/frv/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n sim_trapdump\n cgen\n@@ -757,7 +756,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -772,7 +770,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_scache\n enable_sim_default_model\n enable_werror\n@@ -1419,8 +1416,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n@@ -10756,7 +10751,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10759 \"configure\"\n+#line 10754 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10862,7 +10857,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10865 \"configure\"\n+#line 10860 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11158,51 +11153,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11509,8 +11459,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "39d8de4a5b8e9fb06dd22bee154df279a14e6fbe",
      "filename": "sim/frv/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(fr500)\n SIM_AC_OPTION_WARNINGS(no)"
    },
    {
      "sha": "758e17a3fc5ae47c3a4b72c200ba5d23eb747a8e",
      "filename": "sim/frv/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/frv/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/frv/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -56,6 +56,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, bfd *abfd,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "bb7ea80d8f4578c404cb84d1a48de11bec0606d5",
      "filename": "sim/ft32/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/ft32/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/ft32/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/ft32/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "77ed8f8eb897969c37bb947998d420168e0b35fe",
      "filename": "sim/ft32/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ft32/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ft32/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -810,6 +810,7 @@ sim_open (SIM_OPEN_KIND kind,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "57ada187fb7eb9e8b4c2bd50e3d448a447bfcfef",
      "filename": "sim/h8300/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* compile.c (sim_open): Set current_target_byte_order.\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* compile.c: Include sim/callback.h."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/h8300/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "565eadfe3b144cb1b1aa8770f0af6e65699c60b7",
      "filename": "sim/h8300/compile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/compile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/compile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/compile.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4716,6 +4716,9 @@ sim_open (SIM_OPEN_KIND kind,\n \n   sd = sim_state_alloc_extra (kind, callback, sizeof (struct h8300_sim_state));\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/h8300/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/h8300/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/h8300/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/h8300/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "63797deb9eca9f4094e5adb4e89e82da7c2fe073",
      "filename": "sim/iq2000/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "612939868c20b0127409b912cdf487a79b07c7aa",
      "filename": "sim/iq2000/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "a6467398ff78875b91941b5e3ef68aef79a34780",
      "filename": "sim/iq2000/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n cgen\n cgendir\n@@ -756,7 +755,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -771,7 +769,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_scache\n enable_sim_default_model\n enable_werror\n@@ -1417,8 +1414,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n@@ -10753,7 +10748,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10756 \"configure\"\n+#line 10751 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10859,7 +10854,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10862 \"configure\"\n+#line 10857 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11155,51 +11150,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11488,8 +11438,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "4afa1b3501d8c70632e15b5cdab651c298b38cf5",
      "filename": "sim/iq2000/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(iq2000)\n SIM_AC_OPTION_WARNINGS(no)"
    },
    {
      "sha": "1129cee914579086978ba85eb76ab51382112e02",
      "filename": "sim/iq2000/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/iq2000/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/iq2000/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -62,6 +62,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "57cbf6502317e4edfe870ea3f95452d9d1668f64",
      "filename": "sim/lm32/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "612939868c20b0127409b912cdf487a79b07c7aa",
      "filename": "sim/lm32/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "6c1d03d51715429c06c7e9678f6de0bcb522ffa5",
      "filename": "sim/lm32/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n cgen\n cgendir\n@@ -756,7 +755,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -771,7 +769,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_scache\n enable_sim_default_model\n enable_werror\n@@ -1417,8 +1414,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n@@ -10753,7 +10748,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10756 \"configure\"\n+#line 10751 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10859,7 +10854,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10862 \"configure\"\n+#line 10857 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11155,51 +11150,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11488,8 +11438,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "06c655696420bc1210a1d73e8cc44ab330cdd7bb",
      "filename": "sim/lm32/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(lm32)\n SIM_AC_OPTION_WARNINGS(no)"
    },
    {
      "sha": "0142868834d52d2f4be0a2609f7805fd7166c32e",
      "filename": "sim/lm32/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/lm32/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/lm32/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -93,6 +93,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "18a2882e8588ed883d7e3f2ab06fbe0b630f35f5",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -635,9 +635,7 @@ sim_reserved_bits\n sim_default_model\n sim_scache\n sim_float\n-sim_endian\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -10739,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10742 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10845,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10848 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11363,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9ff4abc9b898fccb4efe6e503c43e1f22ec9bc28",
      "filename": "sim/m32r/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "612939868c20b0127409b912cdf487a79b07c7aa",
      "filename": "sim/m32r/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "1f12c92e04b8e8e45aa47ce4d2ae70eaa64f009f",
      "filename": "sim/m32r/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n sim_extra_cflags\n traps_obj\n@@ -758,7 +757,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model'\n ac_subst_files=''\n ac_user_opts='\n@@ -773,7 +771,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_scache\n enable_sim_default_model\n enable_werror\n@@ -1419,8 +1416,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n   --enable-sim-default-model=model\n@@ -10755,7 +10750,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10758 \"configure\"\n+#line 10753 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10861,7 +10856,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10864 \"configure\"\n+#line 10859 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11157,51 +11152,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_scache=\"16384\"\n # Check whether --enable-sim-scache was given.\n if test \"${enable_sim_scache+set}\" = set; then :\n@@ -11504,8 +11454,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9377081e938abeb7524e906473ceb888f5fb062d",
      "filename": "sim/m32r/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL(m32r/d)\n SIM_AC_OPTION_WARNINGS(no)"
    },
    {
      "sha": "3d8db0332fd6f3ae5c0b609982515cc7f42b70ff",
      "filename": "sim/m32r/sim-if.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m32r/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32r/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -56,6 +56,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "01467a06c163213d688740ce3631802a34877dbe",
      "filename": "sim/m4/sim_ac_option_endian.m4",
      "status": "modified",
      "additions": 12,
      "deletions": 43,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m4/sim_ac_option_endian.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m4/sim_ac_option_endian.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_option_endian.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -15,51 +15,20 @@ dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.\n dnl\n dnl --enable-sim-endian={yes,no,big,little} is for simulators\n dnl that support both big and little endian targets.\n-dnl arg[1] is hardwired target endianness.\n-dnl arg[2] is default target endianness.\n AC_DEFUN([SIM_AC_OPTION_ENDIAN],\n-[\n-wire_endian=\"[$1]\"\n-default_endian=\"[$2]\"\n+[dnl\n+AC_MSG_CHECKING([whether to force sim endianness])\n+sim_endian=\n AC_ARG_ENABLE(sim-endian,\n [AS_HELP_STRING([--enable-sim-endian=endian],\n \t\t[Specify target byte endian orientation])],\n [case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t AC_MSG_ERROR(\"Unknown value $enableval for --enable-sim-endian\"); sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi],\n-[if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi])dnl\n-])\n-AC_SUBST(sim_endian)\n+  b*|B*) sim_endian=\"BFD_ENDIAN_BIG\";;\n+  l*|L*) sim_endian=\"BFD_ENDIAN_LITTLE\";;\n+  yes | no) ;;\n+  *)\t AC_MSG_ERROR(\"Unknown value $enableval for --enable-sim-endian\");;\n+esac])dnl\n+AC_DEFINE_UNQUOTED([WITH_TARGET_BYTE_ORDER],\n+\t\t   [${sim_endian:-BFD_ENDIAN_UNKNOWN}], [Sim endian settings])\n+AC_MSG_RESULT([${sim_alignment:-no}])\n+])dnl"
    },
    {
      "sha": "db6c3ffbbfe98cad0fe61bb4e4aa145317b14f93",
      "filename": "sim/m4/sim_ac_output.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m4/sim_ac_output.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m4/sim_ac_output.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m4/sim_ac_output.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -48,9 +48,7 @@ AC_CONFIG_COMMANDS([stamp-h], [echo > stamp-h])\n dnl These are unfortunate.  They are conditionally called by other sim macros\n dnl but always used by common/Make-common.in.  So we have to subst here even\n dnl when the rest of the code is in the respective macros.\n-AC_SUBST(sim_alignment)\n AC_SUBST(sim_bitsize)\n-AC_SUBST(sim_endian)\n AC_SUBST(sim_float)\n AC_SUBST(sim_scache)\n AC_SUBST(sim_default_model)"
    },
    {
      "sha": "3b87798225f14b2a30e3272e06bd2a4f251a700c",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* sim-main.h: Delete sim/callback.h include."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/m68hc11/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "1ed8c04f089174a2723562d003245587ada7289c",
      "filename": "sim/m68hc11/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 55,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_hardware\n enable_werror\n enable_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-hardware=LIST\n                           Specify the hardware to be included in the build.\n   --enable-werror         treat compile warnings as errors\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,51 +11139,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n hardware=\"cfi core pal glue \\\n   m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram\"\n sim_hw_cflags=\"-DWITH_HW=1\"\n@@ -11413,8 +11363,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "986d8addfd866e07edfc0db2caa34f67c1ca9c88",
      "filename": "sim/m68hc11/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -5,7 +5,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n SIM_AC_COMMON\n \n dnl Options available in this module\n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_HARDWARE(\\\n   m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram)\n "
    },
    {
      "sha": "7d28f40d71dd811a73e1bc4f5356d0fda614d073",
      "filename": "sim/m68hc11/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/m68hc11/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -406,6 +406,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n \n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "cf7d270e6ad0b078075195a1c7527bd2caf7fae6",
      "filename": "sim/mcore/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/mcore/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/mcore/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/mcore/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mcore/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mcore/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "5d0224b36ce40a39dba40f1b9b4555fd5eebf637",
      "filename": "sim/microblaze/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/microblaze/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/microblaze/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "08bf6ff8acbc03a0be8087aa8afe9a7851974400",
      "filename": "sim/microblaze/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/microblaze/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/microblaze/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,6 +4,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "05d6461676452e5d854f7dffadcfd4c5d5132350",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* interp.c (dotrace): Make comment const."
    },
    {
      "sha": "cd86d4d77051bb841f7675e836f0d9f8710633fa",
      "filename": "sim/mips/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -111,7 +111,6 @@ m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_float.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])"
    },
    {
      "sha": "55041fdffadba763e9fe2abf7883909f3844d162",
      "filename": "sim/mips/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 72,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -633,7 +633,6 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_default_model\n sim_scache\n-sim_alignment\n cgen_breaks\n XMKMF\n sim_multi_obj\n@@ -764,7 +763,6 @@ sim_hw\n sim_hw_objs\n sim_hw_cflags\n sim_float\n-sim_endian\n sim_bitsize'\n ac_subst_files=''\n ac_user_opts='\n@@ -783,7 +781,6 @@ enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n enable_sim_reserved_bits\n-enable_sim_endian\n enable_sim_bitsize\n enable_sim_float\n enable_sim_hardware\n@@ -1439,8 +1436,6 @@ Optional Features:\n   --enable-sim-reserved-bits\n                           Specify whether to check reserved bits in\n                           instruction\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n   --enable-sim-float      Specify that the target processor has floating point\n                           hardware\n@@ -10770,7 +10765,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10773 \"configure\"\n+#line 10768 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10876,7 +10871,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10879 \"configure\"\n+#line 10874 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11304,69 +11299,6 @@ esac\n \n \n \n-#\n-# Select the byte order of the target\n-#\n-mips_endian=\n-default_endian=\n-case \"${target}\" in\n-  mips64el*-*-*)        mips_endian=LITTLE ;;\n-  mips64vr*el-*-*)      default_endian=LITTLE ;;\n-  mips64*-*-*)          default_endian=BIG ;;\n-  mips16*-*-*)          default_endian=BIG ;;\n-  mipsisa32*-*-*)       default_endian=BIG ;;\n-  mipsisa64*-*-*)       default_endian=BIG ;;\n-  mips*-*-*)            default_endian=BIG ;;\n-  *)                    default_endian=BIG ;;\n-esac\n-\n-wire_endian=\"$mips_endian\"\n-default_endian=\"$default_endian\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n-\n #\n # Select the bitsize of the target\n #\n@@ -12195,8 +12127,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "03d8f5169e767e6da51d74b242cd0e5c176f630c",
      "filename": "sim/mips/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mips/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -27,25 +27,6 @@ AC_SUBST(SIM_SUBTARGET)\n \n \n \n-#\n-# Select the byte order of the target\n-#\n-mips_endian=\n-default_endian=\n-case \"${target}\" in\n-  mips64el*-*-*)        mips_endian=LITTLE ;;\n-  mips64vr*el-*-*)      default_endian=LITTLE ;;\n-  mips64*-*-*)          default_endian=BIG ;;\n-  mips16*-*-*)          default_endian=BIG ;;\n-  mipsisa32*-*-*)       default_endian=BIG ;;\n-  mipsisa64*-*-*)       default_endian=BIG ;;\n-  mips*-*-*)            default_endian=BIG ;;\n-  *)                    default_endian=BIG ;;\n-esac\n-SIM_AC_OPTION_ENDIAN($mips_endian,$default_endian)\n-\n-\n-\n #\n # Select the bitsize of the target\n #"
    },
    {
      "sha": "6f6dceda0530cbc6d1900f4e3d959db0eda509ea",
      "filename": "sim/mn10300/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* mn10300_sim.h (u642dw, dw2u64): Change INLINE to INLINE2."
    },
    {
      "sha": "61a92c9578aa28d09f542807a5cd5fa55288d3e2",
      "filename": "sim/mn10300/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -111,7 +111,6 @@ m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_reserved_bits.m4])"
    },
    {
      "sha": "d24ac1df39e565f5d5486dee72118bb523bcf898",
      "filename": "sim/mn10300/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_default_model\n sim_scache\n sim_float\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,7 +752,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_bitsize'\n ac_subst_files=''\n ac_user_opts='\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_reserved_bits\n enable_sim_bitsize\n enable_sim_hardware\n@@ -1413,8 +1410,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-reserved-bits\n                           Specify whether to check reserved bits in\n                           instruction\n@@ -10748,7 +10743,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10751 \"configure\"\n+#line 10746 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10854,7 +10849,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10857 \"configure\"\n+#line 10852 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11150,51 +11145,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_reserved_bits=\"1\"\n # Check whether --enable-sim-reserved-bits was given.\n if test \"${enable_sim_reserved_bits+set}\" = set; then :\n@@ -11493,8 +11443,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "1083c062df68c4d6c923316cbfc895a8d2b38ced",
      "filename": "sim/mn10300/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_RESERVED_BITS\n SIM_AC_OPTION_BITSIZE(32,31)\n SIM_AC_OPTION_HARDWARE(mn103cpu mn103int mn103tim mn103ser mn103iop)"
    },
    {
      "sha": "b793d3c019feecec143e52a83a563ec5dc3b23d4",
      "filename": "sim/mn10300/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/mn10300/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mn10300/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -94,6 +94,9 @@ sim_open (SIM_OPEN_KIND kind,\n \n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     return 0;"
    },
    {
      "sha": "a0f5ccc29889b12cefa94dbc421ddc3f7a18ba1c",
      "filename": "sim/moxie/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/moxie/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "26ccbb3d01e04bfe49da2dfa03d056d8fcdffdc6",
      "filename": "sim/moxie/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n DTC\n MAINT\n@@ -754,8 +753,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -769,7 +767,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1412,8 +1409,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10743,7 +10738,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10746 \"configure\"\n+#line 10741 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10849,7 +10844,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10852 \"configure\"\n+#line 10847 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11238,52 +11233,6 @@ fi\n \n \n \n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11506,8 +11455,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "c7475b799a6f9596b012a3b1e5f0f6d1a84d7f4b",
      "filename": "sim/moxie/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -6,6 +6,4 @@ SIM_AC_COMMON\n \n AC_CHECK_TOOL(DTC, dtc)\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "c70215f8c7a4066e9083ce6b3d6d354a57af3af5",
      "filename": "sim/moxie/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/moxie/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/moxie/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1198,6 +1198,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n   SIM_DESC sd = sim_state_alloc (kind, cb);\n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "a78d476516c9d74a7aa0a60574caffa4c6f2d3df",
      "filename": "sim/msp430/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* msp430-sim.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/msp430/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/msp430/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "4f2c0ace70bbdd18f771374149d0926c4a60367a",
      "filename": "sim/msp430/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -23,6 +23,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "ed0393317c1b03fca37aa2d465e62ded701c0445",
      "filename": "sim/msp430/msp430-sim.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/msp430-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/msp430/msp430-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/msp430/msp430-sim.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,6 +112,9 @@ sim_open (SIM_OPEN_KIND kind,\n \n   /* Initialise the simulator.  */\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {\n       sim_state_free (sd);"
    },
    {
      "sha": "4140fd6e6a5552b4f31f5f68e1a599bb36e31f81",
      "filename": "sim/or1k/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* sim-if.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "d3a56933952162c0036c336bdeccc5371c465d59",
      "filename": "sim/or1k/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -113,7 +113,6 @@ m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n m4_include([../m4/sim_ac_option_cgen_maint.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_scache.m4])"
    },
    {
      "sha": "d73662434ab0a0f1077c898e3fe0069ee8fc0061",
      "filename": "sim/or1k/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -633,7 +633,6 @@ ac_subst_vars='LTLIBOBJS\n LIBOBJS\n sim_reserved_bits\n sim_float\n-sim_alignment\n cgen_breaks\n cgen\n cgendir\n@@ -755,7 +754,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -771,7 +769,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_bitsize\n enable_sim_scache\n enable_sim_default_model\n@@ -1418,8 +1415,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n   --enable-sim-scache=size\n                           Specify simulator execution cache size\n@@ -10755,7 +10750,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10758 \"configure\"\n+#line 10753 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10861,7 +10856,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10864 \"configure\"\n+#line 10859 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11156,51 +11151,6 @@ fi\n \n \n \n-\n-wire_endian=\"BIG\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n wire_word_bitsize=\"32\"\n wire_word_msb=\"31\"\n wire_address_bitsize=\"32\"\n@@ -11549,8 +11499,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "ed8538eb10894971ea4aab5b596029bb58f2b2cd",
      "filename": "sim/or1k/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_BITSIZE([32], [31], [32])\n SIM_AC_OPTION_SCACHE(16384)\n SIM_AC_OPTION_DEFAULT_MODEL([or1200])"
    },
    {
      "sha": "06d7dcb61b238a0b47ea1ccad22c095e3d58ef74",
      "filename": "sim/or1k/sim-if.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/or1k/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/or1k/sim-if.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -160,6 +160,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n   char c;\n   int i;\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_BIG;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "fc3f62f0bc3c887b9c076fc414bf72fb843dbc27",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (ENDIAN_CFLAGS): Delete.\n+\t* configure.ac: Delete sim-endian.\n+\t* configure: Regenerate.\n+\n 2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n \n \t* igen.c (gen_semantics_h): Rename PAGE_SIZE to MPC860C0_PAGE_SIZE."
    },
    {
      "sha": "4446922dede3b2ed4532611818e0a2fb9dc1af6b",
      "filename": "sim/ppc/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/Makefile.in?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -72,7 +72,6 @@ MAKEINFO = makeinfo\n RANLIB = @RANLIB@\n \n INLINE_CFLAGS = @sim_inline@\n-ENDIAN_CFLAGS = @sim_endian@\n SMP_CFLAGS = @sim_smp@\n XOR_ENDIAN_CFLAGS = @sim_xor_endian@\n BITSIZE_CFLAGS = @sim_bitsize@\n@@ -86,7 +85,6 @@ TERMIO_CFLAGS = @sim_termio@\n WARNING_CFLAGS = @sim_warnings@\n DEVZERO_CFLAGS = @sim_devzero@\n CONFIG_CFLAGS = \\\n-  $(ENDIAN_CFLAGS) \\\n   $(SMP_CFLAGS) \\\n   $(XOR_ENDIAN_CFLAGS) \\\n   $(BITSIZE_CFLAGS) \\"
    },
    {
      "sha": "930b24a1b5b831b3e739966ecf058178239ad878",
      "filename": "sim/ppc/configure",
      "status": "modified",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -639,7 +639,6 @@ sim_bitsize\n sim_igen_smp\n sim_smp\n sim_xor_endian\n-sim_endian\n sim_inline\n sim_pk_obj\n sim_pk_src\n@@ -745,7 +744,6 @@ enable_sim_config\n enable_sim_decode_mechanism\n enable_sim_default_model\n enable_sim_duplicate\n-enable_sim_endian\n enable_sim_filter\n enable_sim_float\n enable_sim_hardware\n@@ -1400,7 +1398,6 @@ Optional Features:\n   --enable-sim-decode-mechanism=which\t\tSpecify the instruction decode mechanism.\n   --enable-sim-default-model=which\tSpecify default PowerPC to model.\n   --enable-sim-duplicate\t\tExpand (duplicate) semantic functions.\n-  --enable-sim-endian=endian\t\tSpecify target byte endian orientation.\n   --enable-sim-filter=rule\t\tSpecify filter rules.\n   --enable-sim-float\t\t\tSpecify whether the target has hard, soft, altivec or e500 floating point.\n   --enable-sim-hardware=list\t\tSpecify the hardware to be included in the build.\n@@ -3201,27 +3198,6 @@ fi\n fi\n \n \n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  yes)\tcase \"$target\" in\n-\t  *powerpc-*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-\t  *powerpcle-*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-\t  *) echo \"Unknown target $target\" 1>&6; sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\";;\n-\tesac;;\n-  no)\t sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\";;\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  sim_endian=\"\"\n-fi\n-\n-\n # Check whether --enable-sim-filter was given.\n if test \"${enable_sim_filter+set}\" = set; then :\n   enableval=$enable_sim_filter; case \"${enableval}\" in\n@@ -4880,7 +4856,6 @@ fi\n \n \n \n-\n \n \n ac_config_files=\"$ac_config_files Makefile\""
    },
    {
      "sha": "9d294ae414aa03ad6da1423303127c8597fec859",
      "filename": "sim/ppc/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/ppc/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -93,24 +93,6 @@ if test x\"$silent\" != x\"yes\"; then\n fi])dnl\n \n \n-AC_ARG_ENABLE(sim-endian,\n-[  --enable-sim-endian=endian\t\tSpecify target byte endian orientation.],\n-[case \"${enableval}\" in\n-  yes)\tcase \"$target\" in\n-\t  *powerpc-*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-\t  *powerpcle-*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-\t  *) echo \"Unknown target $target\" 1>&6; sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\";;\n-\tesac;;\n-  no)\t sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\";;\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  *)\t AC_MSG_ERROR(\"Unknown value $enableval for --enable-sim-endian\"); sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi],[sim_endian=\"\"])dnl\n-\n-\n AC_ARG_ENABLE(sim-filter,\n [  --enable-sim-filter=rule\t\tSpecify filter rules.],\n [case \"${enableval}\" in\n@@ -758,7 +740,6 @@ AC_SUBST(sim_hw_obj)\n AC_SUBST(sim_pk_src)\n AC_SUBST(sim_pk_obj)\n AC_SUBST(sim_inline)\n-AC_SUBST(sim_endian)\n AC_SUBST(sim_xor_endian)\n AC_SUBST(sim_smp)\n AC_SUBST(sim_igen_smp)"
    },
    {
      "sha": "81033cf2e0a961d207f165ff642033d541579edb",
      "filename": "sim/pru/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/pru/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/pru/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 56,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,52 +11139,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11412,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "8e9577c9ea2574f0f7fbe31d96bc1002913b149c",
      "filename": "sim/pru/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -23,6 +23,4 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n SIM_AC_OUTPUT"
    },
    {
      "sha": "09045dc4cb0afb9b9e2ae19727b9a1d29863a597",
      "filename": "sim/pru/interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/pru/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/pru/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -747,6 +747,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \n   /* Set default options before parsing user options.  */\n   current_alignment = STRICT_ALIGNMENT;\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n \n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)"
    },
    {
      "sha": "5c7973f5f95f6caaa99cd9d3934e65a95856c3ca",
      "filename": "sim/riscv/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "5aa36404058161a9fcef26845108478abf735433",
      "filename": "sim/riscv/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -112,7 +112,6 @@ m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n m4_include([../m4/sim_ac_option_default_model.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "cdbedcceabc3111d02bfa8f618d8723139b3d1ec",
      "filename": "sim/riscv/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 55,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_reserved_bits\n sim_scache\n sim_float\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -752,7 +751,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_default_model\n sim_bitsize'\n ac_subst_files=''\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_default_model\n enable_sim_bitsize\n enable_werror\n@@ -1413,8 +1410,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-default-model=model\n                           Specify default model to simulate\n   --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n@@ -10747,7 +10742,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10750 \"configure\"\n+#line 10745 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10853,7 +10848,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10856 \"configure\"\n+#line 10851 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11148,52 +11143,6 @@ fi\n \n \n \n-\n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n # Select the default model for the target.\n riscv_model=\n case \"${target}\" in\n@@ -11506,8 +11455,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "e866c8f8f4a0de833a9bf830a0b4bd15a83f446a",
      "filename": "sim/riscv/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,8 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n-\n # Select the default model for the target.\n riscv_model=\n case \"${target}\" in"
    },
    {
      "sha": "8b96677634f9e4d83226f7ce8421fa5a5831f42c",
      "filename": "sim/riscv/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/riscv/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/riscv/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -62,6 +62,9 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback,\n   SIM_DESC sd = sim_state_alloc_extra (kind, callback,\n \t\t\t\t       sizeof (struct riscv_sim_state));\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     {"
    },
    {
      "sha": "a2e2cfbd51a7153fa0ad14bbbc364fc80b8dc15f",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "2c8a6e0abab41163a65cb93bf185b470996d64a2",
      "filename": "sim/rl78/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rl78/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rl78/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -635,9 +635,7 @@ sim_reserved_bits\n sim_default_model\n sim_scache\n sim_float\n-sim_endian\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -10739,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10742 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10845,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10848 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11363,8 +11361,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "0b3cbc6efc712ca1ba6c737b726ad711e6f3b6aa",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "7200bcb42c483b770a06ef1e17bb6aed6d389fc2",
      "filename": "sim/rx/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rx/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/rx/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -635,9 +635,7 @@ sim_reserved_bits\n sim_default_model\n sim_scache\n sim_float\n-sim_endian\n sim_bitsize\n-sim_alignment\n cgen_breaks\n sim_cycle_accurate_flags\n MAINT\n@@ -10743,7 +10741,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10746 \"configure\"\n+#line 10744 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10849,7 +10847,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10852 \"configure\"\n+#line 10850 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11383,8 +11381,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "950fe1a3f70e11360eadc3eaf4ffa0b2615f6558",
      "filename": "sim/sh/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,8 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "f5eee940afc41de22614fb272620924e576d41a7",
      "filename": "sim/sh/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -110,7 +110,6 @@ m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_warnings.m4])"
    },
    {
      "sha": "661ad09e3cebb69d01875f35219e6f5fdf77a9c8",
      "filename": "sim/sh/configure",
      "status": "modified",
      "additions": 3,
      "deletions": 55,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -636,7 +636,6 @@ sim_default_model\n sim_scache\n sim_float\n sim_bitsize\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,8 +752,7 @@ WARN_CFLAGS\n sim_inline\n sim_hw\n sim_hw_objs\n-sim_hw_cflags\n-sim_endian'\n+sim_hw_cflags'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n@@ -1411,8 +1408,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n@@ -10742,7 +10737,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10745 \"configure\"\n+#line 10740 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10848,7 +10843,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10851 \"configure\"\n+#line 10846 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11144,51 +11139,6 @@ fi\n \n \n \n-wire_endian=\"\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11409,8 +11359,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "9bf4a4099ee5c3338ee46e7f61074920e4c7c00b",
      "filename": "sim/sh/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/sh/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/sh/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN\n SIM_AC_OPTION_WARNINGS(no)\n \n SIM_AC_OUTPUT"
    },
    {
      "sha": "2af2fc25dfc80c8400e6c18c0af9aab6c9764755",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-17  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Delete SIM_AC_OPTION_ENDIAN call.\n+\t* interp.c (sim_open): Set current_target_byte_order.\n+\t* aclocal.m4, configure: Regenerate.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "61a92c9578aa28d09f542807a5cd5fa55288d3e2",
      "filename": "sim/v850/aclocal.m4",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/aclocal.m4?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -111,7 +111,6 @@ m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n m4_include([../m4/sim_ac_common.m4])\n m4_include([../m4/sim_ac_option_bitsize.m4])\n-m4_include([../m4/sim_ac_option_endian.m4])\n m4_include([../m4/sim_ac_option_hardware.m4])\n m4_include([../m4/sim_ac_option_inline.m4])\n m4_include([../m4/sim_ac_option_reserved_bits.m4])"
    },
    {
      "sha": "9f83ff1c2a22e2f6802e104e074a0eacb5d90d0c",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 54,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -634,7 +634,6 @@ LIBOBJS\n sim_default_model\n sim_scache\n sim_float\n-sim_alignment\n cgen_breaks\n MAINT\n MAINTAINER_MODE_FALSE\n@@ -753,7 +752,6 @@ sim_inline\n sim_hw\n sim_hw_objs\n sim_hw_cflags\n-sim_endian\n sim_bitsize'\n ac_subst_files=''\n ac_user_opts='\n@@ -768,7 +766,6 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_sim_inline\n-enable_sim_endian\n enable_sim_reserved_bits\n enable_sim_bitsize\n enable_werror\n@@ -1413,8 +1410,6 @@ Optional Features:\n                           sometimes confusing) to the casual installer\n   --enable-sim-inline=inlines\n                           Specify which functions should be inlined\n-  --enable-sim-endian=endian\n-                          Specify target byte endian orientation\n   --enable-sim-reserved-bits\n                           Specify whether to check reserved bits in\n                           instruction\n@@ -10748,7 +10743,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10751 \"configure\"\n+#line 10746 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10854,7 +10849,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10857 \"configure\"\n+#line 10852 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11150,51 +11145,6 @@ fi\n \n \n \n-wire_endian=\"LITTLE\"\n-default_endian=\"\"\n-# Check whether --enable-sim-endian was given.\n-if test \"${enable_sim_endian+set}\" = set; then :\n-  enableval=$enable_sim_endian; case \"${enableval}\" in\n-  b*|B*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_BIG\";;\n-  l*|L*) sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_LITTLE\";;\n-  yes)\t if test x\"$wire_endian\" != x; then\n-\t   sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t else\n-\t  if test x\"$default_endian\" != x; then\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t   else\n-\t     echo \"No hard-wired endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  no)\t if test x\"$default_endian\" != x; then\n-\t   sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-\t else\n-\t   if test x\"$wire_endian\" != x; then\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-\t   else\n-\t     echo \"No default endian for target $target\" 1>&6\n-\t     sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_UNKNOWN\"\n-\t   fi\n-\t fi;;\n-  *)\t as_fn_error $? \"\\\"Unknown value $enableval for --enable-sim-endian\\\"\" \"$LINENO\" 5; sim_endian=\"\";;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$sim_endian\" != x\"\"; then\n-  echo \"Setting endian flags = $sim_endian\" 6>&1\n-fi\n-else\n-  if test x\"$default_endian\" != x; then\n-  sim_endian=\"-DWITH_DEFAULT_TARGET_BYTE_ORDER=BFD_ENDIAN_${default_endian}\"\n-else\n-  if test x\"$wire_endian\" != x; then\n-    sim_endian=\"-DWITH_TARGET_BYTE_ORDER=BFD_ENDIAN_${wire_endian}\"\n-  else\n-    sim_endian=\n-  fi\n-fi\n-fi\n-\n-\n default_sim_reserved_bits=\"1\"\n # Check whether --enable-sim-reserved-bits was given.\n if test \"${enable_sim_reserved_bits+set}\" = set; then :\n@@ -11493,8 +11443,6 @@ ac_config_commands=\"$ac_config_commands stamp-h\"\n \n \n \n-\n-\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"
    },
    {
      "sha": "c3cd64627c0afb2d23fb8f324c9ca3fafe6a14e5",
      "filename": "sim/v850/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure.ac?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -4,7 +4,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_RESERVED_BITS\n SIM_AC_OPTION_BITSIZE(32,31)\n "
    },
    {
      "sha": "92c80a814c69b7d72e8eb8e0b4929b0ae41705e9",
      "filename": "sim/v850/interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a4d54332f9e1f75701ba43249a03cc631ec736/sim/v850/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/interp.c?ref=f9a4d54332f9e1f75701ba43249a03cc631ec736",
      "patch": "@@ -197,6 +197,9 @@ sim_open (SIM_OPEN_KIND    kind,\n \n   SIM_ASSERT (STATE_MAGIC (sd) == SIM_MAGIC_NUMBER);\n \n+  /* Set default options before parsing user options.  */\n+  current_target_byte_order = BFD_ENDIAN_LITTLE;\n+\n   /* The cpu data is kept in a separately allocated chunk of memory.  */\n   if (sim_cpu_alloc_all (sd, 1) != SIM_RC_OK)\n     return 0;"
    }
  ]
}