{
  "sha": "698c974ffc97f845f65d2e93d31bdbb1b24d6caf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njk4Yzk3NGZmYzk3Zjg0NWY2NWQyZTkzZDMxYmRiYjFiMjRkNmNhZg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-08-27T14:38:53Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-08-27T14:38:53Z"
    },
    "message": "[gdb/testsuite] Add label option to proc cu\n\nWe can use current dwarf assembly infrastructure to declare a label that marks\nthe start of the CU header:\n...\n  declare_labels header_start_cu_a\n  _section \".debug_info\"\n  header_start_cu_a : cu {} {\n  }\n  _section \".debug_info\"\n  header_start_cu_b : cu {} {\n  }\n...\non the condition that we switch to the .debug_info section before, which makes\nthis style of use fragile.\n\nAnother way to achieve the same is to use the label as generated by the cu\nproc itself:\n...\n  variable _cu_label\n  cu {} {\n  }\n  set header_start_cu_a $_cu_label\n  cu {} {\n  }\n  set header_start_cu_b $_cu_label\n...\nbut again that seems fragile given that adding a new CU inbetween will\nsilently result in the wrong value for the label.\n\nAdd a label option to proc cu such that we can simply do:\n...\n  cu { label header_start_cu_a } {\n  }\n  cu { label header_start_cu_b } {\n  }\n...\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "89f00383fa6bd96cc6a2ba1a1a541a9a4b8a7371",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89f00383fa6bd96cc6a2ba1a1a541a9a4b8a7371"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/698c974ffc97f845f65d2e93d31bdbb1b24d6caf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/698c974ffc97f845f65d2e93d31bdbb1b24d6caf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/698c974ffc97f845f65d2e93d31bdbb1b24d6caf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/698c974ffc97f845f65d2e93d31bdbb1b24d6caf/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "77d63f99d67dd89cbcc99e9013dc0fc02930e026",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77d63f99d67dd89cbcc99e9013dc0fc02930e026",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/77d63f99d67dd89cbcc99e9013dc0fc02930e026"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 11,
    "deletions": 0
  },
  "files": [
    {
      "sha": "3aef58e8560c87bd70b63e7acfde60f539d3dd3f",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/698c974ffc97f845f65d2e93d31bdbb1b24d6caf/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/698c974ffc97f845f65d2e93d31bdbb1b24d6caf/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=698c974ffc97f845f65d2e93d31bdbb1b24d6caf",
      "patch": "@@ -1258,6 +1258,10 @@ namespace eval Dwarf {\n     #                default = default\n     # fission 0|1  - boolean indicating if generating Fission debug info\n     #                default = 0\n+    # label <label>\n+    #              - string indicating label to be defined at the start\n+    #                of the CU header.\n+    #                default = \"\"\n     # BODY is Tcl code that emits the DIEs which make up the body of\n     # the CU.  It is evaluated in the caller's context.\n     proc cu {options body} {\n@@ -1278,6 +1282,7 @@ namespace eval Dwarf {\n \tset _cu_is_fission 0\n \tset section \".debug_info\"\n \tset _abbrev_section \".debug_abbrev\"\n+\tset label \"\"\n \n \tforeach { name value } $options {\n \t    set value [uplevel 1 \"subst \\\"$value\\\"\"]\n@@ -1286,6 +1291,7 @@ namespace eval Dwarf {\n \t\tversion { set _cu_version $value }\n \t\taddr_size { set _cu_addr_size $value }\n \t\tfission { set _cu_is_fission $value }\n+\t\tlabel { set label $value }\n \t\tdefault { error \"unknown option $name\" }\n \t    }\n \t}\n@@ -1318,6 +1324,11 @@ namespace eval Dwarf {\n \tset start_label [_compute_label \"cu${cu_num}_start\"]\n \tset end_label [_compute_label \"cu${cu_num}_end\"]\n \n+\tif { $label != \"\" } {\n+\t    upvar $label my_label\n+\t    set my_label $_cu_label\n+\t}\n+\n \tdefine_label $_cu_label\n \tif {$is_64} {\n \t    _op .4byte 0xffffffff"
    }
  ]
}