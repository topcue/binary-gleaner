{
  "sha": "54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTRkODNiOGQzOTIwZWVhNGEwZDU0NWYxZmY3YWMyOTIzZDkzOGU2Yw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-21T02:41:20Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-21T02:54:06Z"
    },
    "message": "Make unlink_objfile and put_objfile_before static\n\nI noticed an obsolete comment just before unlink_objfile, and then I\nnoticed that both unlink_objfile and put_objfile_before could be\nstatic.  This patch makes these changes, and also moves unlink_objfile\nearlier, so that a forward declaration is not needed.\n\nTested by rebuilding.\n\ngdb/ChangeLog\n2019-10-20  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.h (unlink_objfile, put_objfile_before): Don't declare.\n\t* objfiles.c (unlink_objfile): Move earlier.  Now static.  Remove\n\tobsolete comment.\n\t(put_objfile_before): Now static.\n\nChange-Id: I1b5927a60fd1cc59bfc9c6761f61652a01ef13e0",
    "tree": {
      "sha": "94a1661b2ea78234fb1d6cbe864da97ccda49ac9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/94a1661b2ea78234fb1d6cbe864da97ccda49ac9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fd65fe1a180695a3500135bac6d5ed6a70b874de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fd65fe1a180695a3500135bac6d5ed6a70b874de",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fd65fe1a180695a3500135bac6d5ed6a70b874de"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 29,
    "deletions": 37
  },
  "files": [
    {
      "sha": "67de8488e19aeec4cae997d4d28db0cf86258dbf",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
      "patch": "@@ -1,3 +1,10 @@\n+2019-10-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.h (unlink_objfile, put_objfile_before): Don't declare.\n+\t* objfiles.c (unlink_objfile): Move earlier.  Now static.  Remove\n+\tobsolete comment.\n+\t(put_objfile_before): Now static.\n+\n 2019-10-19  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdbsupport/common-utils.h (startswith): Change return type to"
    },
    {
      "sha": "fd1cbf764d67029b98fa6510fcee4b861c9ce2a4",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 22,
      "deletions": 33,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
      "patch": "@@ -473,10 +473,31 @@ separate_debug_iterator::operator++ ()\n   return *this;\n }\n \n+/* Unlink OBJFILE from the list of known objfiles.  */\n+\n+static void\n+unlink_objfile (struct objfile *objfile)\n+{\n+  struct objfile **objpp;\n+\n+  for (objpp = &object_files; *objpp != NULL; objpp = &((*objpp)->next))\n+    {\n+      if (*objpp == objfile)\n+\t{\n+\t  *objpp = (*objpp)->next;\n+\t  objfile->next = NULL;\n+\t  return;\n+\t}\n+    }\n+\n+  internal_error (__FILE__, __LINE__,\n+\t\t  _(\"unlink_objfile: objfile already unlinked\"));\n+}\n+\n /* Put one object file before a specified on in the global list.\n    This can be used to make sure an object file is destroyed before\n    another when using objfiles_safe to free all objfiles.  */\n-void\n+static void\n put_objfile_before (struct objfile *objfile, struct objfile *before_this)\n {\n   struct objfile **objp;\n@@ -497,38 +518,6 @@ put_objfile_before (struct objfile *objfile, struct objfile *before_this)\n \t\t  _(\"put_objfile_before: before objfile not in list\"));\n }\n \n-/* Unlink OBJFILE from the list of known objfiles, if it is found in the\n-   list.\n-\n-   It is not a bug, or error, to call this function if OBJFILE is not known\n-   to be in the current list.  This is done in the case of mapped objfiles,\n-   for example, just to ensure that the mapped objfile doesn't appear twice\n-   in the list.  Since the list is threaded, linking in a mapped objfile\n-   twice would create a circular list.\n-\n-   If OBJFILE turns out to be in the list, we zap it's NEXT pointer after\n-   unlinking it, just to ensure that we have completely severed any linkages\n-   between the OBJFILE and the list.  */\n-\n-void\n-unlink_objfile (struct objfile *objfile)\n-{\n-  struct objfile **objpp;\n-\n-  for (objpp = &object_files; *objpp != NULL; objpp = &((*objpp)->next))\n-    {\n-      if (*objpp == objfile)\n-\t{\n-\t  *objpp = (*objpp)->next;\n-\t  objfile->next = NULL;\n-\t  return;\n-\t}\n-    }\n-\n-  internal_error (__FILE__, __LINE__,\n-\t\t  _(\"unlink_objfile: objfile already unlinked\"));\n-}\n-\n /* Add OBJFILE as a separate debug objfile of PARENT.  */\n \n void"
    },
    {
      "sha": "aa8e32081e927496282cc00d6d18de660b87e537",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/54d83b8d3920eea4a0d545f1ff7ac2923d938e6c/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=54d83b8d3920eea4a0d545f1ff7ac2923d938e6c",
      "patch": "@@ -637,12 +637,8 @@ extern CORE_ADDR entry_point_address (void);\n \n extern void build_objfile_section_table (struct objfile *);\n \n-extern void put_objfile_before (struct objfile *, struct objfile *);\n-\n extern void add_separate_debug_objfile (struct objfile *, struct objfile *);\n \n-extern void unlink_objfile (struct objfile *);\n-\n extern void free_objfile_separate_debug (struct objfile *);\n \n extern void free_all_objfiles (void);"
    }
  ]
}