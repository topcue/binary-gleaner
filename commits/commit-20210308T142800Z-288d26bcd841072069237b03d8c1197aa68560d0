{
  "sha": "288d26bcd841072069237b03d8c1197aa68560d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjg4ZDI2YmNkODQxMDcyMDY5MjM3YjAzZDhjMTE5N2FhNjg1NjBkMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:00Z"
    },
    "message": "Split out eval_op_subscript\n\nThis splits BINOP_SUBSCRIPT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_subscript): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "9f54b446ad3a89ea376a641963e721f56e4554b1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9f54b446ad3a89ea376a641963e721f56e4554b1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/288d26bcd841072069237b03d8c1197aa68560d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/288d26bcd841072069237b03d8c1197aa68560d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/288d26bcd841072069237b03d8c1197aa68560d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/288d26bcd841072069237b03d8c1197aa68560d0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7cdcdd02b38fde4c2bab83c70b65e81cb879f6d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cdcdd02b38fde4c2bab83c70b65e81cb879f6d7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7cdcdd02b38fde4c2bab83c70b65e81cb879f6d7"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 42,
    "deletions": 26
  },
  "files": [
    {
      "sha": "dfbf126fab7710582f1b698e02a313cb872e225c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/288d26bcd841072069237b03d8c1197aa68560d0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/288d26bcd841072069237b03d8c1197aa68560d0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=288d26bcd841072069237b03d8c1197aa68560d0",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_subscript): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_binary): New function."
    },
    {
      "sha": "9ac3f39274912d539739b30e6e60bbb662aba6b4",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 37,
      "deletions": 26,
      "changes": 63,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/288d26bcd841072069237b03d8c1197aa68560d0/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/288d26bcd841072069237b03d8c1197aa68560d0/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=288d26bcd841072069237b03d8c1197aa68560d0",
      "patch": "@@ -1555,6 +1555,42 @@ eval_op_binary (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for BINOP_SUBSCRIPT.  */\n+\n+static struct value *\n+eval_op_subscript (struct type *expect_type, struct expression *exp,\n+\t\t   enum noside noside, enum exp_opcode op,\n+\t\t   struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  if (binop_user_defined_p (op, arg1, arg2))\n+    return value_x_binop (arg1, arg2, op, OP_NULL, noside);\n+  else\n+    {\n+      /* If the user attempts to subscript something that is not an\n+\t array or pointer type (like a plain int variable for example),\n+\t then report this as an error.  */\n+\n+      arg1 = coerce_ref (arg1);\n+      struct type *type = check_typedef (value_type (arg1));\n+      if (type->code () != TYPE_CODE_ARRAY\n+\t  && type->code () != TYPE_CODE_PTR)\n+\t{\n+\t  if (type->name ())\n+\t    error (_(\"cannot subscript something of type `%s'\"),\n+\t\t   type->name ());\n+\t  else\n+\t    error (_(\"cannot subscript requested type\"));\n+\t}\n+\n+      if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+\treturn value_zero (TYPE_TARGET_TYPE (type), VALUE_LVAL (arg1));\n+      else\n+\treturn value_subscript (arg1, value_as_long (arg2));\n+    }\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2266,33 +2302,8 @@ evaluate_subexp_standard (struct type *expect_type,\n     case BINOP_SUBSCRIPT:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n       arg2 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      if (binop_user_defined_p (op, arg1, arg2))\n-\treturn value_x_binop (arg1, arg2, op, OP_NULL, noside);\n-      else\n-\t{\n-\t  /* If the user attempts to subscript something that is not an\n-\t     array or pointer type (like a plain int variable for example),\n-\t     then report this as an error.  */\n+      return eval_op_subscript (expect_type, exp, noside, op, arg1, arg2);\n \n-\t  arg1 = coerce_ref (arg1);\n-\t  type = check_typedef (value_type (arg1));\n-\t  if (type->code () != TYPE_CODE_ARRAY\n-\t      && type->code () != TYPE_CODE_PTR)\n-\t    {\n-\t      if (type->name ())\n-\t\terror (_(\"cannot subscript something of type `%s'\"),\n-\t\t       type->name ());\n-\t      else\n-\t\terror (_(\"cannot subscript requested type\"));\n-\t    }\n-\n-\t  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\t    return value_zero (TYPE_TARGET_TYPE (type), VALUE_LVAL (arg1));\n-\t  else\n-\t    return value_subscript (arg1, value_as_long (arg2));\n-\t}\n     case MULTI_SUBSCRIPT:\n       (*pos) += 2;\n       nargs = longest_to_int (exp->elts[pc + 1].longconst);"
    }
  ]
}