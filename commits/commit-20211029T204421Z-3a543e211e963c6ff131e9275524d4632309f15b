{
  "sha": "3a543e211e963c6ff131e9275524d4632309f15b",
  "node_id": "C_kwDOANOeidoAKDNhNTQzZTIxMWU5NjNjNmZmMTMxZTkyNzU1MjRkNDYzMjMwOWYxNWI",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-09-24T03:43:13Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-29T20:44:21Z"
    },
    "message": "gdb: remove FIELD_BITPOS macro\n\nRemove FIELD_BITPOD, replace its uses with field::loc_bitpos.\n\nChange-Id: Idb99297e0170661254276c206383a7e9bf1a935a",
    "tree": {
      "sha": "56ab4d72be7729aa1e013f4b00476a66856127fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/56ab4d72be7729aa1e013f4b00476a66856127fb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3a543e211e963c6ff131e9275524d4632309f15b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a543e211e963c6ff131e9275524d4632309f15b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3a543e211e963c6ff131e9275524d4632309f15b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a543e211e963c6ff131e9275524d4632309f15b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8d939e8ea4b05a263579b533850a983668ccd1fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8d939e8ea4b05a263579b533850a983668ccd1fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8d939e8ea4b05a263579b533850a983668ccd1fa"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 15,
    "deletions": 18
  },
  "files": [
    {
      "sha": "71efd1c616ea8d988968f4d97f3e9811a52613bf",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -14594,7 +14594,7 @@ dwarf2_add_field (struct field_info *fip, struct die_info *die,\n \t\t anonymous object to the MSB of the field.  We don't\n \t\t have to do anything special since we don't need to\n \t\t know the size of the anonymous object.  */\n-\t      fp->set_loc_bitpos ((FIELD_BITPOS (*fp) + attr->constant_value (0)));\n+\t      fp->set_loc_bitpos (fp->loc_bitpos () + attr->constant_value (0));\n \t    }\n \t  else\n \t    {\n@@ -14623,9 +14623,9 @@ dwarf2_add_field (struct field_info *fip, struct die_info *die,\n \t\t     bit field.  */\n \t\t  anonymous_size = TYPE_LENGTH (fp->type ());\n \t\t}\n-\t      fp->set_loc_bitpos (FIELD_BITPOS (*fp)\n-\t\t\t      + anonymous_size * bits_per_byte\n-\t\t\t      - bit_offset - FIELD_BITSIZE (*fp));\n+\t      fp->set_loc_bitpos (fp->loc_bitpos ()\n+\t\t\t\t  + anonymous_size * bits_per_byte\n+\t\t\t\t  - bit_offset - FIELD_BITSIZE (*fp));\n \t    }\n \t}\n "
    },
    {
      "sha": "659123a4dad58bbab69e788aaa64cbe34ff29d23",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -4211,7 +4211,7 @@ check_types_equal (struct type *type1, struct type *type2,\n \t  switch (field1->loc_kind ())\n \t    {\n \t    case FIELD_LOC_KIND_BITPOS:\n-\t      if (FIELD_BITPOS (*field1) != FIELD_BITPOS (*field2))\n+\t      if (field1->loc_bitpos () != field2->loc_bitpos ())\n \t\treturn false;\n \t      break;\n \t    case FIELD_LOC_KIND_ENUMVAL:\n@@ -5917,18 +5917,18 @@ append_composite_type_field_aligned (struct type *t, const char *name,\n       if (t->num_fields () > 1)\n \t{\n \t  f->set_loc_bitpos\n-\t    ((FIELD_BITPOS (f[-1]) + (TYPE_LENGTH (f[-1].type ()) * TARGET_CHAR_BIT)));\n+\t    (f[-1].loc_bitpos () + (TYPE_LENGTH (f[-1].type ()) * TARGET_CHAR_BIT));\n \n \t  if (alignment)\n \t    {\n \t      int left;\n \n \t      alignment *= TARGET_CHAR_BIT;\n-\t      left = FIELD_BITPOS (f[0]) % alignment;\n+\t      left = f[0].loc_bitpos () % alignment;\n \n \t      if (left)\n \t\t{\n-\t\t  f->set_loc_bitpos (FIELD_BITPOS (f[0]) + (alignment - left));\n+\t\t  f->set_loc_bitpos (f[0].loc_bitpos () + (alignment - left));\n \t\t  TYPE_LENGTH (t) += (alignment - left) / TARGET_CHAR_BIT;\n \t\t}\n \t    }"
    },
    {
      "sha": "39b5fcf09d0c99a5d16eb624bcfd0f6691592152",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -2125,7 +2125,6 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n   (TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits == NULL ? 0 \\\n     : B_TST(TYPE_CPLUS_SPECIFIC(thistype)->virtual_field_bits, (index)))\n \n-#define FIELD_BITPOS(thisfld) ((thisfld).loc_bitpos ())\n #define FIELD_ENUMVAL(thisfld) ((thisfld).loc_enumval ())\n #define FIELD_STATIC_PHYSNAME(thisfld) ((thisfld).loc_physname ())\n #define FIELD_STATIC_PHYSADDR(thisfld) ((thisfld).loc_physaddr ())\n@@ -2134,7 +2133,7 @@ extern void set_type_vptr_basetype (struct type *, struct type *);\n #define FIELD_BITSIZE(thisfld) ((thisfld).bitsize)\n \n #define TYPE_FIELD_LOC_KIND(thistype, n) ((thistype)->field (n).loc_kind ())\n-#define TYPE_FIELD_BITPOS(thistype, n) FIELD_BITPOS ((thistype)->field (n))\n+#define TYPE_FIELD_BITPOS(thistype, n) ((thistype)->field (n).loc_bitpos ())\n #define TYPE_FIELD_ENUMVAL(thistype, n) FIELD_ENUMVAL ((thistype)->field (n))\n #define TYPE_FIELD_STATIC_PHYSNAME(thistype, n) FIELD_STATIC_PHYSNAME ((thistype)->field (n))\n #define TYPE_FIELD_STATIC_PHYSADDR(thistype, n) FIELD_STATIC_PHYSADDR ((thistype)->field (n))"
    },
    {
      "sha": "bd8c113a36194b7576dd425ed885ecd0e49ececf",
      "filename": "gdb/guile/scm-type.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/guile/scm-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/guile/scm-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-type.c?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -1183,7 +1183,7 @@ gdbscm_field_bitpos (SCM self)\n   SCM_ASSERT_TYPE (type->code () != TYPE_CODE_ENUM,\n \t\t   self, SCM_ARG1, FUNC_NAME, _(\"non-enum type\"));\n \n-  return scm_from_long (FIELD_BITPOS (*field));\n+  return scm_from_long (field->loc_bitpos ());\n }\n \n /* (field-bitsize <gdb:field>) -> integer\n@@ -1196,7 +1196,7 @@ gdbscm_field_bitsize (SCM self)\n     = tyscm_get_field_smob_arg_unsafe (self, SCM_ARG1, FUNC_NAME);\n   struct field *field = tyscm_field_smob_to_field (f_smob);\n \n-  return scm_from_long (FIELD_BITPOS (*field));\n+  return scm_from_long (field->loc_bitpos ());\n }\n \n /* (field-artificial? <gdb:field>) -> boolean"
    },
    {
      "sha": "65eec4797583b1e8a20bf6bde0495db689b4ca86",
      "filename": "gdb/mips-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/mips-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/mips-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mips-tdep.c?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -5248,8 +5248,7 @@ mips_n32n64_return_value (struct gdbarch *gdbarch, struct value *function,\n \t\t\t\t: MIPS_V0_REGNUM);\n \t   field < type->num_fields (); field++, regnum += 2)\n \t{\n-\t  int offset = (FIELD_BITPOS (type->field (field))\n-\t\t\t/ TARGET_CHAR_BIT);\n+\t  int offset = type->field (field).loc_bitpos () / TARGET_CHAR_BIT;\n \t  if (mips_debug)\n \t    fprintf_unfiltered (gdb_stderr, \"Return float struct+%d\\n\",\n \t\t\t\toffset);\n@@ -5800,8 +5799,7 @@ mips_o32_return_value (struct gdbarch *gdbarch, struct value *function,\n       for (field = 0, regnum = mips_regnum (gdbarch)->fp0;\n \t   field < type->num_fields (); field++, regnum += 2)\n \t{\n-\t  int offset = (FIELD_BITPOS (type->fields ()[field])\n-\t\t\t/ TARGET_CHAR_BIT);\n+\t  int offset = (type->fields ()[field].loc_bitpos () / TARGET_CHAR_BIT);\n \t  if (mips_debug)\n \t    fprintf_unfiltered (gdb_stderr, \"Return float struct+%d\\n\",\n \t\t\t\toffset);"
    },
    {
      "sha": "04f5210a4fb8b1f836ba99f4273afb76730ed5c2",
      "filename": "gdb/stabsread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3a543e211e963c6ff131e9275524d4632309f15b/gdb/stabsread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3a543e211e963c6ff131e9275524d4632309f15b/gdb/stabsread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stabsread.c?ref=3a543e211e963c6ff131e9275524d4632309f15b",
      "patch": "@@ -2846,7 +2846,7 @@ read_one_struct_field (struct stab_field_info *fip, const char **pp,\n       }\n   }\n \n-  if (FIELD_BITPOS (fip->list->field) == 0\n+  if (fip->list->field.loc_bitpos () == 0\n       && FIELD_BITSIZE (fip->list->field) == 0)\n     {\n       /* This can happen in two cases: (1) at least for gcc 2.4.5 or so,\n@@ -2889,7 +2889,7 @@ read_one_struct_field (struct stab_field_info *fip, const char **pp,\n \t\t  == gdbarch_int_bit (gdbarch))\n \t  )\n \t  &&\n-\t  FIELD_BITPOS (fip->list->field) % 8 == 0)\n+\t  fip->list->field.loc_bitpos () % 8 == 0)\n \t{\n \t  FIELD_BITSIZE (fip->list->field) = 0;\n \t}"
    }
  ]
}