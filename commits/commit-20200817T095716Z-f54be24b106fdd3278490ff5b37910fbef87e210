{
  "sha": "f54be24b106fdd3278490ff5b37910fbef87e210",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjU0YmUyNGIxMDZmZGQzMjc4NDkwZmY1YjM3OTEwZmJlZjg3ZTIxMA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-17T09:57:16Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-17T09:57:16Z"
    },
    "message": "gdb: use bool in dwarf2_loc_desc_get_symbol_read_needs\n\nThis variable is really a boolean, so use the bool type.\n\ngdb/ChangeLog:\n\n\t* dwarf2/loc.c (dwarf2_loc_desc_get_symbol_read_needs): Use\n\tbool.\n\nChange-Id: I814a47d1200f3b88722c54c822fd49607a6b77be",
    "tree": {
      "sha": "9f54d9e3ff20e3124e744844e119d34ec105d8c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9f54d9e3ff20e3124e744844e119d34ec105d8c3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f54be24b106fdd3278490ff5b37910fbef87e210",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f54be24b106fdd3278490ff5b37910fbef87e210",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f54be24b106fdd3278490ff5b37910fbef87e210",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f54be24b106fdd3278490ff5b37910fbef87e210/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4d05d13eba6e0ed01767999fc87e75599ddd86e"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 8,
    "deletions": 4
  },
  "files": [
    {
      "sha": "b5917e95f9d68354d8f4fcb3d2e284635c9c70ac",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f54be24b106fdd3278490ff5b37910fbef87e210/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f54be24b106fdd3278490ff5b37910fbef87e210/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f54be24b106fdd3278490ff5b37910fbef87e210",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-17  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/loc.c (dwarf2_loc_desc_get_symbol_read_needs): Use\n+\tbool.\n+\n 2020-08-17  Tom de Vries  <tdevries@suse.de>\n \n \tPR gdb/26393"
    },
    {
      "sha": "b02ef91be91c4a8740840b38b3ea6c0d1436c8a8",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f54be24b106fdd3278490ff5b37910fbef87e210/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f54be24b106fdd3278490ff5b37910fbef87e210/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=f54be24b106fdd3278490ff5b37910fbef87e210",
      "patch": "@@ -2849,8 +2849,6 @@ dwarf2_loc_desc_get_symbol_read_needs (const gdb_byte *data, size_t size,\n \t\t\t\t       dwarf2_per_cu_data *per_cu,\n \t\t\t\t       dwarf2_per_objfile *per_objfile)\n {\n-  int in_reg;\n-\n   scoped_value_mark free_values;\n \n   symbol_needs_eval_context ctx (per_objfile);\n@@ -2863,16 +2861,17 @@ dwarf2_loc_desc_get_symbol_read_needs (const gdb_byte *data, size_t size,\n \n   ctx.eval (data, size);\n \n-  in_reg = ctx.location == DWARF_VALUE_REGISTER;\n+  bool in_reg = ctx.location == DWARF_VALUE_REGISTER;\n \n   /* If the location has several pieces, and any of them are in\n      registers, then we will need a frame to fetch them from.  */\n   for (dwarf_expr_piece &p : ctx.pieces)\n     if (p.location == DWARF_VALUE_REGISTER)\n-      in_reg = 1;\n+      in_reg = true;\n \n   if (in_reg)\n     ctx.needs = SYMBOL_NEEDS_FRAME;\n+\n   return ctx.needs;\n }\n "
    }
  ]
}