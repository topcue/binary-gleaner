{
  "sha": "7cdfc3462fbbb27727ddd83d356cf79af8854740",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NkZmMzNDYyZmJiYjI3NzI3ZGRkODNkMzU2Y2Y3OWFmODg1NDc0MA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-11T14:44:48Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T17:05:32Z"
    },
    "message": "ld, testsuite: only run CTF tests when ld and GCC support CTF\n\nThe CTF testsuite runs GCC to generate CTF that it knows matches the\ninput .c files before doing a run_dump_test over it.  So we need a GCC\ncapable of doing that, and we need to always avoid running those tests\nif libctf was disabled because the linker will never be capable of it.\n\nld/\n\t* configure.ac (enable_libctf): Substitute it.\n\t* Makefile.am (enablings.exp): New.\n\t(EXTRA_DEJAGNU_SITE_CONFIG): Add it.\n\t(DISTCLEANFILES): Likewise.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\t* testsuite/lib/ld-lib.exp (compile_one_cc): New.\n\t(check_ctf_available): Likewise.\n\t(skip_ctf_tests): Likewise.\n\t* testsuite/ld-ctf/ctf.exp: Call skip_ctf_tests.",
    "tree": {
      "sha": "8099e7b67ee5dfcf13bcb816a85e87efc0e19c44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8099e7b67ee5dfcf13bcb816a85e87efc0e19c44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7cdfc3462fbbb27727ddd83d356cf79af8854740",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cdfc3462fbbb27727ddd83d356cf79af8854740",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7cdfc3462fbbb27727ddd83d356cf79af8854740",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7cdfc3462fbbb27727ddd83d356cf79af8854740/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b1b33524ad3c439badba3ce4fa51c0d5a317c4a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b1b33524ad3c439badba3ce4fa51c0d5a317c4a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b1b33524ad3c439badba3ce4fa51c0d5a317c4a5"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 91,
    "deletions": 6
  },
  "files": [
    {
      "sha": "bd0c6ccd688693c68d7d6e450bdc8d90f9b057d8",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -1,3 +1,16 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac (enable_libctf): Substitute it.\n+\t* Makefile.am (enablings.exp): New.\n+\t(EXTRA_DEJAGNU_SITE_CONFIG): Add it.\n+\t(DISTCLEANFILES): Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\t* testsuite/lib/ld-lib.exp (compile_one_cc): New.\n+\t(check_ctf_available): Likewise.\n+\t(skip_ctf_tests): Likewise.\n+\t* testsuite/ld-ctf/ctf.exp: Call skip_ctf_tests.\n+\n 2020-07-22  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n \n \t* testsuite/ld-ctf/ctf.exp: New file."
    },
    {
      "sha": "168f65dfe773135ad804e61c39326bcd74ead551",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -974,6 +974,9 @@ check-DEJAGNU: site.exp\n development.exp: $(BFDDIR)/development.sh\n \t$(EGREP) \"[development|experimental]=\" $(BFDDIR)/development.sh  \\\n \t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n+\n+enablings.exp:\n+\techo \"set enable_libctf ${enable_libctf}\" >> $@\n #\n #\n # Build a dummy plugin using libtool.\n@@ -1020,7 +1023,7 @@ MAINTAINERCLEANFILES = configdoc.texi ld.1\n CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt \\\n \t$(BFDDIR)/development.sh\n \n-EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n+EXTRA_DEJAGNU_SITE_CONFIG = development.exp enablings.exp\n \n MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \\\n \tldemul-list.h crtbegin.@OBJEXT@ crtend.@OBJEXT@ ld.log ld.sum\n@@ -1067,7 +1070,7 @@ diststuff: info $(EXTRA_DIST)\n # ld.1 to support parallel build.\n info-recursive: ld.1\n \n-DISTCLEANFILES = site.exp development.exp site.bak stringify.sed\n+DISTCLEANFILES = site.exp development.exp enablings.exp site.bak stringify.sed\n distclean-local:\n \trm -rf ldscripts\n "
    },
    {
      "sha": "0c4dff3615d5a9247858e7f6b48dc2abb58c88a9",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -492,6 +492,7 @@ elf_list_options = @elf_list_options@\n elf_plt_unwind_list_options = @elf_plt_unwind_list_options@\n elf_shlib_list_options = @elf_shlib_list_options@\n enable_initfini_array = @enable_initfini_array@\n+enable_libctf = @enable_libctf@\n exec_prefix = @exec_prefix@\n host = @host@\n host_alias = @host_alias@\n@@ -1017,7 +1018,7 @@ MAINTAINERCLEANFILES = configdoc.texi ld.1 ld.info\n CONFIG_STATUS_DEPENDENCIES = $(srcdir)/configure.host $(srcdir)/configure.tgt \\\n \t$(BFDDIR)/development.sh\n \n-EXTRA_DEJAGNU_SITE_CONFIG = development.exp\n+EXTRA_DEJAGNU_SITE_CONFIG = development.exp enablings.exp\n MOSTLYCLEANFILES = $(STAGESTUFF) ld1$(EXEEXT) ld2$(EXEEXT) ld3$(EXEEXT) \\\n \tldemul-list.h crtbegin.@OBJEXT@ crtend.@OBJEXT@ ld.log ld.sum\n \n@@ -1028,7 +1029,7 @@ CLEANFILES = dep.sed DEP DEPA DEP1 DEP2 spu_ovl.s spu_ovl.@OBJEXT@ spu_icache.s\n EXTRA_DIST = ldgram.c ldgram.h ldlex.c emultempl/spu_ovl.@OBJEXT@_c \\\n \t     emultempl/spu_icache.@OBJEXT@_c deffilep.c deffilep.h $(man_MANS)\n \n-DISTCLEANFILES = site.exp development.exp site.bak stringify.sed\n+DISTCLEANFILES = site.exp development.exp enablings.exp site.bak stringify.sed\n all: $(BUILT_SOURCES) config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n \n@@ -2549,6 +2550,9 @@ development.exp: $(BFDDIR)/development.sh\n \t$(EGREP) \"[development|experimental]=\" $(BFDDIR)/development.sh  \\\n \t  | $(AWK) -F= '{ print \"set \" $$1 \" \" $$2 }' > $@\n \n+enablings.exp:\n+\techo \"set enable_libctf ${enable_libctf}\" >> $@\n+\n # DOCUMENTATION TARGETS\n # Manual configuration file; not usually attached to normal configuration,\n # because almost all configs use \"gen\" version of manual."
    },
    {
      "sha": "b63bc88bdfc954d1ff84962920b7df1748116a80",
      "filename": "ld/configure",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -678,6 +678,7 @@ WARN_WRITE_STRINGS\n NO_WERROR\n WARN_CFLAGS_FOR_BUILD\n WARN_CFLAGS\n+enable_libctf\n ENABLE_LIBCTF_FALSE\n ENABLE_LIBCTF_TRUE\n installed_linker\n@@ -12037,7 +12038,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12040 \"configure\"\n+#line 12041 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12143,7 +12144,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12146 \"configure\"\n+#line 12147 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15958,6 +15959,7 @@ fi\n \n \n \n+\n # Set the 'development' global.\n . $srcdir/../bfd/development.sh\n "
    },
    {
      "sha": "5ef25e3eb88aba0e55e6cbb60c9789f031063e19",
      "filename": "ld/configure.ac",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.ac?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -226,6 +226,7 @@ if test \"${enable_libctf}\" = yes; then\n     AC_DEFINE(ENABLE_LIBCTF, 1, [Handle .ctf type-info sections])\n fi\n AM_CONDITIONAL(ENABLE_LIBCTF, test \"${enable_libctf}\" = yes)\n+AC_SUBST(enable_libctf)\n \n AM_BINUTILS_WARNINGS\n "
    },
    {
      "sha": "5d177afef0d128daaf06a8da92cd33e6fd93e633",
      "filename": "ld/testsuite/ld-ctf/ctf.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/testsuite/ld-ctf/ctf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/testsuite/ld-ctf/ctf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ctf/ctf.exp?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -18,9 +18,19 @@\n # MA 02110-1301, USA.\n #\n \n+if [skip_ctf_tests] {\n+    unsupported \"no CTF format support in the compiler, or CTF disabled\"\n+    return 0\n+}\n+\n set ctf_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n \n foreach ctf_test $ctf_test_list {\n+    if [string equal -length [string length \"diag-\"] \"diag-\" [file tail $ctf_test]] {\n+\tif ![is_elf_format] {\n+\t    continue\n+\t}\n+    }\n     verbose [file rootname $ctf_test]\n     run_dump_test [file rootname $ctf_test] { { cc \"-gt -fPIC\" } }\n }"
    },
    {
      "sha": "d1ffab7dc46c904c70c09f2945c83931614df16e",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7cdfc3462fbbb27727ddd83d356cf79af8854740/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=7cdfc3462fbbb27727ddd83d356cf79af8854740",
      "patch": "@@ -1569,3 +1569,55 @@ proc check_gnu2_tls_available { } {\n     }\n     return $gnu2_tls_available_saved\n }\n+\n+# Compile a C source file, with the specified additional_flags.\n+proc compile_one_cc { src output additional_flags } {\n+    global CC\n+    global CFLAGS\n+\n+    set flags \"\"\n+    if [board_info [target_info name] exists cflags] {\n+\tappend flags \" [board_info [target_info name] cflags]\"\n+    }\n+    if [board_info [target_info name] exists ldflags] {\n+\tappend flags \" [board_info [target_info name] ldflags]\"\n+    }\n+\n+    if [is_remote host] {\n+\tset src [remote_download host $src]\n+    }\n+    return [run_host_cmd_yesno \"$CC\" \"$flags $CFLAGS $additional_flags $src -o $output\"]\n+}\n+\n+# Returns true if the target compiler supports -gt\n+proc check_ctf_available { } {\n+    global ctf_available_saved\n+\n+    if {![info exists ctf_available_saved]} {\n+\tset basename \"tmpdir/ctf_available[pid]\"\n+\tset src ${basename}.c\n+\tset output ${basename}.o\n+\tset f [open $src \"w\"]\n+\tputs $f \"int main() { return 0; }\"\n+\tclose $f\n+\tset ctf_available_saved [compile_one_cc $src $output \"-gt -c\"]\n+\tremote_file host delete $src\n+\tremote_file host delete $output\n+\tfile delete $src\n+    }\n+    return $ctf_available_saved\n+}\n+\n+proc skip_ctf_tests { } {\n+    global enable_libctf\n+\n+    if {$enable_libctf eq \"no\"} {\n+\treturn 1\n+    }\n+\n+    if [check_ctf_available] {\n+\treturn 0\n+    }\n+\n+    return 1\n+}"
    }
  ]
}