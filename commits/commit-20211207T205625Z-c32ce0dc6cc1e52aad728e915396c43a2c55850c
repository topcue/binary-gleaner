{
  "sha": "c32ce0dc6cc1e52aad728e915396c43a2c55850c",
  "node_id": "C_kwDOANOeidoAKGMzMmNlMGRjNmNjMWU1MmFhZDcyOGU5MTUzOTZjNDNhMmM1NTg1MGM",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-07T20:56:25Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-12-07T20:56:25Z"
    },
    "message": "gdb: rename \"maint agent\" functions\n\nFunctions agent_eval_command and agent_command are used to implement\nmaintenance commands, rename them accordingly (with the maint_ prefix),\nas well as the agent_command_1 helper function.\n\nChange-Id: Iacf96d4a0a26298e8dd4648a0f38da649ea5ef61",
    "tree": {
      "sha": "9df839969bc0ce56fc429065959460490b3ac96d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9df839969bc0ce56fc429065959460490b3ac96d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c32ce0dc6cc1e52aad728e915396c43a2c55850c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c32ce0dc6cc1e52aad728e915396c43a2c55850c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c32ce0dc6cc1e52aad728e915396c43a2c55850c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c32ce0dc6cc1e52aad728e915396c43a2c55850c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cd0f67f3630b3a938a74d2045f3726c09395adfc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd0f67f3630b3a938a74d2045f3726c09395adfc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cd0f67f3630b3a938a74d2045f3726c09395adfc"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 7,
    "deletions": 7
  },
  "files": [
    {
      "sha": "088f77f70620cfbdab3743fc01c42c3013cc390f",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c32ce0dc6cc1e52aad728e915396c43a2c55850c/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c32ce0dc6cc1e52aad728e915396c43a2c55850c/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=c32ce0dc6cc1e52aad728e915396c43a2c55850c",
      "patch": "@@ -2491,7 +2491,7 @@ agent_eval_command_one (const char *exp, int eval, CORE_ADDR pc)\n }\n \n static void\n-agent_command_1 (const char *exp, int eval)\n+maint_agent_command_1 (const char *exp, int eval)\n {\n   /* We don't deal with overlay debugging at the moment.  We need to\n      think more carefully about this.  If you copy this code into\n@@ -2529,19 +2529,19 @@ agent_command_1 (const char *exp, int eval)\n }\n \n static void\n-agent_command (const char *exp, int from_tty)\n+maint_agent_command (const char *exp, int from_tty)\n {\n-  agent_command_1 (exp, 0);\n+  maint_agent_command_1 (exp, 0);\n }\n \n /* Parse the given expression, compile it into an agent expression\n    that does direct evaluation, and display the resulting\n    expression.  */\n \n static void\n-agent_eval_command (const char *exp, int from_tty)\n+maint_agent_eval_command (const char *exp, int from_tty)\n {\n-  agent_command_1 (exp, 1);\n+  maint_agent_command_1 (exp, 1);\n }\n \n /* Parse the given expression, compile it into an agent expression\n@@ -2620,15 +2620,15 @@ void _initialize_ax_gdb ();\n void\n _initialize_ax_gdb ()\n {\n-  add_cmd (\"agent\", class_maintenance, agent_command,\n+  add_cmd (\"agent\", class_maintenance, maint_agent_command,\n \t   _(\"\\\n Translate an expression into remote agent bytecode for tracing.\\n\\\n Usage: maint agent [-at LOCATION,] EXPRESSION\\n\\\n If -at is given, generate remote agent bytecode for this location.\\n\\\n If not, generate remote agent bytecode for current frame pc address.\"),\n \t   &maintenancelist);\n \n-  add_cmd (\"agent-eval\", class_maintenance, agent_eval_command,\n+  add_cmd (\"agent-eval\", class_maintenance, maint_agent_eval_command,\n \t   _(\"\\\n Translate an expression into remote agent bytecode for evaluation.\\n\\\n Usage: maint agent-eval [-at LOCATION,] EXPRESSION\\n\\"
    }
  ]
}