{
  "sha": "4790db149699b21113c566b8b9249953038fd3a7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDc5MGRiMTQ5Njk5YjIxMTEzYzU2NmI4YjkyNDk5NTMwMzhmZDNhNw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-05T11:16:31Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-11T10:26:18Z"
    },
    "message": "gdb: 'maint info sections' - handle the no executable case\n\nThe 'maint info sections' command is split into two blocks or work,\nfirst if there's an executable then the sections from the executable,\nand optionally all other loaded object files are printed.  Then all\nthe sections from any core file are printed.\n\nI ran into a situation where (for various reasons) I wasn't using a\nmain executable.  Instead I connected to a remote target and used\nadd-symbol-file.  This allowed me to debug an image that was already\nloaded on the remote system.\n\nUnfortunately, when I tried to use 'maint info sections' I saw\nnothing.  The reason is that the loop over all object files is hidden\nbehind a check that we have a main executable.\n\nThis commit removes this check and merges together some duplicate\ncode.  I also (I think) made the output of this command cleaner.\n\nHere is the original output of 'maint info sections':\n\n  Exec file:\n      `/tmp/hello.x', file type elf64-x86-64.\n   [0]      0x004002a8->0x004002c4 at 0x000002a8: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x004002c4->0x004002e8 at 0x000002c4: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n\nAnd my modified output:\n\n  Exec file: `/home/andrew/tmp/hello.x', file type elf64-x86-64.\n   [0]      0x004002a8->0x004002c4 at 0x000002a8: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x004002c4->0x004002e8 at 0x000002c4: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n\nThe forced newline after 'Exec file: ' has been removed.  This is now\na wrap point (in case the filename is very long).\n\nHere is the original output of 'maint info sections ALLOBJ':\n\n  Exec file:\n      `/tmp/hello.x', file type elf64-x86-64.\n    Object file: /tmp/hello.x\n   [0]      0x004002a8->0x004002c4 at 0x000002a8: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x004002c4->0x004002e8 at 0x000002c4: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n    Object file: /lib64/ld-linux-x86-64.so.2\n   [0]      0x7ffff7fd12a8->0x7ffff7fd12c8 at 0x000002a8: .note.gnu.property ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x7ffff7fd12c8->0x7ffff7fd12ec at 0x000002c8: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n\nAnd my modified output:\n\n  Exec file: `/tmp/hello.x', file type elf64-x86-64.\n   [0]      0x004002a8->0x004002c4 at 0x000002a8: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x004002c4->0x004002e8 at 0x000002c4: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n  Object file: `/lib64/ld-linux-x86-64.so.2', file type elf64-x86-64.\n   [0]      0x7ffff7fd12a8->0x7ffff7fd12c8 at 0x000002a8: .note.gnu.property ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x7ffff7fd12c8->0x7ffff7fd12ec at 0x000002c8: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n\nThe executable now only gets a single header line.  The header line\nfor the additional object files is no longer indented as it was\nbefore, and the line is laid out in a similar style to the main\nexecutable line (with quotes and file type information).\n\nAnd of course, the biggest change.  If GDB is started with no\nexecutable, but then the user does 'add-symbol-file ....' followed by\n'maint info sections ALLOBJ', previously they got nothing, now they\nget:\n\n  Object file: `/tmp/hello.x', file type elf64-x86-64.\n   [0]      0x004002a8->0x004002c4 at 0x000002a8: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS\n   [1]      0x004002c4->0x004002e8 at 0x000002c4: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS\n   ...\n\ngdb/ChangeLog:\n\n\t* maint.c (print_bfd_section_info_maybe_relocated): Delete,\n\tfunctionality merged into...\n\t(maint_print_all_sections): ...this new function.\n\t(maintenance_info_sections): Make use of maint_print_all_sections,\n\tallow all objects to be printed even where there's no executable.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/maint-info-sections.exp: Update expected output, and\n\tadd additional tests.",
    "tree": {
      "sha": "7db522b99ff19d4ba66e78141059bcedacbf59df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7db522b99ff19d4ba66e78141059bcedacbf59df"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4790db149699b21113c566b8b9249953038fd3a7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4790db149699b21113c566b8b9249953038fd3a7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4790db149699b21113c566b8b9249953038fd3a7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4790db149699b21113c566b8b9249953038fd3a7/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f4be677293a68a4d54f978bccbd703c3909b5149",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4be677293a68a4d54f978bccbd703c3909b5149",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f4be677293a68a4d54f978bccbd703c3909b5149"
    }
  ],
  "stats": {
    "total": 168,
    "additions": 105,
    "deletions": 63
  },
  "files": [
    {
      "sha": "14b11be1fe3ed35941a889a1eb42e3ea20a6fec1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4790db149699b21113c566b8b9249953038fd3a7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4790db149699b21113c566b8b9249953038fd3a7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4790db149699b21113c566b8b9249953038fd3a7",
      "patch": "@@ -1,3 +1,11 @@\n+2021-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* maint.c (print_bfd_section_info_maybe_relocated): Delete,\n+\tfunctionality merged into...\n+\t(maint_print_all_sections): ...this new function.\n+\t(maintenance_info_sections): Make use of maint_print_all_sections,\n+\tallow all objects to be printed even where there's no executable.\n+\n 2021-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* breakpoint.c (resolve_sal_pc): Make use of"
    },
    {
      "sha": "0dda11b7c2ee35ae6fcec1b6ede8e4ae78a72b84",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 55,
      "deletions": 59,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4790db149699b21113c566b8b9249953038fd3a7/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4790db149699b21113c566b8b9249953038fd3a7/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=4790db149699b21113c566b8b9249953038fd3a7",
      "patch": "@@ -354,82 +354,78 @@ maint_obj_section_from_bfd_section (bfd *abfd,\n   return osect;\n }\n \n-/* Print information about ASECT from ABFD.  Where possible the information for\n-   ASECT will print the relocated addresses of the section.\n+/* Print information about all sections from ABFD, which is the bfd\n+   corresponding to OBJFILE.  It is fine for OBJFILE to be nullptr, but\n+   ABFD must never be nullptr.  If OBJFILE is provided then the sections of\n+   ABFD will (potentially) be displayed relocated (i.e. the object file was\n+   loaded with add-symbol-file and custom offsets were provided).\n \n-   ARG is the argument string passed by the user to the top level maintenance\n-   info sections command.  Used for filtering which sections are printed.  */\n+   HEADER is a string that describes this file, e.g. 'Exec file: ', or\n+   'Core file: '.\n+\n+   ARG is a string used for filtering which sections are printed, this can\n+   be nullptr for no filtering.  See the top level 'maint info sections'\n+   for a fuller description of the possible filtering strings.  */\n \n static void\n-print_bfd_section_info_maybe_relocated (bfd *abfd, asection *asect,\n-\t\t\t\t\tobjfile *objfile, const char *arg,\n-\t\t\t\t\tint index_digits)\n+maint_print_all_sections (const char *header, bfd *abfd, objfile *objfile,\n+\t\t\t  const char *arg)\n {\n-  gdb_assert (objfile->sections != NULL);\n-  obj_section *osect\n-    = maint_obj_section_from_bfd_section (abfd, asect, objfile);\n+  puts_filtered (header);\n+  wrap_here (\"        \");\n+  printf_filtered (\"`%s', \", bfd_get_filename (abfd));\n+  wrap_here (\"        \");\n+  printf_filtered (_(\"file type %s.\\n\"), bfd_get_target (abfd));\n \n-  if (osect->the_bfd_section == NULL)\n-    print_bfd_section_info (abfd, asect, arg, index_digits);\n-  else\n-    print_objfile_section_info (abfd, osect, arg, index_digits);\n+  int section_count = gdb_bfd_count_sections (abfd);\n+  int digits = index_digits (section_count);\n+\n+  for (asection *sect : gdb_bfd_sections (abfd))\n+    {\n+      obj_section *osect = nullptr;\n+\n+      if (objfile != nullptr)\n+\t{\n+\t  gdb_assert (objfile->sections != nullptr);\n+\t  osect\n+\t    = maint_obj_section_from_bfd_section (abfd, sect, objfile);\n+\t  if (osect->the_bfd_section == nullptr)\n+\t    osect = nullptr;\n+\t}\n+\n+      if (osect == nullptr)\n+\tprint_bfd_section_info (abfd, sect, arg, digits);\n+      else\n+\tprint_objfile_section_info (abfd, osect, arg, digits);\n+    }\n }\n \n /* Implement the \"maintenance info sections\" command.  */\n \n static void\n maintenance_info_sections (const char *arg, int from_tty)\n {\n-  if (current_program_space->exec_bfd ())\n-    {\n-      bool allobj = false;\n-\n-      printf_filtered (_(\"Exec file:\\n\"));\n-      printf_filtered (\"    `%s', \",\n-\t\t       bfd_get_filename (current_program_space->exec_bfd ()));\n-      wrap_here (\"        \");\n-      printf_filtered (_(\"file type %s.\\n\"),\n-\t\t       bfd_get_target (current_program_space->exec_bfd ()));\n-\n-      /* Only this function cares about the 'ALLOBJ' argument;\n-\t if 'ALLOBJ' is the only argument, discard it rather than\n-\t passing it down to print_objfile_section_info (which\n-\t wouldn't know how to handle it).  */\n-      if (arg && strcmp (arg, \"ALLOBJ\") == 0)\n-\t{\n-\t  arg = NULL;\n-\t  allobj = true;\n-\t}\n+  bool allobj = false;\n \n-      for (objfile *ofile : current_program_space->objfiles ())\n-\t{\n-\t  if (allobj)\n-\t    printf_filtered (_(\"  Object file: %s\\n\"),\n-\t\t\t     bfd_get_filename (ofile->obfd));\n-\t  else if (ofile->obfd != current_program_space->exec_bfd ())\n-\t    continue;\n-\n-\t  int section_count = gdb_bfd_count_sections (ofile->obfd);\n-\n-\t  for (asection *sect : gdb_bfd_sections (ofile->obfd))\n-\t    print_bfd_section_info_maybe_relocated\n-\t      (ofile->obfd, sect, ofile, arg, index_digits (section_count));\n-\t}\n+  /* Only this function cares about the 'ALLOBJ' argument; if 'ALLOBJ' is\n+     the only argument, discard it rather than passing it down to\n+     print_objfile_section_info (which wouldn't know how to handle it).  */\n+  if (arg != nullptr && strcmp (arg, \"ALLOBJ\") == 0)\n+    {\n+      arg = nullptr;\n+      allobj = true;\n     }\n \n-  if (core_bfd)\n+  for (objfile *ofile : current_program_space->objfiles ())\n     {\n-      printf_filtered (_(\"Core file:\\n\"));\n-      printf_filtered (\"    `%s', \", bfd_get_filename (core_bfd));\n-      wrap_here (\"        \");\n-      printf_filtered (_(\"file type %s.\\n\"), bfd_get_target (core_bfd));\n-\n-      int section_count = gdb_bfd_count_sections (core_bfd);\n-\n-      for (asection *sect : gdb_bfd_sections (core_bfd))\n-\tprint_bfd_section_info (core_bfd, sect, arg,\n-\t\t\t\tindex_digits (section_count));\n+      if (ofile->obfd == current_program_space->exec_bfd ())\n+\tmaint_print_all_sections (_(\"Exec file: \"), ofile->obfd, ofile, arg);\n+      else if (allobj)\n+\tmaint_print_all_sections (_(\"Object file: \"), ofile->obfd, ofile, arg);\n     }\n+\n+  if (core_bfd)\n+    maint_print_all_sections (_(\"Core file: \"), core_bfd, nullptr, arg);\n }\n \n static void"
    },
    {
      "sha": "0102a937fcf3f59792eaa714cde02df017deb462",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4790db149699b21113c566b8b9249953038fd3a7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4790db149699b21113c566b8b9249953038fd3a7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4790db149699b21113c566b8b9249953038fd3a7",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/maint-info-sections.exp: Update expected output, and\n+\tadd additional tests.\n+\n 2021-02-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/maint-info-sections.exp: New file, content is moved"
    },
    {
      "sha": "19e5c1222268edf84da26ef105b45e41d46705d0",
      "filename": "gdb/testsuite/gdb.base/maint-info-sections.exp",
      "status": "modified",
      "additions": 37,
      "deletions": 4,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4790db149699b21113c566b8b9249953038fd3a7/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4790db149699b21113c566b8b9249953038fd3a7/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-info-sections.exp?ref=4790db149699b21113c566b8b9249953038fd3a7",
      "patch": "@@ -34,7 +34,7 @@ if ![runto_main] then {\n set seen_header false\n set seen_a_section false\n gdb_test_multiple \"maint info sections\" \"general output check\" {\n-    -re \"Exec file:\\r\\n\\[\\t ]+`\\[^'\\]+', file type \\[^.\\]+\\.\\r\\n\" {\n+    -re \"Exec file: `\\[^'\\]+', file type \\[^.\\]+\\.\\r\\n\" {\n \tset seen_header true\n \texp_continue\n     }\n@@ -63,18 +63,18 @@ set text_section \".text\"\n set data_section \".data\"\n \n gdb_test_multiple \"maint info sections\" \"\" {\n-    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*ER_RO.*\" {\n+    -re -wrap \"Exec file: .*${binfile}., file type.*ER_RO.*\" {\n \t# Looks like RealView which uses different section names.\n \tset text_section ER_RO\n \tset data_section ER_RW\n \tpass \"maint info sections\"\n     }\n-    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*neardata.*\" {\n+    -re -wrap \"Exec file: .*${binfile}., file type.*neardata.*\" {\n \t# c6x doesn't have .data section.  It has .neardata and .fardata section.\n \tset data_section \".neardata\"\n \tpass \"maint info sections\"\n     }\n-    -re -wrap \"Exec file:\\r\\n.*${binfile}., file type.*\" {\n+    -re -wrap \"Exec file: .*${binfile}., file type.*\" {\n \tpass \"maint info sections\"\n     }\n }\n@@ -125,3 +125,36 @@ gdb_test_multiple \"maint info sections DATA\" \"\" {\n \tpass $gdb_test_name\n     }\n }\n+\n+# Restart GDB, but don't load the executable.\n+clean_restart\n+\n+# Now load the executable in as a symbol file.\n+gdb_test \"add-symbol-file ${binfile}\" \".*\" \\\n+    \"load the executable as a symbol file\" \\\n+    \"add symbol table from file \\\"${binfile}\\\"\\r\\n\\\\(y or n\\\\) \" \\\n+    \"y\"\n+\n+# As we have no object file 'maint info sections' will print nothing.\n+gdb_test_no_output \"maint info sections\" \\\n+    \"no output when no executable is set\"\n+\n+# Check that the executable shows up as an object file when ALLOBJ is\n+# used.\n+set seen_header false\n+set seen_a_section false\n+gdb_test_multiple \"maint info sections ALLOBJ\" \"\" {\n+    -re \"Object file: `${binfile}', file type \\[^.\\]+\\.\\r\\n\" {\n+\tset seen_header true\n+\texp_continue\n+    }\n+    -re \"^ \\\\\\[\\[0-9\\]+\\\\\\]\\[\\t \\]+$hex->$hex at $hex: \\[^*\\r\\]+\\r\\n\" {\n+\tset seen_a_section true\n+\texp_continue\n+    }\n+    -re \"^$gdb_prompt $\" {\n+\tgdb_assert { $seen_header && $seen_a_section } \\\n+\t    \"ensure header and section seen in ALLOBJ case\"\n+\tpass $gdb_test_name\n+    }\n+}"
    }
  ]
}