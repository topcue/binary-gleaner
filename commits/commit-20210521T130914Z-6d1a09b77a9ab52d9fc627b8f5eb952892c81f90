{
  "sha": "6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQxYTA5Yjc3YTlhYjUyZDlmYzYyN2I4ZjVlYjk1Mjg5MmM4MWY5MA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-21T13:09:14Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-05-21T13:09:14Z"
    },
    "message": "[gdb/breakpoint] Fix assert in jit_event_handler\n\nConsider a minimal test-case test.c:\n...\nint main (void) { return 0; }\n...\nwhich we can compile into llvm byte code using clang:\n...\n$ clang -g -S -emit-llvm --target=x86_64-unknown-unknown-elf test.c\n...\nand then run using lli, which uses the llvm jit:\n...\n$ lli test.ll\n...\n\nIf we run this under gdb, we run into an assert:\n...\n$ gdb -q -batch -ex run --args /usr/bin/lli test.ll\nDwarf Error: Cannot not find DIE at 0x18a936e7 \\\n  [from module libLLVM.so.10-10.0.1-lp152.30.4.x86_64.debug]\n\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib64/libthread_db.so.1\".\nsrc/gdb/jit.c:1178: internal-error: \\\n  void jit_event_handler(gdbarch*, objfile*): \\\n  Assertion `jiter->jiter_data != nullptr' failed.\n...\n\nThis is caused by the following.\n\nWhen running jit_breakpoint_re_set_internal, we first handle\nlibLLVM.so.10.debug, and set a jit breakpoint.\n\nNext we handle libLLVM.so.10:\n...\n(gdb) p the_objfile.original_name\n$42 = 0x2494170 \"libLLVM.so.10\"\n...\nbut the minimal symbols we find are from libLLVM.so.10.debug:\n...\n(gdb) p reg_symbol.objfile.original_name\n$43 = 0x38e7c50 \"libLLVM.so.10-10.0.1-lp152.30.4.x86_64.debug\"\n(gdb) p desc_symbol.objfile.original_name\n$44 = 0x38e7c50 \"libLLVM.so.10-10.0.1-lp152.30.4.x86_64.debug\"\n...\nand consequently, the objf_data is the one from libLLVM.so.10.debug:\n...\n      jiter_objfile_data *objf_data\n        = get_jiter_objfile_data (reg_symbol.objfile);\n...\nand so we hit this:\n...\n      if (objf_data->cached_code_address == addr)\n        continue;\n...\nand no second jit breakpoint is inserted.\n\nSubsequently, the jit breakpoint is triggered and handled, but when finding\nthe symbol for the breakpoint address we get:\n...\n(gdb) p jit_bp_sym.objfile.original_name\n$52 = 0x2494170 \"libLLVM.so.10\"\n...\n\nThe assert 'jiter->jiter_data != nullptr' triggers because it checks\nlibLLVM.so.10 while the one with jiter_data setup is libLLVM.so.10.debug.\n\nThis fixes the assert:\n...\n       jiter_objfile_data *objf_data\n-        = get_jiter_objfile_data (reg_symbol.objfile);\n-        = get_jiter_objfile_data (the_objfile);\n...\nbut consequently we'll have two jit breakpoints, so we also make sure we don't\nset a jit breakpoint on separate debug objects like libLLVM.so.10.debug.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2021-05-21  Tom de Vries  <tdevries@suse.de>\n\n\tPR breakpoint/27889\n\t* jit.c (jit_breakpoint_re_set_internal): Skip separate debug\n\tobjects.  Call get_jiter_objfile_data with the_objfile.",
    "tree": {
      "sha": "c1581d4527334aa88f174d3d7e311e82566d3533",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c1581d4527334aa88f174d3d7e311e82566d3533"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3b2bef8bbda8f43f4107d585361cf11492b72e70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b2bef8bbda8f43f4107d585361cf11492b72e70",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3b2bef8bbda8f43f4107d585361cf11492b72e70"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 11,
    "deletions": 1
  },
  "files": [
    {
      "sha": "f579a1561ca177d01a963e77be80f7c4f98c0fa5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR breakpoint/27889\n+\t* jit.c (jit_breakpoint_re_set_internal): Skip separate debug\n+\tobjects.  Call get_jiter_objfile_data with the_objfile.\n+\n 2021-05-20  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* linespec.c (linespec_p): Remove.  Replace all uses with"
    },
    {
      "sha": "be10f197fd69aa4fde5376a7ecb812bddbbab3d4",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d1a09b77a9ab52d9fc627b8f5eb952892c81f90/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=6d1a09b77a9ab52d9fc627b8f5eb952892c81f90",
      "patch": "@@ -807,6 +807,10 @@ jit_breakpoint_re_set_internal (struct gdbarch *gdbarch, program_space *pspace)\n {\n   for (objfile *the_objfile : pspace->objfiles ())\n     {\n+      /* Skip separate debug objects.  */\n+      if (the_objfile->separate_debug_objfile_backlink != nullptr)\n+\tcontinue;\n+\n       if (the_objfile->skip_jit_symbol_lookup)\n \tcontinue;\n \n@@ -833,7 +837,7 @@ jit_breakpoint_re_set_internal (struct gdbarch *gdbarch, program_space *pspace)\n \t}\n \n       jiter_objfile_data *objf_data\n-\t= get_jiter_objfile_data (reg_symbol.objfile);\n+\t= get_jiter_objfile_data (the_objfile);\n       objf_data->register_code = reg_symbol.minsym;\n       objf_data->descriptor = desc_symbol.minsym;\n "
    }
  ]
}