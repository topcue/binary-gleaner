{
  "sha": "0b5ec21882bcc27e93144882b84935497da6e7fe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGI1ZWMyMTg4MmJjYzI3ZTkzMTQ0ODgyYjg0OTM1NDk3ZGE2ZTdmZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-26T21:44:51Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:18:53Z"
    },
    "message": "Introduce tui_data_window::last_regs_line_no method\n\nThis changes tui_last_regs_line_no into a method on tui_data_window,\nallowing the removal of uses of the TUI_DATA_WIN global.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (tui_last_regs_line_no): Don't declare.\n\t* tui/tui-regs.c (tui_data_window::last_regs_line_no): Rename from\n\ttui_last_regs_line_no.\n\t(tui_display_reg_element_at_line)\n\t(tui_display_registers_from_line): Update.\n\t* tui/tui-data.h (struct tui_data_window) <last_regs_line_no>: New\n\tmethod.",
    "tree": {
      "sha": "12d45778eaac85d03d3f0b5e60e4a78241ff4ee1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12d45778eaac85d03d3f0b5e60e4a78241ff4ee1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0b5ec21882bcc27e93144882b84935497da6e7fe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b5ec21882bcc27e93144882b84935497da6e7fe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0b5ec21882bcc27e93144882b84935497da6e7fe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b5ec21882bcc27e93144882b84935497da6e7fe/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0807ab7b88fa5ffb138ba1ee22b33d26e239de2f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0807ab7b88fa5ffb138ba1ee22b33d26e239de2f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0807ab7b88fa5ffb138ba1ee22b33d26e239de2f"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 22,
    "deletions": 10
  },
  "files": [
    {
      "sha": "b63b9e9f694a999809587581c9c35769ffe8fc68",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0b5ec21882bcc27e93144882b84935497da6e7fe",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (tui_last_regs_line_no): Don't declare.\n+\t* tui/tui-regs.c (tui_data_window::last_regs_line_no): Rename from\n+\ttui_last_regs_line_no.\n+\t(tui_display_reg_element_at_line)\n+\t(tui_display_registers_from_line): Update.\n+\t* tui/tui-data.h (struct tui_data_window) <last_regs_line_no>: New\n+\tmethod.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \tPR tui/24722:"
    },
    {
      "sha": "9b1e892aefe0f67c972368cadb9df2391d787fd5",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=0b5ec21882bcc27e93144882b84935497da6e7fe",
      "patch": "@@ -490,6 +490,10 @@ struct tui_data_window : public tui_win_info\n   bool display_regs = false;\n   struct reggroup *current_group = nullptr;\n \n+  /* Answer the number of the last line in the regs display.  If there\n+     are no registers (-1) is returned.  */\n+  int last_regs_line_no () const;\n+\n protected:\n \n   void do_scroll_vertical (int num_to_scroll) override;"
    },
    {
      "sha": "e9fbf4b07522fd1bcd5fba43a789b7e3cb7d2009",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=0b5ec21882bcc27e93144882b84935497da6e7fe",
      "patch": "@@ -63,18 +63,17 @@ static enum tui_status tui_get_register (struct frame_info *frame,\n ** PUBLIC FUNCTIONS                     **\n ******************************************/\n \n-/* Answer the number of the last line in the regs display.  If there\n-   are no registers (-1) is returned.  */\n+/* See tui-data.h.  */\n+\n int\n-tui_last_regs_line_no (void)\n+tui_data_window::last_regs_line_no () const\n {\n   int num_lines = (-1);\n \n-  if (!TUI_DATA_WIN->regs_content.empty ())\n+  if (!regs_content.empty ())\n     {\n-      num_lines = (TUI_DATA_WIN->regs_content.size ()\n-\t\t   / TUI_DATA_WIN->regs_column_count);\n-      if (TUI_DATA_WIN->regs_content.size () % TUI_DATA_WIN->regs_column_count)\n+      num_lines = regs_content.size () / regs_column_count;\n+      if (regs_content.size () % regs_column_count)\n \tnum_lines++;\n     }\n   return num_lines;\n@@ -354,7 +353,7 @@ tui_display_reg_element_at_line (int start_element_no,\n \t{\n \t  int last_line_no, first_line_on_last_page;\n \n-\t  last_line_no = tui_last_regs_line_no ();\n+\t  last_line_no = TUI_DATA_WIN->last_regs_line_no ();\n \t  first_line_on_last_page\n \t    = last_line_no - (TUI_DATA_WIN->height - 2);\n \t  if (first_line_on_last_page < 0)\n@@ -390,7 +389,7 @@ tui_display_registers_from_line (int line_no,\n \t{ /* If we must display regs (force_display is true), then\n \t     make sure that we don't display off the end of the\n \t     registers.  */\n-\t  if (line_no >= tui_last_regs_line_no ())\n+\t  if (line_no >= TUI_DATA_WIN->last_regs_line_no ())\n \t    {\n \t      if ((line = tui_line_from_reg_element_no (\n \t\t TUI_DATA_WIN->regs_content.size () - 1)) < 0)"
    },
    {
      "sha": "fcb440dcf1134320d49aab12adf3c1183bbbceb8",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0b5ec21882bcc27e93144882b84935497da6e7fe/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=0b5ec21882bcc27e93144882b84935497da6e7fe",
      "patch": "@@ -28,7 +28,6 @@ extern void tui_check_register_values (struct frame_info *);\n extern void tui_show_registers (struct reggroup *group);\n extern void tui_display_registers_from (int);\n extern int tui_display_registers_from_line (int, int);\n-extern int tui_last_regs_line_no (void);\n extern int tui_first_reg_element_inline (int);\n extern int tui_line_from_reg_element_no (int);\n extern int tui_first_reg_element_no_inline (int lineno);"
    }
  ]
}