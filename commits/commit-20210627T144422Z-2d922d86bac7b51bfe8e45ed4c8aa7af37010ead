{
  "sha": "2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmQ5MjJkODZiYWM3YjUxYmZlOGU0NWVkNGM4YWE3YWYzNzAxMGVhZA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-27T02:29:35Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-27T14:44:22Z"
    },
    "message": "sim: cgen: always leverage the mem prototypes\n\nThis fixes missing prototype warnings, and guarantees the prototypes\nstay in sync with the function definitions.  One of the macros had\nfallen out by declaring the wrong return type.",
    "tree": {
      "sha": "07fc8570b578d2cf71458d3d1f3bd88b05f2920d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07fc8570b578d2cf71458d3d1f3bd88b05f2920d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "694d6fdba114b7e4b1749a4575303625efb98fe3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/694d6fdba114b7e4b1749a4575303625efb98fe3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/694d6fdba114b7e4b1749a4575303625efb98fe3"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 55,
    "deletions": 14
  },
  "files": [
    {
      "sha": "b0c3cb17d060121089566e6ed9a2c03042057b1e",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
      "patch": "@@ -1,3 +1,16 @@\n+2021-06-27  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* cgen-mem.h (DECLARE_GETMEM_EXTERN): New macro.\n+\t(DECLARE_GETMEM): Use DECLARE_GETMEM_EXTERN.\n+\t(DECLARE_SETMEM_EXTERN): New macro.\n+\t(DECLARE_SETMEM): Use DECLARE_SETMEM_EXTERN.\n+\t(DECLARE_GETIMEM_EXTERN): New macro.\n+\t(DECLARE_GETIMEM): Use DECLARE_GETIMEM_EXTERN.\n+\t(DECLARE_GETT_EXTERN): New macro.\n+\t(DECLARE_GETT): Use DECLARE_GETT_EXTERN.\n+\t(DECLARE_SETT_EXTERN): New macro.\n+\t(DECLARE_SETT): Use DECLARE_SETT_EXTERN.\n+\n 2021-06-27  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cgen-ops.h: Move prototype blocks before function definitions."
    },
    {
      "sha": "deb3cc091c6690490108425360b5de5dee7d9db7",
      "filename": "sim/common/cgen-mem.h",
      "status": "modified",
      "additions": 42,
      "deletions": 14,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead/sim/common/cgen-mem.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2d922d86bac7b51bfe8e45ed4c8aa7af37010ead/sim/common/cgen-mem.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/cgen-mem.h?ref=2d922d86bac7b51bfe8e45ed4c8aa7af37010ead",
      "patch": "@@ -33,8 +33,12 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n    floating point modes, only floating point operations (whose arguments\n    and results are arrays of bits that we treat as integer modes).  */\n \n+#define DECLARE_GETMEM_EXTERN(mode, size) \\\n+extern mode XCONCAT2 (GETMEM,mode) (SIM_CPU *, IADDR, ADDR);\n+\n #if defined (__GNUC__) || defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_GETMEM(mode, size) \\\n+DECLARE_GETMEM_EXTERN (mode, size) \\\n MEMOPS_INLINE mode \\\n XCONCAT2 (GETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a) \\\n { \\\n@@ -43,8 +47,7 @@ XCONCAT2 (GETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a) \\\n   return XCONCAT2 (sim_core_read_unaligned_,size) (cpu, pc, read_map, a); \\\n }\n #else\n-#define DECLARE_GETMEM(mode, size) \\\n-extern mode XCONCAT2 (GETMEM,mode) (SIM_CPU *, IADDR, ADDR);\n+#define DECLARE_GETMEM(mode, size) DECLARE_GETMEM_EXTERN (mode, size)\n #endif\n \n DECLARE_GETMEM (QI, 1)  /* TAGS: GETMEMQI */\n@@ -57,11 +60,16 @@ DECLARE_GETMEM (DI, 8)  /* TAGS: GETMEMDI */\n DECLARE_GETMEM (UDI, 8) /* TAGS: GETMEMUDI */\n \n #undef DECLARE_GETMEM\n+#undef DECLARE_GETMEM_EXTERN\n \f\n /* Integer memory write support.  */\n \n+#define DECLARE_SETMEM_EXTERN(mode, size) \\\n+extern void XCONCAT2 (SETMEM,mode) (SIM_CPU *, IADDR, ADDR, mode);\n+\n #if defined (__GNUC__) || defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_SETMEM(mode, size) \\\n+DECLARE_SETMEM_EXTERN (mode, size) \\\n MEMOPS_INLINE void \\\n XCONCAT2 (SETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a, mode val) \\\n { \\\n@@ -70,8 +78,7 @@ XCONCAT2 (SETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a, mode val) \\\n   XCONCAT2 (sim_core_write_unaligned_,size) (cpu, pc, write_map, a, val); \\\n }\n #else\n-#define DECLARE_SETMEM(mode, size) \\\n-extern void XCONCAT2 (SETMEM,mode) (SIM_CPU *, IADDR, ADDR, mode);\n+#define DECLARE_SETMEM(mode, size) DECLARE_SETMEM_EXTERN (mode, size)\n #endif\n \n DECLARE_SETMEM (QI, 1)  /* TAGS: SETMEMQI */\n@@ -84,11 +91,16 @@ DECLARE_SETMEM (DI, 8)  /* TAGS: SETMEMDI */\n DECLARE_SETMEM (UDI, 8) /* TAGS: SETMEMUDI */\n \n #undef DECLARE_SETMEM\n+#undef DECLARE_SETMEM_EXTERN\n \f\n /* Instruction read support.  */\n \n+#define DECLARE_GETIMEM_EXTERN(mode, size) \\\n+extern mode XCONCAT2 (GETIMEM,mode) (SIM_CPU *, ADDR);\n+\n #if defined (__GNUC__) || defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_GETIMEM(mode, size) \\\n+DECLARE_GETIMEM_EXTERN (mode, size) \\\n MEMOPS_INLINE mode \\\n XCONCAT2 (GETIMEM,mode) (SIM_CPU *cpu, IADDR a) \\\n { \\\n@@ -97,8 +109,7 @@ XCONCAT2 (GETIMEM,mode) (SIM_CPU *cpu, IADDR a) \\\n   return XCONCAT2 (sim_core_read_unaligned_,size) (cpu, a, exec_map, a); \\\n }\n #else\n-#define DECLARE_GETIMEM(mode, size) \\\n-extern mode XCONCAT2 (GETIMEM,mode) (SIM_CPU *, ADDR);\n+#define DECLARE_GETIMEM(mode, size) DECLARE_GETIMEM_EXTERN (mode, size)\n #endif\n \n DECLARE_GETIMEM (UQI, 1) /* TAGS: GETIMEMUQI */\n@@ -107,6 +118,7 @@ DECLARE_GETIMEM (USI, 4) /* TAGS: GETIMEMUSI */\n DECLARE_GETIMEM (UDI, 8) /* TAGS: GETIMEMUDI */\n \n #undef DECLARE_GETIMEM\n+#undef DECLARE_GETIMEM_EXTERN\n \f\n /* Floating point support.\n \n@@ -118,8 +130,12 @@ DECLARE_GETIMEM (UDI, 8) /* TAGS: GETIMEMUDI */\n    that's a complication of its own (not that having these fns isn't).\n    But for now, we do things this way.  */\n \n+#define DECLARE_GETMEM_EXTERN(mode, size) \\\n+extern mode XCONCAT2 (GETMEM,mode) (SIM_CPU *, IADDR, ADDR);\n+\n #if defined (__GNUC__) || defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_GETMEM(mode, size) \\\n+DECLARE_GETMEM_EXTERN (mode, size) \\\n MEMOPS_INLINE mode \\\n XCONCAT2 (GETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a) \\\n { \\\n@@ -128,17 +144,21 @@ XCONCAT2 (GETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a) \\\n   return XCONCAT2 (sim_core_read_unaligned_,size) (cpu, pc, read_map, a); \\\n }\n #else\n-#define DECLARE_GETMEM(mode, size) \\\n-extern mode XCONCAT2 (GETMEM,mode) (SIM_CPU *, IADDR, ADDR);\n+#define DECLARE_GETMEM(mode, size) DECLARE_GETMEM_EXTERN (mode, size)\n #endif\n \n DECLARE_GETMEM (SF, 4) /* TAGS: GETMEMSF */\n DECLARE_GETMEM (DF, 8) /* TAGS: GETMEMDF */\n \n #undef DECLARE_GETMEM\n+#undef DECLARE_GETMEM_EXTERN\n+\n+#define DECLARE_SETMEM_EXTERN(mode, size) \\\n+extern void XCONCAT2 (SETMEM,mode) (SIM_CPU *, IADDR, ADDR, mode);\n \n #if defined (__GNUC__) || defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_SETMEM(mode, size) \\\n+DECLARE_SETMEM_EXTERN (mode, size) \\\n MEMOPS_INLINE void \\\n XCONCAT2 (SETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a, mode val) \\\n { \\\n@@ -147,21 +167,25 @@ XCONCAT2 (SETMEM,mode) (SIM_CPU *cpu, IADDR pc, ADDR a, mode val) \\\n   XCONCAT2 (sim_core_write_unaligned_,size) (cpu, pc, write_map, a, val); \\\n }\n #else\n-#define DECLARE_SETMEM(mode, size) \\\n-extern void XCONCAT2 (SETMEM,mode) (SIM_CPU *, IADDR, ADDR, mode);\n+#define DECLARE_SETMEM(mode, size) DECLARE_SETMEM_EXTERN (mode, size\n #endif\n \n DECLARE_SETMEM (SF, 4) /* TAGS: SETMEMSF */\n DECLARE_SETMEM (DF, 8) /* TAGS: SETMEMDF */\n \n #undef DECLARE_SETMEM\n+#undef DECLARE_SETMEM_EXTERN\n \f\n /* GETT<mode>: translate target value at P to host value.\n    This needn't be very efficient (i.e. can call memcpy) as this is\n    only used when interfacing with the outside world (e.g. gdb).  */\n \n+#define DECLARE_GETT_EXTERN(mode, size) \\\n+extern mode XCONCAT2 (GETT,mode) (unsigned char *);\n+\n #if defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_GETT(mode, size) \\\n+DECLARE_GETT_EXTERN (mode, size) \\\n mode \\\n XCONCAT2 (GETT,mode) (unsigned char *p) \\\n { \\\n@@ -170,8 +194,7 @@ XCONCAT2 (GETT,mode) (unsigned char *p) \\\n   return XCONCAT2 (T2H_,size) (tmp); \\\n }\n #else\n-#define DECLARE_GETT(mode, size) \\\n-extern mode XCONCAT2 (GETT,mode) (unsigned char *);\n+#define DECLARE_GETT(mode, size) DECLARE_GETT_EXTERN (mode, size)\n #endif\n \n DECLARE_GETT (QI, 1)  /* TAGS: GETTQI */\n@@ -190,13 +213,18 @@ DECLARE_GETT (TF, 16) /* TAGS: GETTTF */\n #endif\n \n #undef DECLARE_GETT\n+#undef DECLARE_GETT_EXTERN\n \f\n /* SETT<mode>: translate host value to target value and store at P.\n    This needn't be very efficient (i.e. can call memcpy) as this is\n    only used when interfacing with the outside world (e.g. gdb).  */\n \n+#define DECLARE_SETT_EXTERN(mode, size) \\\n+extern void XCONCAT2 (SETT,mode) (unsigned char *, mode);\n+\n #if defined (MEMOPS_DEFINE_INLINE)\n #define DECLARE_SETT(mode, size) \\\n+DECLARE_SETT_EXTERN (mode, size) \\\n void \\\n XCONCAT2 (SETT,mode) (unsigned char *buf, mode val) \\\n { \\\n@@ -205,8 +233,7 @@ XCONCAT2 (SETT,mode) (unsigned char *buf, mode val) \\\n   memcpy (buf, &tmp, sizeof (mode)); \\\n }\n #else\n-#define DECLARE_SETT(mode, size) \\\n-extern mode XCONCAT2 (SETT,mode) (unsigned char *, mode);\n+#define DECLARE_SETT(mode, size) DECLARE_SETT_EXTERN (mode, size)\n #endif\n \n DECLARE_SETT (QI, 1)  /* TAGS: SETTQI */\n@@ -225,5 +252,6 @@ DECLARE_SETT (TF, 16) /* TAGS: SETTTF */\n #endif\n \n #undef DECLARE_SETT\n+#undef DECLARE_SETT_EXTERN\n \n #endif /* CGEN_MEM_H */"
    }
  ]
}