{
  "sha": "b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1",
  "node_id": "C_kwDOANOeidoAKGI0ZTQzODZhMmU1OGJhNmNlOGQwMmI5NTJmMWJjNmNlYjhmYzk1ZDE",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T10:39:14Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-24T10:39:14Z"
    },
    "message": "[gdb/testsuite] Add gdb.testsuite/dump-system-info.exp\n\nWhen interpreting the testsuite results, it's often relevant what kind of\nmachine the testsuite ran on.  On a local machine one can just do\n/proc/cpuinfo, but in case of running tests using a remote system\nthat distributes test runs to other remote systems that are not directly\naccessible, that's not possible.\n\nFix this by dumping /proc/cpuinfo into the gdb.log, as well as lsb_release -a\nand uname -a.\n\nWe could do this at the start of each test run, by putting it into unix.exp\nor some such.  However, this might be too verbose, so we choose to put it into\nits own test-case, such that it get triggered in a full testrun, but not when\nrunning one or a subset of tests.\n\nWe put the test-case into the gdb.testsuite directory, which is currently the\nonly place in the testsuite where we do not test gdb.   [ Though perhaps this\ncould be put into a new gdb.info directory, since the test-case doesn't\nactually test the testsuite. ]\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "8a6988f138507986f935085bbe06c6ef7692ae73",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8a6988f138507986f935085bbe06c6ef7692ae73"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3814a9e1fe77c01c7e872c25afa198537d4ac780",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3814a9e1fe77c01c7e872c25afa198537d4ac780",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3814a9e1fe77c01c7e872c25afa198537d4ac780"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 48,
    "deletions": 0
  },
  "files": [
    {
      "sha": "bf181469bd516b2c2205ae3a2f71664a329c3ffe",
      "filename": "gdb/testsuite/gdb.testsuite/dump-system-info.exp",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1/gdb/testsuite/gdb.testsuite/dump-system-info.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1/gdb/testsuite/gdb.testsuite/dump-system-info.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.testsuite/dump-system-info.exp?ref=b4e4386a2e58ba6ce8d02b952f1bc6ceb8fc95d1",
      "patch": "@@ -0,0 +1,48 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# The purpose of this test-case is to dump /proc/cpuinfo and similar system\n+# info into gdb.log.\n+\n+# Check if /proc/cpuinfo is available.\n+set res [remote_exec target \"test -r /proc/cpuinfo\"]\n+set status [lindex $res 0]\n+set output [lindex $res 1]\n+\n+if { $status == 0 && $output == \"\" } {\n+    verbose -log \"Cpuinfo available, dumping:\"\n+    remote_exec target \"cat /proc/cpuinfo\"\n+} else {\n+    verbose -log \"Cpuinfo not available\"\n+}\n+\n+set res [remote_exec target \"lsb_release -a\"]\n+set status [lindex $res 0]\n+set output [lindex $res 1]\n+\n+if { $status == 0 } {\n+    verbose -log \"lsb_release -a availabe, dumping:\\n$output\"\n+} else {\n+    verbose -log \"lsb_release -a not available\"\n+}\n+\n+set res [remote_exec target \"uname -a\"]\n+set status [lindex $res 0]\n+set output [lindex $res 1]\n+\n+if { $status == 0 } {\n+    verbose -log \"uname -a availabe, dumping:\\n$output\"\n+} else {\n+    verbose -log \"uname -a not available\"\n+}"
    }
  ]
}