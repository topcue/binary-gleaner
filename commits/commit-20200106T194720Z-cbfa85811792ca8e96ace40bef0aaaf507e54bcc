{
  "sha": "cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2JmYTg1ODExNzkyY2E4ZTk2YWNlNDBiZWYwYWFhZjUwN2U1NGJjYw==",
  "commit": {
    "author": {
      "name": "Shahab Vahedi",
      "email": "shahab@synopsys.com",
      "date": "2020-01-06T14:27:32Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-06T19:47:20Z"
    },
    "message": "GDB: Fix the overflow in addr/line_is_displayed()\n\nIn tui_disasm_window::addr_is_displayed(), there can be situations\nwhere \"content\" is empty. For instance, it can happen when the\n\"content\" was not filled in tui_disasm_window::set_contents(),\nbecause tui_disassemble() threw an exception. Usually this exception\nis the result of fetching invalid PC addresses like the ones beyond\nthe end of the program.\n\nHaving \"content.size ()\" zero leads to an overflow in this condition\ncheck inside tui_disasm_window::addr_is_displayed():\n\n  int i = 0;\n  while (i < content.size () - threshold ...) {\n    ... content[i] ...\n  }\n\n\"threshold\" is 2 and there are times that \"content.size ()\" is 0.\nThis results into an overflow and the loop is entered whereas it\nshould have been skipped. Finally, \"content[i]\" access leads to\na segmentation fault.\n\nSame problem applies to tui_source_window::line_is_displayed().\n\nThe issue has been discussed at length in bug 25345:\n  https://sourceware.org/bugzilla/show_bug.cgi?id=25345\n\nThis commit avoids the segmentation faults with an early check:\n\n  if (content.size () < SCROLL_THRESHOLD)\n    return false;\n\nMoreover, those functions have been overhauled to a leaner code.\n\ngdb/ChangeLog:\n2020-01-06  Shahab Vahedi  <shahab@synopsys.com>\n\n\t* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): Avoid\n\toverflow by an early check of content vs threshold.\n        * tui/tui-source.c (tui_source_window::line_is_displayed):\n\tLikewise.",
    "tree": {
      "sha": "6cb59c31bf71bc95e6212e74ca32b475a62acc88",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6cb59c31bf71bc95e6212e74ca32b475a62acc88"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/comments",
  "author": null,
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3f6028216b1df14a299a9cd89b1149258c024d4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3f6028216b1df14a299a9cd89b1149258c024d4f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3f6028216b1df14a299a9cd89b1149258c024d4f"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 22,
    "deletions": 18
  },
  "files": [
    {
      "sha": "476712e6cba33a169c174809d08b2f07f5bd667f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
      "patch": "@@ -1,3 +1,10 @@\n+2020-01-06  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* tui/tui-disasm.c (tui_disasm_window::addr_is_displayed): Avoid\n+\toverflow by an early check of content vs threshold.\n+        * tui/tui-source.c (tui_source_window::line_is_displayed):\n+\tLikewise.\n+\n 2020-01-06  Eli Zaretskii  <eliz@gnu.org>\n \n \t* NEWS: Mention the recent fix of $_exitsignal on MS-Windows."
    },
    {
      "sha": "98c691f3387766610d17e7d8ce99c89d450e05c2",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
      "patch": "@@ -348,19 +348,17 @@ tui_disasm_window::location_matches_p (struct bp_location *loc, int line_no)\n bool\n tui_disasm_window::addr_is_displayed (CORE_ADDR addr) const\n {\n-  bool is_displayed = false;\n-  int threshold = SCROLL_THRESHOLD;\n+  if (content.size () < SCROLL_THRESHOLD)\n+    return false;\n \n-  int i = 0;\n-  while (i < content.size () - threshold && !is_displayed)\n+  for (size_t i = 0; i < content.size () - SCROLL_THRESHOLD; ++i)\n     {\n-      is_displayed\n-\t= (content[i].line_or_addr.loa == LOA_ADDRESS\n-\t   && content[i].line_or_addr.u.addr == addr);\n-      i++;\n+      if (content[i].line_or_addr.loa == LOA_ADDRESS\n+\t  && content[i].line_or_addr.u.addr == addr)\n+\treturn true;\n     }\n \n-  return is_displayed;\n+  return false;\n }\n \n void"
    },
    {
      "sha": "1503cd4c63608f3db23965e36488280e5a4762da",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 8,
      "deletions": 9,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cbfa85811792ca8e96ace40bef0aaaf507e54bcc/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=cbfa85811792ca8e96ace40bef0aaaf507e54bcc",
      "patch": "@@ -174,18 +174,17 @@ tui_source_window::location_matches_p (struct bp_location *loc, int line_no)\n bool\n tui_source_window::line_is_displayed (int line) const\n {\n-  bool is_displayed = false;\n-  int threshold = SCROLL_THRESHOLD;\n-  int i = 0;\n-  while (i < content.size () - threshold && !is_displayed)\n+  if (content.size () < SCROLL_THRESHOLD)\n+    return false;\n+\n+  for (size_t i = 0; i < content.size () - SCROLL_THRESHOLD; ++i)\n     {\n-      is_displayed\n-\t= (content[i].line_or_addr.loa == LOA_LINE\n-\t   && content[i].line_or_addr.u.line_no == line);\n-      i++;\n+      if (content[i].line_or_addr.loa == LOA_LINE\n+\t  && content[i].line_or_addr.u.line_no == line)\n+\treturn true;\n     }\n \n-  return is_displayed;\n+  return false;\n }\n \n void"
    }
  ]
}