{
  "sha": "68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njg4MTFmOGZmODQ4OTVlZjFjYWQzN2FjNjk0N2YxYTM0MGRkMmFlMg==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-10T14:58:27Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-11T08:51:07Z"
    },
    "message": "AArch64: Ensure regcache is reset between tests\n\nA recent change made the AArch64 self tests resuse the saved regs\ncache, rather than creating a new one.  Ensure it is reset to default\nvalues between tests.\n\nDo this by splitting the reset functionality from trad_frame_alloc_saved_regs\ninto a new function.\n\nFixes selftest on AArch64.\n\ngdb/ChangeLog:\n\n\t* aarch64-tdep.c (aarch64_analyze_prologue_test): Reset saved regs.\n\t* trad-frame.c (trad_frame_reset_saved_regs): New function.\n\t(trad_frame_alloc_saved_regs): Call trad_frame_reset_saved_regs.\n\t* trad-frame.h (trad_frame_reset_saved_regs): New declaration.",
    "tree": {
      "sha": "11d0455129367a4550515a1ab977366e482e2606",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/11d0455129367a4550515a1ab977366e482e2606"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "795e3bb7de9ce2eb1ec3de3faf8f6bc925a58c9e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/795e3bb7de9ce2eb1ec3de3faf8f6bc925a58c9e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/795e3bb7de9ce2eb1ec3de3faf8f6bc925a58c9e"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 27,
    "deletions": 6
  },
  "files": [
    {
      "sha": "a5cbc89972982eeadddb087101d8ea39bbc1626c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-11  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* aarch64-tdep.c (aarch64_analyze_prologue_test): Reset saved regs.\n+\t* trad-frame.c (trad_frame_reset_saved_regs): New function.\n+\t(trad_frame_alloc_saved_regs): Call trad_frame_reset_saved_regs.\n+\t* trad-frame.h (trad_frame_reset_saved_regs): New declaration.\n+\n 2019-04-10  Kevin Buettner  <kevinb@redhat.com>\n \n \t* amd64-linux-nat.c (amd64_linux_collect_native_gregset): New"
    },
    {
      "sha": "1b3977bfaf2095ec380ca711806cb82d301e193b",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
      "patch": "@@ -665,6 +665,7 @@ aarch64_analyze_prologue_test (void)\n     };\n     instruction_reader_test reader (insns);\n \n+    trad_frame_reset_saved_regs (gdbarch, cache.saved_regs);\n     CORE_ADDR end = aarch64_analyze_prologue (gdbarch, 0, 128, &cache, reader);\n \n     SELF_CHECK (end == 4 * 5);\n@@ -707,6 +708,7 @@ aarch64_analyze_prologue_test (void)\n       };\n       instruction_reader_test reader (insns);\n \n+      trad_frame_reset_saved_regs (gdbarch, cache.saved_regs);\n       CORE_ADDR end = aarch64_analyze_prologue (gdbarch, 0, 128, &cache,\n \t\t\t\t\t\treader);\n "
    },
    {
      "sha": "d9114753c5e2ba9ab00e9f188bdccc7bdfae43a2",
      "filename": "gdb/trad-frame.c",
      "status": "modified",
      "additions": 15,
      "deletions": 6,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/trad-frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/trad-frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/trad-frame.c?ref=68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
      "patch": "@@ -44,19 +44,28 @@ trad_frame_cache_zalloc (struct frame_info *this_frame)\n   return this_trad_cache;\n }\n \n+/* See trad-frame.h.  */\n+\n+void\n+trad_frame_reset_saved_regs (struct gdbarch *gdbarch,\n+\t\t\t     struct trad_frame_saved_reg *regs)\n+{\n+  int numregs = gdbarch_num_cooked_regs (gdbarch);\n+  for (int regnum = 0; regnum < numregs; regnum++)\n+    {\n+      regs[regnum].realreg = regnum;\n+      regs[regnum].addr = -1;\n+    }\n+}\n+\n struct trad_frame_saved_reg *\n trad_frame_alloc_saved_regs (struct gdbarch *gdbarch)\n {\n-  int regnum;\n   int numregs = gdbarch_num_cooked_regs (gdbarch);\n   struct trad_frame_saved_reg *this_saved_regs\n     = FRAME_OBSTACK_CALLOC (numregs, struct trad_frame_saved_reg);\n \n-  for (regnum = 0; regnum < numregs; regnum++)\n-    {\n-      this_saved_regs[regnum].realreg = regnum;\n-      this_saved_regs[regnum].addr = -1;\n-    }      \n+  trad_frame_reset_saved_regs (gdbarch, this_saved_regs);\n   return this_saved_regs;\n }\n "
    },
    {
      "sha": "f947e586a132d019aa6be42b79211e104b82bdb0",
      "filename": "gdb/trad-frame.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/trad-frame.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/68811f8ff84895ef1cad37ac6947f1a340dd2ae2/gdb/trad-frame.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/trad-frame.h?ref=68811f8ff84895ef1cad37ac6947f1a340dd2ae2",
      "patch": "@@ -113,6 +113,9 @@ int trad_frame_addr_p (struct trad_frame_saved_reg this_saved_regs[],\n int trad_frame_realreg_p (struct trad_frame_saved_reg this_saved_regs[],\n \t\t\t  int regnum);\n \n+/* Reset the save regs cache, setting register values to -1.  */\n+void trad_frame_reset_saved_regs (struct gdbarch *gdbarch,\n+\t\t\t\t  struct trad_frame_saved_reg *regs);\n \n /* Return a freshly allocated (and initialized) trad_frame array.  */\n struct trad_frame_saved_reg *trad_frame_alloc_saved_regs (struct frame_info *);"
    }
  ]
}