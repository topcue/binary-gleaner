{
  "sha": "929f3aa7425dde2626bdf5b23277aee62ec75129",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTI5ZjNhYTc0MjVkZGUyNjI2YmRmNWIyMzI3N2FlZTYyZWM3NTEyOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:22Z"
    },
    "message": "Introduce typeid_operation\n\nThis adds class typeid_operation, which implements OP_TYPEID.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expop.h (class typeid_operation): New.",
    "tree": {
      "sha": "f6c00a8852886827bfa4f493dcfc1179dc0c9558",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f6c00a8852886827bfa4f493dcfc1179dc0c9558"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/929f3aa7425dde2626bdf5b23277aee62ec75129",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/929f3aa7425dde2626bdf5b23277aee62ec75129",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/929f3aa7425dde2626bdf5b23277aee62ec75129",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/929f3aa7425dde2626bdf5b23277aee62ec75129/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0af8829eb1aea4fa72f1a0a2c7c749c411c8ed41"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 33,
    "deletions": 0
  },
  "files": [
    {
      "sha": "fb0eea2ee86c72a7330e093c7926d042b94f41f6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/929f3aa7425dde2626bdf5b23277aee62ec75129/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/929f3aa7425dde2626bdf5b23277aee62ec75129/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=929f3aa7425dde2626bdf5b23277aee62ec75129",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expop.h (class typeid_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (class decltype_operation): New."
    },
    {
      "sha": "804f51654b21a5e36656ea2401f32cf33a953deb",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/929f3aa7425dde2626bdf5b23277aee62ec75129/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/929f3aa7425dde2626bdf5b23277aee62ec75129/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=929f3aa7425dde2626bdf5b23277aee62ec75129",
      "patch": "@@ -1517,6 +1517,35 @@ class decltype_operation\n   { return OP_DECLTYPE; }\n };\n \n+/* Implement 'typeid'.  */\n+class typeid_operation\n+  : public tuple_holding_operation<operation_up>\n+{\n+public:\n+\n+  using tuple_holding_operation::tuple_holding_operation;\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    enum exp_opcode sub_op = std::get<0> (m_storage)->opcode ();\n+    enum noside sub_noside\n+      = ((sub_op == OP_TYPE || sub_op == OP_DECLTYPE || sub_op == OP_TYPEOF)\n+\t ? EVAL_AVOID_SIDE_EFFECTS\n+\t : noside);\n+\n+    value *result = std::get<0> (m_storage)->evaluate (nullptr, exp,\n+\t\t\t\t\t\t       sub_noside);\n+    if (noside != EVAL_NORMAL)\n+      return allocate_value (cplus_typeid_type (exp->gdbarch));\n+    return cplus_typeid (result);\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return OP_TYPEID; }\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    }
  ]
}