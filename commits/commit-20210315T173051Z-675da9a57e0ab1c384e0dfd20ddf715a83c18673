{
  "sha": "675da9a57e0ab1c384e0dfd20ddf715a83c18673",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njc1ZGE5YTU3ZTBhYjFjMzg0ZTBkZmQyMGRkZjcxNWE4M2MxODY3Mw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T14:59:17Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T17:30:51Z"
    },
    "message": "Fix GDB build with GCC 4.8.2\n\nPR build/27579 points out that the expression rewrite series\nintroduced a build failure with GCC 4.8.2.  The bug is that there's no\nstd::hash specialization for enum exp_opcode.  This patch fixes the\nproblem by using gdb::hash_enum.\n\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\tPR build/27579:\n\t* rust-exp.y (maker_map): Use gdb::hash_enum.\n\t* stap-probe.c (stap_maker_map): Use gdb::hash_enum.",
    "tree": {
      "sha": "6de259cf85f6c945919c93b079a5b04a6675f631",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6de259cf85f6c945919c93b079a5b04a6675f631"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/675da9a57e0ab1c384e0dfd20ddf715a83c18673",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/675da9a57e0ab1c384e0dfd20ddf715a83c18673",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/675da9a57e0ab1c384e0dfd20ddf715a83c18673",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/675da9a57e0ab1c384e0dfd20ddf715a83c18673/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4800761a71cf4eb1024ab586385be4832d62aabb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4800761a71cf4eb1024ab586385be4832d62aabb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4800761a71cf4eb1024ab586385be4832d62aabb"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 12,
    "deletions": 2
  },
  "files": [
    {
      "sha": "0ac6b29443e37015621812722e6b0e53a072cb50",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=675da9a57e0ab1c384e0dfd20ddf715a83c18673",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR build/27579:\n+\t* rust-exp.y (maker_map): Use gdb::hash_enum.\n+\t* stap-probe.c (stap_maker_map): Use gdb::hash_enum.\n+\n 2021-03-15  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.c (create_debug_type_hash_table): Remove colon at"
    },
    {
      "sha": "0400340988757ef24a7102712261420c2536948b",
      "filename": "gdb/rust-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/rust-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/rust-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-exp.y?ref=675da9a57e0ab1c384e0dfd20ddf715a83c18673",
      "patch": "@@ -43,6 +43,7 @@\n #include \"gdbarch.h\"\n #include \"rust-exp.h\"\n #include <unordered_map>\n+#include \"gdbsupport/hash_enum.h\"\n \n #define GDB_YY_REMAP_PREFIX rust\n #include \"yy-remap.h\"\n@@ -2202,7 +2203,8 @@ typedef expr::operation_up binop_maker_ftype (expr::operation_up &&,\n /* Map from an expression opcode to a function that will create an\n    instance of the appropriate operation subclass.  Only binary\n    operations are handled this way.  */\n-static std::unordered_map<exp_opcode, binop_maker_ftype *> maker_map;\n+static std::unordered_map<exp_opcode, binop_maker_ftype *,\n+\t\t\t  gdb::hash_enum<exp_opcode>> maker_map;\n \n /* Lower a rust_op to a gdb expression.  STATE is the parser state.\n    OPERATION is the operation to lower.  TOP is a pointer to the"
    },
    {
      "sha": "7f6d98a8ef2195e2133e63511df2e4d325558d79",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/675da9a57e0ab1c384e0dfd20ddf715a83c18673/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=675da9a57e0ab1c384e0dfd20ddf715a83c18673",
      "patch": "@@ -38,6 +38,7 @@\n #include \"elf-bfd.h\"\n #include \"expop.h\"\n #include <unordered_map>\n+#include \"gdbsupport/hash_enum.h\"\n \n #include <ctype.h>\n \n@@ -436,7 +437,8 @@ typedef expr::operation_up binop_maker_ftype (expr::operation_up &&,\n \t\t\t\t\t      expr::operation_up &&);\n /* Map from an expression opcode to a function that can create a\n    binary operation of that type.  */\n-static std::unordered_map<exp_opcode, binop_maker_ftype *> stap_maker_map;\n+static std::unordered_map<exp_opcode, binop_maker_ftype *,\n+\t\t\t  gdb::hash_enum<exp_opcode>> stap_maker_map;\n \n /* Helper function to create a binary operation.  */\n static expr::operation_up"
    }
  ]
}