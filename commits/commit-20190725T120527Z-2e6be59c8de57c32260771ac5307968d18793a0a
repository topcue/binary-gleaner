{
  "sha": "2e6be59c8de57c32260771ac5307968d18793a0a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmU2YmU1OWM4ZGU1N2MzMjI2MDc3MWFjNTMwNzk2OGQxODc5M2EwYQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-25T12:05:27Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-25T12:05:27Z"
    },
    "message": "Stop an illegal memory access by readelf when parsing a corrupt MIPS binary file.\n\n\tPR 24837\n\t* readelf.c (process_mips_specific): Check for buffer overflow\n\tbefore reading reginfo information.",
    "tree": {
      "sha": "ea9e9ee906732feb48a0999c1bd2519d706c2396",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ea9e9ee906732feb48a0999c1bd2519d706c2396"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2e6be59c8de57c32260771ac5307968d18793a0a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2e6be59c8de57c32260771ac5307968d18793a0a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2e6be59c8de57c32260771ac5307968d18793a0a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2e6be59c8de57c32260771ac5307968d18793a0a/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "442853af244e0352956a5d91ad5e169a85b58710",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/442853af244e0352956a5d91ad5e169a85b58710",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/442853af244e0352956a5d91ad5e169a85b58710"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 41,
    "deletions": 4
  },
  "files": [
    {
      "sha": "635f221871723b1901a5621c79fe6c62b86eafaf",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2e6be59c8de57c32260771ac5307968d18793a0a/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2e6be59c8de57c32260771ac5307968d18793a0a/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=2e6be59c8de57c32260771ac5307968d18793a0a",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-25  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24837\n+\t* readelf.c (process_mips_specific): Check for buffer overflow\n+\tbefore reading reginfo information.\n+\n 2019-07-24  Nick Clifton  <nickc@redhat.com>\n \n \tPR 13256"
    },
    {
      "sha": "6175b330179f69b83ae2612f74b42f75db8441a7",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 35,
      "deletions": 4,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2e6be59c8de57c32260771ac5307968d18793a0a/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2e6be59c8de57c32260771ac5307968d18793a0a/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=2e6be59c8de57c32260771ac5307968d18793a0a",
      "patch": "@@ -16473,8 +16473,6 @@ process_mips_specific (Filedata * filedata)\n   if (options_offset != 0)\n     {\n       Elf_External_Options * eopt;\n-      Elf_Internal_Options * iopt;\n-      Elf_Internal_Options * option;\n       size_t offset;\n       int cnt;\n       sect = filedata->section_headers;\n@@ -16498,6 +16496,10 @@ process_mips_specific (Filedata * filedata)\n                                                 sect->sh_size, _(\"options\"));\n       if (eopt)\n \t{\n+\t  Elf_Internal_Options * iopt;\n+\t  Elf_Internal_Options * option;\n+\t  Elf_Internal_Options * iopt_end;\n+\n \t  iopt = (Elf_Internal_Options *)\n               cmalloc ((sect->sh_size / sizeof (eopt)), sizeof (* iopt));\n \t  if (iopt == NULL)\n@@ -16508,7 +16510,8 @@ process_mips_specific (Filedata * filedata)\n \n \t  offset = cnt = 0;\n \t  option = iopt;\n-\n+\t  iopt_end = iopt + (sect->sh_size / sizeof (eopt));\n+\t  \n \t  while (offset <= sect->sh_size - sizeof (* eopt))\n \t    {\n \t      Elf_External_Options * eoption;\n@@ -16551,15 +16554,25 @@ process_mips_specific (Filedata * filedata)\n \t\t  /* This shouldn't happen.  */\n \t\t  printf (\" NULL       %d %lx\", option->section, option->info);\n \t\t  break;\n+\n \t\tcase ODK_REGINFO:\n \t\t  printf (\" REGINFO    \");\n \t\t  if (filedata->file_header.e_machine == EM_MIPS)\n \t\t    {\n-\t\t      /* 32bit form.  */\n \t\t      Elf32_External_RegInfo * ereg;\n \t\t      Elf32_RegInfo reginfo;\n \n+\t\t      /* 32bit form.  */\n+\t\t      if (option + 2 > iopt_end)\n+\t\t\t{\n+\t\t\t  printf (_(\"<corrupt>\\n\"));\n+\t\t\t  error (_(\"Truncated MIPS REGINFO option\\n\"));\n+\t\t\t  cnt = 0;\n+\t\t\t  break;\n+\t\t\t}\n+\n \t\t      ereg = (Elf32_External_RegInfo *) (option + 1);\n+\n \t\t      reginfo.ri_gprmask = BYTE_GET (ereg->ri_gprmask);\n \t\t      reginfo.ri_cprmask[0] = BYTE_GET (ereg->ri_cprmask[0]);\n \t\t      reginfo.ri_cprmask[1] = BYTE_GET (ereg->ri_cprmask[1]);\n@@ -16580,6 +16593,14 @@ process_mips_specific (Filedata * filedata)\n \t\t      Elf64_External_RegInfo * ereg;\n \t\t      Elf64_Internal_RegInfo reginfo;\n \n+\t\t      if (option + 2 > iopt_end)\n+\t\t\t{\n+\t\t\t  printf (_(\"<corrupt>\\n\"));\n+\t\t\t  error (_(\"Truncated MIPS REGINFO option\\n\"));\n+\t\t\t  cnt = 0;\n+\t\t\t  break;\n+\t\t\t}\n+\n \t\t      ereg = (Elf64_External_RegInfo *) (option + 1);\n \t\t      reginfo.ri_gprmask    = BYTE_GET (ereg->ri_gprmask);\n \t\t      reginfo.ri_cprmask[0] = BYTE_GET (ereg->ri_cprmask[0]);\n@@ -16599,6 +16620,7 @@ process_mips_specific (Filedata * filedata)\n \t\t    }\n \t\t  ++option;\n \t\t  continue;\n+\n \t\tcase ODK_EXCEPTIONS:\n \t\t  fputs (\" EXCEPTIONS fpe_min(\", stdout);\n \t\t  process_mips_fpe_exception (option->info & OEX_FPU_MIN);\n@@ -16615,6 +16637,7 @@ process_mips_specific (Filedata * filedata)\n \t\t  if (option->info & OEX_DISMISS)\n \t\t    fputs (\" DISMISS\", stdout);\n \t\t  break;\n+\n \t\tcase ODK_PAD:\n \t\t  fputs (\" PAD       \", stdout);\n \t\t  if (option->info & OPAD_PREFIX)\n@@ -16624,6 +16647,7 @@ process_mips_specific (Filedata * filedata)\n \t\t  if (option->info & OPAD_SYMBOL)\n \t\t    fputs (\" SYMBOL\", stdout);\n \t\t  break;\n+\n \t\tcase ODK_HWPATCH:\n \t\t  fputs (\" HWPATCH   \", stdout);\n \t\t  if (option->info & OHW_R4KEOP)\n@@ -16635,38 +16659,45 @@ process_mips_specific (Filedata * filedata)\n \t\t  if (option->info & OHW_R5KCVTL)\n \t\t    fputs (\" R5KCVTL\", stdout);\n \t\t  break;\n+\n \t\tcase ODK_FILL:\n \t\t  fputs (\" FILL       \", stdout);\n \t\t  /* XXX Print content of info word?  */\n \t\t  break;\n+\n \t\tcase ODK_TAGS:\n \t\t  fputs (\" TAGS       \", stdout);\n \t\t  /* XXX Print content of info word?  */\n \t\t  break;\n+\n \t\tcase ODK_HWAND:\n \t\t  fputs (\" HWAND     \", stdout);\n \t\t  if (option->info & OHWA0_R4KEOP_CHECKED)\n \t\t    fputs (\" R4KEOP_CHECKED\", stdout);\n \t\t  if (option->info & OHWA0_R4KEOP_CLEAN)\n \t\t    fputs (\" R4KEOP_CLEAN\", stdout);\n \t\t  break;\n+\n \t\tcase ODK_HWOR:\n \t\t  fputs (\" HWOR      \", stdout);\n \t\t  if (option->info & OHWA0_R4KEOP_CHECKED)\n \t\t    fputs (\" R4KEOP_CHECKED\", stdout);\n \t\t  if (option->info & OHWA0_R4KEOP_CLEAN)\n \t\t    fputs (\" R4KEOP_CLEAN\", stdout);\n \t\t  break;\n+\n \t\tcase ODK_GP_GROUP:\n \t\t  printf (\" GP_GROUP  %#06lx  self-contained %#06lx\",\n \t\t\t  option->info & OGP_GROUP,\n \t\t\t  (option->info & OGP_SELF) >> 16);\n \t\t  break;\n+\n \t\tcase ODK_IDENT:\n \t\t  printf (\" IDENT     %#06lx  self-contained %#06lx\",\n \t\t\t  option->info & OGP_GROUP,\n \t\t\t  (option->info & OGP_SELF) >> 16);\n \t\t  break;\n+\n \t\tdefault:\n \t\t  /* This shouldn't happen.  */\n \t\t  printf (\" %3d ???     %d %lx\","
    }
  ]
}