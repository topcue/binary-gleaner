{
  "sha": "bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmQwY2Y1YTZiYWUxODBmNjVmM2I5Mjk4NjE5ZDFiZDY5NWFiY2RkOA==",
  "commit": {
    "author": {
      "name": "Nelson Chu",
      "email": "nelson.chu@sifive.com",
      "date": "2020-02-12T10:18:49Z"
    },
    "committer": {
      "name": "Jim Wilson",
      "email": "jimw@sifive.com",
      "date": "2020-02-21T00:49:09Z"
    },
    "message": "RISC-V: Support the ISA-dependent CSR checking.\n\nAccording to the riscv privilege spec, some CSR are only valid when rv32 or\nthe specific extension is set.  We extend the DECLARE_CSR and DECLARE_CSR_ALIAS\nto record more informaton we need, and then check whether the CSR is valid\naccording to these information.  We report warning message when the CSR is\ninvalid, so we have a choice between error and warning by --fatal-warnings\noption.  Also, a --no-warn/-W option is used to turn the warnings off, if\npeople don't want the warnings.\n\n\tgas/\n\t* config/tc-riscv.c (enum riscv_csr_class): New enum.  Used to decide\n\twhether or not this CSR is legal in the current ISA string.\n\t(struct riscv_csr_extra): New structure to hold all extra information\n\tof CSR.\n\t(riscv_init_csr_hash): New function.  According to the DECLARE_CSR and\n\tDECLARE_CSR_ALIAS, insert CSR extra information into csr_extra_hash.\n\tCall hash_reg_name to insert CSR address into reg_names_hash.\n\t(md_begin): Call riscv_init_csr_hashes for each DECLARE_CSR.\n\t(reg_csr_lookup_internal, riscv_csr_class_check): New functions.\n\tDecide whether the CSR is valid according to the csr_extra_hash.\n\t(init_opcode_hash): Update 'if (hash_error != NULL)' as hash_error is\n\tnot a boolean.  This is same as riscv_init_csr_hash, so keep the\n\tconsistent usage.\n\n\t* testsuite/gas/riscv/csr-dw-regnums.d: Add -march=rv32if option.\n\t* testsuite/gas/riscv/priv-reg.d: Add f-ext by -march option.\n\t* testsuite/gas/riscv/priv-reg-fail-fext.d: New testcase.  The source\n\tfile is `priv-reg.s`, and the ISA is rv32i without f-ext, so the\n\tf-ext CSR are not allowed.\n\t* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.\n\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: New testcase.  The\n\tsource file is `priv-reg.s`, and the ISA is rv64if, so the\n\trv32-only CSR are not allowed.\n\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n\n\tinclude/\n\t* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to\n\trecord riscv_csr_class.\n\n\topcodes/\n\t* riscv-dis.c (print_insn_args): Updated since the DECLARE_CSR is changed.\n\n\tgdb/\n\t* riscv-tdep.c: Updated since the DECLARE_CSR is changed.\n\t* riscv-tdep.h: Likewise.\n\t* features/riscv/rebuild-csr-xml.sh: Generate the 64bit-csr.xml without\n\trv32-only CSR.\n\t* features/riscv/64bit-csr.xml: Regernated.\n\n\tbinutils/\n\t* dwarf.c: Updated since the DECLARE_CSR is changed.",
    "tree": {
      "sha": "a9573166927fdbd4f0b702bd2207fe3a7e6f3d72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a9573166927fdbd4f0b702bd2207fe3a7e6f3d72"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "10a95fcc1f8fb621dfc82b1097336cc58a3574f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10a95fcc1f8fb621dfc82b1097336cc58a3574f5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10a95fcc1f8fb621dfc82b1097336cc58a3574f5"
    }
  ],
  "stats": {
    "total": 805,
    "additions": 480,
    "deletions": 325
  },
  "files": [
    {
      "sha": "5b2f876551bc4fdc2210e8847c88c0aa59ed25a8",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* dwarf.c (regname_internal_riscv): Updated since the DECLARE_CSR\n+\tis changed.\n+\n 2020-02-19  Jordan Rupprecht  <rupprecht@google.com>\n \n \t* objdump.c (show_line): call bfd_demangle when using do_demangle."
    },
    {
      "sha": "2403ac7174b14befa268008254137cb173c30f60",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -7381,7 +7381,7 @@ regname_internal_riscv (unsigned int regno)\n \t document.  */\n       switch (regno)\n \t{\n-#define DECLARE_CSR(NAME,VALUE) case VALUE + 4096: name = #NAME; break;\n+#define DECLARE_CSR(NAME,VALUE,CLASS) case VALUE + 4096: name = #NAME; break;\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n "
    },
    {
      "sha": "904d45a0d75bed40dbd57e9858478f9b50e28015",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,3 +1,31 @@\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* config/tc-riscv.c (csr_extra_hash): New.\n+\t(enum riscv_csr_class): New enum.  Used to decide\n+\twhether or not this CSR is legal in the current ISA string.\n+\t(struct riscv_csr_extra): New structure to hold all extra information\n+\tof CSR.\n+\t(riscv_init_csr_hashes): New.  According to the DECLARE_CSR and\n+\tDECLARE_CSR_ALIAS, insert CSR extra information into csr_extra_hash.\n+\tCall hash_reg_name to insert CSR address into reg_names_hash.\n+\t(reg_csr_lookup_internal, riscv_csr_class_check): New functions.\n+\tDecide whether the CSR is valid according to the csr_extra_hash.\n+\t(reg_lookup_internal): Call reg_csr_lookup_internal for CSRs.\n+\t(init_opcode_hash): Update 'if (hash_error != NULL)' as hash_error is\n+\tnot a boolean.  This is same as riscv_init_csr_hash, so keep the\n+\tconsistent usage.\n+\t(md_begin): Call riscv_init_csr_hashes for each DECLARE_CSR.\n+\t* testsuite/gas/riscv/csr-dw-regnums.d: Add -march=rv32if option.\n+\t* testsuite/gas/riscv/priv-reg.d: Add f-ext by -march option.\n+\t* testsuite/gas/riscv/priv-reg-fail-fext.d: New testcase.  The source\n+\tfile is `priv-reg.s`, and the ISA is rv32i without f-ext, so the\n+\tf-ext CSR are not allowed.\n+\t* testsuite/gas/riscv/priv-reg-fail-fext.l: Likewise.\n+\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.d: New testcase.  The\n+\tsource file is `priv-reg.s`, and the ISA is rv64if, so the\n+\trv32-only CSR are not allowed.\n+\t* testsuite/gas/riscv/priv-reg-fail-rv32-only.l: Likewise.\n+\n 2020-02-21  Alan Modra  <amodra@gmail.com>\n \n \t* config/tc-pdp11.c (md_apply_fix): Handle BFD_RELOC_32."
    },
    {
      "sha": "2f95d41ce94b6a8f6c781b680d0dfc8197948815",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 92,
      "deletions": 7,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -455,6 +455,7 @@ enum reg_class\n };\n \n static struct hash_control *reg_names_hash = NULL;\n+static struct hash_control *csr_extra_hash = NULL;\n \n #define ENCODE_REG_HASH(cls, n) \\\n   ((void *)(uintptr_t)((n) * RCLASS_MAX + (cls) + 1))\n@@ -480,6 +481,86 @@ hash_reg_names (enum reg_class class, const char * const names[], unsigned n)\n     hash_reg_name (class, names[i], i);\n }\n \n+/* All RISC-V CSRs belong to one of these classes.  */\n+\n+enum riscv_csr_class\n+{\n+  CSR_CLASS_NONE,\n+\n+  CSR_CLASS_I,\n+  CSR_CLASS_I_32,\t/* rv32 only */\n+  CSR_CLASS_F,\t\t/* f-ext only */\n+};\n+\n+/* This structure holds all restricted conditions for a CSR.  */\n+\n+struct riscv_csr_extra\n+{\n+  /* Class to which this CSR belongs.  Used to decide whether or\n+     not this CSR is legal in the current -march context.  */\n+  enum riscv_csr_class csr_class;\n+};\n+\n+/* Init two hashes, csr_extra_hash and reg_names_hash, for CSR.  */\n+\n+static void\n+riscv_init_csr_hashes (const char *name,\n+\t\t       unsigned address,\n+\t\t       enum riscv_csr_class class)\n+{\n+  struct riscv_csr_extra *entry = XNEW (struct riscv_csr_extra);\n+  entry->csr_class = class;\n+\n+  const char *hash_error =\n+    hash_insert (csr_extra_hash, name, (void *) entry);\n+  if (hash_error != NULL)\n+    {\n+      fprintf (stderr, _(\"internal error: can't hash `%s': %s\\n\"),\n+\t\t      name, hash_error);\n+      /* Probably a memory allocation problem?  Give up now.  */\n+\tas_fatal (_(\"Broken assembler.  No assembly attempted.\"));\n+    }\n+\n+  hash_reg_name (RCLASS_CSR, name, address);\n+}\n+\n+/* Check wether the CSR is valid according to the ISA.  */\n+\n+static bfd_boolean\n+riscv_csr_class_check (enum riscv_csr_class csr_class)\n+{\n+  switch (csr_class)\n+    {\n+    case CSR_CLASS_I: return riscv_subset_supports (\"i\");\n+    case CSR_CLASS_F: return riscv_subset_supports (\"f\");\n+    case CSR_CLASS_I_32:\n+      return (xlen == 32 && riscv_subset_supports (\"i\"));\n+\n+    default:\n+      return FALSE;\n+    }\n+}\n+\n+/* If the CSR is defined, then we call `riscv_csr_class_check` to do the\n+   further checking.  Return FALSE if the CSR is not defined.  Otherwise,\n+   return TRUE.  */\n+\n+static bfd_boolean\n+reg_csr_lookup_internal (const char *s)\n+{\n+  struct riscv_csr_extra *r =\n+    (struct riscv_csr_extra *) hash_find (csr_extra_hash, s);\n+\n+  if (r == NULL)\n+    return FALSE;\n+\n+  /* We just report the warning when the CSR is invalid.  */\n+  if (!riscv_csr_class_check (r->csr_class))\n+    as_warn (_(\"Invalid CSR `%s' for the current ISA\"), s);\n+\n+  return TRUE;\n+}\n+\n static unsigned int\n reg_lookup_internal (const char *s, enum reg_class class)\n {\n@@ -491,6 +572,9 @@ reg_lookup_internal (const char *s, enum reg_class class)\n   if (riscv_opts.rve && class == RCLASS_GPR && DECODE_REG_NUM (r) > 15)\n     return -1;\n \n+  if (class == RCLASS_CSR && !reg_csr_lookup_internal (s))\n+    return -1;\n+\n   return DECODE_REG_NUM (r);\n }\n \n@@ -721,7 +805,7 @@ init_opcode_hash (const struct riscv_opcode *opcodes,\n       const char *hash_error =\n \thash_insert (hash, name, (void *) &opcodes[i]);\n \n-      if (hash_error)\n+      if (hash_error != NULL)\n \t{\n \t  fprintf (stderr, _(\"internal error: can't hash `%s': %s\\n\"),\n \t\t   opcodes[i].name, hash_error);\n@@ -769,18 +853,19 @@ md_begin (void)\n   hash_reg_names (RCLASS_GPR, riscv_gpr_names_abi, NGPR);\n   hash_reg_names (RCLASS_FPR, riscv_fpr_names_numeric, NFPR);\n   hash_reg_names (RCLASS_FPR, riscv_fpr_names_abi, NFPR);\n-\n   /* Add \"fp\" as an alias for \"s0\".  */\n   hash_reg_name (RCLASS_GPR, \"fp\", 8);\n \n-  opcode_names_hash = hash_new ();\n-  init_opcode_names_hash ();\n-\n-#define DECLARE_CSR(name, num) hash_reg_name (RCLASS_CSR, #name, num);\n-#define DECLARE_CSR_ALIAS(name, num) DECLARE_CSR(name, num);\n+  /* Create and insert CSR hash tables.  */\n+  csr_extra_hash = hash_new ();\n+#define DECLARE_CSR(name, num, class) riscv_init_csr_hashes (#name, num, class);\n+#define DECLARE_CSR_ALIAS(name, num, class) DECLARE_CSR(name, num, class);\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n \n+  opcode_names_hash = hash_new ();\n+  init_opcode_names_hash ();\n+\n   /* Set the default alignment for the text section.  */\n   record_alignment (text_section, riscv_opts.rvc ? 1 : 2);\n }"
    },
    {
      "sha": "a7b415ef11f53a679676dde42745f6d7d46df216",
      "filename": "gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/csr-dw-regnums.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/csr-dw-regnums.d?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,4 +1,4 @@\n-#as:\n+#as: -march=rv32if\n #objdump: --dwarf=frames\n \n "
    },
    {
      "sha": "78ab75878d8a0bb8582f7bf85985bf52795967aa",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-fext.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-fext.d?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -march=rv32i\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-fext.l"
    },
    {
      "sha": "76818c812c14a192be2b3c2a6b20d8ac13e3d00d",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-fext.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-fext.l?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -0,0 +1,4 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `fflags' for the current ISA\n+.*Warning: Invalid CSR `frm' for the current ISA\n+.*Warning: Invalid CSR `fcsr' for the current ISA"
    },
    {
      "sha": "5dc840a80ee08c04e195c1e7edf0a63f73eb88d5",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.d?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -0,0 +1,3 @@\n+#as: -march=rv64if\n+#source: priv-reg.s\n+#warning_output: priv-reg-fail-rv32-only.l"
    },
    {
      "sha": "9123672aa4dc9e1179fae2530084bb96b60f70f7",
      "filename": "gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg-fail-rv32-only.l?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -0,0 +1,66 @@\n+.*Assembler messages:\n+.*Warning: Invalid CSR `cycleh' for the current ISA\n+.*Warning: Invalid CSR `timeh' for the current ISA\n+.*Warning: Invalid CSR `instreth' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter3h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter4h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter5h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter6h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter7h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter8h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter9h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter10h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter11h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter12h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter13h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter14h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter15h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter16h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter17h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter18h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter19h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter20h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter21h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter22h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter23h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter24h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter25h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter26h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter27h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter28h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter29h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter30h' for the current ISA\n+.*Warning: Invalid CSR `hpmcounter31h' for the current ISA\n+.*Warning: Invalid CSR `mcycleh' for the current ISA\n+.*Warning: Invalid CSR `minstreth' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter3h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter4h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter5h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter6h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter7h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter8h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter9h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter10h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter11h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter12h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter13h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter14h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter15h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter16h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter17h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter18h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter19h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter20h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter21h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter22h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter23h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter24h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter25h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter26h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter27h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter28h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter29h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter30h' for the current ISA\n+.*Warning: Invalid CSR `mhpmcounter31h' for the current ISA\n+.*Warning: Invalid CSR `pmpcfg1' for the current ISA\n+.*Warning: Invalid CSR `pmpcfg3' for the current ISA"
    },
    {
      "sha": "8b7a7bfc67c36da4505b69194f00a6919aaa615a",
      "filename": "gas/testsuite/gas/riscv/priv-reg.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gas/testsuite/gas/riscv/priv-reg.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/priv-reg.d?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,4 +1,4 @@\n-#as: -march=rv32i\n+#as: -march=rv32if\n #objdump: -dr\n \n .*:[ \t]+file format .*"
    },
    {
      "sha": "f8a491b99ba4327582784d2092cff9dd9f11c3ab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-tdep.c: Updated since the DECLARE_CSR is changed.\n+\t* riscv-tdep.h: Likewise.\n+\t* features/riscv/rebuild-csr-xml.sh: Generate the 64bit-csr.xml without\n+\trv32-only CSR.\n+\t* features/riscv/64bit-csr.xml: Regenerated.\n+\n 2020-02-20  Sergio Durigan Junior  <sergiodj@redhat.com>\n \t    Tom Tromey  <tom@tromey.com>\n "
    },
    {
      "sha": "8ec0ffe441d6f54cd2dbe57ad7047b79602f8c89",
      "filename": "gdb/features/riscv/64bit-csr.xml",
      "status": "modified",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/features/riscv/64bit-csr.xml",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/features/riscv/64bit-csr.xml",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/riscv/64bit-csr.xml?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -50,38 +50,6 @@\n   <reg name=\"hpmcounter29\" bitsize=\"64\"/>\n   <reg name=\"hpmcounter30\" bitsize=\"64\"/>\n   <reg name=\"hpmcounter31\" bitsize=\"64\"/>\n-  <reg name=\"cycleh\" bitsize=\"64\"/>\n-  <reg name=\"timeh\" bitsize=\"64\"/>\n-  <reg name=\"instreth\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter3h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter4h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter5h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter6h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter7h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter8h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter9h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter10h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter11h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter12h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter13h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter14h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter15h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter16h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter17h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter18h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter19h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter20h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter21h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter22h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter23h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter24h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter25h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter26h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter27h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter28h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter29h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter30h\" bitsize=\"64\"/>\n-  <reg name=\"hpmcounter31h\" bitsize=\"64\"/>\n   <reg name=\"sstatus\" bitsize=\"64\"/>\n   <reg name=\"sedeleg\" bitsize=\"64\"/>\n   <reg name=\"sideleg\" bitsize=\"64\"/>\n@@ -111,9 +79,7 @@\n   <reg name=\"mtval\" bitsize=\"64\"/>\n   <reg name=\"mip\" bitsize=\"64\"/>\n   <reg name=\"pmpcfg0\" bitsize=\"64\"/>\n-  <reg name=\"pmpcfg1\" bitsize=\"64\"/>\n   <reg name=\"pmpcfg2\" bitsize=\"64\"/>\n-  <reg name=\"pmpcfg3\" bitsize=\"64\"/>\n   <reg name=\"pmpaddr0\" bitsize=\"64\"/>\n   <reg name=\"pmpaddr1\" bitsize=\"64\"/>\n   <reg name=\"pmpaddr2\" bitsize=\"64\"/>\n@@ -161,37 +127,6 @@\n   <reg name=\"mhpmcounter29\" bitsize=\"64\"/>\n   <reg name=\"mhpmcounter30\" bitsize=\"64\"/>\n   <reg name=\"mhpmcounter31\" bitsize=\"64\"/>\n-  <reg name=\"mcycleh\" bitsize=\"64\"/>\n-  <reg name=\"minstreth\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter3h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter4h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter5h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter6h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter7h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter8h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter9h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter10h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter11h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter12h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter13h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter14h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter15h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter16h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter17h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter18h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter19h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter20h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter21h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter22h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter23h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter24h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter25h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter26h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter27h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter28h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter29h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter30h\" bitsize=\"64\"/>\n-  <reg name=\"mhpmcounter31h\" bitsize=\"64\"/>\n   <reg name=\"mhpmevent3\" bitsize=\"64\"/>\n   <reg name=\"mhpmevent4\" bitsize=\"64\"/>\n   <reg name=\"mhpmevent5\" bitsize=\"64\"/>"
    },
    {
      "sha": "1adb18009d31020db631e4e1a09790b8f51d298b",
      "filename": "gdb/features/riscv/rebuild-csr-xml.sh",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/features/riscv/rebuild-csr-xml.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/features/riscv/rebuild-csr-xml.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/features/riscv/rebuild-csr-xml.sh?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -19,10 +19,18 @@ function gen_csr_xml ()\n <feature name=\"org.gnu.gdb.riscv.csr\">\n EOF\n \n+if [ \"$bitsize\" = \"64\" ]; then\n     grep \"^DECLARE_CSR(\" ${RISCV_OPC_FILE} \\\n-        | sed -e \"s!DECLARE_CSR(\\(.*\\), .*!  <reg name=\\\"\\1\\\" bitsize=\\\"$bitsize\\\"/>!\"\n+        | sed /CSR_CLASS_.*_32/d \\\n+        | sed -e \"s!DECLARE_CSR(\\(.*\\), .*, .*!  <reg name=\\\"\\1\\\" bitsize=\\\"$bitsize\\\"/>!\"\n \n     echo \"</feature>\"\n+else\n+    grep \"^DECLARE_CSR(\" ${RISCV_OPC_FILE} \\\n+        | sed -e \"s!DECLARE_CSR(\\(.*\\), .*, .*!  <reg name=\\\"\\1\\\" bitsize=\\\"$bitsize\\\"/>!\"\n+\n+    echo \"</feature>\"\n+fi\n }\n \n gen_csr_xml 32 > ${RISCV_FEATURE_DIR}/32bit-csr.xml"
    },
    {
      "sha": "97741a32bd38250ea243ffa71dfa03b192e5b0c4",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -240,7 +240,7 @@ static struct riscv_register_feature riscv_csr_feature =\n {\n  \"org.gnu.gdb.riscv.csr\",\n  {\n-#define DECLARE_CSR(NAME,VALUE) \\\n+#define DECLARE_CSR(NAME,VALUE,CLASS) \\\n   { RISCV_ ## VALUE ## _REGNUM, { # NAME }, false },\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n@@ -534,7 +534,7 @@ riscv_register_name (struct gdbarch *gdbarch, int regnum)\n \n   if (regnum >= RISCV_FIRST_CSR_REGNUM && regnum <= RISCV_LAST_CSR_REGNUM)\n     {\n-#define DECLARE_CSR(NAME,VALUE) \\\n+#define DECLARE_CSR(NAME,VALUE,CLASS) \\\n       case RISCV_ ## VALUE ## _REGNUM: return # NAME;\n \n       switch (regnum)\n@@ -870,7 +870,7 @@ riscv_is_regnum_a_named_csr (int regnum)\n \n   switch (regnum)\n     {\n-#define DECLARE_CSR(name, num) case RISCV_ ## num ## _REGNUM:\n+#define DECLARE_CSR(name, num, class) case RISCV_ ## num ## _REGNUM:\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n       return true;"
    },
    {
      "sha": "90bae0810a85a46d0ca1071acb439890ba7050ab",
      "filename": "gdb/riscv-tdep.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/riscv-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/gdb/riscv-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.h?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -44,7 +44,7 @@ enum\n   RISCV_LAST_FP_REGNUM = 64,\t/* Last Floating Point Register */\n \n   RISCV_FIRST_CSR_REGNUM = 65,  /* First CSR */\n-#define DECLARE_CSR(name, num) \\\n+#define DECLARE_CSR(name, num, class) \\\n   RISCV_ ## num ## _REGNUM = RISCV_FIRST_CSR_REGNUM + num,\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR"
    },
    {
      "sha": "9907c1d2cce4fbcaf0406bdbf2c80d86c58e6864",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* opcode/riscv-opc.h: Extend DECLARE_CSR and DECLARE_CSR_ALIAS to\n+\trecord riscv_csr_class.\n+\n 2020-02-10  Stam Markianos-Wright  <stam.markianos-wright@arm.com>\n \t    Matthew Malcomson  <matthew.malcomson@arm.com>\n "
    },
    {
      "sha": "18d0b15d3eeff6adb76c5efb83f460a5458f9adc",
      "filename": "include/opcode/riscv-opc.h",
      "status": "modified",
      "additions": 244,
      "deletions": 244,
      "changes": 488,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/include/opcode/riscv-opc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/include/opcode/riscv-opc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/riscv-opc.h?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1116,257 +1116,257 @@ DECLARE_INSN(custom3_rd_rs1, MATCH_CUSTOM3_RD_RS1, MASK_CUSTOM3_RD_RS1)\n DECLARE_INSN(custom3_rd_rs1_rs2, MATCH_CUSTOM3_RD_RS1_RS2, MASK_CUSTOM3_RD_RS1_RS2)\n #endif\n #ifdef DECLARE_CSR\n-DECLARE_CSR(ustatus, CSR_USTATUS)\n-DECLARE_CSR(uie, CSR_UIE)\n-DECLARE_CSR(utvec, CSR_UTVEC)\n-DECLARE_CSR(uscratch, CSR_USCRATCH)\n-DECLARE_CSR(uepc, CSR_UEPC)\n-DECLARE_CSR(ucause, CSR_UCAUSE)\n-DECLARE_CSR(utval, CSR_UTVAL)\n-DECLARE_CSR(uip, CSR_UIP)\n-DECLARE_CSR(fflags, CSR_FFLAGS)\n-DECLARE_CSR(frm, CSR_FRM)\n-DECLARE_CSR(fcsr, CSR_FCSR)\n-DECLARE_CSR(cycle, CSR_CYCLE)\n-DECLARE_CSR(time, CSR_TIME)\n-DECLARE_CSR(instret, CSR_INSTRET)\n-DECLARE_CSR(hpmcounter3, CSR_HPMCOUNTER3)\n-DECLARE_CSR(hpmcounter4, CSR_HPMCOUNTER4)\n-DECLARE_CSR(hpmcounter5, CSR_HPMCOUNTER5)\n-DECLARE_CSR(hpmcounter6, CSR_HPMCOUNTER6)\n-DECLARE_CSR(hpmcounter7, CSR_HPMCOUNTER7)\n-DECLARE_CSR(hpmcounter8, CSR_HPMCOUNTER8)\n-DECLARE_CSR(hpmcounter9, CSR_HPMCOUNTER9)\n-DECLARE_CSR(hpmcounter10, CSR_HPMCOUNTER10)\n-DECLARE_CSR(hpmcounter11, CSR_HPMCOUNTER11)\n-DECLARE_CSR(hpmcounter12, CSR_HPMCOUNTER12)\n-DECLARE_CSR(hpmcounter13, CSR_HPMCOUNTER13)\n-DECLARE_CSR(hpmcounter14, CSR_HPMCOUNTER14)\n-DECLARE_CSR(hpmcounter15, CSR_HPMCOUNTER15)\n-DECLARE_CSR(hpmcounter16, CSR_HPMCOUNTER16)\n-DECLARE_CSR(hpmcounter17, CSR_HPMCOUNTER17)\n-DECLARE_CSR(hpmcounter18, CSR_HPMCOUNTER18)\n-DECLARE_CSR(hpmcounter19, CSR_HPMCOUNTER19)\n-DECLARE_CSR(hpmcounter20, CSR_HPMCOUNTER20)\n-DECLARE_CSR(hpmcounter21, CSR_HPMCOUNTER21)\n-DECLARE_CSR(hpmcounter22, CSR_HPMCOUNTER22)\n-DECLARE_CSR(hpmcounter23, CSR_HPMCOUNTER23)\n-DECLARE_CSR(hpmcounter24, CSR_HPMCOUNTER24)\n-DECLARE_CSR(hpmcounter25, CSR_HPMCOUNTER25)\n-DECLARE_CSR(hpmcounter26, CSR_HPMCOUNTER26)\n-DECLARE_CSR(hpmcounter27, CSR_HPMCOUNTER27)\n-DECLARE_CSR(hpmcounter28, CSR_HPMCOUNTER28)\n-DECLARE_CSR(hpmcounter29, CSR_HPMCOUNTER29)\n-DECLARE_CSR(hpmcounter30, CSR_HPMCOUNTER30)\n-DECLARE_CSR(hpmcounter31, CSR_HPMCOUNTER31)\n-DECLARE_CSR(cycleh, CSR_CYCLEH)\n-DECLARE_CSR(timeh, CSR_TIMEH)\n-DECLARE_CSR(instreth, CSR_INSTRETH)\n-DECLARE_CSR(hpmcounter3h, CSR_HPMCOUNTER3H)\n-DECLARE_CSR(hpmcounter4h, CSR_HPMCOUNTER4H)\n-DECLARE_CSR(hpmcounter5h, CSR_HPMCOUNTER5H)\n-DECLARE_CSR(hpmcounter6h, CSR_HPMCOUNTER6H)\n-DECLARE_CSR(hpmcounter7h, CSR_HPMCOUNTER7H)\n-DECLARE_CSR(hpmcounter8h, CSR_HPMCOUNTER8H)\n-DECLARE_CSR(hpmcounter9h, CSR_HPMCOUNTER9H)\n-DECLARE_CSR(hpmcounter10h, CSR_HPMCOUNTER10H)\n-DECLARE_CSR(hpmcounter11h, CSR_HPMCOUNTER11H)\n-DECLARE_CSR(hpmcounter12h, CSR_HPMCOUNTER12H)\n-DECLARE_CSR(hpmcounter13h, CSR_HPMCOUNTER13H)\n-DECLARE_CSR(hpmcounter14h, CSR_HPMCOUNTER14H)\n-DECLARE_CSR(hpmcounter15h, CSR_HPMCOUNTER15H)\n-DECLARE_CSR(hpmcounter16h, CSR_HPMCOUNTER16H)\n-DECLARE_CSR(hpmcounter17h, CSR_HPMCOUNTER17H)\n-DECLARE_CSR(hpmcounter18h, CSR_HPMCOUNTER18H)\n-DECLARE_CSR(hpmcounter19h, CSR_HPMCOUNTER19H)\n-DECLARE_CSR(hpmcounter20h, CSR_HPMCOUNTER20H)\n-DECLARE_CSR(hpmcounter21h, CSR_HPMCOUNTER21H)\n-DECLARE_CSR(hpmcounter22h, CSR_HPMCOUNTER22H)\n-DECLARE_CSR(hpmcounter23h, CSR_HPMCOUNTER23H)\n-DECLARE_CSR(hpmcounter24h, CSR_HPMCOUNTER24H)\n-DECLARE_CSR(hpmcounter25h, CSR_HPMCOUNTER25H)\n-DECLARE_CSR(hpmcounter26h, CSR_HPMCOUNTER26H)\n-DECLARE_CSR(hpmcounter27h, CSR_HPMCOUNTER27H)\n-DECLARE_CSR(hpmcounter28h, CSR_HPMCOUNTER28H)\n-DECLARE_CSR(hpmcounter29h, CSR_HPMCOUNTER29H)\n-DECLARE_CSR(hpmcounter30h, CSR_HPMCOUNTER30H)\n-DECLARE_CSR(hpmcounter31h, CSR_HPMCOUNTER31H)\n-DECLARE_CSR(sstatus, CSR_SSTATUS)\n-DECLARE_CSR(sedeleg, CSR_SEDELEG)\n-DECLARE_CSR(sideleg, CSR_SIDELEG)\n-DECLARE_CSR(sie, CSR_SIE)\n-DECLARE_CSR(stvec, CSR_STVEC)\n-DECLARE_CSR(scounteren, CSR_SCOUNTEREN)\n-DECLARE_CSR(sscratch, CSR_SSCRATCH)\n-DECLARE_CSR(sepc, CSR_SEPC)\n-DECLARE_CSR(scause, CSR_SCAUSE)\n-DECLARE_CSR(stval, CSR_STVAL)\n-DECLARE_CSR(sip, CSR_SIP)\n-DECLARE_CSR(satp, CSR_SATP)\n-DECLARE_CSR(mvendorid, CSR_MVENDORID)\n-DECLARE_CSR(marchid, CSR_MARCHID)\n-DECLARE_CSR(mimpid, CSR_MIMPID)\n-DECLARE_CSR(mhartid, CSR_MHARTID)\n-DECLARE_CSR(mstatus, CSR_MSTATUS)\n-DECLARE_CSR(misa, CSR_MISA)\n-DECLARE_CSR(medeleg, CSR_MEDELEG)\n-DECLARE_CSR(mideleg, CSR_MIDELEG)\n-DECLARE_CSR(mie, CSR_MIE)\n-DECLARE_CSR(mtvec, CSR_MTVEC)\n-DECLARE_CSR(mcounteren, CSR_MCOUNTEREN)\n-DECLARE_CSR(mscratch, CSR_MSCRATCH)\n-DECLARE_CSR(mepc, CSR_MEPC)\n-DECLARE_CSR(mcause, CSR_MCAUSE)\n-DECLARE_CSR(mtval, CSR_MTVAL)\n-DECLARE_CSR(mip, CSR_MIP)\n-DECLARE_CSR(pmpcfg0, CSR_PMPCFG0)\n-DECLARE_CSR(pmpcfg1, CSR_PMPCFG1)\n-DECLARE_CSR(pmpcfg2, CSR_PMPCFG2)\n-DECLARE_CSR(pmpcfg3, CSR_PMPCFG3)\n-DECLARE_CSR(pmpaddr0, CSR_PMPADDR0)\n-DECLARE_CSR(pmpaddr1, CSR_PMPADDR1)\n-DECLARE_CSR(pmpaddr2, CSR_PMPADDR2)\n-DECLARE_CSR(pmpaddr3, CSR_PMPADDR3)\n-DECLARE_CSR(pmpaddr4, CSR_PMPADDR4)\n-DECLARE_CSR(pmpaddr5, CSR_PMPADDR5)\n-DECLARE_CSR(pmpaddr6, CSR_PMPADDR6)\n-DECLARE_CSR(pmpaddr7, CSR_PMPADDR7)\n-DECLARE_CSR(pmpaddr8, CSR_PMPADDR8)\n-DECLARE_CSR(pmpaddr9, CSR_PMPADDR9)\n-DECLARE_CSR(pmpaddr10, CSR_PMPADDR10)\n-DECLARE_CSR(pmpaddr11, CSR_PMPADDR11)\n-DECLARE_CSR(pmpaddr12, CSR_PMPADDR12)\n-DECLARE_CSR(pmpaddr13, CSR_PMPADDR13)\n-DECLARE_CSR(pmpaddr14, CSR_PMPADDR14)\n-DECLARE_CSR(pmpaddr15, CSR_PMPADDR15)\n-DECLARE_CSR(mcycle, CSR_MCYCLE)\n-DECLARE_CSR(minstret, CSR_MINSTRET)\n-DECLARE_CSR(mhpmcounter3, CSR_MHPMCOUNTER3)\n-DECLARE_CSR(mhpmcounter4, CSR_MHPMCOUNTER4)\n-DECLARE_CSR(mhpmcounter5, CSR_MHPMCOUNTER5)\n-DECLARE_CSR(mhpmcounter6, CSR_MHPMCOUNTER6)\n-DECLARE_CSR(mhpmcounter7, CSR_MHPMCOUNTER7)\n-DECLARE_CSR(mhpmcounter8, CSR_MHPMCOUNTER8)\n-DECLARE_CSR(mhpmcounter9, CSR_MHPMCOUNTER9)\n-DECLARE_CSR(mhpmcounter10, CSR_MHPMCOUNTER10)\n-DECLARE_CSR(mhpmcounter11, CSR_MHPMCOUNTER11)\n-DECLARE_CSR(mhpmcounter12, CSR_MHPMCOUNTER12)\n-DECLARE_CSR(mhpmcounter13, CSR_MHPMCOUNTER13)\n-DECLARE_CSR(mhpmcounter14, CSR_MHPMCOUNTER14)\n-DECLARE_CSR(mhpmcounter15, CSR_MHPMCOUNTER15)\n-DECLARE_CSR(mhpmcounter16, CSR_MHPMCOUNTER16)\n-DECLARE_CSR(mhpmcounter17, CSR_MHPMCOUNTER17)\n-DECLARE_CSR(mhpmcounter18, CSR_MHPMCOUNTER18)\n-DECLARE_CSR(mhpmcounter19, CSR_MHPMCOUNTER19)\n-DECLARE_CSR(mhpmcounter20, CSR_MHPMCOUNTER20)\n-DECLARE_CSR(mhpmcounter21, CSR_MHPMCOUNTER21)\n-DECLARE_CSR(mhpmcounter22, CSR_MHPMCOUNTER22)\n-DECLARE_CSR(mhpmcounter23, CSR_MHPMCOUNTER23)\n-DECLARE_CSR(mhpmcounter24, CSR_MHPMCOUNTER24)\n-DECLARE_CSR(mhpmcounter25, CSR_MHPMCOUNTER25)\n-DECLARE_CSR(mhpmcounter26, CSR_MHPMCOUNTER26)\n-DECLARE_CSR(mhpmcounter27, CSR_MHPMCOUNTER27)\n-DECLARE_CSR(mhpmcounter28, CSR_MHPMCOUNTER28)\n-DECLARE_CSR(mhpmcounter29, CSR_MHPMCOUNTER29)\n-DECLARE_CSR(mhpmcounter30, CSR_MHPMCOUNTER30)\n-DECLARE_CSR(mhpmcounter31, CSR_MHPMCOUNTER31)\n-DECLARE_CSR(mcycleh, CSR_MCYCLEH)\n-DECLARE_CSR(minstreth, CSR_MINSTRETH)\n-DECLARE_CSR(mhpmcounter3h, CSR_MHPMCOUNTER3H)\n-DECLARE_CSR(mhpmcounter4h, CSR_MHPMCOUNTER4H)\n-DECLARE_CSR(mhpmcounter5h, CSR_MHPMCOUNTER5H)\n-DECLARE_CSR(mhpmcounter6h, CSR_MHPMCOUNTER6H)\n-DECLARE_CSR(mhpmcounter7h, CSR_MHPMCOUNTER7H)\n-DECLARE_CSR(mhpmcounter8h, CSR_MHPMCOUNTER8H)\n-DECLARE_CSR(mhpmcounter9h, CSR_MHPMCOUNTER9H)\n-DECLARE_CSR(mhpmcounter10h, CSR_MHPMCOUNTER10H)\n-DECLARE_CSR(mhpmcounter11h, CSR_MHPMCOUNTER11H)\n-DECLARE_CSR(mhpmcounter12h, CSR_MHPMCOUNTER12H)\n-DECLARE_CSR(mhpmcounter13h, CSR_MHPMCOUNTER13H)\n-DECLARE_CSR(mhpmcounter14h, CSR_MHPMCOUNTER14H)\n-DECLARE_CSR(mhpmcounter15h, CSR_MHPMCOUNTER15H)\n-DECLARE_CSR(mhpmcounter16h, CSR_MHPMCOUNTER16H)\n-DECLARE_CSR(mhpmcounter17h, CSR_MHPMCOUNTER17H)\n-DECLARE_CSR(mhpmcounter18h, CSR_MHPMCOUNTER18H)\n-DECLARE_CSR(mhpmcounter19h, CSR_MHPMCOUNTER19H)\n-DECLARE_CSR(mhpmcounter20h, CSR_MHPMCOUNTER20H)\n-DECLARE_CSR(mhpmcounter21h, CSR_MHPMCOUNTER21H)\n-DECLARE_CSR(mhpmcounter22h, CSR_MHPMCOUNTER22H)\n-DECLARE_CSR(mhpmcounter23h, CSR_MHPMCOUNTER23H)\n-DECLARE_CSR(mhpmcounter24h, CSR_MHPMCOUNTER24H)\n-DECLARE_CSR(mhpmcounter25h, CSR_MHPMCOUNTER25H)\n-DECLARE_CSR(mhpmcounter26h, CSR_MHPMCOUNTER26H)\n-DECLARE_CSR(mhpmcounter27h, CSR_MHPMCOUNTER27H)\n-DECLARE_CSR(mhpmcounter28h, CSR_MHPMCOUNTER28H)\n-DECLARE_CSR(mhpmcounter29h, CSR_MHPMCOUNTER29H)\n-DECLARE_CSR(mhpmcounter30h, CSR_MHPMCOUNTER30H)\n-DECLARE_CSR(mhpmcounter31h, CSR_MHPMCOUNTER31H)\n-DECLARE_CSR(mhpmevent3, CSR_MHPMEVENT3)\n-DECLARE_CSR(mhpmevent4, CSR_MHPMEVENT4)\n-DECLARE_CSR(mhpmevent5, CSR_MHPMEVENT5)\n-DECLARE_CSR(mhpmevent6, CSR_MHPMEVENT6)\n-DECLARE_CSR(mhpmevent7, CSR_MHPMEVENT7)\n-DECLARE_CSR(mhpmevent8, CSR_MHPMEVENT8)\n-DECLARE_CSR(mhpmevent9, CSR_MHPMEVENT9)\n-DECLARE_CSR(mhpmevent10, CSR_MHPMEVENT10)\n-DECLARE_CSR(mhpmevent11, CSR_MHPMEVENT11)\n-DECLARE_CSR(mhpmevent12, CSR_MHPMEVENT12)\n-DECLARE_CSR(mhpmevent13, CSR_MHPMEVENT13)\n-DECLARE_CSR(mhpmevent14, CSR_MHPMEVENT14)\n-DECLARE_CSR(mhpmevent15, CSR_MHPMEVENT15)\n-DECLARE_CSR(mhpmevent16, CSR_MHPMEVENT16)\n-DECLARE_CSR(mhpmevent17, CSR_MHPMEVENT17)\n-DECLARE_CSR(mhpmevent18, CSR_MHPMEVENT18)\n-DECLARE_CSR(mhpmevent19, CSR_MHPMEVENT19)\n-DECLARE_CSR(mhpmevent20, CSR_MHPMEVENT20)\n-DECLARE_CSR(mhpmevent21, CSR_MHPMEVENT21)\n-DECLARE_CSR(mhpmevent22, CSR_MHPMEVENT22)\n-DECLARE_CSR(mhpmevent23, CSR_MHPMEVENT23)\n-DECLARE_CSR(mhpmevent24, CSR_MHPMEVENT24)\n-DECLARE_CSR(mhpmevent25, CSR_MHPMEVENT25)\n-DECLARE_CSR(mhpmevent26, CSR_MHPMEVENT26)\n-DECLARE_CSR(mhpmevent27, CSR_MHPMEVENT27)\n-DECLARE_CSR(mhpmevent28, CSR_MHPMEVENT28)\n-DECLARE_CSR(mhpmevent29, CSR_MHPMEVENT29)\n-DECLARE_CSR(mhpmevent30, CSR_MHPMEVENT30)\n-DECLARE_CSR(mhpmevent31, CSR_MHPMEVENT31)\n-DECLARE_CSR(tselect, CSR_TSELECT)\n-DECLARE_CSR(tdata1, CSR_TDATA1)\n-DECLARE_CSR(tdata2, CSR_TDATA2)\n-DECLARE_CSR(tdata3, CSR_TDATA3)\n-DECLARE_CSR(dcsr, CSR_DCSR)\n-DECLARE_CSR(dpc, CSR_DPC)\n-DECLARE_CSR(dscratch, CSR_DSCRATCH)\n+DECLARE_CSR(ustatus, CSR_USTATUS, CSR_CLASS_I)\n+DECLARE_CSR(uie, CSR_UIE, CSR_CLASS_I)\n+DECLARE_CSR(utvec, CSR_UTVEC, CSR_CLASS_I)\n+DECLARE_CSR(uscratch, CSR_USCRATCH, CSR_CLASS_I)\n+DECLARE_CSR(uepc, CSR_UEPC, CSR_CLASS_I)\n+DECLARE_CSR(ucause, CSR_UCAUSE, CSR_CLASS_I)\n+DECLARE_CSR(utval, CSR_UTVAL, CSR_CLASS_I)\n+DECLARE_CSR(uip, CSR_UIP, CSR_CLASS_I)\n+DECLARE_CSR(fflags, CSR_FFLAGS, CSR_CLASS_F)\n+DECLARE_CSR(frm, CSR_FRM, CSR_CLASS_F)\n+DECLARE_CSR(fcsr, CSR_FCSR, CSR_CLASS_F)\n+DECLARE_CSR(cycle, CSR_CYCLE, CSR_CLASS_I)\n+DECLARE_CSR(time, CSR_TIME, CSR_CLASS_I)\n+DECLARE_CSR(instret, CSR_INSTRET, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter3, CSR_HPMCOUNTER3, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter4, CSR_HPMCOUNTER4, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter5, CSR_HPMCOUNTER5, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter6, CSR_HPMCOUNTER6, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter7, CSR_HPMCOUNTER7, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter8, CSR_HPMCOUNTER8, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter9, CSR_HPMCOUNTER9, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter10, CSR_HPMCOUNTER10, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter11, CSR_HPMCOUNTER11, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter12, CSR_HPMCOUNTER12, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter13, CSR_HPMCOUNTER13, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter14, CSR_HPMCOUNTER14, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter15, CSR_HPMCOUNTER15, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter16, CSR_HPMCOUNTER16, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter17, CSR_HPMCOUNTER17, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter18, CSR_HPMCOUNTER18, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter19, CSR_HPMCOUNTER19, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter20, CSR_HPMCOUNTER20, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter21, CSR_HPMCOUNTER21, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter22, CSR_HPMCOUNTER22, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter23, CSR_HPMCOUNTER23, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter24, CSR_HPMCOUNTER24, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter25, CSR_HPMCOUNTER25, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter26, CSR_HPMCOUNTER26, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter27, CSR_HPMCOUNTER27, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter28, CSR_HPMCOUNTER28, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter29, CSR_HPMCOUNTER29, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter30, CSR_HPMCOUNTER30, CSR_CLASS_I)\n+DECLARE_CSR(hpmcounter31, CSR_HPMCOUNTER31, CSR_CLASS_I)\n+DECLARE_CSR(cycleh, CSR_CYCLEH, CSR_CLASS_I_32)\n+DECLARE_CSR(timeh, CSR_TIMEH, CSR_CLASS_I_32)\n+DECLARE_CSR(instreth, CSR_INSTRETH, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter3h, CSR_HPMCOUNTER3H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter4h, CSR_HPMCOUNTER4H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter5h, CSR_HPMCOUNTER5H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter6h, CSR_HPMCOUNTER6H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter7h, CSR_HPMCOUNTER7H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter8h, CSR_HPMCOUNTER8H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter9h, CSR_HPMCOUNTER9H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter10h, CSR_HPMCOUNTER10H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter11h, CSR_HPMCOUNTER11H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter12h, CSR_HPMCOUNTER12H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter13h, CSR_HPMCOUNTER13H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter14h, CSR_HPMCOUNTER14H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter15h, CSR_HPMCOUNTER15H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter16h, CSR_HPMCOUNTER16H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter17h, CSR_HPMCOUNTER17H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter18h, CSR_HPMCOUNTER18H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter19h, CSR_HPMCOUNTER19H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter20h, CSR_HPMCOUNTER20H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter21h, CSR_HPMCOUNTER21H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter22h, CSR_HPMCOUNTER22H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter23h, CSR_HPMCOUNTER23H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter24h, CSR_HPMCOUNTER24H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter25h, CSR_HPMCOUNTER25H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter26h, CSR_HPMCOUNTER26H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter27h, CSR_HPMCOUNTER27H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter28h, CSR_HPMCOUNTER28H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter29h, CSR_HPMCOUNTER29H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter30h, CSR_HPMCOUNTER30H, CSR_CLASS_I_32)\n+DECLARE_CSR(hpmcounter31h, CSR_HPMCOUNTER31H, CSR_CLASS_I_32)\n+DECLARE_CSR(sstatus, CSR_SSTATUS, CSR_CLASS_I)\n+DECLARE_CSR(sedeleg, CSR_SEDELEG, CSR_CLASS_I)\n+DECLARE_CSR(sideleg, CSR_SIDELEG, CSR_CLASS_I)\n+DECLARE_CSR(sie, CSR_SIE, CSR_CLASS_I)\n+DECLARE_CSR(stvec, CSR_STVEC, CSR_CLASS_I)\n+DECLARE_CSR(scounteren, CSR_SCOUNTEREN, CSR_CLASS_I)\n+DECLARE_CSR(sscratch, CSR_SSCRATCH, CSR_CLASS_I)\n+DECLARE_CSR(sepc, CSR_SEPC, CSR_CLASS_I)\n+DECLARE_CSR(scause, CSR_SCAUSE, CSR_CLASS_I)\n+DECLARE_CSR(stval, CSR_STVAL, CSR_CLASS_I)\n+DECLARE_CSR(sip, CSR_SIP, CSR_CLASS_I)\n+DECLARE_CSR(satp, CSR_SATP, CSR_CLASS_I)\n+DECLARE_CSR(mvendorid, CSR_MVENDORID, CSR_CLASS_I)\n+DECLARE_CSR(marchid, CSR_MARCHID, CSR_CLASS_I)\n+DECLARE_CSR(mimpid, CSR_MIMPID, CSR_CLASS_I)\n+DECLARE_CSR(mhartid, CSR_MHARTID, CSR_CLASS_I)\n+DECLARE_CSR(mstatus, CSR_MSTATUS, CSR_CLASS_I)\n+DECLARE_CSR(misa, CSR_MISA, CSR_CLASS_I)\n+DECLARE_CSR(medeleg, CSR_MEDELEG, CSR_CLASS_I)\n+DECLARE_CSR(mideleg, CSR_MIDELEG, CSR_CLASS_I)\n+DECLARE_CSR(mie, CSR_MIE, CSR_CLASS_I)\n+DECLARE_CSR(mtvec, CSR_MTVEC, CSR_CLASS_I)\n+DECLARE_CSR(mcounteren, CSR_MCOUNTEREN, CSR_CLASS_I)\n+DECLARE_CSR(mscratch, CSR_MSCRATCH, CSR_CLASS_I)\n+DECLARE_CSR(mepc, CSR_MEPC, CSR_CLASS_I)\n+DECLARE_CSR(mcause, CSR_MCAUSE, CSR_CLASS_I)\n+DECLARE_CSR(mtval, CSR_MTVAL, CSR_CLASS_I)\n+DECLARE_CSR(mip, CSR_MIP, CSR_CLASS_I)\n+DECLARE_CSR(pmpcfg0, CSR_PMPCFG0, CSR_CLASS_I)\n+DECLARE_CSR(pmpcfg1, CSR_PMPCFG1, CSR_CLASS_I_32)\n+DECLARE_CSR(pmpcfg2, CSR_PMPCFG2, CSR_CLASS_I)\n+DECLARE_CSR(pmpcfg3, CSR_PMPCFG3, CSR_CLASS_I_32)\n+DECLARE_CSR(pmpaddr0, CSR_PMPADDR0, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr1, CSR_PMPADDR1, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr2, CSR_PMPADDR2, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr3, CSR_PMPADDR3, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr4, CSR_PMPADDR4, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr5, CSR_PMPADDR5, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr6, CSR_PMPADDR6, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr7, CSR_PMPADDR7, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr8, CSR_PMPADDR8, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr9, CSR_PMPADDR9, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr10, CSR_PMPADDR10, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr11, CSR_PMPADDR11, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr12, CSR_PMPADDR12, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr13, CSR_PMPADDR13, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr14, CSR_PMPADDR14, CSR_CLASS_I)\n+DECLARE_CSR(pmpaddr15, CSR_PMPADDR15, CSR_CLASS_I)\n+DECLARE_CSR(mcycle, CSR_MCYCLE, CSR_CLASS_I)\n+DECLARE_CSR(minstret, CSR_MINSTRET, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter3, CSR_MHPMCOUNTER3, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter4, CSR_MHPMCOUNTER4, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter5, CSR_MHPMCOUNTER5, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter6, CSR_MHPMCOUNTER6, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter7, CSR_MHPMCOUNTER7, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter8, CSR_MHPMCOUNTER8, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter9, CSR_MHPMCOUNTER9, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter10, CSR_MHPMCOUNTER10, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter11, CSR_MHPMCOUNTER11, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter12, CSR_MHPMCOUNTER12, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter13, CSR_MHPMCOUNTER13, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter14, CSR_MHPMCOUNTER14, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter15, CSR_MHPMCOUNTER15, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter16, CSR_MHPMCOUNTER16, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter17, CSR_MHPMCOUNTER17, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter18, CSR_MHPMCOUNTER18, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter19, CSR_MHPMCOUNTER19, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter20, CSR_MHPMCOUNTER20, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter21, CSR_MHPMCOUNTER21, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter22, CSR_MHPMCOUNTER22, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter23, CSR_MHPMCOUNTER23, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter24, CSR_MHPMCOUNTER24, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter25, CSR_MHPMCOUNTER25, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter26, CSR_MHPMCOUNTER26, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter27, CSR_MHPMCOUNTER27, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter28, CSR_MHPMCOUNTER28, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter29, CSR_MHPMCOUNTER29, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter30, CSR_MHPMCOUNTER30, CSR_CLASS_I)\n+DECLARE_CSR(mhpmcounter31, CSR_MHPMCOUNTER31, CSR_CLASS_I)\n+DECLARE_CSR(mcycleh, CSR_MCYCLEH, CSR_CLASS_I_32)\n+DECLARE_CSR(minstreth, CSR_MINSTRETH, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter3h, CSR_MHPMCOUNTER3H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter4h, CSR_MHPMCOUNTER4H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter5h, CSR_MHPMCOUNTER5H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter6h, CSR_MHPMCOUNTER6H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter7h, CSR_MHPMCOUNTER7H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter8h, CSR_MHPMCOUNTER8H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter9h, CSR_MHPMCOUNTER9H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter10h, CSR_MHPMCOUNTER10H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter11h, CSR_MHPMCOUNTER11H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter12h, CSR_MHPMCOUNTER12H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter13h, CSR_MHPMCOUNTER13H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter14h, CSR_MHPMCOUNTER14H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter15h, CSR_MHPMCOUNTER15H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter16h, CSR_MHPMCOUNTER16H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter17h, CSR_MHPMCOUNTER17H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter18h, CSR_MHPMCOUNTER18H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter19h, CSR_MHPMCOUNTER19H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter20h, CSR_MHPMCOUNTER20H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter21h, CSR_MHPMCOUNTER21H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter22h, CSR_MHPMCOUNTER22H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter23h, CSR_MHPMCOUNTER23H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter24h, CSR_MHPMCOUNTER24H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter25h, CSR_MHPMCOUNTER25H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter26h, CSR_MHPMCOUNTER26H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter27h, CSR_MHPMCOUNTER27H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter28h, CSR_MHPMCOUNTER28H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter29h, CSR_MHPMCOUNTER29H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter30h, CSR_MHPMCOUNTER30H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmcounter31h, CSR_MHPMCOUNTER31H, CSR_CLASS_I_32)\n+DECLARE_CSR(mhpmevent3, CSR_MHPMEVENT3, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent4, CSR_MHPMEVENT4, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent5, CSR_MHPMEVENT5, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent6, CSR_MHPMEVENT6, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent7, CSR_MHPMEVENT7, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent8, CSR_MHPMEVENT8, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent9, CSR_MHPMEVENT9, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent10, CSR_MHPMEVENT10, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent11, CSR_MHPMEVENT11, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent12, CSR_MHPMEVENT12, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent13, CSR_MHPMEVENT13, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent14, CSR_MHPMEVENT14, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent15, CSR_MHPMEVENT15, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent16, CSR_MHPMEVENT16, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent17, CSR_MHPMEVENT17, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent18, CSR_MHPMEVENT18, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent19, CSR_MHPMEVENT19, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent20, CSR_MHPMEVENT20, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent21, CSR_MHPMEVENT21, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent22, CSR_MHPMEVENT22, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent23, CSR_MHPMEVENT23, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent24, CSR_MHPMEVENT24, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent25, CSR_MHPMEVENT25, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent26, CSR_MHPMEVENT26, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent27, CSR_MHPMEVENT27, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent28, CSR_MHPMEVENT28, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent29, CSR_MHPMEVENT29, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent30, CSR_MHPMEVENT30, CSR_CLASS_I)\n+DECLARE_CSR(mhpmevent31, CSR_MHPMEVENT31, CSR_CLASS_I)\n+DECLARE_CSR(tselect, CSR_TSELECT, CSR_CLASS_I)\n+DECLARE_CSR(tdata1, CSR_TDATA1, CSR_CLASS_I)\n+DECLARE_CSR(tdata2, CSR_TDATA2, CSR_CLASS_I)\n+DECLARE_CSR(tdata3, CSR_TDATA3, CSR_CLASS_I)\n+DECLARE_CSR(dcsr, CSR_DCSR, CSR_CLASS_I)\n+DECLARE_CSR(dpc, CSR_DPC, CSR_CLASS_I)\n+DECLARE_CSR(dscratch, CSR_DSCRATCH, CSR_CLASS_I)\n /* These registers are present in priv spec 1.9.1, dropped in 1.10.  */\n-DECLARE_CSR(hstatus, CSR_HSTATUS)\n-DECLARE_CSR(hedeleg, CSR_HEDELEG)\n-DECLARE_CSR(hideleg, CSR_HIDELEG)\n-DECLARE_CSR(hie, CSR_HIE)\n-DECLARE_CSR(htvec, CSR_HTVEC)\n-DECLARE_CSR(hscratch, CSR_HSCRATCH)\n-DECLARE_CSR(hepc, CSR_HEPC)\n-DECLARE_CSR(hcause, CSR_HCAUSE)\n-DECLARE_CSR(hbadaddr, CSR_HBADADDR)\n-DECLARE_CSR(hip, CSR_HIP)\n-DECLARE_CSR(mbase, CSR_MBASE)\n-DECLARE_CSR(mbound, CSR_MBOUND)\n-DECLARE_CSR(mibase, CSR_MIBASE)\n-DECLARE_CSR(mibound, CSR_MIBOUND)\n-DECLARE_CSR(mdbase, CSR_MDBASE)\n-DECLARE_CSR(mdbound, CSR_MDBOUND)\n-DECLARE_CSR(mucounteren, CSR_MUCOUNTEREN)\n-DECLARE_CSR(mscounteren, CSR_MSCOUNTEREN)\n-DECLARE_CSR(mhcounteren, CSR_MHCOUNTEREN)\n+DECLARE_CSR(hstatus, CSR_HSTATUS, CSR_CLASS_I)\n+DECLARE_CSR(hedeleg, CSR_HEDELEG, CSR_CLASS_I)\n+DECLARE_CSR(hideleg, CSR_HIDELEG, CSR_CLASS_I)\n+DECLARE_CSR(hie, CSR_HIE, CSR_CLASS_I)\n+DECLARE_CSR(htvec, CSR_HTVEC, CSR_CLASS_I)\n+DECLARE_CSR(hscratch, CSR_HSCRATCH, CSR_CLASS_I)\n+DECLARE_CSR(hepc, CSR_HEPC, CSR_CLASS_I)\n+DECLARE_CSR(hcause, CSR_HCAUSE, CSR_CLASS_I)\n+DECLARE_CSR(hbadaddr, CSR_HBADADDR, CSR_CLASS_I)\n+DECLARE_CSR(hip, CSR_HIP, CSR_CLASS_I)\n+DECLARE_CSR(mbase, CSR_MBASE, CSR_CLASS_I)\n+DECLARE_CSR(mbound, CSR_MBOUND, CSR_CLASS_I)\n+DECLARE_CSR(mibase, CSR_MIBASE, CSR_CLASS_I)\n+DECLARE_CSR(mibound, CSR_MIBOUND, CSR_CLASS_I)\n+DECLARE_CSR(mdbase, CSR_MDBASE, CSR_CLASS_I)\n+DECLARE_CSR(mdbound, CSR_MDBOUND, CSR_CLASS_I)\n+DECLARE_CSR(mucounteren, CSR_MUCOUNTEREN, CSR_CLASS_I)\n+DECLARE_CSR(mscounteren, CSR_MSCOUNTEREN, CSR_CLASS_I)\n+DECLARE_CSR(mhcounteren, CSR_MHCOUNTEREN, CSR_CLASS_I)\n #endif\n #ifdef DECLARE_CSR_ALIAS\n /* Ubadaddr is 0x043 in 1.9.1, but 0x043 is utval in 1.10.  */\n-DECLARE_CSR_ALIAS(ubadaddr, CSR_UTVAL)\n+DECLARE_CSR_ALIAS(ubadaddr, CSR_UTVAL, CSR_CLASS_I)\n /* Sbadaddr is 0x143 in 1.9.1, but 0x143 is stval in 1.10.  */\n-DECLARE_CSR_ALIAS(sbadaddr, CSR_STVAL)\n+DECLARE_CSR_ALIAS(sbadaddr, CSR_STVAL, CSR_CLASS_I)\n /* Sptbr is 0x180 in 1.9.1, but 0x180 is satp in 1.10.  */\n-DECLARE_CSR_ALIAS(sptbr, CSR_SATP)\n+DECLARE_CSR_ALIAS(sptbr, CSR_SATP, CSR_CLASS_I)\n /* Mbadaddr is 0x343 in 1.9.1, but 0x343 is mtval in 1.10.  */\n-DECLARE_CSR_ALIAS(mbadaddr, CSR_MTVAL)\n+DECLARE_CSR_ALIAS(mbadaddr, CSR_MTVAL, CSR_CLASS_I)\n #endif\n #ifdef DECLARE_CAUSE\n DECLARE_CAUSE(\"misaligned fetch\", CAUSE_MISALIGNED_FETCH)"
    },
    {
      "sha": "73091b9e61d16bef786188b8c2238cbc5bfaa591",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-20  Nelson Chu  <nelson.chu@sifive.com>\n+\n+\t* riscv-dis.c (print_insn_args): Updated since the DECLARE_CSR is\n+\tchanged.\n+\n 2020-02-19  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* riscv-opc.c (riscv_opcodes): Convert add/addi to the compressed"
    },
    {
      "sha": "d7a184c4f971f6f14669baab98ba55cf13b5ad5e",
      "filename": "opcodes/riscv-dis.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/opcodes/riscv-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bd0cf5a6bae180f65f3b9298619d1bd695abcdd8/opcodes/riscv-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/riscv-dis.c?ref=bd0cf5a6bae180f65f3b9298619d1bd695abcdd8",
      "patch": "@@ -326,7 +326,7 @@ print_insn_args (const char *d, insn_t l, bfd_vma pc, disassemble_info *info)\n \t    unsigned int csr = EXTRACT_OPERAND (CSR, l);\n \t    switch (csr)\n \t      {\n-#define DECLARE_CSR(name, num) case num: csr_name = #name; break;\n+#define DECLARE_CSR(name, num, class) case num: csr_name = #name; break;\n #include \"opcode/riscv-opc.h\"\n #undef DECLARE_CSR\n \t      }"
    }
  ]
}