{
  "sha": "4aa88b50c4eec0256bcba33e02135f224a725d68",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGFhODhiNTBjNGVlYzAyNTZiY2JhMzNlMDIxMzVmMjI0YTcyNWQ2OA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T11:05:34Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:36:50Z"
    },
    "message": "[PATCH 31/57][Arm][GAS] Add support for MVE instructions: vshrn[tb], vrshrn[tb], vqshrn[tb], vqshrun[tb], vqrshrn[tb] and vqrshrun[tb]\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (M_MNEM_vshrnt, M_MNEM_vshrnb, M_MNEM_vrshrnt,\n\t M_MNEM_vqshrnt, M_MNEM_vqshrnb, M_MNEM_vqshrunt, M_MNEM_vqshrunb,\n\t M_MNEM_vrshrnb, M_MNEM_vqrshrnt, M_MNEM_vqrshrnb, M_MNEM_vqrshrunt,\n\t M_MNEM_vqrshrunb): New instruction encodings.\n\t(do_mve_vshrn): New encoding function.\n\t(insns): Add entries for MVE mnemonics.\n\t* testsuite/gas/arm/mve-vqrshrn-bad.d: New test.\n\t* testsuite/gas/arm/mve-vqrshrn-bad.l: New test.\n\t* testsuite/gas/arm/mve-vqrshrn-bad.s: New test.\n\t* testsuite/gas/arm/mve-vshrn-bad.d: New test.\n\t* testsuite/gas/arm/mve-vshrn-bad.l: New test.\n\t* testsuite/gas/arm/mve-vshrn-bad.s: New test.",
    "tree": {
      "sha": "da7bdea20a642d479e58921bd412e08cf2ed6956",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da7bdea20a642d479e58921bd412e08cf2ed6956"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4aa88b50c4eec0256bcba33e02135f224a725d68",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4aa88b50c4eec0256bcba33e02135f224a725d68",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4aa88b50c4eec0256bcba33e02135f224a725d68",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4aa88b50c4eec0256bcba33e02135f224a725d68/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1be7aba392cd32a9a7165ecb4635c2733b5ac7ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1be7aba392cd32a9a7165ecb4635c2733b5ac7ba",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1be7aba392cd32a9a7165ecb4635c2733b5ac7ba"
    }
  ],
  "stats": {
    "total": 358,
    "additions": 358,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f69ab61a958b0f142299b5c26b0d0a1774ad5a73",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -1,3 +1,18 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (M_MNEM_vshrnt, M_MNEM_vshrnb, M_MNEM_vrshrnt,\n+\t M_MNEM_vqshrnt, M_MNEM_vqshrnb, M_MNEM_vqshrunt, M_MNEM_vqshrunb,\n+\t M_MNEM_vrshrnb, M_MNEM_vqrshrnt, M_MNEM_vqrshrnb, M_MNEM_vqrshrunt,\n+\t M_MNEM_vqrshrunb): New instruction encodings.\n+\t(do_mve_vshrn): New encoding function.\n+\t(insns): Add entries for MVE mnemonics.\n+\t* testsuite/gas/arm/mve-vqrshrn-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vqrshrn-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vqrshrn-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vshrn-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vshrn-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vshrn-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (M_MNEM_vqmovnt, M_MNEM_vqmovnb,"
    },
    {
      "sha": "64e87db033706f6bcdcf41f0bdf38b914bf1fb5a",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 77,
      "deletions": 0,
      "changes": 77,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -14206,6 +14206,18 @@ do_t_loloop (void)\n #define M_MNEM_vqmovnb\t  0xee330e01\n #define M_MNEM_vqmovunt\t  0xee311e81\n #define M_MNEM_vqmovunb\t  0xee310e81\n+#define M_MNEM_vshrnt\t    0xee801fc1\n+#define M_MNEM_vshrnb\t    0xee800fc1\n+#define M_MNEM_vrshrnt\t    0xfe801fc1\n+#define M_MNEM_vqshrnt\t    0xee801f40\n+#define M_MNEM_vqshrnb\t    0xee800f40\n+#define M_MNEM_vqshrunt\t    0xee801fc0\n+#define M_MNEM_vqshrunb\t    0xee800fc0\n+#define M_MNEM_vrshrnb\t    0xfe800fc1\n+#define M_MNEM_vqrshrnt\t    0xee801f41\n+#define M_MNEM_vqrshrnb\t    0xee800f41\n+#define M_MNEM_vqrshrunt    0xfe801fc0\n+#define M_MNEM_vqrshrunb    0xfe800fc0\n \n /* Neon instruction encoder helpers.  */\n \n@@ -15750,6 +15762,58 @@ do_mve_vmlas (void)\n   inst.is_neon = 1;\n }\n \n+static void\n+do_mve_vshrn (void)\n+{\n+  unsigned types;\n+  switch (inst.instruction)\n+    {\n+    case M_MNEM_vshrnt:\n+    case M_MNEM_vshrnb:\n+    case M_MNEM_vrshrnt:\n+    case M_MNEM_vrshrnb:\n+      types = N_I16 | N_I32;\n+      break;\n+    case M_MNEM_vqshrnt:\n+    case M_MNEM_vqshrnb:\n+    case M_MNEM_vqrshrnt:\n+    case M_MNEM_vqrshrnb:\n+      types = N_U16 | N_U32 | N_S16 | N_S32;\n+      break;\n+    case M_MNEM_vqshrunt:\n+    case M_MNEM_vqshrunb:\n+    case M_MNEM_vqrshrunt:\n+    case M_MNEM_vqrshrunb:\n+      types = N_S16 | N_S32;\n+      break;\n+    default:\n+      abort ();\n+    }\n+\n+  struct neon_type_el et = neon_check_type (2, NS_QQI, N_EQK, types | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  unsigned Qd = inst.operands[0].reg;\n+  unsigned Qm = inst.operands[1].reg;\n+  unsigned imm = inst.operands[2].imm;\n+  constraint (imm < 1 || ((unsigned) imm) > (et.size / 2),\n+\t      et.size == 16\n+\t      ? _(\"immediate operand expected in the range [1,8]\")\n+\t      : _(\"immediate operand expected in the range [1,16]\"));\n+\n+  inst.instruction |= (et.type == NT_unsigned) << 28;\n+  inst.instruction |= HI1 (Qd) << 22;\n+  inst.instruction |= (et.size - imm) << 16;\n+  inst.instruction |= LOW4 (Qd) << 12;\n+  inst.instruction |= HI1 (Qm) << 5;\n+  inst.instruction |= LOW4 (Qm);\n+  inst.is_neon = 1;\n+}\n+\n static void\n do_mve_vqmovn (void)\n {\n@@ -24946,6 +25010,19 @@ static const struct asm_opcode insns[] =\n  mCEF(vqmovunt,\t  _vqmovunt,\t2, (RMQ, RMQ),\t\t\tmve_vqmovn),\n  mCEF(vqmovunb,\t  _vqmovunb,\t2, (RMQ, RMQ),\t\t\tmve_vqmovn),\n \n+ mCEF(vshrnt,\t  _vshrnt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vshrnb,\t  _vshrnb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vrshrnt,\t  _vrshrnt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vrshrnb,\t  _vrshrnb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqshrnt,\t  _vqrshrnt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqshrnb,\t  _vqrshrnb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqshrunt,\t  _vqrshrunt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqshrunb,\t  _vqrshrunb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqrshrnt,\t  _vqrshrnt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqrshrnb,\t  _vqrshrnb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqrshrunt,  _vqrshrunt,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+ mCEF(vqrshrunb,  _vqrshrunb,\t3, (RMQ, RMQ, I32z),\tmve_vshrn),\n+\n #undef THUMB_VARIANT\n #define THUMB_VARIANT & mve_fp_ext\n  mToC(\"vcmul\", ee300e00,   4, (RMQ, RMQ, RMQ, EXPi),\t\t  mve_vcmul),"
    },
    {
      "sha": "6673336252e16c3bf90fbb580af3a2f663d1194c",
      "filename": "gas/testsuite/gas/arm/mve-vqrshrn-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqrshrn-bad.d?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VQRSHRNT, VQRSHRNB, VQRHSRUNT and MVQRSHRUNB instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vqrshrn-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "df4f79f836ef389ef9650b1a1567cea1b4086428",
      "filename": "gas/testsuite/gas/arm/mve-vqrshrn-bad.l",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqrshrn-bad.l?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,71 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vqrshrnt.s8 q0,q1,#1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vqrshrnt.s64 q0,q1,#1'\n+[^:]*:12: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrnt.s16 q0,q1,#0'\n+[^:]*:13: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrnt.s16 q0,q1,#9'\n+[^:]*:14: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrnt.s32 q0,q1,#0'\n+[^:]*:15: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrnt.s32 q0,q1,#17'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vqrshrnb.s8 q0,q1,#1'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vqrshrnb.s64 q0,q1,#1'\n+[^:]*:18: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrnb.s16 q0,q1,#0'\n+[^:]*:19: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrnb.s16 q0,q1,#9'\n+[^:]*:20: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrnb.s32 q0,q1,#0'\n+[^:]*:21: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrnb.s32 q0,q1,#17'\n+[^:]*:22: Error: bad type in SIMD instruction -- `vqrshrunt.s8 q0,q1,#1'\n+[^:]*:23: Error: bad type in SIMD instruction -- `vqrshrunt.s64 q0,q1,#1'\n+[^:]*:24: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrunt.s16 q0,q1,#0'\n+[^:]*:25: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrunt.s16 q0,q1,#9'\n+[^:]*:26: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrunt.s32 q0,q1,#0'\n+[^:]*:27: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrunt.s32 q0,q1,#17'\n+[^:]*:28: Error: bad type in SIMD instruction -- `vqrshrunt.u16 q0,q1,#1'\n+[^:]*:29: Error: bad type in SIMD instruction -- `vqrshrunb.s8 q0,q1,#1'\n+[^:]*:30: Error: bad type in SIMD instruction -- `vqrshrunb.s64 q0,q1,#1'\n+[^:]*:31: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrunb.s16 q0,q1,#0'\n+[^:]*:32: Error: immediate operand expected in the range \\[1,8\\] -- `vqrshrunb.s16 q0,q1,#9'\n+[^:]*:33: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrunb.s32 q0,q1,#0'\n+[^:]*:34: Error: immediate operand expected in the range \\[1,16\\] -- `vqrshrunb.s32 q0,q1,#17'\n+[^:]*:35: Error: bad type in SIMD instruction -- `vqrshrunb.u16 q0,q1,#1'\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:36: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:37: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:38: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:39: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:41: Error: syntax error -- `vqrshrnteq.s16 q0,q1,#1'\n+[^:]*:42: Error: syntax error -- `vqrshrnteq.s16 q0,q1,#1'\n+[^:]*:44: Error: syntax error -- `vqrshrnteq.s16 q0,q1,#1'\n+[^:]*:45: Error: vector predicated instruction should be in VPT/VPST block -- `vqrshrntt.s16 q0,q1,#1'\n+[^:]*:47: Error: instruction missing MVE vector predication code -- `vqrshrnt.s16 q0,q1,#1'\n+[^:]*:49: Error: syntax error -- `vqrshrnbeq.s16 q0,q1,#1'\n+[^:]*:50: Error: syntax error -- `vqrshrnbeq.s16 q0,q1,#1'\n+[^:]*:52: Error: syntax error -- `vqrshrnbeq.s16 q0,q1,#1'\n+[^:]*:53: Error: vector predicated instruction should be in VPT/VPST block -- `vqrshrnbt.s16 q0,q1,#1'\n+[^:]*:55: Error: instruction missing MVE vector predication code -- `vqrshrnb.s16 q0,q1,#1'\n+[^:]*:57: Error: syntax error -- `vqrshrunteq.s16 q0,q1,#1'\n+[^:]*:58: Error: syntax error -- `vqrshrunteq.s16 q0,q1,#1'\n+[^:]*:60: Error: syntax error -- `vqrshrunteq.s16 q0,q1,#1'\n+[^:]*:61: Error: vector predicated instruction should be in VPT/VPST block -- `vqrshruntt.s16 q0,q1,#1'\n+[^:]*:63: Error: instruction missing MVE vector predication code -- `vqrshrunt.s16 q0,q1,#1'\n+[^:]*:65: Error: syntax error -- `vqrshrunbeq.s16 q0,q1,#1'\n+[^:]*:66: Error: syntax error -- `vqrshrunbeq.s16 q0,q1,#1'\n+[^:]*:68: Error: syntax error -- `vqrshrunbeq.s16 q0,q1,#1'\n+[^:]*:69: Error: vector predicated instruction should be in VPT/VPST block -- `vqrshrunbt.s16 q0,q1,#1'\n+[^:]*:71: Error: instruction missing MVE vector predication code -- `vqrshrunb.s16 q0,q1,#1'"
    },
    {
      "sha": "1905943b4649066fa3af31de12ec48cd5dfed00e",
      "filename": "gas/testsuite/gas/arm/mve-vqrshrn-bad.s",
      "status": "added",
      "additions": 71,
      "deletions": 0,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vqrshrn-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vqrshrn-bad.s?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,71 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().s16 q0, q0, #1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vqrshrnt.s8 q0, q1, #1\n+vqrshrnt.s64 q0, q1, #1\n+vqrshrnt.s16 q0, q1, #0\n+vqrshrnt.s16 q0, q1, #9\n+vqrshrnt.s32 q0, q1, #0\n+vqrshrnt.s32 q0, q1, #17\n+vqrshrnb.s8 q0, q1, #1\n+vqrshrnb.s64 q0, q1, #1\n+vqrshrnb.s16 q0, q1, #0\n+vqrshrnb.s16 q0, q1, #9\n+vqrshrnb.s32 q0, q1, #0\n+vqrshrnb.s32 q0, q1, #17\n+vqrshrunt.s8 q0, q1, #1\n+vqrshrunt.s64 q0, q1, #1\n+vqrshrunt.s16 q0, q1, #0\n+vqrshrunt.s16 q0, q1, #9\n+vqrshrunt.s32 q0, q1, #0\n+vqrshrunt.s32 q0, q1, #17\n+vqrshrunt.u16 q0, q1, #1\n+vqrshrunb.s8 q0, q1, #1\n+vqrshrunb.s64 q0, q1, #1\n+vqrshrunb.s16 q0, q1, #0\n+vqrshrunb.s16 q0, q1, #9\n+vqrshrunb.s32 q0, q1, #0\n+vqrshrunb.s32 q0, q1, #17\n+vqrshrunb.u16 q0, q1, #1\n+cond vqrshrnt\n+cond vqrshrnb\n+cond vqrshrunt\n+cond vqrshrunb\n+it eq\n+vqrshrnteq.s16 q0, q1, #1\n+vqrshrnteq.s16 q0, q1, #1\n+vpst\n+vqrshrnteq.s16 q0, q1, #1\n+vqrshrntt.s16 q0, q1, #1\n+vpst\n+vqrshrnt.s16 q0, q1, #1\n+it eq\n+vqrshrnbeq.s16 q0, q1, #1\n+vqrshrnbeq.s16 q0, q1, #1\n+vpst\n+vqrshrnbeq.s16 q0, q1, #1\n+vqrshrnbt.s16 q0, q1, #1\n+vpst\n+vqrshrnb.s16 q0, q1, #1\n+it eq\n+vqrshrunteq.s16 q0, q1, #1\n+vqrshrunteq.s16 q0, q1, #1\n+vpst\n+vqrshrunteq.s16 q0, q1, #1\n+vqrshruntt.s16 q0, q1, #1\n+vpst\n+vqrshrunt.s16 q0, q1, #1\n+it eq\n+vqrshrunbeq.s16 q0, q1, #1\n+vqrshrunbeq.s16 q0, q1, #1\n+vpst\n+vqrshrunbeq.s16 q0, q1, #1\n+vqrshrunbt.s16 q0, q1, #1\n+vpst\n+vqrshrunb.s16 q0, q1, #1"
    },
    {
      "sha": "d63fa6f8e27da537f1a1f8444dd7ddf81248427c",
      "filename": "gas/testsuite/gas/arm/mve-vshrn-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshrn-bad.d?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSHRN and VRSHRN instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vshrn-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "51bbf30d31c670056f26f39b7185d65640d097a3",
      "filename": "gas/testsuite/gas/arm/mve-vshrn-bad.l",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshrn-bad.l?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,57 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vshrnt.i64 q0,q1,#1'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vshrnb.i64 q0,q1,#1'\n+[^:]*:12: Error: bad type in SIMD instruction -- `vrshrnt.i64 q0,q1,#1'\n+[^:]*:13: Error: bad type in SIMD instruction -- `vrshrnb.i64 q0,q1,#1'\n+[^:]*:14: Error: immediate operand expected in the range \\[1,8\\] -- `vshrnt.i16 q0,q1,#0'\n+[^:]*:15: Error: immediate operand expected in the range \\[1,8\\] -- `vshrnt.i16 q0,q1,#9'\n+[^:]*:16: Error: immediate operand expected in the range \\[1,16\\] -- `vshrnt.i32 q0,q1,#0'\n+[^:]*:17: Error: immediate operand expected in the range \\[1,16\\] -- `vshrnt.i32 q0,q1,#17'\n+[^:]*:18: Error: immediate operand expected in the range \\[1,8\\] -- `vshrnb.i16 q0,q1,#0'\n+[^:]*:19: Error: immediate operand expected in the range \\[1,8\\] -- `vshrnb.i16 q0,q1,#9'\n+[^:]*:20: Error: immediate operand expected in the range \\[1,16\\] -- `vshrnb.i32 q0,q1,#0'\n+[^:]*:21: Error: immediate operand expected in the range \\[1,16\\] -- `vshrnb.i32 q0,q1,#17'\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:22: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:23: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:24: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:25: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:27: Error: syntax error -- `vshrnteq.i32 q0,q1,#1'\n+[^:]*:28: Error: syntax error -- `vshrnteq.i32 q0,q1,#1'\n+[^:]*:30: Error: syntax error -- `vshrnteq.i32 q0,q1,#1'\n+[^:]*:31: Error: vector predicated instruction should be in VPT/VPST block -- `vshrntt.i32 q0,q1,#1'\n+[^:]*:33: Error: instruction missing MVE vector predication code -- `vshrnt.i32 q0,q1,#1'\n+[^:]*:35: Error: syntax error -- `vshrnbeq.i32 q0,q1,#1'\n+[^:]*:36: Error: syntax error -- `vshrnbeq.i32 q0,q1,#1'\n+[^:]*:38: Error: syntax error -- `vshrnbeq.i32 q0,q1,#1'\n+[^:]*:39: Error: vector predicated instruction should be in VPT/VPST block -- `vshrnbt.i32 q0,q1,#1'\n+[^:]*:41: Error: instruction missing MVE vector predication code -- `vshrnb.i32 q0,q1,#1'\n+[^:]*:43: Error: syntax error -- `vrshrnteq.i32 q0,q1,#1'\n+[^:]*:44: Error: syntax error -- `vrshrnteq.i32 q0,q1,#1'\n+[^:]*:46: Error: syntax error -- `vrshrnteq.i32 q0,q1,#1'\n+[^:]*:47: Error: vector predicated instruction should be in VPT/VPST block -- `vrshrntt.i32 q0,q1,#1'\n+[^:]*:49: Error: instruction missing MVE vector predication code -- `vrshrnt.i32 q0,q1,#1'\n+[^:]*:51: Error: syntax error -- `vrshrnbeq.i32 q0,q1,#1'\n+[^:]*:52: Error: syntax error -- `vrshrnbeq.i32 q0,q1,#1'\n+[^:]*:54: Error: syntax error -- `vrshrnbeq.i32 q0,q1,#1'\n+[^:]*:55: Error: vector predicated instruction should be in VPT/VPST block -- `vrshrnbt.i32 q0,q1,#1'\n+[^:]*:57: Error: instruction missing MVE vector predication code -- `vrshrnb.i32 q0,q1,#1'"
    },
    {
      "sha": "5faa09865f0ebdca16b6f8c2c47d04629ae0cc0f",
      "filename": "gas/testsuite/gas/arm/mve-vshrn-bad.s",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4aa88b50c4eec0256bcba33e02135f224a725d68/gas/testsuite/gas/arm/mve-vshrn-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vshrn-bad.s?ref=4aa88b50c4eec0256bcba33e02135f224a725d68",
      "patch": "@@ -0,0 +1,57 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().i32 q0, q1, #1\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vshrnt.i64 q0, q1, #1\n+vshrnb.i64 q0, q1, #1\n+vrshrnt.i64 q0, q1, #1\n+vrshrnb.i64 q0, q1, #1\n+vshrnt.i16 q0, q1, #0\n+vshrnt.i16 q0, q1, #9\n+vshrnt.i32 q0, q1, #0\n+vshrnt.i32 q0, q1, #17\n+vshrnb.i16 q0, q1, #0\n+vshrnb.i16 q0, q1, #9\n+vshrnb.i32 q0, q1, #0\n+vshrnb.i32 q0, q1, #17\n+cond vshrnt\n+cond vshrnb\n+cond vrshrnt\n+cond vrshrnb\n+it eq\n+vshrnteq.i32 q0, q1, #1\n+vshrnteq.i32 q0, q1, #1\n+vpst\n+vshrnteq.i32 q0, q1, #1\n+vshrntt.i32 q0, q1, #1\n+vpst\n+vshrnt.i32 q0, q1, #1\n+it eq\n+vshrnbeq.i32 q0, q1, #1\n+vshrnbeq.i32 q0, q1, #1\n+vpst\n+vshrnbeq.i32 q0, q1, #1\n+vshrnbt.i32 q0, q1, #1\n+vpst\n+vshrnb.i32 q0, q1, #1\n+it eq\n+vrshrnteq.i32 q0, q1, #1\n+vrshrnteq.i32 q0, q1, #1\n+vpst\n+vrshrnteq.i32 q0, q1, #1\n+vrshrntt.i32 q0, q1, #1\n+vpst\n+vrshrnt.i32 q0, q1, #1\n+it eq\n+vrshrnbeq.i32 q0, q1, #1\n+vrshrnbeq.i32 q0, q1, #1\n+vpst\n+vrshrnbeq.i32 q0, q1, #1\n+vrshrnbt.i32 q0, q1, #1\n+vpst\n+vrshrnb.i32 q0, q1, #1"
    }
  ]
}