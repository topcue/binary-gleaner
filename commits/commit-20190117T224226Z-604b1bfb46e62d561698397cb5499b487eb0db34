{
  "sha": "604b1bfb46e62d561698397cb5499b487eb0db34",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjA0YjFiZmI0NmU2MmQ1NjE2OTgzOTdjYjU0OTliNDg3ZWIwZGIzNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-16T14:09:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T22:42:26Z"
    },
    "message": "Simplify minsym iteration\n\nThis simplifies the minimal symbol iterator, by using\nminimal_symbol_count and just doing a somewhat ordinary array-like\niteration.  array_view is nearly usable, except that it is more\nconvenient for this iterator to return pointers rather than\nreferences.\n\ngdb/ChangeLog\n2019-01-16  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.h (class objfile_msymbols) <iterator>: Change argument\n\ttype.  Remove no-argument constructor.\n\t<iterator::operator++>: Simplify.\n\t<begin>: Update.\n\t<end>: Use minimal_symbol_count.",
    "tree": {
      "sha": "7747384711d71ee4b097e47db51457e452100e83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7747384711d71ee4b097e47db51457e452100e83"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/604b1bfb46e62d561698397cb5499b487eb0db34",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/604b1bfb46e62d561698397cb5499b487eb0db34",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/604b1bfb46e62d561698397cb5499b487eb0db34",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/604b1bfb46e62d561698397cb5499b487eb0db34/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f252c6d5dc49cb27838e153e863f16ea7895859e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f252c6d5dc49cb27838e153e863f16ea7895859e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f252c6d5dc49cb27838e153e863f16ea7895859e"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 14,
    "deletions": 19
  },
  "files": [
    {
      "sha": "7d1ed3fac1a5a28812eb04aa9a49d7f30010f3d5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/604b1bfb46e62d561698397cb5499b487eb0db34/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/604b1bfb46e62d561698397cb5499b487eb0db34/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=604b1bfb46e62d561698397cb5499b487eb0db34",
      "patch": "@@ -1,3 +1,11 @@\n+2019-01-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.h (class objfile_msymbols) <iterator>: Change argument\n+\ttype.  Remove no-argument constructor.\n+\t<iterator::operator++>: Simplify.\n+\t<begin>: Update.\n+\t<end>: Use minimal_symbol_count.\n+\n 2019-01-16  Tom Tromey  <tom@tromey.com>\n \n \t* objfiles.h (struct objfile) <psymtabs>: New method."
    },
    {
      "sha": "2e0fad69c0018cec79bee179e5c47b5dec2c0059",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 6,
      "deletions": 19,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/604b1bfb46e62d561698397cb5499b487eb0db34/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/604b1bfb46e62d561698397cb5499b487eb0db34/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=604b1bfb46e62d561698397cb5499b487eb0db34",
      "patch": "@@ -591,20 +591,11 @@ class objfile_msymbols\n     typedef std::forward_iterator_tag iterator_category;\n     typedef int difference_type;\n \n-    explicit iterator (struct objfile *objfile)\n-      : m_msym (objfile->per_bfd->msymbols)\n+    explicit iterator (struct minimal_symbol *msym)\n+      : m_msym (msym)\n     {\n-      /* Make sure to properly handle the case where there are no\n-\t minsyms.  */\n-      if (MSYMBOL_LINKAGE_NAME (m_msym) == nullptr)\n-\tm_msym = nullptr;\n     }\n \n-    iterator ()\n-      : m_msym (nullptr)\n-    {\n-    }\n-    \n     value_type operator* () const\n     {\n       return m_msym;\n@@ -622,12 +613,7 @@ class objfile_msymbols\n \n     self_type &operator++ ()\n     {\n-      if (m_msym != nullptr)\n-\t{\n-\t  ++m_msym;\n-\t  if (MSYMBOL_LINKAGE_NAME (m_msym) == nullptr)\n-\t    m_msym = nullptr;\n-\t}\n+      ++m_msym;\n       return *this;\n     }\n \n@@ -637,12 +623,13 @@ class objfile_msymbols\n \n   iterator begin () const\n   {\n-    return iterator (m_objfile);\n+    return iterator (m_objfile->per_bfd->msymbols);\n   }\n \n   iterator end () const\n   {\n-    return iterator ();\n+    return iterator (m_objfile->per_bfd->msymbols\n+\t\t     + m_objfile->per_bfd->minimal_symbol_count);\n   }\n \n private:"
    }
  ]
}