{
  "sha": "81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODFmNDdhYzI5ZjhjZGI4ODhmMmQ4MWM1ZGFhOWJmYzQ3NDc3MzhhYQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T14:35:08Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-05-17T14:35:08Z"
    },
    "message": "testsuite: Disable some tests when logging\n\nFix up all failures encountered when running the testsuite with\nGDB_DEBUG=\"infrun\".\n\nSome tests rely on enabling debugging for various components.  With\ndebugging on, this will be lost to the debug file.\n\nDisable separate tty for mi tests when debugging.  This currently\ndoes not work.\n\ndisasm.c should send errors to the stderr instead of the logfile.\n\nNote that enabling debug for other components might still cause\nadditional errors above what has been fixed here.\n\ngdb/ChangeLog:\n\n\t* disasm.c (set_disassembler_options): Send errors to stderr.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/breakpoint-in-ro-region.exp: Disable when debugging.\n\t* gdb.base/debug-expr.exp: Likewise.\n\t* gdb.base/foll-fork.exp: Likewise.\n\t* gdb.base/foll-vfork.exp: Likewise.\n\t* gdb.base/fork-print-inferior-events.exp: Likewise.\n\t* gdb.base/gdb-sigterm.exp: Likewise.\n\t* gdb.base/gdbinit-history.exp: Likewise.\n\t* gdb.base/osabi.exp: Likewise.\n\t* gdb.base/sss-bp-on-user-bp-2.exp: Likewise.\n\t* gdb.base/ui-redirect.exp: Likewise.\n\t* gdb.gdb/unittest.exp: Likewise.\n\t* gdb.mi/mi-break.exp: Disable separate-mi-tty when debugging.\n\t* gdb.mi/mi-watch.exp: Likewise.\n\t* gdb.mi/new-ui-mi-sync.exp: Likewise.\n\t* gdb.mi/user-selected-context-sync.exp: Likewise.\n\t* gdb.python/python.exp: Disable debug test when debugging.\n\t* gdb.threads/check-libthread-db.exp: Disable when debugging.\n\t* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:\n\tLikewise.\n\t* gdb.threads/stepi-random-signal.exp: Likewise.",
    "tree": {
      "sha": "198731f2847b2eea110e3f2fb25509fccb160fad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/198731f2847b2eea110e3f2fb25509fccb160fad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "29b523140ecf72bc3fdf570c71fbda6fe85cf930",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/29b523140ecf72bc3fdf570c71fbda6fe85cf930",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/29b523140ecf72bc3fdf570c71fbda6fe85cf930"
    }
  ],
  "stats": {
    "total": 179,
    "additions": 165,
    "deletions": 14
  },
  "files": [
    {
      "sha": "8d8a6789ab3809456921fc04df2552dcbbe5a2b1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -1,3 +1,7 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* disasm.c (set_disassembler_options): Send errors to stderr.\n+\n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* cli/cli-interp.c (struct saved_output_files): Add saved entry."
    },
    {
      "sha": "ed740c26e0fcd94c455b8ae77c64298700c1f9ad",
      "filename": "gdb/disasm.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/disasm.c?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -943,7 +943,7 @@ set_disassembler_options (char *prospective_options)\n   valid_options_and_args = gdbarch_valid_disassembler_options (gdbarch);\n   if (valid_options_and_args == NULL)\n     {\n-      fprintf_filtered (gdb_stdlog, _(\"\\\n+      fprintf_filtered (gdb_stderr, _(\"\\\n 'set disassembler-options ...' is not supported on this architecture.\\n\"));\n       return;\n     }\n@@ -979,7 +979,7 @@ set_disassembler_options (char *prospective_options)\n \t  break;\n       if (valid_options->name[i] == NULL)\n \t{\n-\t  fprintf_filtered (gdb_stdlog,\n+\t  fprintf_filtered (gdb_stderr,\n \t\t\t    _(\"Invalid disassembler option value: '%s'.\\n\"),\n \t\t\t    opt);\n \t  return;"
    },
    {
      "sha": "724bd51efcbe5486b9d8c58bc023ac1783505166",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 32,
      "deletions": 9,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -1,20 +1,43 @@\n+2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gdb.base/breakpoint-in-ro-region.exp: Disable when debugging.\n+\t* gdb.base/debug-expr.exp: Likewise.\n+\t* gdb.base/foll-fork.exp: Likewise.\n+\t* gdb.base/foll-vfork.exp: Likewise.\n+\t* gdb.base/fork-print-inferior-events.exp: Likewise.\n+\t* gdb.base/gdb-sigterm.exp: Likewise.\n+\t* gdb.base/gdbinit-history.exp: Likewise.\n+\t* gdb.base/osabi.exp: Likewise.\n+\t* gdb.base/sss-bp-on-user-bp-2.exp: Likewise.\n+\t* gdb.base/ui-redirect.exp: Likewise.\n+\t* gdb.gdb/unittest.exp: Likewise.\n+\t* gdb.mi/mi-break.exp: Disable separate-mi-tty when debugging.\n+\t* gdb.mi/mi-watch.exp: Likewise.\n+\t* gdb.mi/new-ui-mi-sync.exp: Likewise.\n+\t* gdb.mi/user-selected-context-sync.exp: Likewise.\n+\t* gdb.python/python.exp: Disable debug test when debugging.\n+\t* gdb.threads/check-libthread-db.exp: Disable when debugging.\n+\t* gdb.threads/signal-while-stepping-over-bp-other-thread.exp:\n+\tLikewise.\n+\t* gdb.threads/stepi-random-signal.exp: Likewise.\n+\n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* Makefile.in: Pass through GDB_DEBUG.\n \t* README (Testsuite Parameters): Add GDB_DEBUG.\n-        (gdb,debug): Add board setting.\n- \t* lib/gdb.exp (default_gdb_start): Start debugging.\n- \t(gdb_debug_enabled): New procedure.\n- \t(gdb_debug_init): Likewise.\n+\t(gdb,debug): Add board setting.\n+\t* lib/gdb.exp (default_gdb_start): Start debugging.\n+\t(gdb_debug_enabled): New procedure.\n+\t(gdb_debug_init): Likewise.\n \n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n-\n+\t\n \t* Makefile.in: Pass through GDB_DEBUG.\n \t* README (Testsuite Parameters): Add GDB_DEBUG.\n-        (gdb,debug): Add board setting.\n- \t* lib/gdb.exp (default_gdb_start): Start debugging.\n- \t(gdb_debug_enabled): New procedure.\n- \t(gdb_debug_init): Likewise.\n+\t(gdb,debug): Add board setting.\n+\t* lib/gdb.exp (default_gdb_start): Start debugging.\n+\t(gdb_debug_enabled): New procedure.\n+\t(gdb_debug_init): Likewise.\n \n 2019-05-17  Alan Hayward  <alan.hayward@arm.com>\n "
    },
    {
      "sha": "9099df0a08b64c76bf8f3c4b93fcc78dbeab6f67",
      "filename": "gdb/testsuite/gdb.base/breakpoint-in-ro-region.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/breakpoint-in-ro-region.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/breakpoint-in-ro-region.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/breakpoint-in-ro-region.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -15,6 +15,13 @@\n \n # This file is part of the gdb testsuite\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile] } {"
    },
    {
      "sha": "6da591b9cadade6e56d1fd599b102b62c7a59d90",
      "filename": "gdb/testsuite/gdb.base/debug-expr.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/debug-expr.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/debug-expr.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/debug-expr.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -15,6 +15,13 @@\n \n # Test \"set debug expr 1\" on c expressions.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile .c\n \n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug}]} {"
    },
    {
      "sha": "9f27c4c962cc16dc454f76aff5905eebe86d2c35",
      "filename": "gdb/testsuite/gdb.base/foll-fork.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/foll-fork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/foll-fork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-fork.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -20,6 +20,13 @@ if { ![istarget \"*-*-linux*\"] && ![istarget \"*-*-openbsd*\"] } then {\n     continue\n }\n \n+# Test relies on checking follow-fork output. Do not run if gdb debug is\n+# enabled as it will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {"
    },
    {
      "sha": "7bfebb2a91f06dc954469b64da8b1c36f642eb34",
      "filename": "gdb/testsuite/gdb.base/foll-vfork.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/foll-vfork.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/foll-vfork.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/foll-vfork.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -25,6 +25,13 @@ if {![istarget \"*-linux*\"]} then {\n     continue\n }\n \n+# Test relies on checking follow-fork output. Do not run if gdb debug is\n+# enabled as it will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n set compile_options debug"
    },
    {
      "sha": "2befdd8edec08aec3caf4e57a1066c81d1844e90",
      "filename": "gdb/testsuite/gdb.base/fork-print-inferior-events.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/fork-print-inferior-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/fork-print-inferior-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/fork-print-inferior-events.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -25,6 +25,13 @@ if { [use_gdb_stub] } {\n     return\n }\n \n+# Test relies on checking follow-fork output. Do not run if gdb debug is\n+# enabled as it will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile debug] } {"
    },
    {
      "sha": "f0a26c6085ca404c0f520195270c3a44a0b928de",
      "filename": "gdb/testsuite/gdb.base/gdb-sigterm.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/gdb-sigterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/gdb-sigterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/gdb-sigterm.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -15,6 +15,13 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n # The test program exits after a while, in case GDB crashes.  Make it"
    },
    {
      "sha": "b45e7116d9eda9e5033e59f224f3b9cd3c6e5e70",
      "filename": "gdb/testsuite/gdb.base/gdbinit-history.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/gdbinit-history.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/gdbinit-history.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/gdbinit-history.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -21,6 +21,12 @@\n # We cannot expect remote hosts to see environment variables set on the\n # local machine.\n \n+# Do not run if gdb debug is enabled - it interferes with the command history.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n if { [is_remote host] } {\n     unsupported \"can't set environment variables on remote host\"\n     return -1"
    },
    {
      "sha": "f4418cac656df70ef6fd9b0b01ae7cf53c901cb8",
      "filename": "gdb/testsuite/gdb.base/osabi.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/osabi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/osabi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/osabi.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -15,6 +15,13 @@\n \n # This file is part of the gdb testsuite.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n # Test that choosing \"set osabi none\" really requests a gdbarch with no osabi.\n \n proc test_set_osabi_none { } {"
    },
    {
      "sha": "d25ad794cb07a35e61052c1e0005361e7b75083e",
      "filename": "gdb/testsuite/gdb.base/sss-bp-on-user-bp-2.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/sss-bp-on-user-bp-2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/sss-bp-on-user-bp-2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sss-bp-on-user-bp-2.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -31,6 +31,13 @@\n # 4 - The single-step finishes, and GDB removes the single-step\n #     breakpoint.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {"
    },
    {
      "sha": "4507ac51a27d81b5e47eb4a0f67682951c8ac8ff",
      "filename": "gdb/testsuite/gdb.base/ui-redirect.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/ui-redirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.base/ui-redirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ui-redirect.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -13,6 +13,12 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# Do not run if gdb debug is enabled as it will interfere with log redirect.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n if { [prepare_for_testing \"failed to prepare\" ui-redirect start.c] } {\n     return -1\n }"
    },
    {
      "sha": "e6ec628049542ae6f32ee1f8e3095283ff58abc5",
      "filename": "gdb/testsuite/gdb.gdb/unittest.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.gdb/unittest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.gdb/unittest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/unittest.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -13,6 +13,13 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# Do not run if gdb debug is enabled as maintenance output will be\n+# redirected to the log files.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n set do_xml_test [expr ![gdb_skip_xml_test]]\n \n gdb_start"
    },
    {
      "sha": "c517ce886fab14a6d42628d7367c8bb623d14d61",
      "filename": "gdb/testsuite/gdb.mi/mi-break.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/mi-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/mi-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-break.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -429,6 +429,13 @@ proc test_break {mi_mode} {\n     test_explicit_breakpoints\n }\n \n-foreach_with_prefix mi-mode {\"main\" \"separate\"} {\n+if [gdb_debug_enabled] {\n+  # gdb debug doesn't work for separate-mi-tty.\n+  set modes {\"main\"}\n+} else {\n+  set modes {\"main\" \"separate\"}\n+}\n+\n+foreach_with_prefix mi-mode $modes {\n     test_break ${mi-mode}\n }"
    },
    {
      "sha": "23cc178d71a95a94ac2b621b76a1f0d8ecb06e58",
      "filename": "gdb/testsuite/gdb.mi/mi-watch.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/mi-watch.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/mi-watch.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-watch.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -174,9 +174,16 @@ proc test_watchpoint_all {mi_mode type} {\n     test_watchpoint_triggering\n }\n \n+if [gdb_debug_enabled] {\n+  # gdb debug doesn't work for separate-mi-tty.\n+  set modes {\"main\"}\n+} else {\n+  set modes {\"main\" \"separate\"}\n+}\n+\n # Run the tests twice, once using software watchpoints, and another\n # with hardware watchpoints.\n-foreach_with_prefix mi-mode {\"main\" \"separate\"} {\n+foreach_with_prefix mi-mode $modes {\n     foreach_with_prefix wp-type {\"sw\" \"hw\"} {\n \ttest_watchpoint_all ${mi-mode} ${wp-type}\n     }"
    },
    {
      "sha": "5560a8be966fa0163f4729db96ca252412694508",
      "filename": "gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -20,6 +20,12 @@\n # commands, MI should not process further commands until the inferior\n # stops again.  See PR gdb/20418.\n \n+# Do not run if gdb debug is enabled as it doesn't work for separate-mi-tty.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n load_lib mi-support.exp\n \n standard_testfile"
    },
    {
      "sha": "621b4c5163b48aa0c8b96bcf1c969b3bf28cd3b7",
      "filename": "gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/user-selected-context-sync.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -29,6 +29,12 @@\n # - Thread 3 of each inferior is either stopped at /* thread loop line */, if we\n #   are using all-stop, or running, if we are using non-stop.\n \n+# Do not run if gdb debug is enabled as it doesn't work for separate-mi-tty.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n load_lib mi-support.exp\n \n standard_testfile"
    },
    {
      "sha": "3b5d1a462c1926da620aee383984f3ac65db8122",
      "filename": "gdb/testsuite/gdb.python/python.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.python/python.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.python/python.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/python.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -293,7 +293,10 @@ gdb_test \"python print (sys.stdout)\" \".*gdb.GdbOutputFile (instance|object) at.*\n gdb_test \"python gdb.write(\\\"Foo\\\\n\\\")\" \"Foo\" \"test default write\"\n gdb_test \"python gdb.write(\\\"Error stream\\\\n\\\", stream=gdb.STDERR)\" \"Error stream\" \"test stderr write\"\n gdb_test \"python gdb.write(\\\"Normal stream\\\\n\\\", stream=gdb.STDOUT)\" \"Normal stream\" \"test stdout write\"\n-gdb_test \"python gdb.write(\\\"Log stream\\\\n\\\", stream=gdb.STDLOG)\" \"Log stream\" \"test stdlog write\"\n+\n+if ![gdb_debug_enabled] {\n+  gdb_test \"python gdb.write(\\\"Log stream\\\\n\\\", stream=gdb.STDLOG)\" \"Log stream\" \"test stdlog write\"\n+}\n \n # Turn on full stack printing for subsequent tests.\n gdb_py_test_silent_cmd \"set python print-stack full\" \\"
    },
    {
      "sha": "6baa4910d38769205a2685af04849e80dd5945c2",
      "filename": "gdb/testsuite/gdb.threads/check-libthread-db.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/check-libthread-db.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/check-libthread-db.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/check-libthread-db.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -18,6 +18,13 @@ if {[target_info gdb_protocol] != \"\" || ![istarget *-linux*]} {\n     continue\n }\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n \n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" \\"
    },
    {
      "sha": "9fb3762934c9c1cff0f3e5a23fa67eb554623820",
      "filename": "gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-while-stepping-over-bp-other-thread.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -18,6 +18,12 @@\n # stop, when the thread that hit that breakpoint is not the stepped\n # thread.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    continue\n+}\n+\n standard_testfile\n set executable ${testfile}\n "
    },
    {
      "sha": "fd593c38e41754582f1c507e34a5f5c8fbe9daca",
      "filename": "gdb/testsuite/gdb.threads/stepi-random-signal.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/stepi-random-signal.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/81f47ac29f8cdb888f2d81c5daa9bfc4747738aa/gdb/testsuite/gdb.threads/stepi-random-signal.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/stepi-random-signal.exp?ref=81f47ac29f8cdb888f2d81c5daa9bfc4747738aa",
      "patch": "@@ -13,6 +13,13 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n+# Test relies on checking gdb debug output. Do not run if gdb debug is\n+# enabled as any debug will be redirected to the log.\n+if [gdb_debug_enabled] {\n+    untested \"debug is enabled\"\n+    return 0\n+}\n+\n standard_testfile\n set executable ${testfile}\n "
    }
  ]
}