{
  "sha": "bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmNiMWRhN2ZiNzBmNTQzYjNlMGM0ODllNWFiN2RkN2MzODE0MmViNA==",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-09-16T18:40:05Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2020-09-16T18:40:05Z"
    },
    "message": "Assume KERN_PROC_PATHNAME is present on FreeBSD hosts.\n\nFreeBSD kernels have included this sysctl since 6.0 release.  The most\nrecent release without support is 5.5 which was released in May of\n2006.\n\nBoth the sysctl and the /proc/<pid>/exe file call the same function in\nthe kernel to obtain the path (vn_fullpath).  If the sysctl fails, the\nreadlink call will also fail, so there is no need to keep the readlink\nfallback.\n\ngdb/ChangeLog:\n\n\t* fbsd-nat.c (fbsd_nat_target::pid_to_exec_file): Always use\n\tsysctl and remove procfs fallback.",
    "tree": {
      "sha": "d20cbbd165246645e87b53b8d922c00b2ebcb84f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d20cbbd165246645e87b53b8d922c00b2ebcb84f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5515f729737520b465d57d18581ba91a83ca63e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5515f729737520b465d57d18581ba91a83ca63e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5515f729737520b465d57d18581ba91a83ca63e7"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 5,
    "deletions": 13
  },
  "files": [
    {
      "sha": "68ecbf01b9618cf0c0ab9785d72d3c5cec079eda",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-16  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* fbsd-nat.c (fbsd_nat_target::pid_to_exec_file): Always use\n+\tsysctl and remove procfs fallback.\n+\n 2020-09-16  John Baldwin  <jhb@FreeBSD.org>\n \n \t* fbsd-nat.c: Assume PT_LWPINFO is always defined."
    },
    {
      "sha": "6193e0fbde00413f0bb9e0d3085259e92a5c688b",
      "filename": "gdb/fbsd-nat.c",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4/gdb/fbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4/gdb/fbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/fbsd-nat.c?ref=bcb1da7fb70f543b3e0c489e5ab7dd7c38142eb4",
      "patch": "@@ -53,11 +53,7 @@\n char *\n fbsd_nat_target::pid_to_exec_file (int pid)\n {\n-  ssize_t len;\n   static char buf[PATH_MAX];\n-  char name[PATH_MAX];\n-\n-#ifdef KERN_PROC_PATHNAME\n   size_t buflen;\n   int mib[4];\n \n@@ -71,15 +67,6 @@ fbsd_nat_target::pid_to_exec_file (int pid)\n        for processes without an associated executable such as kernel\n        processes.  */\n     return buflen == 0 ? NULL : buf;\n-#endif\n-\n-  xsnprintf (name, PATH_MAX, \"/proc/%d/exe\", pid);\n-  len = readlink (name, buf, PATH_MAX - 1);\n-  if (len != -1)\n-    {\n-      buf[len] = '\\0';\n-      return buf;\n-    }\n \n   return NULL;\n }"
    }
  ]
}