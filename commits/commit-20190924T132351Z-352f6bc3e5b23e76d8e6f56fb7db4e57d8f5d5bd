{
  "sha": "352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzUyZjZiYzNlNWIyM2U3NmQ4ZTZmNTZmYjdkYjRlNTdkOGY1ZDViZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-24T13:17:13Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-24T13:23:51Z"
    },
    "message": "PR25031, nm reports wrong address on 32bit\n\nUsing saved_format breaks when nm is presented with multiple object\nfiles, some 32-bit and some 64-bit.\n\n\tPR 25031\n\t* nm.c (print_format_string): New.\n\t(get_print_format): Delete saved_format.  Move earlier.\n\t(set_print_width): Call get_print_format.\n\t(print_value): Use print_format_string.",
    "tree": {
      "sha": "f0ebd14ca712bdfc4ef9e9be85ef8a7d1d1d75e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f0ebd14ca712bdfc4ef9e9be85ef8a7d1d1d75e6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e449ea97ebd3c11a8da5df174f1a1333fbe82828",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e449ea97ebd3c11a8da5df174f1a1333fbe82828",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e449ea97ebd3c11a8da5df174f1a1333fbe82828"
    }
  ],
  "stats": {
    "total": 112,
    "additions": 58,
    "deletions": 54
  },
  "files": [
    {
      "sha": "a136e5b716da5271c1f5c5dea704c5966a352257",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25031\n+\t* nm.c (print_format_string): New.\n+\t(get_print_format): Delete saved_format.  Move earlier.\n+\t(set_print_width): Call get_print_format.\n+\t(print_value): Use print_format_string.\n+\n 2019-09-23  Alan Modra  <amodra@gmail.com>\n \n \t* dlltool.c: Include coff-bfd.h."
    },
    {
      "sha": "2ee38c29f76a95300750b38a0dab2b13f510ffa5",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 50,
      "deletions": 54,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=352f6bc3e5b23e76d8e6f56fb7db4e57d8f5d5bd",
      "patch": "@@ -142,6 +142,7 @@ static struct output_fns formats[] =\n /* The output format to use.  */\n static struct output_fns *format = &formats[FORMAT_DEFAULT];\n static unsigned int print_format = FORMAT_DEFAULT;\n+static const char *print_format_string = NULL;\n \n /* Command options.  */\n \n@@ -1216,6 +1217,51 @@ display_rel_file (bfd *abfd, bfd *archive_bfd)\n   free (symsizes);\n }\n \n+/* Construct a formatting string for printing symbol values.  */\n+\n+static const char *\n+get_print_format (void)\n+{\n+  const char * padding;\n+  if (print_format == FORMAT_POSIX)\n+    {\n+      /* POSIX compatible output does not have any padding.  */\n+      padding = \"\";\n+    }\n+  else if (print_width == 32)\n+    {\n+      padding =\"08\";\n+    }\n+  else /* print_width == 64 */\n+    {\n+      padding = \"016\";\n+    }\n+\n+  const char * length = \"l\";\n+  if (print_width == 64)\n+    {\n+#if BFD_HOST_64BIT_LONG\n+      ;\n+#elif BFD_HOST_64BIT_LONG_LONG\n+#ifndef __MSVCRT__\n+      length = \"ll\";\n+#else\n+      length = \"I64\";\n+#endif\n+#endif\n+    }\n+\n+  const char * radix = NULL;\n+  switch (print_radix)\n+    {\n+    case 8:  radix = \"o\"; break;\n+    case 10: radix = \"d\"; break;\n+    case 16: radix = \"x\"; break;\n+    }\n+\n+  return concat (\"%\", padding, length, radix, NULL);\n+}\n+\n static void\n set_print_width (bfd *file)\n {\n@@ -1234,6 +1280,8 @@ set_print_width (bfd *file)\n       else\n \tprint_width = 32;\n     }\n+  free ((char *) print_format_string);\n+  print_format_string = get_print_format ();\n }\n \n static void\n@@ -1474,58 +1522,6 @@ print_symbol_filename_posix (bfd *archive_bfd, bfd *abfd)\n     }\n }\n \f\n-/* Construct a formatting string for printing symbol values.  */\n-\n-static const char *\n-get_print_format (void)\n-{\n-  static const char * saved_format = NULL;\n-\n-  /* See if we have already constructed the format.  */\n-  if (saved_format)\n-    return saved_format;\n-\n-  const char * padding;\n-  if (print_format == FORMAT_POSIX)\n-    {\n-      /* POSIX compatible output does not have any padding.  */\n-      padding = \"\";\n-    }\n-  else if (print_width == 32)\n-    {\n-      padding =\"08\";\n-    }\n-  else /* print_width == 64 */\n-    {\n-      padding = \"016\";\n-    }\n-\n-  const char * length = \"l\";\n-  if (print_width == 64)\n-    {\n-#if BFD_HOST_64BIT_LONG\n-      ;\n-#elif BFD_HOST_64BIT_LONG_LONG\n-#ifndef __MSVCRT__\n-      length = \"ll\";\n-#else\n-      length = \"I64\";\n-#endif\n-#endif\n-    }\n-\n-  const char * radix = NULL;\n-  switch (print_radix)\n-    {\n-    case 8:  radix = \"o\"; break;\n-    case 10: radix = \"d\"; break;\n-    case 16: radix = \"x\"; break;\n-    }\n-\n-  saved_format = concat (\"%\", padding, length, radix, NULL);\n-  return saved_format;\n-}\n-\n /* Print a symbol value.  */\n \n static void\n@@ -1534,12 +1530,12 @@ print_value (bfd *abfd ATTRIBUTE_UNUSED, bfd_vma val)\n   switch (print_width)\n     {\n     case 32:\n-      printf (get_print_format (), (unsigned long) val);\n+      printf (print_format_string, (unsigned long) val);\n       break;\n \n     case 64:\n #if BFD_HOST_64BIT_LONG || BFD_HOST_64BIT_LONG_LONG\n-      printf (get_print_format (), val);\n+      printf (print_format_string, val);\n #else\n       /* We have a 64 bit value to print, but the host is only 32 bit.  */\n       if (print_radix == 16)"
    }
  ]
}