{
  "sha": "e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTkxOTRhMWEwZTQ5ZjA2NDZkNWFjNDE1ODM2Y2M1ZDEzM2YxNGJiZQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2019-11-29T11:17:36Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2019-11-29T11:18:21Z"
    },
    "message": "gdb: fix segfault in overload resolution debug output\n\nA segfault occurs if overload resolution debug mode is turned on via\nthe 'set debug overload' command.  E.g.:\n\n~~~\n$ gdb ./a.out\n...\n(gdb) start\n...\n(gdb) set debug overload 1\n(gdb) print foo(5)\n-- Arg is int [8], parm is double [9]\nOverloaded function instance (null) # of parms 1\nSegmentation fault\n$\n~~~\n\nThe problem is, GDB tries to print the badness vector after it has\nbeen std::move'd.  Fix the problem by printing the vector before it is\nmoved.\n\ngdb/ChangeLog:\n2019-11-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* valops.c (find_oload_champ): Print part of debug messages\n\tbefore the badness vector is std::move'd.\n\nChange-Id: Ia623f9637e82ec332bfeac23eb6b0f2ffdcdde27",
    "tree": {
      "sha": "c4a6ebe2cea13ab40b0c0c15f21de41d7a61cb72",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c4a6ebe2cea13ab40b0c0c15f21de41d7a61cb72"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9194a1a0e49f0646d5ac415836cc5d133f14bbe/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "13364701d8c1b5b184ac6db4b835a3bb680766a0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13364701d8c1b5b184ac6db4b835a3bb680766a0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/13364701d8c1b5b184ac6db4b835a3bb680766a0"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 30,
    "deletions": 23
  },
  "files": [
    {
      "sha": "a3c06705d970bab80ff31a5588a2dc2119c92477",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9194a1a0e49f0646d5ac415836cc5d133f14bbe/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9194a1a0e49f0646d5ac415836cc5d133f14bbe/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-29  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* valops.c (find_oload_champ): Print part of debug messages\n+\tbefore the badness vector is std::move'd.\n+\n 2019-11-28  Tom Tromey  <tom@tromey.com>\n \n \t* value.c (creal_internal_fn): Fix comment."
    },
    {
      "sha": "8af53deaa6f8c36c59b9e1af591fe070c2156279",
      "filename": "gdb/valops.c",
      "status": "modified",
      "additions": 25,
      "deletions": 23,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e9194a1a0e49f0646d5ac415836cc5d133f14bbe/gdb/valops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e9194a1a0e49f0646d5ac415836cc5d133f14bbe/gdb/valops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valops.c?ref=e9194a1a0e49f0646d5ac415836cc5d133f14bbe",
      "patch": "@@ -3023,6 +3023,28 @@ find_oload_champ (gdb::array_view<value *> args,\n       bv = rank_function (parm_types,\n \t\t\t  args.slice (static_offset));\n \n+      if (overload_debug)\n+\t{\n+\t  if (methods != NULL)\n+\t    fprintf_filtered (gdb_stderr,\n+\t\t\t      \"Overloaded method instance %s, # of parms %d\\n\",\n+\t\t\t      methods[ix].physname, (int) parm_types.size ());\n+\t  else if (xmethods != NULL)\n+\t    fprintf_filtered (gdb_stderr,\n+\t\t\t      \"Xmethod worker, # of parms %d\\n\",\n+\t\t\t      (int) parm_types.size ());\n+\t  else\n+\t    fprintf_filtered (gdb_stderr,\n+\t\t\t      \"Overloaded function instance \"\n+\t\t\t      \"%s # of parms %d\\n\",\n+\t\t\t      functions[ix]->demangled_name (),\n+\t\t\t      (int) parm_types.size ());\n+\t  for (jj = 0; jj < args.size () - static_offset; jj++)\n+\t    fprintf_filtered (gdb_stderr,\n+\t\t\t      \"...Badness @ %d : %d\\n\",\n+\t\t\t      jj, bv[jj].rank);\n+\t}\n+\n       if (oload_champ_bv->empty ())\n \t{\n \t  *oload_champ_bv = std::move (bv);\n@@ -3048,29 +3070,9 @@ find_oload_champ (gdb::array_view<value *> args,\n \t    break;\n \t  }\n       if (overload_debug)\n-\t{\n-\t  if (methods != NULL)\n-\t    fprintf_filtered (gdb_stderr,\n-\t\t\t      \"Overloaded method instance %s, # of parms %d\\n\",\n-\t\t\t      methods[ix].physname, (int) parm_types.size ());\n-\t  else if (xmethods != NULL)\n-\t    fprintf_filtered (gdb_stderr,\n-\t\t\t      \"Xmethod worker, # of parms %d\\n\",\n-\t\t\t      (int) parm_types.size ());\n-\t  else\n-\t    fprintf_filtered (gdb_stderr,\n-\t\t\t      \"Overloaded function instance \"\n-\t\t\t      \"%s # of parms %d\\n\",\n-\t\t\t      functions[ix]->demangled_name (),\n-\t\t\t      (int) parm_types.size ());\n-\t  for (jj = 0; jj < args.size () - static_offset; jj++)\n-\t    fprintf_filtered (gdb_stderr,\n-\t\t\t      \"...Badness @ %d : %d\\n\", \n-\t\t\t      jj, bv[jj].rank);\n-\t  fprintf_filtered (gdb_stderr, \"Overload resolution \"\n-\t\t\t    \"champion is %d, ambiguous? %d\\n\", \n-\t\t\t    oload_champ, oload_ambiguous);\n-\t}\n+\tfprintf_filtered (gdb_stderr, \"Overload resolution \"\n+\t\t\t  \"champion is %d, ambiguous? %d\\n\",\n+\t\t\t  oload_champ, oload_ambiguous);\n     }\n \n   return oload_champ;"
    }
  ]
}