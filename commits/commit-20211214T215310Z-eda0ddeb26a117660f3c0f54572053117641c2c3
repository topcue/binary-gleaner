{
  "sha": "eda0ddeb26a117660f3c0f54572053117641c2c3",
  "node_id": "C_kwDOANOeidoAKGVkYTBkZGViMjZhMTE3NjYwZjNjMGY1NDU3MjA1MzExNzY0MWMyYzM",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-14T10:43:21Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-14T21:53:10Z"
    },
    "message": "XCOFF C_STSYM test failure on 32-bit host\n\nThis test was failing here and on another similar symbol:\n[  4](sec  1)(fl 0x00)(ty   0)(scl 143) (nx 0) 0x05d1745d11745d21 .bs\nwhere correct output is\n[  4](sec  1)(fl 0x00)(ty   0)(scl 143) (nx 0) 0x000000000000000a .bs\n\nThe problem is caused by a 32-bit host pointer being sign-extended\nwhen stored into a 64-bit bfd_vma, and then that value not being\ntrimmed back to 32 bits when used.  The following belt-and-braces\npatch fixes both the store and subsequent reads.\n\n\t* coffcode.h (coff_slurp_symbol_table): Do not sign extend\n\twhen storing a host pointer to syment.n_value.\n\t* coffgen.c (coff_get_symbol_info): Cast syment.n_value to a\n\tbfd_hostptr_t before using in arithmetic.\n\t(coff_print_symbol): Likewise.",
    "tree": {
      "sha": "757d6033615d4a4bd0d45bad65083686b5c744e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/757d6033615d4a4bd0d45bad65083686b5c744e2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eda0ddeb26a117660f3c0f54572053117641c2c3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eda0ddeb26a117660f3c0f54572053117641c2c3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eda0ddeb26a117660f3c0f54572053117641c2c3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eda0ddeb26a117660f3c0f54572053117641c2c3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "237f6eac1577223034a3e3436bd270428d097534",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/237f6eac1577223034a3e3436bd270428d097534",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/237f6eac1577223034a3e3436bd270428d097534"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 8,
    "deletions": 7
  },
  "files": [
    {
      "sha": "4405c9fe5ead17eded6c58f6223e673115a895f6",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eda0ddeb26a117660f3c0f54572053117641c2c3/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eda0ddeb26a117660f3c0f54572053117641c2c3/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=eda0ddeb26a117660f3c0f54572053117641c2c3",
      "patch": "@@ -4826,8 +4826,8 @@ coff_slurp_symbol_table (bfd * abfd)\n \t      /* The value is actually a symbol index.  Save a pointer\n \t\t to the symbol instead of the index.  FIXME: This\n \t\t should use a union.  */\n-\t      src->u.syment.n_value =\n-\t\t(long) (intptr_t) (native_symbols + src->u.syment.n_value);\n+\t      src->u.syment.n_value\n+\t\t= (bfd_hostptr_t) (native_symbols + src->u.syment.n_value);\n \t      dst->symbol.value = src->u.syment.n_value;\n \t      src->fix_value = 1;\n \t      break;"
    },
    {
      "sha": "5681af1b6217a9f351a96379a82e77037b857da8",
      "filename": "bfd/coffgen.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eda0ddeb26a117660f3c0f54572053117641c2c3/bfd/coffgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eda0ddeb26a117660f3c0f54572053117641c2c3/bfd/coffgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffgen.c?ref=eda0ddeb26a117660f3c0f54572053117641c2c3",
      "patch": "@@ -2130,10 +2130,10 @@ coff_get_symbol_info (bfd *abfd, asymbol *symbol, symbol_info *ret)\n   if (coffsymbol (symbol)->native != NULL\n       && coffsymbol (symbol)->native->fix_value\n       && coffsymbol (symbol)->native->is_sym)\n-    ret->value =\n-      ((coffsymbol (symbol)->native->u.syment.n_value -\n-\t(bfd_hostptr_t) obj_raw_syments (abfd))\n-       / sizeof (combined_entry_type));\n+    ret->value\n+      = (((bfd_hostptr_t) coffsymbol (symbol)->native->u.syment.n_value\n+\t  - (bfd_hostptr_t) obj_raw_syments (abfd))\n+\t / sizeof (combined_entry_type));\n }\n \n /* Print out information about COFF symbol.  */\n@@ -2181,7 +2181,8 @@ coff_print_symbol (bfd *abfd,\n \t  if (! combined->fix_value)\n \t    val = (bfd_vma) combined->u.syment.n_value;\n \t  else\n-\t    val = ((combined->u.syment.n_value - (bfd_hostptr_t) root)\n+\t    val = (((bfd_hostptr_t) combined->u.syment.n_value\n+\t\t    - (bfd_hostptr_t) root)\n \t\t   / sizeof (combined_entry_type));\n \n \t  fprintf (file, \"(sec %2d)(fl 0x%02x)(ty %3x)(scl %3d) (nx %d) 0x\","
    }
  ]
}