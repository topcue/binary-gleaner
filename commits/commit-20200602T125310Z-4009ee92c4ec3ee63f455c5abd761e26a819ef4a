{
  "sha": "4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDAwOWVlOTJjNGVjM2VlNjNmNDU1YzVhYmQ3NjFlMjZhODE5ZWY0YQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-01T21:42:21Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-02T12:53:10Z"
    },
    "message": "gdb: Convert language la_iterate_over_symbols field to a method\n\nThis commit changes the language_data::la_iterate_over_symbols\nfunction pointer member variable into a member function of\nlanguage_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_add_all_symbols): Update comment.\n\t(ada_iterate_over_symbols): Delete, move implementation to...\n\t(ada_language::iterate_over_symbols): ...here, a new member\n\tfunction, rewrite to use range based for loop.\n\t(ada_language_data): Delete la_iterate_over_symbols initializer.\n\t* c-lang.c (c_language_data): Likewise.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t* go-lang.c (go_language_data): Likewise.\n\t* language.c (unknown_language_data): Likewise.\n\t(auto_language_data): Likewise.\n\t* language.h (language_data): Delete la_iterate_over_symbols field.\n\t(language_defn::iterate_over_symbols): New member function.\n\t(LA_ITERATE_OVER_SYMBOLS): Update.\n\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n\t* m2-lang.c (m2_language_data): Delete la_iterate_over_symbols\n\tinitializer.\n\t* objc-lang.c (objc_language_data): Likewise.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t* rust-lang.c (rust_language_data): Likewise.",
    "tree": {
      "sha": "a088ee6a463cb0735622cf690787f8df3f131b4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a088ee6a463cb0735622cf690787f8df3f131b4f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54f4ca4610893424746e56997115b71bc31ffd8a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54f4ca4610893424746e56997115b71bc31ffd8a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/54f4ca4610893424746e56997115b71bc31ffd8a"
    }
  ],
  "stats": {
    "total": 128,
    "additions": 70,
    "deletions": 58
  },
  "files": [
    {
      "sha": "34c55810852d725b5f76ced39b0791f51ecf7f77",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -1,3 +1,30 @@\n+2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_add_all_symbols): Update comment.\n+\t(ada_iterate_over_symbols): Delete, move implementation to...\n+\t(ada_language::iterate_over_symbols): ...here, a new member\n+\tfunction, rewrite to use range based for loop.\n+\t(ada_language_data): Delete la_iterate_over_symbols initializer.\n+\t* c-lang.c (c_language_data): Likewise.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t* go-lang.c (go_language_data): Likewise.\n+\t* language.c (unknown_language_data): Likewise.\n+\t(auto_language_data): Likewise.\n+\t* language.h (language_data): Delete la_iterate_over_symbols field.\n+\t(language_defn::iterate_over_symbols): New member function.\n+\t(LA_ITERATE_OVER_SYMBOLS): Update.\n+\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n+\t* m2-lang.c (m2_language_data): Delete la_iterate_over_symbols\n+\tinitializer.\n+\t* objc-lang.c (objc_language_data): Likewise.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t* rust-lang.c (rust_language_data): Likewise.\n+\n 2020-06-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Delete"
    },
    {
      "sha": "762c124a654dae0339a179e729ea6e815e7970be",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 20,
      "deletions": 24,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -5681,7 +5681,7 @@ ada_add_all_symbols (struct obstack *obstackp,\n       else\n \t{\n \t  /* In the !full_search case we're are being called by\n-\t     ada_iterate_over_symbols, and we don't want to search\n+\t     iterate_over_symbols, and we don't want to search\n \t     superblocks.  */\n \t  ada_add_block_symbols (obstackp, block, lookup_name, domain, NULL);\n \t}\n@@ -5782,28 +5782,6 @@ ada_lookup_symbol_list (const char *name, const struct block *block,\n   return ada_lookup_symbol_list_worker (lookup_name, block, domain, results, 1);\n }\n \n-/* Implementation of the la_iterate_over_symbols method.  */\n-\n-static bool\n-ada_iterate_over_symbols\n-  (const struct block *block, const lookup_name_info &name,\n-   domain_enum domain,\n-   gdb::function_view<symbol_found_callback_ftype> callback)\n-{\n-  int ndefs, i;\n-  std::vector<struct block_symbol> results;\n-\n-  ndefs = ada_lookup_symbol_list_worker (name, block, domain, &results, 0);\n-\n-  for (i = 0; i < ndefs; ++i)\n-    {\n-      if (!callback (&results[i]))\n-\treturn false;\n-    }\n-\n-  return true;\n-}\n-\n /* The result is as for ada_lookup_symbol_list with FULL_SEARCH set\n    to 1, but choosing the first symbol found if there are multiple\n    choices.\n@@ -13999,7 +13977,6 @@ extern const struct language_data ada_language_data =\n   ada_collect_symbol_completion_matches,\n   ada_watch_location_expression,\n   ada_get_symbol_name_matcher,\t/* la_get_symbol_name_matcher */\n-  ada_iterate_over_symbols,\n   default_search_name_hash,\n   &ada_varobj_ops,\n   NULL,\n@@ -14114,6 +14091,25 @@ class ada_language : public language_defn\n     lai->bool_type_symbol = NULL;\n     lai->bool_type_default = builtin->builtin_bool;\n   }\n+\n+  /* See language.h.  */\n+\n+  bool iterate_over_symbols\n+\t(const struct block *block, const lookup_name_info &name,\n+\t domain_enum domain,\n+\t gdb::function_view<symbol_found_callback_ftype> callback) const override\n+  {\n+    std::vector<struct block_symbol> results;\n+\n+    ada_lookup_symbol_list_worker (name, block, domain, &results, 0);\n+    for (block_symbol &sym : results)\n+      {\n+\tif (!callback (&sym))\n+\t  return false;\n+      }\n+\n+    return true;\n+  }\n };\n \n /* Single instance of the Ada language class.  */"
    },
    {
      "sha": "bfd45f433c6303fdc470fb11060a7c7929538fe9",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -922,7 +922,6 @@ extern const struct language_data c_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &c_varobj_ops,\n   c_get_compile_context,\n@@ -1022,7 +1021,6 @@ extern const struct language_data cplus_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   cp_get_symbol_name_matcher,\n-  iterate_over_symbols,\n   cp_search_name_hash,\n   &cplus_varobj_ops,\n   cplus_get_compile_context,\n@@ -1164,7 +1162,6 @@ extern const struct language_data asm_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n@@ -1235,7 +1232,6 @@ extern const struct language_data minimal_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "5732778021499799f41d9696cc69a84c89aadebc",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -176,7 +176,6 @@ extern const struct language_data d_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "ae559dee812bfab81c01fe2a0c62f7751bfb846c",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -633,7 +633,6 @@ extern const struct language_data f_language_data =\n   f_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   cp_get_symbol_name_matcher,\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   cp_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "c596279012d477c8af0af457c56a7eef77910d42",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -561,7 +561,6 @@ extern const struct language_data go_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "33e8b16b11ab4008bb14849b3d00f0d734dd4d1a",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -838,7 +838,6 @@ extern const struct language_data unknown_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,\n@@ -905,7 +904,6 @@ extern const struct language_data auto_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "0880ced3bcde8fa0399baca52155fe501c424d7b",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 22,
      "deletions": 19,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -384,24 +384,6 @@ struct language_data\n     symbol_name_matcher_ftype *(*la_get_symbol_name_matcher)\n       (const lookup_name_info &);\n \n-    /* Find all symbols in the current program space matching NAME in\n-       DOMAIN, according to this language's rules.\n-\n-       The search is done in BLOCK only.\n-       The caller is responsible for iterating up through superblocks\n-       if desired.\n-\n-       For each one, call CALLBACK with the symbol.  If CALLBACK\n-       returns false, the iteration ends at that point.\n-\n-       This field may not be NULL.  If the language does not need any\n-       special processing here, 'iterate_over_symbols' should be\n-       used as the definition.  */\n-    bool (*la_iterate_over_symbols)\n-      (const struct block *block, const lookup_name_info &name,\n-       domain_enum domain,\n-       gdb::function_view<symbol_found_callback_ftype> callback);\n-\n     /* Hash the given symbol search name.  Use\n        default_search_name_hash if no special treatment is\n        required.  */\n@@ -508,6 +490,27 @@ struct language_defn : language_data\n     return basic_lookup_transparent_type (name);\n   }\n \n+  /* Find all symbols in the current program space matching NAME in\n+     DOMAIN, according to this language's rules.\n+\n+     The search is done in BLOCK only.\n+     The caller is responsible for iterating up through superblocks\n+     if desired.\n+\n+     For each one, call CALLBACK with the symbol.  If CALLBACK\n+     returns false, the iteration ends at that point.\n+\n+     This field may not be NULL.  If the language does not need any\n+     special processing here, 'iterate_over_symbols' should be\n+     used as the definition.  */\n+  virtual bool iterate_over_symbols\n+\t(const struct block *block, const lookup_name_info &name,\n+\t domain_enum domain,\n+\t gdb::function_view<symbol_found_callback_ftype> callback) const\n+  {\n+    return ::iterate_over_symbols (block, name, domain, callback);\n+  }\n+\n   /* List of all known languages.  */\n   static const struct language_defn *languages[nr_languages];\n };\n@@ -617,7 +620,7 @@ extern enum language set_language (enum language);\n \t\t\t\t       options))\n \n #define LA_ITERATE_OVER_SYMBOLS(BLOCK, NAME, DOMAIN, CALLBACK) \\\n-  (current_language->la_iterate_over_symbols (BLOCK, NAME, DOMAIN, CALLBACK))\n+  (current_language->iterate_over_symbols (BLOCK, NAME, DOMAIN, CALLBACK))\n \n /* Test a character to decide whether it can be printed in literal form\n    or needs to be printed in another representation.  For example,"
    },
    {
      "sha": "ddca05b3dbf6d0419a2676fc147da5cce65c593e",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -1168,7 +1168,7 @@ iterate_over_all_matching_symtabs\n \t\t       i++)\n \t\t    {\n \t\t      block = BLOCKVECTOR_BLOCK (SYMTAB_BLOCKVECTOR (symtab), i);\n-\t\t      state->language->la_iterate_over_symbols\n+\t\t      state->language->iterate_over_symbols\n \t\t\t(block, lookup_name, name_domain,\n \t\t\t [&] (block_symbol *bsym)\n \t\t\t {"
    },
    {
      "sha": "c83f9ef4c1efb15229a32b47e94f87f008c553a0",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -386,7 +386,6 @@ extern const struct language_data m2_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "6cf8bbbe091b96f9c9ba8c948a7defb7cfdc5115",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -401,7 +401,6 @@ extern const struct language_data objc_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "a548fe60a746449cdca8f8559af421dfc434d50f",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -1061,7 +1061,6 @@ extern const struct language_data opencl_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "7956d879997e38120cee8f55c5e66892828baee3",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -416,7 +416,6 @@ extern const struct language_data pascal_language_data =\n   default_collect_symbol_completion_matches,\n   c_watch_location_expression,\n   NULL,\t\t\t\t/* la_compare_symbol_for_completion */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    },
    {
      "sha": "966aa14a69e0a8ff9f6c3dee51022d87844fb01d",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4009ee92c4ec3ee63f455c5abd761e26a819ef4a/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=4009ee92c4ec3ee63f455c5abd761e26a819ef4a",
      "patch": "@@ -2093,7 +2093,6 @@ extern const struct language_data rust_language_data =\n   default_collect_symbol_completion_matches,\n   rust_watch_location_expression,\n   NULL,\t\t\t\t/* la_get_symbol_name_matcher */\n-  iterate_over_symbols,\n   default_search_name_hash,\n   &default_varobj_ops,\n   NULL,"
    }
  ]
}