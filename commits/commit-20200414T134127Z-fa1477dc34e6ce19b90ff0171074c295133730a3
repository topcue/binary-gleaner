{
  "sha": "fa1477dc34e6ce19b90ff0171074c295133730a3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmExNDc3ZGMzNGU2Y2UxOWI5MGZmMDE3MTA3NGMyOTUxMzM3MzBhMw==",
  "commit": {
    "author": {
      "name": "Stephen Casner",
      "email": "casner@acm.org",
      "date": "2020-04-14T13:41:27Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-04-14T13:41:27Z"
    },
    "message": "Fixes for the magic number used in PDP11 AOUT binaries.\n\n\tPR ld/25677\ninclude\t* aout/aout64.h (N_DATADDR): Add IMAGIC case.\n\nbfd\t* pdp11.c: Add implementation of --imagic option.\n\t(adjust_o_magic): Fix objcopy --extract-symbol test.\n\t* libaout.h (enum aout_magic): Add i_magic.\n\nld\t* emulparams/pdp11.sh (SCRIPT_NAME): Change to pdp11.\n\t(EXTRA_EM_FILE): New, add emulation file pdp11.\n\t* scripttempl/pdp11.sc: New, derived from aout.sc without\n\tirrelevant input sections.\n\t* emultempl/pdp11.em (_add_options, _handle_option)\n\t(_list_options): New. Add options -z, --imagic for pdp11-aout.\n\t(_before_parse): Make --omagic be default instead of --nmagic.\n\t(_get_script): Modify special-case linker script for --imagic.\n\t* lexsup.c (parse_args): Explictly set config.text_read_only for -n.\n\t* ld.texi (Options): Add documentation of PDP11-specific options.\n\t(Options): Fix unrelated typo to --no-compact-branches.\n\t* gen-doc.texi: @set PDP11.\n\t* testsuite/ld-pdp11/pdp11.exp: New, start pdp11 testing.\n\t* testsuite/ld-pdp11/sections.s: New, source for options tests.\n\t* testsuite/ld-pdp11/imagic.d: New, test --imagic format.\n\t* testsuite/ld-pdp11/imagicz.d: New, test -z (imagic) format.\n\t* testsuite/ld-pdp11/nmagic.d: New, test --nmagic format.\n\t* testsuite/ld-pdp11/omagic.d: New, test --omagic format.",
    "tree": {
      "sha": "165b1472d16c8efe22cacada145a841f5247ac28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/165b1472d16c8efe22cacada145a841f5247ac28"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fa1477dc34e6ce19b90ff0171074c295133730a3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa1477dc34e6ce19b90ff0171074c295133730a3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fa1477dc34e6ce19b90ff0171074c295133730a3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa1477dc34e6ce19b90ff0171074c295133730a3/comments",
  "author": {
    "login": "slcasner",
    "id": 5100408,
    "node_id": "MDQ6VXNlcjUxMDA0MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5100408?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slcasner",
    "html_url": "https://github.com/slcasner",
    "followers_url": "https://api.github.com/users/slcasner/followers",
    "following_url": "https://api.github.com/users/slcasner/following{/other_user}",
    "gists_url": "https://api.github.com/users/slcasner/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slcasner/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slcasner/subscriptions",
    "organizations_url": "https://api.github.com/users/slcasner/orgs",
    "repos_url": "https://api.github.com/users/slcasner/repos",
    "events_url": "https://api.github.com/users/slcasner/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slcasner/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "194d088fb1fa6c3c341994ca247d172c3f08c2da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/194d088fb1fa6c3c341994ca247d172c3f08c2da",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/194d088fb1fa6c3c341994ca247d172c3f08c2da"
    }
  ],
  "stats": {
    "total": 464,
    "additions": 457,
    "deletions": 7
  },
  "files": [
    {
      "sha": "0ef3b2faefd37a532d1ecfe98e48b8892fd2e4a3",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -1,3 +1,10 @@\n+2020-04-14  Stephen Casner  <casner@acm.org>\n+\n+\tPR ld/25677\n+\t* pdp11.c: Add implementation of --imagic option.\n+\t(adjust_o_magic): Fix objcopy --extract-symbol test.\n+\t* libaout.h (enum aout_magic): Add i_magic.\n+\n 2020-04-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \t    Nick Clifton  <nickc@redhat.com>\n "
    },
    {
      "sha": "61746db243a4b7f4d8de4879e07838fdf76b62b3",
      "filename": "bfd/libaout.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/libaout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/libaout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libaout.h?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -359,7 +359,8 @@ enum aout_magic {\n   undecided_magic = 0,\n   z_magic,\n   o_magic,\n-  n_magic\n+  n_magic,\n+  i_magic\n };\n \n struct aoutdata"
    },
    {
      "sha": "1f8c4061e9942df40bb4f552dbf5262f0b11cae3",
      "filename": "bfd/pdp11.c",
      "status": "modified",
      "additions": 59,
      "deletions": 3,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/pdp11.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/bfd/pdp11.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pdp11.c?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -63,6 +63,7 @@\n #define N_SET_FLAGS(execp, flags) do { } while (0)\n #define N_BADMAG(x) (N_MAGIC(x) != OMAGIC\t\\\n \t\t     && N_MAGIC(x) != NMAGIC\t\\\n+\t\t     && N_MAGIC(x) != IMAGIC\t\\\n \t\t     && N_MAGIC(x) != ZMAGIC)\n \n #include \"sysdep.h\"\n@@ -90,7 +91,8 @@ struct pdp11_external_exec\n #define\tA_MAGIC2\tNMAGIC\n #define NMAGIC\t\t0410\t/* Pure executable.  */\n #define ZMAGIC\t\t0413\t/* Demand-paged executable.  */\n-#define\tA_MAGIC3\t0411\t/* Separated I&D.  */\n+#define\tIMAGIC\t\t0411\t/* Separated I&D.  */\n+#define\tA_MAGIC3\tIMAGIC\n #define\tA_MAGIC4\t0405\t/* Overlay.  */\n #define\tA_MAGIC5\t0430\t/* Auto-overlay (nonseparate).  */\n #define\tA_MAGIC6\t0431\t/* Auto-overlay (separate).  */\n@@ -242,6 +244,10 @@ struct aout_final_link_info\n   struct external_nlist *output_syms;\n };\n \n+/* Copy of the link_info.separate_code boolean to select the output format with\n+   separate instruction and data spaces selected by --imagic */\n+static bfd_boolean separate_i_d = FALSE;\n+\n reloc_howto_type howto_table_pdp11[] =\n {\n   /* type\t       rs size bsz  pcrel bitpos ovrf\t\t\t  sf name     part_inpl readmask  setmask    pcdone */\n@@ -498,6 +504,8 @@ NAME (aout, some_aout_object_p) (bfd *abfd,\n     }\n   else if (N_MAGIC (execp) == OMAGIC)\n     adata (abfd).magic = o_magic;\n+  else if (N_MAGIC (execp) == IMAGIC)\n+    adata (abfd).magic = i_magic;\n   else\n     {\n       /* Should have been checked with N_BADMAG before this routine\n@@ -825,7 +833,7 @@ adjust_o_magic (bfd *abfd, struct internal_exec *execp)\n       vma += pad;\n       bss->vma = vma;\n     }\n-  else\n+  else if (data->size > 0 || bss->size > 0) /* PR25677: for objcopy --extract-symbol */\n     {\n       /* The VMA of the .bss section is set by the VMA of the\n \t .data section plus the size of the .data section.  We may\n@@ -988,6 +996,47 @@ adjust_n_magic (bfd *abfd, struct internal_exec *execp)\n   N_SET_MAGIC (execp, NMAGIC);\n }\n \n+static void\n+adjust_i_magic (bfd *abfd, struct internal_exec *execp)\n+{\n+  file_ptr pos = adata (abfd).exec_bytes_size;\n+  bfd_vma vma = 0;\n+  int pad;\n+  asection *text = obj_textsec (abfd);\n+  asection *data = obj_datasec (abfd);\n+  asection *bss = obj_bsssec (abfd);\n+\n+  /* Text.  */\n+  text->filepos = pos;\n+  if (!text->user_set_vma)\n+    text->vma = vma;\n+  else\n+    vma = text->vma;\n+  pos += execp->a_text;\n+\n+  /* Data.  */\n+  data->filepos = pos;\n+  if (!data->user_set_vma)\n+    data->vma = 0;\n+  vma = data->vma;\n+\n+  /* Since BSS follows data immediately, see if it needs alignment.  */\n+  vma += data->size;\n+  pad = align_power (vma, bss->alignment_power) - vma;\n+  execp->a_data = data->size + pad;\n+  pos += execp->a_data;\n+\n+  /* BSS.  */\n+  if (!bss->user_set_vma)\n+    bss->vma = vma;\n+  else\n+    vma = bss->vma;\n+\n+  /* Fix up exec header.  */\n+  execp->a_bss = bss->size;\n+  N_SET_MAGIC (execp, IMAGIC);\n+}\n+\n bfd_boolean\n NAME (aout, adjust_sizes_and_vmas) (bfd *abfd)\n {\n@@ -1018,7 +1067,9 @@ NAME (aout, adjust_sizes_and_vmas) (bfd *abfd)\n      I understand it better now, but I haven't time to do the cleanup this\n      minute.  */\n \n-  if (abfd->flags & WP_TEXT)\n+  if (separate_i_d)\n+    adata (abfd).magic = i_magic;\n+  else if (abfd->flags & WP_TEXT)\n     adata (abfd).magic = n_magic;\n   else\n     adata (abfd).magic = o_magic;\n@@ -1031,6 +1082,7 @@ NAME (aout, adjust_sizes_and_vmas) (bfd *abfd)\n \t\t{\n \t\tcase n_magic: str = \"NMAGIC\"; break;\n \t\tcase o_magic: str = \"OMAGIC\"; break;\n+\t\tcase i_magic: str = \"IMAGIC\"; break;\n \t\tcase z_magic: str = \"ZMAGIC\"; break;\n \t\tdefault: abort ();\n \t\t}\n@@ -1056,6 +1108,9 @@ NAME (aout, adjust_sizes_and_vmas) (bfd *abfd)\n     case n_magic:\n       adjust_n_magic (abfd, execp);\n       break;\n+    case i_magic:\n+      adjust_i_magic (abfd, execp);\n+      break;\n     default:\n       abort ();\n     }\n@@ -3624,6 +3679,7 @@ NAME (aout, final_link) (bfd *abfd,\n   if (bfd_link_pic (info))\n     abfd->flags |= DYNAMIC;\n \n+  separate_i_d = info->separate_code;\n   aout_info.info = info;\n   aout_info.output_bfd = abfd;\n   aout_info.contents = NULL;"
    },
    {
      "sha": "97409d9bf18b0c566ed26bf9f954f71cef267942",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-04-14  Stephen Casner  <casner@acm.org>\n+\n+\tPR ld/25677\n+\t* aout/aout64.h (N_DATADDR): Add IMAGIC case.\n+\n 2020-04-02  Jan W. Jagersma  <jwjagersma@gmail.com>\n \n \t* coff/go32exe.h: Remove file."
    },
    {
      "sha": "f52ae4152e1c899b2b5f00637ecd93c45e4d64da",
      "filename": "include/aout/aout64.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/include/aout/aout64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/include/aout/aout64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/aout/aout64.h?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -56,6 +56,7 @@ struct external_exec\n #else\n #define OMAGIC 0407\t\t/* Object file or impure executable.  */\n #define NMAGIC 0410\t\t/* Code indicating pure executable.  */\n+#define IMAGIC 0411\t\t/* Separate instruction & data spaces for PDP-11. */\n #define ZMAGIC 0413\t\t/* Code indicating demand-paged executable.  */\n #define BMAGIC 0415\t\t/* Used by a b.out object.  */\n \n@@ -211,7 +212,9 @@ struct external_exec\n    up to a N_SEGSIZE boundary for pure or pageable files.  */\n #ifndef N_DATADDR\n #define N_DATADDR(x) \\\n-  (N_MAGIC (x) == OMAGIC\t\t\t\t\t\t\\\n+  (N_MAGIC (x) == IMAGIC\t\t\t\t\t\t\\\n+   ? (bfd_vma) 0\t\t\t\t\t\t\t\\\n+   : N_MAGIC (x) == OMAGIC\t\t\t\t\t\t\\\n    ? (N_TXTADDR (x) + N_TXTSIZE (x))\t\t\t\t\t\\\n    : (N_SEGSIZE (x) + ((N_TXTADDR (x) + N_TXTSIZE (x) - 1)\t\t\\\n \t\t       & ~ (bfd_vma) (N_SEGSIZE (x) - 1))))"
    },
    {
      "sha": "f53b2260846274a1d8867d53a9b2803e44ed6a1a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -1,3 +1,25 @@\n+2020-04-14  Stephen Casner  <casner@acm.org>\n+\n+\tPR ld/25677\n+\t* emulparams/pdp11.sh (SCRIPT_NAME): Change to pdp11.\n+\t(EXTRA_EM_FILE): New, add emulation file pdp11.\n+\t* scripttempl/pdp11.sc: New, derived from aout.sc without\n+\tirrelevant input sections.\n+\t* emultempl/pdp11.em (_add_options, _handle_option)\n+\t(_list_options): New. Add options -z, --imagic for pdp11-aout.\n+\t(_before_parse): Make --omagic be default instead of --nmagic.\n+\t(_get_script): Modify special-case linker script for --imagic.\n+\t* lexsup.c (parse_args): Explictly set config.text_read_only for -n.\n+\t* ld.texi (Options): Add documentation of PDP11-specific options.\n+\t(Options): Fix unrelated typo to --no-compact-branches.\n+\t* gen-doc.texi: @set PDP11.\n+\t* testsuite/ld-pdp11/pdp11.exp: New, start pdp11 testing.\n+\t* testsuite/ld-pdp11/sections.s: New, source for options tests.\n+\t* testsuite/ld-pdp11/imagic.d: New, test --imagic format.\n+\t* testsuite/ld-pdp11/imagicz.d: New, test -z (imagic) format.\n+\t* testsuite/ld-pdp11/nmagic.d: New, test --nmagic format.\n+\t* testsuite/ld-pdp11/omagic.d: New, test --omagic format.\n+\n 2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/25707"
    },
    {
      "sha": "9795b58a5f11ac406a6d13e836f5d21218f91de6",
      "filename": "ld/NEWS",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/NEWS?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -3,6 +3,10 @@\n * Add command-line options --enable-non-contiguous-regions and\n   --enable-non-contiguous-regions-warnings.\n \n+* Add command-line option --imagic for the pdp11-aout target to output format\n+  IMAGIC (0411) for separate instruction and data spaces, and change the\n+  default format option for pdp11-aout to be --omagic.\n+\n Changes in 2.34:\n \n * The ld check for \"PHDR segment not covered by LOAD segment\" is more"
    },
    {
      "sha": "3f3326d121aae8f1bdd90b2c3c39414d9a42fbbc",
      "filename": "ld/emulparams/pdp11.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/emulparams/pdp11.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/emulparams/pdp11.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emulparams/pdp11.sh?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -1,5 +1,6 @@\n-SCRIPT_NAME=aout\n+SCRIPT_NAME=pdp11\n OUTPUT_FORMAT=\"a.out-pdp11\"\n TEXT_START_ADDR=0\n TARGET_PAGE_SIZE=8192\n+EXTRA_EM_FILE=pdp11\n ARCH=pdp11"
    },
    {
      "sha": "d18a4207c48254d70955c67cfe0bc12140ac4ebf",
      "filename": "ld/emultempl/pdp11.em",
      "status": "added",
      "additions": 132,
      "deletions": 0,
      "changes": 132,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/emultempl/pdp11.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/emultempl/pdp11.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pdp11.em?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,132 @@\n+# This shell script emits a C file. -*- C -*-\n+#   Copyright (C) 2006-2020 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+\n+fragment <<EOF\n+\n+/* --- \\begin{pdp11.em} */\n+#include \"getopt.h\"\n+\n+static void\n+gld${EMULATION_NAME}_before_parse (void)\n+{\n+  ldfile_set_output_arch (\"`echo ${ARCH}`\", bfd_arch_unknown);\n+  /* for PDP11 Unix compatibility, default to --omagic */\n+  config.magic_demand_paged = FALSE;\n+  config.text_read_only = FALSE;\n+}\n+\n+/* PDP11 specific options.  */\n+#define OPTION_IMAGIC 301\n+\n+static void\n+gld${EMULATION_NAME}_add_options\n+  (int ns ATTRIBUTE_UNUSED,\n+   char **shortopts,\n+   int nl,\n+   struct option **longopts,\n+   int nrl ATTRIBUTE_UNUSED,\n+   struct option **really_longopts ATTRIBUTE_UNUSED)\n+{\n+  static const char xtra_short[] = \"z\";\n+  static const struct option xtra_long[] =\n+  {\n+    {\"imagic\", no_argument, NULL, OPTION_IMAGIC},\n+    {NULL, no_argument, NULL, 0}\n+  };\n+\n+  *shortopts = (char *) xrealloc (*shortopts, ns + sizeof (xtra_short));\n+  memcpy (*shortopts + ns, &xtra_short, sizeof (xtra_short));\n+  *longopts\n+    = xrealloc (*longopts, nl * sizeof (struct option) + sizeof (xtra_long));\n+  memcpy (*longopts + nl, &xtra_long, sizeof (xtra_long));\n+}\n+\n+static void\n+gld${EMULATION_NAME}_list_options (FILE *file)\n+{\n+  fprintf (file, _(\"  -N, --omagic   Do not make text readonly, do not page align data (default)\\n\"));\n+  fprintf (file, _(\"  -n, --nmagic   Make text readonly, align data to next page\\n\"));\n+  fprintf (file, _(\"  -z, --imagic   Make text readonly, separate instruction and data spaces\\n\"));\n+  fprintf (file, _(\"  --no-omagic    Equivalent to --nmagic\\n\"));\n+}\n+\n+static bfd_boolean\n+gld${EMULATION_NAME}_handle_option (int optc)\n+{\n+  switch (optc)\n+    {\n+    default:\n+      return FALSE;\n+\n+    case 'z':\n+    case OPTION_IMAGIC:\n+      link_info.separate_code = 1;\n+      /* The --imagic format causes the .text and .data sections to occupy the\n+\t same memory addresses in separate spaces, so don't check overlap. */\n+      command_line.check_section_addresses = 0;\n+      break;\n+    }\n+\n+  return TRUE;\n+}\n+\n+/* We need a special case to prepare an additional linker script for option\n+ * --imagic where the .data section starts at address 0 rather than directly\n+ * following the .text section or being aligned to the next page after the\n+ * .text section. */\n+static char *\n+gld${EMULATION_NAME}_get_script (int *isfile)\n+EOF\n+# Scripts compiled in.\n+# sed commands to quote an ld script as a C string.\n+sc=\"-f stringify.sed\"\n+\n+fragment <<EOF\n+{\n+  *isfile = 0;\n+\n+  if (bfd_link_relocatable (&link_info) && config.build_constructors)\n+    return\n+EOF\n+sed $sc ldscripts/${EMULATION_NAME}.xu\t\t\t>> e${EMULATION_NAME}.c\n+echo '  ; else if (bfd_link_relocatable (&link_info)) return' >> e${EMULATION_NAME}.c\n+sed $sc ldscripts/${EMULATION_NAME}.xr\t\t\t>> e${EMULATION_NAME}.c\n+echo '  ; else if (link_info.separate_code) return'\t>> e${EMULATION_NAME}.c\n+sed $sc ldscripts/${EMULATION_NAME}.xn | \\\n+  sed -e \"s/ALIGN($TARGET_PAGE_SIZE)/0/\"\t\t>> e${EMULATION_NAME}.c\n+echo '  ; else if (!config.text_read_only) return'\t>> e${EMULATION_NAME}.c\n+sed $sc ldscripts/${EMULATION_NAME}.xbn\t\t\t>> e${EMULATION_NAME}.c\n+echo '  ; else if (!config.magic_demand_paged) return'\t>> e${EMULATION_NAME}.c\n+sed $sc ldscripts/${EMULATION_NAME}.xn\t\t\t>> e${EMULATION_NAME}.c\n+echo '  ; else return'\t\t\t\t\t>> e${EMULATION_NAME}.c\n+sed $sc ldscripts/${EMULATION_NAME}.x\t\t\t>> e${EMULATION_NAME}.c\n+echo '; }'\t\t\t\t\t\t>> e${EMULATION_NAME}.c\n+\n+fragment <<EOF\n+\n+/* --- \\end{pdp11.em} */\n+\n+EOF\n+\n+LDEMUL_BEFORE_PARSE=gld\"$EMULATION_NAME\"_before_parse\n+LDEMUL_ADD_OPTIONS=gld\"$EMULATION_NAME\"_add_options\n+LDEMUL_HANDLE_OPTION=gld\"$EMULATION_NAME\"_handle_option\n+LDEMUL_LIST_OPTIONS=gld\"$EMULATION_NAME\"_list_options\n+LDEMUL_GET_SCRIPT=gld\"$EMULATION_NAME\"_get_script"
    },
    {
      "sha": "d47a0a9004cec7f55b60190c232b286d793a89d4",
      "filename": "ld/gen-doc.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/gen-doc.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/gen-doc.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/gen-doc.texi?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -19,6 +19,7 @@\n @set MSP430\n @set NDS32\n @set NIOSII\n+@set PDP11\n @set POWERPC\n @set POWERPC64\n @set Renesas"
    },
    {
      "sha": "8286af65eefdf9d8b454c1c06eb5af985b1da058",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 69,
      "deletions": 1,
      "changes": 70,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -31,6 +31,7 @@\n @set MSP430\n @set NDS32\n @set NIOSII\n+@set PDP11\n @set POWERPC\n @set POWERPC64\n @set Renesas\n@@ -3260,7 +3261,7 @@ an error.\n @kindex --compact-branches\n @item --compact-branches\n @kindex --no-compact-branches\n-@item --compact-branches\n+@itemx --no-compact-branches\n These options control the generation of compact instructions by the linker\n in the PLT entries for MIPS R6.\n \n@@ -3269,6 +3270,73 @@ in the PLT entries for MIPS R6.\n @c man end\n @end ifset\n \n+\n+@ifset PDP11\n+@subsection Options specific to PDP11 targets\n+\n+@c man begin OPTIONS\n+\n+For the pdp11-aout target, three variants of the output format can be\n+produced as selected by the following options.  The default variant\n+for pdp11-aout is the @samp{--omagic} option, whereas for other\n+targets @samp{--nmagic} is the default.  The @samp{--imagic} option is\n+defined only for the pdp11-aout target, while the others are described\n+here as they apply to the pdp11-aout target.\n+\n+@table @gcctabopt\n+\n+@kindex -N\n+@item -N\n+@kindex --omagic\n+@itemx --omagic\n+\n+Mark the output as @code{OMAGIC} (0407) in the @file{a.out} header to\n+indicate that the text segment is not to be write-protected and\n+shared.  Since the text and data sections are both readable and\n+writable, the data section is allocated immediately contiguous after\n+the text segment.  This is the oldest format for PDP11 executable\n+programs and is the default for @command{ld} on PDP11 Unix systems\n+from the beginning through 2.11BSD.\n+\n+@kindex -n\n+@item -n\n+@kindex --nmagic\n+@itemx --nmagic\n+\n+Mark the output as @code{NMAGIC} (0410) in the @file{a.out} header to\n+indicate that when the output file is executed, the text portion will\n+be read-only and shareable among all processes executing the same\n+file.  This involves moving the data areas up to the first possible 8K\n+byte page boundary following the end of the text.  This option creates\n+a @emph{pure executable} format.\n+\n+@kindex -z\n+@item -z\n+@kindex --imagic\n+@itemx --imagic\n+\n+Mark the output as @code{IMAGIC} (0411) in the @file{a.out} header to\n+indicate that when the output file is executed, the program text and\n+data areas will be loaded into separate address spaces using the split\n+instruction and data space feature of the memory management unit in\n+larger models of the PDP11.  This doubles the address space available\n+to the program.  The text segment is again pure, write-protected, and\n+shareable.  The only difference in the output format between this\n+option and the others, besides the magic number, is that both the text\n+and data sections start at location 0.  The @samp{-z} option selected\n+this format in 2.11BSD.  This option creates a @emph{separate\n+executable} format.\n+\n+@kindex --no-omagic\n+@item --no-omagic\n+\n+Equivalent to @samp{--nmagic} for pdp11-aout.\n+\n+@end table\n+\n+@c man end\n+@end ifset\n+\n @ifset UsesEnvVars\n @node Environment\n @section Environment Variables"
    },
    {
      "sha": "adbf2ab7a4eeb49f5d80282fec0958e17fdbed5b",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -938,6 +938,7 @@ parse_args (unsigned argc, char **argv)\n \t     Use --call-shared or -Bdynamic for this.  */\n \t  break;\n \tcase 'n':\n+\t  config.text_read_only = TRUE;\n \t  config.magic_demand_paged = FALSE;\n \t  input_flags.dynamic = FALSE;\n \t  break;"
    },
    {
      "sha": "995e5826d0b7ba99545beff66d8e9a5923fb484e",
      "filename": "ld/scripttempl/pdp11.sc",
      "status": "added",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/scripttempl/pdp11.sc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/scripttempl/pdp11.sc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/scripttempl/pdp11.sc?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,56 @@\n+# Copyright (C) 2014-2020 Free Software Foundation, Inc.\n+#\n+# Copying and distribution of this file, with or without modification,\n+# are permitted in any medium without royalty provided the copyright\n+# notice and this notice are preserved.\n+#\n+test -z \"${BIG_OUTPUT_FORMAT}\" && BIG_OUTPUT_FORMAT=${OUTPUT_FORMAT}\n+test -z \"${LITTLE_OUTPUT_FORMAT}\" && LITTLE_OUTPUT_FORMAT=${OUTPUT_FORMAT}\n+test -z \"${ALIGNMENT}\" && ALIGNMENT=\"2\"\n+\n+cat <<EOF\n+/* Copyright (C) 2014-2020 Free Software Foundation, Inc.\n+\n+   Copying and distribution of this script, with or without modification,\n+   are permitted in any medium without royalty provided the copyright\n+   notice and this notice are preserved.  */\n+\n+OUTPUT_FORMAT(\"${OUTPUT_FORMAT}\", \"${BIG_OUTPUT_FORMAT}\",\n+\t      \"${LITTLE_OUTPUT_FORMAT}\")\n+OUTPUT_ARCH(${ARCH})\n+\n+${RELOCATING+${LIB_SEARCH_DIRS}}\n+${STACKZERO+${RELOCATING+${STACKZERO}}}\n+${SHLIB_PATH+${RELOCATING+${SHLIB_PATH}}}\n+${RELOCATING+${EXECUTABLE_SYMBOLS}}\n+${RELOCATING+PROVIDE (__stack = 0);}\n+SECTIONS\n+{\n+  ${RELOCATING+. = ${TEXT_START_ADDR};}\n+  .text :\n+  {\n+    CREATE_OBJECT_SYMBOLS\n+    *(.text)\n+    ${RELOCATING+_etext = .;}\n+    ${RELOCATING+__etext = .;}\n+    ${PAD_TEXT+${RELOCATING+. = ${DATA_ALIGNMENT};}}\n+  }\n+  ${RELOCATING+. = ${DATA_ALIGNMENT};}\n+  .data :\n+  {\n+    *(.data)\n+    ${CONSTRUCTING+CONSTRUCTORS}\n+    ${RELOCATING+_edata  =  .;}\n+    ${RELOCATING+__edata  =  .;}\n+  }\n+  .bss :\n+  {\n+   ${RELOCATING+ __bss_start = .};\n+   *(.bss)\n+   *(COMMON)\n+   ${RELOCATING+. = ALIGN(${ALIGNMENT});}\n+   ${RELOCATING+_end = . };\n+   ${RELOCATING+__end = . };\n+  }\n+}\n+EOF"
    },
    {
      "sha": "2e1566c2466acf6b74b3ecbff2c5c9e6134828c5",
      "filename": "ld/testsuite/ld-pdp11/imagic.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/imagic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/imagic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/imagic.d?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,12 @@\n+#name: pdp11-aout imagic format\n+# nm sort alphabetically since both _start and _data are 0\n+#source: sections.s\n+#ld: --imagic\n+#DUMPPROG: nm\n+#...\n+0+2 B _bss\n+#...\n+0+0 D _data\n+#...\n+0+0 T _start\n+#pass"
    },
    {
      "sha": "38a11b461712864fcbdee56ad218f698e7e8f50a",
      "filename": "ld/testsuite/ld-pdp11/imagicz.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/imagicz.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/imagicz.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/imagicz.d?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,12 @@\n+#name: pdp11-aout imagic format -z\n+# nm sort alphabetically since both _start and _data are 0\n+#source: sections.s\n+#ld: -z\n+#DUMPPROG: nm\n+#...\n+0+2 B _bss\n+#...\n+0+0 D _data\n+#...\n+0+0 T _start\n+#pass"
    },
    {
      "sha": "acdae245340587efa12098438bdf13457ce29a01",
      "filename": "ld/testsuite/ld-pdp11/nmagic.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/nmagic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/nmagic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/nmagic.d?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,11 @@\n+#name: pdp11-aout nmagic format\n+#source: sections.s\n+#ld: --nmagic\n+#nm: -n\n+#...\n+0+0 T _start\n+#...\n+0*2000 D _data\n+#...\n+0*2002 B _bss\n+#pass"
    },
    {
      "sha": "ed3a4233d2a58babc51b2885b34b95148cee7db2",
      "filename": "ld/testsuite/ld-pdp11/omagic.d",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/omagic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/omagic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/omagic.d?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,12 @@\n+#name: pdp11-aout omagic format\n+# also testing that --omagic is the default\n+#source: sections.s\n+#ld:\n+#nm: -n\n+#...\n+0+0 T _start\n+#...\n+0+6 D _data\n+#...\n+0+8 B _bss\n+#pass"
    },
    {
      "sha": "90c82df19a8446772f3c23dae69116ba3545a5e3",
      "filename": "ld/testsuite/ld-pdp11/pdp11.exp",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/pdp11.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/pdp11.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/pdp11.exp?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,33 @@\n+# Expect script for ld-pdp11 tests\n+#   Copyright (C) 2016-2020 Free Software Foundation, Inc.\n+#\n+# This file is part of the GNU Binutils.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+#\n+\n+# Test pdp11 linking; at this point just the options for the three\n+# a.out format variants.\n+\n+if ![istarget \"pdp11-*-*\"] then {\n+    return\n+}\n+\n+set pdp11_test_list [lsort [glob -nocomplain $srcdir/$subdir/*.d]]\n+foreach pdp11_test $pdp11_test_list {\n+    verbose [file rootname $pdp11_test]\n+    run_dump_test [file rootname $pdp11_test]\n+}"
    },
    {
      "sha": "c6e40a07c60b12924e393466e60ac05fc1cd1c2b",
      "filename": "ld/testsuite/ld-pdp11/sections.s",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/sections.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa1477dc34e6ce19b90ff0171074c295133730a3/ld/testsuite/ld-pdp11/sections.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pdp11/sections.s?ref=fa1477dc34e6ce19b90ff0171074c295133730a3",
      "patch": "@@ -0,0 +1,13 @@\n+\t.globl\t_start\n+\t.text\n+_start:\n+\tmov\t_data,_bss\n+\t.globl\t_data\n+\t.data\n+_data:\n+\t.word\t1\n+\t.globl\t_bss\n+\t.bss\n+_bss:\n+\t.=.+2\n+\t.end"
    }
  ]
}