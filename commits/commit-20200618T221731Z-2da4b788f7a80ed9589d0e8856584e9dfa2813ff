{
  "sha": "2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmRhNGI3ODhmN2E4MGVkOTU4OWQwZTg4NTY1ODRlOWRmYTI4MTNmZg==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T20:28:36Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-06-18T22:17:31Z"
    },
    "message": "Don't write to inferior_ptid in ravenscar-thread.c\n\ngdb/ChangeLog:\n2020-06-18  Pedro Alves  <palves@redhat.com>\n\n\t* ravenscar-thread.c (ravenscar_thread_target): Update.\n\t(ravenscar_thread_target::update_inferior_ptid): Rename to ...\n\t(ravenscar_thread_target::add_active_thread): ... this.  Don't\n\tset m_base_ptid here.  Update to avoid referencing inferior_ptid.\n\t(ravenscar_thread_target::wait): Don't write to inferior_ptid.",
    "tree": {
      "sha": "ec4446b2594fc3ac2f3a42a88e35567c856dee70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ec4446b2594fc3ac2f3a42a88e35567c856dee70"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2da4b788f7a80ed9589d0e8856584e9dfa2813ff/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "50838d1be72ddd30e0b5f081933482424ae5a6b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/50838d1be72ddd30e0b5f081933482424ae5a6b0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/50838d1be72ddd30e0b5f081933482424ae5a6b0"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 32,
    "deletions": 25
  },
  "files": [
    {
      "sha": "2f153820312ef6eaf625167991a16c2abd91b385",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da4b788f7a80ed9589d0e8856584e9dfa2813ff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da4b788f7a80ed9589d0e8856584e9dfa2813ff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
      "patch": "@@ -1,3 +1,11 @@\n+2020-06-18  Pedro Alves  <palves@redhat.com>\n+\n+\t* ravenscar-thread.c (ravenscar_thread_target): Update.\n+\t(ravenscar_thread_target::update_inferior_ptid): Rename to ...\n+\t(ravenscar_thread_target::add_active_thread): ... this.  Don't\n+\tset m_base_ptid here.  Update to avoid referencing inferior_ptid.\n+\t(ravenscar_thread_target::wait): Don't write to inferior_ptid.\n+\n 2020-06-18  Pedro Alves  <palves@redhat.com>\n \n \t* nat/windows-nat.c (current_windows_thread): Remove."
    },
    {
      "sha": "72253188c716ec94ff6831a02507fc3e72c11682",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 24,
      "deletions": 25,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2da4b788f7a80ed9589d0e8856584e9dfa2813ff/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2da4b788f7a80ed9589d0e8856584e9dfa2813ff/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=2da4b788f7a80ed9589d0e8856584e9dfa2813ff",
      "patch": "@@ -77,8 +77,11 @@ static const target_info ravenscar_target_info = {\n struct ravenscar_thread_target final : public target_ops\n {\n   ravenscar_thread_target ()\n+    : m_base_ptid (inferior_ptid)\n   {\n-    update_inferior_ptid ();\n+    thread_info *thr = add_active_thread ();\n+    if (thr != nullptr)\n+      switch_to_thread (thr);\n   }\n \n   const target_info &info () const override\n@@ -126,9 +129,9 @@ struct ravenscar_thread_target final : public target_ops\n   /* PTID of the last thread that received an event.\n      This can be useful to determine the associated task that received\n      the event, to make it the current task.  */\n-  ptid_t m_base_ptid = null_ptid;\n+  ptid_t m_base_ptid;\n \n-  void update_inferior_ptid ();\n+  thread_info *add_active_thread ();\n   ptid_t active_task (int cpu);\n   bool task_is_currently_active (ptid_t ptid);\n   bool runtime_initialized ();\n@@ -213,37 +216,36 @@ get_base_thread_from_ravenscar_task (ptid_t ptid)\n   return ptid_t (ptid.pid (), base_cpu, 0);\n }\n \n-/* Fetch the ravenscar running thread from target memory and\n-   update inferior_ptid accordingly.  */\n+/* Fetch the ravenscar running thread from target memory, make sure\n+   there's a corresponding thread in the thread list, and return it.\n+   If the runtime is not initialized, return NULL.  */\n \n-void\n-ravenscar_thread_target::update_inferior_ptid ()\n+thread_info *\n+ravenscar_thread_target::add_active_thread ()\n {\n   process_stratum_target *proc_target\n     = as_process_stratum_target (this->beneath ());\n \n   int base_cpu;\n \n-  m_base_ptid = inferior_ptid;\n-\n-  gdb_assert (!is_ravenscar_task (inferior_ptid));\n+  gdb_assert (!is_ravenscar_task (m_base_ptid));\n   base_cpu = ravenscar_get_thread_base_cpu (m_base_ptid);\n \n-  /* If the runtime has not been initialized yet, the inferior_ptid is\n-     the only ptid that there is.  */\n   if (!runtime_initialized ())\n-    return;\n+    return nullptr;\n \n   /* Make sure we set m_base_ptid before calling active_task\n      as the latter relies on it.  */\n-  inferior_ptid = active_task (base_cpu);\n-  gdb_assert (inferior_ptid != null_ptid);\n+  ptid_t active_ptid = active_task (base_cpu);\n+  gdb_assert (active_ptid != null_ptid);\n \n   /* The running thread may not have been added to\n      system.tasking.debug's list yet; so ravenscar_update_thread_list\n      may not always add it to the thread list.  Add it here.  */\n-  if (!find_thread_ptid (proc_target, inferior_ptid))\n-    add_thread (proc_target, inferior_ptid);\n+  thread_info *active_thr = find_thread_ptid (proc_target, active_ptid);\n+  if (active_thr == nullptr)\n+    active_thr = add_thread (proc_target, active_ptid);\n+  return active_thr;\n }\n \n /* The Ravenscar Runtime exports a symbol which contains the ID of\n@@ -343,12 +345,11 @@ ravenscar_thread_target::wait (ptid_t ptid,\n     = as_process_stratum_target (this->beneath ());\n   ptid_t event_ptid;\n \n-  inferior_ptid = m_base_ptid;\n   if (ptid != minus_one_ptid)\n     ptid = m_base_ptid;\n   event_ptid = beneath->wait (ptid, status, 0);\n-  /* Find any new threads that might have been created, and update\n-     inferior_ptid to the active thread.\n+  /* Find any new threads that might have been created, and return the\n+     active thread.\n \n      Only do it if the program is still alive, though.  Otherwise,\n      this causes problems when debugging through the remote protocol,\n@@ -357,13 +358,11 @@ ravenscar_thread_target::wait (ptid_t ptid,\n   if (status->kind != TARGET_WAITKIND_EXITED\n       && status->kind != TARGET_WAITKIND_SIGNALLED)\n     {\n-      inferior_ptid = event_ptid;\n+      m_base_ptid = event_ptid;\n       this->update_thread_list ();\n-      this->update_inferior_ptid ();\n+      return this->add_active_thread ()->ptid;\n     }\n-  else\n-    inferior_ptid = m_base_ptid;\n-  return inferior_ptid;\n+  return m_base_ptid;\n }\n \n /* Add the thread associated to the given TASK to the thread list"
    }
  ]
}