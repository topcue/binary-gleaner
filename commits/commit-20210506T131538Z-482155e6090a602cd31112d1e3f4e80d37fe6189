{
  "sha": "482155e6090a602cd31112d1e3f4e80d37fe6189",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDgyMTU1ZTYwOTBhNjAyY2QzMTExMmQxZTNmNGU4MGQzN2ZlNjE4OQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-05-06T13:15:13Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-05-06T13:15:38Z"
    },
    "message": "gdbserver/server: make some functions void\n\nThe 'handle_v_attach', 'handle_v_run', and 'handle_v_kill' functions'\nreturn values are unused.  They indicate error/success result by\nputting packets.  Make the functions void.\n\nTested by rebuilding.\n\ngdbserver/ChangeLog:\n2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* server.cc (handle_v_attach)\n\t(handle_v_run)\n\t(handle_v_kill): Make void.",
    "tree": {
      "sha": "0a8b6ba67a7dfb893427694889fee98341fc2399",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0a8b6ba67a7dfb893427694889fee98341fc2399"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/482155e6090a602cd31112d1e3f4e80d37fe6189",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/482155e6090a602cd31112d1e3f4e80d37fe6189",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/482155e6090a602cd31112d1e3f4e80d37fe6189",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/482155e6090a602cd31112d1e3f4e80d37fe6189/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "284a1309021a0ef4c29f198470d95652f02b13f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/284a1309021a0ef4c29f198470d95652f02b13f0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/284a1309021a0ef4c29f198470d95652f02b13f0"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 16,
    "deletions": 24
  },
  "files": [
    {
      "sha": "94e489939c1a4754f7e107bdb54097158ce82a4b",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/482155e6090a602cd31112d1e3f4e80d37fe6189/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/482155e6090a602cd31112d1e3f4e80d37fe6189/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=482155e6090a602cd31112d1e3f4e80d37fe6189",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-06  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* server.cc (handle_v_attach)\n+\t(handle_v_run)\n+\t(handle_v_kill): Make void.\n+\n 2021-05-03  Tom Tromey  <tromey@adacore.com>\n \n \tPR build/27807:"
    },
    {
      "sha": "32dcc05924e147b652f33ee1a1b4b5cc9952aa14",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 10,
      "deletions": 24,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/482155e6090a602cd31112d1e3f4e80d37fe6189/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/482155e6090a602cd31112d1e3f4e80d37fe6189/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=482155e6090a602cd31112d1e3f4e80d37fe6189",
      "patch": "@@ -2973,8 +2973,8 @@ resume (struct thread_resume *actions, size_t num_actions)\n     }\n }\n \n-/* Attach to a new program.  Return 1 if successful, 0 if failure.  */\n-static int\n+/* Attach to a new program.  */\n+static void\n handle_v_attach (char *own_buf)\n {\n   client_state &cs = get_client_state ();\n@@ -2998,18 +2998,13 @@ handle_v_attach (char *own_buf)\n \t}\n       else\n \tprepare_resume_reply (own_buf, cs.last_ptid, &cs.last_status);\n-\n-      return 1;\n     }\n   else\n-    {\n-      write_enn (own_buf);\n-      return 0;\n-    }\n+    write_enn (own_buf);\n }\n \n-/* Run a new program.  Return 1 if successful, 0 if failure.  */\n-static int\n+/* Run a new program.  */\n+static void\n handle_v_run (char *own_buf)\n {\n   client_state &cs = get_client_state ();\n@@ -3106,7 +3101,7 @@ handle_v_run (char *own_buf)\n \t{\n \t  write_enn (own_buf);\n \t  free_vector_argv (new_argv);\n-\t  return 0;\n+\t  return;\n \t}\n     }\n   else\n@@ -3127,18 +3122,13 @@ handle_v_run (char *own_buf)\n \t query which is the main thread of the new inferior.  */\n       if (non_stop)\n \tcs.general_thread = cs.last_ptid;\n-\n-      return 1;\n     }\n   else\n-    {\n-      write_enn (own_buf);\n-      return 0;\n-    }\n+    write_enn (own_buf);\n }\n \n-/* Kill process.  Return 1 if successful, 0 if failure.  */\n-static int\n+/* Kill process.  */\n+static void\n handle_v_kill (char *own_buf)\n {\n   client_state &cs = get_client_state ();\n@@ -3158,13 +3148,9 @@ handle_v_kill (char *own_buf)\n       cs.last_ptid = ptid_t (pid);\n       discard_queued_stop_replies (cs.last_ptid);\n       write_ok (own_buf);\n-      return 1;\n     }\n   else\n-    {\n-      write_enn (own_buf);\n-      return 0;\n-    }\n+    write_enn (own_buf);\n }\n \n /* Handle all of the extended 'v' packets.  */"
    }
  ]
}