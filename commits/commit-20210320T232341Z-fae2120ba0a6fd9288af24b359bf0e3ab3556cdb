{
  "sha": "fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmFlMjEyMGJhMGE2ZmQ5Mjg4YWYyNGIzNTliZjBlM2FiMzU1NmNkYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:41Z"
    },
    "message": "Change objfile::has_partial_symbols to return bool\n\nThis changes objfile::has_partial_symbols and\nquick_symbol_functions::has_symbols to return bool.\n\ngdb/ChangeLog\n2021-03-20  Tom Tromey  <tom@tromey.com>\n\n\t* objfiles.h (struct objfile) <has_partial_symbols>: Return bool.\n\t* symfile.h (struct quick_symbol_functions) <has_symbols>: Return\n\tbool.\n\t* symfile-debug.c (debug_qf_has_symbols): Return bool.\n\t* psymtab.c (psym_has_symbols): Return bool.\n\t* objfiles.c (objfile::has_partial_symbols): Return bool.\n\t* dwarf2/read.c (dw2_has_symbols): Return bool.",
    "tree": {
      "sha": "9e8a50fa40e5e62b17f49248df7a94e38467fb07",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9e8a50fa40e5e62b17f49248df7a94e38467fb07"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 20,
    "deletions": 10
  },
  "files": [
    {
      "sha": "8d2b32d10de573d19d23d277e16cb516b2143773",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* objfiles.h (struct objfile) <has_partial_symbols>: Return bool.\n+\t* symfile.h (struct quick_symbol_functions) <has_symbols>: Return\n+\tbool.\n+\t* symfile-debug.c (debug_qf_has_symbols): Return bool.\n+\t* psymtab.c (psym_has_symbols): Return bool.\n+\t* objfiles.c (objfile::has_partial_symbols): Return bool.\n+\t* dwarf2/read.c (dw2_has_symbols): Return bool.\n+\n 2021-03-20  Tom Tromey  <tom@tromey.com>\n \n \t* symfile.c (read_symbols): Update."
    },
    {
      "sha": "744b6bca2488d30d8b2d5143634d2275e6810961",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -4872,10 +4872,10 @@ dw2_map_symbol_filenames (struct objfile *objfile, symbol_filename_ftype *fun,\n     });\n }\n \n-static int\n+static bool\n dw2_has_symbols (struct objfile *objfile)\n {\n-  return 1;\n+  return true;\n }\n \n const struct quick_symbol_functions dwarf2_gdb_index_functions ="
    },
    {
      "sha": "746f7d1f2968d2363941017ae6f716dd29fb8bbe",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -812,19 +812,19 @@ objfile_rebase (struct objfile *objfile, CORE_ADDR slide)\n \f\n /* See objfiles.h.  */\n \n-int\n+bool\n objfile::has_partial_symbols ()\n {\n   if (!sf)\n-    return 0;\n+    return false;\n \n   /* If we have not read psymbols, but we have a function capable of reading\n      them, then that is an indication that they are in fact available.  Without\n      this function the symbols may have been already read in but they also may\n      not be present in this objfile.  */\n   if ((flags & OBJF_PSYMTABS_READ) == 0\n       && sf->sym_read_psymbols != NULL)\n-    return 1;\n+    return true;\n \n   return sf->qf->has_symbols (this);\n }"
    },
    {
      "sha": "f961bdc011685f64accf03518d951ffa0d275791",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -550,7 +550,7 @@ struct objfile\n \n   /* Return true if OBJFILE has partial symbols.  */\n \n-  int has_partial_symbols ();\n+  bool has_partial_symbols ();\n \n   /* The object file's original name as specified by the user,\n      made absolute, and tilde-expanded.  However, it is not canonicalized"
    },
    {
      "sha": "94b5acdea54f5d459937a5df475c42e1e78045d9",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -1334,7 +1334,7 @@ psym_expand_symtabs_matching\n /* Psymtab version of has_symbols.  See its definition in\n    the definition of quick_symbol_functions in symfile.h.  */\n \n-static int\n+static bool\n psym_has_symbols (struct objfile *objfile)\n {\n   return objfile->partial_symtabs->psymtabs != NULL;"
    },
    {
      "sha": "7c022ae341d7e98e406d93b958564b62d8eed9b5",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -70,12 +70,12 @@ debug_symtab_name (struct symtab *symtab)\n \f\n /* Debugging version of struct quick_symbol_functions.  */\n \n-static int\n+static bool\n debug_qf_has_symbols (struct objfile *objfile)\n {\n   const struct debug_sym_fns_data *debug_data\n     = symfile_debug_objfile_data_key.get (objfile);\n-  int retval;\n+  bool retval;\n \n   retval = debug_data->real_sf->qf->has_symbols (objfile);\n "
    },
    {
      "sha": "76b6d4bcc7856231a3141fc53ba354ccee9cca90",
      "filename": "gdb/symfile.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/symfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fae2120ba0a6fd9288af24b359bf0e3ab3556cdb/gdb/symfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.h?ref=fae2120ba0a6fd9288af24b359bf0e3ab3556cdb",
      "patch": "@@ -150,7 +150,7 @@ struct quick_symbol_functions\n {\n   /* Return true if this objfile has any \"partial\" symbols\n      available.  */\n-  int (*has_symbols) (struct objfile *objfile);\n+  bool (*has_symbols) (struct objfile *objfile);\n \n   /* Return the symbol table for the \"last\" file appearing in\n      OBJFILE.  */"
    }
  ]
}