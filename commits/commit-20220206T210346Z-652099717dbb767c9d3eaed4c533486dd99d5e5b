{
  "sha": "652099717dbb767c9d3eaed4c533486dd99d5e5b",
  "node_id": "C_kwDOANOeidoAKDY1MjA5OTcxN2RiYjc2N2M5ZDNlYWVkNGM1MzM0ODZkZDk5ZDVlNWI",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-21T02:54:11Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2022-02-06T21:03:46Z"
    },
    "message": "gdb: remove SYMTAB_OBJFILE macro\n\nRemove the macro, replace with an equivalent method.\n\nChange-Id: I8f9ecd290ad28502e53c1ceca5006ba78bf042eb",
    "tree": {
      "sha": "1165879a9bb9e6d433559addb0e492e602d7c4c5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1165879a9bb9e6d433559addb0e492e602d7c4c5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/652099717dbb767c9d3eaed4c533486dd99d5e5b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/652099717dbb767c9d3eaed4c533486dd99d5e5b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/652099717dbb767c9d3eaed4c533486dd99d5e5b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/652099717dbb767c9d3eaed4c533486dd99d5e5b/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "012cfab919e7da355b2ac7f86674211cbce26041",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/012cfab919e7da355b2ac7f86674211cbce26041",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/012cfab919e7da355b2ac7f86674211cbce26041"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 45,
    "deletions": 39
  },
  "files": [
    {
      "sha": "e6bfb8e1467f961d9d1015ecf6d3d6ff03daa23c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -11388,8 +11388,8 @@ is_known_support_routine (struct frame_info *frame)\n       re_comp (known_runtime_file_name_patterns[i]);\n       if (re_exec (lbasename (sal.symtab->filename)))\n \treturn 1;\n-      if (SYMTAB_OBJFILE (sal.symtab) != NULL\n-\t  && re_exec (objfile_name (SYMTAB_OBJFILE (sal.symtab))))\n+      if (sal.symtab->objfile () != NULL\n+\t  && re_exec (objfile_name (sal.symtab->objfile ())))\n \treturn 1;\n     }\n "
    },
    {
      "sha": "b84d8f0bf6a8179951574119689968c9eacef92a",
      "filename": "gdb/annotate.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/annotate.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/annotate.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -448,7 +448,7 @@ annotate_source_line (struct symtab *s, int line, int mid_statement,\n \treturn false;\n \n       annotate_source (s->fullname, line, (int) (*offsets)[line - 1],\n-\t\t       mid_statement, SYMTAB_OBJFILE (s)->arch (),\n+\t\t       mid_statement, s->objfile ()->arch (),\n \t\t       pc);\n \n       /* Update the current symtab and line.  */"
    },
    {
      "sha": "b1130acbab215034e0929339c0cf9125726fe983",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -7194,7 +7194,7 @@ get_sal_arch (struct symtab_and_line sal)\n   if (sal.section)\n     return sal.section->objfile->arch ();\n   if (sal.symtab)\n-    return SYMTAB_OBJFILE (sal.symtab)->arch ();\n+    return sal.symtab->objfile ()->arch ();\n \n   return NULL;\n }\n@@ -9236,8 +9236,8 @@ resolve_sal_pc (struct symtab_and_line *sal)\n \t  sym = block_linkage_function (b);\n \t  if (sym != NULL)\n \t    {\n-\t      fixup_symbol_section (sym, SYMTAB_OBJFILE (sal->symtab));\n-\t      sal->section = sym->obj_section (SYMTAB_OBJFILE (sal->symtab));\n+\t      fixup_symbol_section (sym, sal->symtab->objfile ());\n+\t      sal->section = sym->obj_section (sal->symtab->objfile ());\n \t    }\n \t  else\n \t    {\n@@ -14736,7 +14736,7 @@ void\n breakpoint_free_objfile (struct objfile *objfile)\n {\n   for (bp_location *loc : all_bp_locations ())\n-    if (loc->symtab != NULL && SYMTAB_OBJFILE (loc->symtab) == objfile)\n+    if (loc->symtab != NULL && loc->symtab->objfile () == objfile)\n       loc->symtab = NULL;\n }\n "
    },
    {
      "sha": "9120bbf1d84dc5fea04a12ce6f0ef77946fb0b25",
      "filename": "gdb/cli/cli-cmds.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/cli/cli-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/cli/cli-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-cmds.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -1003,7 +1003,7 @@ edit_command (const char *arg, int from_tty)\n \t    error (_(\"No source file for address %s.\"),\n \t\t   paddress (get_current_arch (), sal.pc));\n \n-\t  gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n+\t  gdbarch = sal.symtab->objfile ()->arch ();\n \t  sym = find_pc_function (sal.pc);\n \t  if (sym)\n \t    printf_filtered (\"%s is in %s (%s:%d).\\n\",\n@@ -1342,7 +1342,7 @@ list_command (const char *arg, int from_tty)\n \terror (_(\"No source file for address %s.\"),\n \t       paddress (get_current_arch (), sal.pc));\n \n-      gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n+      gdbarch = sal.symtab->objfile ()->arch ();\n       sym = find_pc_function (sal.pc);\n       if (sym)\n \tprintf_filtered (\"%s is in %s (%s:%d).\\n\","
    },
    {
      "sha": "d1a5056aac86ededdc2fd99176d5a0152bafa7b3",
      "filename": "gdb/guile/scm-symtab.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/guile/scm-symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/guile/scm-symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-symtab.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -109,7 +109,7 @@ stscm_eq_symtab_smob (const void *ap, const void *bp)\n static htab_t\n stscm_objfile_symtab_map (struct symtab *symtab)\n {\n-  struct objfile *objfile = SYMTAB_OBJFILE (symtab);\n+  struct objfile *objfile = symtab->objfile ();\n   htab_t htab = (htab_t) objfile_data (objfile, stscm_objfile_data_key);\n \n   if (htab == NULL)\n@@ -348,7 +348,7 @@ gdbscm_symtab_objfile (SCM self)\n     = stscm_get_valid_symtab_smob_arg_unsafe (self, SCM_ARG1, FUNC_NAME);\n   const struct symtab *symtab = st_smob->symtab;\n \n-  return ofscm_scm_from_objfile (SYMTAB_OBJFILE (symtab));\n+  return ofscm_scm_from_objfile (symtab->objfile ());\n }\n \n /* (symtab-global-block <gdb:symtab>) -> <gdb:block>\n@@ -366,7 +366,7 @@ gdbscm_symtab_global_block (SCM self)\n   blockvector = symtab->blockvector ();\n   block = BLOCKVECTOR_BLOCK (blockvector, GLOBAL_BLOCK);\n \n-  return bkscm_scm_from_block (block, SYMTAB_OBJFILE (symtab));\n+  return bkscm_scm_from_block (block, symtab->objfile ());\n }\n \n /* (symtab-static-block <gdb:symtab>) -> <gdb:block>\n@@ -384,7 +384,7 @@ gdbscm_symtab_static_block (SCM self)\n   blockvector = symtab->blockvector ();\n   block = BLOCKVECTOR_BLOCK (blockvector, STATIC_BLOCK);\n \n-  return bkscm_scm_from_block (block, SYMTAB_OBJFILE (symtab));\n+  return bkscm_scm_from_block (block, symtab->objfile ());\n }\n \f\n /* Administrivia for sal (symtab-and-line) smobs.  */"
    },
    {
      "sha": "c4edc0d1c7714e6c2bfe7648e4ed5255b19b8c76",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -4323,10 +4323,10 @@ search_minsyms_for_name (struct collect_info *info,\n \t{\n \t  set_current_program_space (SYMTAB_PSPACE (symtab));\n \t  iterate_over_minimal_symbols\n-\t    (SYMTAB_OBJFILE (symtab), name,\n+\t    (symtab->objfile (), name,\n \t     [&] (struct minimal_symbol *msym)\n \t       {\n-\t\t add_minsym (msym, SYMTAB_OBJFILE (symtab), symtab,\n+\t\t add_minsym (msym, symtab->objfile (), symtab,\n \t\t\t     info->state->list_mode, &minsyms);\n \t\t return false;\n \t       });"
    },
    {
      "sha": "a8edce386d23397be162044af486b8bf5f701481",
      "filename": "gdb/mi/mi-symbol-cmds.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/mi/mi-symbol-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/mi/mi-symbol-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-symbol-cmds.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -50,7 +50,7 @@ mi_cmd_symbol_list_lines (const char *command, char **argv, int argc)\n      already sorted by increasing values in the symbol table, so no\n      need to perform any other sorting.  */\n \n-  gdbarch = SYMTAB_OBJFILE (s)->arch ();\n+  gdbarch = s->objfile ()->arch ();\n \n   ui_out_emit_list list_emitter (uiout, \"lines\");\n   if (s->linetable () != NULL && s->linetable ()->nitems > 0)"
    },
    {
      "sha": "90163ca59b89f922b397c24ca8ab853610db59cb",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -591,7 +591,7 @@ objfile::~objfile ()\n   {\n     struct symtab_and_line cursal = get_current_source_symtab_and_line ();\n \n-    if (cursal.symtab && SYMTAB_OBJFILE (cursal.symtab) == this)\n+    if (cursal.symtab && cursal.symtab->objfile () == this)\n       clear_current_source_symtab_and_line ();\n   }\n "
    },
    {
      "sha": "cb28264a03f28e6fa500c2f502eeb8802dbe34fb",
      "filename": "gdb/python/py-symtab.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/python/py-symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/python/py-symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-symtab.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -119,7 +119,7 @@ stpy_get_objfile (PyObject *self, void *closure)\n \n   STPY_REQUIRE_VALID (self, symtab);\n \n-  return objfile_to_objfile_object (SYMTAB_OBJFILE (symtab)).release ();\n+  return objfile_to_objfile_object (symtab->objfile ()).release ();\n }\n \n /* Getter function for symtab.producer.  */\n@@ -183,7 +183,7 @@ stpy_global_block (PyObject *self, PyObject *args)\n \n   blockvector = symtab->blockvector ();\n   block = BLOCKVECTOR_BLOCK (blockvector, GLOBAL_BLOCK);\n-  return block_to_block_object (block, SYMTAB_OBJFILE (symtab));\n+  return block_to_block_object (block, symtab->objfile ());\n }\n \n /* Return the STATIC_BLOCK of the underlying symtab.  */\n@@ -199,7 +199,7 @@ stpy_static_block (PyObject *self, PyObject *args)\n \n   blockvector = symtab->blockvector ();\n   block = BLOCKVECTOR_BLOCK (blockvector, STATIC_BLOCK);\n-  return block_to_block_object (block, SYMTAB_OBJFILE (symtab));\n+  return block_to_block_object (block, symtab->objfile ());\n }\n \n /* Implementation of gdb.Symtab.linetable (self) -> gdb.LineTable.\n@@ -247,7 +247,7 @@ stpy_dealloc (PyObject *obj)\n     symtab->prev->next = symtab->next;\n   else if (symtab->symtab)\n     {\n-      set_objfile_data (SYMTAB_OBJFILE (symtab->symtab),\n+      set_objfile_data (symtab->symtab->objfile (),\n \t\t\tstpy_objfile_data_key, symtab->next);\n     }\n   if (symtab->next)\n@@ -330,7 +330,7 @@ salpy_dealloc (PyObject *self)\n     self_sal->prev->next = self_sal->next;\n   else if (self_sal->symtab != Py_None)\n     set_objfile_data\n-      (SYMTAB_OBJFILE (symtab_object_to_symtab (self_sal->symtab)),\n+      (symtab_object_to_symtab (self_sal->symtab)->objfile (),\n        salpy_objfile_data_key, self_sal->next);\n \n   if (self_sal->next)\n@@ -378,12 +378,12 @@ set_sal (sal_object *sal_obj, struct symtab_and_line sal)\n       symtab *symtab = symtab_object_to_symtab (sal_obj->symtab);\n \n       sal_obj->next\n-\t= ((sal_object *) objfile_data (SYMTAB_OBJFILE (symtab),\n+\t= ((sal_object *) objfile_data (symtab->objfile (),\n \t\t\t\t\tsalpy_objfile_data_key));\n       if (sal_obj->next)\n \tsal_obj->next->prev = sal_obj;\n \n-      set_objfile_data (SYMTAB_OBJFILE (symtab),\n+      set_objfile_data (symtab->objfile (),\n \t\t\tsalpy_objfile_data_key, sal_obj);\n     }\n   else\n@@ -406,10 +406,10 @@ set_symtab (symtab_object *obj, struct symtab *symtab)\n     {\n       obj->next\n \t= ((symtab_object *)\n-\t   objfile_data (SYMTAB_OBJFILE (symtab), stpy_objfile_data_key));\n+\t   objfile_data (symtab->objfile (), stpy_objfile_data_key));\n       if (obj->next)\n \tobj->next->prev = obj;\n-      set_objfile_data (SYMTAB_OBJFILE (symtab), stpy_objfile_data_key, obj);\n+      set_objfile_data (symtab->objfile (), stpy_objfile_data_key, obj);\n     }\n   else\n     obj->next = NULL;"
    },
    {
      "sha": "bfd47608fef9f8e674d068dfca557e045d4962a7",
      "filename": "gdb/source-cache.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/source-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/source-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source-cache.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -107,8 +107,8 @@ source_cache::get_plain_source_lines (struct symtab *s,\n     perror_with_name (symtab_to_filename_for_display (s));\n \n   time_t mtime = 0;\n-  if (SYMTAB_OBJFILE (s) != NULL && SYMTAB_OBJFILE (s)->obfd != NULL)\n-    mtime = SYMTAB_OBJFILE (s)->mtime;\n+  if (s->objfile () != NULL && s->objfile ()->obfd != NULL)\n+    mtime = s->objfile ()->mtime;\n   else if (current_program_space->exec_bfd ())\n     mtime = current_program_space->ebfd_mtime;\n "
    },
    {
      "sha": "d184990a6c0a5ed2967c0d7cdd7744de7956ff78",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -1559,7 +1559,7 @@ info_line_command (const char *arg, int from_tty)\n       else if (sal.line > 0\n \t       && find_line_pc_range (sal, &start_pc, &end_pc))\n \t{\n-\t  struct gdbarch *gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n+\t  struct gdbarch *gdbarch = sal.symtab->objfile ()->arch ();\n \n \t  if (start_pc == end_pc)\n \t    {"
    },
    {
      "sha": "62b584041defb979a3aff51be09e5ab62420eded",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -131,7 +131,7 @@ dump_objfile (struct objfile *objfile)\n \t      printf_filtered (\"%s at %s\",\n \t\t\t       symtab_to_filename_for_display (symtab),\n \t\t\t       host_address_to_string (symtab));\n-\t      if (SYMTAB_OBJFILE (symtab) != objfile)\n+\t      if (symtab->objfile () != objfile)\n \t\tprintf_filtered (\", NOT ON CHAIN!\");\n \t      printf_filtered (\"\\n\");\n \t    }\n@@ -234,7 +234,7 @@ dump_msymbols (struct objfile *objfile, struct ui_file *outfile)\n static void\n dump_symtab_1 (struct symtab *symtab, struct ui_file *outfile)\n {\n-  struct objfile *objfile = SYMTAB_OBJFILE (symtab);\n+  struct objfile *objfile = symtab->objfile ();\n   struct gdbarch *gdbarch = objfile->arch ();\n   int i;\n   struct mdict_iterator miter;"
    },
    {
      "sha": "671e22c572354647e93a4c09667e784b60074461",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -3712,7 +3712,7 @@ find_function_start_sal_1 (CORE_ADDR func_addr, obj_section *section,\n       && (sal.symtab->compunit ()->locations_valid ()\n \t  || sal.symtab->language () == language_asm))\n     {\n-      struct gdbarch *gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n+      struct gdbarch *gdbarch = sal.symtab->objfile ()->arch ();\n \n       sal.pc = func_addr;\n       if (gdbarch_skip_entrypoint_p (gdbarch))\n@@ -6527,7 +6527,7 @@ struct objfile *\n symbol_objfile (const struct symbol *symbol)\n {\n   gdb_assert (SYMBOL_OBJFILE_OWNED (symbol));\n-  return SYMTAB_OBJFILE (symbol->owner.symtab);\n+  return symbol->owner.symtab->objfile ();\n }\n \n /* See symtab.h.  */\n@@ -6537,7 +6537,7 @@ symbol_arch (const struct symbol *symbol)\n {\n   if (!SYMBOL_OBJFILE_OWNED (symbol))\n     return symbol->owner.arch;\n-  return SYMTAB_OBJFILE (symbol->owner.symtab)->arch ();\n+  return symbol->owner.symtab->objfile ()->arch ();\n }\n \n /* See symtab.h.  */"
    },
    {
      "sha": "9cfbd71937a33fe4e443473fedf7ada186630315",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -1405,6 +1405,8 @@ struct symtab\n \n   const struct blockvector *blockvector () const;\n \n+  struct objfile *objfile () const;\n+\n   /* Unordered chain of all filetabs in the compunit,  with the exception\n      that the \"main\" source file is the first entry in the list.  */\n \n@@ -1437,9 +1439,7 @@ struct symtab\n \n using symtab_range = next_range<symtab>;\n \n-#define SYMTAB_OBJFILE(symtab) \\\n-  (symtab->compunit ()->objfile ())\n-#define SYMTAB_PSPACE(symtab) (SYMTAB_OBJFILE (symtab)->pspace)\n+#define SYMTAB_PSPACE(symtab) ((symtab)->objfile ()->pspace)\n #define SYMTAB_DIRNAME(symtab) ((symtab)->compunit ()->dirname ())\n \n /* Compunit symtabs contain the actual \"symbol table\", aka blockvector, as well\n@@ -1689,6 +1689,12 @@ symtab::blockvector () const\n   return this->compunit ()->blockvector ();\n }\n \n+inline struct objfile *\n+symtab::objfile () const\n+{\n+  return this->compunit ()->objfile ();\n+}\n+\n /* Return the language of CUST.  */\n \n extern enum language compunit_language (const struct compunit_symtab *cust);"
    },
    {
      "sha": "294ea1c7f1368aa985704246553f29f7b72e0ff2",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -70,7 +70,7 @@ tui_source_window::set_contents (struct gdbarch *arch,\n   m_fullname = make_unique_xstrdup (symtab_to_fullname (s));\n \n   cur_line = 0;\n-  m_gdbarch = SYMTAB_OBJFILE (s)->arch ();\n+  m_gdbarch = s->objfile ()->arch ();\n   m_start_line_or_addr.loa = LOA_LINE;\n   cur_line_no = m_start_line_or_addr.u.line_no = line_no;\n "
    },
    {
      "sha": "c8a1c1aa64bcff7bdcd6f6e3b1d72d3ef71ebe8d",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/652099717dbb767c9d3eaed4c533486dd99d5e5b/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=652099717dbb767c9d3eaed4c533486dd99d5e5b",
      "patch": "@@ -199,7 +199,7 @@ tui_update_source_windows_with_line (struct symtab_and_line sal)\n   if (sal.symtab != nullptr)\n     {\n       find_line_pc (sal.symtab, sal.line, &sal.pc);\n-      gdbarch = SYMTAB_OBJFILE (sal.symtab)->arch ();\n+      gdbarch = sal.symtab->objfile ()->arch ();\n     }\n \n   for (struct tui_source_window_base *win_info : tui_source_windows ())"
    }
  ]
}