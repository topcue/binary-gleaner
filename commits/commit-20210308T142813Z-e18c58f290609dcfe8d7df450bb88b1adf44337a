{
  "sha": "e18c58f290609dcfe8d7df450bb88b1adf44337a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTE4YzU4ZjI5MDYwOWRjZmU4ZDdkZjQ1MGJiODhiMWFkZjQ0MzM3YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:13Z"
    },
    "message": "Split gen_expr_binop_rest\n\nThis splits gen_expr_binop_rest into two overloads.  One overload\nretains the \"pc\" parameter, while the other does not, and furthermore\ndoes not call gen_expr on the left-hand-side.  This split is useful\nfor subsequent patches in the new expression evaluation approach.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* ax-gdb.c (gen_expr_binop_rest): Remove \"pc\" parameter.\n\t(gen_expr_binop_rest): New overload.",
    "tree": {
      "sha": "e38597b2301232a98b2bcd0a65e5beb54411f9bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e38597b2301232a98b2bcd0a65e5beb54411f9bd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e18c58f290609dcfe8d7df450bb88b1adf44337a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e18c58f290609dcfe8d7df450bb88b1adf44337a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e18c58f290609dcfe8d7df450bb88b1adf44337a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e18c58f290609dcfe8d7df450bb88b1adf44337a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c0d7ed8ca842c9b199722a878f46adab7b9320ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0d7ed8ca842c9b199722a878f46adab7b9320ff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c0d7ed8ca842c9b199722a878f46adab7b9320ff"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 19,
    "deletions": 2
  },
  "files": [
    {
      "sha": "70a93ed8e4539bde8df452cc5a7e3f98cbea32a9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e18c58f290609dcfe8d7df450bb88b1adf44337a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e18c58f290609dcfe8d7df450bb88b1adf44337a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e18c58f290609dcfe8d7df450bb88b1adf44337a",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* ax-gdb.c (gen_expr_binop_rest): Remove \"pc\" parameter.\n+\t(gen_expr_binop_rest): New overload.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_multi_subscript): New function."
    },
    {
      "sha": "e18e968b852591558fd7f981e1892892d42216d8",
      "filename": "gdb/ax-gdb.c",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e18c58f290609dcfe8d7df450bb88b1adf44337a/gdb/ax-gdb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e18c58f290609dcfe8d7df450bb88b1adf44337a/gdb/ax-gdb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ax-gdb.c?ref=e18c58f290609dcfe8d7df450bb88b1adf44337a",
      "patch": "@@ -2276,13 +2276,12 @@ gen_expr (struct expression *exp, union exp_element **pc,\n \n static void\n gen_expr_binop_rest (struct expression *exp,\n-\t\t     enum exp_opcode op, union exp_element **pc,\n+\t\t     enum exp_opcode op,\n \t\t     struct agent_expr *ax, struct axs_value *value,\n \t\t     struct axs_value *value1, struct axs_value *value2)\n {\n   struct type *int_type = builtin_type (ax->gdbarch)->builtin_int;\n \n-  gen_expr (exp, pc, ax, value2);\n   gen_usual_unary (ax, value2);\n   gen_usual_arithmetic (ax, value1, value2);\n   switch (op)\n@@ -2420,6 +2419,19 @@ gen_expr_binop_rest (struct expression *exp,\n \t\t      _(\"gen_expr: op case sets don't match\"));\n     }\n }\n+\n+/* Variant of gen_expr_binop_rest that first generates the\n+   right-hand-side.  */\n+\n+static void\n+gen_expr_binop_rest (struct expression *exp,\n+\t\t     enum exp_opcode op, union exp_element **pc,\n+\t\t     struct agent_expr *ax, struct axs_value *value,\n+\t\t     struct axs_value *value1, struct axs_value *value2)\n+{\n+  gen_expr (exp, pc, ax, value2);\n+  gen_expr_binop_rest (exp, op, ax, value, value1, value2);\n+}\n \f\n \n /* Given a single variable and a scope, generate bytecodes to trace"
    }
  ]
}