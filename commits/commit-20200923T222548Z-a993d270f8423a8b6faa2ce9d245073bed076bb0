{
  "sha": "a993d270f8423a8b6faa2ce9d245073bed076bb0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTk5M2QyNzBmODQyM2E4YjZmYWEyY2U5ZDI0NTA3M2JlZDA3NmJiMA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-23T13:24:01Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-23T22:25:48Z"
    },
    "message": "[GOLD] PowerPC64 __tls_get_addr_opt stub\n\nThis stub doesn't have the r2 store at the beginning.\n\n\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip\n\tfirst insn of __tls_get_addr_opt stub.",
    "tree": {
      "sha": "e274afc4e986c01f15067da4030a5cd77993e6c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e274afc4e986c01f15067da4030a5cd77993e6c4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a993d270f8423a8b6faa2ce9d245073bed076bb0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a993d270f8423a8b6faa2ce9d245073bed076bb0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a993d270f8423a8b6faa2ce9d245073bed076bb0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a993d270f8423a8b6faa2ce9d245073bed076bb0/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "294338867c268b6da43327b6cbe70e746bff1a04",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/294338867c268b6da43327b6cbe70e746bff1a04",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/294338867c268b6da43327b6cbe70e746bff1a04"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 22,
    "deletions": 14
  },
  "files": [
    {
      "sha": "3cd441af656e464fb55cbcf5b0bf202a3b330e0b",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a993d270f8423a8b6faa2ce9d245073bed076bb0/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a993d270f8423a8b6faa2ce9d245073bed076bb0/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=a993d270f8423a8b6faa2ce9d245073bed076bb0",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Relocate::relocate): Don't skip\n+\tfirst insn of __tls_get_addr_opt stub.\n+\n 2020-08-24  Alan Modra  <amodra@gmail.com>\n \n \t* powerpc.cc (Target_powerpc): Add tprel_opt_ and accessors."
    },
    {
      "sha": "1020fa42f995d5e123ebef5f6676375e36f24c88",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 17,
      "deletions": 14,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a993d270f8423a8b6faa2ce9d245073bed076bb0/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a993d270f8423a8b6faa2ce9d245073bed076bb0/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=a993d270f8423a8b6faa2ce9d245073bed076bb0",
      "patch": "@@ -10401,21 +10401,24 @@ Target_powerpc<size, big_endian>::Relocate::relocate(\n \t\t    value += ent->tocoff_;\n \t\t  if (size == 64\n \t\t      && ent->r2save_\n-\t\t      && r_type == elfcpp::R_PPC64_REL24_NOTOC)\n+\t\t      && !(gsym != NULL\n+\t\t\t   && target->is_tls_get_addr_opt(gsym)))\n \t\t    {\n-\t\t      if (!(target->power10_stubs()\n-\t\t\t    && target->power10_stubs_auto()))\n-\t\t\tvalue += 4;\n-\t\t    }\n-\t\t  else if (size == 64\n-\t\t\t   && ent->r2save_\n-\t\t\t   && relnum < reloc_count - 1)\n-\t\t    {\n-\t\t      Reltype next_rela(preloc + reloc_size);\n-\t\t      if (elfcpp::elf_r_type<size>(next_rela.get_r_info())\n-\t\t\t  == elfcpp::R_PPC64_TOCSAVE\n-\t\t\t  && next_rela.get_r_offset() == rela.get_r_offset() + 4)\n-\t\t\tvalue += 4;\n+\t\t      if (r_type == elfcpp::R_PPC64_REL24_NOTOC)\n+\t\t\t{\n+\t\t\t  if (!(target->power10_stubs()\n+\t\t\t\t&& target->power10_stubs_auto()))\n+\t\t\t    value += 4;\n+\t\t\t}\n+\t\t      else if (relnum < reloc_count - 1)\n+\t\t\t{\n+\t\t\t  Reltype next_rela(preloc + reloc_size);\n+\t\t\t  if (elfcpp::elf_r_type<size>(next_rela.get_r_info())\n+\t\t\t      == elfcpp::R_PPC64_TOCSAVE\n+\t\t\t      && (next_rela.get_r_offset()\n+\t\t\t\t  == rela.get_r_offset() + 4))\n+\t\t\t    value += 4;\n+\t\t\t}\n \t\t    }\n \t\t  localentry0 = ent->localentry0_;\n \t\t  has_stub_value = true;"
    }
  ]
}