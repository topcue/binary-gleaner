{
  "sha": "85d3ad8e0b44832e7726d20eaf456051b5262b43",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODVkM2FkOGUwYjQ0ODMyZTc3MjZkMjBlYWY0NTYwNTFiNTI2MmI0Mw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-04T18:35:09Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-04T18:35:09Z"
    },
    "message": "gdb: make record-btrace clear event handler in wait\n\nFor the same reason explained in the previous patch (which was for the\nremote target), move clearing of the async event handler of the\nrecord-btrace target to the wait method.\n\nThe record-btrace target already re-sets its async event handler in its\nwait method, so that part doesn't need to be changed:\n\n    /* In async mode, we need to announce further events.  */\n    if (target_is_async_p ())\n      record_btrace_maybe_mark_async_event (moving, no_history);\n\ngdb/ChangeLog:\n\n\t* record-btrace.c (record_btrace_handle_async_inferior_event):\n\tDon't clear async event handler.\n\t(record_btrace_target::wait): Clear async event handler at\n\tbeginning.\n\nChange-Id: Ib32087a81bf94f1b884a938c8167ac8bbe09e362",
    "tree": {
      "sha": "85eaa26ec2c6bb430a82e4a4e3c98296246a935d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/85eaa26ec2c6bb430a82e4a4e3c98296246a935d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/85d3ad8e0b44832e7726d20eaf456051b5262b43",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85d3ad8e0b44832e7726d20eaf456051b5262b43",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/85d3ad8e0b44832e7726d20eaf456051b5262b43",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85d3ad8e0b44832e7726d20eaf456051b5262b43/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "baa8575b29fe83e158e203485d4d019621c0d245",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/baa8575b29fe83e158e203485d4d019621c0d245",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/baa8575b29fe83e158e203485d4d019621c0d245"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 10,
    "deletions": 1
  },
  "files": [
    {
      "sha": "0e617df13b2deca4f0f6bb70beed797b7ff476cc",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85d3ad8e0b44832e7726d20eaf456051b5262b43/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85d3ad8e0b44832e7726d20eaf456051b5262b43/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=85d3ad8e0b44832e7726d20eaf456051b5262b43",
      "patch": "@@ -1,3 +1,10 @@\n+2021-02-04  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* record-btrace.c (record_btrace_handle_async_inferior_event):\n+\tDon't clear async event handler.\n+\t(record_btrace_target::wait): Clear async event handler at\n+\tbeginning.\n+\n 2021-02-04  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* remote.c (remote_target::wait): Clear async event handler at"
    },
    {
      "sha": "ac51ff2bf49b7f7e138890b2ee98995afe1dcbd4",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/85d3ad8e0b44832e7726d20eaf456051b5262b43/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/85d3ad8e0b44832e7726d20eaf456051b5262b43/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=85d3ad8e0b44832e7726d20eaf456051b5262b43",
      "patch": "@@ -325,7 +325,6 @@ record_btrace_auto_disable (void)\n static void\n record_btrace_handle_async_inferior_event (gdb_client_data data)\n {\n-  clear_async_event_handler (record_btrace_async_inferior_event_handler);\n   inferior_event_handler (INF_REG_EVENT);\n }\n \n@@ -2532,6 +2531,9 @@ record_btrace_target::wait (ptid_t ptid, struct target_waitstatus *status,\n   std::vector<thread_info *> moving;\n   std::vector<thread_info *> no_history;\n \n+  /* Clear this, if needed we'll re-mark it below.  */\n+  clear_async_event_handler (record_btrace_async_inferior_event_handler);\n+\n   DEBUG (\"wait %s (0x%x)\", target_pid_to_str (ptid).c_str (),\n \t (unsigned) options);\n "
    }
  ]
}