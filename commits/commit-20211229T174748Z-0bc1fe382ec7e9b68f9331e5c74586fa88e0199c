{
  "sha": "0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
  "node_id": "C_kwDOANOeidoAKDBiYzFmZTM4MmVjN2U5YjY4ZjkzMzFlNWM3NDU4NmZhODhlMDE5OWM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-26T21:10:05Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:47:48Z"
    },
    "message": "Use gdb_stdlog for separate debug file logging\n\nThis changes the separate debug file logging code (spread across two\nfiles) to use gdb_stdlog for its output.  This is part of PR gdb/7233.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=7233",
    "tree": {
      "sha": "3cab3d4ece6f75089db81386e9743bd30dd246cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3cab3d4ece6f75089db81386e9743bd30dd246cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3defe97705e325f2f3048b8c18321518a6c7e190",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3defe97705e325f2f3048b8c18321518a6c7e190",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3defe97705e325f2f3048b8c18321518a6c7e190"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 23,
    "deletions": 18
  },
  "files": [
    {
      "sha": "e6da0abddbf72388b0e65f5ac3b17d66f4ef96b9",
      "filename": "gdb/build-id.c",
      "status": "modified",
      "additions": 10,
      "deletions": 8,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c/gdb/build-id.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c/gdb/build-id.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/build-id.c?ref=0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
      "patch": "@@ -76,8 +76,8 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n {\n   if (separate_debug_file_debug)\n     {\n-      printf_unfiltered (_(\"  Trying %s...\"), link.c_str ());\n-      gdb_flush (gdb_stdout);\n+      fprintf_unfiltered (gdb_stdlog, _(\"  Trying %s...\"), link.c_str ());\n+      gdb_flush (gdb_stdlog);\n     }\n \n   /* lrealpath() is expensive even for the usually non-existent files.  */\n@@ -94,7 +94,8 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n   if (filename == NULL)\n     {\n       if (separate_debug_file_debug)\n-\tprintf_unfiltered (_(\" no, unable to compute real path\\n\"));\n+\tfprintf_unfiltered (gdb_stdlog,\n+\t\t\t    _(\" no, unable to compute real path\\n\"));\n \n       return {};\n     }\n@@ -105,21 +106,21 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n   if (debug_bfd == NULL)\n     {\n       if (separate_debug_file_debug)\n-\tprintf_unfiltered (_(\" no, unable to open.\\n\"));\n+\tfprintf_unfiltered (gdb_stdlog, _(\" no, unable to open.\\n\"));\n \n       return {};\n     }\n \n   if (!build_id_verify (debug_bfd.get(), build_id_len, build_id))\n     {\n       if (separate_debug_file_debug)\n-\tprintf_unfiltered (_(\" no, build-id does not match.\\n\"));\n+\tfprintf_unfiltered (gdb_stdlog, _(\" no, build-id does not match.\\n\"));\n \n       return {};\n     }\n \n   if (separate_debug_file_debug)\n-    printf_unfiltered (_(\" yes!\\n\"));\n+    fprintf_unfiltered (gdb_stdlog, _(\" yes!\\n\"));\n \n   return debug_bfd;\n }\n@@ -209,8 +210,9 @@ find_separate_debug_file_by_buildid (struct objfile *objfile)\n   if (build_id != NULL)\n     {\n       if (separate_debug_file_debug)\n-\tprintf_unfiltered (_(\"\\nLooking for separate debug info (build-id) for \"\n-\t\t\t     \"%s\\n\"), objfile_name (objfile));\n+\tfprintf_unfiltered (gdb_stdlog,\n+\t\t\t    _(\"\\nLooking for separate debug info (build-id) for \"\n+\t\t\t      \"%s\\n\"), objfile_name (objfile));\n \n       gdb_bfd_ref_ptr abfd (build_id_to_debug_bfd (build_id->size,\n \t\t\t\t\t\t   build_id->data));"
    },
    {
      "sha": "6787f37d5c30efb590e5331d7057c994795fd796",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0bc1fe382ec7e9b68f9331e5c74586fa88e0199c/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=0bc1fe382ec7e9b68f9331e5c74586fa88e0199c",
      "patch": "@@ -1261,16 +1261,16 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n \n   if (separate_debug_file_debug)\n     {\n-      printf_filtered (_(\"  Trying %s...\"), name.c_str ());\n-      gdb_flush (gdb_stdout);\n+      fprintf_filtered (gdb_stdlog, _(\"  Trying %s...\"), name.c_str ());\n+      gdb_flush (gdb_stdlog);\n     }\n \n   gdb_bfd_ref_ptr abfd (gdb_bfd_open (name.c_str (), gnutarget));\n \n   if (abfd == NULL)\n     {\n       if (separate_debug_file_debug)\n-\tprintf_filtered (_(\" no, unable to open.\\n\"));\n+\tfprintf_filtered (gdb_stdlog, _(\" no, unable to open.\\n\"));\n \n       return 0;\n     }\n@@ -1294,7 +1294,8 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n \t  && abfd_stat.st_ino == parent_stat.st_ino)\n \t{\n \t  if (separate_debug_file_debug)\n-\t    printf_filtered (_(\" no, same file as the objfile.\\n\"));\n+\t    fprintf_filtered (gdb_stdlog,\n+\t\t\t      _(\" no, same file as the objfile.\\n\"));\n \n \t  return 0;\n \t}\n@@ -1308,7 +1309,7 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n   if (!file_crc_p)\n     {\n       if (separate_debug_file_debug)\n-\tprintf_filtered (_(\" no, error computing CRC.\\n\"));\n+\tfprintf_filtered (gdb_stdlog, _(\" no, error computing CRC.\\n\"));\n \n       return 0;\n     }\n@@ -1326,7 +1327,8 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n \t  if (!gdb_bfd_crc (parent_objfile->obfd, &parent_crc))\n \t    {\n \t      if (separate_debug_file_debug)\n-\t\tprintf_filtered (_(\" no, error computing CRC.\\n\"));\n+\t\tfprintf_filtered (gdb_stdlog,\n+\t\t\t\t  _(\" no, error computing CRC.\\n\"));\n \n \t      return 0;\n \t    }\n@@ -1338,13 +1340,13 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n \t\t name.c_str (), objfile_name (parent_objfile));\n \n       if (separate_debug_file_debug)\n-\tprintf_filtered (_(\" no, CRC doesn't match.\\n\"));\n+\tfprintf_filtered (gdb_stdlog, _(\" no, CRC doesn't match.\\n\"));\n \n       return 0;\n     }\n \n   if (separate_debug_file_debug)\n-    printf_filtered (_(\" yes!\\n\"));\n+    fprintf_filtered (gdb_stdlog, _(\" yes!\\n\"));\n \n   return 1;\n }\n@@ -1379,8 +1381,9 @@ find_separate_debug_file (const char *dir,\n \t\t\t  unsigned long crc32, struct objfile *objfile)\n {\n   if (separate_debug_file_debug)\n-    printf_filtered (_(\"\\nLooking for separate debug info (debug link) for \"\n-\t\t       \"%s\\n\"), objfile_name (objfile));\n+    fprintf_filtered (gdb_stdlog,\n+\t\t      _(\"\\nLooking for separate debug info (debug link) for \"\n+\t\t\t\"%s\\n\"), objfile_name (objfile));\n \n   /* First try in the same directory as the original file.  */\n   std::string debugfile = dir;"
    }
  ]
}