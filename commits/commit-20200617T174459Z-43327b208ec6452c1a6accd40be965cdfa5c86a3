{
  "sha": "43327b208ec6452c1a6accd40be965cdfa5c86a3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDMzMjdiMjA4ZWM2NDUyYzFhNmFjY2Q0MGJlOTY1Y2RmYTVjODZhMw==",
  "commit": {
    "author": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2020-06-17T15:21:30Z"
    },
    "committer": {
      "name": "Keith Seitz",
      "email": "keiths@redhat.com",
      "date": "2020-06-17T17:44:59Z"
    },
    "message": "Pass INTERNAL_GDBFLAGS when executing GDB\n\ngdb.debuginfod/fetch_src_and_symbols.exp attempts to ascertain\nwhether GDB was built with debuginfod support by executing\n\"$GDB --configuration\".\n\nThat seems harmless enough. However, if GDB is not already installed\non the host, the command will fail:\n\n$ ./gdb --config\nException caught while booting Guile.\nError in function \"open-file\":\nNo such file or directory: \"/usr/share/gdb/guile/gdb/boot.scm\"\n./gdb: warning: Could not complete Guile gdb module initialization from:\n/usr/share/gdb/guile/gdb/boot.scm.\nLimited Guile support is available.\nSuggest passing --data-directory=/path/to/gdb/data-directory.\nPython Exception <class 'ModuleNotFoundError'> No module named 'gdb':\n./gdb: warning:\nCould not load the Python gdb module from `/usr/share/gdb/python'.\nLimited Python support is available from the _gdb module.\nSuggest passing --data-directory=/path/to/gdb/data-directory.\nThis GDB was configured as follows:\n   configure --host=x86_64-redhat-linux-gnu --target=x86_64-redhat-linux-gnu\n      [abbreviated output]\n\nThe problem here is, of course, that while running in the test suite,\nwe must pass INTERNAL_GDBFLAGS in order to pick up the --data-directory\noption.\n\ngdb/testsuite/ChangeLog\n2020-06-17  Keith Seitz  <keiths@redhat.com>\n\n\t* gdb.deuginfod/fetch_src_and_symbols.exp: Pass INTERNAL_GDBFLAGS\n\twhen executing \"gdb --configuration\".",
    "tree": {
      "sha": "04161093884d8a24538dab02c0c49f74874f5e99",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/04161093884d8a24538dab02c0c49f74874f5e99"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/43327b208ec6452c1a6accd40be965cdfa5c86a3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43327b208ec6452c1a6accd40be965cdfa5c86a3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/43327b208ec6452c1a6accd40be965cdfa5c86a3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43327b208ec6452c1a6accd40be965cdfa5c86a3/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "00401e65be3c141e56f0e4dfd3181867fed447ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00401e65be3c141e56f0e4dfd3181867fed447ea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00401e65be3c141e56f0e4dfd3181867fed447ea"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 7,
    "deletions": 1
  },
  "files": [
    {
      "sha": "19cb2f1d7cb1c28e11fc90e109c77dbd99ab2831",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43327b208ec6452c1a6accd40be965cdfa5c86a3/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43327b208ec6452c1a6accd40be965cdfa5c86a3/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=43327b208ec6452c1a6accd40be965cdfa5c86a3",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-17  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gdb.deuginfod/fetch_src_and_symbols.exp: Pass INTERNAL_GDBFLAGS\n+\twhen executing \"gdb --configuration\".\n+\n 2020-06-17  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (gdb_tcl_unknown): New proc."
    },
    {
      "sha": "fbab3b1f48d5cbfedf0393282d6b5466328d68e9",
      "filename": "gdb/testsuite/gdb.debuginfod/fetch_src_and_symbols.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43327b208ec6452c1a6accd40be965cdfa5c86a3/gdb/testsuite/gdb.debuginfod/fetch_src_and_symbols.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43327b208ec6452c1a6accd40be965cdfa5c86a3/gdb/testsuite/gdb.debuginfod/fetch_src_and_symbols.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.debuginfod/fetch_src_and_symbols.exp?ref=43327b208ec6452c1a6accd40be965cdfa5c86a3",
      "patch": "@@ -30,7 +30,8 @@ if { [which curl] == 0 } {\n }\n \n # Skip testing if gdb was not configured with debuginfod\n-if { [string first \"with-debuginfod\" [exec $GDB --configuration]] == -1 } {\n+if { [string first \"with-debuginfod\" \\\n+         [eval exec $GDB $INTERNAL_GDBFLAGS --configuration]] == -1 } {\n     untested \"gdb not configured with debuginfod\"\n     return -1\n }"
    }
  ]
}