{
  "sha": "421d1616230a78449dc2f5abb60f03d38b96c3cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDIxZDE2MTYyMzBhNzg0NDlkYzJmNWFiYjYwZjAzZDM4Yjk2YzNjZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-10-31T16:34:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-01-08T18:17:18Z"
    },
    "message": "Use unique_xmalloc_ptr in fixup_go_packaging\n\nThis changes fixup_go_packaging to use unique_xmalloc_ptr.  I kept\nthis patch separate as it is slightly more complicated than the\nprevious changes.\n\ngdb/ChangeLog\n2020-01-08  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2read.c (fixup_go_packaging): Use unique_xmalloc_ptr.\n\nChange-Id: I0c553d0c6579db478c27bc40fc21133a61e1a4d9",
    "tree": {
      "sha": "d772378669c047cf650d85849f9f4b95a1b3d987",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d772378669c047cf650d85849f9f4b95a1b3d987"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/421d1616230a78449dc2f5abb60f03d38b96c3cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/421d1616230a78449dc2f5abb60f03d38b96c3cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/421d1616230a78449dc2f5abb60f03d38b96c3cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/421d1616230a78449dc2f5abb60f03d38b96c3cf/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "43816ebc335481c99808c4fdfffb9ea3f510b19a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43816ebc335481c99808c4fdfffb9ea3f510b19a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/43816ebc335481c99808c4fdfffb9ea3f510b19a"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 11,
    "deletions": 9
  },
  "files": [
    {
      "sha": "1472cd4aabd028d1d71dcb14bd7244f54bacca18",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/421d1616230a78449dc2f5abb60f03d38b96c3cf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/421d1616230a78449dc2f5abb60f03d38b96c3cf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=421d1616230a78449dc2f5abb60f03d38b96c3cf",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2read.c (fixup_go_packaging): Use unique_xmalloc_ptr.\n+\n 2020-01-08  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2read.c (add_partial_symbol): Use unique_xmalloc_ptr."
    },
    {
      "sha": "b2d6136e554eb0f54d61574534530c1f17d53705",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 9,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/421d1616230a78449dc2f5abb60f03d38b96c3cf/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/421d1616230a78449dc2f5abb60f03d38b96c3cf/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=421d1616230a78449dc2f5abb60f03d38b96c3cf",
      "patch": "@@ -9892,7 +9892,7 @@ compute_delayed_physnames (struct dwarf2_cu *cu)\n static void\n fixup_go_packaging (struct dwarf2_cu *cu)\n {\n-  char *package_name = NULL;\n+  gdb::unique_xmalloc_ptr<char> package_name;\n   struct pending *list;\n   int i;\n \n@@ -9907,24 +9907,24 @@ fixup_go_packaging (struct dwarf2_cu *cu)\n \t  if (sym->language () == language_go\n \t      && SYMBOL_CLASS (sym) == LOC_BLOCK)\n \t    {\n-\t      char *this_package_name = go_symbol_package_name (sym);\n+\t      gdb::unique_xmalloc_ptr<char> this_package_name\n+\t\t(go_symbol_package_name (sym));\n \n \t      if (this_package_name == NULL)\n \t\tcontinue;\n \t      if (package_name == NULL)\n-\t\tpackage_name = this_package_name;\n+\t\tpackage_name = std::move (this_package_name);\n \t      else\n \t\t{\n \t\t  struct objfile *objfile\n \t\t    = cu->per_cu->dwarf2_per_objfile->objfile;\n-\t\t  if (strcmp (package_name, this_package_name) != 0)\n+\t\t  if (strcmp (package_name.get (), this_package_name.get ()) != 0)\n \t\t    complaint (_(\"Symtab %s has objects from two different Go packages: %s and %s\"),\n \t\t\t       (symbol_symtab (sym) != NULL\n \t\t\t\t? symtab_to_filename_for_display\n \t\t\t\t    (symbol_symtab (sym))\n \t\t\t\t: objfile_name (objfile)),\n-\t\t\t       this_package_name, package_name);\n-\t\t  xfree (this_package_name);\n+\t\t\t       this_package_name.get (), package_name.get ());\n \t\t}\n \t    }\n \t}\n@@ -9934,7 +9934,7 @@ fixup_go_packaging (struct dwarf2_cu *cu)\n     {\n       struct objfile *objfile = cu->per_cu->dwarf2_per_objfile->objfile;\n       const char *saved_package_name\n-\t= obstack_strdup (&objfile->per_bfd->storage_obstack, package_name);\n+\t= obstack_strdup (&objfile->per_bfd->storage_obstack, package_name.get ());\n       struct type *type = init_type (objfile, TYPE_CODE_MODULE, 0,\n \t\t\t\t     saved_package_name);\n       struct symbol *sym;\n@@ -9949,8 +9949,6 @@ fixup_go_packaging (struct dwarf2_cu *cu)\n       SYMBOL_TYPE (sym) = type;\n \n       add_symbol_to_list (sym, cu->get_builder ()->get_global_symbols ());\n-\n-      xfree (package_name);\n     }\n }\n "
    }
  ]
}