{
  "sha": "91e3c425d6adb4797a2137dd9126a2f19e1833d8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTFlM2M0MjVkNmFkYjQ3OTdhMjEzN2RkOTEyNmEyZjE5ZTE4MzNkOA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-07T20:28:56Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-07T20:28:56Z"
    },
    "message": "gdb: make target_desc_info::filename an std::string\n\nTo make the management of memory automatic.\n\nAs to why I chose to make this an std::string and not an\nstd::unique_xmalloc_ptr<char>: some parts of the code consider both a\nNULL value and an empty string value to mean \"no filename\".\ntarget_desc_info_from_user_p, however, doesn't check for a non-NULL but\nempty string value.  So it seems like having two ways of denoting \"no\nfilename\" can lead to these kinds of inconsistencies.  Using\nstd::string, \"no filename\" is only represented by an empty value.\n\nAs a bonus, using an std::string lets us copy target_desc_info objects\nusing the default assignment operator.\n\ngdb/ChangeLog:\n\n\t* target-descriptions.c (struct target_desc_info) <filename>:\n\tMake std::string.\n\t(copy_inferior_target_desc_info): Adjust.\n\t(target_desc_info_free): Adjust.\n\t(target_find_description): Adjust.\n\t(set_tdesc_filename_cmd): Adjust.\n\t(show_tdesc_filename_cmd): Adjust.\n\t(unset_tdesc_filename_cmd): Adjust.\n\t(maint_print_c_tdesc_cmd): Adjust.\n\nChange-Id: I4e3a6ad8ccda2b88c202471d4f54249753cad127",
    "tree": {
      "sha": "9de2cd0babb207e59089247ca6f3eab478dc10ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9de2cd0babb207e59089247ca6f3eab478dc10ad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/91e3c425d6adb4797a2137dd9126a2f19e1833d8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91e3c425d6adb4797a2137dd9126a2f19e1833d8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/91e3c425d6adb4797a2137dd9126a2f19e1833d8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/91e3c425d6adb4797a2137dd9126a2f19e1833d8/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0b2f7ade5352e698ded54760ee8b34092fdd164f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b2f7ade5352e698ded54760ee8b34092fdd164f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0b2f7ade5352e698ded54760ee8b34092fdd164f"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 26,
    "deletions": 20
  },
  "files": [
    {
      "sha": "25ee791de61883fc9ee19fc93bea6a183c5e44e1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/91e3c425d6adb4797a2137dd9126a2f19e1833d8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/91e3c425d6adb4797a2137dd9126a2f19e1833d8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=91e3c425d6adb4797a2137dd9126a2f19e1833d8",
      "patch": "@@ -1,3 +1,15 @@\n+2021-05-07  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* target-descriptions.c (struct target_desc_info) <filename>:\n+\tMake std::string.\n+\t(copy_inferior_target_desc_info): Adjust.\n+\t(target_desc_info_free): Adjust.\n+\t(target_find_description): Adjust.\n+\t(set_tdesc_filename_cmd): Adjust.\n+\t(show_tdesc_filename_cmd): Adjust.\n+\t(unset_tdesc_filename_cmd): Adjust.\n+\t(maint_print_c_tdesc_cmd): Adjust.\n+\n 2021-05-07  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* target-descriptions.c (struct target_desc_info): Initialize"
    },
    {
      "sha": "053864dec58bdef17a7ea8901cb89b7e9a7d001a",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 14,
      "deletions": 20,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/91e3c425d6adb4797a2137dd9126a2f19e1833d8/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/91e3c425d6adb4797a2137dd9126a2f19e1833d8/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=91e3c425d6adb4797a2137dd9126a2f19e1833d8",
      "patch": "@@ -456,10 +456,12 @@ struct target_desc_info\n \n   const struct target_desc *tdesc = nullptr;\n \n-  /* The filename to read a target description from, as set by \"set\n-     tdesc filename ...\"  */\n+  /* If not empty, the filename to read a target description from, as set by\n+     \"set tdesc filename ...\".\n \n-  char *filename = nullptr;\n+     If empty, there is not filename specified by the user.  */\n+\n+  std::string filename;\n };\n \n /* Get the inferior INF's target description info, allocating one on\n@@ -484,7 +486,7 @@ static struct gdbarch_data *tdesc_data;\n int\n target_desc_info_from_user_p (struct target_desc_info *info)\n {\n-  return info != NULL && info->filename != NULL;\n+  return info != nullptr && !info->filename.empty ();\n }\n \n /* See target-descriptions.h.  */\n@@ -495,21 +497,15 @@ copy_inferior_target_desc_info (struct inferior *destinf, struct inferior *srcin\n   struct target_desc_info *src = get_tdesc_info (srcinf);\n   struct target_desc_info *dest = get_tdesc_info (destinf);\n \n-  dest->fetched = src->fetched;\n-  dest->tdesc = src->tdesc;\n-  dest->filename = src->filename != NULL ? xstrdup (src->filename) : NULL;\n+  *dest = *src;\n }\n \n /* See target-descriptions.h.  */\n \n void\n target_desc_info_free (struct target_desc_info *tdesc_info)\n {\n-  if (tdesc_info != NULL)\n-    {\n-      xfree (tdesc_info->filename);\n-      delete tdesc_info;\n-    }\n+  delete tdesc_info;\n }\n \n /* The string manipulated by the \"set tdesc filename ...\" command.  */\n@@ -539,8 +535,8 @@ target_find_description (void)\n   /* First try to fetch an XML description from the user-specified\n      file.  */\n   tdesc_info->tdesc = nullptr;\n-  if (tdesc_info->filename != nullptr && *tdesc_info->filename != '\\0')\n-    tdesc_info->tdesc = file_read_description_xml (tdesc_info->filename);\n+  if (!tdesc_info->filename.empty ())\n+    tdesc_info->tdesc = file_read_description_xml (tdesc_info->filename.data ());\n \n   /* Next try to read the description from the current target using\n      target objects.  */\n@@ -1295,8 +1291,7 @@ set_tdesc_filename_cmd (const char *args, int from_tty,\n {\n   target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n \n-  xfree (tdesc_info->filename);\n-  tdesc_info->filename = xstrdup (tdesc_filename_cmd_string);\n+  tdesc_info->filename = tdesc_filename_cmd_string;\n \n   target_clear_description ();\n   target_find_description ();\n@@ -1307,7 +1302,7 @@ show_tdesc_filename_cmd (struct ui_file *file, int from_tty,\n \t\t\t struct cmd_list_element *c,\n \t\t\t const char *value)\n {\n-  value = get_tdesc_info (current_inferior ())->filename;\n+  value = get_tdesc_info (current_inferior ())->filename.data ();\n \n   if (value != NULL && *value != '\\0')\n     printf_filtered (_(\"The target description will be read from \\\"%s\\\".\\n\"),\n@@ -1322,8 +1317,7 @@ unset_tdesc_filename_cmd (const char *args, int from_tty)\n {\n   target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n \n-  xfree (tdesc_info->filename);\n-  tdesc_info->filename = nullptr;\n+  tdesc_info->filename.clear ();\n   target_clear_description ();\n   target_find_description ();\n }\n@@ -1779,7 +1773,7 @@ maint_print_c_tdesc_cmd (const char *args, int from_tty)\n \t initialization code will reject the new description.  */\n       target_desc_info *tdesc_info = get_tdesc_info (current_inferior ());\n       tdesc = tdesc_info->tdesc;\n-      filename = tdesc_info->filename;\n+      filename = tdesc_info->filename.data ();\n     }\n   else\n     {"
    }
  ]
}