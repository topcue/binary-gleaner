{
  "sha": "f569c1c51a1ff643fc7ba961555fe1067dcf5304",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjU2OWMxYzUxYTFmZjY0M2ZjN2JhOTYxNTU1ZmUxMDY3ZGNmNTMwNA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-08-16T11:30:34Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-08-16T11:30:34Z"
    },
    "message": "[gdb/testsuite] Add gdb.base/eh_return.exp\n\nIn PR25350, an internal error was reported:\n...\n(gdb) break *eh2+0x7e\nBreakpoint 1 at 0x13e2: file small.c, line 38.\n(gdb) run\nStarting program: a.out\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/usr/lib/libthread_db.so.1\".\n\nBreakpoint 1, 0x00005555555553e2 in eh2 (\nframe.c:558: internal-error: frame_id get_frame_id(frame_info*): \\\n  Assertion `stashed' failed.\nA problem internal to GDB has been detected,\nfurther debugging may prove unreliable.\n...\n\nThe internal error does not reproduce after recent commit 547ce8f00b\n\"[gdb/backtrace] Fix printing of fortran string args\".\n\nAdd the corresponding test-case as regression test, given that the code is\nrather atypical.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-08-16  Tom de Vries  <tdevries@suse.de>\n\n\tPR gdb/25350\n\t* gdb.base/eh_return.c: New test.\n\t* gdb.base/eh_return.exp: New file.",
    "tree": {
      "sha": "aedcd49b2d36e5aa3b4e4c77712143d206f8fe51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aedcd49b2d36e5aa3b4e4c77712143d206f8fe51"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f569c1c51a1ff643fc7ba961555fe1067dcf5304",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f569c1c51a1ff643fc7ba961555fe1067dcf5304",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f569c1c51a1ff643fc7ba961555fe1067dcf5304",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f569c1c51a1ff643fc7ba961555fe1067dcf5304/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "878000178e22f7eed58eec75feccf34cb2b4b526",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/878000178e22f7eed58eec75feccf34cb2b4b526",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/878000178e22f7eed58eec75feccf34cb2b4b526"
    }
  ],
  "stats": {
    "total": 151,
    "additions": 151,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f0b7949fd615ce5d82e4e10185aed7f52e58b874",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=f569c1c51a1ff643fc7ba961555fe1067dcf5304",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-16  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR gdb/25350\n+\t* gdb.base/eh_return.c: New test.\n+\t* gdb.base/eh_return.exp: New file.\n+\n 2020-08-15  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.fortran/mixed-lang-stack.c (fortran_charlen_t): New type."
    },
    {
      "sha": "80eea9c783adb3e1375224f780e22a71521f0b75",
      "filename": "gdb/testsuite/gdb.base/eh_return.c",
      "status": "added",
      "additions": 98,
      "deletions": 0,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/gdb.base/eh_return.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/gdb.base/eh_return.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/eh_return.c?ref=f569c1c51a1ff643fc7ba961555fe1067dcf5304",
      "patch": "@@ -0,0 +1,98 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   It was copied from gcc repo, gcc/testsuite/gcc.target/aarch64/eh_return.c.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+\n+int val, test, failed;\n+\n+int main (void);\n+\n+void\n+eh0 (void *p)\n+{\n+  val = (int)(long)p & 7;\n+  if (val)\n+    abort ();\n+}\n+\n+void\n+eh1 (void *p, int x)\n+{\n+  void *q = __builtin_alloca (x);\n+  eh0 (q);\n+  __builtin_eh_return (0, p);\n+}\n+\n+void\n+eh2a (int a,int b,int c,int d,int e,int f,int g,int h, void *p)\n+{\n+  val = a + b + c + d + e + f + g + h +  (int)(long)p & 7;\n+}\n+\n+void\n+eh2 (void *p)\n+{\n+  eh2a (val, val, val, val, val, val, val, val, p);\n+  __builtin_eh_return (0, p);\n+}\n+\n+\n+void\n+continuation (void)\n+{\n+  test++;\n+  main ();\n+}\n+\n+void\n+fail (void)\n+{\n+  failed = 1;\n+  printf (\"failed\\n\");\n+  continuation ();\n+}\n+\n+void\n+do_test1 (void)\n+{\n+  if (!val)\n+    eh1 (continuation, 100);\n+  fail ();\n+}\n+\n+void\n+do_test2 (void)\n+{\n+  if (!val)\n+    eh2 (continuation);\n+  fail ();\n+}\n+\n+int\n+main (void)\n+{\n+  if (test == 0)\n+    do_test1 ();\n+  if (test == 1)\n+    do_test2 ();\n+  if (failed || test != 2)\n+    exit (1);\n+  exit (0);\n+}"
    },
    {
      "sha": "e38398ed37c38e07c86a3bd96788be90293f85e9",
      "filename": "gdb/testsuite/gdb.base/eh_return.exp",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/gdb.base/eh_return.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f569c1c51a1ff643fc7ba961555fe1067dcf5304/gdb/testsuite/gdb.base/eh_return.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/eh_return.exp?ref=f569c1c51a1ff643fc7ba961555fe1067dcf5304",
      "patch": "@@ -0,0 +1,47 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+# Check if executable generated from eh_return.c assert when setting a\n+# breakpoint at the last insn of eh, and running to it.\n+\n+standard_testfile\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n+    return -1\n+}\n+\n+set address -1\n+\n+# Get the address of the last insn in function eh2.\n+gdb_test_multiple \"disassemble eh2\" \"\" {\n+    -re -wrap \"($hex)\\[^\\r\\n\\]*\\r\\nEnd of assembler dump.\" {\n+\tset address $expect_out(1,string)\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+if { $address == -1 } {\n+    return 0\n+}\n+\n+clean_restart ${binfile}\n+\n+gdb_breakpoint \"*$address\" message\n+\n+# The assert did not reproduce when running to main, and continuing to the\n+# breakpoint, so instead, run to the breakpoint.\n+gdb_run_cmd\n+\n+gdb_test \"\" \"Breakpoint .*\" \"hit breakpoint\""
    }
  ]
}