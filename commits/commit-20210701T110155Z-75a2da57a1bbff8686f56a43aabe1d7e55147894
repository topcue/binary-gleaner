{
  "sha": "75a2da57a1bbff8686f56a43aabe1d7e55147894",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzVhMmRhNTdhMWJiZmY4Njg2ZjU2YTQzYWFiZTFkN2U1NTE0Nzg5NA==",
  "commit": {
    "author": {
      "name": "Andrei Homescu",
      "email": "ah@immunant.com",
      "date": "2021-07-01T11:01:55Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-07-01T11:01:55Z"
    },
    "message": "readelf: Reset file position to beginning for thin archive members\n\n\t* readelf.c (process_archive): Reset file position to the\n\tbeginning when calling process_object for thin archive members.\n\t* testsuite/binutils-all/readelf.exp: Add test.\n\t* testsuite/binutils-all/readelf.h.thin: New file.",
    "tree": {
      "sha": "df54a4d3cdd1241fff656831cd238b4ee0e8b73f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/df54a4d3cdd1241fff656831cd238b4ee0e8b73f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75a2da57a1bbff8686f56a43aabe1d7e55147894",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75a2da57a1bbff8686f56a43aabe1d7e55147894",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75a2da57a1bbff8686f56a43aabe1d7e55147894",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75a2da57a1bbff8686f56a43aabe1d7e55147894/comments",
  "author": {
    "login": "ahomescu",
    "id": 443157,
    "node_id": "MDQ6VXNlcjQ0MzE1Nw==",
    "avatar_url": "https://avatars.githubusercontent.com/u/443157?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ahomescu",
    "html_url": "https://github.com/ahomescu",
    "followers_url": "https://api.github.com/users/ahomescu/followers",
    "following_url": "https://api.github.com/users/ahomescu/following{/other_user}",
    "gists_url": "https://api.github.com/users/ahomescu/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ahomescu/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ahomescu/subscriptions",
    "organizations_url": "https://api.github.com/users/ahomescu/orgs",
    "repos_url": "https://api.github.com/users/ahomescu/repos",
    "events_url": "https://api.github.com/users/ahomescu/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ahomescu/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "417f991f08cb869e8274e0a6af6c88b14413e0ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/417f991f08cb869e8274e0a6af6c88b14413e0ec",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/417f991f08cb869e8274e0a6af6c88b14413e0ec"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 60,
    "deletions": 0
  },
  "files": [
    {
      "sha": "7e1e2970dbd834473f8cde10fa15eae8b088bda0",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=75a2da57a1bbff8686f56a43aabe1d7e55147894",
      "patch": "@@ -1,3 +1,10 @@\n+2021-07-01  Andrei Homescu  <ah@immunant.com>\n+\n+\t* readelf.c (process_archive): Reset file position to the\n+\tbeginning when calling process_object for thin archive members.\n+\t* testsuite/binutils-all/readelf.exp: Add test.\n+\t* testsuite/binutils-all/readelf.h.thin: New file.\n+\n 2021-06-30  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf.c (read_and_display_attr_value): Handle"
    },
    {
      "sha": "a6073f7ec8092e9a93542d20a953b9c0e87c301f",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=75a2da57a1bbff8686f56a43aabe1d7e55147894",
      "patch": "@@ -21792,6 +21792,9 @@ process_archive (Filedata * filedata, bool is_thin_archive)\n \t  filedata->archive_file_offset = arch.nested_member_origin;\n \t  member_filedata->file_name = qualified_name;\n \n+\t  /* The call to process_object() expects the file to be at the beginning.  */\n+\t  rewind (member_filedata->handle);\n+\n \t  if (! process_object (member_filedata))\n \t    ret = false;\n "
    },
    {
      "sha": "cf5fb64d2ac17a40aeb172c711d79c59dbacc645",
      "filename": "binutils/testsuite/binutils-all/readelf.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/testsuite/binutils-all/readelf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/testsuite/binutils-all/readelf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.exp?ref=75a2da57a1bbff8686f56a43aabe1d7e55147894",
      "patch": "@@ -310,6 +310,32 @@ proc readelf_dump_test {} {\n     # XXX FIXME: Add test of readelf -x here\n }\n \n+# Tests whether readelf can read thin archives\n+proc readelf_thin_archive_test {} {\n+    global AR\n+\n+    if ![is_remote host] {\n+\tset tempfile tmpdir/bintest.o\n+        set templib  tmpdir/bintest.thin.a\n+        set libname  tmpdir/bintest.thin.a\n+    } else {\n+\tset tempfile [remote_download host tmpdir/bintest.o]\n+        set templib  [remote_download host tmpdir/bintest.thin.a]\n+        set libname  bintest.thin.a\n+    }\n+\n+    set testname \"readelf -h bintest.thin\"\n+    set got [binutils_run $AR \"rcT $libname ${tempfile}\"]\n+    if ![string match \"\" $got] {\n+        fail $testname\n+        return\n+    }\n+\n+    readelf_test -h $templib readelf.h.thin\n+\n+    pass $testname\n+}\n+\n if ![is_remote host] {\n     if {[which $READELF] == 0} then {\n         perror \"$READELF does not exist\"\n@@ -344,6 +370,8 @@ if {![binutils_assemble $srcdir/$subdir/bintest.s tmpdir/bintest.o]} then {\n     setup_xfail \"mips-*-*irix*\"\n     readelf_test -s $tempfile readelf.ss\n     readelf_test -r $tempfile readelf.r\n+\n+    readelf_thin_archive_test\n }\n \n # Test demangling symbol names."
    },
    {
      "sha": "32ea2b7d6f1aa34e4449e109271302c854950c1f",
      "filename": "binutils/testsuite/binutils-all/readelf.h.thin",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/testsuite/binutils-all/readelf.h.thin",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75a2da57a1bbff8686f56a43aabe1d7e55147894/binutils/testsuite/binutils-all/readelf.h.thin",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/readelf.h.thin?ref=75a2da57a1bbff8686f56a43aabe1d7e55147894",
      "patch": "@@ -0,0 +1,22 @@\n+\n+File: .*bintest\\.thin\\.a.*\n+ELF Header:\n+  Magic:   7f 45 4c 46 0[12] 0[12] 01 .. .. 00 00 00 00 00 00 00 \n+  Class:                             ELF[36][24]\n+  Data:                              2's complement,.* endian\n+  Version:                           1 \\(current\\)\n+  OS/ABI:                            .*\n+  ABI Version:                       .*\n+  Type:                              REL \\(Relocatable file\\)\n+  Machine:                           .*\n+  Version:                           0x1\n+  Entry point address:               0x0\n+  Start of program headers:          0 \\(bytes into file\\)\n+  Start of section headers:          .* \\(bytes into file\\)\n+  Flags:                             .*\n+  Size of this header:               .* \\(bytes\\)\n+  Size of program headers:           0 \\(bytes\\)\n+  Number of program headers:         0\n+  Size of section headers:           .* \\(bytes\\)\n+  Number of section headers:         .*\n+  Section header string table index: .*"
    }
  ]
}