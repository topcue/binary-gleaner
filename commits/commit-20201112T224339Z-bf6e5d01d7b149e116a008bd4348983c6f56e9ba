{
  "sha": "bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmY2ZTVkMDFkN2IxNDllMTE2YTAwOGJkNDM0ODk4M2M2ZjU2ZTliYQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-12T22:42:55Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-11-12T22:43:39Z"
    },
    "message": "gdb/dwarf: fix call to dwarf2_queue_guard in dw2_do_instantiate_symtab\n\nIt took me a while to understand why that would even compile: it looks\nlike we pass a type name as a pointer, that makes no sense.  By looking\nat the DWARF, I understood that the compiler actually interprets it as a\nfunction declaration.  So the statement was doing nothing, no\ndwarf2_queue_guard was instantiated.  Fix it by passing the right\nvariable name.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (dw2_do_instantiate_symtab): Fix call to\n\tdwarf2_queue_guard.\n\nChange-Id: I3a7bdead9e8c39f8342a471f10181b85b8f0d801",
    "tree": {
      "sha": "0f3d9451c6034d3cb0108189eb97e998e7bcf031",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f3d9451c6034d3cb0108189eb97e998e7bcf031"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf6e5d01d7b149e116a008bd4348983c6f56e9ba/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e57cf1f2cdf819946494becf282e47194aa6216d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e57cf1f2cdf819946494becf282e47194aa6216d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e57cf1f2cdf819946494becf282e47194aa6216d"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "abcd02bd170efb650dee1845318645da3e454674",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6e5d01d7b149e116a008bd4348983c6f56e9ba/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6e5d01d7b149e116a008bd4348983c6f56e9ba/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
      "patch": "@@ -1,3 +1,8 @@\n+2020-11-12  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.c (dw2_do_instantiate_symtab): Fix call to\n+\tdwarf2_queue_guard.\n+\n 2020-11-12  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.c (dw2_do_instantiate_symtab): Fix typo in"
    },
    {
      "sha": "1b43fc8cdcdeae47077957df5cf24fcee9da664d",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf6e5d01d7b149e116a008bd4348983c6f56e9ba/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf6e5d01d7b149e116a008bd4348983c6f56e9ba/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=bf6e5d01d7b149e116a008bd4348983c6f56e9ba",
      "patch": "@@ -2435,7 +2435,7 @@ dw2_do_instantiate_symtab (dwarf2_per_cu_data *per_cu,\n   /* The destructor of dwarf2_queue_guard frees any entries left on\n      the queue.  After this point we're guaranteed to leave this function\n      with the dwarf queue empty.  */\n-  dwarf2_queue_guard q_guard (dwarf2_per_objfile);\n+  dwarf2_queue_guard q_guard (per_objfile);\n \n   if (!per_objfile->symtab_set_p (per_cu))\n     {"
    }
  ]
}