{
  "sha": "41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDFmMzdhNmZiNzFmMmEzZGUzODgxMDhmNWNkZmNhOWNiZTZlOWQ1MQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-26T06:50:35Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-09-26T10:21:18Z"
    },
    "message": "PR24262, plugin search dir doesn't respect --libdir\n\nbfd/\n\tPR 24262\n\t* Makefile.am (AM_CPPFLAGS): Add -DLIBDIR.\n\t* plugin.c (load_plugin): Search both ${libdir}/bfd-plugins and\n\t${bindir}/../lib/bfd-plugins if different.\n\t* Makefile.in: Regenerate.\nld/\n\tPR 24262\n\t* ld.texi (-plugin): Revert 2019-03-15 change.",
    "tree": {
      "sha": "9c440accb37851b3f1328671eff5ceac04f0e99c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9c440accb37851b3f1328671eff5ceac04f0e99c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d2f617897b4789ea370559ddbf19d96ad5618128",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d2f617897b4789ea370559ddbf19d96ad5618128",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d2f617897b4789ea370559ddbf19d96ad5618128"
    }
  ],
  "stats": {
    "total": 108,
    "additions": 73,
    "deletions": 35
  },
  "files": [
    {
      "sha": "8496cb484f9d06cbb9ef18131017193967a809f0",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -1,3 +1,11 @@\n+2019-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24262\n+\t* Makefile.am (AM_CPPFLAGS): Add -DLIBDIR.\n+\t* plugin.c (load_plugin): Search both ${libdir}/bfd-plugins and\n+\t${bindir}/../lib/bfd-plugins if different.\n+\t* Makefile.in: Regenerate.\n+\n 2019-09-23  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_check_relocs): Use bfd_link_executable"
    },
    {
      "sha": "ca868e7c2e8694d22196b8d678246423f55bebd3",
      "filename": "bfd/Makefile.am",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.am?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -53,7 +53,7 @@ ZLIBINC = @zlibinc@\n WARN_CFLAGS = @WARN_CFLAGS@\n NO_WERROR = @NO_WERROR@\n AM_CFLAGS = $(WARN_CFLAGS) $(ZLIBINC)\n-AM_CPPFLAGS = -DBINDIR='\"$(bindir)\"'\n+AM_CPPFLAGS = -DBINDIR='\"$(bindir)\"' -DLIBDIR='\"$(libdir)\"'\n if PLUGINS\n bfdinclude_HEADERS += $(INCDIR)/plugin-api.h\n LIBDL = @lt_cv_dlopen_libs@"
    },
    {
      "sha": "ec1ce3eb8d752ebf2cebeaa32dd318cf8c37af73",
      "filename": "bfd/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/Makefile.in?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -479,8 +479,9 @@ libbfd_la_LDFLAGS = $(am__append_1) -release `cat libtool-soversion` \\\n ZLIB = @zlibdir@ -lz\n ZLIBINC = @zlibinc@\n AM_CFLAGS = $(WARN_CFLAGS) $(ZLIBINC)\n-AM_CPPFLAGS = -DBINDIR='\"$(bindir)\"' @HDEFINES@ @COREFLAG@ @TDEFINES@ \\\n-\t$(CSEARCH) $(CSWITCHES) $(HAVEVECS) @INCINTL@\n+AM_CPPFLAGS = -DBINDIR='\"$(bindir)\"' -DLIBDIR='\"$(libdir)\"' @HDEFINES@ \\\n+\t@COREFLAG@ @TDEFINES@ $(CSEARCH) $(CSWITCHES) $(HAVEVECS) \\\n+\t@INCINTL@ $(am__empty)\n @PLUGINS_TRUE@LIBDL = @lt_cv_dlopen_libs@\n \n # bfd.h goes here, for now"
    },
    {
      "sha": "5f059befb40ecb454bdb74fd8ed95ae197f7bfee",
      "filename": "bfd/plugin.c",
      "status": "modified",
      "additions": 55,
      "deletions": 31,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/plugin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/bfd/plugin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/plugin.c?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -367,11 +367,15 @@ register_ld_plugin_object_p (const bfd_target *(*object_p) (bfd *))\n static int\n load_plugin (bfd *abfd)\n {\n-  char *plugin_dir;\n-  char *p;\n-  DIR *d;\n-  struct dirent *ent;\n+  /* The intent was to search ${libdir}/bfd-plugins for plugins, but\n+     unfortunately the original implementation wasn't precisely that\n+     when configuring binutils using --libdir.  Search in the proper\n+     path first, then the old one for backwards compatibility.  */\n+  static const char *path[]\n+    = { LIBDIR \"/bfd-plugins\", BINDIR \"/../lib/bfd-plugins\" };\n+  struct stat last_st;\n   int found = 0;\n+  unsigned int i;\n \n   if (!has_plugin)\n     return found;\n@@ -382,38 +386,58 @@ load_plugin (bfd *abfd)\n   if (plugin_program_name == NULL)\n     return found;\n \n-  plugin_dir = concat (BINDIR, \"/../lib/bfd-plugins\", NULL);\n-  p = make_relative_prefix (plugin_program_name,\n-\t\t\t    BINDIR,\n-\t\t\t    plugin_dir);\n-  free (plugin_dir);\n-  plugin_dir = NULL;\n-\n-  d = opendir (p);\n-  if (!d)\n-    goto out;\n-\n-  while ((ent = readdir (d)))\n+  /* Try not to search the same dir twice, by looking at st_dev and\n+     st_ino for the dir.  If we are on a file system that always sets\n+     st_ino to zero or the actual st_ino is zero we might waste some\n+     time, but that doesn't matter too much.  */\n+  last_st.st_dev = 0;\n+  last_st.st_ino = 0;\n+  for (i = 0; i < sizeof (path) / sizeof (path[0]); i++)\n     {\n-      char *full_name;\n-      struct stat s;\n-      int valid_plugin;\n-\n-      full_name = concat (p, \"/\", ent->d_name, NULL);\n-      if (stat (full_name, &s) == 0 && S_ISREG (s.st_mode))\n-\tfound = try_load_plugin (full_name, abfd, &valid_plugin);\n-      if (has_plugin <= 0)\n-\thas_plugin = valid_plugin;\n-      free (full_name);\n+      char *plugin_dir = make_relative_prefix (plugin_program_name,\n+\t\t\t\t\t       BINDIR,\n+\t\t\t\t\t       path[i]);\n+      if (plugin_dir)\n+\t{\n+\t  struct stat st;\n+\t  DIR *d;\n+\n+\t  if (stat (plugin_dir, &st) == 0\n+\t      && S_ISDIR (st.st_mode)\n+\t      && !(last_st.st_dev == st.st_dev\n+\t\t   && last_st.st_ino == st.st_ino\n+\t\t   && st.st_ino != 0)\n+\t      && (d = opendir (plugin_dir)) != NULL)\n+\t    {\n+\t      struct dirent *ent;\n+\n+\t      last_st.st_dev = st.st_dev;\n+\t      last_st.st_ino = st.st_ino;\n+\t      while ((ent = readdir (d)) != NULL)\n+\t\t{\n+\t\t  char *full_name;\n+\n+\t\t  full_name = concat (plugin_dir, \"/\", ent->d_name, NULL);\n+\t\t  if (stat (full_name, &st) == 0 && S_ISREG (st.st_mode))\n+\t\t    {\n+\t\t      int valid_plugin;\n+\n+\t\t      found = try_load_plugin (full_name, abfd, &valid_plugin);\n+\t\t      if (has_plugin <= 0)\n+\t\t\thas_plugin = valid_plugin;\n+\t\t    }\n+\t\t  free (full_name);\n+\t\t  if (found)\n+\t\t    break;\n+\t\t}\n+\t      closedir (d);\n+\t    }\n+\t  free (plugin_dir);\n+\t}\n       if (found)\n \tbreak;\n     }\n \n- out:\n-  free (p);\n-  if (d)\n-    closedir (d);\n-\n   return found;\n }\n "
    },
    {
      "sha": "24f0ae90cbe94ba0d138f264c5b21706132055bf",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -1,3 +1,8 @@\n+2019-09-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24262\n+\t* ld.texi (-plugin): Revert 2019-03-15 change.\n+\n 2019-09-25  Alan Modra  <amodra@gmail.com>\n \n \t* ld.texi (SORT_BY_ALIGNMENT): Reword slightly."
    },
    {
      "sha": "fcbc335c95e04141570a781285f3f50f6c26dde8",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=41f37a6fb71f2a3de388108f5cdfca9cbe6e9d51",
      "patch": "@@ -855,7 +855,7 @@ Note that the location of the compiler originated plugins is different\n from the place where the @command{ar}, @command{nm} and\n @command{ranlib} programs search for their plugins.  In order for\n those commands to make use of a compiler based plugin it must first be\n-copied into the @file{$@{bindir@}/../lib/bfd-plugins} directory.  All gcc\n+copied into the @file{$@{libdir@}/bfd-plugins} directory.  All gcc\n based linker plugins are backward compatible, so it is sufficient to\n just copy in the newest one.\n "
    }
  ]
}