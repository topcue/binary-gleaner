{
  "sha": "e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTZhNmM3Njc2YTdkZjQ5Y2ZiYmZmZGEyNmVhZGQyMDMyZGJjMmJiZQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-31T14:40:27Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-31T14:57:04Z"
    },
    "message": "ld: Add -fno-lto to linker tests\n\nLTO can be used to build binutils with\n\n$ CC=\"gcc -flto -ffat-lto-objects -Wl,--as-needed\" CXX=\"g++ -flto -ffat-lto-objects -Wl,--as-needed\" .../configure\n\nBut not all linker tests are compatible with LTO.  Pass -fno-lto to CC\nto disable LTO on linker tests by default.  -flto is passed explicitly\nto CC in linker LTO tests.\n\n\t* testsuite/ld-elf/indirect.exp: Append -fno-lto to CC.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp (no_lto): New.\n\tAdd $no_lto to build pr15146c.so.\n\t* testsuite/lib/ld-lib.exp (at_least_gcc_version): Filter out\n\t-Wl,xxx options.\n\t(check_gcc_plugin_enabled): Likewise.\n\t(run_ld_link_exec_tests): Prepend -fno-lto to $cflags.\n\t(run_cc_link_tests): Likewise.",
    "tree": {
      "sha": "7399b145a808662b9c4b49959ba9c14a381f0c0c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7399b145a808662b9c4b49959ba9c14a381f0c0c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a896df97b952d4f3feed8068eaa70147d12e0e28",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a896df97b952d4f3feed8068eaa70147d12e0e28",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a896df97b952d4f3feed8068eaa70147d12e0e28"
    }
  ],
  "stats": {
    "total": 146,
    "additions": 100,
    "deletions": 46
  },
  "files": [
    {
      "sha": "f5a42f1ad0e030ad87f8a855503acddad3d4198d",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/ld-elf/indirect.exp: Append -fno-lto to CC.\n+\t* testsuite/ld-elfvers/vers.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n+\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n+\t* testsuite/ld-plugin/lto.exp (no_lto): New.\n+\tAdd $no_lto to build pr15146c.so.\n+\t* testsuite/lib/ld-lib.exp (at_least_gcc_version): Filter out\n+\t-Wl,xxx options.\n+\t(check_gcc_plugin_enabled): Likewise.\n+\t(run_ld_link_exec_tests): Prepend -fno-lto to $cflags.\n+\t(run_cc_link_tests): Likewise.\n+\n 2020-07-31  Shahab Vahedi  <shahab@synopsys.com>\n \n \t* scripttempl/elfarc.sc (.init_array): Keep \".init_array.*\"."
    },
    {
      "sha": "8acae4d3c9dc3f9becf5d60ade34d21a11ffa950",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 19,
      "deletions": 13,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -58,19 +58,25 @@ proc check_link_message { cmd string testname } {\n     }\n }\n \n-if { ![ld_compile $CC $srcdir/$subdir/indirect1a.c tmpdir/indirect1a.o]\n-     || ![ld_compile $CC $srcdir/$subdir/indirect1b.c tmpdir/indirect1b.o]\n-     || ![ld_compile \"$CC -fPIC\" $srcdir/$subdir/indirect2.c tmpdir/indirect2.o]\n-     || ![ld_compile $CC $srcdir/$subdir/indirect3a.c tmpdir/indirect3a.o]\n-     || ![ld_compile $CC $srcdir/$subdir/indirect3b.c tmpdir/indirect3b.o]\n-     || ![ld_compile $CC $srcdir/$subdir/indirect4a.c tmpdir/indirect4a.o]\n-     || ![ld_compile $CC $srcdir/$subdir/indirect4b.c tmpdir/indirect4b.o]\n-     || ![ld_compile \"$CC -O2 -fPIC -I../bfd\" $srcdir/$subdir/pr18720a.c tmpdir/pr18720a.o]\n-     || ![ld_compile $CC $srcdir/$subdir/pr18720b.c tmpdir/pr18720b.o]\n-     || ![ld_compile \"$CC -fPIC\" $srcdir/$subdir/pr19553d.c tmpdir/pr19553d.o]\n-     || ![ld_compile \"$CC -fPIC\" $srcdir/$subdir/pr19553c.c tmpdir/pr19553c.o]\n-     || ![ld_compile \"$CC -fPIC\" $srcdir/$subdir/pr19553b.c tmpdir/pr19553b.o]\n-     || ![ld_compile $CC $srcdir/$subdir/pr19553a.c tmpdir/pr19553a.o] } {\n+# Disable LTO for these tests.\n+set cc_cmd \"$CC\"\n+if {[check_lto_available]} {\n+   append cc_cmd \" -fno-lto\"\n+}\n+\n+if { ![ld_compile $cc_cmd $srcdir/$subdir/indirect1a.c tmpdir/indirect1a.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/indirect1b.c tmpdir/indirect1b.o]\n+     || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/indirect2.c tmpdir/indirect2.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/indirect3a.c tmpdir/indirect3a.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/indirect3b.c tmpdir/indirect3b.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/indirect4a.c tmpdir/indirect4a.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/indirect4b.c tmpdir/indirect4b.o]\n+     || ![ld_compile \"$cc_cmd -O2 -fPIC -I../bfd\" $srcdir/$subdir/pr18720a.c tmpdir/pr18720a.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/pr18720b.c tmpdir/pr18720b.o]\n+     || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/pr19553d.c tmpdir/pr19553d.o]\n+     || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/pr19553c.c tmpdir/pr19553c.o]\n+     || ![ld_compile \"$cc_cmd -fPIC\" $srcdir/$subdir/pr19553b.c tmpdir/pr19553b.o]\n+     || ![ld_compile $cc_cmd $srcdir/$subdir/pr19553a.c tmpdir/pr19553a.o] } {\n     unresolved \"Indirect symbol tests\"\n     return\n }"
    },
    {
      "sha": "299cdaaae2d6933cd117a203aac24f39213b90c8",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -708,7 +708,14 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n \n     set shared \"--shared --no-undefined-version\"\n     set script --version-script\n-    if ![ld_compile \"$CC -S $CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n+\n+    # Disable LTO for these tests.\n+    set cc_cmd \"$CC -S $CFLAGS\"\n+    if {[check_lto_available]} {\n+\tappend cc_cmd \" -fno-lto\"\n+    }\n+\n+    if ![ld_compile $cc_cmd $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunresolved \"$test\"\n \treturn\n     }"
    },
    {
      "sha": "85da211e8032e8559a19fa3018fee6d0ed53495a",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 22,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -358,6 +358,12 @@ proc build_exec { test execname objs flags dat dynsymexp symexp} {\n     pass $test\n }\n \n+# Disable LTO for these tests.\n+set cc_cmd \"$CC\"\n+if {[check_lto_available]} {\n+   append cc_cmd \" -fno-lto\"\n+}\n+\n # Old version of GCC for MIPS default to enabling -fpic\n # and get confused if it is used on the command line.\n if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n@@ -380,20 +386,20 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n }\n verbose \"Using $picflag to compile PIC code\"\n \n-if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n-    || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/main.c $tmpdir/main.o]\n-    || ![ld_link $CC $tmpdir/libbar.so \"$shared $tmpdir/bar.o\"]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n+if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/main.c $tmpdir/main.o]\n+    || ![ld_link $cc_cmd $tmpdir/libbar.so \"$shared $tmpdir/bar.o\"]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n     unresolved \"ELF weak\"\n-} elseif {![ld_link $CC $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n-\t  || ![ld_link $CC $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n-\t  || ![ld_link $CC $tmpdir/libbar1a.so \"$shared $tmpdir/bar1a.o $tmpdir/libfoo1a.so\"]} then {\n+} elseif {![ld_link $cc_cmd $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n+\t  || ![ld_link $cc_cmd $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n+\t  || ![ld_link $cc_cmd $tmpdir/libbar1a.so \"$shared $tmpdir/bar1a.o $tmpdir/libfoo1a.so\"]} then {\n     fail \"ELF weak\"\n } else {\n     build_lib \"ELF DSO weak func first\" libfoo \"foo.o bar.o\" dso.dsym\n@@ -420,10 +426,10 @@ if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n     build_exec \"ELF weak data last DSO common\" foo \"libfoo1b.so main1.o libbar1a.so\" \"-Wl,--no-as-needed,-rpath,.,-rpath-link,.\" weakdata weakdata.dsym \"\"\n }\n \n-if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n-    || ![ld_compile \"$CC $CFLAGS $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n-    || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n+if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n     unresolved \"ELF weak (size)\"\n } else {\n     build_lib \"ELF DSO small bar (size)\" libsize_bar_s \"size_bar_s.o\" \"\"\n@@ -435,11 +441,11 @@ if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_\n verbose \"size2\"\n run_dump_test $srcdir/$subdir/size2\n \n-if {![ld_compile \"$CC $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n-    || ![ld_link $CC $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n-    || ![ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n-    || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n-    || ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n+if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n+    || ![ld_link $cc_cmd $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n     unresolved \"ELF weak (alias)\"\n } else {\n     build_exec \"ELF weak (alias)\" alias \"aliasmain.o weakref1.o weakref2.o alias.so\" \"-Wl,-rpath=.,--no-as-needed\" alias \"\" \"\""
    },
    {
      "sha": "63ab18d41ac0ea25619084928a23c799f259cd77",
      "filename": "ld/testsuite/ld-ifunc/ifunc.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-ifunc/ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-ifunc/ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/ifunc.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -182,36 +182,42 @@ proc contains_ifunc_reloc { binary_file } {\n \n set fails 0\n \n+# Disable LTO for these tests.\n+set cc_cmd \"$CC\"\n+if {[check_lto_available]} {\n+   append cc_cmd \" -fno-lto\"\n+}\n+\n # Create the object files, libraries and executables.\n-if ![ld_compile \"$CC -c -fPIC\" \"$srcdir/$subdir/prog.c\" \"tmpdir/shared_prog.o\"] {\n+if ![ld_compile \"$cc_cmd -c -fPIC\" \"$srcdir/$subdir/prog.c\" \"tmpdir/shared_prog.o\"] {\n     fail \"Could not create a PIC object file\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -c $NOPIE_CFLAGS\" \"$srcdir/$subdir/prog.c\" \"tmpdir/static_prog.o\"] {\n+if ![ld_compile \"$cc_cmd -c $NOPIE_CFLAGS\" \"$srcdir/$subdir/prog.c\" \"tmpdir/static_prog.o\"] {\n     fail \"Could not create a non-PIC object file\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -c -fPIC -DWITH_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/shared_ifunc.o\"] {\n+if ![ld_compile \"$cc_cmd -c -fPIC -DWITH_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/shared_ifunc.o\"] {\n     fail \"Could not create a PIC object file containing an IFUNC symbol\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -c $NOPIE_CFLAGS -DWITH_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/static_ifunc.o\"] {\n+if ![ld_compile \"$cc_cmd -c $NOPIE_CFLAGS -DWITH_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/static_ifunc.o\"] {\n     fail \"Could not create a non-PIC object file containing an IFUNC symbol\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -c -DWITHOUT_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/static_noifunc.o\"] {\n+if ![ld_compile \"$cc_cmd -c -DWITHOUT_IFUNC\" \"$srcdir/$subdir/lib.c\" \"tmpdir/static_noifunc.o\"] {\n     fail \"Could not create an ordinary non-PIC object file\"\n     set fails [expr $fails + 1]\n }\n if ![ld_assemble $as \"$srcdir/ld-elf/empty.s\" \"tmpdir/empty.o\"] {\n     fail \"Could not create an empty object file\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -c\" \"$srcdir/$subdir/test-1.c\" \"tmpdir/test-1.o\"] {\n+if ![ld_compile \"$cc_cmd -c\" \"$srcdir/$subdir/test-1.c\" \"tmpdir/test-1.o\"] {\n     fail \"Could not create test-1.o\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_compile \"$CC -fPIC -c\" \"$srcdir/$subdir/test-2.c\" \"tmpdir/test-2.o\"] {\n+if ![ld_compile \"$cc_cmd -fPIC -c\" \"$srcdir/$subdir/test-2.c\" \"tmpdir/test-2.o\"] {\n     fail \"Could not create test-2.o\"\n     set fails [expr $fails + 1]\n }"
    },
    {
      "sha": "cb2973f3a39210e133c3f08291c9c7d3a68820f8",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -62,6 +62,7 @@ set lto_no_fat \"\"\n if { [check_lto_fat_available] } {\n   set lto_fat \"-ffat-lto-objects\"\n   set lto_no_fat \"-fno-fat-lto-objects\"\n+  set no_lto \"-fno-lto\"\n }\n \n # Simple LTO tests and generate input files for complex LTO tests.\n@@ -322,7 +323,7 @@ set lto_link_elf_tests [list \\\n    \"-shared\" \"-O2 -fpic\" \\\n    {pr15146b.c} {} \"pr15146b.so\" \"c\"] \\\n   [list \"Build pr15146c.so\" \\\n-   \"-shared -Wl,--no-as-needed tmpdir/pr15146b.so\" \"-O2 -fpic\" \\\n+   \"-shared -Wl,--no-as-needed tmpdir/pr15146b.so\" \"-O2 -fpic $no_lto\" \\\n    {pr15146c.c} {} \"pr15146c.so\" \"c\"] \\\n   [list \"PR ld/15146 (1)\" \\\n    \"-O2 -flto -fuse-linker-plugin -Wl,-rpath-link,. -Wl,--no-copy-dt-needed-entries -Wl,--no-as-needed tmpdir/pr15146a.o tmpdir/pr15146c.so\" \"\" \\"
    },
    {
      "sha": "6628372d26f14b5373166e4e6ac3cfaa69d67d7c",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=e6a6c7676a7df49cfbbffda26eadd2032dbc2bbe",
      "patch": "@@ -37,7 +37,9 @@ proc at_least_gcc_version { major minor } {\n     if { $CC == \"\" } {\n \treturn 0\n     }\n-    set state [remote_exec host $CC --version]\n+    # Filter out -Wl, options.\n+    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC \"\" cc_cmd\n+    set state [remote_exec host $cc_cmd --version]\n     if { [lindex $state 0] != 0 } {\n \treturn 0;\n     }\n@@ -693,6 +695,11 @@ proc run_ld_link_exec_tests { ldtests args } {\n \t    continue\n \t}\n \n+\t# Add -fno-lto.  LTO should be tested explicitly by $cflags.\n+\tif {[check_lto_available]} {\n+\t    set cflags \"-fno-lto $cflags\"\n+\t}\n+\n \tforeach target $args {\n \t    if [match_target $target] {\n \t\tsetup_xfail \"*-*-*\"\n@@ -852,6 +859,11 @@ proc run_cc_link_tests { ldtests } {\n \t    continue\n \t}\n \n+\t# Add -fno-lto.  LTO should be tested explicitly by $cflags.\n+\tif {[check_lto_available]} {\n+\t    set cflags \"-fno-lto $cflags\"\n+\t}\n+\n \t#verbose -log \"testname  is $testname\"\n \t#verbose -log \"ldflags   is $ldflags\"\n \t#verbose -log \"cflags    is $cflags\"\n@@ -1209,7 +1221,9 @@ proc check_gcc_plugin_enabled { } {\n     if { $CC == \"\"} {\n \treturn 0\n     }\n-    set state [remote_exec host $CC -v]\n+    # Filter out -Wl, options.\n+    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC \"\" cc_cmd\n+    set state [remote_exec host $cc_cmd -v]\n     if { [lindex $state 0] != 0 } {\n \treturn 0;\n     }"
    }
  ]
}