{
  "sha": "20149b6b207ac8c2bcde6f272607109f566168a9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjAxNDliNmIyMDdhYzhjMmJjZGU2ZjI3MjYwNzEwOWY1NjYxNjhhOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-12T00:19:28Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-16T17:28:34Z"
    },
    "message": "Remove \"noerror\" parameter from some TUI functions\n\nA few TUI functions take a \"noerror\" parameter.  This is only checked\nin one spot: in tui_set_source_content, if noerror is false, and if an\nerror occurs, then the function will call print_sys_errmsg.\n\nThis seems misguided to me, so this patch removes that code and this\nparameter.\n\ngdb/ChangeLog\n2019-08-16  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (tui_update_source_window)\n\t(tui_update_source_window_as_is): Remove \"noerror\" parameter.\n\t* tui/tui-winsource.c (tui_update_source_window)\n\t(tui_update_source_window_as_is): Remove \"noerror\" parameter.\n\t(tui_update_source_windows_with_addr)\n\t(tui_update_source_windows_with_line)\n\t(tui_source_window_base::rerender)\n\t(tui_source_window_base::refill): Update.\n\t* tui/tui-source.h (tui_set_source_content)\n\t(tui_show_symtab_source): Remove \"noerror\" parameter.\n\t* tui/tui-source.c (tui_set_source_content): Remove \"noerror\"\n\tparameter.\n\t(tui_show_symtab_source): Likewise.\n\t(tui_source_window::maybe_update): Update.\n\t* tui/tui-disasm.c (tui_show_disassem)\n\t(tui_show_disassem_and_update_source)\n\t(tui_disasm_window::do_scroll_vertical)\n\t(tui_disasm_window::maybe_update): Update.",
    "tree": {
      "sha": "75c6bfb31f83b0837102ca8613e9559d4e3cdae1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/75c6bfb31f83b0837102ca8613e9559d4e3cdae1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/20149b6b207ac8c2bcde6f272607109f566168a9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20149b6b207ac8c2bcde6f272607109f566168a9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/20149b6b207ac8c2bcde6f272607109f566168a9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/20149b6b207ac8c2bcde6f272607109f566168a9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2d83e710a14c62cb6a9501c84fc46062f817428d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d83e710a14c62cb6a9501c84fc46062f817428d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2d83e710a14c62cb6a9501c84fc46062f817428d"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 43,
    "deletions": 41
  },
  "files": [
    {
      "sha": "6d6707c89f0048a14d34708912e1e26af8e1b682",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -1,3 +1,24 @@\n+2019-08-16  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (tui_update_source_window)\n+\t(tui_update_source_window_as_is): Remove \"noerror\" parameter.\n+\t* tui/tui-winsource.c (tui_update_source_window)\n+\t(tui_update_source_window_as_is): Remove \"noerror\" parameter.\n+\t(tui_update_source_windows_with_addr)\n+\t(tui_update_source_windows_with_line)\n+\t(tui_source_window_base::rerender)\n+\t(tui_source_window_base::refill): Update.\n+\t* tui/tui-source.h (tui_set_source_content)\n+\t(tui_show_symtab_source): Remove \"noerror\" parameter.\n+\t* tui/tui-source.c (tui_set_source_content): Remove \"noerror\"\n+\tparameter.\n+\t(tui_show_symtab_source): Likewise.\n+\t(tui_source_window::maybe_update): Update.\n+\t* tui/tui-disasm.c (tui_show_disassem)\n+\t(tui_show_disassem_and_update_source)\n+\t(tui_disasm_window::do_scroll_vertical)\n+\t(tui_disasm_window::maybe_update): Update.\n+\n 2019-08-16  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui.c (tui_is_window_visible): Update."
    },
    {
      "sha": "621832ff92a614896975aba163b20c4ba6ae8b75",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -257,7 +257,7 @@ tui_show_disassem (struct gdbarch *gdbarch, CORE_ADDR start_addr)\n \n   val.loa = LOA_ADDRESS;\n   val.u.addr = start_addr;\n-  tui_update_source_window (TUI_DISASM_WIN, gdbarch, s, val, FALSE);\n+  tui_update_source_window (TUI_DISASM_WIN, gdbarch, s, val);\n \n   /* If the focus was in the src win, put it in the asm win, if the\n      source view isn't split.  */\n@@ -285,7 +285,7 @@ tui_show_disassem_and_update_source (struct gdbarch *gdbarch,\n       sal = find_pc_line (start_addr, 0);\n       val.loa = LOA_LINE;\n       val.u.line_no = sal.line;\n-      tui_update_source_window (TUI_SRC_WIN, gdbarch, sal.symtab, val, TRUE);\n+      tui_update_source_window (TUI_SRC_WIN, gdbarch, sal.symtab, val);\n       if (sal.symtab)\n \t{\n \t  set_current_source_symtab_and_line (sal);\n@@ -368,7 +368,7 @@ tui_disasm_window::do_scroll_vertical (int num_to_scroll)\n       val.loa = LOA_ADDRESS;\n       val.u.addr = tui_find_disassembly_address (gdbarch, pc, num_to_scroll);\n       tui_update_source_window_as_is (this, gdbarch,\n-\t\t\t\t      NULL, val, FALSE);\n+\t\t\t\t      NULL, val);\n     }\n }\n \n@@ -420,7 +420,7 @@ tui_disasm_window::maybe_update (struct frame_info *fi, symtab_and_line sal,\n   a.u.addr = low;\n   if (!addr_is_displayed (addr))\n     tui_update_source_window (this, get_frame_arch (fi),\n-\t\t\t      sal.symtab, a, TRUE);\n+\t\t\t      sal.symtab, a);\n   else\n     {\n       a.u.addr = addr;"
    },
    {
      "sha": "db83fb01138534d3b9985cc9ac533df9adc7dd22",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -125,8 +125,7 @@ copy_source_line (const char **ptr, int line_no, int first_col,\n enum tui_status\n tui_set_source_content (tui_source_window_base *win_info,\n \t\t\tstruct symtab *s, \n-\t\t\tint line_no,\n-\t\t\tint noerror)\n+\t\t\tint line_no)\n {\n   enum tui_status ret = TUI_FAILURE;\n \n@@ -143,17 +142,7 @@ tui_set_source_content (tui_source_window_base *win_info,\n       std::string srclines;\n       if (!g_source_cache.get_source_lines (s, line_no, line_no + nlines,\n \t\t\t\t\t    &srclines))\n-\t{\n-\t  if (!noerror)\n-\t    {\n-\t      const char *filename = symtab_to_filename_for_display (s);\n-\t      char *name = (char *) alloca (strlen (filename) + 100);\n-\n-\t      sprintf (name, \"%s:%d\", filename, line_no);\n-\t      print_sys_errmsg (name, errno);\n-\t    }\n-\t  ret = TUI_FAILURE;\n-\t}\n+\tret = TUI_FAILURE;\n       else\n \t{\n \t  int cur_line_no, cur_line;\n@@ -213,11 +202,10 @@ tui_set_source_content (tui_source_window_base *win_info,\n void\n tui_show_symtab_source (tui_source_window_base *win_info,\n \t\t\tstruct gdbarch *gdbarch, struct symtab *s,\n-\t\t\tstruct tui_line_or_address line, \n-\t\t\tint noerror)\n+\t\t\tstruct tui_line_or_address line)\n {\n   win_info->horizontal_offset = 0;\n-  tui_update_source_window_as_is (win_info, gdbarch, s, line, noerror);\n+  tui_update_source_window_as_is (win_info, gdbarch, s, line);\n }\n \n \n@@ -330,7 +318,7 @@ tui_source_window::maybe_update (struct frame_info *fi, symtab_and_line sal,\n   if (!(source_already_displayed\n \t&& line_is_displayed (line_no)))\n     tui_update_source_window (this, get_frame_arch (fi),\n-\t\t\t      sal.symtab, l, TRUE);\n+\t\t\t      sal.symtab, l);\n   else\n     {\n       l.u.line_no = line_no;"
    },
    {
      "sha": "1d7af2aad83064c92220e4b740e33be5432bd5ba",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -74,10 +74,9 @@ struct tui_source_window : public tui_source_window_base\n \n extern enum tui_status tui_set_source_content (tui_source_window_base *,\n \t\t\t\t\t       struct symtab *, \n-\t\t\t\t\t       int, int);\n+\t\t\t\t\t       int);\n extern void tui_show_symtab_source (tui_source_window_base *,\n \t\t\t\t    struct gdbarch *, struct symtab *,\n-\t\t\t\t    struct tui_line_or_address,\n-\t\t\t\t    int);\n+\t\t\t\t    struct tui_line_or_address);\n \n #endif /* TUI_TUI_SOURCE_H */"
    },
    {
      "sha": "94ab8c09f6721c906974537ecc3e63b486cfa130",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -73,11 +73,10 @@ void\n tui_update_source_window (struct tui_source_window_base *win_info,\n \t\t\t  struct gdbarch *gdbarch,\n \t\t\t  struct symtab *s,\n-\t\t\t  struct tui_line_or_address line_or_addr,\n-\t\t\t  int noerror)\n+\t\t\t  struct tui_line_or_address line_or_addr)\n {\n   win_info->horizontal_offset = 0;\n-  tui_update_source_window_as_is (win_info, gdbarch, s, line_or_addr, noerror);\n+  tui_update_source_window_as_is (win_info, gdbarch, s, line_or_addr);\n }\n \n \n@@ -87,14 +86,12 @@ void\n tui_update_source_window_as_is (struct tui_source_window_base *win_info, \n \t\t\t\tstruct gdbarch *gdbarch,\n \t\t\t\tstruct symtab *s,\n-\t\t\t\tstruct tui_line_or_address line_or_addr, \n-\t\t\t\tint noerror)\n+\t\t\t\tstruct tui_line_or_address line_or_addr)\n {\n   enum tui_status ret;\n \n   if (win_info->type == SRC_WIN)\n-    ret = tui_set_source_content (win_info, s, line_or_addr.u.line_no,\n-\t\t\t\t  noerror);\n+    ret = tui_set_source_content (win_info, s, line_or_addr.u.line_no);\n   else\n     ret = tui_set_disassem_content (win_info, gdbarch, line_or_addr.u.addr);\n \n@@ -147,7 +144,7 @@ tui_update_source_windows_with_addr (struct gdbarch *gdbarch, CORE_ADDR addr)\n \t  sal = find_pc_line (addr, 0);\n \t  l.loa = LOA_LINE;\n \t  l.u.line_no = sal.line;\n-\t  tui_show_symtab_source (TUI_SRC_WIN, gdbarch, sal.symtab, l, FALSE);\n+\t  tui_show_symtab_source (TUI_SRC_WIN, gdbarch, sal.symtab, l);\n \t  break;\n \t}\n     }\n@@ -182,7 +179,7 @@ tui_update_source_windows_with_line (struct symtab *s, int line)\n     default:\n       l.loa = LOA_LINE;\n       l.u.line_no = line;\n-      tui_show_symtab_source (TUI_SRC_WIN, gdbarch, s, l, FALSE);\n+      tui_show_symtab_source (TUI_SRC_WIN, gdbarch, s, l);\n       if (tui_current_layout () == SRC_DISASSEM_COMMAND)\n \t{\n \t  find_line_pc (s, line, &pc);\n@@ -330,7 +327,7 @@ tui_source_window_base::rerender ()\n \n       line_or_addr = start_line_or_addr;\n       tui_update_source_window (this, gdbarch,\n-\t\t\t\tcursal.symtab, line_or_addr, TRUE);\n+\t\t\t\tcursal.symtab, line_or_addr);\n     }\n   else if (deprecated_safe_get_selected_frame () != NULL)\n     {\n@@ -351,7 +348,7 @@ tui_source_window_base::rerender ()\n \t  line.loa = LOA_ADDRESS;\n \t  find_line_pc (s, cursal.line, &line.u.addr);\n \t}\n-      tui_update_source_window (this, gdbarch, s, line, TRUE);\n+      tui_update_source_window (this, gdbarch, s, line);\n     }\n   else\n     erase_source_content ();\n@@ -391,8 +388,7 @@ tui_source_window_base::refill ()\n     }\n \n   tui_update_source_window_as_is (this, gdbarch, s,\n-\t\t\t\t  content[0].line_or_addr,\n-\t\t\t\t  FALSE);\n+\t\t\t\t  content[0].line_or_addr);\n }\n \n /* Scroll the source forward or backward horizontally.  */"
    },
    {
      "sha": "dfd4a0002a82707b4039871529528f741bc3af7d",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/20149b6b207ac8c2bcde6f272607109f566168a9/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=20149b6b207ac8c2bcde6f272607109f566168a9",
      "patch": "@@ -245,12 +245,10 @@ extern bool tui_update_breakpoint_info (struct tui_source_window_base *win,\n extern void tui_display_main (void);\n extern void tui_update_source_window (struct tui_source_window_base *, \n \t\t\t\t      struct gdbarch *, struct symtab *,\n-\t\t\t\t      struct tui_line_or_address, \n-\t\t\t\t      int);\n+\t\t\t\t      struct tui_line_or_address);\n extern void tui_update_source_window_as_is (struct tui_source_window_base *,\n \t\t\t\t\t    struct gdbarch *, struct symtab *,\n-\t\t\t\t\t    struct tui_line_or_address, \n-\t\t\t\t\t    int);\n+\t\t\t\t\t    struct tui_line_or_address);\n extern void tui_update_source_windows_with_addr (struct gdbarch *, CORE_ADDR);\n extern void tui_update_source_windows_with_line (struct symtab *, \n \t\t\t\t\t\t int);"
    }
  ]
}