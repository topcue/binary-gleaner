{
  "sha": "d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDVlZjIxYzNlY2YyZDdhOTcyNzJiZjVhNTg4MWY0ZTcxMjg5YTFhZg==",
  "commit": {
    "author": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2020-11-19T18:10:58Z"
    },
    "committer": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2020-11-19T18:10:58Z"
    },
    "message": "gdb/s390: Correct recording of \"store on condition\" insns\n\nThe \"store on condition\" instructions STOC, STOCG, and STOCFH are recorded\nas if their instruction formats resembled that of STG.  This is wrong,\nusually resulting in \"failed to record execution log\" errors when trying\nto record code with any of these instructions.\n\nThis patch fixes the recording of these instructions.\n\ngdb/ChangeLog:\n\n\tPR tdep/26916\n\t* s390-tdep.c (s390_process_record): Fix recording of STOC, STOCG,\n\tand STOCFH.",
    "tree": {
      "sha": "2c15844b5883b0c893bc232375a51268781958ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2c15844b5883b0c893bc232375a51268781958ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af/comments",
  "author": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a4eba6087d4cec81f8b41477b4da56ff87b88e91",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a4eba6087d4cec81f8b41477b4da56ff87b88e91",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a4eba6087d4cec81f8b41477b4da56ff87b88e91"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 20,
    "deletions": 3
  },
  "files": [
    {
      "sha": "45c92748ec945ba7821cc768aab9067da11e5ffd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
      "patch": "@@ -1,3 +1,9 @@\n+2020-11-19  Andreas Arnez  <arnez@linux.ibm.com>\n+\n+\tPR tdep/26916\n+\t* s390-tdep.c (s390_process_record): Fix recording of STOC, STOCG,\n+\tand STOCFH.\n+\n 2020-11-19  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* f-lang.c (fortran_value_subarray): Use plongest/pulongest."
    },
    {
      "sha": "247adcd6e2749901bc6ca4e436f330452df78470",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 14,
      "deletions": 3,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=d5ef21c3ecf2d7a97272bf5a5881f4e71289a1af",
      "patch": "@@ -5370,7 +5370,6 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe325: /* NTSTG - nontransactional store */\n \tcase 0xe326: /* CVDY - convert to decimal */\n \tcase 0xe32f: /* STRVG - store reversed */\n-\tcase 0xebe3: /* STOCG - store on condition */\n \tcase 0xed67: /* STDY - store */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], ibyte[4]);\n \t  if (record_full_arch_list_add_mem (oaddr, 8))\n@@ -5399,8 +5398,6 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \tcase 0xe33e: /* STRV - store reversed */\n \tcase 0xe350: /* STY - store */\n \tcase 0xe3cb: /* STFH - store high */\n-\tcase 0xebe1: /* STOCFH - store high on condition */\n-\tcase 0xebf3: /* STOC - store on condition */\n \tcase 0xed66: /* STEY - store */\n \t  oaddr = s390_record_calc_disp (gdbarch, regcache, inib[3], insn[1], ibyte[4]);\n \t  if (record_full_arch_list_add_mem (oaddr, 4))\n@@ -6113,6 +6110,20 @@ s390_process_record (struct gdbarch *gdbarch, struct regcache *regcache,\n \n \t/* 0xeb9c-0xebbf undefined */\n \t/* 0xebc1-0xebdb undefined */\n+\n+\tcase 0xebe1: /* STOCFH - store high on condition */\n+\tcase 0xebf3: /* STOC - store on condition */\n+\t  oaddr = s390_record_calc_disp (gdbarch, regcache, 0, insn[1], ibyte[4]);\n+\t  if (record_full_arch_list_add_mem (oaddr, 4))\n+\t    return -1;\n+\t  break;\n+\n+\tcase 0xebe3: /* STOCG - store on condition */\n+\t  oaddr = s390_record_calc_disp (gdbarch, regcache, 0, insn[1], ibyte[4]);\n+\t  if (record_full_arch_list_add_mem (oaddr, 8))\n+\t    return -1;\n+\t  break;\n+\n \t/* 0xebe5 undefined */\n \t/* 0xebe9 undefined */\n \t/* 0xebeb-0xebf1 undefined */"
    }
  ]
}