{
  "sha": "90ad9178f19221a836cae3b4b2298ee0a968017a",
  "node_id": "C_kwDOANOeidoAKDkwYWQ5MTc4ZjE5MjIxYTgzNmNhZTNiNGIyMjk4ZWUwYTk2ODAxN2E",
  "commit": {
    "author": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-11-15T20:31:06Z"
    },
    "committer": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-11-18T16:17:31Z"
    },
    "message": "gdb: PowerPC fix gdb.base/break-interp.exp\n\nThis patch fixes eight test failures on PowerPC for the test\ngdb.base/break-interp.exp. The patch adds a funtion and registers it to\nsetup the displaced stepping for ppc-linux platform.  The patch moves the\nstruct ppc_inferior_data to the ppc-tdep.h include file to make it visible\nto the ppc-linux-tdep.c and rs6000-tdep.c files.  Additionally the function\nget_ppc_per_inferior is made external in ppc-tdep.h to make it visible in\nboth files.\n\nTested on Power 10 ppc64le-linux with no regressions.",
    "tree": {
      "sha": "4610ce75897ca7be088511b63fb22ee303f09792",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4610ce75897ca7be088511b63fb22ee303f09792"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90ad9178f19221a836cae3b4b2298ee0a968017a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90ad9178f19221a836cae3b4b2298ee0a968017a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90ad9178f19221a836cae3b4b2298ee0a968017a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90ad9178f19221a836cae3b4b2298ee0a968017a/comments",
  "author": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2888fe8d193bd1e82e1e155b9795308184fe923b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2888fe8d193bd1e82e1e155b9795308184fe923b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2888fe8d193bd1e82e1e155b9795308184fe923b"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 33,
    "deletions": 9
  },
  "files": [
    {
      "sha": "9e8954254974602f7105abc394d5f7a9214e3d59",
      "filename": "gdb/ppc-linux-tdep.c",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/ppc-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/ppc-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-linux-tdep.c?ref=90ad9178f19221a836cae3b4b2298ee0a968017a",
      "patch": "@@ -2014,6 +2014,23 @@ ppc64_linux_gcc_target_options (struct gdbarch *gdbarch)\n   return \"\";\n }\n \n+static displaced_step_prepare_status\n+ppc_linux_displaced_step_prepare  (gdbarch *arch, thread_info *thread,\n+\t\t\t\t   CORE_ADDR &displaced_pc)\n+{\n+  ppc_inferior_data *per_inferior = get_ppc_per_inferior (thread->inf);\n+  if (!per_inferior->disp_step_buf.has_value ())\n+    {\n+      /* Figure out where the displaced step buffer is.  */\n+      CORE_ADDR disp_step_buf_addr\n+\t= linux_displaced_step_location (thread->inf->gdbarch);\n+\n+      per_inferior->disp_step_buf.emplace (disp_step_buf_addr);\n+    }\n+\n+  return per_inferior->disp_step_buf->prepare (thread, displaced_pc);\n+}\n+\n static void\n ppc_linux_init_abi (struct gdbarch_info info,\n \t\t    struct gdbarch *gdbarch)\n@@ -2190,6 +2207,11 @@ ppc_linux_init_abi (struct gdbarch_info info,\n \n   ppc_init_linux_record_tdep (&ppc_linux_record_tdep, 4);\n   ppc_init_linux_record_tdep (&ppc64_linux_record_tdep, 8);\n+\n+  /* Setup displaced stepping.  */\n+  set_gdbarch_displaced_step_prepare (gdbarch,\n+\t\t\t\t      ppc_linux_displaced_step_prepare);\n+\n }\n \n void _initialize_ppc_linux_tdep ();"
    },
    {
      "sha": "cfd0aacc34ad64f878dbcdb3ab794d8298fe636a",
      "filename": "gdb/ppc-tdep.h",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/ppc-tdep.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/ppc-tdep.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-tdep.h?ref=90ad9178f19221a836cae3b4b2298ee0a968017a",
      "patch": "@@ -438,4 +438,14 @@ extern int ppc_process_record (struct gdbarch *gdbarch,\n /* Estimate for the maximum number of instructions in a function epilogue.  */\n #define PPC_MAX_EPILOGUE_INSTRUCTIONS  52\n \n+struct ppc_inferior_data\n+{\n+  /* This is an optional in case we add more fields to ppc_inferior_data, we\n+     don't want it instantiated as soon as we get the ppc_inferior_data for an\n+     inferior.  */\n+  gdb::optional<displaced_step_buffers> disp_step_buf;\n+};\n+\n+extern ppc_inferior_data * get_ppc_per_inferior (inferior *inf);\n+\n #endif /* ppc-tdep.h */"
    },
    {
      "sha": "87a494e0bb8cf481bc27ae1cfe0ae5646261df37",
      "filename": "gdb/rs6000-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 9,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/rs6000-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90ad9178f19221a836cae3b4b2298ee0a968017a/gdb/rs6000-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rs6000-tdep.c?ref=90ad9178f19221a836cae3b4b2298ee0a968017a",
      "patch": "@@ -155,19 +155,11 @@ static const char *powerpc_vector_abi_string = \"auto\";\n \n /* PowerPC-related per-inferior data.  */\n \n-struct ppc_inferior_data\n-{\n-  /* This is an optional in case we add more fields to ppc_inferior_data, we\n-     don't want it instantiated as soon as we get the ppc_inferior_data for an\n-     inferior.  */\n-  gdb::optional<displaced_step_buffers> disp_step_buf;\n-};\n-\n static inferior_key<ppc_inferior_data> ppc_inferior_data_key;\n \n /* Get the per-inferior PowerPC data for INF.  */\n \n-static ppc_inferior_data *\n+ppc_inferior_data *\n get_ppc_per_inferior (inferior *inf)\n {\n   ppc_inferior_data *per_inf = ppc_inferior_data_key.get (inf);"
    }
  ]
}