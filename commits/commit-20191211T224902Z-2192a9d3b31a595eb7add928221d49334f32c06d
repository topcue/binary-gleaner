{
  "sha": "2192a9d3b31a595eb7add928221d49334f32c06d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjE5MmE5ZDNiMzFhNTk1ZWI3YWRkOTI4MjIxZDQ5MzM0ZjMyYzA2ZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-09T22:35:41Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-11T22:49:02Z"
    },
    "message": "First use of tui_layout\n\nThis patch introduces the first use of tui_layout, by changing\nshow_layout to clone and use the appropriate tui_layout.\n\nThis resulted in one minor layout change, and also in the unintended\n-- but good -- side effect that the title of each boxed window is now\nvisible.\n\ngdb/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.h (tui_apply_current_layout): Declare.\n\t* tui/tui-layout.c (standard_layouts, applied_layout): New\n\tglobals.\n\t(tui_apply_current_layout): New function.\n\t(show_layout): Set applied_layout.  Call\n\ttui_apply_current_layout.\n\t(show_source_command, show_disasm_command)\n\t(show_source_disasm_command, show_data)\n\t(show_source_or_disasm_and_command): Remove.\n\t(initialize_layouts): New function.\n\t(_initialize_tui_layout): Call initialize_layouts.\n\ngdb/testsuite/ChangeLog\n2019-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.tui/regs.exp: Update.\n\t* gdb.tui/empty.exp (layouts): Update.\n\t* gdb.tui/basic.exp: Update.\n\t* lib/tuiterm.exp (_check_box): Don't check bottom border.\n\nChange-Id: If1ee06ee58f4803e8c213f4ab0f5bb59f4650ec2",
    "tree": {
      "sha": "e021f263f4a25a20c885a674e6f03a92306dba0b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e021f263f4a25a20c885a674e6f03a92306dba0b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2192a9d3b31a595eb7add928221d49334f32c06d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2192a9d3b31a595eb7add928221d49334f32c06d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2192a9d3b31a595eb7add928221d49334f32c06d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2192a9d3b31a595eb7add928221d49334f32c06d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "389e7ddbc2b08bd5cac8c8f44a03e93609fd43d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/389e7ddbc2b08bd5cac8c8f44a03e93609fd43d1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/389e7ddbc2b08bd5cac8c8f44a03e93609fd43d1"
    }
  ],
  "stats": {
    "total": 266,
    "additions": 84,
    "deletions": 182
  },
  "files": [
    {
      "sha": "4c98df34d83a5da2293b4ba5aca5f5c5ad591fca",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -1,3 +1,17 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.h (tui_apply_current_layout): Declare.\n+\t* tui/tui-layout.c (standard_layouts, applied_layout): New\n+\tglobals.\n+\t(tui_apply_current_layout): New function.\n+\t(show_layout): Set applied_layout.  Call\n+\ttui_apply_current_layout.\n+\t(show_source_command, show_disasm_command)\n+\t(show_source_disasm_command, show_data)\n+\t(show_source_or_disasm_and_command): Remove.\n+\t(initialize_layouts): New function.\n+\t(_initialize_tui_layout): Call initialize_layouts.\n+\n 2019-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.h (class tui_layout_base)"
    },
    {
      "sha": "9b7a81ec98657b2679464fc73470d85c70cc2424",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.tui/regs.exp: Update.\n+\t* gdb.tui/empty.exp (layouts): Update.\n+\t* gdb.tui/basic.exp: Update.\n+\t* lib/tuiterm.exp (_check_box): Don't check bottom border.\n+\n 2019-12-11  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/options.exp: Add -raw-values in the print completion list."
    },
    {
      "sha": "f9d57d1cf6d6665a9464d8e99afd961f6d7b4a6e",
      "filename": "gdb/testsuite/gdb.tui/basic.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/basic.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/basic.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/basic.exp?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -45,5 +45,5 @@ Term::check_box \"asm box\" 0 0 80 15\n Term::command \"layout split\"\n Term::check_contents \"split layout contents\" \"21 *return 0.*$hex <main>\"\n \n-Term::check_box \"source box in split layout\" 0 0 80 8\n-Term::check_box \"asm box in split layout\" 0 7 80 8\n+Term::check_box \"source box in split layout\" 0 0 80 7\n+Term::check_box \"asm box in split layout\" 0 6 80 9"
    },
    {
      "sha": "861f56437ed9ef5382027bdb90371edfc7f3cd04",
      "filename": "gdb/testsuite/gdb.tui/empty.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/empty.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/empty.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/empty.exp?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -34,7 +34,7 @@ if {![Term::enter_tui]} {\n set layouts {\n     {src src {{0 0 80 15}} {{0 0 90 23}}\n \t{{\"no source\" \"No Source Available\"}}}\n-    {regs src-regs {{0 0 80 8} {0 7 80 8}} {{0 0 90 13} {0 12 90 13}}\n+    {regs src-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n \t{\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n@@ -43,17 +43,17 @@ set layouts {\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t}}\n-    {regs asm-regs {{0 0 80 8} {0 7 80 8}} {{0 0 90 13} {0 12 90 13}}\n+    {regs asm-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n \t}}\n-    {split split {{0 0 80 8} {0 7 80 8}} {{0 0 90 13} {0 12 90 13}}\n+    {split split {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n \t{\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no asm\" \"No Assembly Available\"}\n \t}}\n-    {regs split-regs {{0 0 80 8} {0 7 80 8}} {{0 0 90 13} {0 12 90 13}}\n+    {regs split-regs {{0 0 80 7} {0 6 80 9}} {{0 0 90 12} {0 11 90 14}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}"
    },
    {
      "sha": "dcecd03af9affa88c848f87c1cbdb64e780376b1",
      "filename": "gdb/testsuite/gdb.tui/regs.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/regs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/gdb.tui/regs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/regs.exp?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -37,8 +37,8 @@ if {![Term::enter_tui]} {\n Term::check_contents \"source at startup\" \">|21 *return 0\"\n \n Term::command \"layout regs\"\n-Term::check_box \"register box\" 0 0 80 8\n-Term::check_box \"source box in regs layout\" 0 7 80 8\n+Term::check_box \"register box\" 0 0 80 7\n+Term::check_box \"source box in regs layout\" 0 6 80 9\n \n set text [Term::get_line 1]\n # Just check for any register window content at all."
    },
    {
      "sha": "81247d5d9a45d7072f105f431a9a3608a3cf9325",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -555,13 +555,9 @@ namespace eval Term {\n \t    return \"lr corner\"\n \t}\n \n-\tfor {set i [expr {$x + 1}]} {$i < $x2 - 1} {incr i} {\n-\t    # Note we do not check the top border of the box, because\n-\t    # it will contain a title.\n-\t    if {[get_char $i $y2] != \"-\"} {\n-\t\treturn \"bottom border $i\"\n-\t    }\n-\t}\n+\t# Note we do not check the horizonal borders of the box.  The\n+\t# top will contain a title, and the bottom may as well, if it\n+\t# is overlapped by some other border.\n \tfor {set i [expr {$y + 1}]} {$i < $y2 - 1} {incr i} {\n \t    if {[get_char $x $i] != \"|\"} {\n \t\treturn \"left side $i\""
    },
    {
      "sha": "1884c2add7bc3eed75f8535d86dcf792ca099c0d",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 49,
      "deletions": 167,
      "changes": 216,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -41,17 +41,18 @@\n #include \"gdb_curses.h\"\n \n static void show_layout (enum tui_layout_type);\n-static void show_source_or_disasm_and_command (enum tui_layout_type);\n-static void show_source_command (void);\n-static void show_disasm_command (void);\n-static void show_source_disasm_command (void);\n-static void show_data (enum tui_layout_type);\n static enum tui_layout_type next_layout (void);\n static enum tui_layout_type prev_layout (void);\n static void tui_layout_command (const char *, int);\n static void extract_display_start_addr (struct gdbarch **, CORE_ADDR *);\n \n \n+/* The pre-defined layouts.  */\n+static tui_layout_split *standard_layouts[UNDEFINED_LAYOUT];\n+\n+/* The layout that is currently applied.  */\n+static std::unique_ptr<tui_layout_base> applied_layout;\n+\n static enum tui_layout_type current_layout = UNDEFINED_LAYOUT;\n \n /* Accessor for the current layout.  */\n@@ -61,6 +62,13 @@ tui_current_layout (void)\n   return current_layout;\n }\n \n+/* See tui-layout.h.  */\n+\n+void\n+tui_apply_current_layout ()\n+{\n+  applied_layout->apply (0, 0, tui_term_width (), tui_term_height ());\n+}\n \n /* Show the screen layout defined.  */\n static void\n@@ -71,26 +79,8 @@ show_layout (enum tui_layout_type layout)\n   if (layout != cur_layout)\n     {\n       tui_make_all_invisible ();\n-      switch (layout)\n-\t{\n-\tcase SRC_DATA_COMMAND:\n-\tcase DISASSEM_DATA_COMMAND:\n-\t  show_data (layout);\n-\t  break;\n-\t  /* Now show the new layout.  */\n-\tcase SRC_COMMAND:\n-\t  show_source_command ();\n-\t  break;\n-\tcase DISASSEM_COMMAND:\n-\t  show_disasm_command ();\n-\t  break;\n-\tcase SRC_DISASSEM_COMMAND:\n-\t  show_source_disasm_command ();\n-\t  break;\n-\tdefault:\n-\t  break;\n-\t}\n-\n+      applied_layout = standard_layouts[layout]->clone ();\n+      tui_apply_current_layout ();\n       current_layout = layout;\n       tui_delete_invisible_windows ();\n     }\n@@ -364,105 +354,6 @@ prev_layout (void)\n   return (enum tui_layout_type) new_layout;\n }\n \n-/* Show the Source/Command layout.  */\n-static void\n-show_source_command (void)\n-{\n-  show_source_or_disasm_and_command (SRC_COMMAND);\n-}\n-\n-\n-/* Show the Dissassem/Command layout.  */\n-static void\n-show_disasm_command (void)\n-{\n-  show_source_or_disasm_and_command (DISASSEM_COMMAND);\n-}\n-\n-\n-/* Show the Source/Disassem/Command layout.  */\n-static void\n-show_source_disasm_command (void)\n-{\n-  int cmd_height, src_height, asm_height;\n-\n-  if (TUI_CMD_WIN != NULL)\n-    cmd_height = TUI_CMD_WIN->height;\n-  else\n-    cmd_height = tui_term_height () / 3;\n-\n-  src_height = (tui_term_height () - cmd_height) / 2;\n-  asm_height = tui_term_height () - (src_height + cmd_height);\n-\n-  if (TUI_SRC_WIN == NULL)\n-    tui_win_list[SRC_WIN] = new tui_source_window ();\n-  TUI_SRC_WIN->resize (src_height,\n-\t\t       tui_term_width (),\n-\t\t       0,\n-\t\t       0);\n-\n-  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-  gdb_assert (locator != nullptr);\n-\n-  if (TUI_DISASM_WIN == NULL)\n-    tui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n-  TUI_DISASM_WIN->resize (asm_height,\n-\t\t\t  tui_term_width (),\n-\t\t\t  0,\n-\t\t\t  src_height - 1);\n-  locator->resize (1, tui_term_width (),\n-\t\t   0, (src_height + asm_height) - 1);\n-\n-  if (TUI_CMD_WIN == NULL)\n-    tui_win_list[CMD_WIN] = new tui_cmd_window ();\n-  TUI_CMD_WIN->resize (cmd_height,\n-\t\t       tui_term_width (),\n-\t\t       0,\n-\t\t       tui_term_height () - cmd_height);\n-}\n-\n-\n-/* Show the Source/Data/Command or the Dissassembly/Data/Command\n-   layout.  */\n-static void\n-show_data (enum tui_layout_type new_layout)\n-{\n-  int total_height = (tui_term_height () - TUI_CMD_WIN->height);\n-  int src_height, data_height;\n-  enum tui_win_type win_type;\n-\n-  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-  gdb_assert (locator != nullptr);\n-\n-  data_height = total_height / 2;\n-  src_height = total_height - data_height;\n-  if (tui_win_list[DATA_WIN] == nullptr)\n-    tui_win_list[DATA_WIN] = new tui_data_window ();\n-  tui_win_list[DATA_WIN]->resize (data_height, tui_term_width (), 0, 0);\n-\n-  if (new_layout == SRC_DATA_COMMAND)\n-    win_type = SRC_WIN;\n-  else\n-    win_type = DISASSEM_WIN;\n-\n-  if (tui_win_list[win_type] == NULL)\n-    {\n-      if (win_type == SRC_WIN)\n-\ttui_win_list[win_type] = new tui_source_window ();\n-      else\n-\ttui_win_list[win_type] = new tui_disasm_window ();\n-    }\n-\n-  tui_win_list[win_type]->resize (src_height,\n-\t\t\t\t  tui_term_width (),\n-\t\t\t\t  0,\n-\t\t\t\t  data_height - 1);\n-  locator->resize (1, tui_term_width (),\n-\t\t   0, total_height - 1);\n-  TUI_CMD_WIN->resize (TUI_CMD_WIN->height, tui_term_width (),\n-\t\t       0, total_height);\n-}\n-\n void\n tui_gen_win_info::resize (int height_, int width_,\n \t\t\t  int origin_x_, int origin_y_)\n@@ -498,49 +389,6 @@ tui_gen_win_info::resize (int height_, int width_,\n   rerender ();\n }\n \n-/* Show the Source/Command or the Disassem layout.  */\n-static void\n-show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n-{\n-  struct tui_source_window_base *win_info;\n-  int src_height, cmd_height;\n-  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-  gdb_assert (locator != nullptr);\n-\n-  if (TUI_CMD_WIN != NULL)\n-    cmd_height = TUI_CMD_WIN->height;\n-  else\n-    cmd_height = tui_term_height () / 3;\n-  src_height = tui_term_height () - cmd_height;\n-\n-  if (layout_type == SRC_COMMAND)\n-    {\n-      if (tui_win_list[SRC_WIN] == nullptr)\n-\ttui_win_list[SRC_WIN] = new tui_source_window ();\n-      win_info = TUI_SRC_WIN;\n-    }\n-  else\n-    {\n-      if (tui_win_list[DISASSEM_WIN] == nullptr)\n-\ttui_win_list[DISASSEM_WIN] = new tui_disasm_window ();\n-      win_info = TUI_DISASM_WIN;\n-    }\n-\n-  locator->resize (1, tui_term_width (),\n-\t\t   0, src_height - 1);\n-  win_info->resize (src_height - 1,\n-\t\t    tui_term_width (),\n-\t\t    0,\n-\t\t    0);\n-\n-  if (TUI_CMD_WIN == NULL)\n-    tui_win_list[CMD_WIN] = new tui_cmd_window ();\n-  TUI_CMD_WIN->resize (cmd_height,\n-\t\t       tui_term_width (),\n-\t\t       0,\n-\t\t       src_height);\n-}\n-\n \f\n \n /* Helper function that returns a TUI window, given its name.  */\n@@ -901,6 +749,38 @@ tui_layout_split::apply (int x_, int y_, int width_, int height_)\n   m_applied = true;\n }\n \n+static void\n+initialize_layouts ()\n+{\n+  standard_layouts[SRC_COMMAND] = new tui_layout_split ();\n+  standard_layouts[SRC_COMMAND]->add_window (\"src\", 2);\n+  standard_layouts[SRC_COMMAND]->add_window (\"locator\", 0);\n+  standard_layouts[SRC_COMMAND]->add_window (\"cmd\", 1);\n+\n+  standard_layouts[DISASSEM_COMMAND] = new tui_layout_split ();\n+  standard_layouts[DISASSEM_COMMAND]->add_window (\"asm\", 2);\n+  standard_layouts[DISASSEM_COMMAND]->add_window (\"locator\", 0);\n+  standard_layouts[DISASSEM_COMMAND]->add_window (\"cmd\", 1);\n+\n+  standard_layouts[SRC_DATA_COMMAND] = new tui_layout_split ();\n+  standard_layouts[SRC_DATA_COMMAND]->add_window (\"regs\", 1);\n+  standard_layouts[SRC_DATA_COMMAND]->add_window (\"src\", 1);\n+  standard_layouts[SRC_DATA_COMMAND]->add_window (\"locator\", 0);\n+  standard_layouts[SRC_DATA_COMMAND]->add_window (\"cmd\", 1);\n+\n+  standard_layouts[DISASSEM_DATA_COMMAND] = new tui_layout_split ();\n+  standard_layouts[DISASSEM_DATA_COMMAND]->add_window (\"regs\", 1);\n+  standard_layouts[DISASSEM_DATA_COMMAND]->add_window (\"asm\", 1);\n+  standard_layouts[DISASSEM_DATA_COMMAND]->add_window (\"locator\", 0);\n+  standard_layouts[DISASSEM_DATA_COMMAND]->add_window (\"cmd\", 1);\n+\n+  standard_layouts[SRC_DISASSEM_COMMAND] = new tui_layout_split ();\n+  standard_layouts[SRC_DISASSEM_COMMAND]->add_window (\"src\", 1);\n+  standard_layouts[SRC_DISASSEM_COMMAND]->add_window (\"asm\", 1);\n+  standard_layouts[SRC_DISASSEM_COMMAND]->add_window (\"locator\", 0);\n+  standard_layouts[SRC_DISASSEM_COMMAND]->add_window (\"cmd\", 1);\n+}\n+\n \f\n \n /* Function to initialize gdb commands, for tui window layout\n@@ -925,4 +805,6 @@ Layout names are:\\n\\\n            the register window is displayed with \\n\\\n            the window that has current logical focus.\"));\n   set_cmd_completer (cmd, layout_completer);\n+\n+  initialize_layouts ();\n }"
    },
    {
      "sha": "a9346ef504b465bbe4b3168cbc5059863fa2e9ac",
      "filename": "gdb/tui/tui-layout.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/tui/tui-layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2192a9d3b31a595eb7add928221d49334f32c06d/gdb/tui/tui-layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.h?ref=2192a9d3b31a595eb7add928221d49334f32c06d",
      "patch": "@@ -174,4 +174,7 @@ class tui_layout_split : public tui_layout_base\n extern void tui_add_win_to_layout (enum tui_win_type);\n extern void tui_set_layout (enum tui_layout_type);\n \n+/* Apply the current layout.  */\n+extern void tui_apply_current_layout ();\n+\n #endif /* TUI_TUI_LAYOUT_H */"
    }
  ]
}