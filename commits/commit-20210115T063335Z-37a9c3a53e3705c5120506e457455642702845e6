{
  "sha": "37a9c3a53e3705c5120506e457455642702845e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzdhOWMzYTUzZTM3MDVjNTEyMDUwNmU0NTc0NTU2NDI3MDI4NDVlNg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-05T06:26:21Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-15T06:33:35Z"
    },
    "message": "sim: testsuite: allow tests to declare expected exit status\n\nSome tests want to verify they can control the exit status, and\nallowing any non-zero value would allow tests to silently fail:\nif it crashed & exited 1, or forced all non-zero to 1, then we\nwouldn't be able to differentiate with a test exiting with a\nstatus like 47.\n\nExtend the test harness to allow tests to declare their expected\nexit status that would be defined as a \"pass\".  This requires a\nsmall tweak to the sim_run API to return the status directly, but\nthat shouldn't be a big deal as it's only used by sim code.",
    "tree": {
      "sha": "bd55d53db865c08ba94edebf9e9b3a44538f97ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bd55d53db865c08ba94edebf9e9b3a44538f97ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/37a9c3a53e3705c5120506e457455642702845e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a9c3a53e3705c5120506e457455642702845e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/37a9c3a53e3705c5120506e457455642702845e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/37a9c3a53e3705c5120506e457455642702845e6/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3624a6c15ce48e03d43983ec11d586d97ca08728",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3624a6c15ce48e03d43983ec11d586d97ca08728",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3624a6c15ce48e03d43983ec11d586d97ca08728"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 32,
    "deletions": 13
  },
  "files": [
    {
      "sha": "1245ab46086c7ef27d60c9bbb6e118a558803961",
      "filename": "sim/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog?ref=37a9c3a53e3705c5120506e457455642702845e6",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-15  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* lib/sim-defs.exp (sim_run): Delete status and return return_code.\n+\t(run_sim_test): Define status option.  Change sim_run return to\n+\treturn_code.  Define status.  Log return_code.\n+\n 2021-01-11  Mike Frysinger  <vapier@gentoo.org>\n \n \t* common/alu-tst.c: Include stdlib.h."
    },
    {
      "sha": "43a07050f50830d9adc1d737350bbca81ac8f02e",
      "filename": "sim/testsuite/lib/sim-defs.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 11,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/lib/sim-defs.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/lib/sim-defs.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/lib/sim-defs.exp?ref=37a9c3a53e3705c5120506e457455642702845e6",
      "patch": "@@ -62,7 +62,7 @@ proc sim_compile { source dest type options } {\n #\ttimeout=val\t- set the timeout to val for this run\n #\n # The result is a list of two elements.\n-# The first is one of pass/fail/etc.\n+# The first is the program's exit status (0/1/etc...).\n # The second is the program's output.\n #\n # This is different than the sim_load routine provided by\n@@ -156,15 +156,7 @@ proc sim_run { prog sim_opts prog_opts redir options } {\n \tremote_file host delete $prog\n     }\n \n-    # ??? Not sure the test for pass/fail is right.\n-    # We just care that the simulator ran correctly, not whether the simulated\n-    # program return 0 or non-zero from `main'.\n-    set status fail\n-    if { $return_code == 0 } {\n-\tset status pass\n-    }\n-\n-    return [list $status $output]\n+    return [list $return_code $output]\n }\n \n # Run testcase NAME.\n@@ -183,6 +175,7 @@ proc sim_run { prog sim_opts prog_opts redir options } {\n # cc[(mach-list)]: <compiler options>\n # sim[(mach-list)]: <simulator options>\n # progopts: <arguments to the program being simulated>\n+# status: program exit status to treat as \"pass\"\n # output: program output pattern to match with string-match\n # xerror: program is expected to return with a \"failure\" exit code\n # xfail: <PRMS-opt> <target-triplets-where-test-fails>\n@@ -223,6 +216,7 @@ proc run_sim_test { name requested_machs } {\n     set opts(cc) \"\"\n     set opts(progopts) \"\"\n     set opts(sim) \"\"\n+    set opts(status) \"0\"\n     set opts(output) \"\"\n     set opts(mach) \"\"\n     set opts(timeout) \"\"\n@@ -385,15 +379,21 @@ proc run_sim_test { name requested_machs } {\n \t}\n \n \tset result [sim_run ${name}.x \"$opts(sim,$mach) $global_sim_options\" \"$opts(progopts)\" \"\" \"$options\"]\n-\tset status [lindex $result 0]\n+\tset return_code [lindex $result 0]\n \tset output [lindex $result 1]\n \n+\tset status fail\n+\tif { $return_code == $opts(status) } {\n+\t    set status pass\n+\t}\n+\n \tif { \"$status\" == \"pass\" } {\n \t    if { \"$opts(xerror)\" == \"no\" } {\n \t\tif [string match $opts(output) $output] {\n \t\t    pass \"$mach $testname\"\n \t\t    file delete ${name}.o ${name}.x\n \t\t} else {\n+\t\t    verbose -log \"status:  $return_code\" 3\n \t\t    verbose -log \"output:  $output\" 3\n \t\t    verbose -log \"pattern: $opts(output)\" 3\n \t\t    fail \"$mach $testname (execution)\"\n@@ -410,6 +410,7 @@ proc run_sim_test { name requested_machs } {\n \t\t    pass \"$mach $testname\"\n \t\t    file delete ${name}.o ${name}.x\n \t\t} else {\n+\t\t    verbose -log \"status:  $return_code\" 3\n \t\t    verbose -log \"output:  $output\" 3\n \t\t    verbose -log \"pattern: $opts(output)\" 3\n \t\t    fail \"$mach $testname (execution)\""
    },
    {
      "sha": "16c7c27ad4f8e2fc27b7c7b6bf9d6a32f80ff9f9",
      "filename": "sim/testsuite/sim/cris/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/cris/ChangeLog?ref=37a9c3a53e3705c5120506e457455642702845e6",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-15  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* c/c.exp: Change sim_run return to return_code.  Set status to\n+\tpass/fail based on return_code.\n+\t* hw/rv-n-cris/rvc.exp (sim_has_rv_and_cris): Compare return_code\n+\tto 0.\n+\n 2021-01-09  Mike Frysinger  <vapier@gentoo.org>\n \n \t* readlink4.c (main): Change rindex to strrchr."
    },
    {
      "sha": "08ea18812ec5bd655556d0db2877eb5ebefe5d39",
      "filename": "sim/testsuite/sim/cris/c/c.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/c/c.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/c/c.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/cris/c/c.exp?ref=37a9c3a53e3705c5120506e457455642702845e6",
      "patch": "@@ -214,9 +214,14 @@ foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.c]] {\n \n     set result [sim_run $dest \"$opts(sim,$mach)\" \"$opts(progoptions)\" \\\n \t\"\" \"$opts(simenv)\"]\n-    set status [lindex $result 0]\n+    set return_code [lindex $result 0]\n     set output [lindex $result 1]\n \n+    set status fail\n+    if { $return_code == 0 } {\n+\tset status pass\n+    }\n+\n     if { \"$status\" == \"pass\" } {\n \tif { \"$opts(xerror)\" == \"no\" } {\n \t    if [string match $opts(output) $output] {"
    },
    {
      "sha": "0f9ecec32a26e83e54401329d730645bfbe6b2a0",
      "filename": "sim/testsuite/sim/cris/hw/rv-n-cris/rvc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/hw/rv-n-cris/rvc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/37a9c3a53e3705c5120506e457455642702845e6/sim/testsuite/sim/cris/hw/rv-n-cris/rvc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/cris/hw/rv-n-cris/rvc.exp?ref=37a9c3a53e3705c5120506e457455642702845e6",
      "patch": "@@ -67,7 +67,7 @@ proc sim_has_rv_and_cris {} {\n     set return_code [lindex $result 0]\n     set output [lindex $result 1]\n \n-    if { \"$return_code\" == \"pass\" } {\n+    if { $return_code == 0 } {\n \treturn 1\n     }\n "
    }
  ]
}