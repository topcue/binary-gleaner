{
  "sha": "8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGU3OGU5Yjk5NTBhODk5YTNjMTBmNDhlNGYyM2VhNGZkOWJhZmU5Yg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-07T03:52:05Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-07T03:54:23Z"
    },
    "message": "sim: m68hc11: fix up last warnings\n\nChange the printf formats a little to fix the last build warnings in\nhere, and then turn on -Werror by default for the arch port.",
    "tree": {
      "sha": "68f1cd7f423d222ec0e85236fb30d77b5734a895",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/68f1cd7f423d222ec0e85236fb30d77b5734a895"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8852d02874735b231b0a0e36c767423542212f49",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8852d02874735b231b0a0e36c767423542212f49",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8852d02874735b231b0a0e36c767423542212f49"
    }
  ],
  "stats": {
    "total": 218,
    "additions": 113,
    "deletions": 105
  },
  "files": [
    {
      "sha": "1aaa51b29bb7878897e4df14fc231f1acce545e1",
      "filename": "sim/m68hc11/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/ChangeLog?ref=8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-06  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_hw_configure): Change %lx to %x in format strings.\n+\t* configure.ac: Delete SIM_AC_OPTION_WARNINGS call.\n+\t* configure: Regenerate.\n+\n 2021-05-06  Mike Frysinger  <vapier@gentoo.org>\n \n \t* emulos.c: Include errno.h & stdio.h."
    },
    {
      "sha": "8fb4bbd04739d25147d279fb3c55e8be4856b799",
      "filename": "sim/m68hc11/configure",
      "status": "modified",
      "additions": 103,
      "deletions": 100,
      "changes": 203,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure?ref=8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
      "patch": "@@ -784,10 +784,10 @@ with_pkgversion\n with_bugurl\n enable_sim_endian\n enable_sim_alignment\n+enable_sim_hardware\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_sim_hardware\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1442,13 +1442,13 @@ Optional Features:\n   --enable-sim-alignment=align\n                           Specify strict, nonstrict or forced alignment of\n                           memory accesses\n+  --enable-sim-hardware=LIST\n+                          Specify the hardware to be included in the build.\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-sim-hardware=LIST\n-                          Specify the hardware to be included in the build.\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11943,103 +11943,6 @@ fi\n fi\n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS -Werror $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n hardware=\"cfi core pal glue \\\n   m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram\"\n sim_hw_cflags=\"-DWITH_HW=1\"\n@@ -12143,6 +12046,106 @@ fi\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+  if test \"${ERROR_ON_WARNING}\" = yes ; then\n+    WERROR_CFLAGS=\"-Werror\"\n+  fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS -Werror $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "57e13e207bddec682ce89bc27e5f6cfa980438d6",
      "filename": "sim/m68hc11/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/configure.ac?ref=8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
      "patch": "@@ -7,7 +7,6 @@ SIM_AC_COMMON\n dnl Options available in this module\n SIM_AC_OPTION_ENDIAN(BIG)\n SIM_AC_OPTION_ALIGNMENT(NONSTRICT_ALIGNMENT)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_HARDWARE(\\\n   m68hc11 m68hc11sio m68hc11eepr m68hc11tim m68hc11spi nvram)\n "
    },
    {
      "sha": "07e4a8858a74ea399db8dc90f69ddc22f60f99aa",
      "filename": "sim/m68hc11/interp.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b/sim/m68hc11/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m68hc11/interp.c?ref=8e78e9b9950a899a3c10f48e4f23ea4fd9bafe9b",
      "patch": "@@ -172,15 +172,15 @@ sim_hw_configure (SIM_DESC sd)\n \t  /* Allocate core managed memory */\n \n \t  /* the monitor  */\n-\t  sim_do_commandf (sd, \"memory region 0x%lx@%d,0x%lx\",\n+\t  sim_do_commandf (sd, \"memory region 0x%x@%d,0x%x\",\n \t\t\t   /* MONITOR_BASE, MONITOR_SIZE */\n \t\t\t   0x8000, M6811_RAM_LEVEL, 0x8000);\n \t  sim_do_commandf (sd, \"memory region 0x000@%d,0x8000\",\n \t\t\t   M6811_RAM_LEVEL);\n \t  sim_hw_parse (sd, \"/m68hc11/reg 0x1000 0x03F\");\n           if (cpu->bank_start < cpu->bank_end)\n             {\n-              sim_do_commandf (sd, \"memory region 0x%lx@%d,0x100000\",\n+              sim_do_commandf (sd, \"memory region 0x%x@%d,0x100000\",\n                                cpu->bank_virtual, M6811_RAM_LEVEL);\n               sim_hw_parse (sd, \"/m68hc11/use_bank 1\");\n             }\n@@ -234,13 +234,13 @@ sim_hw_configure (SIM_DESC sd)\n       if (hw_tree_find_property (device_tree, \"/m68hc12/reg\") == 0)\n \t{\n \t  /* Allocate core external memory.  */\n-\t  sim_do_commandf (sd, \"memory region 0x%lx@%d,0x%lx\",\n+\t  sim_do_commandf (sd, \"memory region 0x%x@%d,0x%x\",\n \t\t\t   0x8000, M6811_RAM_LEVEL, 0x8000);\n \t  sim_do_commandf (sd, \"memory region 0x000@%d,0x8000\",\n \t\t\t   M6811_RAM_LEVEL);\n           if (cpu->bank_start < cpu->bank_end)\n             {\n-              sim_do_commandf (sd, \"memory region 0x%lx@%d,0x100000\",\n+              sim_do_commandf (sd, \"memory region 0x%x@%d,0x100000\",\n                                cpu->bank_virtual, M6811_RAM_LEVEL);\n               sim_hw_parse (sd, \"/m68hc12/use_bank 1\");\n             }"
    }
  ]
}