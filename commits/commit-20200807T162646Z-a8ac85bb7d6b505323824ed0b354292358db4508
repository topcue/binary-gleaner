{
  "sha": "a8ac85bb7d6b505323824ed0b354292358db4508",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThhYzg1YmI3ZDZiNTA1MzIzODI0ZWQwYjM1NDI5MjM1OGRiNDUwOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:46Z"
    },
    "message": "Handle case where Ada task is current but not listed\n\nCurrently, the ravenscar runtime can mark an Ada task as the current\ntask, before adding it to the list of tasks that can be read by gdb.\nIn this scenario, gdb can sometimes crash in\nravenscar_get_thread_base_cpu with:\n\n../../src/gdb/ravenscar-thread.c:167: internal-error: int ravenscar_get_thread_base_cpu(ptid_t): Assertion `task_info != NULL' failed.\n\nHowever, as ravenscar_get_thread_base_cpu is only called to find the\nbase CPU, we can simply record this when registering the thread, and\nlook this up later.\n\ngdb/ChangeLog\n2020-08-07  Tom Tromey  <tromey@adacore.com>\n\n\t* ravenscar-thread.c (ravenscar_thread_target) <get_base_cpu,\n\tget_base_thread_from_ravenscar_task>: Now methods.\n\t<m_cpu_map>: New member.\n\t(ravenscar_thread_target::get_thread_base_cpu): Rename from\n\travenscar_get_thread_base_cpu.  Check m_cpu_map.\n\t(ravenscar_thread_target::task_is_currently_active): Update.\n\t(ravenscar_thread_target::get_base_thread_from_ravenscar_task):\n\tNow a method.\n\t(ravenscar_thread_target::add_active_thread): Put initial thread\n\tinto the m_cpu_map.",
    "tree": {
      "sha": "93eabf432c7c503f4b3dd996c19add908484e575",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/93eabf432c7c503f4b3dd996c19add908484e575"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8ac85bb7d6b505323824ed0b354292358db4508",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8ac85bb7d6b505323824ed0b354292358db4508",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8ac85bb7d6b505323824ed0b354292358db4508",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8ac85bb7d6b505323824ed0b354292358db4508/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "550ab58d6eee9897c7f125d3a73cfef187f213b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/550ab58d6eee9897c7f125d3a73cfef187f213b8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/550ab58d6eee9897c7f125d3a73cfef187f213b8"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 42,
    "deletions": 11
  },
  "files": [
    {
      "sha": "0f4a1fdc4099153a82ed8b940443a7a4fc476b31",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ac85bb7d6b505323824ed0b354292358db4508/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ac85bb7d6b505323824ed0b354292358db4508/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a8ac85bb7d6b505323824ed0b354292358db4508",
      "patch": "@@ -1,3 +1,16 @@\n+2020-08-07  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ravenscar-thread.c (ravenscar_thread_target) <get_base_cpu,\n+\tget_base_thread_from_ravenscar_task>: Now methods.\n+\t<m_cpu_map>: New member.\n+\t(ravenscar_thread_target::get_thread_base_cpu): Rename from\n+\travenscar_get_thread_base_cpu.  Check m_cpu_map.\n+\t(ravenscar_thread_target::task_is_currently_active): Update.\n+\t(ravenscar_thread_target::get_base_thread_from_ravenscar_task):\n+\tNow a method.\n+\t(ravenscar_thread_target::add_active_thread): Put initial thread\n+\tinto the m_cpu_map.\n+\n 2020-08-07  Tom Tromey  <tromey@adacore.com>\n \n \t* ravenscar-thread.c (ravenscar_thread_target::wait): Return"
    },
    {
      "sha": "ee95a1c4bb8126f7bc567773366493684a51c286",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 29,
      "deletions": 11,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ac85bb7d6b505323824ed0b354292358db4508/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ac85bb7d6b505323824ed0b354292358db4508/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=a8ac85bb7d6b505323824ed0b354292358db4508",
      "patch": "@@ -30,6 +30,7 @@\n #include \"top.h\"\n #include \"regcache.h\"\n #include \"objfiles.h\"\n+#include <unordered_map>\n \n /* This module provides support for \"Ravenscar\" tasks (Ada) when\n    debugging on bare-metal targets.\n@@ -133,6 +134,14 @@ struct ravenscar_thread_target final : public target_ops\n   ptid_t active_task (int cpu);\n   bool task_is_currently_active (ptid_t ptid);\n   bool runtime_initialized ();\n+  int get_thread_base_cpu (ptid_t ptid);\n+  ptid_t get_base_thread_from_ravenscar_task (ptid_t ptid);\n+\n+  /* This maps a TID to the CPU on which it was running.  This is\n+     needed because sometimes the runtime will report an active task\n+     that hasn't yet been put on the list of tasks that is read by\n+     ada-tasks.c.  */\n+  std::unordered_map<long, int> m_cpu_map;\n };\n \n /* Return true iff PTID corresponds to a ravenscar task.  */\n@@ -156,17 +165,24 @@ is_ravenscar_task (ptid_t ptid)\n    This assume that PTID is a valid ptid_t.  Otherwise, a gdb_assert\n    will be triggered.  */\n \n-static int\n-ravenscar_get_thread_base_cpu (ptid_t ptid)\n+int\n+ravenscar_thread_target::get_thread_base_cpu (ptid_t ptid)\n {\n   int base_cpu;\n \n   if (is_ravenscar_task (ptid))\n     {\n       struct ada_task_info *task_info = ada_get_task_info_from_ptid (ptid);\n \n-      gdb_assert (task_info != NULL);\n-      base_cpu = task_info->base_cpu;\n+      if (task_info != NULL)\n+\tbase_cpu = task_info->base_cpu;\n+      else\n+\t{\n+\t  auto iter = m_cpu_map.find (ptid.tid ());\n+\n+\t  gdb_assert (iter != m_cpu_map.end ());\n+\t  base_cpu = iter->second;\n+\t}\n     }\n   else\n     {\n@@ -190,8 +206,7 @@ ravenscar_get_thread_base_cpu (ptid_t ptid)\n bool\n ravenscar_thread_target::task_is_currently_active (ptid_t ptid)\n {\n-  ptid_t active_task_ptid\n-    = active_task (ravenscar_get_thread_base_cpu (ptid));\n+  ptid_t active_task_ptid = active_task (get_thread_base_cpu (ptid));\n \n   return ptid == active_task_ptid;\n }\n@@ -202,15 +217,15 @@ ravenscar_thread_target::task_is_currently_active (ptid_t ptid)\n    This is the thread that corresponds to the CPU on which the task\n    is running.  */\n \n-static ptid_t\n-get_base_thread_from_ravenscar_task (ptid_t ptid)\n+ptid_t\n+ravenscar_thread_target::get_base_thread_from_ravenscar_task (ptid_t ptid)\n {\n   int base_cpu;\n \n   if (!is_ravenscar_task (ptid))\n     return ptid;\n \n-  base_cpu = ravenscar_get_thread_base_cpu (ptid);\n+  base_cpu = get_thread_base_cpu (ptid);\n   return ptid_t (ptid.pid (), base_cpu, 0);\n }\n \n@@ -227,7 +242,7 @@ ravenscar_thread_target::add_active_thread ()\n   int base_cpu;\n \n   gdb_assert (!is_ravenscar_task (m_base_ptid));\n-  base_cpu = ravenscar_get_thread_base_cpu (m_base_ptid);\n+  base_cpu = get_thread_base_cpu (m_base_ptid);\n \n   if (!runtime_initialized ())\n     return nullptr;\n@@ -242,7 +257,10 @@ ravenscar_thread_target::add_active_thread ()\n      may not always add it to the thread list.  Add it here.  */\n   thread_info *active_thr = find_thread_ptid (proc_target, active_ptid);\n   if (active_thr == nullptr)\n-    active_thr = add_thread (proc_target, active_ptid);\n+    {\n+      active_thr = ::add_thread (proc_target, active_ptid);\n+      m_cpu_map[active_ptid.tid ()] = base_cpu;\n+    }\n   return active_thr;\n }\n "
    }
  ]
}