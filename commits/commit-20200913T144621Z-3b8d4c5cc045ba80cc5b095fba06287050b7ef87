{
  "sha": "3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2I4ZDRjNWNjMDQ1YmE4MGNjNWIwOTVmYmEwNjI4NzA1MGI3ZWY4Nw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-08-22T17:00:55Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-13T14:46:21Z"
    },
    "message": "Remove stale \"register\" bits from gdb.cp/misc.cc\n\ngdb.cp/misc.cc seems to have been originally copied from\ngdb.cp/classes.cc.  The testcases that use it, misc.exp and\ninherit.exp don't reference the \"register\" bits anywhere.  Remove\nthem, since they trigger warnings with newer GCCs, given \"register\" is\nbeing removed in C++17.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.cp/inherit.exp: No longer pass -Wno-deprecated-register.\n\t* gdb.cp/misc.exp: No longer pass -Wno-deprecated-register.\n\t* gdb.cp/misc.cc (class small, small::method, marker_reg1)\n\t(register_class): Delete.\n\t(main): Don't call register_class.",
    "tree": {
      "sha": "cad9b15a0e3b4953b0431d28a417a495991e63dd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cad9b15a0e3b4953b0431d28a417a495991e63dd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d5f96005a632d2a4e08ed93beb3ba0a01d12ce24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5f96005a632d2a4e08ed93beb3ba0a01d12ce24",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d5f96005a632d2a4e08ed93beb3ba0a01d12ce24"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 10,
    "deletions": 41
  },
  "files": [
    {
      "sha": "c339151f61608bc8db2e51837d133fd9bc397442",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-13  Pedro Alves  <pedro@palves.net>\n+\n+\t* gdb.cp/inherit.exp: No longer pass -Wno-deprecated-register.\n+\t* gdb.cp/misc.exp: No longer pass -Wno-deprecated-register.\n+\t* gdb.cp/misc.cc (class small, small::method, marker_reg1)\n+\t(register_class): Delete.\n+\t(main): Don't call register_class.\n+\n 2020-09-13  Pedro Alves  <pedro@palves.net>\n \n \t* gdb.cp/classes.exp: No longer pass -Wno-deprecated-register."
    },
    {
      "sha": "e9549d3ebe0705fdf2913c2a2c10c0acccc78bd9",
      "filename": "gdb/testsuite/gdb.cp/inherit.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/inherit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/inherit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/inherit.exp?ref=3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
      "patch": "@@ -26,8 +26,7 @@ load_lib \"cp-support.exp\"\n \n standard_testfile misc.cc\n \n-if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n-\t {debug c++ additional_flags=-Wno-deprecated-register}]} {\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile  {debug c++}]} {\n     return -1\n }\n "
    },
    {
      "sha": "24d40c461ae1c849270c898751b19c004c64db99",
      "filename": "gdb/testsuite/gdb.cp/misc.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/misc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/misc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/misc.cc?ref=3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
      "patch": "@@ -511,42 +511,6 @@ typedef struct {\n } tagless_struct;\n tagless_struct v_tagless;\n \n-/* Try to get the compiler to allocate a class in a register.  */\n-class small {\n- public:\n-  int x;\n-  int method ();\n-};\n-\n-int\n-small::method ()\n-{\n-  return x + 5;\n-}\n-\n-void marker_reg1 () {}\n-\n-int\n-register_class ()\n-{\n-  /* We don't call any methods for v, so gcc version cygnus-2.3.3-930220\n-     might put this variable in a register.  This is a lose, though, because\n-     it means that GDB can't call any methods for that variable.  */\n-  register small v;\n-\n-  int i;\n-\n-  /* Perform a computation sufficiently complicated that optimizing compilers\n-     won't optimized out the variable.  If some compiler constant-folds this\n-     whole loop, maybe using a parameter to this function here would help.  */\n-  v.x = 0;\n-  for (i = 0; i < 13; ++i)\n-    v.x += i;\n-  --v.x; /* v.x is now 77 */\n-  marker_reg1 ();\n-  return v.x + 5;\n-}\n-\n void dummy()\n {\n   v_bool = true;\n@@ -574,7 +538,6 @@ main()\n   inheritance1 ();\n   inheritance3 ();\n   enums1 ();\n-  register_class ();\n \n   /* FIXME: pmi gets optimized out.  Need to do some more computation with\n      it or something.  (No one notices, because the test is xfail'd anyway,"
    },
    {
      "sha": "cd6f0f7070abcf20540c2dd6b705cfee31f7a11d",
      "filename": "gdb/testsuite/gdb.cp/misc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b8d4c5cc045ba80cc5b095fba06287050b7ef87/gdb/testsuite/gdb.cp/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/misc.exp?ref=3b8d4c5cc045ba80cc5b095fba06287050b7ef87",
      "patch": "@@ -19,8 +19,7 @@ if { [skip_cplus_tests] } { continue }\n \n standard_testfile .cc\n \n-if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n-\t {debug c++ additional_flags=-Wno-deprecated-register}]} {\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug c++}]} {\n     return -1\n }\n "
    }
  ]
}