{
  "sha": "002a3166d359a759b6cddfe4571d1da5b4f96dce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDAyYTMxNjZkMzU5YTc1OWI2Y2RkZmU0NTcxZDFkYTViNGY5NmRjZQ==",
  "commit": {
    "author": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2020-08-13T21:47:05Z"
    },
    "committer": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2020-08-13T21:47:05Z"
    },
    "message": "debuginfod-support.c: Replace globals with user_data\n\nStore query information in user_data struct instead of global variables.\n\ngdb/ChangeLog:\n\n\t* debuginfod-support.c: Replace global variables with user_data.",
    "tree": {
      "sha": "c9814b431a5e7e074974049e347217259bd70e63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c9814b431a5e7e074974049e347217259bd70e63"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/002a3166d359a759b6cddfe4571d1da5b4f96dce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/002a3166d359a759b6cddfe4571d1da5b4f96dce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/002a3166d359a759b6cddfe4571d1da5b4f96dce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/002a3166d359a759b6cddfe4571d1da5b4f96dce/comments",
  "author": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a54a7f13f3c98a6e6a865a9973958ac083e702ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a54a7f13f3c98a6e6a865a9973958ac083e702ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a54a7f13f3c98a6e6a865a9973958ac083e702ad"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 26,
    "deletions": 16
  },
  "files": [
    {
      "sha": "261a407b0a43cf71fe140f31bebb89035596d4f7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/002a3166d359a759b6cddfe4571d1da5b4f96dce/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/002a3166d359a759b6cddfe4571d1da5b4f96dce/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=002a3166d359a759b6cddfe4571d1da5b4f96dce",
      "patch": "@@ -1,3 +1,7 @@\n+2020-08-13  Aaron Merey  <amerey@redhat.com>\n+\n+\t* debuginfod-support.c: Replace global variables with user_data.\n+\n 2020-08-13  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* maint.c (maintenance_selftest): Split args and pass array_view"
    },
    {
      "sha": "0dc88c2c2a10648517386414035b56cfb0f4ab54",
      "filename": "gdb/debuginfod-support.c",
      "status": "modified",
      "additions": 22,
      "deletions": 16,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/002a3166d359a759b6cddfe4571d1da5b4f96dce/gdb/debuginfod-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/002a3166d359a759b6cddfe4571d1da5b4f96dce/gdb/debuginfod-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/debuginfod-support.c?ref=002a3166d359a759b6cddfe4571d1da5b4f96dce",
      "patch": "@@ -43,29 +43,37 @@ debuginfod_debuginfo_query (const unsigned char *build_id,\n #else\n #include <elfutils/debuginfod.h>\n \n-/* TODO: Use debuginfod API extensions instead of these globals.  */\n-static std::string desc;\n-static std::string fname;\n-static bool has_printed;\n+struct user_data\n+{\n+  user_data (const char *desc, const char *fname)\n+    : desc (desc), fname (fname), has_printed (false)\n+  { }\n+\n+  const char * const desc;\n+  const char * const fname;\n+  bool has_printed;\n+};\n \n static int\n progressfn (debuginfod_client *c, long cur, long total)\n {\n+  user_data *data = static_cast<user_data *> (debuginfod_get_user_data (c));\n+\n   if (check_quit_flag ())\n     {\n       printf_filtered (\"Cancelling download of %s %ps...\\n\",\n-\t\t       desc.c_str (),\n-\t\t       styled_string (file_name_style.style (), fname.c_str ()));\n+\t\t       data->desc,\n+\t\t       styled_string (file_name_style.style (), data->fname));\n       return 1;\n     }\n \n-  if (!has_printed && total != 0)\n+  if (!data->has_printed && total != 0)\n     {\n       /* Print this message only once.  */\n-      has_printed = true;\n+      data->has_printed = true;\n       printf_filtered (\"Downloading %s %ps...\\n\",\n-\t\t       desc.c_str (),\n-\t\t       styled_string (file_name_style.style (), fname.c_str ()));\n+\t\t       data->desc,\n+\t\t       styled_string (file_name_style.style (), data->fname));\n     }\n \n   return 0;\n@@ -98,10 +106,9 @@ debuginfod_source_query (const unsigned char *build_id,\n   if (c == nullptr)\n     return scoped_fd (-ENOMEM);\n \n-  desc = std::string (\"source file\");\n-  fname = std::string (srcpath);\n-  has_printed = false;\n+  user_data data (\"source file\", srcpath);\n \n+  debuginfod_set_user_data (c, &data);\n   scoped_fd fd (debuginfod_find_source (c,\n \t\t\t\t\tbuild_id,\n \t\t\t\t\tbuild_id_len,\n@@ -136,11 +143,10 @@ debuginfod_debuginfo_query (const unsigned char *build_id,\n   if (c == nullptr)\n     return scoped_fd (-ENOMEM);\n \n-  desc = std::string (\"separate debug info for\");\n-  fname = std::string (filename);\n-  has_printed = false;\n   char *dname = nullptr;\n+  user_data data (\"separate debug info for\", filename);\n \n+  debuginfod_set_user_data (c, &data);\n   scoped_fd fd (debuginfod_find_debuginfo (c, build_id, build_id_len, &dname));\n \n   if (fd.get () < 0 && fd.get () != -ENOENT)"
    }
  ]
}