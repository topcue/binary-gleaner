{
  "sha": "7ce2460a77a8f66a145c11522f494f3262255390",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2NlMjQ2MGE3N2E4ZjY2YTE0NWMxMTUyMmY0OTRmMzI2MjI1NTM5MA==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:12Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-05-09T09:29:12Z"
    },
    "message": "[binutils][aarch64] SVE2 feature extension flags.\n\nInclude all feature flag macros.\n\nThe \"sve2\" extension that enables the core sve2 instructions.\nThis also enables the sve extension, since sve is a requirement of sve2.\n\nExtra optional sve2 features are the bitperm, sm4, aes, and sha3 extensions.\nThese are all given extra feature flags, \"bitperm\", \"sve2-sm4\",\n\"sve2-aes\", and \"sve2-sha3\" respectively.\nThe sm4, aes, and sha3 extensions are explicitly marked as sve2\nextensions to distinguish them from the corresponding NEON extensions.\n\nRather than continue extending the current feature flag numbers, I used\nsome bits that have been skipped.\n\ngas/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* config/tc-aarch64.c: Add command line architecture feature flags\n\t\"sve2\", \"sve2-sm4\", \"sve2-aes\", \"sve2-sha3\", \"bitperm\".\n\t* doc/c-aarch64.texi: Document new architecture feature flags.\n\ninclude/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_SVE2\n\tAARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,\n\tAARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New\n\tfeature macros.\n\nopcodes/ChangeLog:\n\n2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n\n\t* aarch64-tbl.h\n\t(aarch64_feature_sve2, aarch64_feature_sve2aes,\n\taarch64_feature_sve2sha3, aarch64_feature_sve2sm4,\n\taarch64_feature_sve2bitperm): New feature sets.\n\t(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros\n\tfor feature set addresses.\n\t(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,\n\tSVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.",
    "tree": {
      "sha": "74a65e3d48ac6927214a1e2b8b555b908fed7ccd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/74a65e3d48ac6927214a1e2b8b555b908fed7ccd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ce2460a77a8f66a145c11522f494f3262255390",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ce2460a77a8f66a145c11522f494f3262255390",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ce2460a77a8f66a145c11522f494f3262255390",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ce2460a77a8f66a145c11522f494f3262255390/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd3189990b1d918b3a9e482ec6e9cc9a8b9e8fe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd3189990b1d918b3a9e482ec6e9cc9a8b9e8fe9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd3189990b1d918b3a9e482ec6e9cc9a8b9e8fe9"
    }
  ],
  "stats": {
    "total": 90,
    "additions": 90,
    "deletions": 0
  },
  "files": [
    {
      "sha": "c21493fa416e0775b17e9364bcc30457ccc78271",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* config/tc-aarch64.c: Add command line architecture feature flags\n+\t\"sve2\", \"sve2-sm4\", \"sve2-aes\", \"sve2-sha3\", \"bitperm\".\n+\t* doc/c-aarch64.texi: Document new architecture feature flags.\n+\n 2019-05-08  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/gas/elf/dwarf2-1.s,"
    },
    {
      "sha": "b07a722d505fd90c5e8d06646510eb8d93a49db5",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -8874,6 +8874,19 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\tAARCH64_ARCH_NONE},\n   {\"memtag\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_MEMTAG, 0),\n \t\t\tAARCH64_ARCH_NONE},\n+  {\"sve2\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE, 0)},\n+  {\"sve2-sm4\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2_SM4, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_SM4, 0)},\n+  {\"sve2-aes\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2_AES, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_AES, 0)},\n+  {\"sve2-sha3\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2_SHA3, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_SHA3, 0)},\n+  {\"bitperm\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2_BITPERM, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2, 0)},\n   {NULL,\t\tAARCH64_ARCH_NONE, AARCH64_ARCH_NONE},\n };\n "
    },
    {
      "sha": "74ffc8f83ed4ce8ba41f455a4be5347b2bdcfbdd",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -196,6 +196,16 @@ automatically cause those extensions to be disabled.\n  @tab Enable ARMv8.5-A Memory Tagging Extensions.\n @item @code{tme} @tab ARMv8-A @tab No\n  @tab Enable Transactional Memory Extensions.\n+@item @code{sve2} @tab ARMv8-A @tab No\n+ @tab Enable the SVE2 Extension.\n+@item @code{bitperm} @tab ARMv8-A @tab No\n+ @tab Enable SVE2 BITPERM Extension.\n+@item @code{sve2-sm4} @tab ARMv8-A @tab No\n+ @tab Enable SVE2 SM4 Extension.\n+@item @code{sve2-aes} @tab ARMv8-A @tab No\n+ @tab Enable SVE2 AES Extension.\n+@item @code{sve2-sha3} @tab ARMv8-A @tab No\n+ @tab Enable SVE2 SHA3 Extension.\n @end multitable\n \n @node AArch64 Syntax"
    },
    {
      "sha": "1ce57a4bd71ca13fa0e06a8d789aacbb8a0843d4",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -1,3 +1,10 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SVE2\n+\tAARCH64_FEATURE_SVE2_AES, AARCH64_FEATURE_SVE2_BITPERM,\n+\tAARCH64_FEATURE_SVE2_SM4, AARCH64_FEATURE_SVE2_SHA3): New\n+\tfeature macros.\n+\n 2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n \t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n "
    },
    {
      "sha": "fdc7cde432cbb5be0a4f7d9e3541a71bc685d477",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -89,6 +89,13 @@ typedef uint32_t aarch64_insn;\n /* Transactional Memory Extension.  */\n #define AARCH64_FEATURE_TME\t\t0x2000000000000ULL\n \n+/* SVE2 instructions.  */\n+#define AARCH64_FEATURE_SVE2\t\t0x000000010\n+#define AARCH64_FEATURE_SVE2_AES\t\t0x000000080\n+#define AARCH64_FEATURE_SVE2_BITPERM\t0x000000100\n+#define AARCH64_FEATURE_SVE2_SM4\t\t0x000000200\n+#define AARCH64_FEATURE_SVE2_SHA3\t0x000000400\n+\n /* Architectures are the sum of the base and extensions.  */\n #define AARCH64_ARCH_V8\t\tAARCH64_FEATURE (AARCH64_FEATURE_V8, \\\n \t\t\t\t\t\t AARCH64_FEATURE_FP  \\"
    },
    {
      "sha": "e1003f6897894bbc71b1f2e748c347659c429891",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -1,3 +1,14 @@\n+2019-05-09  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-tbl.h\n+\t(aarch64_feature_sve2, aarch64_feature_sve2aes,\n+\taarch64_feature_sve2sha3, aarch64_feature_sve2sm4,\n+\taarch64_feature_sve2bitperm): New feature sets.\n+\t(SVE2, SVE2_AES, SVE2_SHA3, SVE2_SM4, SVE2_BITPERM): New macros\n+\tfor feature set addresses.\n+\t(SVE2_INSN, SVE2_INSNC, SVE2AES_INSN, SVE2SHA3_INSN,\n+\tSVE2SM4_INSN, SVE2SM4_INSNC, SVE2BITPERM_INSN): New macros.\n+\n 2019-05-06  Andrew Bennett  <andrew.bennett@imgtec.com>\n \t    Faraz Shahbazker  <fshahbazker@wavecomp.com>\n "
    },
    {
      "sha": "481caea3995510b34a57c2a3843ad6976c5bf99c",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ce2460a77a8f66a145c11522f494f3262255390/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ce2460a77a8f66a145c11522f494f3262255390/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=7ce2460a77a8f66a145c11522f494f3262255390",
      "patch": "@@ -2206,6 +2206,16 @@ static const aarch64_feature_set aarch64_feature_memtag =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_5 | AARCH64_FEATURE_MEMTAG, 0);\n static const aarch64_feature_set aarch64_feature_tme =\n   AARCH64_FEATURE (AARCH64_FEATURE_TME, 0);\n+static const aarch64_feature_set aarch64_feature_sve2 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2, 0);\n+static const aarch64_feature_set aarch64_feature_sve2aes =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_AES, 0);\n+static const aarch64_feature_set aarch64_feature_sve2sha3 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_SHA3, 0);\n+static const aarch64_feature_set aarch64_feature_sve2sm4 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_SM4, 0);\n+static const aarch64_feature_set aarch64_feature_sve2bitperm =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_BITPERM, 0);\n \n \n #define CORE\t\t&aarch64_feature_v8\n@@ -2242,6 +2252,11 @@ static const aarch64_feature_set aarch64_feature_tme =\n #define BTI\t\t&aarch64_feature_bti\n #define MEMTAG\t\t&aarch64_feature_memtag\n #define TME\t\t&aarch64_feature_tme\n+#define SVE2\t\t&aarch64_feature_sve2\n+#define SVE2_AES\t\t&aarch64_feature_sve2aes\n+#define SVE2_SHA3\t&aarch64_feature_sve2sha3\n+#define SVE2_SM4\t\t&aarch64_feature_sve2sm4\n+#define SVE2_BITPERM\t&aarch64_feature_sve2bitperm\n \n #define CORE_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, CORE, OPS, QUALS, FLAGS, 0, 0, NULL }\n@@ -2311,6 +2326,27 @@ static const aarch64_feature_set aarch64_feature_tme =\n   { NAME, OPCODE, MASK, CLASS, 0, MEMTAG, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define _TME_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, OP, TME, OPS, QUALS, FLAGS, 0, 0, NULL }\n+#define SVE2_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2, OPS, QUALS, \\\n+    FLAGS | F_STRICT, 0, TIED, NULL }\n+#define SVE2_INSNC(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,CONSTRAINTS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2, OPS, QUALS, \\\n+    FLAGS | F_STRICT, CONSTRAINTS, TIED, NULL }\n+#define SVE2AES_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2_AES, OPS, QUALS, \\\n+    FLAGS | F_STRICT, 0, TIED, NULL }\n+#define SVE2SHA3_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2_SHA3, OPS, QUALS, \\\n+    FLAGS | F_STRICT, 0, TIED, NULL }\n+#define SVE2SM4_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2_SM4, OPS, QUALS, \\\n+    FLAGS | F_STRICT, 0, TIED, NULL }\n+#define SVE2SM4_INSNC(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,CONSTRAINTS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2_SM4, OPS, QUALS, \\\n+    FLAGS | F_STRICT, CONSTRAINTS, TIED, NULL }\n+#define SVE2BITPERM_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n+  { NAME, OPCODE, MASK, CLASS, OP, SVE2_BITPERM, OPS, QUALS, \\\n+    FLAGS | F_STRICT, 0, TIED, NULL }\n \n struct aarch64_opcode aarch64_opcode_table[] =\n {"
    }
  ]
}