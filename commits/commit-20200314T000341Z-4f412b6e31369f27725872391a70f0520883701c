{
  "sha": "4f412b6e31369f27725872391a70f0520883701c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGY0MTJiNmUzMTM2OWYyNzcyNTg3MjM5MWE3MGYwNTIwODgzNzAxYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-13T23:39:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-03-14T00:03:41Z"
    },
    "message": "Introduce generic_value_print_complex\n\nThis adds generic_value_print_complex, a value-based analogue of\ngeneric_val_print_complex.\n\ngdb/ChangeLog\n2020-03-13  Tom Tromey  <tom@tromey.com>\n\n\t* valprint.c (generic_value_print_complex): New function.\n\t(generic_value_print): Use it.",
    "tree": {
      "sha": "5f3b475c66c12df90bda568d0059aa1262859684",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5f3b475c66c12df90bda568d0059aa1262859684"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f412b6e31369f27725872391a70f0520883701c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f412b6e31369f27725872391a70f0520883701c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f412b6e31369f27725872391a70f0520883701c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f412b6e31369f27725872391a70f0520883701c/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f5354008862defe83fc6d3620d51da52f860f5bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5354008862defe83fc6d3620d51da52f860f5bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f5354008862defe83fc6d3620d51da52f860f5bf"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 30,
    "deletions": 2
  },
  "files": [
    {
      "sha": "227f9a9a1655acc99882ceb2accadbe5ab09504f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f412b6e31369f27725872391a70f0520883701c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f412b6e31369f27725872391a70f0520883701c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4f412b6e31369f27725872391a70f0520883701c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-03-13  Tom Tromey  <tom@tromey.com>\n+\n+\t* valprint.c (generic_value_print_complex): New function.\n+\t(generic_value_print): Use it.\n+\n 2020-03-13  Tom Tromey  <tom@tromey.com>\n \n \t* valprint.c (generic_val_print_float): Don't call"
    },
    {
      "sha": "5bf874eab99398f94b34978a9e821deb2c294bd4",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f412b6e31369f27725872391a70f0520883701c/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f412b6e31369f27725872391a70f0520883701c/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=4f412b6e31369f27725872391a70f0520883701c",
      "patch": "@@ -966,6 +966,30 @@ generic_val_print_complex (struct type *type,\n   fprintf_filtered (stream, \"%s\", decorations->complex_suffix);\n }\n \n+/* generic_value_print helper for TYPE_CODE_COMPLEX.  */\n+\n+static void\n+generic_value_print_complex (struct value *val, struct ui_file *stream,\n+\t\t\t     const struct value_print_options *options,\n+\t\t\t     const struct generic_val_print_decorations\n+\t\t\t       *decorations)\n+{\n+  fprintf_filtered (stream, \"%s\", decorations->complex_prefix);\n+\n+  struct type *type = check_typedef (value_type (val));\n+  struct value *real_part\n+    = value_from_component (val, TYPE_TARGET_TYPE (type), 0);\n+  value_print_scalar_formatted (real_part, options, 0, stream);\n+  fprintf_filtered (stream, \"%s\", decorations->complex_infix);\n+\n+  struct value *imag_part\n+    = value_from_component (val, TYPE_TARGET_TYPE (type),\n+\t\t\t    TYPE_LENGTH (TYPE_TARGET_TYPE (type)));\n+\n+  value_print_scalar_formatted (imag_part, options, 0, stream);\n+  fprintf_filtered (stream, \"%s\", decorations->complex_suffix);\n+}\n+\n /* A generic val_print that is suitable for use by language\n    implementations of the la_val_print method.  This function can\n    handle most type codes, though not all, notably exception\n@@ -1206,8 +1230,7 @@ generic_value_print (struct value *val, struct ui_file *stream, int recurse,\n       break;\n \n     case TYPE_CODE_COMPLEX:\n-      generic_val_print_complex (type, 0, stream,\n-\t\t\t\t val, options, decorations);\n+      generic_value_print_complex (val, stream, options, decorations);\n       break;\n \n     case TYPE_CODE_UNION:"
    }
  ]
}