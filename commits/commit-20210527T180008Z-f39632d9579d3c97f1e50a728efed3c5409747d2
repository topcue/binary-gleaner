{
  "sha": "f39632d9579d3c97f1e50a728efed3c5409747d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjM5NjMyZDk1NzlkM2M5N2YxZTUwYTcyOGVmZWQzYzU0MDk3NDdkMg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T17:59:01Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-05-27T18:00:08Z"
    },
    "message": "gdb: add make-init-c script\n\nI would like to modify how the init.c file is generated (its content).\nBut as it is, a shell script with multiple sed invocations in a Makefile\ntarget, it's not very maintainable.  Replace that with a shell script\nthat does the same, but in a more readable way.\n\nThe Makefile rule uses the \"-\" prefix in front of the for loop, I\npresume to ignore any error coming from the fact that xml-builtin.c and\ncp-name-parser.c are not found in the srcdir (they are generated source\nfiles).  I prefer not to blindly ignore errors, so filter these files\nout of INIT_FILES instead (we already filter out other files).\n\nThere are no expected meaningful changes to the generated init.c file.\nJust the _initialize_all_file declaration that is moved down and \"void\"\nin parenthesis that is removed.\n\nThe new regular expression is a bit tighter than the existing one, it\nrequires the init function to be followed by exactly ` ()`.  Update\nbpf-tdep.c accordingly.\n\ngdb/ChangeLog:\n\n\t* Makefile.in (INIT_FILES_FILTER_OUT): New.\n\t(INIT_FILES): Use INIT_FILES_FILTER_OUT.\n\t(stamp-init): Use make-init-c.\n\t* bpf-tdep.c (_initialize_bpf_tdep): Remove \"void\".\n\t* silent-rules.mk (ECHO_INIT_C): Change.\n\t* make-init-c: New file.\n\nChange-Id: I6d6b12cbccf24ab79d1219bff05df01624c684f9",
    "tree": {
      "sha": "e4dd9836cd1491d773ab60a996b4b239a2696489",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e4dd9836cd1491d773ab60a996b4b239a2696489"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f39632d9579d3c97f1e50a728efed3c5409747d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f39632d9579d3c97f1e50a728efed3c5409747d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f39632d9579d3c97f1e50a728efed3c5409747d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f39632d9579d3c97f1e50a728efed3c5409747d2/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5e84b7eefba5b4299b0ca80aecc5d4e99c195c1e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5e84b7eefba5b4299b0ca80aecc5d4e99c195c1e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5e84b7eefba5b4299b0ca80aecc5d4e99c195c1e"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 82,
    "deletions": 27
  },
  "files": [
    {
      "sha": "1db1264c302bee14d0935fc2be7785cebe80e8b7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f39632d9579d3c97f1e50a728efed3c5409747d2",
      "patch": "@@ -1,3 +1,12 @@\n+2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* Makefile.in (INIT_FILES_FILTER_OUT): New.\n+\t(INIT_FILES): Use INIT_FILES_FILTER_OUT.\n+\t(stamp-init): Use make-init-c.\n+\t* bpf-tdep.c (_initialize_bpf_tdep): Remove \"void\".\n+\t* silent-rules.mk (ECHO_INIT_C): Change.\n+\t* make-init-c: New file.\n+\n 2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* command.h (add_alias_cmd): Accept target as"
    },
    {
      "sha": "bb6c5dfa7847b8989d6a914b2b8b9afa0716bd7c",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 14,
      "deletions": 25,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=f39632d9579d3c97f1e50a728efed3c5409747d2",
      "patch": "@@ -1837,42 +1837,31 @@ test-cp-name-parser$(EXEEXT): test-cp-name-parser.o $(LIBIBERTY)\n # maybe we could just require every .o file to have an initialization routine\n # of a given name (top.o -> _initialize_top, etc.).\n #\n-# Formatting conventions:  The name of the _initialize_* routines must start\n-# in column zero, and must not be inside #if.\n-#\n # Note that the set of files with init functions might change, or the names\n # of the functions might change, so this files needs to depend on all the\n # source files that will be linked into gdb.  However, due to the way\n # this Makefile has generally been written, we do this indirectly, by\n # computing the list of source files from the list of object files.\n \n+INIT_FILES_FILTER_OUT = \\\n+\tcp-name-parser.o \\\n+\tinit.o \\\n+\tversion.o \\\n+\txml-builtin.o \\\n+\t%_S.o \\\n+\t%_U.o\n+\n INIT_FILES = \\\n \t$(patsubst %.o,%.c, \\\n \t  $(patsubst %-exp.o,%-exp.y, \\\n-\t    $(filter-out init.o version.o %_S.o %_U.o,\\\n-\t      $(COMMON_OBS))))\n+\t    $(filter-out $(INIT_FILES_FILTER_OUT), $(COMMON_OBS))))\n \n init.c: stamp-init; @true\n-stamp-init: $(INIT_FILES) config.status\n-\t@$(ECHO_INIT_C) echo \"Making init.c\"\n-\t@rm -f init.c-tmp init.l-tmp\n-\t@touch init.c-tmp\n-\t@-for f in $(INIT_FILES); do \\\n-\t    sed -n -e 's/^_initialize_\\([a-z_0-9A-Z]*\\).*/\\1/p' \\\n-\t        $(srcdir)/$$f 2>/dev/null; \\\n-\tdone > init.l-tmp\n-\t@echo '/* Do not modify this file.  */' >>init.c-tmp\n-\t@echo '/* It is created automatically by the Makefile.  */'>>init.c-tmp\n-\t@echo '#include \"defs.h\"      /* For initialize_file_ftype.  */' >>init.c-tmp\n-\t@echo 'extern void initialize_all_files(void);' >>init.c-tmp\n-\t@sed -e 's/\\(.*\\)/extern initialize_file_ftype _initialize_\\1;/' <init.l-tmp >>init.c-tmp\n-\t@echo 'void' >>init.c-tmp\n-\t@echo 'initialize_all_files (void)' >>init.c-tmp\n-\t@echo '{' >>init.c-tmp\n-\t@sed -e 's/\\(.*\\)/  _initialize_\\1 ();/' <init.l-tmp >>init.c-tmp\n-\t@echo '}' >>init.c-tmp\n-\t@$(SHELL) $(srcdir)/../move-if-change init.c-tmp init.c\n-\t@echo stamp > stamp-init\n+stamp-init: $(INIT_FILES) config.status $(srcdir)/make-init-c\n+\t$(ECHO_INIT_C)\n+\t$(SILENCE) $(srcdir)/make-init-c $(addprefix $(srcdir)/,$(INIT_FILES)) > init.c-tmp\n+\t$(SILENCE) $(SHELL) $(srcdir)/../move-if-change init.c-tmp init.c\n+\t$(SILENCE) echo stamp > stamp-init\n \n .PRECIOUS: init.c\n "
    },
    {
      "sha": "a29cd90ba38773d592a778de068332b2c10ad633",
      "filename": "gdb/bpf-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/bpf-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/bpf-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bpf-tdep.c?ref=f39632d9579d3c97f1e50a728efed3c5409747d2",
      "patch": "@@ -370,7 +370,7 @@ bpf_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \n void _initialize_bpf_tdep ();\n void\n-_initialize_bpf_tdep (void)\n+_initialize_bpf_tdep ()\n {\n   register_gdbarch_init (bfd_arch_bpf, bpf_gdbarch_init);\n "
    },
    {
      "sha": "1588760112ed85252aace64cd0f06e7dd90328b2",
      "filename": "gdb/make-init-c",
      "status": "added",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/make-init-c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/make-init-c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/make-init-c?ref=f39632d9579d3c97f1e50a728efed3c5409747d2",
      "patch": "@@ -0,0 +1,57 @@\n+#!/usr/bin/env sh\n+\n+# Copyright (C) 2013-2021 Free Software Foundation, Inc.\n+#\n+# This file is part of GDB.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Generate the init.c source file.\n+#\n+# Usage:\n+#\n+#    ./make-init-c source-files > init.c-tmp\n+#\n+# Where SOURCE-FILES is the list of source files to extract init functions from.\n+#\n+# Formatting conventions:  The name of the initialization routines must begin\n+# with `_initialize_`, must start in column zero, and be followed with exactly\n+# ` ()`.  For example:\n+#\n+# void\n+# _initialize_foo ()\n+# {\n+#   ...\n+# }\n+#\n+\n+# Abort on command error.\n+set -e\n+\n+echo \"/* Do not modify this file.  */\"\n+echo \"/* It is created automatically by the Makefile.  */\"\n+echo \"#include \\\"defs.h\\\"      /* For initialize_file_ftype.  */\"\n+echo \"\"\n+sed -n -e 's/^\\(_initialize_[a-zA-Z0-9_]*\\) ()$/\\1/p' \"$@\" | while read -r name; do\n+  echo \"extern initialize_file_ftype $name;\"\n+done\n+echo \"\"\n+echo \"void initialize_all_files ();\"\n+echo \"void\"\n+echo \"initialize_all_files ()\"\n+echo \"{\"\n+sed -n -e 's/^\\(_initialize_[a-zA-Z0-9_]*\\) ()$/\\1/p' \"$@\" | while read -r name; do\n+  echo \"  $name ();\"\n+done\n+echo \"}\""
    },
    {
      "sha": "f7b959f8390c538450e4dafcb49fd72b237e9e04",
      "filename": "gdb/silent-rules.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/silent-rules.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f39632d9579d3c97f1e50a728efed3c5409747d2/gdb/silent-rules.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/silent-rules.mk?ref=f39632d9579d3c97f1e50a728efed3c5409747d2",
      "patch": "@@ -9,7 +9,7 @@ ECHO_GEN_XML_BUILTIN = \\\n               @echo \"  GEN    xml-builtin.c\";\n ECHO_GEN_XML_BUILTIN_GENERATED = \\\n               @echo \"  GEN    xml-builtin-generated.c\";\n-ECHO_INIT_C =  echo \"  GEN    init.c\" ||\n+ECHO_INIT_C = @echo \"  GEN    init.c\"\n ECHO_SIGN =   @echo \"  SIGN   gdb\";\n ECHO_YACC =   @echo \"  YACC   $@\";\n ECHO_LEX  =   @echo \"  LEX    $@\";"
    }
  ]
}