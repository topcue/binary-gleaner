{
  "sha": "b551a89f51504735e9979ac885a5784e21cfecef",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjU1MWE4OWY1MTUwNDczNWU5OTc5YWM4ODVhNTc4NGUyMWNmZWNlZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-23T18:57:19Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-09-24T18:25:59Z"
    },
    "message": "Don't let TUI focus on locator\n\nPR tui/26638 notes that the C-x o binding can put the focus on the\nlocator window.  However, this is not useful and did not happen\nhistorically.  This patch changes the TUI to skip this window when\nswitching focus.\n\ngdb/ChangeLog\n2020-09-24  Tom Tromey  <tromey@adacore.com>\n\n\tPR tui/26638:\n\t* tui/tui-stack.h (struct tui_locator_window) <can_focus>: New\n\tmethod.\n\t* tui/tui-data.h (struct tui_win_info) <can_focus>: New method.\n\t* tui/tui-data.c (tui_next_win): Exclude non-focusable windows.\n\t(tui_prev_win): Rewrite.\n\ngdb/testsuite/ChangeLog\n2020-09-24  Tom Tromey  <tromey@adacore.com>\n\n\tPR tui/26638:\n\t* gdb.tui/list.exp: Check output of \"focus next\".",
    "tree": {
      "sha": "508c40ffd9fabc399f80cb7987abdba626fc7e44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/508c40ffd9fabc399f80cb7987abdba626fc7e44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b551a89f51504735e9979ac885a5784e21cfecef",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b551a89f51504735e9979ac885a5784e21cfecef",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b551a89f51504735e9979ac885a5784e21cfecef",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b551a89f51504735e9979ac885a5784e21cfecef/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "99bb393f1d107cf2c4016c486f85625d362027a7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/99bb393f1d107cf2c4016c486f85625d362027a7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/99bb393f1d107cf2c4016c486f85625d362027a7"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 52,
    "deletions": 8
  },
  "files": [
    {
      "sha": "3872a8d9cbee135b1d9eeec8c6db42fa9867bf9d",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-24  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR tui/26638:\n+\t* tui/tui-stack.h (struct tui_locator_window) <can_focus>: New\n+\tmethod.\n+\t* tui/tui-data.h (struct tui_win_info) <can_focus>: New method.\n+\t* tui/tui-data.c (tui_next_win): Exclude non-focusable windows.\n+\t(tui_prev_win): Rewrite.\n+\n 2020-09-23  Hannes Domani  <ssbssa@yahoo.de>\n \n \t* nat/windows-nat.c (handle_exception): Handle 64bit breakpoints"
    },
    {
      "sha": "41849756f973dd9b6e6e7323a6da81b1194dc5ff",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-24  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR tui/26638:\n+\t* gdb.tui/list.exp: Check output of \"focus next\".\n+\n 2020-09-23  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.dwarf2/intbits.exp: New file."
    },
    {
      "sha": "576b33fa8698df5ba3f3ba9e789590bb5577d99a",
      "filename": "gdb/testsuite/gdb.tui/list.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/testsuite/gdb.tui/list.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/testsuite/gdb.tui/list.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/list.exp?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -39,3 +39,4 @@ Term::check_contents \"list main\" \"21 *return 0\"\n # The following 'focus next' must be immediately after 'list main' to\n # ensure that GDB has a valid idea of what is currently focused.\n Term::command \"focus next\"\n+Term::check_contents \"focus next\" \"Focus set to cmd window\""
    },
    {
      "sha": "d475d03106517574f5e6eaefcee4b86fd95ce051",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 26,
      "deletions": 8,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -113,9 +113,18 @@ tui_next_win (struct tui_win_info *cur_win)\n   auto iter = std::find (tui_windows.begin (), tui_windows.end (), cur_win);\n   gdb_assert (iter != tui_windows.end ());\n \n-  ++iter;\n-  if (iter == tui_windows.end ())\n-    return tui_windows[0];\n+  gdb_assert (cur_win->can_focus ());\n+  /* This won't loop forever since we can't have just an un-focusable\n+     window.  */\n+  while (true)\n+    {\n+      ++iter;\n+      if (iter == tui_windows.end ())\n+\titer = tui_windows.begin ();\n+      if ((*iter)->can_focus ())\n+\tbreak;\n+    }\n+\n   return *iter;\n }\n \n@@ -125,12 +134,21 @@ tui_next_win (struct tui_win_info *cur_win)\n struct tui_win_info *\n tui_prev_win (struct tui_win_info *cur_win)\n {\n-  auto iter = std::find (tui_windows.begin (), tui_windows.end (), cur_win);\n-  gdb_assert (iter != tui_windows.end ());\n+  auto iter = std::find (tui_windows.rbegin (), tui_windows.rend (), cur_win);\n+  gdb_assert (iter != tui_windows.rend ());\n+\n+  gdb_assert (cur_win->can_focus ());\n+  /* This won't loop forever since we can't have just an un-focusable\n+     window.  */\n+  while (true)\n+    {\n+      ++iter;\n+      if (iter == tui_windows.rend ())\n+\titer = tui_windows.rbegin ();\n+      if ((*iter)->can_focus ())\n+\tbreak;\n+    }\n \n-  if (iter == tui_windows.begin ())\n-    return tui_windows.back ();\n-  --iter;\n   return *iter;\n }\n "
    },
    {
      "sha": "d61bfc7dff8d9947b24fbeeb3b2879586911a759",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -99,6 +99,12 @@ struct tui_win_info\n     return handle != nullptr;\n   }\n \n+  /* Return true if this window can accept the focus.  */\n+  virtual bool can_focus () const\n+  {\n+    return true;\n+  }\n+\n   /* Disable output until the next call to doupdate.  */\n   void no_refresh ()\n   {"
    },
    {
      "sha": "0e5916f0ce33730f5d91f71e11663e49e5a1c7de",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b551a89f51504735e9979ac885a5784e21cfecef/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=b551a89f51504735e9979ac885a5784e21cfecef",
      "patch": "@@ -52,6 +52,11 @@ struct tui_locator_window : public tui_win_info\n     return false;\n   }\n \n+  bool can_focus () const override\n+  {\n+    return false;\n+  }\n+\n   void rerender () override;\n \n   /* Update the locator, with the provided arguments."
    }
  ]
}