{
  "sha": "fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmI0Y2RlY2I3ZTNiOWNhYjhhODNmM2U2OWE5ZGVhZmNmNTM1MDFmZQ==",
  "commit": {
    "author": {
      "name": "Zoran Zaric",
      "email": "Zoran.Zaric@amd.com",
      "date": "2021-02-26T10:14:53Z"
    },
    "committer": {
      "name": "Zoran Zaric",
      "email": "zoran.zaric@amd.com",
      "date": "2021-08-05T15:38:48Z"
    },
    "message": "Cleanup of the dwarf_expr_context constructor\n\nMove the initial values for dwarf_expr_context class data members\nto the class declaration in expr.h.\n\ngdb/ChangeLog:\n\n        * dwarf2/expr.c (dwarf_expr_context::dwarf_expr_context):\n        Remove initial data members values.\n        * dwarf2/expr.h (dwarf_expr_context): Add initial values\n        to the class data members.",
    "tree": {
      "sha": "ef0493c05bbf26c01ef3c91f82de7b5dbc1035b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ef0493c05bbf26c01ef3c91f82de7b5dbc1035b6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe/comments",
  "author": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZaricZoran",
    "id": 81635026,
    "node_id": "MDQ6VXNlcjgxNjM1MDI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81635026?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZaricZoran",
    "html_url": "https://github.com/ZaricZoran",
    "followers_url": "https://api.github.com/users/ZaricZoran/followers",
    "following_url": "https://api.github.com/users/ZaricZoran/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZaricZoran/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZaricZoran/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZaricZoran/subscriptions",
    "organizations_url": "https://api.github.com/users/ZaricZoran/orgs",
    "repos_url": "https://api.github.com/users/ZaricZoran/repos",
    "events_url": "https://api.github.com/users/ZaricZoran/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZaricZoran/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "183657edcd11c6fd84b4cf3721250086784999de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/183657edcd11c6fd84b4cf3721250086784999de",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/183657edcd11c6fd84b4cf3721250086784999de"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 9,
    "deletions": 18
  },
  "files": [
    {
      "sha": "aa166b22d9c3c3a9cf73d029531e1376991b3037",
      "filename": "gdb/dwarf2/expr.c",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe/gdb/dwarf2/expr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe/gdb/dwarf2/expr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.c?ref=fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
      "patch": "@@ -90,16 +90,7 @@ dwarf_expr_context::address_type () const\n /* Create a new context for the expression evaluator.  */\n \n dwarf_expr_context::dwarf_expr_context (dwarf2_per_objfile *per_objfile)\n-: gdbarch (NULL),\n-  addr_size (0),\n-  ref_addr_size (0),\n-  recursion_depth (0),\n-  max_recursion_depth (0x100),\n-  location (DWARF_VALUE_MEMORY),\n-  len (0),\n-  data (NULL),\n-  initialized (0),\n-  per_objfile (per_objfile)\n+: per_objfile (per_objfile)\n {\n }\n "
    },
    {
      "sha": "60021eb096950fa073b7e9c823c5b3f9461eeeb4",
      "filename": "gdb/dwarf2/expr.h",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe/gdb/dwarf2/expr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe/gdb/dwarf2/expr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/expr.h?ref=fb4cdecb7e3b9cab8a83f3e69a9deafcf53501fe",
      "patch": "@@ -132,32 +132,32 @@ struct dwarf_expr_context\n   std::vector<dwarf_stack_value> stack;\n \n   /* Target architecture to use for address operations.  */\n-  struct gdbarch *gdbarch;\n+  struct gdbarch *gdbarch = nullptr;\n \n   /* Target address size in bytes.  */\n-  int addr_size;\n+  int addr_size = 0;\n \n   /* DW_FORM_ref_addr size in bytes.  If -1 DWARF is executed from a frame\n      context and operations depending on DW_FORM_ref_addr are not allowed.  */\n-  int ref_addr_size;\n+  int ref_addr_size = 0;\n \n   /* The current depth of dwarf expression recursion, via DW_OP_call*,\n      DW_OP_fbreg, DW_OP_push_object_address, etc., and the maximum\n      depth we'll tolerate before raising an error.  */\n-  int recursion_depth, max_recursion_depth;\n+  int recursion_depth = 0, max_recursion_depth = 0x100;\n \n   /* Location of the value.  */\n-  enum dwarf_value_location location;\n+  dwarf_value_location location = DWARF_VALUE_MEMORY;\n \n   /* For DWARF_VALUE_LITERAL, the current literal value's length and\n      data.  For DWARF_VALUE_IMPLICIT_POINTER, LEN is the offset of the\n      target DIE of sect_offset kind.  */\n-  ULONGEST len;\n-  const gdb_byte *data;\n+  ULONGEST len = 0;\n+  const gdb_byte *data = nullptr;\n \n   /* Initialization status of variable: Non-zero if variable has been\n      initialized; zero otherwise.  */\n-  int initialized;\n+  int initialized = 0;\n \n   /* A vector of pieces.\n "
    }
  ]
}