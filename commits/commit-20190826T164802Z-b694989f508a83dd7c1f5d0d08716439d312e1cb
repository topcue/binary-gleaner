{
  "sha": "b694989f508a83dd7c1f5d0d08716439d312e1cb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY5NDk4OWY1MDhhODNkZDdjMWY1ZDBkMDg3MTY0MzlkMzEyZTFjYg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-26T16:48:02Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2019-08-26T16:48:02Z"
    },
    "message": "[gdb/testsuite] Make skip_libstdcxx_probe_tests return 1 if true\n\nThe tcl proc skip_libstdcxx_probe_tests currently returns 0 if the probe tests\nneed to be skipped, while tcl interprets 0 as false rather than true, which is\nconfusing.\n\nFix this by making skip_libstdcxx_probe_tests return 1 if the probe tests need\nto be skipped.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2019-08-26  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (skip_libstdcxx_probe_tests_prompt): Return 1 if probe\n\t* tests need to be skipped.\n\t* gdb.cp/exceptprint.exp: Update call to skip_libstdcxx_probe_tests.\n\t* gdb.mi/mi-catch-cpp-exceptions.exp: Update call to\n\tmi_skip_libstdcxx_probe_tests.",
    "tree": {
      "sha": "2892923838fefd1b187685a74a553a7c413ceeee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2892923838fefd1b187685a74a553a7c413ceeee"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b694989f508a83dd7c1f5d0d08716439d312e1cb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b694989f508a83dd7c1f5d0d08716439d312e1cb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b694989f508a83dd7c1f5d0d08716439d312e1cb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b694989f508a83dd7c1f5d0d08716439d312e1cb/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d9c4ba536c522b8dc2194d4100270a159be7894a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d9c4ba536c522b8dc2194d4100270a159be7894a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d9c4ba536c522b8dc2194d4100270a159be7894a"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 15,
    "deletions": 6
  },
  "files": [
    {
      "sha": "c41b4981e33d7502cc5a08dead0fb1cfb49f7d58",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b694989f508a83dd7c1f5d0d08716439d312e1cb",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-26  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (skip_libstdcxx_probe_tests_prompt): Return 1 if probe\n+\t* tests need to be skipped.\n+\t* gdb.cp/exceptprint.exp: Update call to skip_libstdcxx_probe_tests.\n+\t* gdb.mi/mi-catch-cpp-exceptions.exp: Update call to\n+\tmi_skip_libstdcxx_probe_tests.\n+\n 2019-08-26  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* gdb.python/py-xmethods.exp: Use raw strings when passing"
    },
    {
      "sha": "f6dcd0f5bdf9a43c1d2b41d114ea3ec1aaaf373f",
      "filename": "gdb/testsuite/gdb.cp/exceptprint.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/gdb.cp/exceptprint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/gdb.cp/exceptprint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/exceptprint.exp?ref=b694989f508a83dd7c1f5d0d08716439d312e1cb",
      "patch": "@@ -27,7 +27,7 @@ if {![runto_main]} {\n     return -1\n }\n \n-if {![skip_libstdcxx_probe_tests]} {\n+if {[skip_libstdcxx_probe_tests]} {\n     untested \"could not find libstdc++ stap probe\"\n     return -1\n }"
    },
    {
      "sha": "29514978824162ade9f52a11c8ed3c627d980de6",
      "filename": "gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-catch-cpp-exceptions.exp?ref=b694989f508a83dd7c1f5d0d08716439d312e1cb",
      "patch": "@@ -36,7 +36,7 @@ mi_gdb_load ${binfile}\n if {![mi_run_to_main]} {\n     return -1\n }\n-set libstdcxx_probe_tests_supported [mi_skip_libstdcxx_probe_tests]\n+set libstdcxx_probe_tests_supported [expr ![mi_skip_libstdcxx_probe_tests]]\n \n # Grab some line numbers we'll need.\n set catch_1_lineno [gdb_get_line_number \"Catch 1\"]"
    },
    {
      "sha": "76805fb5ecd54ae3ac20f35dcc38e484616a9ba1",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b694989f508a83dd7c1f5d0d08716439d312e1cb/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=b694989f508a83dd7c1f5d0d08716439d312e1cb",
      "patch": "@@ -3158,20 +3158,21 @@ proc skip_unwinder_tests {} {\n     return $ok\n }\n \n-# Return 0 if we should skip tests that require the libstdc++ stap\n+# Return 1 if we should skip tests that require the libstdc++ stap\n # probes.  This must be invoked while gdb is running, after shared\n # libraries have been loaded.  PROMPT_REGEXP is the expected prompt.\n \n proc skip_libstdcxx_probe_tests_prompt { prompt_regexp } {\n-    set ok 0\n+    set supported 0\n     gdb_test_multiple \"info probe\" \"check for stap probe in libstdc++\" {\n \t-re \".*libstdcxx.*catch.*\\r\\n$prompt_regexp\" {\n-\t    set ok 1\n+\t    set supported 1\n \t}\n \t-re \"\\r\\n$prompt_regexp\" {\n \t}\n     } \"$prompt_regexp\"\n-    return $ok\n+    set skip [expr !$supported]\n+    return $skip\n }\n \n # As skip_libstdcxx_probe_tests_prompt, with gdb_prompt."
    }
  ]
}