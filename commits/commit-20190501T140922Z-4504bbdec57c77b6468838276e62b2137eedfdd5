{
  "sha": "4504bbdec57c77b6468838276e62b2137eedfdd5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDUwNGJiZGVjNTdjNzdiNjQ2ODgzODI3NmU2MmIyMTM3ZWVkZmRkNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-29T15:55:39Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-05-01T14:09:22Z"
    },
    "message": "Fix bug in assignment to nested packed structure\n\nA user at AdaCore found a case where assignment to a nested packed\nstructure would fail.  The bug is that ada_value_primitive_field\ndoesn't account for the situation where a field is not packed relative\nto its containing structure, but where the structure itself is packed\nin its parent.\n\ngdb/ChangeLog\n2019-05-01  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_value_primitive_field): Treat more fields as\n\tbitfields.\n\ngdb/testsuite/ChangeLog\n2019-05-01  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/packed_array_assign/aggregates.ads (Nested_Packed): New\n\trecord.\n\t(NPR): New variable.\n\t* gdb.ada/packed_array_assign.exp: Add nested packed assignment\n\ttest.",
    "tree": {
      "sha": "eabe799da4aabe549b571f5601c2d74b92940d79",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eabe799da4aabe549b571f5601c2d74b92940d79"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4504bbdec57c77b6468838276e62b2137eedfdd5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4504bbdec57c77b6468838276e62b2137eedfdd5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4504bbdec57c77b6468838276e62b2137eedfdd5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4504bbdec57c77b6468838276e62b2137eedfdd5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d48e62f4a263a871b7a62793e8000625735bc2f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d48e62f4a263a871b7a62793e8000625735bc2f6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d48e62f4a263a871b7a62793e8000625735bc2f6"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 27,
    "deletions": 3
  },
  "files": [
    {
      "sha": "eba0426463a6fbbd03884f8cd90ca63bf671ce9a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4504bbdec57c77b6468838276e62b2137eedfdd5",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_value_primitive_field): Treat more fields as\n+\tbitfields.\n+\n 2019-05-01  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_value_assign): Correctly compute starting offset"
    },
    {
      "sha": "1a566635b2dd02222d3614fc374180ee3244a9b2",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=4504bbdec57c77b6468838276e62b2137eedfdd5",
      "patch": "@@ -7189,9 +7189,10 @@ ada_value_primitive_field (struct value *arg1, int offset, int fieldno,\n   arg_type = ada_check_typedef (arg_type);\n   type = TYPE_FIELD_TYPE (arg_type, fieldno);\n \n-  /* Handle packed fields.  */\n-\n-  if (TYPE_FIELD_BITSIZE (arg_type, fieldno) != 0)\n+  /* Handle packed fields.  It might be that the field is not packed\n+     relative to its containing structure, but the structure itself is\n+     packed; in this case we must take the bit-field path.  */\n+  if (TYPE_FIELD_BITSIZE (arg_type, fieldno) != 0 || value_bitpos (arg1) != 0)\n     {\n       int bit_pos = TYPE_FIELD_BITPOS (arg_type, fieldno);\n       int bit_size = TYPE_FIELD_BITSIZE (arg_type, fieldno);"
    },
    {
      "sha": "0f96ea2eccf167aec0826a88831fbcf4f8e6ca06",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4504bbdec57c77b6468838276e62b2137eedfdd5",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/packed_array_assign/aggregates.ads (Nested_Packed): New\n+\trecord.\n+\t(NPR): New variable.\n+\t* gdb.ada/packed_array_assign.exp: Add nested packed assignment\n+\ttest.\n+\n 2019-05-01  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/packed_array_assign.exp: Add packed assignment"
    },
    {
      "sha": "407ea9cecbb3ed11cb5bf45d595ea8d78ca053ab",
      "filename": "gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/gdb.ada/packed_array_assign.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/packed_array_assign.exp?ref=4504bbdec57c77b6468838276e62b2137eedfdd5",
      "patch": "@@ -33,3 +33,6 @@ gdb_test \"print pra(1) := pr\" \\\n     \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\"\n gdb_test \"print pra(1)\" \\\n     \" = \\\\(packed_array_assign_w => 104, packed_array_assign_x => 2, packed_array_assign_y => 3\\\\)\"\n+\n+gdb_test \"print npr := (q000 => 3, r000 => (packed_array_assign_x => 6, packed_array_assign_y => 1, packed_array_assign_w => 117))\" \\\n+    \" = \\\\(q000 => 3, r000 => \\\\(packed_array_assign_w => 117, packed_array_assign_x => 6, packed_array_assign_y => 1\\\\)\\\\)\""
    },
    {
      "sha": "d1b0552bbd1c59ccab5bfdca8c73f7e2aa9b44d6",
      "filename": "gdb/testsuite/gdb.ada/packed_array_assign/aggregates.ads",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/gdb.ada/packed_array_assign/aggregates.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4504bbdec57c77b6468838276e62b2137eedfdd5/gdb/testsuite/gdb.ada/packed_array_assign/aggregates.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/packed_array_assign/aggregates.ads?ref=4504bbdec57c77b6468838276e62b2137eedfdd5",
      "patch": "@@ -25,11 +25,18 @@ package Aggregates is\n    type Packed_RecArr is array (Integer range <>) of Packed_Rec;\n    pragma Pack (Packed_RecArr);\n \n+   type Nested_Packed is record\n+      Q000 : Int;\n+      R000 : Packed_Rec;\n+   end record;\n+   pragma Pack (Nested_Packed);\n+\n    procedure Run_Test;\n \n private\n    PR : Packed_Rec := (Packed_Array_Assign_Y => 3,\n                        Packed_Array_Assign_W => 104,\n                        Packed_Array_Assign_X  => 2);\n    PRA : Packed_RecArr (1 .. 3);\n+   NPR : Nested_Packed := (q000 => 3, r000 => (packed_array_assign_x => 6, packed_array_assign_y => 1, packed_array_assign_w => 117));\n end Aggregates;"
    }
  ]
}