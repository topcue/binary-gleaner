{
  "sha": "79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzliMzc3YjNjZjNhMGU3MWUxZTQ3MTBjNGVlMWU2NWU3YTI3YTVkNA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-03T15:28:15Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-03T15:28:15Z"
    },
    "message": "Revert patch that disables building libctf for non-ELF based targets.\n\nRevert:\nbinutls\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n\n\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n\ttargets.\n\t(HAVE_LIBCTF): Define if libctf support is available.\n\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n\tdefined.\n\t* readelf.c: Likewise.\n\t* configure: Regenerate.\n\t* Makefile.in: Regenerate.\n\t* config.in: Regenerate.\n\ntop\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n\n\t* configure.ac (noconfigdirs): Add libctf if the target does not use\n\tthe ELF file format.\n\t* configure: Regenerate.",
    "tree": {
      "sha": "a3a53be8e92d9a1dc842a20f2624959f55ca2e80",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a3a53be8e92d9a1dc842a20f2624959f55ca2e80"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f6d070adb32e61c3c61e621c6566fc2d5af2232",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f6d070adb32e61c3c61e621c6566fc2d5af2232",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4f6d070adb32e61c3c61e621c6566fc2d5af2232"
    }
  ],
  "stats": {
    "total": 219,
    "additions": 37,
    "deletions": 182
  },
  "files": [
    {
      "sha": "5ab7ce37754e9118841bf80f48f074a680bad87c",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -1,3 +1,12 @@\n+2019-06-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tRevert:\n+\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (noconfigdirs): Add libctf if the target does not use\n+\tthe ELF file format.\n+\t* configure: Regenerate.\n+\n 2019-05-29  Nick Clifton  <nickc@redhat.com>\n \n \t* src-release.sh (do_proto_toplev): Add libctf to list of"
    },
    {
      "sha": "c98ed9435086666d2c7479bd0c350eddab5fa5b4",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -1,3 +1,19 @@\n+2019-06-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tRevert:\n+\t2019-05-29  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure.ac (LIBCTF): Export.  Set to empty for non-ELF based\n+\ttargets.\n+\t(HAVE_LIBCTF): Define if libctf support is available.\n+\t* Makefile.am (LIBCTF): Set value to @LIBCTF@.\n+\t* objdump.c: Make CTF code conditional upon HAVE_LIBCTF being\n+\tdefined.\n+\t* readelf.c: Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* config.in: Regenerate.\n+\n 2019-05-30  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* objdump.c (make_ctfsect): Drop cts_type, cts_flags, and"
    },
    {
      "sha": "128494ca9eef9523c5a67b830fde2abb856c4315",
      "filename": "binutils/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.am?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -161,7 +161,7 @@ BFDLIB = ../bfd/libbfd.la\n \n OPCODES = ../opcodes/libopcodes.la\n \n-LIBCTF = @LIBCTF@\n+LIBCTF = ../libctf/libctf.a\n \n LIBIBERTY = ../libiberty/libiberty.a\n \n@@ -229,7 +229,7 @@ windres_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)\n windmc_DEPENDENCIES =    $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)\n addr2line_DEPENDENCIES = $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)\n readelf_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(LIBCTF)\n-elfedit_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY)\n+elfedit_DEPENDENCIES = $(LIBINTL_DEP) $(LIBIBERTY)\n dllwrap_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY)\n bfdtest1_DEPENDENCIES =  $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)\n bfdtest2_DEPENDENCIES =  $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)"
    },
    {
      "sha": "480385bd67b9559b310749e841d38a580dc988d1",
      "filename": "binutils/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.in?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -443,7 +443,6 @@ LDFLAGS = @LDFLAGS@\n LEX = `if [ -f ../flex/flex ]; then echo ../flex/flex; else echo @LEX@; fi`\n LEXLIB = @LEXLIB@\n LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@\n-LIBCTF = @LIBCTF@\n LIBICONV = @LIBICONV@\n LIBINTL = @LIBINTL@\n LIBINTL_DEP = @LIBINTL_DEP@\n@@ -649,6 +648,7 @@ BULIBS = bucomm.c version.c filemode.c\n ELFLIBS = elfcomm.c\n BFDLIB = ../bfd/libbfd.la\n OPCODES = ../opcodes/libopcodes.la\n+LIBCTF = ../libctf/libctf.a\n LIBIBERTY = ../libiberty/libiberty.a\n POTFILES = $(CFILES) $(DEBUG_SRCS) $(HFILES)\n EXPECT = expect"
    },
    {
      "sha": "72ead4eb61288714b8144c807b9ad2ec072aedf6",
      "filename": "binutils/config.in",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/config.in?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -109,9 +109,6 @@\n /* Define if your <locale.h> file defines LC_MESSAGES. */\n #undef HAVE_LC_MESSAGES\n \n-/* Is libctf available? */\n-#undef HAVE_LIBCTF\n-\n /* Define to 1 if you have the <limits.h> header file. */\n #undef HAVE_LIMITS_H\n "
    },
    {
      "sha": "17cca12070f5a8622de7d07bf7293e0a309025d9",
      "filename": "binutils/configure",
      "status": "modified",
      "additions": 2,
      "deletions": 62,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -636,7 +636,6 @@ LTLIBOBJS\n LIBOBJS\n EMULATION_VECTOR\n EMULATION\n-LIBCTF\n OBJDUMP_PRIVATE_OFILES\n OBJDUMP_DEFS\n BUILD_INSTALL_MISC\n@@ -11524,7 +11523,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11527 \"configure\"\n+#line 11526 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11630,7 +11629,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11633 \"configure\"\n+#line 11632 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15083,64 +15082,6 @@ do\n     fi\n done\n \n-\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for libctf support\" >&5\n-$as_echo_n \"checking for libctf support... \" >&6; }\n-case \"${target}\" in\n-  *-*-pe | *-*-*vms* | *-*-darwin | *-*-*coff* | *-*-wince | *-*-mingw*)\n-    if ${bu_cv_libctf_support+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  bu_cv_libctf_support=no\n-fi\n-\n-    ;;\n-  *-*-aout | *-*-osf* | *-*-go32 | *-*-macos* | *-*-rhapsody*)\n-    if ${bu_cv_libctf_support+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  bu_cv_libctf_support=no\n-fi\n-\n-    ;;\n-  *-*-netbsdpe | *-*-cygwin* | *-*-pep | *-*-msdos | *-*-winnt)\n-    if ${bu_cv_libctf_support+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  bu_cv_libctf_support=no\n-fi\n-\n-    ;;\n-  ns32k-*-* | pdp11-*-* | *-*-aix* | *-*-netbsdaout)\n-    if ${bu_cv_libctf_support+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  bu_cv_libctf_support=no\n-fi\n-\n-    ;;\n-  *)\n-    if ${bu_cv_libctf_support+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  bu_cv_libctf_support=yes\n-fi\n-\n-  ;;\n-esac\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $bu_cv_libctf_support\" >&5\n-$as_echo \"$bu_cv_libctf_support\" >&6; }\n-if test $bu_cv_libctf_support = yes; then\n-\n-$as_echo \"#define HAVE_LIBCTF 1\" >>confdefs.h\n-\n-fi\n-LIBCTF=\n-if test $bu_cv_libctf_support = yes; then\n-  LIBCTF=../libctf/libctf.a\n-fi\n-\n-\n # Uniq objdump private vector, build objdump target ofiles.\n od_files=\n f=\"\"\n@@ -15199,7 +15140,6 @@ OBJDUMP_DEFS=\"${OBJDUMP_DEFS} -DOBJDUMP_PRIVATE_VECTORS=\\\"${OBJDUMP_PRIVATE_VECT\n \n \n \n-\n cat >>confdefs.h <<_ACEOF\n #define TARGET \"${target}\"\n _ACEOF"
    },
    {
      "sha": "b1cd4552f2db68e5166fc8030153f59ef34b5a3b",
      "filename": "binutils/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure.ac?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -393,35 +393,6 @@ changequote([,])dnl\n     fi\n done\n \n-\n-AC_MSG_CHECKING([for libctf support])\n-case \"${target}\" in\n-  *-*-pe | *-*-*vms* | *-*-darwin | *-*-*coff* | *-*-wince | *-*-mingw*)\n-    AC_CACHE_VAL(bu_cv_libctf_support, bu_cv_libctf_support=no)\n-    ;;\n-  *-*-aout | *-*-osf* | *-*-go32 | *-*-macos* | *-*-rhapsody*)\n-    AC_CACHE_VAL(bu_cv_libctf_support, bu_cv_libctf_support=no)\n-    ;;\n-  *-*-netbsdpe | *-*-cygwin* | *-*-pep | *-*-msdos | *-*-winnt)\n-    AC_CACHE_VAL(bu_cv_libctf_support, bu_cv_libctf_support=no)\n-    ;;\n-  ns32k-*-* | pdp11-*-* | *-*-aix* | *-*-netbsdaout)\n-    AC_CACHE_VAL(bu_cv_libctf_support, bu_cv_libctf_support=no)\n-    ;;\n-  *)\n-    AC_CACHE_VAL(bu_cv_libctf_support, bu_cv_libctf_support=yes)\n-  ;;      \n-esac\n-AC_MSG_RESULT($bu_cv_libctf_support)\n-if test $bu_cv_libctf_support = yes; then\n-  AC_DEFINE(HAVE_LIBCTF, 1, [Is libctf available?])\n-fi\n-LIBCTF=\n-if test $bu_cv_libctf_support = yes; then\n-  LIBCTF=../libctf/libctf.a\n-fi\n-\n-\n # Uniq objdump private vector, build objdump target ofiles.\n od_files=\n f=\"\"\n@@ -478,7 +449,6 @@ AC_SUBST(BUILD_MISC)\n AC_SUBST(BUILD_INSTALL_MISC)\n AC_SUBST(OBJDUMP_DEFS)\n AC_SUBST(OBJDUMP_PRIVATE_OFILES)\n-AC_SUBST(LIBCTF)\n \n AC_DEFINE_UNQUOTED(TARGET, \"${target}\", [Configured target name.])\n "
    },
    {
      "sha": "7fa622a364935dad2dfef7103c5000b9a1ede678",
      "filename": "binutils/doc/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/doc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/doc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/Makefile.in?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -285,7 +285,6 @@ LDFLAGS = @LDFLAGS@\n LEX = @LEX@\n LEXLIB = @LEXLIB@\n LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@\n-LIBCTF = @LIBCTF@\n LIBICONV = @LIBICONV@\n LIBINTL = @LIBINTL@\n LIBINTL_DEP = @LIBINTL_DEP@"
    },
    {
      "sha": "d9c8cea36491d8f6f400f2ecde028055d9d79d42",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 7,
      "deletions": 29,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -56,9 +56,7 @@\n #include \"bucomm.h\"\n #include \"elfcomm.h\"\n #include \"dwarf.h\"\n-#ifdef HAVE_LIBCTF\n #include \"ctf-api.h\"\n-#endif\n #include \"getopt.h\"\n #include \"safe-ctype.h\"\n #include \"dis-asm.h\"\n@@ -101,11 +99,9 @@ static bfd_boolean with_source_code;\t/* -S */\n static int show_raw_insn;\t\t/* --show-raw-insn */\n static int dump_dwarf_section_info;\t/* --dwarf */\n static int dump_stab_section_info;\t/* --stabs */\n-#ifdef HAVE_LIBCTF\n static int dump_ctf_section_info;       /* --ctf */\n static char *dump_ctf_section_name;\n static char *dump_ctf_parent_name;\t/* --ctf-parent */\n-#endif\n static int do_demangle;\t\t\t/* -C, --demangle */\n static bfd_boolean disassemble;\t\t/* -d */\n static bfd_boolean disassemble_all;\t/* -D */\n@@ -232,12 +228,8 @@ usage (FILE *stream, int status)\n           =frames-interp,=str,=loc,=Ranges,=pubtypes,\\n\\\n           =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,\\n\\\n           =addr,=cu_index,=links,=follow-links]\\n\\\n-                           Display DWARF info in the file\\n\"));\n-#ifdef HAVE_LIBCTF\n-  fprintf (stream, _(\"\\\n-  --ctf=SECTION            Display CTF info from SECTION\\n\"));\n-#endif\n-  fprintf (stream, _(\"\\\n+                           Display DWARF info in the file\\n\\\n+  --ctf=SECTION            Display CTF info from SECTION\\n\\\n   -t, --syms               Display the contents of the symbol table(s)\\n\\\n   -T, --dynamic-syms       Display the contents of the dynamic symbol table\\n\\\n   -r, --reloc              Display the relocation entries in the file\\n\\\n@@ -286,11 +278,8 @@ usage (FILE *stream, int status)\n       --dwarf-start=N        Display DIEs starting with N, at the same depth\\n\\\n                              or deeper\\n\\\n       --dwarf-check          Make additional dwarf internal consistency checks.\\\n-      \\n\"));\n-#ifdef HAVE_LIBCTF\n-      fprintf (stream, _(\"\\\n+      \\n\\\n       --ctf-parent=SECTION     Use SECTION as the CTF parent\\n\\n\"));\n-#endif\n       list_supported_targets (program_name, stream);\n       list_supported_architectures (program_name, stream);\n \n@@ -325,11 +314,9 @@ enum option_values\n     OPTION_DWARF_START,\n     OPTION_RECURSE_LIMIT,\n     OPTION_NO_RECURSE_LIMIT,\n-#ifdef HAVE_LIBCTF\n+    OPTION_INLINES,\n     OPTION_CTF,\n-    OPTION_CTF_PARENT,\n-#endif\n-    OPTION_INLINES\n+    OPTION_CTF_PARENT\n   };\n \n static struct option long_options[]=\n@@ -372,10 +359,8 @@ static struct option long_options[]=\n   {\"special-syms\", no_argument, &dump_special_syms, 1},\n   {\"include\", required_argument, NULL, 'I'},\n   {\"dwarf\", optional_argument, NULL, OPTION_DWARF},\n-#ifdef HAVE_LIBCTF\n   {\"ctf\", required_argument, NULL, OPTION_CTF},\n   {\"ctf-parent\", required_argument, NULL, OPTION_CTF_PARENT},\n-#endif\n   {\"stabs\", no_argument, NULL, 'G'},\n   {\"start-address\", required_argument, NULL, OPTION_START_ADDRESS},\n   {\"stop-address\", required_argument, NULL, OPTION_STOP_ADDRESS},\n@@ -3214,7 +3199,6 @@ dump_bfd_header (bfd *abfd)\n }\n \f\n \n-#ifdef HAVE_LIBCTF\n /* Formatting callback function passed to ctf_dump.  Returns either the pointer\n    it is passed, or a pointer to newly-allocated storage, in which case\n    dump_ctf() will free it when it no longer needs it.  */\n@@ -3232,7 +3216,6 @@ dump_ctf_indent_lines (ctf_sect_names_t sect ATTRIBUTE_UNUSED,\n }\n \n /* Make a ctfsect suitable for ctf_bfdopen_ctfsect().  */\n-\n static ctf_sect_t\n make_ctfsect (const char *name, bfd_byte *data,\n \t      bfd_size_type size)\n@@ -3345,8 +3328,8 @@ dump_ctf (bfd *abfd, const char *sect_name, const char *parent_name)\n   free (parentdata);\n   free (ctfdata);\n }\n-#endif /* HAVE_LIBCTF */\n \n+\f\n static void\n dump_bfd_private_header (bfd *abfd)\n {\n@@ -4057,10 +4040,8 @@ dump_bfd (bfd *abfd, bfd_boolean is_mainfile)\n     dump_symbols (abfd, TRUE);\n   if (dump_dwarf_section_info)\n     dump_dwarf (abfd);\n-#ifdef HAVE_LIBCTF\n   if (dump_ctf_section_info)\n     dump_ctf (abfd, dump_ctf_section_name, dump_ctf_parent_name);\n-#endif\n   if (dump_stab_section_info)\n     dump_stabs (abfd);\n   if (dump_reloc_info && ! disassemble)\n@@ -4500,7 +4481,6 @@ main (int argc, char **argv)\n \tcase OPTION_DWARF_CHECK:\n \t  dwarf_check = TRUE;\n \t  break;\n-#ifdef HAVE_LIBCTF\n         case OPTION_CTF:\n           dump_ctf_section_info = TRUE;\n           dump_ctf_section_name = xstrdup (optarg);\n@@ -4509,7 +4489,6 @@ main (int argc, char **argv)\n \tcase OPTION_CTF_PARENT:\n \t  dump_ctf_parent_name = xstrdup (optarg);\n \t  break;\n-#endif\n \tcase 'G':\n \t  dump_stab_section_info = TRUE;\n \t  seenflag = TRUE;\n@@ -4569,10 +4548,9 @@ main (int argc, char **argv)\n     }\n \n   free_only_list ();\n-#ifdef HAVE_LIBCTF\n   free (dump_ctf_section_name);\n   free (dump_ctf_parent_name);\n-#endif\n+\n   END_PROGRESS (program_name);\n \n   return exit_status;"
    },
    {
      "sha": "febfd1a082086422f6627634d2c49c74adc31dd1",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -60,9 +60,7 @@\n #include \"bucomm.h\"\n #include \"elfcomm.h\"\n #include \"dwarf.h\"\n-#ifdef HAVE_LIBCTF\n #include \"ctf-api.h\"\n-#endif\n \n #include \"elf/common.h\"\n #include \"elf/external.h\"\n@@ -186,9 +184,7 @@ typedef struct elf_section_list\n #define DEBUG_DUMP\t(1 << 2)\t/* The -w command line switch.  */\n #define STRING_DUMP     (1 << 3)\t/* The -p command line switch.  */\n #define RELOC_DUMP      (1 << 4)\t/* The -R command line switch.  */\n-#ifdef HAVE_LIBCTF\n #define CTF_DUMP        (1 << 5)        /* The --ctf command line switch.  */\n-#endif\n \n typedef unsigned char dump_type;\n \n@@ -255,20 +251,16 @@ static bfd_boolean do_dump = FALSE;\n static bfd_boolean do_version = FALSE;\n static bfd_boolean do_histogram = FALSE;\n static bfd_boolean do_debugging = FALSE;\n-#ifdef HAVE_LIBCTF\n static bfd_boolean do_ctf = FALSE;\n-#endif\n static bfd_boolean do_arch = FALSE;\n static bfd_boolean do_notes = FALSE;\n static bfd_boolean do_archive_index = FALSE;\n static bfd_boolean is_32bit_elf = FALSE;\n static bfd_boolean decompress_dumps = FALSE;\n \n-#ifdef HAVE_LIBCTF\n static char *dump_ctf_parent_name;\n static char *dump_ctf_symtab_name;\n static char *dump_ctf_strtab_name;\n-#endif\n \n struct group_list\n {\n@@ -4409,12 +4401,10 @@ get_section_type_name (Filedata * filedata, unsigned int sh_type)\n #define OPTION_DWARF_DEPTH\t514\n #define OPTION_DWARF_START\t515\n #define OPTION_DWARF_CHECK\t516\n-#ifdef HAVE_LIBCTF\n #define OPTION_CTF_DUMP\t\t517\n #define OPTION_CTF_PARENT\t518\n #define OPTION_CTF_SYMBOLS\t519\n #define OPTION_CTF_STRINGS\t520\n-#endif\n \n static struct option options[] =\n {\n@@ -4453,13 +4443,11 @@ static struct option options[] =\n   {\"dwarf-start\",      required_argument, 0, OPTION_DWARF_START},\n   {\"dwarf-check\",      no_argument, 0, OPTION_DWARF_CHECK},\n \n-#ifdef HAVE_LIBCTF\n   {\"ctf\",              required_argument, 0, OPTION_CTF_DUMP},\n \n   {\"ctf-symbols\",      required_argument, 0, OPTION_CTF_SYMBOLS},\n   {\"ctf-strings\",      required_argument, 0, OPTION_CTF_STRINGS},\n   {\"ctf-parent\",       required_argument, 0, OPTION_CTF_PARENT},\n-#endif\n \n   {\"version\",\t       no_argument, 0, 'v'},\n   {\"wide\",\t       no_argument, 0, 'W'},\n@@ -4510,7 +4498,6 @@ usage (FILE * stream)\n   --dwarf-depth=N        Do not display DIEs at depth N or greater\\n\\\n   --dwarf-start=N        Display DIEs starting with N, at the same depth\\n\\\n                          or deeper\\n\"));\n-#ifdef HAVE_LIBCTF\n   fprintf (stream, _(\"\\\n   --ctf=<number|name>    Display CTF info from section <number|name>\\n\\\n   --ctf-parent=<number|name>\\n\\\n@@ -4519,7 +4506,6 @@ usage (FILE * stream)\n                          Use section <number|name> as the CTF external symtab\\n\\n\\\n   --ctf-strings=<number|name>\\n\\\n                          Use section <number|name> as the CTF external strtab\\n\\n\"));\n-#endif\n \n #ifdef SUPPORT_DISASSEMBLY\n   fprintf (stream, _(\"\\\n@@ -4748,7 +4734,6 @@ parse_args (Filedata * filedata, int argc, char ** argv)\n \tcase OPTION_DWARF_CHECK:\n \t  dwarf_check = TRUE;\n \t  break;\n-#ifdef HAVE_LIBCTF\n \tcase OPTION_CTF_DUMP:\n \t  do_ctf = TRUE;\n \t  request_dump (filedata, CTF_DUMP);\n@@ -4762,7 +4747,6 @@ parse_args (Filedata * filedata, int argc, char ** argv)\n \tcase OPTION_CTF_PARENT:\n \t  dump_ctf_parent_name = strdup (optarg);\n \t  break;\n-#endif\n \tcase OPTION_DYN_SYMS:\n \t  do_dyn_syms = TRUE;\n \t  break;\n@@ -13824,7 +13808,6 @@ dump_section_as_bytes (Elf_Internal_Shdr *  section,\n   return TRUE;\n }\n \n-#ifdef HAVE_LIBCTF\n static ctf_sect_t *\n shdr_to_ctf_sect (ctf_sect_t *buf, Elf_Internal_Shdr *shdr, Filedata *filedata)\n {\n@@ -13978,7 +13961,6 @@ dump_section_as_ctf (Elf_Internal_Shdr * section, Filedata * filedata)\n   free (strdata);\n   return ret;\n }\n-#endif /* HAVE_LIBCTF */\n \n static bfd_boolean\n load_specific_debug_section (enum dwarf_section_display_enum  debug,\n@@ -14318,13 +14300,11 @@ process_section_contents (Filedata * filedata)\n \t    res = FALSE;\n \t}\n \n-#ifdef HAVE_LIBCTF\n       if (dump & CTF_DUMP)\n \t{\n \t  if (! dump_section_as_ctf (section, filedata))\n \t    res = FALSE;\n \t}\n-#endif\n     }\n \n   /* Check to see if the user requested a\n@@ -20204,11 +20184,9 @@ main (int argc, char ** argv)\n   if (cmdline.dump_sects != NULL)\n     free (cmdline.dump_sects);\n \n-#ifdef HAVE_LIBCTF\n   free (dump_ctf_symtab_name);\n   free (dump_ctf_strtab_name);\n   free (dump_ctf_parent_name);\n-#endif\n \n   return err ? EXIT_FAILURE : EXIT_SUCCESS;\n }"
    },
    {
      "sha": "3e95ce50ffb15a53e3d7aa66515937d1bd22d43c",
      "filename": "configure",
      "status": "modified",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/configure?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -3604,22 +3604,6 @@ case \"${target}\" in\n     ;;\n esac\n \n-# Targets that do not use the ELF file format cannot support libctf.\n-case \"${target}\" in\n-  *-*-pe | *-*-*vms* | *-*-darwin | *-*-*coff* | *-*-wince | *-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  *-*-aout | *-*-osf* | *-*-go32 | *-*-macos* | *-*-rhapsody*)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  *-*-netbsdpe | *-*-cygwin* | *-*-pep | *-*-msdos | *-*-winnt)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  ns32k-*-* | pdp11-*-* | *-*-aix* | *-*-netbsdaout)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-esac\n-\n case \"${target}\" in\n   *-*-chorusos)\n     ;;"
    },
    {
      "sha": "c84263c516bc9131565fbaaf4d17d2e77bd9aa8f",
      "filename": "configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/configure.ac?ref=79b377b3cf3a0e71e1e4710c4ee1e65e7a27a5d4",
      "patch": "@@ -901,22 +901,6 @@ case \"${target}\" in\n     ;;\n esac\n \n-# Targets that do not use the ELF file format cannot support libctf.\n-case \"${target}\" in\n-  *-*-pe | *-*-*vms* | *-*-darwin | *-*-*coff* | *-*-wince | *-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  *-*-aout | *-*-osf* | *-*-go32 | *-*-macos* | *-*-rhapsody*)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  *-*-netbsdpe | *-*-cygwin* | *-*-pep | *-*-msdos | *-*-winnt)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-  ns32k-*-* | pdp11-*-* | *-*-aix* | *-*-netbsdaout)\n-    noconfigdirs=\"$noconfigdirs libctf\"\n-    ;;\n-esac\n-\n case \"${target}\" in\n   *-*-chorusos)\n     ;;"
    }
  ]
}