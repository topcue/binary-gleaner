{
  "sha": "a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTBjMWVlYmE5YjEzYjc1OWIwNThkZDU2NDBjY2IwZGMyNjMwYTcyMw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-02-02T15:40:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-02-02T15:40:50Z"
    },
    "message": "gdb/dwarf: change read_loclist_index complaints into errors\n\nUnlike read_rnglists_index, read_loclist_index uses complaints when it\ndetects an inconsistency (a DW_FORM_loclistx value without a\n.debug_loclists section or an offset outside of the section).  I really\nthink they should be errors, since there's no point in continuing if\nthis situation happens, we will likely segfault or read garbage.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (read_loclist_index): Change complaints into\n\terrors.\n\nChange-Id: Ic3a1cf6e682d47cb6e739dd76fd7ca5be2637e10",
    "tree": {
      "sha": "0f811556652afc721275b1c2c9b28515a1b3a762",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f811556652afc721275b1c2c9b28515a1b3a762"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0c1eeba9b13b759b058dd5640ccb0dc2630a723/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5424d7ed94cf5a7ca24636ab9f4e6d5c353fc0d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5424d7ed94cf5a7ca24636ab9f4e6d5c353fc0d3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5424d7ed94cf5a7ca24636ab9f4e6d5c353fc0d3"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 16,
    "deletions": 8
  },
  "files": [
    {
      "sha": "dcbfc77761d5b5bd568cab39ea701bc86b8b59bb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0c1eeba9b13b759b058dd5640ccb0dc2630a723/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0c1eeba9b13b759b058dd5640ccb0dc2630a723/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-02  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/read.c (read_loclist_index): Change complaints into\n+\terrors.\n+\n 2021-02-02  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/24620"
    },
    {
      "sha": "a9f7ce3a3122e4cc209153a6615df577d0c43fa9",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0c1eeba9b13b759b058dd5640ccb0dc2630a723/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0c1eeba9b13b759b058dd5640ccb0dc2630a723/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=a0c1eeba9b13b759b058dd5640ccb0dc2630a723",
      "patch": "@@ -20218,19 +20218,22 @@ read_loclist_index (struct dwarf2_cu *cu, ULONGEST loclist_index)\n \n   section->read (objfile);\n   if (section->buffer == NULL)\n-    complaint (_(\"DW_FORM_loclistx used without .debug_loclists \"\n-\t\t\"section [in module %s]\"), objfile_name (objfile));\n+    error (_(\"DW_FORM_loclistx used without .debug_loclists \"\n+\t     \"section [in module %s]\"), objfile_name (objfile));\n+\n   struct loclists_rnglists_header header;\n   read_loclists_rnglists_header (&header, section);\n   if (loclist_index >= header.offset_entry_count)\n-    complaint (_(\"DW_FORM_loclistx pointing outside of \"\n-\t\t\".debug_loclists offset array [in module %s]\"),\n-\t\tobjfile_name (objfile));\n+    error (_(\"DW_FORM_loclistx pointing outside of \"\n+\t     \".debug_loclists offset array [in module %s]\"),\n+\t   objfile_name (objfile));\n+\n   if (loclist_base + loclist_index * cu->header.offset_size\n \t>= section->size)\n-    complaint (_(\"DW_FORM_loclistx pointing outside of \"\n-\t\t\".debug_loclists section [in module %s]\"),\n-\t\tobjfile_name (objfile));\n+    error (_(\"DW_FORM_loclistx pointing outside of \"\n+\t     \".debug_loclists section [in module %s]\"),\n+\t   objfile_name (objfile));\n+\n   const gdb_byte *info_ptr\n     = section->buffer + loclist_base + loclist_index * cu->header.offset_size;\n "
    }
  ]
}