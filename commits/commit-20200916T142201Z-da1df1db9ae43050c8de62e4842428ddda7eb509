{
  "sha": "da1df1db9ae43050c8de62e4842428ddda7eb509",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGExZGYxZGI5YWU0MzA1MGM4ZGU2MmU0ODQyNDI4ZGRkYTdlYjUwOQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-09-11T13:04:01Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-09-16T14:22:01Z"
    },
    "message": "gdb/breakpoint: make a copy of the \"commands\" command's argument\n\nWhen GDB reads commands from the input, its internal buffer is re-used\nfor each line.  This is usually just fine because commands are\nexecuted in order; by the time we read the next line, we are already\ndone with the current line.  However, a problematic case is breakpoint\ncommands that are input from a script.  The header (e.g. commands 1 2)\nis overwritten with the next line before the breakpoint numbers are\nprocessed completely.\n\nFor example, suppose we have the following script:\n\n  break main\n  break main\n  commands 1 2\n    print 100123\n  end\n\nand source this script:\n\n  (gdb) source script.gdb\n  Breakpoint 1 at 0x1245: file main.cpp, line 27.\n  Breakpoint 2 at 0x1245: file main.cpp, line 27.\n  No breakpoint number 123.\n\nNote the \"No breakpoint number 123.\" error message.  This happens\nbecause GDB first reads \"commands 1 2\" into its internal buffer\n\n  buffer -> \"commands 1 2\"\n\nand then starts parsing the breakpoint numbers.  After parsing the first\ntoken, the \"next token\" pointer is as below:\n\n  buffer -> \"commands 1 2\"\n  next-token -----------^\n\nSo, if we continue parsing, we would tokenize \"2\" correctly.  However,\nbefore parsing the next number, GDB reads the commands to attach them\nto breakpoint 1.  Reading the commands causes the buffer to be\noverwritten:\n\n  buffer -> \"  print 100123\"\n  next-token -----------^\n\nSo, the next time we parse the breakpoint number, we read \"123\".\n\nTo fix, simply create a copy of the arguments of the header.\n\ngdb/ChangeLog:\n2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* breakpoint.c (commands_command_1): Make a copy of the 'arg'\n\targument.\n\ngdb/testsuite/ChangeLog:\n2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* gdb.base/bp-cmds-sourced-script.c: New file.\n\t* gdb.base/bp-cmds-sourced-script.exp: New test.\n\t* gdb.base/bp-cmds-sourced-script.gdb: New file.",
    "tree": {
      "sha": "892c7a196f1d9a241979bcd3f2bc4e5f0841804f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/892c7a196f1d9a241979bcd3f2bc4e5f0841804f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/da1df1db9ae43050c8de62e4842428ddda7eb509",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da1df1db9ae43050c8de62e4842428ddda7eb509",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/da1df1db9ae43050c8de62e4842428ddda7eb509",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da1df1db9ae43050c8de62e4842428ddda7eb509/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36068e2fa5460e6cfa1f5f359df6f37c497aab50",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/36068e2fa5460e6cfa1f5f359df6f37c497aab50",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/36068e2fa5460e6cfa1f5f359df6f37c497aab50"
    }
  ],
  "stats": {
    "total": 104,
    "additions": 103,
    "deletions": 1
  },
  "files": [
    {
      "sha": "85c733e203fe968d77181a61236471616a98a4e1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* breakpoint.c (commands_command_1): Make a copy of the 'arg'\n+\targument.\n+\n 2020-09-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Delete."
    },
    {
      "sha": "3fb259ff40964f1442d69121536957ae40b6fe5b",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -1229,13 +1229,23 @@ commands_command_1 (const char *arg, int from_tty,\n \n   if (arg == NULL || !*arg)\n     {\n+      /* Argument not explicitly given.  Synthesize it.  */\n       if (breakpoint_count - prev_breakpoint_count > 1)\n \tnew_arg = string_printf (\"%d-%d\", prev_breakpoint_count + 1,\n \t\t\t\t breakpoint_count);\n       else if (breakpoint_count > 0)\n \tnew_arg = string_printf (\"%d\", breakpoint_count);\n-      arg = new_arg.c_str ();\n     }\n+  else\n+    {\n+      /* Create a copy of ARG.  This is needed because the \"commands\"\n+\t command may be coming from a script.  In that case, the read\n+\t line buffer is going to be overwritten in the lambda of\n+\t 'map_breakpoint_numbers' below when reading the next line\n+\t before we are are done parsing the breakpoint numbers.  */\n+      new_arg = arg;\n+    }\n+  arg = new_arg.c_str ();\n \n   map_breakpoint_numbers\n     (arg, [&] (breakpoint *b)"
    },
    {
      "sha": "848f35ff7ec4e2e2e3255fb80a28c5b04e23f188",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-16  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* gdb.base/bp-cmds-sourced-script.c: New file.\n+\t* gdb.base/bp-cmds-sourced-script.exp: New test.\n+\t* gdb.base/bp-cmds-sourced-script.gdb: New file.\n+\n 2020-09-16  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdbserver-support.exp (gdbserver_exit): Make sure we"
    },
    {
      "sha": "f4825c8a7c1186e3fc77e381a89369df031109f1",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-sourced-script.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-sourced-script.c?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "db551f19180490bcfb9ff013e5bb1793486b84be",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-sourced-script.exp",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-sourced-script.exp?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -0,0 +1,39 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+# Test that breakpoint commands entered in a GDB script work as\n+# expected when the commands are defined for multiple breakpoints.\n+\n+standard_testfile\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile]} {\n+    return -1\n+}\n+\n+set script_file ${srcdir}/${subdir}/$testfile.gdb\n+\n+gdb_test \"source $script_file\" \\\n+    \"Breakpoint 1\\[^\\r\\n\\]*\\r\\nBreakpoint 2\\[^\\r\\n\\]*\" \\\n+    \"source the script\"\n+\n+gdb_run_cmd\n+\n+gdb_test_multiple \"\" \"commands executed twice\" {\n+    -re \"\\\\$${decimal} = 100123\\r\\n\\\\$${decimal} = 100123\\r\\n$gdb_prompt $\" {\n+\tpass $gdb_test_name\n+    }\n+}\n+\n+gdb_continue_to_end"
    },
    {
      "sha": "228fa388db1abf9df4d45b41b732c8646e5ad59d",
      "filename": "gdb/testsuite/gdb.base/bp-cmds-sourced-script.gdb",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.gdb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/da1df1db9ae43050c8de62e4842428ddda7eb509/gdb/testsuite/gdb.base/bp-cmds-sourced-script.gdb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/bp-cmds-sourced-script.gdb?ref=da1df1db9ae43050c8de62e4842428ddda7eb509",
      "patch": "@@ -0,0 +1,20 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+break main\n+break main\n+commands 1 2\n+  print 100123\n+end"
    }
  ]
}