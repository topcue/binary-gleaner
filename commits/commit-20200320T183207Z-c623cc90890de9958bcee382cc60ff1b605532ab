{
  "sha": "c623cc90890de9958bcee382cc60ff1b605532ab",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzYyM2NjOTA4OTBkZTk5NThiY2VlMzgyY2M2MGZmMWI2MDU1MzJhYg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-20T18:32:07Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-20T18:32:07Z"
    },
    "message": "[gdb/testsuite] Fix gdb.threads/omp-par-scope.exp XPASS\n\nWhen running test-case gdb.threads/omp-par-scope.exp, I get this XPASS:\n...\nXPASS: gdb.threads/omp-par-scope.exp: nested_parallel: outer_threads: \\\n  outer stop: get valueof \"num\"\n...\nfor test:\n...\n           set thread_num [get_valueof \"\" \"num\" \"unknown\"]\n...\n\nThe intention of the test is to get the value of local variable num, which\nhas been set to:\n...\n    int num = omp_get_thread_num ();\n...\nbut the actually printed value is 'num':\n...\n(gdb) print num^M\n$76 = num^M\n...\n\nThis is due to the fact that num is missing in the locals, so instead we find\nthe enum member 'num' of enum expression_operator in glibc/intl/plural-exp.h.\n\nFix this by getting the value using a new proc get_local_valueof, which uses\nthe \"info locals\" commands to get the value.\n\nTested on x86_64-linux, with gcc 7.5.0 (where the test xfails) and gcc\n10.0.1 (where the test passes).",
    "tree": {
      "sha": "25fb53e368a2d236887304a82d9618e61c7419fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25fb53e368a2d236887304a82d9618e61c7419fa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c623cc90890de9958bcee382cc60ff1b605532ab",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c623cc90890de9958bcee382cc60ff1b605532ab",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c623cc90890de9958bcee382cc60ff1b605532ab",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c623cc90890de9958bcee382cc60ff1b605532ab/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c884cc46193c98fd0b90ce8a79c081f6a1c18cc6"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 27,
    "deletions": 1
  },
  "files": [
    {
      "sha": "c70eef428083b21f11da48a32b4f65cbb661c06b",
      "filename": "gdb/testsuite/gdb.threads/omp-par-scope.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c623cc90890de9958bcee382cc60ff1b605532ab/gdb/testsuite/gdb.threads/omp-par-scope.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c623cc90890de9958bcee382cc60ff1b605532ab/gdb/testsuite/gdb.threads/omp-par-scope.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/omp-par-scope.exp?ref=c623cc90890de9958bcee382cc60ff1b605532ab",
      "patch": "@@ -273,7 +273,9 @@ with_test_prefix \"nested_parallel\" {\n \t    gdb_continue_to_breakpoint \"at printf\"\n \n \t    if {$have_older_gcc} { setup_xfail \"*-*-*\" }\n-\t    set thread_num [get_valueof \"\" \"num\" \"unknown\"]\n+\t    # Use get_local_valueof instead of get_valueof to avoid picking up\n+\t    # some random 'num' in a shared library.\n+\t    set thread_num [get_local_valueof \"num\" \"unknown\"]\n \n \t    gdb_test \"print file_scope_var\" \"= 9876\"\n \t    if {$have_older_gcc} { setup_xfail \"*-*-*\" }"
    },
    {
      "sha": "e17ac0ef75be4613d72b2bd92d540fa50cc77f33",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c623cc90890de9958bcee382cc60ff1b605532ab/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c623cc90890de9958bcee382cc60ff1b605532ab/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=c623cc90890de9958bcee382cc60ff1b605532ab",
      "patch": "@@ -6173,6 +6173,30 @@ proc get_valueof { fmt exp default {test \"\"} } {\n     return ${val}\n }\n \n+# Retrieve the value of local var EXP in the inferior.  DEFAULT is used as\n+# fallback if print fails.  TEST is the test message to use.  It can be\n+# omitted, in which case a test message is built from EXP.\n+\n+proc get_local_valueof { exp default {test \"\"} } {\n+    global gdb_prompt\n+\n+    if {$test == \"\" } {\n+\tset test \"get local valueof \\\"${exp}\\\"\"\n+    }\n+\n+    set val ${default}\n+    gdb_test_multiple \"info locals ${exp}\" \"$test\" {\n+\t-re \"$exp = (\\[^\\r\\n\\]*)\\[\\r\\n\\]*$gdb_prompt $\" {\n+\t    set val $expect_out(1,string)\n+\t    pass \"$test\"\n+\t}\n+\ttimeout {\n+\t    fail \"$test (timeout)\"\n+\t}\n+    }\n+    return ${val}\n+}\n+\n # Retrieve the value of EXP in the inferior, as a signed decimal value\n # (using \"print /d\").  DEFAULT is used as fallback if print fails.\n # TEST is the test message to use.  It can be omitted, in which case"
    }
  ]
}