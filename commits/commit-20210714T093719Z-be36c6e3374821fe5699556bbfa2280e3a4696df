{
  "sha": "be36c6e3374821fe5699556bbfa2280e3a4696df",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmUzNmM2ZTMzNzQ4MjFmZTU2OTk1NTZiYmZhMjI4MGUzYTQ2OTZkZg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-14T09:37:19Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-14T09:37:19Z"
    },
    "message": "[gdb/testsuite] Fix gdb.base/gold-gdb-index.exp\n\nWhen running test-case gdb.base/gold-gdb-index.exp on openSUSE Tumbleweed,\nI run into:\n...\nFAIL: gdb.base/gold-gdb-index.exp: maint info symtabs\n...\n\nThis is due to a dummy .gdb_index:\n...\nContents of the .gdb_index section:\n\nVersion 7\n\nCU table:\n\nTU table:\n\nAddress table:\n\nSymbol table:\n...\n\nThe dummy .gdb_index is ignored when loading the symbols, and instead partial\nsymbols are used.  Consequently, we get the same result as if we'd removed\n-Wl,--gdb-index from the compilation.\n\nPresumably, gold fails to generate a proper .gdb_index because it lacks\nDWARF5 support.\n\nAnyway, without a proper .gdb_index we can't test the gdb behaviour we're\ntrying to excercise.  Fix this by detecting whether we actually used a\n.gdb_index for symbol loading.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-07-14  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (have_index): New proc.\n\t* gdb.base/gold-gdb-index.exp: Use have_index.",
    "tree": {
      "sha": "e09ee12055e325b11b3569badf38ecc2deb9e36d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e09ee12055e325b11b3569badf38ecc2deb9e36d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/be36c6e3374821fe5699556bbfa2280e3a4696df",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be36c6e3374821fe5699556bbfa2280e3a4696df",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/be36c6e3374821fe5699556bbfa2280e3a4696df",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be36c6e3374821fe5699556bbfa2280e3a4696df/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "90d7916ac136613b8118f6429c3436664a700a2e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d7916ac136613b8118f6429c3436664a700a2e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/90d7916ac136613b8118f6429c3436664a700a2e"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 29,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1af756ac0ec14d85feec9c3e19bcbfd1eb1152f7",
      "filename": "gdb/testsuite/gdb.base/gold-gdb-index.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be36c6e3374821fe5699556bbfa2280e3a4696df/gdb/testsuite/gdb.base/gold-gdb-index.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be36c6e3374821fe5699556bbfa2280e3a4696df/gdb/testsuite/gdb.base/gold-gdb-index.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/gold-gdb-index.exp?ref=be36c6e3374821fe5699556bbfa2280e3a4696df",
      "patch": "@@ -28,7 +28,7 @@ if {[prepare_for_testing \"failed to prepare\" $testfile \"$srcfile $srcfile2\" \\\n     return -1\n }\n \n-if { [readnow] } {\n+if { [have_index $binfile] != \"gdb_index\" } {\n     return -1\n }\n "
    },
    {
      "sha": "04ca56168a159a017c57e522bed307d321862d43",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be36c6e3374821fe5699556bbfa2280e3a4696df/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be36c6e3374821fe5699556bbfa2280e3a4696df/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=be36c6e3374821fe5699556bbfa2280e3a4696df",
      "patch": "@@ -7670,6 +7670,34 @@ proc readnow { args } {\n     return $readnow_p\n }\n \n+# Return index name if symbols were read in using an index.\n+# Otherwise, return \"\".\n+\n+proc have_index { objfile } {\n+\n+    set res \"\"\n+    set cmd \"maint print objfiles $objfile\"\n+    gdb_test_multiple $cmd \"\" -lbl {\n+\t-re \"\\r\\n.gdb_index: faked for \\\"readnow\\\"\" {\n+\t    set res \"\"\n+\t    exp_continue\n+\t}\n+\t-re \"\\r\\n.gdb_index:\" {\n+\t    set res \"gdb_index\"\n+\t    exp_continue\n+\t}\n+\t-re \"\\r\\n.debug_names:\" {\n+\t    set res \"debug_names\"\n+\t    exp_continue\n+\t}\n+\t-re -wrap \"\" {\n+\t    # We don't care about any other input.\n+\t}\n+    }\n+\n+    return $res\n+}\n+\n # Return 1 if partial symbols are available.  Otherwise, return 0.\n \n proc psymtabs_p {  } {"
    }
  ]
}