{
  "sha": "cf1d9e092f871df3b34a58cfcde915c689ac9067",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2YxZDllMDkyZjg3MWRmM2IzNGE1OGNmY2RlOTE1YzY4OWFjOTA2Nw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-01-20T00:47:49Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-01-20T00:48:16Z"
    },
    "message": "sim: don't rely on inferior_ptid in gdbsim_target::wait\n\nWhen running a program with the simulator target, I get:\n\n    /home/simark/src/binutils-gdb/gdb/inferior.c:279: internal-error: inferior* find_inferior_pid(process_stratum_target*, int): Assertion `pid != 0' failed.\n\nThis can be reproduced by building a GDB for --target=arm-none-gnueabi,\nand running with\n\n    $ ./gdb -nx --data-directory=data-directory a.out -ex \"target sim\" -ex load -ex \"b main\" -ex r\n\nWhere a.out is any program with a main.\n\nThe problem is that gdbsim_target::wait assumes that inferior_ptid has\nthe value of the thread it wants to report an event for.\n\nActually, it's the target's responsibility to come up with the ptid of\nthe thread the event is for.  In the sim target, that ptid is stored in\nsim_inferior_data::remote_sim_ptid, so return that instead of\ninferior_ptid.\n\nChangeLog:\n\n\t* remote-sim.c (gdbsim_target::wait): Return\n\tsim_data->remote_sim_ptid instead of inferior_ptid.",
    "tree": {
      "sha": "19397e11e631fb022503649708a5313e14f8c124",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/19397e11e631fb022503649708a5313e14f8c124"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf1d9e092f871df3b34a58cfcde915c689ac9067",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf1d9e092f871df3b34a58cfcde915c689ac9067",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf1d9e092f871df3b34a58cfcde915c689ac9067",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf1d9e092f871df3b34a58cfcde915c689ac9067/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b760fb3a1cd35fda01843ee7cdb3e420f07d27b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b760fb3a1cd35fda01843ee7cdb3e420f07d27b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b760fb3a1cd35fda01843ee7cdb3e420f07d27b9"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "582d1f27704688934176d730f621f4e7460e3aa8",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf1d9e092f871df3b34a58cfcde915c689ac9067/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf1d9e092f871df3b34a58cfcde915c689ac9067/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=cf1d9e092f871df3b34a58cfcde915c689ac9067",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-19  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* remote-sim.c (gdbsim_target::wait): Return\n+\tsim_data->remote_sim_ptid instead of inferior_ptid.\n+\n 2020-01-18  Nick Clifton  <nickc@redhat.com>\n \n \tBinutils 2.34 branch created."
    },
    {
      "sha": "caa94464e1eb478aaf83140d4cc98c77f5eae076",
      "filename": "gdb/remote-sim.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf1d9e092f871df3b34a58cfcde915c689ac9067/gdb/remote-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf1d9e092f871df3b34a58cfcde915c689ac9067/gdb/remote-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-sim.c?ref=cf1d9e092f871df3b34a58cfcde915c689ac9067",
      "patch": "@@ -1022,7 +1022,7 @@ gdbsim_target::wait (ptid_t ptid, struct target_waitstatus *status, int options)\n       break;\n     }\n \n-  return inferior_ptid;\n+  return sim_data->remote_sim_ptid;\n }\n \n /* Get ready to modify the registers array.  On machines which store"
    }
  ]
}