{
  "sha": "5419bdae559360a10044983b06c11a31de8d81f4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTQxOWJkYWU1NTkzNjBhMTAwNDQ5ODNiMDZjMTFhMzFkZThkODFmNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-23T18:58:31Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2019-01-23T19:04:26Z"
    },
    "message": "Replace delete_longjmp_breakpoint_cleanup with a forward_scope_exit type\n\nThis removes delete_longjmp_breakpoint_cleanup in favor of forward_scope_exit.\n\ngdb/ChangeLog:\n2019-01-23  Tom Tromey  <tom@tromey.com>\n\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n\t    Pedro Alves  <palves@redhat.com>\n\n\t* breakpoint.c (until_break_command): Use\n\tdelete_longjmp_breakpoint_cleanup class.\n\t* infcmd.c (delete_longjmp_breakpoint_cleanup): Remove function.\n\t(until_next_command): Use delete_longjmp_breakpoint_cleanup class.\n\t* inferior.h: Include forward-scope-exit.h.\n\t(delete_longjmp_breakpoint_cleanup): Replace function declaration\n\twith FORWARD_SCOPE_EXIT type.",
    "tree": {
      "sha": "9347b273532e24024e5389a44c46f3dea4d76c52",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9347b273532e24024e5389a44c46f3dea4d76c52"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5419bdae559360a10044983b06c11a31de8d81f4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5419bdae559360a10044983b06c11a31de8d81f4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5419bdae559360a10044983b06c11a31de8d81f4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5419bdae559360a10044983b06c11a31de8d81f4/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e587ef421eb7e009c6a69da55c269e9df45093e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e587ef421eb7e009c6a69da55c269e9df45093e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e587ef421eb7e009c6a69da55c269e9df45093e4"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 15,
    "deletions": 16
  },
  "files": [
    {
      "sha": "55acd81042760261685b0b0881d5ee979824f8e0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5419bdae559360a10044983b06c11a31de8d81f4/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5419bdae559360a10044983b06c11a31de8d81f4/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5419bdae559360a10044983b06c11a31de8d81f4",
      "patch": "@@ -1,3 +1,7 @@\n+2019-01-23  Tom Tromey  <tom@tromey.com>\n+\t    Andrew Burgess  <andrew.burgess@embecosm.com>\n+\t    Pedro Alves  <palves@redhat.com>\n+\n 2019-01-23  Pedro Alves  <palves@redhat.com>\n \n \t* gdbarch-selftests.c (struct on_exit): Use SCOPE_EXIT."
    },
    {
      "sha": "999809c31235dd0ef046bfe374c43343902d8e46",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5419bdae559360a10044983b06c11a31de8d81f4/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5419bdae559360a10044983b06c11a31de8d81f4/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=5419bdae559360a10044983b06c11a31de8d81f4",
      "patch": "@@ -11073,7 +11073,6 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n   struct gdbarch *frame_gdbarch;\n   struct frame_id stack_frame_id;\n   struct frame_id caller_frame_id;\n-  struct cleanup *old_chain;\n   int thread;\n   struct thread_info *tp;\n   struct until_break_fsm *sm;\n@@ -11106,8 +11105,6 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n   tp = inferior_thread ();\n   thread = tp->global_num;\n \n-  old_chain = make_cleanup (null_cleanup, NULL);\n-\n   /* Note linespec handling above invalidates the frame chain.\n      Installing a breakpoint also invalidates the frame chain (as it\n      may need to switch threads), so do any frame handling before\n@@ -11122,6 +11119,9 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n      one.  */\n \n   breakpoint_up caller_breakpoint;\n+\n+  gdb::optional<delete_longjmp_breakpoint_cleanup> lj_deleter;\n+\n   if (frame_id_p (caller_frame_id))\n     {\n       struct symtab_and_line sal2;\n@@ -11136,7 +11136,7 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n \t\t\t\t\t\t    bp_until);\n \n       set_longjmp_breakpoint (tp, caller_frame_id);\n-      make_cleanup (delete_longjmp_breakpoint_cleanup, &thread);\n+      lj_deleter.emplace (thread);\n     }\n \n   /* set_momentary_breakpoint could invalidate FRAME.  */\n@@ -11159,7 +11159,8 @@ until_break_command (const char *arg, int from_tty, int anywhere)\n \t\t\t    std::move (caller_breakpoint));\n   tp->thread_fsm = &sm->thread_fsm;\n \n-  discard_cleanups (old_chain);\n+  if (lj_deleter)\n+    lj_deleter->release ();\n \n   proceed (-1, GDB_SIGNAL_DEFAULT);\n }"
    },
    {
      "sha": "fafb7e2ec468ca0c2888ed77fbb9576acf7e6465",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 2,
      "deletions": 10,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5419bdae559360a10044983b06c11a31de8d81f4/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5419bdae559360a10044983b06c11a31de8d81f4/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=5419bdae559360a10044983b06c11a31de8d81f4",
      "patch": "@@ -947,13 +947,6 @@ nexti_command (const char *count_string, int from_tty)\n   step_1 (1, 1, count_string);\n }\n \n-void\n-delete_longjmp_breakpoint_cleanup (void *arg)\n-{\n-  int thread = * (int *) arg;\n-  delete_longjmp_breakpoint (thread);\n-}\n-\n /* Data for the FSM that manages the step/next/stepi/nexti\n    commands.  */\n \n@@ -1517,7 +1510,6 @@ until_next_command (int from_tty)\n   struct symtab_and_line sal;\n   struct thread_info *tp = inferior_thread ();\n   int thread = tp->global_num;\n-  struct cleanup *old_chain;\n   struct until_next_fsm *sm;\n \n   clear_proceed_status (0);\n@@ -1556,11 +1548,11 @@ until_next_command (int from_tty)\n   tp->control.step_over_calls = STEP_OVER_ALL;\n \n   set_longjmp_breakpoint (tp, get_frame_id (frame));\n-  old_chain = make_cleanup (delete_longjmp_breakpoint_cleanup, &thread);\n+  delete_longjmp_breakpoint_cleanup lj_deleter (thread);\n \n   sm = new_until_next_fsm (command_interp (), tp->global_num);\n   tp->thread_fsm = &sm->thread_fsm;\n-  discard_cleanups (old_chain);\n+  lj_deleter.release ();\n \n   proceed ((CORE_ADDR) -1, GDB_SIGNAL_DEFAULT);\n }"
    },
    {
      "sha": "cadaaedf22e4e7e7f34a452d608c57b179057423",
      "filename": "gdb/inferior.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5419bdae559360a10044983b06c11a31de8d81f4/gdb/inferior.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5419bdae559360a10044983b06c11a31de8d81f4/gdb/inferior.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.h?ref=5419bdae559360a10044983b06c11a31de8d81f4",
      "patch": "@@ -51,6 +51,7 @@ struct thread_info;\n \n #include \"symfile-add-flags.h\"\n #include \"common/refcounted-object.h\"\n+#include \"common/forward-scope-exit.h\"\n \n #include \"common-inferior.h\"\n #include \"gdbthread.h\"\n@@ -198,7 +199,8 @@ extern void continue_1 (int all_threads);\n \n extern void interrupt_target_1 (int all_threads);\n \n-extern void delete_longjmp_breakpoint_cleanup (void *arg);\n+using delete_longjmp_breakpoint_cleanup\n+  = FORWARD_SCOPE_EXIT (delete_longjmp_breakpoint);\n \n extern void detach_command (const char *, int);\n "
    }
  ]
}