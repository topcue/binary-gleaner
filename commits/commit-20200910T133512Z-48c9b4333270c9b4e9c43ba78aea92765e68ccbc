{
  "sha": "48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDhjOWI0MzMzMjcwYzliNGU5YzQzYmE3OGFlYTkyNzY1ZTY4Y2NiYw==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-09-02T16:20:53Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-09-10T13:35:12Z"
    },
    "message": "Add handle_eintr to wrap EINTR handling in syscalls\n\ngdbsupport/ChangeLog:\n\n\t* eintr.h: New file.",
    "tree": {
      "sha": "4d221162fbfd8fa1569d78510db659362ede16b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4d221162fbfd8fa1569d78510db659362ede16b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48c9b4333270c9b4e9c43ba78aea92765e68ccbc/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 71,
    "deletions": 0
  },
  "files": [
    {
      "sha": "6cda6050f97c1b1fb724dde3c413e3293f3dfcf2",
      "filename": "gdbsupport/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48c9b4333270c9b4e9c43ba78aea92765e68ccbc/gdbsupport/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48c9b4333270c9b4e9c43ba78aea92765e68ccbc/gdbsupport/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/ChangeLog?ref=48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
      "patch": "@@ -1,3 +1,7 @@\n+2020-09-10  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* eintr.h: New file.\n+\n 2020-08-13  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* selftest.h (run_tests): Change parameter to array_view."
    },
    {
      "sha": "64ff5940b757126dce746af9b0db2f92a1e6457f",
      "filename": "gdbsupport/eintr.h",
      "status": "added",
      "additions": 67,
      "deletions": 0,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48c9b4333270c9b4e9c43ba78aea92765e68ccbc/gdbsupport/eintr.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48c9b4333270c9b4e9c43ba78aea92765e68ccbc/gdbsupport/eintr.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbsupport/eintr.h?ref=48c9b4333270c9b4e9c43ba78aea92765e68ccbc",
      "patch": "@@ -0,0 +1,67 @@\n+/* Utility for handling interrupted syscalls by signals.\n+\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDBSUPPORT_EINTR_H\n+#define GDBSUPPORT_EINTR_H\n+\n+#include <cerrno>\n+\n+namespace gdb\n+{\n+/* Repeat a system call interrupted with a signal.\n+\n+   A utility for handling interrupted syscalls, which return with error\n+   and set the errno to EINTR.  The interrupted syscalls can be repeated,\n+   until successful completion.  This utility avoids wrapping code with\n+   manual checks for such errors which are highly repetitive.\n+\n+   For example, with:\n+\n+   ssize_t ret;\n+   do\n+     {\n+       errno = 0;\n+       ret = ::write (pipe[1], \"+\", 1);\n+     }\n+   while (ret == -1 && errno == EINTR);\n+\n+   You could wrap it by writing the wrapped form:\n+\n+   ssize_t ret = gdb::handle_eintr<ssize_t> (-1, ::write, pipe[1], \"+\", 1);\n+\n+   The RET typename specifies the return type of the wrapped system call, which\n+   is typically int or ssize_t.  The R argument specifies the failure value\n+   indicating the interrupted syscall when calling the F function with\n+   the A... arguments.  */\n+\n+template <typename Ret, typename Fun, typename... Args>\n+inline Ret handle_eintr (const Ret &R, const Fun &F, const Args &... A)\n+{\n+  Ret ret;\n+  do\n+    {\n+      errno = 0;\n+      ret = F (A...);\n+    }\n+  while (ret == R && errno == EINTR);\n+  return ret;\n+}\n+}\n+\n+#endif /* GDBSUPPORT_EINTR_H */"
    }
  ]
}