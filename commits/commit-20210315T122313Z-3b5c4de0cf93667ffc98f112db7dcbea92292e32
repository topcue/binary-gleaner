{
  "sha": "3b5c4de0cf93667ffc98f112db7dcbea92292e32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2I1YzRkZTBjZjkzNjY3ZmZjOThmMTEyZGI3ZGNiZWE5MjI5MmUzMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T12:23:12Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-15T12:23:13Z"
    },
    "message": "Call ada_ensure_varsize_limit in indirection\n\nInternal testing revealed yet another Ada regression from the\nexpression rewrite.  In this case, indirection did not use the Ada\nvarsize limit.  The old code relied on the expression resolution\nprocess to evaluate this subexpression with EVAL_AVOID_SIDE_EFFECTS in\norder to get this error.  However, this isn't always done in the new\napproach; so this patch introduces another call to\nada_ensure_varsize_limit in the appropriate spot.\n\nAs with the earlier patches, this path was not tested in-tree, so this\npatch also updates a test.\n\ngdb/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_unop_ind_operation::evaluate): Call\n\tada_ensure_varsize_limit.\n\ngdb/testsuite/ChangeLog\n2021-03-15  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/varsize_limit.exp: Add new test.\n\t* gdb.ada/varsize_limit/vsizelim.adb: Update.",
    "tree": {
      "sha": "887c389e6ceb1d9f844f723e77a5e8a7728f52b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/887c389e6ceb1d9f844f723e77a5e8a7728f52b9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3b5c4de0cf93667ffc98f112db7dcbea92292e32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b5c4de0cf93667ffc98f112db7dcbea92292e32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3b5c4de0cf93667ffc98f112db7dcbea92292e32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3b5c4de0cf93667ffc98f112db7dcbea92292e32/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c04da66c264162e6efc37686c0e4ee46c5b048ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c04da66c264162e6efc37686c0e4ee46c5b048ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c04da66c264162e6efc37686c0e4ee46c5b048ab"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 30,
    "deletions": 1
  },
  "files": [
    {
      "sha": "d7f237edc0787aa8af1b43c41c08b2d7f1b5f1c9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_unop_ind_operation::evaluate): Call\n+\tada_ensure_varsize_limit.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (numeric_type_p, integer_type_p): Return true for"
    },
    {
      "sha": "1fc303a5c09ac15ee1ddc5cf911f29591f59ece5",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "patch": "@@ -10480,6 +10480,11 @@ ada_unop_ind_operation::evaluate (struct type *expect_type,\n \t\t\t      (CORE_ADDR) value_as_address (arg1));\n     }\n \n+  struct type *target_type = (to_static_fixed_type\n+\t\t\t      (ada_aligned_type\n+\t\t\t       (ada_check_typedef (TYPE_TARGET_TYPE (type)))));\n+  ada_ensure_varsize_limit (target_type);\n+\n   if (ada_is_array_descriptor_type (type))\n     /* GDB allows dereferencing GNAT array descriptors.  */\n     return ada_coerce_to_simple_array (arg1);"
    },
    {
      "sha": "aa6cacb6ada44e0f7a7260603f60b9e7c60df237",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/varsize_limit.exp: Add new test.\n+\t* gdb.ada/varsize_limit/vsizelim.adb: Update.\n+\n 2021-03-15  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/operator_call/twovecs.ads: New file."
    },
    {
      "sha": "aca926a79ab92a84c6d3d9de271d77312675be6b",
      "filename": "gdb/testsuite/gdb.ada/varsize_limit.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/gdb.ada/varsize_limit.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/gdb.ada/varsize_limit.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/varsize_limit.exp?ref=3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "patch": "@@ -37,4 +37,4 @@ gdb_test \"print small\" \" = \\\"1234567890\\\"\"\n \n gdb_test \"print larger\" \"object size is larger than varsize-limit.*\"\n \n-\n+gdb_test \"print name.all\" \"object size is larger than varsize-limit.*\""
    },
    {
      "sha": "3b19e722eb23621f363772b48f5bd04c4f551054",
      "filename": "gdb/testsuite/gdb.ada/varsize_limit/vsizelim.adb",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/gdb.ada/varsize_limit/vsizelim.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3b5c4de0cf93667ffc98f112db7dcbea92292e32/gdb/testsuite/gdb.ada/varsize_limit/vsizelim.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/varsize_limit/vsizelim.adb?ref=3b5c4de0cf93667ffc98f112db7dcbea92292e32",
      "patch": "@@ -14,10 +14,24 @@\n --  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n with Pck; use Pck;\n+with System;\n+with Unchecked_Conversion;\n+\n procedure VsizeLim is\n    Small : String := Ident (\"1234567890\");\n    Larger : String := Ident (\"1234567890|1234567890|1234567890\");\n+\n+   type String_Ptr is access all String;\n+   type Big_String_Ptr is access all String (Positive);\n+\n+   function To_Ptr is\n+     new Unchecked_Conversion (System.Address, Big_String_Ptr);\n+\n+   Name_Str : String_Ptr := new String'(Larger);\n+   Name : Big_String_Ptr := To_Ptr (Name_Str.all'Address);\n+\n begin\n    Do_Nothing (Small'Address); -- STOP\n    Do_Nothing (Larger'Address);\n+   Do_Nothing (Name'Address);\n end VsizeLim;"
    }
  ]
}