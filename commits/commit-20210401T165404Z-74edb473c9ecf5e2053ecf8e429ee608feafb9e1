{
  "sha": "74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzRlZGI0NzNjOWVjZjVlMjA1M2VjZjhlNDI5ZWU2MDhmZWFmYjllMQ==",
  "commit": {
    "author": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2021-04-01T16:10:38Z"
    },
    "committer": {
      "name": "Tamar Christina",
      "email": "tamar.christina@arm.com",
      "date": "2021-04-01T16:54:04Z"
    },
    "message": "PE/Windows x86_64: Fix weak undef symbols after image base change\n\nThe change in PR19011 changed the image load address from being in the lower\n32-bit address space to the higher 64-bit address space.\n\nHowever when you have a weak undef symbol which stays undef at the end of\nlinking the linker has to resolve this (Windows loader does not support undef\nsymbols).  As such typically these would resolve to 0.\n\nThe relocation used for these weak symbols are the normal 32-bit PC_REL call\nrelocs.  So when doing the overflow check LD checks if the distance between the\nsymbol and the call is within range.  However now that the load address is\n> 32-bits and the symbol val is 0 this overflow check will always fail.\n\nAs such the linker gives a bogus error.  This patch makes the linker not emit\nthe overflow failure but chooses to still let the check be performed (as it's\nmid-end code).\n\nOne down side of this is that it does break the common convention that the call\nbe to sym at 0x0. i.e. before you'd get\n\n      401015:   74 05                   je     40101c\n      401017:   e8 e4 ef bf ff          callq  0\n\nand now you get\n\n   140001015:   74 05                   je     14000101c\n   140001017:   e8 e4 ef ff bf          call   100000000\n\nsince the call is PC_REL there's no way to get the range large enough to\nresolve to 0.  As such I have chosen to leave it as the furthest simple range\nthat we can still represent.\n\nBy only ignoring the error we leave the symbol value itself to still be 0\nsuch that the if(<symbol>) checks still work correctly.\n\nbfd/ChangeLog:\n\n2021-04-01  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR ld/26659\n\t* cofflink.c (_bfd_coff_generic_relocate_section): Ignore overflow.\n\nld/ChangeLog:\n\n2021-04-01  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR ld/26659\n\t* testsuite/ld-pe/pe.exp: Add test.\n\t* testsuite/ld-pe/pr26659-weak-undef-sym.d: New test.\n\t* testsuite/ld-pe/pr26659-weak-undef-sym.s: New test.",
    "tree": {
      "sha": "11f8dfbfd750cdc3fc6f4a2e122916ace08e52dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/11f8dfbfd750cdc3fc6f4a2e122916ace08e52dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/comments",
  "author": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "TamarChristinaArm",
    "id": 48126768,
    "node_id": "MDQ6VXNlcjQ4MTI2NzY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TamarChristinaArm",
    "html_url": "https://github.com/TamarChristinaArm",
    "followers_url": "https://api.github.com/users/TamarChristinaArm/followers",
    "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}",
    "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions",
    "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs",
    "repos_url": "https://api.github.com/users/TamarChristinaArm/repos",
    "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "caaf412e9890dac4323b47b58cd38b7ebb26a7db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/caaf412e9890dac4323b47b58cd38b7ebb26a7db",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/caaf412e9890dac4323b47b58cd38b7ebb26a7db"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 98,
    "deletions": 0
  },
  "files": [
    {
      "sha": "0fcdf19d317c3525fc94254d7d9af682a0795651",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-04-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR ld/26659\n+\t* cofflink.c (_bfd_coff_generic_relocate_section): Ignore overflow.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* ecoff.c (strneq): Remove strneq and use startswith."
    },
    {
      "sha": "dd3e8dd4bf667b41f42bdba3ea8629072bb2c902",
      "filename": "bfd/cofflink.c",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/bfd/cofflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/bfd/cofflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/cofflink.c?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -3129,6 +3129,21 @@ _bfd_coff_generic_relocate_section (bfd *output_bfd,\n \t  return false;\n \tcase bfd_reloc_overflow:\n \t  {\n+\n+\t    /* Ignore any weak undef symbols that may have overflowed.  Due to\n+\t       PR ld/19011 the base address is now in the upper 64-bit address\n+\t       range.  This means that when _bfd_final_link_relocate calculates\n+\t       the overlow it takes the distance between the symbol and the VMA\n+\t       which will now always overflow as 0 - 64-bit addr > 32-bit range\n+\t       of the relocation.  This ends up creating PR ld/26659.  */\n+\t    if (val == 0\n+\t\t/* Reverse the hack where 4 is subtracted from the addend.  */\n+\t\t&& (addend + 4) == 0\n+\t\t&& sym->n_sclass == C_NT_WEAK\n+\t\t&& bfd_coff_classify_symbol (output_bfd, sym)\n+\t\t     == COFF_SYMBOL_UNDEFINED)\n+\t      break;\n+\n \t    const char *name;\n \t    char buf[SYMNMLEN + 1];\n "
    },
    {
      "sha": "cf413894dac737da6a8e324816a61dd472d096f6",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR ld/26659\n+\t* testsuite/ld-pe/pe.exp: Add test.\n+\t* testsuite/ld-pe/pr26659-weak-undef-sym.d: New test.\n+\t* testsuite/ld-pe/pr26659-weak-undef-sym.s: New test.\n+\n 2021-04-01  Martin Liska  <mliska@suse.cz>\n \n \t* ldbuildid.c (strneq): Remove strneq and use startswith."
    },
    {
      "sha": "a536b51c3e65129c33cdc5c4535fea56d0665434",
      "filename": "ld/testsuite/ld-pe/pe.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pe.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pe.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe.exp?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -81,6 +81,7 @@ run_dump_test \"reloc\"\n run_dump_test \"weakdef-1\"\n \n run_dump_test \"pr19803\"\n+run_dump_test \"pr26659-weak-undef-sym\"\n set pr19803_dll {\n     {   \"PR 19803: not exporting swept symbols\"\n \t\"-shared --out-implib dx.dll --gc-sections\""
    },
    {
      "sha": "0b48994877d18b616be2c3da3b8848b6b51fb8af",
      "filename": "ld/testsuite/ld-pe/pr26659-weak-undef-sym.d",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pr26659-weak-undef-sym.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pr26659-weak-undef-sym.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pr26659-weak-undef-sym.d?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -0,0 +1,32 @@\n+#source: pr26659-weak-undef-sym.s\n+#target: x86_64-*-cygwin* x86_64-*-pe x86_64-*-mingw*\n+#ld: -e0\n+#objdump: -d\n+\n+#...\n+0000000140001000 <foo>:\n+   140001000:\t55                   \tpush   %rbp\n+   140001001:\t48 89 e5             \tmov    %rsp,%rbp\n+   140001004:\t48 83 ec 20          \tsub    \\$0x20,%rsp\n+   140001008:\t89 4d 10             \tmov    %ecx,0x10\\(%rbp\\)\n+   14000100b:\t48 8b 05 ee 0f 00 00 \tmov    0xfee\\(%rip\\),%rax        # 140002000 <__data_end__>\n+   140001012:\t48 85 c0             \ttest   %rax,%rax\n+   140001015:\t74 05                \tje     14000101c <foo\\+0x1c>\n+   140001017:\te8 e4 ef ff bf       \tcall   100000000 <__size_of_stack_reserve__\\+0xffe00000>\n+   14000101c:\t48 8b 05 ed 0f 00 00 \tmov    0xfed\\(%rip\\),%rax        # 140002010 <.refptr.bar2>\n+   140001023:\t48 85 c0             \ttest   %rax,%rax\n+   140001026:\t74 05                \tje     14000102d <foo\\+0x2d>\n+   140001028:\te8 d3 ef ff bf       \tcall   100000000 <__size_of_stack_reserve__\\+0xffe00000>\n+   14000102d:\t8b 45 10             \tmov    0x10\\(%rbp\\),%eax\n+   140001030:\t0f af c0             \timul   %eax,%eax\n+   140001033:\t48 83 c4 20          \tadd    \\$0x20,%rsp\n+   140001037:\t5d                   \tpop    %rbp\n+   140001038:\tc3                   \tret    \n+   140001039:\t90                   \tnop\n+   14000103a:\t90                   \tnop\n+   14000103b:\t90                   \tnop\n+   14000103c:\t90                   \tnop\n+   14000103d:\t90                   \tnop\n+   14000103e:\t90                   \tnop\n+   14000103f:\t90                   \tnop\n+#pass"
    },
    {
      "sha": "7a42759e75288bebd88919016f76be195b35a125",
      "filename": "ld/testsuite/ld-pe/pr26659-weak-undef-sym.s",
      "status": "added",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pr26659-weak-undef-sym.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/74edb473c9ecf5e2053ecf8e429ee608feafb9e1/ld/testsuite/ld-pe/pr26659-weak-undef-sym.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pr26659-weak-undef-sym.s?ref=74edb473c9ecf5e2053ecf8e429ee608feafb9e1",
      "patch": "@@ -0,0 +1,38 @@\n+        .text\n+        .globl  foo\n+        .def    foo;    .scl    2;      .type   32;     .endef\n+foo:\n+        pushq   %rbp\n+        movq    %rsp, %rbp\n+        subq    $32, %rsp\n+        movl    %ecx, 16(%rbp)\n+        movq    .refptr.bar1(%rip), %rax\n+        testq   %rax, %rax\n+        je      .L2\n+        call    bar1\n+.L2:\n+        movq    .refptr.bar2(%rip), %rax\n+        testq   %rax, %rax\n+        je      .L3\n+        call    bar2\n+.L3:\n+        movl    16(%rbp), %eax\n+        imull   %eax, %eax\n+        addq    $32, %rsp\n+        popq    %rbp\n+        ret\n+        .weak   bar2\n+        .weak   bar1\n+        .def    bar1;   .scl    2;      .type   32;     .endef\n+        .def    bar2;   .scl    2;      .type   32;     .endef\n+        .section        .rdata$.refptr.bar2, \"dr\"\n+        .globl  .refptr.bar2\n+        .linkonce       discard\n+.refptr.bar2:\n+        .quad   bar2\n+        .section        .rdata$.refptr.bar1, \"dr\"\n+        .globl  .refptr.bar1\n+        .linkonce       discard\n+.refptr.bar1:\n+        .quad   bar1\n+"
    }
  ]
}