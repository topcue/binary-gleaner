{
  "sha": "86f64bf43f70ecefa9232f5b8621b179dfff52fd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODZmNjRiZjQzZjcwZWNlZmE5MjMyZjViODYyMWIxNzlkZmZmNTJmZA==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:46Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:48Z"
    },
    "message": "libctf, serialize: functions with no args have a NULL dtd_vlen\n\nEvery place that accesses a function's dtd_vlen accesses it only if the\nnumber of args is nonzero, except the serializer, which always tries to\nmemcpy it.  The number of bytes it memcpys in this case is zero, but it\nis still undefined behaviour to copy zero bytes from a null pointer.\nSo check for this case explicitly.\n\nlibctf/ChangeLog\n2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\tPR libctf/27628\n\t* ctf-serialize.c (ctf_emit_type_sect): Allow for a NULL vlen in\n\tCTF_K_FUNCTION types.",
    "tree": {
      "sha": "a5bdee1f432ebdbe78db8a65e6d0133907c9c9a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a5bdee1f432ebdbe78db8a65e6d0133907c9c9a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/86f64bf43f70ecefa9232f5b8621b179dfff52fd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86f64bf43f70ecefa9232f5b8621b179dfff52fd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/86f64bf43f70ecefa9232f5b8621b179dfff52fd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86f64bf43f70ecefa9232f5b8621b179dfff52fd/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "24c877f9b19dc38f9c40e25116175481c8bb78f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24c877f9b19dc38f9c40e25116175481c8bb78f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/24c877f9b19dc38f9c40e25116175481c8bb78f2"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 9,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a9e76ecd7cae88132f13bbda636aaf195dc1dc96",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86f64bf43f70ecefa9232f5b8621b179dfff52fd/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86f64bf43f70ecefa9232f5b8621b179dfff52fd/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=86f64bf43f70ecefa9232f5b8621b179dfff52fd",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\tPR libctf/27628\n+\t* ctf-serialize.c (ctf_emit_type_sect): Allow for a NULL vlen in\n+\tCTF_K_FUNCTION types.\n+\n 2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-dump.c (ctf_dump_format_type): Don't emit size or alignment"
    },
    {
      "sha": "9f50280176c5ab6d0594087d3f83efca32f9a4a6",
      "filename": "libctf/ctf-serialize.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86f64bf43f70ecefa9232f5b8621b179dfff52fd/libctf/ctf-serialize.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86f64bf43f70ecefa9232f5b8621b179dfff52fd/libctf/ctf-serialize.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-serialize.c?ref=86f64bf43f70ecefa9232f5b8621b179dfff52fd",
      "patch": "@@ -849,7 +849,9 @@ ctf_emit_type_sect (ctf_dict_t *fp, unsigned char **tptr)\n \t  break;\n \n \tcase CTF_K_FUNCTION:\n-\t  memcpy (t, dtd->dtd_vlen, sizeof (uint32_t) * (vlen + (vlen & 1)));\n+\t  /* Functions with no args also have no vlen.  */\n+\t  if (dtd->dtd_vlen)\n+\t    memcpy (t, dtd->dtd_vlen, sizeof (uint32_t) * (vlen + (vlen & 1)));\n \t  t += sizeof (uint32_t) * (vlen + (vlen & 1));\n \t  break;\n "
    }
  ]
}