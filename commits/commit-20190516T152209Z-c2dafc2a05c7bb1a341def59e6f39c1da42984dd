{
  "sha": "c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzJkYWZjMmEwNWM3YmIxYTM0MWRlZjU5ZTZmMzljMWRhNDI5ODRkZA==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-15T16:37:07Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:22:09Z"
    },
    "message": "[PATCH 11/57][Arm][GAS] Add support for MVE instructions: vadc, vsbc and vbrsr\n\ngas/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/tc-arm.c (M_MNEM_vadc, M_MNEM_vadci, M_MNEM_vbrsr):\n\tNew instruction encodings.\n\t(do_mve_vadc): New encoding instruction.\n\t(do_mve_vbrsr): Likewise.\n\t(do_mve_vsbc): Likewise.\n\t* testsuite/gas/arm/mve-vadc-bad.d: New test.\n\t* testsuite/gas/arm/mve-vadc-bad.l: New test.\n\t* testsuite/gas/arm/mve-vadc-bad.s: New test.\n\t* testsuite/gas/arm/mve-vbrsr-bad.d: New test.\n\t* testsuite/gas/arm/mve-vbrsr-bad.l: New test.\n\t* testsuite/gas/arm/mve-vbrsr-bad.s: New test.\n\t* testsuite/gas/arm/mve-vsbc-bad.d: New test.\n\t* testsuite/gas/arm/mve-vsbc-bad.l: New test.\n\t* testsuite/gas/arm/mve-vsbc-bad.s: New test.",
    "tree": {
      "sha": "1e8455bddf775e5c38a71e82d8d95f76f8853f4d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1e8455bddf775e5c38a71e82d8d95f76f8853f4d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1b8833198c014f2d7f7a67097061f3b990707084",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b8833198c014f2d7f7a67097061f3b990707084",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1b8833198c014f2d7f7a67097061f3b990707084"
    }
  ],
  "stats": {
    "total": 241,
    "additions": 241,
    "deletions": 0
  },
  "files": [
    {
      "sha": "af561f96b9fd955b1133f06f96bf859ea8fa718b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -1,3 +1,20 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/tc-arm.c (M_MNEM_vadc, M_MNEM_vadci, M_MNEM_vbrsr):\n+\tNew instruction encodings.\n+\t(do_mve_vadc): New encoding instruction.\n+\t(do_mve_vbrsr): Likewise.\n+\t(do_mve_vsbc): Likewise.\n+\t* testsuite/gas/arm/mve-vadc-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vadc-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vadc-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vbrsr-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vbrsr-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vbrsr-bad.s: New test.\n+\t* testsuite/gas/arm/mve-vsbc-bad.d: New test.\n+\t* testsuite/gas/arm/mve-vsbc-bad.l: New test.\n+\t* testsuite/gas/arm/mve-vsbc-bad.s: New test.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \n \t* config/tc-arm.c (MVE_BAD_QREG): New error message."
    },
    {
      "sha": "cb33daac84206999c23d1891cc6660d75e2371bb",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -14136,6 +14136,9 @@ do_t_loloop (void)\n #define M_MNEM_vmovlb\t0xeea00f40\n #define M_MNEM_vmovnt\t0xfe311e81\n #define M_MNEM_vmovnb\t0xfe310e81\n+#define M_MNEM_vadc\t0xee300f00\n+#define M_MNEM_vadci\t0xee301f00\n+#define M_MNEM_vbrsr\t0xfe011e60\n \n /* Neon instruction encoder helpers.  */\n \n@@ -16758,6 +16761,52 @@ do_neon_qdmulh (void)\n     }\n }\n \n+static void\n+do_mve_vadc (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQQ, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_KEY | N_I32, N_EQK, N_EQK);\n+\n+  if (et.type == NT_invtype)\n+    first_error (BAD_EL_TYPE);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  mve_encode_qqq (0, 64);\n+}\n+\n+static void\n+do_mve_vbrsr (void)\n+{\n+  enum neon_shape rs = neon_select_shape (NS_QQR, NS_NULL);\n+  struct neon_type_el et\n+    = neon_check_type (3, rs, N_EQK, N_EQK, N_8 | N_16 | N_32 | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  mve_encode_qqr (et.size, 0);\n+}\n+\n+static void\n+do_mve_vsbc (void)\n+{\n+  neon_check_type (3, NS_QQQ, N_EQK, N_EQK, N_I32 | N_KEY);\n+\n+  if (inst.cond > COND_ALWAYS)\n+    inst.pred_insn_type = INSIDE_VPT_INSN;\n+  else\n+    inst.pred_insn_type = MVE_OUTSIDE_PRED_INSN;\n+\n+  mve_encode_qqq (1, 64);\n+}\n+\n static void\n do_mve_vmull (void)\n {\n@@ -23909,6 +23958,10 @@ static const struct asm_opcode insns[] =\n  ToC(\"vpsteee\",\tfe712f4d, 0, (), mve_vpt),\n \n  /* MVE and MVE FP only.  */\n+ mCEF(vadc,\t_vadc,      3, (RMQ, RMQ, RMQ),\t\t\t  mve_vadc),\n+ mCEF(vadci,\t_vadci,     3, (RMQ, RMQ, RMQ),\t\t\t  mve_vadc),\n+ mToC(\"vsbc\",\tfe300f00,   3, (RMQ, RMQ, RMQ),\t\t\t  mve_vsbc),\n+ mToC(\"vsbci\",\tfe301f00,   3, (RMQ, RMQ, RMQ),\t\t\t  mve_vsbc),\n  mCEF(vmullb,\t_vmullb,    3, (RMQ, RMQ, RMQ),\t\t\t  mve_vmull),\n  mCEF(vabav,\t_vabav,\t    3, (RRnpcsp, RMQ, RMQ),\t\t  mve_vabav),\n  mCEF(vmladav,\t  _vmladav,\t3, (RRe, RMQ, RMQ),\t\tmve_vmladav),\n@@ -23945,6 +23998,7 @@ static const struct asm_opcode insns[] =\n \n  mCEF(vmovnt,\t_vmovnt,    2, (RMQ, RMQ),\t\t\t  mve_movn),\n  mCEF(vmovnb,\t_vmovnb,    2, (RMQ, RMQ),\t\t\t  mve_movn),\n+ mCEF(vbrsr,\t_vbrsr,     3, (RMQ, RMQ, RR),\t\t\t  mve_vbrsr),\n \n #undef  ARM_VARIANT\n #define ARM_VARIANT  & fpu_vfp_ext_v1"
    },
    {
      "sha": "81d95c2c57f970f833cc2059ddef5164948b85fd",
      "filename": "gas/testsuite/gas/arm/mve-vadc-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vadc-bad.d?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,5 @@\n+#name: Bad MVE VADC instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vadc-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "ca1c3a579fa7ccbe803a7ea92407b4e594367433",
      "filename": "gas/testsuite/gas/arm/mve-vadc-bad.l",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vadc-bad.l?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,31 @@\n+[^:]*: Assembler messages:\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Error: bad type in SIMD instruction -- `vadc.i8 q0,q1,q2'\n+[^:]*:14: Error: bad type in SIMD instruction -- `vadc.i16 q0,q1,q2'\n+[^:]*:15: Error: bad type in SIMD instruction -- `vadc.i64 q0,q1,q2'\n+[^:]*:16: Error: bad type in SIMD instruction -- `vadc.f32 q0,q1,q2'\n+[^:]*:17: Error: bad type in SIMD instruction -- `vadci.i8 q0,q1,q2'\n+[^:]*:18: Error: bad type in SIMD instruction -- `vadci.i16 q0,q1,q2'\n+[^:]*:19: Error: bad type in SIMD instruction -- `vadci.i64 q0,q1,q2'\n+[^:]*:20: Error: bad type in SIMD instruction -- `vadci.f32 q0,q1,q2'\n+[^:]*:22: Error: syntax error -- `vadceq.i32 q0,q1,q2'\n+[^:]*:23: Error: syntax error -- `vadceq.i32 q0,q1,q2'\n+[^:]*:25: Error: syntax error -- `vadceq.i32 q0,q1,q2'\n+[^:]*:26: Error: vector predicated instruction should be in VPT/VPST block -- `vadct.i32 q0,q1,q2'\n+[^:]*:28: Error: instruction missing MVE vector predication code -- `vadc.i32 q0,q1,q2'\n+[^:]*:30: Error: syntax error -- `vadcieq.i32 q0,q1,q2'\n+[^:]*:31: Error: syntax error -- `vadcieq.i32 q0,q1,q2'\n+[^:]*:33: Error: syntax error -- `vadcieq.i32 q0,q1,q2'\n+[^:]*:34: Error: vector predicated instruction should be in VPT/VPST block -- `vadcit.i32 q0,q1,q2'\n+[^:]*:36: Error: instruction missing MVE vector predication code -- `vadci.i32 q0,q1,q2'"
    },
    {
      "sha": "6627c9e54f081c2f7811ce15072dc0839f3739cb",
      "filename": "gas/testsuite/gas/arm/mve-vadc-bad.s",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vadc-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vadc-bad.s?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,36 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+.irp mnem, vadc.i32, vadci.i32\n+it \\cond\n+\\mnem q0, q1, q2\n+.endr\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vadc.i8 q0, q1, q2\n+vadc.i16 q0, q1, q2\n+vadc.i64 q0, q1, q2\n+vadc.f32 q0, q1, q2\n+vadci.i8 q0, q1, q2\n+vadci.i16 q0, q1, q2\n+vadci.i64 q0, q1, q2\n+vadci.f32 q0, q1, q2\n+it eq\n+vadceq.i32 q0, q1, q2\n+vadceq.i32 q0, q1, q2\n+vpst\n+vadceq.i32 q0, q1, q2\n+vadct.i32 q0, q1, q2\n+vpst\n+vadc.i32 q0, q1, q2\n+it eq\n+vadcieq.i32 q0, q1, q2\n+vadcieq.i32 q0, q1, q2\n+vpst\n+vadcieq.i32 q0, q1, q2\n+vadcit.i32 q0, q1, q2\n+vpst\n+vadci.i32 q0, q1, q2"
    },
    {
      "sha": "b4fc21aba00d159293ba9a9656060a2f612ccf25",
      "filename": "gas/testsuite/gas/arm/mve-vbrsr-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vbrsr-bad.d?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VBRSR instructions\n+#as: -march=armv8.1-m.main+mve.fp\n+#error_output: mve-vbrsr-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "d0b8de9178e2f74eff436f53c5f69411403d1922",
      "filename": "gas/testsuite/gas/arm/mve-vbrsr-bad.l",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vbrsr-bad.l?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,14 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:10: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:11: Error: bad type in SIMD instruction -- `vbrsr.64 q0,q1,r2'\n+[^:]*:12: Error: ARM register expected -- `vbrsr.32 q0,q1,q2'\n+[^:]*:14: Error: syntax error -- `vbrsreq.32 q0,q1,r2'\n+[^:]*:15: Error: syntax error -- `vbrsreq.32 q0,q1,r2'\n+[^:]*:17: Error: syntax error -- `vbrsreq.32 q0,q1,r2'\n+[^:]*:19: Error: instruction missing MVE vector predication code -- `vbrsr.32 q0,q1,r2'\n+[^:]*:20: Error: vector predicated instruction should be in VPT/VPST block -- `vbrsrt.32 q0,q1,r2'"
    },
    {
      "sha": "af02bd941d721d6b1be27953746260038892b6fd",
      "filename": "gas/testsuite/gas/arm/mve-vbrsr-bad.s",
      "status": "added",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vbrsr-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vbrsr-bad.s?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,20 @@\n+.macro cond\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+vbrsr.16 q0, q1, r2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+cond\n+vbrsr.64 q0, q1, r2\n+vbrsr.32 q0, q1, q2\n+it eq\n+vbrsreq.32 q0, q1, r2\n+vbrsreq.32 q0, q1, r2\n+vpst\n+vbrsreq.32 q0, q1, r2\n+vpst\n+vbrsr.32 q0, q1, r2\n+vbrsrt.32 q0, q1, r2"
    },
    {
      "sha": "29186c1cac47f2d35068a00d026ab6858fc84eda",
      "filename": "gas/testsuite/gas/arm/mve-vsbc-bad.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vsbc-bad.d?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,5 @@\n+#name: bad MVE VSBC instructions\n+#as: -march=armv8.1-m.main+mve\n+#error_output: mve-vsbc-bad.l\n+\n+.*: +file format .*arm.*"
    },
    {
      "sha": "e730751262dd0d3765a8bd6d1947a724a3236979",
      "filename": "gas/testsuite/gas/arm/mve-vsbc-bad.l",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vsbc-bad.l?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,25 @@\n+[^:]*: Assembler messages:\n+[^:]*:10: Error: bad type in SIMD instruction -- `vsbc.i16 q0,q1,q2'\n+[^:]*:11: Error: bad type in SIMD instruction -- `vsbci.i16 q0,q1,q2'\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:12: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:13: Warning: instruction is UNPREDICTABLE in an IT block\n+[^:]*:15: Error: syntax error -- `vsbceq.i32 q0,q1,q2'\n+[^:]*:16: Error: syntax error -- `vsbceq.i32 q0,q1,q2'\n+[^:]*:18: Error: syntax error -- `vsbceq.i32 q0,q1,q2'\n+[^:]*:20: Error: instruction missing MVE vector predication code -- `vsbc.i32 q0,q1,q2'\n+[^:]*:21: Error: vector predicated instruction should be in VPT/VPST block -- `vsbct.i32 q0,q1,q2'\n+[^:]*:23: Error: syntax error -- `vsbcieq.i32 q0,q1,q2'\n+[^:]*:24: Error: syntax error -- `vsbcieq.i32 q0,q1,q2'\n+[^:]*:26: Error: syntax error -- `vsbcieq.i32 q0,q1,q2'\n+[^:]*:28: Error: instruction missing MVE vector predication code -- `vsbci.i32 q0,q1,q2'\n+[^:]*:29: Error: vector predicated instruction should be in VPT/VPST block -- `vsbcit.i32 q0,q1,q2'"
    },
    {
      "sha": "869ba6e228bdd21b6f9282b62447e66a3c7adb81",
      "filename": "gas/testsuite/gas/arm/mve-vsbc-bad.s",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c2dafc2a05c7bb1a341def59e6f39c1da42984dd/gas/testsuite/gas/arm/mve-vsbc-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vsbc-bad.s?ref=c2dafc2a05c7bb1a341def59e6f39c1da42984dd",
      "patch": "@@ -0,0 +1,29 @@\n+.macro cond op\n+.irp cond, eq, ne, gt, ge, lt, le\n+it \\cond\n+\\op\\().i32 q0, q1, q2\n+.endr\n+.endm\n+\n+.syntax unified\n+.thumb\n+vsbc.i16 q0, q1, q2\n+vsbci.i16 q0, q1, q2\n+cond vsbc\n+cond vsbci\n+it eq\n+vsbceq.i32 q0, q1, q2\n+vsbceq.i32 q0, q1, q2\n+vpst\n+vsbceq.i32 q0, q1, q2\n+vpst\n+vsbc.i32 q0, q1, q2\n+vsbct.i32 q0, q1, q2\n+it eq\n+vsbcieq.i32 q0, q1, q2\n+vsbcieq.i32 q0, q1, q2\n+vpst\n+vsbcieq.i32 q0, q1, q2\n+vpst\n+vsbci.i32 q0, q1, q2\n+vsbcit.i32 q0, q1, q2"
    }
  ]
}