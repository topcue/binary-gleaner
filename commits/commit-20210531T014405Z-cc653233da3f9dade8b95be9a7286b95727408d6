{
  "sha": "cc653233da3f9dade8b95be9a7286b95727408d6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2M2NTMyMzNkYTNmOWRhZGU4Yjk1YmU5YTcyODZiOTU3Mjc0MDhkNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-30T14:50:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-31T01:44:05Z"
    },
    "message": "Set is_debug_types in allocate_signatured_type\n\nAll callers of allocate_signatured_type set the is_debug_types flag on\nthe result -- in fact, they are required to, because this is the sign\nthat downcasting the object to signatured_type is safe.  This patch\nmoves this assignment into the allocation function.\n\n2021-05-30  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (dwarf2_per_bfd::allocate_signatured_type): Set\n\tis_debug_types.\n\t(create_signatured_type_table_from_index)\n\t(create_signatured_type_table_from_debug_names, add_type_unit)\n\t(read_comp_units_from_section): Update.",
    "tree": {
      "sha": "41db647197b72d9681fa241c12fc6507c44f9745",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/41db647197b72d9681fa241c12fc6507c44f9745"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cc653233da3f9dade8b95be9a7286b95727408d6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc653233da3f9dade8b95be9a7286b95727408d6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cc653233da3f9dade8b95be9a7286b95727408d6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc653233da3f9dade8b95be9a7286b95727408d6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 9,
    "deletions": 4
  },
  "files": [
    {
      "sha": "7f52c280c11bfd8c8f3e8b1a79251462fa2800d0",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc653233da3f9dade8b95be9a7286b95727408d6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc653233da3f9dade8b95be9a7286b95727408d6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cc653233da3f9dade8b95be9a7286b95727408d6",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (dwarf2_per_bfd::allocate_signatured_type): Set\n+\tis_debug_types.\n+\t(create_signatured_type_table_from_index)\n+\t(create_signatured_type_table_from_debug_names, add_type_unit)\n+\t(read_comp_units_from_section): Update.\n+\n 2021-05-30  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.h (struct dwarf2_per_bfd) <num_psymtabs,"
    },
    {
      "sha": "9e5c3afafccbfe83314714dcc10ac9f4c0ecdc9c",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cc653233da3f9dade8b95be9a7286b95727408d6/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cc653233da3f9dade8b95be9a7286b95727408d6/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=cc653233da3f9dade8b95be9a7286b95727408d6",
      "patch": "@@ -2300,6 +2300,7 @@ dwarf2_per_bfd::allocate_signatured_type ()\n   std::unique_ptr<signatured_type> result (new signatured_type);\n   result->per_bfd = this;\n   result->index = all_comp_units.size ();\n+  result->is_debug_types = true;\n   tu_stats.nr_tus++;\n   return result;\n }\n@@ -2398,7 +2399,6 @@ create_signatured_type_table_from_index\n       sig_type = per_bfd->allocate_signatured_type ();\n       sig_type->signature = signature;\n       sig_type->type_offset_in_tu = type_offset_in_tu;\n-      sig_type->is_debug_types = 1;\n       sig_type->section = section;\n       sig_type->sect_off = sect_off;\n       sig_type->v.quick\n@@ -2450,7 +2450,6 @@ create_signatured_type_table_from_debug_names\n       sig_type = per_objfile->per_bfd->allocate_signatured_type ();\n       sig_type->signature = cu_header.signature;\n       sig_type->type_offset_in_tu = cu_header.type_cu_offset_in_tu;\n-      sig_type->is_debug_types = 1;\n       sig_type->section = section;\n       sig_type->sect_off = sect_off;\n       sig_type->v.quick\n@@ -5896,7 +5895,6 @@ add_type_unit (dwarf2_per_objfile *per_objfile, ULONGEST sig, void **slot)\n   per_objfile->per_bfd->all_comp_units.emplace_back\n     (sig_type_holder.release ());\n   sig_type->signature = sig;\n-  sig_type->is_debug_types = 1;\n   if (per_objfile->per_bfd->using_index)\n     {\n       sig_type->v.quick =\n@@ -7500,7 +7498,6 @@ read_comp_units_from_section (dwarf2_per_objfile *per_objfile,\n \t\t       hex_string (sig_ptr->signature));\n \t  *slot = sig_ptr;\n \t}\n-      this_cu->is_debug_types = (cu_header.unit_type == DW_UT_type);\n       this_cu->sect_off = sect_off;\n       this_cu->length = cu_header.length + cu_header.initial_length_size;\n       this_cu->is_dwz = is_dwz;"
    }
  ]
}