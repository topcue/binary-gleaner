{
  "sha": "92137da015d301fec4b7878467d053d379a2f489",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTIxMzdkYTAxNWQzMDFmZWM0Yjc4Nzg0NjdkMDUzZDM3OWEyZjQ4OQ==",
  "commit": {
    "author": {
      "name": "Rainer Orth",
      "email": "ro@CeBiTec.Uni-Bielefeld.DE",
      "date": "2019-02-28T15:09:05Z"
    },
    "committer": {
      "name": "Rainer Orth",
      "email": "ro@CeBiTec.Uni-Bielefeld.DE",
      "date": "2019-02-28T15:09:05Z"
    },
    "message": "Can't interrupt process without controlling terminal on Solaris (PR gdb/8527)\n\nIf gdb attaches to a process that either has no controlling terminal,\nor the controlling terminal differs from the one gdb is running under,\nbreak/^C doesn't interrupt the debugged process on Solaris.\n\nFixed as follows, analogous to what all all other targets do.  Patch from\nthe PR, recently re-submitted by Brian Vandenberg.\n\nTested on amd64-pc-solaris2.11, sparcv9-sun-solaris2.11, and\nx86_64-pc-linux-gnu.\n\n2019-02-28  Brian Vandenberg  <phantall@gmail.com>\n\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\n\tgdb:\n\tPR gdb/8527\n\t* procfs.c (proc_wait_for_stop): Wrap write of PCWSTOP in\n\tset_sigint_trap, clear_sigint_trap.\n\n\tgdb/testsuite:\n\tPR gdb/8527\n\t* gdb.base/interrupt-daemon-attach.c,\n\tgdb.base/interrupt-daemon-attach.exp: New test.",
    "tree": {
      "sha": "12f1796d93cb107afe90fdf6a750253c786b1527",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12f1796d93cb107afe90fdf6a750253c786b1527"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/92137da015d301fec4b7878467d053d379a2f489",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92137da015d301fec4b7878467d053d379a2f489",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/92137da015d301fec4b7878467d053d379a2f489",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/92137da015d301fec4b7878467d053d379a2f489/comments",
  "author": {
    "login": "rorth",
    "id": 3930951,
    "node_id": "MDQ6VXNlcjM5MzA5NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rorth",
    "html_url": "https://github.com/rorth",
    "followers_url": "https://api.github.com/users/rorth/followers",
    "following_url": "https://api.github.com/users/rorth/following{/other_user}",
    "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rorth/subscriptions",
    "organizations_url": "https://api.github.com/users/rorth/orgs",
    "repos_url": "https://api.github.com/users/rorth/repos",
    "events_url": "https://api.github.com/users/rorth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rorth/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "rorth",
    "id": 3930951,
    "node_id": "MDQ6VXNlcjM5MzA5NTE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rorth",
    "html_url": "https://github.com/rorth",
    "followers_url": "https://api.github.com/users/rorth/followers",
    "following_url": "https://api.github.com/users/rorth/following{/other_user}",
    "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rorth/subscriptions",
    "organizations_url": "https://api.github.com/users/rorth/orgs",
    "repos_url": "https://api.github.com/users/rorth/repos",
    "events_url": "https://api.github.com/users/rorth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rorth/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eed5def8d0b7b64c3592be75a9b22bb4ce1a78f4"
    }
  ],
  "stats": {
    "total": 170,
    "additions": 170,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f7d86202494fd3b888f01e66b2d2e6673b86ebd4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92137da015d301fec4b7878467d053d379a2f489/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92137da015d301fec4b7878467d053d379a2f489/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=92137da015d301fec4b7878467d053d379a2f489",
      "patch": "@@ -1,3 +1,10 @@\n+2019-02-28  Brian Vandenberg  <phantall@gmail.com>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR gdb/8527\n+\t* procfs.c (proc_wait_for_stop): Wrap write of PCWSTOP in\n+\tset_sigint_trap, clear_sigint_trap.\n+\n 2019-02-27  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* target.c (target_detach): Clear the regcache and the"
    },
    {
      "sha": "0525b76cee506200d7ca48192e7923bddc8a9a81",
      "filename": "gdb/procfs.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92137da015d301fec4b7878467d053d379a2f489/gdb/procfs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92137da015d301fec4b7878467d053d379a2f489/gdb/procfs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/procfs.c?ref=92137da015d301fec4b7878467d053d379a2f489",
      "patch": "@@ -909,7 +909,12 @@ proc_wait_for_stop (procinfo *pi)\n \n   procfs_ctl_t cmd = PCWSTOP;\n \n+  set_sigint_trap ();\n+\n   win = (write (pi->ctl_fd, (char *) &cmd, sizeof (cmd)) == sizeof (cmd));\n+\n+  clear_sigint_trap ();\n+\n   /* We been runnin' and we stopped -- need to update status.  */\n   pi->status_valid = 0;\n "
    },
    {
      "sha": "694920b81da156dd8c4b7754a7996a0cbb409299",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=92137da015d301fec4b7878467d053d379a2f489",
      "patch": "@@ -1,3 +1,9 @@\n+2019-02-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR gdb/8527\n+\t* gdb.base/interrupt-daemon-attach.c,\n+\tgdb.base/interrupt-daemon-attach.exp: New test.\n+\n 2019-02-27  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.base/page.exp: Add tests for \"set width/height -1\"."
    },
    {
      "sha": "5dc84438dcbf52382d1f3911bf8d58b299e52b49",
      "filename": "gdb/testsuite/gdb.base/interrupt-daemon-attach.c",
      "status": "added",
      "additions": 61,
      "deletions": 0,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/gdb.base/interrupt-daemon-attach.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/gdb.base/interrupt-daemon-attach.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/interrupt-daemon-attach.c?ref=92137da015d301fec4b7878467d053d379a2f489",
      "patch": "@@ -0,0 +1,61 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2017-2019 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n+/* GDB reads this to figure out the child's PID.  */\n+pid_t child_pid;\n+\n+void\n+marker (void)\n+{\n+}\n+\n+int\n+main ()\n+{\n+  /* Don't let the test case run forever.  */\n+  alarm (60);\n+\n+  child_pid = fork ();\n+\n+  switch (child_pid)\n+    {\n+    case -1:\n+      return 1;\n+\n+    case 0:\n+      break;\n+\n+    default:\n+      while (1)\n+\t{\n+\t  marker ();\n+\t  usleep (1000);\n+\t}\n+    }\n+\n+  /* Detach from controlling terminal.  */\n+  if (setsid () == (pid_t) -1)\n+    return 1;\n+\n+  for (;;)\n+    ;\n+\n+  return 0;\n+}"
    },
    {
      "sha": "b8e60deaf4f14f40bb428bf28c4194d34e505311",
      "filename": "gdb/testsuite/gdb.base/interrupt-daemon-attach.exp",
      "status": "added",
      "additions": 91,
      "deletions": 0,
      "changes": 91,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/gdb.base/interrupt-daemon-attach.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/92137da015d301fec4b7878467d053d379a2f489/gdb/testsuite/gdb.base/interrupt-daemon-attach.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/interrupt-daemon-attach.exp?ref=92137da015d301fec4b7878467d053d379a2f489",
      "patch": "@@ -0,0 +1,91 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+if [target_info exists gdb,nosignals] {\n+    verbose \"Skipping interrupt-daemon-attach.exp because of nosignals.\"\n+    continue\n+}\n+\n+# This test requires sending ^C to interrupt the running target.\n+if [target_info exists gdb,nointerrupts] {\n+    verbose \"Skipping interrupt-daemon-attach.exp because of nointerrupts.\"\n+    return\n+}\n+\n+if { ![can_spawn_for_attach] } {\n+    return 0\n+}\n+\n+standard_testfile\n+\n+if { [build_executable ${testfile}.exp ${testfile} $srcfile {debug}] == -1 } {\n+    return -1\n+}\n+\n+proc do_test {} {\n+    global binfile\n+    global decimal\n+\n+    set test_spawn_id [spawn_wait_for_attach $binfile]\n+    set parent_pid [spawn_id_get_pid $test_spawn_id]\n+\n+    # Attach to the parent, run it to a known point, extract the\n+    # child's PID, and detach.\n+    with_test_prefix \"parent\" {\n+\tclean_restart ${binfile}\n+\n+\tgdb_test \"attach $parent_pid\" \\\n+\t    \"Attaching to program.*, process $parent_pid.*\" \\\n+\t    \"attach\"\n+\n+\tgdb_breakpoint \"marker\"\n+\tgdb_continue_to_breakpoint \"marker\"\n+\n+\tset child_pid [get_integer_valueof \"child_pid\" -1]\n+\tif {$child_pid == -1} {\n+\t    return\n+\t}\n+\n+\tgdb_test \"detach\" \\\n+\t    \"Detaching from program: .*process $parent_pid\\r\\n\\\\\\[Inferior $decimal \\\\(.*\\\\) detached\\\\\\]\"\n+\n+\tremote_exec host \"kill -9 $parent_pid\"\n+    }\n+\n+    # Start over, and attach to the child this time.\n+    with_test_prefix \"child\" {\n+\tglobal gdb_prompt\n+\n+\tclean_restart $binfile\n+\n+\tgdb_test \"attach $child_pid\" \\\n+\t    \"Attaching to program.*, process $child_pid.*\" \\\n+\t    \"attach\"\n+\n+\tgdb_test_multiple \"continue\" \"continue\" {\n+\t    -re \"Continuing\" {\n+\t\tpass \"continue\"\n+\t    }\n+\t}\n+\n+\tafter 500 {send_gdb \"\\003\"}\n+\tgdb_test \"\" \"(Program|Thread .*) received signal SIGINT.*\" \\\n+\t    \"stop with control-c\"\n+\n+\tremote_exec host \"kill -9 $child_pid\"\n+    }\n+}\n+\n+do_test"
    }
  ]
}