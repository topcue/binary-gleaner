{
  "sha": "bb82aefe17866cdcb996ae35a3895bb36b4d674b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmI4MmFlZmUxNzg2NmNkY2I5OTZhZTM1YTM4OTViYjM2YjRkNjc0Yg==",
  "commit": {
    "author": {
      "name": "Shahab Vahedi",
      "email": "shahab@synopsys.com",
      "date": "2020-01-07T13:25:15Z"
    },
    "committer": {
      "name": "Claudiu Zissulescu",
      "email": "claziss@gmail.com",
      "date": "2020-01-07T13:25:34Z"
    },
    "message": "[ARC] Add finer details for LLOCK and SCOND\n\nThis patch changes the \"class\" of LLOCK/SCOND from \"MEMORY\" to\n\"LLOCK/SCOND\" respectively. Moreover, it corrects the \"data_size_mode\".\n\nThese changes are necessary for GDB's atmoic sequence handler.\n\nSigned-off-by: Shahab Vahedi <shahab@synopsys.com>",
    "tree": {
      "sha": "48063e27df291e360c2287af0b3ea5b4b442fd14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/48063e27df291e360c2287af0b3ea5b4b442fd14"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb82aefe17866cdcb996ae35a3895bb36b4d674b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb82aefe17866cdcb996ae35a3895bb36b4d674b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb82aefe17866cdcb996ae35a3895bb36b4d674b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb82aefe17866cdcb996ae35a3895bb36b4d674b/comments",
  "author": null,
  "committer": {
    "login": "claziss",
    "id": 2761368,
    "node_id": "MDQ6VXNlcjI3NjEzNjg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/claziss",
    "html_url": "https://github.com/claziss",
    "followers_url": "https://api.github.com/users/claziss/followers",
    "following_url": "https://api.github.com/users/claziss/following{/other_user}",
    "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/claziss/subscriptions",
    "organizations_url": "https://api.github.com/users/claziss/orgs",
    "repos_url": "https://api.github.com/users/claziss/repos",
    "events_url": "https://api.github.com/users/claziss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/claziss/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ef95444455042bb31790a49aed7125eeb07b5a3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef95444455042bb31790a49aed7125eeb07b5a3b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ef95444455042bb31790a49aed7125eeb07b5a3b"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 36,
    "deletions": 21
  },
  "files": [
    {
      "sha": "cd0410494d89400358d7d0758fff132e318ac2bd",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb82aefe17866cdcb996ae35a3895bb36b4d674b/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb82aefe17866cdcb996ae35a3895bb36b4d674b/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=bb82aefe17866cdcb996ae35a3895bb36b4d674b",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* opcode/arc.h (insn_class_t): Add 'LLOCK' and 'SCOND'.\n+\n 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \t* coff/internal.h: Add defintions of Z80 reloc names."
    },
    {
      "sha": "3a05cd893320592f197421d7041ff6bda786f19d",
      "filename": "include/opcode/arc.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb82aefe17866cdcb996ae35a3895bb36b4d674b/include/opcode/arc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb82aefe17866cdcb996ae35a3895bb36b4d674b/include/opcode/arc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/arc.h?ref=bb82aefe17866cdcb996ae35a3895bb36b4d674b",
      "patch": "@@ -64,6 +64,7 @@ typedef enum\n   JUMP,\n   KERNEL,\n   LEAVE,\n+  LLOCK,\n   LOAD,\n   LOGICAL,\n   LOOP,\n@@ -76,6 +77,7 @@ typedef enum\n   PMU,\n   POP,\n   PUSH,\n+  SCOND,\n   SJLI,\n   STORE,\n   SUB,"
    },
    {
      "sha": "220b9f4c5f98423b7bbe4b808e91036634d4a33b",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb82aefe17866cdcb996ae35a3895bb36b4d674b/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb82aefe17866cdcb996ae35a3895bb36b4d674b/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=bb82aefe17866cdcb996ae35a3895bb36b4d674b",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-07  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* arc-tbl.h (llock): Use 'LLOCK' as class.\n+\t(llockd): Likewise.\n+\t(scond): Use 'SCOND' as class.\n+\t(scondd): Likewise.\n+\t(llockd): Set data_size_mode to 'C_ZZ_D' which is 64-bit.\n+\t(scondd): Likewise.\n+\n 2020-01-06  Alan Modra  <amodra@gmail.com>\n \n \t* m32c-ibld.c: Regenerate."
    },
    {
      "sha": "10625f1b36ca64954908eafcb197f7fdddb3d3fd",
      "filename": "opcodes/arc-tbl.h",
      "status": "modified",
      "additions": 21,
      "deletions": 21,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb82aefe17866cdcb996ae35a3895bb36b4d674b/opcodes/arc-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb82aefe17866cdcb996ae35a3895bb36b4d674b/opcodes/arc-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arc-tbl.h?ref=bb82aefe17866cdcb996ae35a3895bb36b4d674b",
      "patch": "@@ -9214,40 +9214,40 @@\n { \"leave_s\", 0x0000C0C0, 0x0000F8E1, ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LEAVE, CD1, { UIMM7_11_S }, { 0 }},\n \n /* llock<.di> b,c 00100bbb00101111DBBBCCCCCC010000.  */\n-{ \"llock\", 0x202F0010, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x202F0010, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n \n /* llock<.di> 0,c 0010011000101111D111CCCCCC010000.  */\n-{ \"llock\", 0x262F7010, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x262F7010, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n \n /* llock<.di> b,u6 00100bbb01101111DBBBuuuuuu010000.  */\n-{ \"llock\", 0x206F0010, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x206F0010, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n \n /* llock<.di> 0,u6 0010011001101111D111uuuuuu010000.  */\n-{ \"llock\", 0x266F7010, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x266F7010, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n \n /* llock<.di> b,limm 00100bbb00101111DBBB111110010000.  */\n-{ \"llock\", 0x202F0F90, 0xF8FF0FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x202F0F90, 0xF8FF0FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n \n /* llock<.di> 0,limm 0010011000101111D111111110010000.  */\n-{ \"llock\", 0x262F7F90, 0xFFFF7FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"llock\", 0x262F7F90, 0xFFFF7FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n \n /* llockd<.di> b,c 00100bbb00101111DBBBCCCCCC010010.  */\n-{ \"llockd\", 0x202F0012, 0xF8FF003F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x202F0012, 0xF8FF003F, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* llockd<.di> 0,c 0010011000101111D111CCCCCC010010.  */\n-{ \"llockd\", 0x262F7012, 0xFFFF703F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x262F7012, 0xFFFF703F, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, RC, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* llockd<.di> b,u6 00100bbb01101111DBBBuuuuuu010010.  */\n-{ \"llockd\", 0x206F0012, 0xF8FF003F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x206F0012, 0xF8FF003F, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* llockd<.di> 0,u6 0010011001101111D111uuuuuu010010.  */\n-{ \"llockd\", 0x266F7012, 0xFFFF703F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x266F7012, 0xFFFF703F, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* llockd<.di> b,limm 00100bbb00101111DBBB111110010010.  */\n-{ \"llockd\", 0x202F0F92, 0xF8FF0FFF, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x202F0F92, 0xF8FF0FFF, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* llockd<.di> 0,limm 0010011000101111D111111110010010.  */\n-{ \"llockd\", 0x262F7F92, 0xFFFF7FFF, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { ZA, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"llockd\", 0x262F7F92, 0xFFFF7FFF, ARC_OPCODE_ARCv2HS, LLOCK, NONE, { ZA, BRAKET, LIMM, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* lp s13 00100RRR101010000RRRssssssSSSSSS.  */\n { \"lp\", 0x20A80000, 0xF8FF8000, ARC_OPCODE_ARC600 | ARC_OPCODE_ARC700, LOOP, NONE, { SIMM13_A16_20 }, { 0 }},\n@@ -15640,31 +15640,31 @@\n { \"sbcs\", 0x2EE77F80, 0xFFFF7FE0, ARC_OPCODE_ARC600 | ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, ARITH, NONE, { ZA, LIMM, LIMMdup }, { C_F, C_CC }},\n \n /* scond<.di> b,c 00100bbb00101111DBBBCCCCCC010001.  */\n-{ \"scond\", 0x202F0011, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x202F0011, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n \n /* scond<.di> b,u6 00100bbb01101111DBBBuuuuuu010001.  */\n-{ \"scond\", 0x206F0011, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x206F0011, 0xF8FF003F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n \n /* scond<.di> b,limm 00100bbb00101111DBBB111110010001.  */\n-{ \"scond\", 0x202F0F91, 0xF8FF0FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x202F0F91, 0xF8FF0FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n \n /* scond<.di> limm,c 0010011000101111D111CCCCCC010001.  */\n-{ \"scond\", 0x262F7011, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, MEMORY, NONE, { LIMM, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x262F7011, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, SCOND, NONE, { LIMM, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n \n /* scond<.di> limm,u6 0010011001101111D111uuuuuu010001.  */\n-{ \"scond\", 0x266F7011, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, MEMORY, NONE, { LIMM, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x266F7011, 0xFFFF703F, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, SCOND, NONE, { LIMM, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n \n /* scond<.di> limm,limm 0010011000101111D111111110010001.  */\n-{ \"scond\", 0x262F7F91, 0xFFFF7FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, MEMORY, NONE, { LIMM, BRAKET, LIMMdup, BRAKETdup }, { C_DI16 }},\n+{ \"scond\", 0x262F7F91, 0xFFFF7FFF, ARC_OPCODE_ARC700 | ARC_OPCODE_ARCv2EM, SCOND, NONE, { LIMM, BRAKET, LIMMdup, BRAKETdup }, { C_DI16 }},\n \n /* scondd<.di> b,c 00100bbb00101111DBBBCCCCCC010011.  */\n-{ \"scondd\", 0x202F0013, 0xF8FF003F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16 }},\n+{ \"scondd\", 0x202F0013, 0xF8FF003F, ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, RC, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* scondd<.di> b,u6 00100bbb01101111DBBBuuuuuu010011.  */\n-{ \"scondd\", 0x206F0013, 0xF8FF003F, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16 }},\n+{ \"scondd\", 0x206F0013, 0xF8FF003F, ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, UIMM6_20, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* scondd<.di> b,limm 00100bbb00101111DBBB111110010011.  */\n-{ \"scondd\", 0x202F0F93, 0xF8FF0FFF, ARC_OPCODE_ARCv2HS, MEMORY, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16 }},\n+{ \"scondd\", 0x202F0F93, 0xF8FF0FFF, ARC_OPCODE_ARCv2HS, SCOND, NONE, { RB, BRAKET, LIMM, BRAKETdup }, { C_DI16, C_ZZ_D }},\n \n /* setacc a,b,c 00101bbb000011011BBBCCCCCCAAAAAA.  */\n { \"setacc\", 0x280D8000, 0xF8FF8000, ARC_OPCODE_ARCv2EM | ARC_OPCODE_ARCv2HS, DSP, NONE, { RA_CHK, RB, RC }, { 0 }},"
    }
  ]
}