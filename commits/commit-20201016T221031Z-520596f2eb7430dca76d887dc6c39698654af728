{
  "sha": "520596f2eb7430dca76d887dc6c39698654af728",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTIwNTk2ZjJlYjc0MzBkY2E3NmQ4ODdkYzZjMzk2OTg2NTRhZjcyOA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-16T22:10:31Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-16T22:10:31Z"
    },
    "message": "[gdb/symtab] Handle setting line bp without debug line info\n\nWhen setting a breakpoint on a line in an executable without debug line info,\nwe run into an abort.\n\nThe problem occurs when calling set_default_source_symtab_and_line, which\ncalls select_source_symtab (0), which is where we try to find the line number\nfor main:\n...\n  /* Make the default place to list be the function `main'\n     if one exists.  */\n  block_symbol bsym = lookup_symbol (main_name (), 0, VAR_DOMAIN, 0);\n  if (bsym.symbol != nullptr && SYMBOL_CLASS (bsym.symbol) == LOC_BLOCK)\n    {\n      symtab_and_line sal = find_function_start_sal (bsym.symbol, true);\n      loc->set (sal.symtab, std::max (sal.line - (lines_to_list - 1), 1));\n      return;\n    }\n...\n\nHowever, due to the missing debug line info, find_function_start_sal returns a\nsal with sal.symtab == 0:\n...\n(gdb) p /x sal\n$2 = {pspace = 0x1a4a7f0, symtab = 0x0, symbol = 0x1d9e480, section = 0x1d5b398,\n  msymbol = 0x0, line = 0x0, pc = 0x4004ab, end = 0x0, explicit_pc = 0x0,\n  explicit_line = 0x0, is_stmt = 0x0, prob = 0x0, objfile = 0x0}\n...\nwhich eventually causes an segfault in create_sals_line_offset because\nself->default_symtab->filename is accessed while self->default_symtab == NULL.\n\nFix this by handling sal.symtab == NULL in select_source_symtab.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-10-17  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26317\n\t* source.c (select_source_symtab): Handling sal.symtab == NULL for\n\tsymbol main.\n\ngdb/testsuite/ChangeLog:\n\n2020-10-17  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26317\n\t* gdb.dwarf2/dw2-main-no-line-number.exp: New file.",
    "tree": {
      "sha": "e3e7b3f484c9331a722f76bf43ba14b70f47236a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e3e7b3f484c9331a722f76bf43ba14b70f47236a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/520596f2eb7430dca76d887dc6c39698654af728",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/520596f2eb7430dca76d887dc6c39698654af728",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/520596f2eb7430dca76d887dc6c39698654af728",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/520596f2eb7430dca76d887dc6c39698654af728/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d1c8a76d05e3224449cb3849f42e26db6b0eabfe",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d1c8a76d05e3224449cb3849f42e26db6b0eabfe",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d1c8a76d05e3224449cb3849f42e26db6b0eabfe"
    }
  ],
  "stats": {
    "total": 86,
    "additions": 85,
    "deletions": 1
  },
  "files": [
    {
      "sha": "9ed649314f588e00e9b68e69c4916e6dfd7ed21e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/520596f2eb7430dca76d887dc6c39698654af728/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/520596f2eb7430dca76d887dc6c39698654af728/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=520596f2eb7430dca76d887dc6c39698654af728",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-17  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26317\n+\t* source.c (select_source_symtab): Handling sal.symtab == NULL for\n+\tsymbol main.\n+\n 2020-10-14  Tom de Vries  <tdevries@suse.de>\n \n \tPR gdb/26733"
    },
    {
      "sha": "779efa40d9b3977fe46cf885de57eda802ab878c",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/520596f2eb7430dca76d887dc6c39698654af728/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/520596f2eb7430dca76d887dc6c39698654af728/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=520596f2eb7430dca76d887dc6c39698654af728",
      "patch": "@@ -306,7 +306,12 @@ select_source_symtab (struct symtab *s)\n   if (bsym.symbol != nullptr && SYMBOL_CLASS (bsym.symbol) == LOC_BLOCK)\n     {\n       symtab_and_line sal = find_function_start_sal (bsym.symbol, true);\n-      loc->set (sal.symtab, std::max (sal.line - (lines_to_list - 1), 1));\n+      if (sal.symtab == NULL)\n+\t/* We couldn't find the location of `main', possibly due to missing\n+\t   line number info, fall back to line 1 in the corresponding file.  */\n+\tloc->set (symbol_symtab (bsym.symbol), 1);\n+      else\n+\tloc->set (sal.symtab, std::max (sal.line - (lines_to_list - 1), 1));\n       return;\n     }\n "
    },
    {
      "sha": "d5137978a224a26c9a2b7392dc0053d892fe3adb",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/520596f2eb7430dca76d887dc6c39698654af728/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/520596f2eb7430dca76d887dc6c39698654af728/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=520596f2eb7430dca76d887dc6c39698654af728",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-17  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26317\n+\t* gdb.dwarf2/dw2-main-no-line-number.exp: New file.\n+\n 2020-10-17  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (standard_testfile): Also treat args starting with '-'"
    },
    {
      "sha": "1f62d0ccfc2753f4e45a3bd7793df1f82da00f63",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-main-no-line-number.exp",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/520596f2eb7430dca76d887dc6c39698654af728/gdb/testsuite/gdb.dwarf2/dw2-main-no-line-number.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/520596f2eb7430dca76d887dc6c39698654af728/gdb/testsuite/gdb.dwarf2/dw2-main-no-line-number.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-main-no-line-number.exp?ref=520596f2eb7430dca76d887dc6c39698654af728",
      "patch": "@@ -0,0 +1,68 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Setup a main without line number info, and verify that attempting to\n+# set a breakpoint on a line number doesn't crash gdb.\n+\n+load_lib dwarf.exp\n+\n+set testname [file rootname [file tail [info script]]]\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    verbose \"Skipping $testname test.\"\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    verbose \"Skipping $testname test.\"\n+    return 0\n+}\n+\n+standard_testfile main.c -dw.S\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    declare_labels Llines\n+    global srcdir subdir srcfile\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C}\n+\t    {name $srcfile}\n+\t} {\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{MACRO_AT_func {main}}\n+\t    }\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+set breakpoint_at_missing_lineno_set [gdb_breakpoint \"1\" no-message]\n+gdb_assert { !$breakpoint_at_missing_lineno_set  }"
    }
  ]
}