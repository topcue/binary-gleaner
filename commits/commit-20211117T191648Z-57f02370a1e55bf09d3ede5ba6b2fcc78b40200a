{
  "sha": "57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
  "node_id": "C_kwDOANOeidoAKDU3ZjAyMzcwYTFlNTViZjA5ZDNlZGU1YmE2YjJmY2M3OGI0MDIwMGE",
  "commit": {
    "author": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2021-11-17T19:02:54Z"
    },
    "committer": {
      "name": "Przemyslaw Wirkus",
      "email": "przemyslaw.wirkus@arm.com",
      "date": "2021-11-17T19:16:48Z"
    },
    "message": "aarch64: [SME] Add +sme option to -march\n\nThis series of patches (tagged [SME]) add support for the Scalable\nMatrix Extension. Patch introduces new command line options: +sme, +sme-f64 and\n+sme-i64 to -march command line options.\n\ngas/ChangeLog:\n\n\t* NEWS: Updated docs.\n\t* config/tc-aarch64.c: New SME command line options.\n\t* doc/c-aarch64.texi: Update docs.\n\ninclude/ChangeLog:\n\n\t* opcode/aarch64.h (AARCH64_FEATURE_SME): New flag.\n\t(AARCH64_FEATURE_SME_F64): New flag.\n\t(AARCH64_FEATURE_SME_I64): New flag.\n\nopcodes/ChangeLog:\n\n\t* aarch64-tbl.h (SME): New feature object.",
    "tree": {
      "sha": "ccfec990c7a93945882e6a0b6ebb8e487e2922ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ccfec990c7a93945882e6a0b6ebb8e487e2922ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/comments",
  "author": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "PrzemekWirkus",
    "id": 6360720,
    "node_id": "MDQ6VXNlcjYzNjA3MjA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6360720?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/PrzemekWirkus",
    "html_url": "https://github.com/PrzemekWirkus",
    "followers_url": "https://api.github.com/users/PrzemekWirkus/followers",
    "following_url": "https://api.github.com/users/PrzemekWirkus/following{/other_user}",
    "gists_url": "https://api.github.com/users/PrzemekWirkus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/PrzemekWirkus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/PrzemekWirkus/subscriptions",
    "organizations_url": "https://api.github.com/users/PrzemekWirkus/orgs",
    "repos_url": "https://api.github.com/users/PrzemekWirkus/repos",
    "events_url": "https://api.github.com/users/PrzemekWirkus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/PrzemekWirkus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ef6379e16dd164487e10a06e19bcb006d5c3788b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ef6379e16dd164487e10a06e19bcb006d5c3788b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ef6379e16dd164487e10a06e19bcb006d5c3788b"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 33,
    "deletions": 0
  },
  "files": [
    {
      "sha": "aac75220cfebee34a04f1464916b0d8e87cc30c7",
      "filename": "gas/NEWS",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/NEWS?ref=57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
      "patch": "@@ -11,6 +11,8 @@\n \n * Add support for Cortex-A710 for Arm.\n \n+* Add support for Scalable Matrix Extension (SME) for AArch64.\n+\n * Outputs of .ds.x directive and .tfloat directive with hex input from\n   x86 assembler have been reduced from 12 bytes to 10 bytes to match the\n   output of .tfloat directive."
    },
    {
      "sha": "b592e806796f843d889c5182eb8409c13777d115",
      "filename": "gas/config/tc-aarch64.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/config/tc-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/config/tc-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-aarch64.c?ref=57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
      "patch": "@@ -9244,6 +9244,17 @@ static const struct aarch64_option_cpu_value_table aarch64_features[] = {\n \t\t\t\t\t | AARCH64_FEATURE_SHA3, 0)},\n   {\"sve2-bitperm\",\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2_BITPERM, 0),\n \t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2, 0)},\n+  {\"sme\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SME, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16, 0)},\n+  {\"sme-f64\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SME_F64, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SME\n+\t\t\t\t\t | AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16, 0)},\n+  {\"sme-i64\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_SME_I64, 0),\n+\t\t\tAARCH64_FEATURE (AARCH64_FEATURE_SME\n+\t\t\t\t\t | AARCH64_FEATURE_SVE2\n+\t\t\t\t\t | AARCH64_FEATURE_BFLOAT16, 0)},\n   {\"bf16\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_BFLOAT16, 0),\n \t\t\tAARCH64_ARCH_NONE},\n   {\"i8mm\",\t\tAARCH64_FEATURE (AARCH64_FEATURE_I8MM, 0),"
    },
    {
      "sha": "6c3996362663936c6c1480f391f191e5bc961c8d",
      "filename": "gas/doc/c-aarch64.texi",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/doc/c-aarch64.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/gas/doc/c-aarch64.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-aarch64.texi?ref=57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
      "patch": "@@ -222,6 +222,12 @@ automatically cause those extensions to be disabled.\n @item @code{sm4} @tab ARMv8.2-A @tab No\n  @tab Enable the ARMv8.2-A SM3 and SM4 cryptographic extensions. This implies\n  @code{fp} and @code{simd}.\n+@item @code{sme} @tab Armv9-A @tab No\n+ @tab Enable SME Extension.\n+@item @code{sme-f64} @tab Armv9-A @tab No\n+ @tab Enable SME F64 Extension.\n+@item @code{sme-i64} @tab Armv9-A @tab No\n+ @tab Enable SME I64 Extension.\n @item @code{ssbs} @tab ARMv8-A @tab ARMv8.5-A or later\n  @tab Enable Speculative Store Bypassing Safe state read and write.\n @item @code{sve} @tab ARMv8.2-A @tab Armv9-A or later"
    },
    {
      "sha": "e361920bb0d50987d645052566a2ea69ef99eed3",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
      "patch": "@@ -51,6 +51,7 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_V8_4\t     (1ULL << 11) /* ARMv8.4 processors.  */\n #define AARCH64_FEATURE_V8_R\t     (1ULL << 12) /* Armv8-R processors.  */\n #define AARCH64_FEATURE_V8_7\t     (1ULL << 13) /* Armv8.7 processors.  */\n+#define AARCH64_FEATURE_SME\t     (1ULL << 14) /* Scalable Matrix Extension.  */\n #define AARCH64_FEATURE_LS64\t     (1ULL << 15) /* Atomic 64-byte load/store.  */\n #define AARCH64_FEATURE_PAC\t     (1ULL << 16) /* v8.3 Pointer Authentication.  */\n #define AARCH64_FEATURE_FP\t     (1ULL << 17) /* FP instructions.  */\n@@ -91,6 +92,8 @@ typedef uint32_t aarch64_insn;\n #define AARCH64_FEATURE_F64MM\t     (1ULL << 54)\n #define AARCH64_FEATURE_FLAGM\t     (1ULL << 55) /* v8.4 Flag Manipulation.  */\n #define AARCH64_FEATURE_V9\t     (1ULL << 56) /* Armv9.0-A processors.  */\n+#define AARCH64_FEATURE_SME_F64\t     (1ULL << 57) /* SME F64.  */\n+#define AARCH64_FEATURE_SME_I64\t     (1ULL << 58) /* SME I64.  */\n \n /* Crypto instructions are the combination of AES and SHA2.  */\n #define AARCH64_FEATURE_CRYPTO\t(AARCH64_FEATURE_SHA2 | AARCH64_FEATURE_AES)"
    },
    {
      "sha": "d63b081056aa723264da8a0d7c8100ea38eaecda",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57f02370a1e55bf09d3ede5ba6b2fcc78b40200a/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=57f02370a1e55bf09d3ede5ba6b2fcc78b40200a",
      "patch": "@@ -2401,6 +2401,14 @@ static const aarch64_feature_set aarch64_feature_sve2sm4 =\n   AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_SM4, 0);\n static const aarch64_feature_set aarch64_feature_sve2bitperm =\n   AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SVE2_BITPERM, 0);\n+static const aarch64_feature_set aarch64_feature_sme =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SME, 0);\n+static const aarch64_feature_set aarch64_feature_sme_f64 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SME\n+       | AARCH64_FEATURE_SME_F64, 0);\n+static const aarch64_feature_set aarch64_feature_sme_i64 =\n+  AARCH64_FEATURE (AARCH64_FEATURE_SVE2 | AARCH64_FEATURE_SME\n+       | AARCH64_FEATURE_SME_I64, 0);\n static const aarch64_feature_set aarch64_feature_v8_6 =\n   AARCH64_FEATURE (AARCH64_FEATURE_V8_6, 0);\n static const aarch64_feature_set aarch64_feature_v8_7 =\n@@ -2458,6 +2466,9 @@ static const aarch64_feature_set aarch64_feature_flagm =\n #define SVE2_SHA3\t&aarch64_feature_sve2sha3\n #define SVE2_SM4\t\t&aarch64_feature_sve2sm4\n #define SVE2_BITPERM\t&aarch64_feature_sve2bitperm\n+#define SME\t\t&aarch64_feature_sme\n+#define SME_F64\t\t&aarch64_feature_sme_f64\n+#define SME_I64\t\t&aarch64_feature_sme_i64\n #define ARMV8_6\t\t&aarch64_feature_v8_6\n #define ARMV8_6_SVE\t\t&aarch64_feature_v8_6\n #define BFLOAT16_SVE\t&aarch64_feature_bfloat16_sve"
    }
  ]
}