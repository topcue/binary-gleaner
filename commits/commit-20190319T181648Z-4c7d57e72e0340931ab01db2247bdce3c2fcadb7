{
  "sha": "4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGM3ZDU3ZTcyZTAzNDA5MzFhYjAxZGIyMjQ3YmRjZTNjMmZjYWRiNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-12T18:56:01Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-03-19T18:16:48Z"
    },
    "message": "Don't show \"display\"s twice in MI\n\nIf you run \"gdb -i=mi2\" and set a \"display\", then when \"next\"ing the\ndisplays will be shown twice:\n\n    ~\"1: x = 23\\n\"\n    ~\"7\\t  printf(\\\"%d\\\\n\\\", x);\\n\"\n    ~\"1: x = 23\\n\"\n    *stopped,reason=\"end-stepping-range\",frame={addr=\"0x0000000000400565\",func=\"main\",args=[],file=\"q.c\",fullname=\"/tmp/q.c\",line=\"7\"},thread-id=\"1\",stopped-threads=\"all\",core=\"1\"\n\nThe immediate cause of this is this code in mi_on_normal_stop_1:\n\n      print_stop_event (mi_uiout);\n\n      console_interp = interp_lookup (current_ui, INTERP_CONSOLE);\n      if (should_print_stop_to_console (console_interp, tp))\n\tprint_stop_event (mi->cli_uiout);\n\n... which obviously prints the stop twice.\n\nHowever, I think the first call to print_stop_event is intended just\nto emit the MI *stopped notification, which explains why the source\nline does not show up two times.\n\nThis patch fixes the bug by changing print_stop_event to only call\ndo_displays for non-MI-like ui-outs.\n\nTested on x86-64 Fedora 29.\n\ngdb/ChangeLog\n2019-03-19  Tom Tromey  <tromey@adacore.com>\n\n\t* mi/mi-interp.c (mi_on_normal_stop_1): Only show displays once.\n\t* infrun.h (print_stop_event): Add \"displays\" parameter.\n\t* infrun.c (print_stop_event): Add \"displays\" parameter.\n\ngdb/testsuite/ChangeLog\n2019-03-19  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.mi/mi2-cli-display.c: New file.\n\t* gdb.mi/mi2-cli-display.exp: New file.",
    "tree": {
      "sha": "cb73a7ab56d890e868d983aec7338b097d453f10",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cb73a7ab56d890e868d983aec7338b097d453f10"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cb24623460fe3e68794b79b79b0dbd5e62598d85",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cb24623460fe3e68794b79b79b0dbd5e62598d85",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cb24623460fe3e68794b79b79b0dbd5e62598d85"
    }
  ],
  "stats": {
    "total": 148,
    "additions": 142,
    "deletions": 6
  },
  "files": [
    {
      "sha": "be65681212ffe1fd883655206ba6b037799eab85",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-19  Tom Tromey  <tromey@adacore.com>\n+\n+\t* mi/mi-interp.c (mi_on_normal_stop_1): Only show displays once.\n+\t* infrun.h (print_stop_event): Add \"displays\" parameter.\n+\t* infrun.c (print_stop_event): Add \"displays\" parameter.\n+\n 2019-03-19  Pedro Alves  <palves@redhat.com>\n \n \t* tui/tui-out.c (tui_ui_out::do_field_string): Simplify."
    },
    {
      "sha": "550fbe7f5b9a79730148120ca6fdf9b369a53af1",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -7856,7 +7856,7 @@ print_stop_location (struct target_waitstatus *ws)\n /* See infrun.h.  */\n \n void\n-print_stop_event (struct ui_out *uiout)\n+print_stop_event (struct ui_out *uiout, bool displays)\n {\n   struct target_waitstatus last;\n   ptid_t last_ptid;\n@@ -7870,7 +7870,8 @@ print_stop_event (struct ui_out *uiout)\n     print_stop_location (&last);\n \n     /* Display the auto-display expressions.  */\n-    do_displays ();\n+    if (displays)\n+      do_displays ();\n   }\n \n   tp = inferior_thread ();"
    },
    {
      "sha": "e53fd81e71691b55b84f09a70052b11469ede64b",
      "filename": "gdb/infrun.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/infrun.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/infrun.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.h?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -167,9 +167,10 @@ extern void print_return_value (struct ui_out *uiout,\n \n /* Print current location without a level number, if we have changed\n    functions or hit a breakpoint.  Print source line if we have one.\n-   If the execution command captured a return value, print it.  */\n+   If the execution command captured a return value, print it.  If\n+   DISPLAYS is false, do not call 'do_displays'.  */\n \n-extern void print_stop_event (struct ui_out *uiout);\n+extern void print_stop_event (struct ui_out *uiout, bool displays = true);\n \n /* Pretty print the results of target_wait, for debugging purposes.  */\n "
    },
    {
      "sha": "3c5a0d8fb78e608b43c6f897b59cc28ff8aff5bd",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -625,10 +625,15 @@ mi_on_normal_stop_1 (struct bpstats *bs, int print_frame)\n \t  reason = tp->thread_fsm->async_reply_reason ();\n \t  mi_uiout->field_string (\"reason\", async_reason_lookup (reason));\n \t}\n-      print_stop_event (mi_uiout);\n \n       console_interp = interp_lookup (current_ui, INTERP_CONSOLE);\n-      if (should_print_stop_to_console (console_interp, tp))\n+      /* We only want to print the displays once, and we want it to\n+\t look just how it would on the console, so we use this to\n+\t decide whether the MI stop should include them.  */\n+      bool console_print = should_print_stop_to_console (console_interp, tp);\n+      print_stop_event (mi_uiout, !console_print);\n+\n+      if (console_print)\n \tprint_stop_event (mi->cli_uiout);\n \n       mi_uiout->field_int (\"thread-id\", tp->global_num);"
    },
    {
      "sha": "636800f2bf88a78e1514e2c401b1e249664cc3a8",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -1,3 +1,8 @@\n+2019-03-19  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.mi/mi2-cli-display.c: New file.\n+\t* gdb.mi/mi2-cli-display.exp: New file.\n+\n 2019-03-18  Joel Brobecker  <brobecker@adacore.com>\n \t    Tom Tromey  <tromey@adacore.com>\n "
    },
    {
      "sha": "552612d9430305e7ed2e3d851a1a5249837a2b61",
      "filename": "gdb/testsuite/gdb.mi/mi2-cli-display.c",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/gdb.mi/mi2-cli-display.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/gdb.mi/mi2-cli-display.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi2-cli-display.c?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -0,0 +1,32 @@\n+/* Copyright 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+do_tests (int x)\n+{\n+  ++x;\n+  ++x;\n+  ++x;\n+  ++x;\n+  return x;\n+}\n+\n+int\n+main (void)\n+{\n+  return do_tests (23);\n+}"
    },
    {
      "sha": "e12fe72964e9505c9626ecf592801fa84cfac8a3",
      "filename": "gdb/testsuite/gdb.mi/mi2-cli-display.exp",
      "status": "added",
      "additions": 86,
      "deletions": 0,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/gdb.mi/mi2-cli-display.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4c7d57e72e0340931ab01db2247bdce3c2fcadb7/gdb/testsuite/gdb.mi/mi2-cli-display.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi2-cli-display.exp?ref=4c7d57e72e0340931ab01db2247bdce3c2fcadb7",
      "patch": "@@ -0,0 +1,86 @@\n+# Copyright 2019 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Ensure that CLI \"display\"s aren't double-emitted in MI mode.\n+\n+load_lib mi-support.exp\n+set MIFLAGS \"-i=mi2\"\n+\n+if {[mi_gdb_start]} {\n+    continue\n+}\n+\n+standard_testfile\n+\n+if  { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n+    untested \"failed to compile\"\n+    return -1\n+}\n+\n+mi_delete_breakpoints\n+mi_gdb_reinitialize_dir $srcdir/$subdir\n+mi_gdb_load ${binfile}\n+\n+mi_runto do_tests\n+\n+# A helper procedure that checks for the display and the line number,\n+# and the following *stopped.  X is the expected value of \"x\" and is\n+# also used in test names.\n+proc check_cli_display {x show_source} {\n+    global mi_gdb_prompt\n+\n+    # Now check for the display and the source line.  We don't check\n+    # the source line too closely, since it's not really important\n+    # here, but we do check that the stop happened.\n+    set stop \"\\\\*stopped,reason=.*\\r\\n$mi_gdb_prompt$\"\n+    if {$show_source} {\n+\tset src \"~\\\"\\[0-9\\]+\\[^\\\"\\]*\\\\\\\\n\\\"\\r\\n\"\n+    } else {\n+\tset src \"\"\n+    }\n+    set display \"~\\\"1: x = $x\\\\\\\\n\\\"\\r\\n\"\n+    gdb_expect {\n+\t-re \"^${display}${src}${display}${stop}\" {\n+\t    # This case is the bug: the display is shown twice.\n+\t    fail \"check display and source line x=$x\"\n+\t}\n+\t-re \"^${src}${display}${stop}\" {\n+\t    verbose -log \"got <<<$expect_out(buffer)>>>\"\n+\t    pass \"check display and source line x=$x\"\n+\t}\n+\t-re \".*\\r\\n$mi_gdb_prompt$\" {\n+\t    verbose -log \"got <<<$expect_out(buffer)>>>\"\n+\t    fail \"check display and source line x=$x (unexpected output)\"\n+\t}\n+\ttimeout {\n+\t    fail \"check display and source line x=$x (timeout)\"\n+\t}\n+    }\n+}\n+\n+mi_gdb_test \"display x\" \\\n+    \"&\\\"display x\\\\\\\\n\\\"\\r\\n~\\\"1: x = 23\\\\\\\\n\\\"\\r\\n\\\\^done\" \\\n+    \"display x\"\n+\n+if {![mi_send_resuming_command \"interpreter-exec console next\" next]} {\n+    pass \"next\"\n+}\n+check_cli_display 24 1\n+\n+# Also check that displays are shown for -exec-next.\n+if {![mi_send_resuming_command exec-next exec-next]} {\n+    pass \"-exec-next\"\n+}\n+check_cli_display 25 0"
    }
  ]
}