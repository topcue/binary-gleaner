{
  "sha": "5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWVlMGJjMjNhNjhmZTJhNmE3NzE3YjMxZmRhMWRiODc4YjJjOTc2NA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-04T03:27:16Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-04T12:13:45Z"
    },
    "message": "sim: clean up bfd_vma printing\n\nA lot of this code predates the bfd_vma format define, so we have a\nrandom mix of casts to known types so we can printf the value.  Use\nthe BFD_VMA_FMT that now exists to simplify and reliability output\nacross different build configs.",
    "tree": {
      "sha": "89d9ac8cad39ef7afdf6dfa1d93a5f06b87a440f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89d9ac8cad39ef7afdf6dfa1d93a5f06b87a440f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "225bda24db9671e2087fda892f94141625836a40",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/225bda24db9671e2087fda892f94141625836a40",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/225bda24db9671e2087fda892f94141625836a40"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 79,
    "deletions": 42
  },
  "files": [
    {
      "sha": "783449941b286620640f8fc4b4b2bcd1b0050c07",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,10 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* cgen-trace.c (sim_disasm_perror_memory): Use BFD_VMA_FMT and drop\n+\tcast.\n+\t* sim-load.c (xprintf_bfd_vma): Delete.\n+\t(sim_load_file): Delete xprintf_bfd_vma calls.  Use BFD_VMA_FMT.\n+\n 2021-05-03  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* hw-events.h (hw_event_queue_schedule_tracef): Use format attribute."
    },
    {
      "sha": "649c37a61b1c0de44395f5265edcc2ae01b28d49",
      "filename": "sim/common/cgen-trace.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/cgen-trace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/cgen-trace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/cgen-trace.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -340,8 +340,8 @@ sim_disasm_perror_memory (int status, bfd_vma memaddr,\n     /* Actually, address between memaddr and memaddr + len was\n        out of bounds.  */\n     info->fprintf_func (info->stream,\n-\t\t\t\"Address 0x%x is out of bounds.\",\n-\t\t\t(int) memaddr);\n+\t\t\t\"Address 0x%\" BFD_VMA_FMT \"x is out of bounds.\",\n+\t\t\tmemaddr);\n }\n \n /* Disassemble using the CGEN opcode table."
    },
    {
      "sha": "04681c524a0cd30f3a5319ecd9064925fd986ad7",
      "filename": "sim/common/sim-load.c",
      "status": "modified",
      "additions": 6,
      "deletions": 18,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/sim-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/common/sim-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-load.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -38,7 +38,6 @@ static void eprintf (host_callback *, const char *, ...);\n static void xprintf (host_callback *, const char *, ...);\n static void report_transfer_performance\n   (host_callback *, unsigned long, time_t, time_t);\n-static void xprintf_bfd_vma (host_callback *, bfd_vma);\n \n /* Load program PROG into the simulator using the function DO_LOAD.\n    If PROG_BFD is non-NULL, the file has already been opened.\n@@ -122,12 +121,12 @@ sim_load_file (SIM_DESC sd, const char *myname, host_callback *callback,\n \t\tlma = bfd_section_vma (s);\n \t      if (verbose_p)\n \t\t{\n-\t\t  xprintf (callback, \"Loading section %s, size 0x%lx %s \",\n+\t\t  xprintf (callback,\n+\t\t\t   \"Loading section %s, size 0x%lx %s \"\n+\t\t\t   \"%\" BFD_VMA_FMT \"x\\n\",\n \t\t\t   bfd_section_name (s),\n \t\t\t   (unsigned long) size,\n-\t\t\t   (lma_p ? \"lma\" : \"vma\"));\n-\t\t  xprintf_bfd_vma (callback, lma);\n-\t\t  xprintf (callback, \"\\n\");\n+\t\t\t   (lma_p ? \"lma\" : \"vma\"), lma);\n \t\t}\n \t      data_count += size;\n \t      bfd_get_section_contents (result_bfd, s, buffer, 0, size);\n@@ -149,9 +148,8 @@ sim_load_file (SIM_DESC sd, const char *myname, host_callback *callback,\n   if (verbose_p)\n     {\n       end_time = time (NULL);\n-      xprintf (callback, \"Start address \");\n-      xprintf_bfd_vma (callback, bfd_get_start_address (result_bfd));\n-      xprintf (callback, \"\\n\");\n+      xprintf (callback, \"Start address %\" BFD_VMA_FMT \"x\\n\",\n+\t       bfd_get_start_address (result_bfd));\n       report_transfer_performance (callback, data_count, start_time, end_time);\n     }\n \n@@ -198,13 +196,3 @@ report_transfer_performance (host_callback *callback, unsigned long data_count,\n     xprintf (callback, \"%ld bits in <1 sec\", (data_count * 8));\n   xprintf (callback, \".\\n\");\n }\n-\n-/* Print a bfd_vma.\n-   This is intended to handle the vagaries of 32 vs 64 bits, etc.  */\n-\n-static void\n-xprintf_bfd_vma (host_callback *callback, bfd_vma vma)\n-{\n-  /* FIXME: for now */\n-  xprintf (callback, \"0x%lx\", (unsigned long) vma);\n-}"
    },
    {
      "sha": "ebf601fe9b9dfb556f489767de95bcf824b75b03",
      "filename": "sim/cr16/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cr16/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cr16/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_create_inferior): Use BFD_VMA_FMT and drop cast.\n+\n 2021-05-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "8f7fafa715e9ff082df382ba69ad86b8cb8d82f8",
      "filename": "sim/cr16/interp.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cr16/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cr16/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cr16/interp.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -672,7 +672,8 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n     start_address = 0x0;\n #ifdef DEBUG\n   if (cr16_debug)\n-    sim_io_printf (sd, \"sim_create_inferior:  PC=0x%lx\\n\", (long) start_address);\n+    sim_io_printf (sd, \"sim_create_inferior:  PC=0x%\" BFD_VMA_FMT \"x\\n\",\n+\t\t   start_address);\n #endif\n   {\n     SIM_CPU *cpu = STATE_CPU (sd, 0);"
    },
    {
      "sha": "49db6ef32b2d14f3b7c6132de44a0dc8dd4f436a",
      "filename": "sim/cris/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cris/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cris/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim-if.c (cris_load_elf_file): Use BFD_VMA_FMT\n+\t(cris_handle_interpreter): Likewise.  Delete phaddr.\n+\t(sim_open): Use PRIx32.\n+\n 2021-05-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "edd7885caf703bed88b57d32badb9989cb4bc371",
      "filename": "sim/cris/sim-if.c",
      "status": "modified",
      "additions": 9,
      "deletions": 7,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cris/sim-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/cris/sim-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/cris/sim-if.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -257,14 +257,16 @@ cris_load_elf_file (SIM_DESC sd, struct bfd *abfd, sim_write_fn do_write)\n       buf = xmalloc (phdr[i].p_filesz);\n \n       if (verbose)\n-\tsim_io_printf (sd, \"Loading segment at 0x%lx, size 0x%lx\\n\",\n+\tsim_io_printf (sd,\n+\t\t       \"Loading segment at 0x%\" BFD_VMA_FMT \"x, size 0x%lx\\n\",\n \t\t       lma, phdr[i].p_filesz);\n \n       if (bfd_seek (abfd, phdr[i].p_offset, SEEK_SET) != 0\n \t  || (bfd_bread (buf, phdr[i].p_filesz, abfd) != phdr[i].p_filesz))\n \t{\n \t  sim_io_eprintf (sd,\n-\t\t\t  \"%s: could not read segment at 0x%lx, size 0x%lx\\n\",\n+\t\t\t  \"%s: could not read segment at 0x%\" BFD_VMA_FMT \"x, \"\n+\t\t\t  \"size 0x%lx\\n\",\n \t\t\t  STATE_MY_NAME (sd), lma, phdr[i].p_filesz);\n \t  free (buf);\n \t  return FALSE;\n@@ -273,7 +275,8 @@ cris_load_elf_file (SIM_DESC sd, struct bfd *abfd, sim_write_fn do_write)\n       if (do_write (sd, lma, buf, phdr[i].p_filesz) != phdr[i].p_filesz)\n \t{\n \t  sim_io_eprintf (sd,\n-\t\t\t  \"%s: could not load segment at 0x%lx, size 0x%lx\\n\",\n+\t\t\t  \"%s: could not load segment at 0x%\" BFD_VMA_FMT \"x, \"\n+\t\t\t  \"size 0x%lx\\n\",\n \t\t\t  STATE_MY_NAME (sd), lma, phdr[i].p_filesz);\n \t  free (buf);\n \t  return FALSE;\n@@ -495,7 +498,6 @@ static bfd_boolean\n cris_handle_interpreter (SIM_DESC sd, struct bfd *abfd)\n {\n   int i, n_hdrs;\n-  bfd_vma phaddr;\n   bfd_byte buf[4];\n   char *interp = NULL;\n   struct bfd *ibfd;\n@@ -571,7 +573,7 @@ cris_handle_interpreter (SIM_DESC sd, struct bfd *abfd)\n \t memory area, so we go via a temporary area.  Luckily, the\n \t interpreter is supposed to be small, less than 0x40000\n \t bytes.  */\n-      sim_do_commandf (sd, \"memory region 0x%lx,0x%lx\",\n+      sim_do_commandf (sd, \"memory region 0x%\" BFD_VMA_FMT \"x,0x%lx\",\n \t\t       interp_load_addr, interpsiz);\n \n       /* Now that memory for the interpreter is defined, load it.  */\n@@ -885,8 +887,8 @@ sim_open (SIM_OPEN_KIND kind, host_callback *callback, struct bfd *abfd,\n \n   /* Allocate core managed memory if none specified by user.  */\n   if (sim_core_read_buffer (sd, NULL, read_map, &c, startmem, 1) == 0)\n-    sim_do_commandf (sd, \"memory region 0x%lx,0x%lx\", startmem,\n-\t\t     endmem - startmem);\n+    sim_do_commandf (sd, \"memory region 0x%\" PRIx32 \"x,0x%\" PRIu32 \"x\",\n+\t\t     startmem, endmem - startmem);\n \n   /* Allocate simulator I/O managed memory if none specified by user.  */\n   if (cris_have_900000xxif)"
    },
    {
      "sha": "bbf97d20318b1a95e488a2ee0a949cd17f2f0e89",
      "filename": "sim/d10v/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* d10v_sim.h (decode_pc): Delete.\n+\t* interp.c (sim_create_inferior): Use BFD_VMA_FMT.\n+\n 2021-05-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "64f974f01dbcca66dbf55a0a5af34ffd6ef4148f",
      "filename": "sim/d10v/d10v_sim.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/d10v_sim.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/d10v_sim.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/d10v_sim.h?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -444,7 +444,6 @@ while (0)\n \n extern uint8 *dmem_addr (SIM_DESC, SIM_CPU *, uint16 offset);\n extern uint8 *imem_addr (SIM_DESC, SIM_CPU *, uint32);\n-extern bfd_vma decode_pc (void);\n \n #define\tRB(x)\t(*(dmem_addr (sd, cpu, x)))\n #define SB(addr,data)\t( RB(addr) = (data & 0xff))"
    },
    {
      "sha": "86e566a79fb836fdcde6c7e21d274ac1eaf85df6",
      "filename": "sim/d10v/interp.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/d10v/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/d10v/interp.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1160,7 +1160,8 @@ sim_create_inferior (SIM_DESC sd, struct bfd *abfd,\n     start_address = 0xffc0 << 2;\n #ifdef DEBUG\n   if (d10v_debug)\n-    sim_io_printf (sd, \"sim_create_inferior:  PC=0x%lx\\n\", (long) start_address);\n+    sim_io_printf (sd, \"sim_create_inferior:  PC=0x%\" BFD_VMA_FMT \"x\\n\",\n+\t\t   start_address);\n #endif\n   {\n     SIM_CPU *cpu = STATE_CPU (sd, 0);"
    },
    {
      "sha": "a6b142a6ec28a896712161892126b3aaa573fde1",
      "filename": "sim/erc32/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/erc32/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/erc32/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* func.c (bfd_load): Use BFD_VMA_FMT.\n+\n 2021-05-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "52428e48350fc5d8ef7865d7bb609e09cc65628a",
      "filename": "sim/erc32/func.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/erc32/func.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/erc32/func.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/erc32/func.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1056,7 +1056,7 @@ bfd_load (const char *fname)\n \t    section_size = bfd_section_size (section);\n \n \t    if (sis_verbose)\n-\t\tprintf(\"\\nsection %s at 0x%08lx (0x%lx bytes)\",\n+\t\tprintf(\"\\nsection %s at 0x%08\" BFD_VMA_FMT \"x (0x%lx bytes)\",\n \t\t       section_name, section_address, section_size);\n \n \t    /* Text, data or lit */"
    },
    {
      "sha": "df06256098359fd9af279148443559cff7282f11",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* load.c (m32c_load): Use BFD_VMA_FMT and drop casts.\n+\n 2021-05-02  Mike Frysinger  <vapier@gentoo.org>\n \n \t* m32c.opc: Include ansidecl.h."
    },
    {
      "sha": "86e774e3abe9dc4caa635b2d7b75595aad9fca3a",
      "filename": "sim/m32c/load.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/m32c/load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/m32c/load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/load.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -97,8 +97,8 @@ m32c_load (bfd * prog)\n \n \t  base = bfd_section_lma (s);\n \t  if (verbose)\n-\t    fprintf (stderr, \"[load a=%08x s=%08x %s]\\n\",\n-\t\t     (int) base, (int) size, bfd_section_name (s));\n+\t    fprintf (stderr, \"[load a=%08\" BFD_VMA_FMT \"x s=%08x %s]\\n\",\n+\t\t     base, (int) size, bfd_section_name (s));\n \t  buf = (char *) malloc (size);\n \t  bfd_get_section_contents (prog, s, buf, 0, size);\n \t  mem_put_blk (base, buf, size);"
    },
    {
      "sha": "1be5181dc6d1bc43daeb635a8a8d3b047b0820eb",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* load.c (rl78_load): Use BFD_VMA_FMT and drop casts.\n+\n 2021-05-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* config.in, configure: Regenerate."
    },
    {
      "sha": "c137ba6e40e42ea430cea2ee7817da7700e37192",
      "filename": "sim/rl78/load.c",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rl78/load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rl78/load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/load.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -128,12 +128,15 @@ rl78_load (bfd *prog, host_callback *callbacks, const char * const simname)\n \n       base = p->p_paddr;\n       if (verbose > 1)\n-\tfprintf (stderr, \"[load segment: lma=%08x vma=%08x size=%08x]\\n\",\n-\t\t (int) base, (int) p->p_vaddr, (int) size);\n+\tfprintf (stderr,\n+\t\t \"[load segment: lma=%08\" BFD_VMA_FMT \"x vma=%08x \"\n+\t\t \"size=%08\" BFD_VMA_FMT \"x]\\n\",\n+\t\t base, (int) p->p_vaddr, size);\n       if (callbacks)\n \txprintf (callbacks,\n-\t         \"Loading section %s, size %#lx lma %08lx vma %08lx\\n\",\n-\t         find_section_name_by_offset (prog, p->p_offset),\n+\t\t \"Loading section %s, size %#\" BFD_VMA_FMT \"x \"\n+\t\t \"lma %08\" BFD_VMA_FMT \"x vma %08lx\\n\",\n+\t\t find_section_name_by_offset (prog, p->p_offset),\n \t\t size, base, p->p_vaddr);\n \n       buf = xmalloc (size);\n@@ -147,13 +150,16 @@ rl78_load (bfd *prog, host_callback *callbacks, const char * const simname)\n \n       if (bfd_bread (buf, size, prog) != size)\n \t{\n-\t  fprintf (stderr, \"%s: Failed to read %lx bytes\\n\", simname, size);\n+\t  fprintf (stderr, \"%s: Failed to read %\" BFD_VMA_FMT \"x bytes\\n\",\n+\t\t   simname, size);\n \t  continue;\n \t}\n \n       if (base > 0xeffff || base + size > 0xeffff)\n \t{\n-\t  fprintf (stderr, \"%s, Can't load image to RAM/SFR space: 0x%lx - 0x%lx\\n\",\n+\t  fprintf (stderr,\n+\t\t   \"%s, Can't load image to RAM/SFR space: 0x%\" BFD_VMA_FMT \"x \"\n+\t\t   \"- 0x%\" BFD_VMA_FMT \"x\\n\",\n \t\t   simname, base, base+size);\n \t  continue;\n \t}"
    },
    {
      "sha": "21a8ff626cf19345216cf9fdc4f5772b193e59f5",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* load.c (rx_load): Use BFD_VMA_FMT and drop casts.\n+\n 2021-05-03  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* trace.c (op_printf): Likewise."
    },
    {
      "sha": "b04826f55c7f212839cc3bc575ab5df3f2dcfb97",
      "filename": "sim/rx/load.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rx/load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5ee0bc23a68fe2a6a7717b31fda1db878b2c9764/sim/rx/load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/load.c?ref=5ee0bc23a68fe2a6a7717b31fda1db878b2c9764",
      "patch": "@@ -128,8 +128,10 @@ rx_load (bfd *prog, host_callback *callback)\n \n       base = p->p_paddr;\n       if (verbose > 1)\n-\tfprintf (stderr, \"[load segment: lma=%08x vma=%08x size=%08x]\\n\",\n-\t\t (int) base, (int) p->p_vaddr, (int) size);\n+\tfprintf (stderr,\n+\t\t \"[load segment: lma=%08\" BFD_VMA_FMT \"x vma=%08x \"\n+\t\t \"size=%08\" BFD_VMA_FMT \"x]\\n\",\n+\t\t base, (int) p->p_vaddr, size);\n       if (callback)\n \txprintf (callback,\n \t         \"Loading section %s, size %#lx lma %08lx vma %08lx\\n\",\n@@ -151,7 +153,7 @@ rx_load (bfd *prog, host_callback *callback)\n \t}\n       if (bfd_bread (buf, size, prog) != size)\n \t{\n-\t  fprintf (stderr, \"Failed to read %lx bytes\\n\", (long) size);\n+\t  fprintf (stderr, \"Failed to read %\" BFD_VMA_FMT \"x bytes\\n\", size);\n \t  continue;\n \t}\n "
    }
  ]
}