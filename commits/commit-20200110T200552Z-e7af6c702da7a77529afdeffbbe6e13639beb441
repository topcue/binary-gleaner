{
  "sha": "e7af6c702da7a77529afdeffbbe6e13639beb441",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTdhZjZjNzAyZGE3YTc3NTI5YWZkZWZmYmJlNmUxMzYzOWJlYjQ0MQ==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-01-10T20:05:52Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:05:52Z"
    },
    "message": "Avoid another inferior_ptid reference in gdb/remote.c\n\nThe multi-target patch makes inferior_ptid point to null_ptid before\ncalling into target_wait, which catches bad uses of inferior_ptid,\nsince the current selected thread in gdb shouldn't have much relation\nto the thread that reports an event.\n\nOne such bad use is found in remote_target::remote_parse_stop_reply,\nwhere we handle the 'W' or 'X' packets (process exit), and the remote\ntarget does not support the multi-process extensions, i.e., it does\nnot report the PID of the process that exited.\n\nWith the multi-target patch, that would result in a failed assertion,\ntrying to find the inferior for process pid 0.\n\ngdb/ChangeLog:\n2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\t    Pedro Alves\t <palves@redhat.com>\n\n\t* remote.c (remote_target::remote_parse_stop_reply) <W/X packets>:\n\tIf no process is specified, return null_ptid instead of\n\tinferior_ptid.\n\t(remote_target::wait_as): Handle TARGET_WAITKIND_EXITED /\n\tTARGET_WAITKIND_SIGNALLED with no pid.\n\ngdb/testsuite/ChangeLog:\n2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\t    Pedro Alves\t <palves@redhat.com>\n\n\t* gdb.server/connect-without-multi-process.exp: Also test\n\tcontinuing to end.",
    "tree": {
      "sha": "0347439761a903062dc94fddb8f33833053a2277",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0347439761a903062dc94fddb8f33833053a2277"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e7af6c702da7a77529afdeffbbe6e13639beb441",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7af6c702da7a77529afdeffbbe6e13639beb441",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e7af6c702da7a77529afdeffbbe6e13639beb441",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e7af6c702da7a77529afdeffbbe6e13639beb441/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "31ba933ec6a14b1f7fdbd9ba51f759e2c0537b9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/31ba933ec6a14b1f7fdbd9ba51f759e2c0537b9d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/31ba933ec6a14b1f7fdbd9ba51f759e2c0537b9d"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 34,
    "deletions": 6
  },
  "files": [
    {
      "sha": "78922021681c4646766da4aaee7549def8fc2ab8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e7af6c702da7a77529afdeffbbe6e13639beb441",
      "patch": "@@ -1,3 +1,12 @@\n+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\t    Pedro Alves\t <palves@redhat.com>\n+\n+\t* remote.c (remote_target::remote_parse_stop_reply) <W/X packets>:\n+\tIf no process is specified, return null_ptid instead of\n+\tinferior_ptid.\n+\t(remote_target::wait_as): Handle TARGET_WAITKIND_EXITED /\n+\tTARGET_WAITKIND_SIGNALLED with no pid.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* remote.c (first_remote_resumed_thread): New."
    },
    {
      "sha": "ffdeede7af5330777f60c3f5136863eb13be7f1f",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 13,
      "deletions": 5,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=e7af6c702da7a77529afdeffbbe6e13639beb441",
      "patch": "@@ -7441,7 +7441,6 @@ Packet: '%s'\\n\"),\n     case 'W':\t\t/* Target exited.  */\n     case 'X':\n       {\n-\tint pid;\n \tULONGEST value;\n \n \t/* GDB used to accept only 2 hex chars here.  Stubs should\n@@ -7465,8 +7464,9 @@ Packet: '%s'\\n\"),\n \t      event->ws.value.sig = GDB_SIGNAL_UNKNOWN;\n \t  }\n \n-\t/* If no process is specified, assume inferior_ptid.  */\n-\tpid = inferior_ptid.pid ();\n+\t/* If no process is specified, return null_ptid, and let the\n+\t   caller figure out the right process to use.  */\n+\tint pid = 0;\n \tif (*p == '\\0')\n \t  ;\n \telse if (*p == ';')\n@@ -7842,8 +7842,16 @@ remote_target::wait_as (ptid_t ptid, target_waitstatus *status, int options)\n \tevent_ptid = first_remote_resumed_thread ();\n     }\n   else\n-    /* A process exit.  Invalidate our notion of current thread.  */\n-    record_currthread (rs, minus_one_ptid);\n+    {\n+      /* A process exit.  Invalidate our notion of current thread.  */\n+      record_currthread (rs, minus_one_ptid);\n+      /* It's possible that the packet did not include a pid.  */\n+      if (event_ptid == null_ptid)\n+\tevent_ptid = first_remote_resumed_thread ();\n+      /* EVENT_PTID could still be NULL_PTID.  Double-check.  */\n+      if (event_ptid == null_ptid)\n+\tevent_ptid = magic_null_ptid;\n+    }\n \n   return event_ptid;\n }"
    },
    {
      "sha": "52d52d15f6cd48b29be5b5c0ec3e9fe3bb314ffe",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e7af6c702da7a77529afdeffbbe6e13639beb441",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-10  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\t    Pedro Alves\t <palves@redhat.com>\n+\n+\t* gdb.server/connect-without-multi-process.exp: Also test\n+\tcontinuing to end.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.base/remote-exec-file.exp: New file."
    },
    {
      "sha": "123089260dde2613b49e1d9ccabef49fca95cb5d",
      "filename": "gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e7af6c702da7a77529afdeffbbe6e13639beb441/gdb/testsuite/gdb.server/connect-without-multi-process.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/connect-without-multi-process.exp?ref=e7af6c702da7a77529afdeffbbe6e13639beb441",
      "patch": "@@ -14,7 +14,7 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n # Check that we can connect to GDBserver with the multiprocess\n-# extensions disabled, and run to main.\n+# extensions disabled, run to main, and finish the process.\n \n load_lib gdbserver-support.exp\n \n@@ -52,6 +52,11 @@ proc do_test {multiprocess} {\n \t\"target $gdbserver_protocol\"\n \n     gdb_test \"continue\" \"main .*\" \"continue to main\"\n+\n+    # The W/X packets do not include the PID of the exiting process\n+    # without the multi-process extensions.  Check that we handle\n+    # process exit correctly in that case.\n+    gdb_continue_to_end\n }\n \n foreach multiprocess { \"off\" \"auto\" } {"
    }
  ]
}