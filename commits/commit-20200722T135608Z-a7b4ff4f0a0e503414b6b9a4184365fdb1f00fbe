{
  "sha": "a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTdiNGZmNGYwYTBlNTAzNDE0YjZiOWE0MTg0MzY1ZmRiMWYwMGZiZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-07-22T13:56:08Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-07-22T13:56:08Z"
    },
    "message": "gdb/jit: skip jit symbol lookup if already detected the symbols don't exist\n\nTo detect whether an objfile is a JITer, we lookup JIT interface\nsymbols in the objfile.  If an objfile does not have these symbols, we\nconclude that it is not a JITer.  An objfile that does not have the\nsymbols will never have them.  Therefore, once we do a lookup and find\nout that the objfile does not have JIT symbols, just set a flag so\nthat we can skip symbol lookup for that objfile the next time we reset\nJIT breakpoints.\n\ngdb/ChangeLog:\n2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>\n\t    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\t* objfiles.h (struct objfile) <skip_jit_symbol_lookup>: New field.\n\t* jit.c (jit_breakpoint_re_set_internal): Use the\n\t`skip_jit_symbol_lookup` field.",
    "tree": {
      "sha": "8d7c740bc940b30ba277f6b609baf9daa97f0f20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8d7c740bc940b30ba277f6b609baf9daa97f0f20"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2340e834dfb3110a33e2867297469d5ff33013a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2340e834dfb3110a33e2867297469d5ff33013a4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2340e834dfb3110a33e2867297469d5ff33013a4"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 26,
    "deletions": 2
  },
  "files": [
    {
      "sha": "a768df0d76c0a57a42b24e275fd5750744956ab2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>\n+\t    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\t* objfiles.h (struct objfile) <skip_jit_symbol_lookup>: New field.\n+\t* jit.c (jit_breakpoint_re_set_internal): Use the\n+\t`skip_jit_symbol_lookup` field.\n+\n 2020-07-22  Simon Marchi  <simon.marchi@polymtl.ca>\n \t    Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n "
    },
    {
      "sha": "024c66e7add34c5b2183871e88a95db9da9169d1",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
      "patch": "@@ -893,19 +893,30 @@ jit_breakpoint_re_set_internal (struct gdbarch *gdbarch, program_space *pspace)\n {\n   for (objfile *the_objfile : pspace->objfiles ())\n     {\n+      if (the_objfile->skip_jit_symbol_lookup)\n+\tcontinue;\n+\n       /* Lookup the registration symbol.  If it is missing, then we\n \t assume we are not attached to a JIT.  */\n       bound_minimal_symbol reg_symbol\n \t= lookup_minimal_symbol (jit_break_name, nullptr, the_objfile);\n       if (reg_symbol.minsym == NULL\n \t  || BMSYMBOL_VALUE_ADDRESS (reg_symbol) == 0)\n-\tcontinue;\n+\t{\n+\t  /* No need to repeat the lookup the next time.  */\n+\t  the_objfile->skip_jit_symbol_lookup = true;\n+\t  continue;\n+\t}\n \n       bound_minimal_symbol desc_symbol\n \t= lookup_minimal_symbol (jit_descriptor_name, NULL, the_objfile);\n       if (desc_symbol.minsym == NULL\n \t  || BMSYMBOL_VALUE_ADDRESS (desc_symbol) == 0)\n-\tcontinue;\n+\t{\n+\t  /* No need to repeat the lookup the next time.  */\n+\t  the_objfile->skip_jit_symbol_lookup = true;\n+\t  continue;\n+\t}\n \n       jiter_objfile_data *objf_data\n \t= get_jiter_objfile_data (reg_symbol.objfile);"
    },
    {
      "sha": "549977ad2570f0bdb4260364f8fa8337347c0970",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=a7b4ff4f0a0e503414b6b9a4184365fdb1f00fbe",
      "patch": "@@ -706,6 +706,12 @@ struct objfile\n   /* JIT-related data for this objfile, if the objfile is JITed;\n      that is, it was produced by a JITer.  */\n   std::unique_ptr<jited_objfile_data> jited_data = nullptr;\n+\n+  /* A flag that is set to true if the JIT interface symbols are not\n+     found in this objfile, so that we can skip the symbol lookup the\n+     next time.  If an objfile does not have the symbols, it will\n+     never have them.  */\n+  bool skip_jit_symbol_lookup = false;\n };\n \n /* A deleter for objfile.  */"
    }
  ]
}