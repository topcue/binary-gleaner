{
  "sha": "c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzBjMTIxYjAxYzhhOTQwOGFlMjJlZTkwMDdkZDAyNzNmNGM4ZDBiZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-25T01:51:35Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-10-25T02:59:44Z"
    },
    "message": "readelf PT_PHDR check\n\nWhen PT_PHDR isn't covered by a PT_LOAD header, p_vaddr in PT_PHDR\nisn't valid but the value might just pass a vaddr test.  So test\np_offset as well.\n\n\t* readelf.c (process_program_headers): Check PT_PHDR p_offset\n\tas well as p_vaddr.  Use p_filesz, not p_memsz, in vaddr test.",
    "tree": {
      "sha": "27f0cac4e340b47a217a797cf5ccfa6ce53530c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/27f0cac4e340b47a217a797cf5ccfa6ce53530c6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e2ffdcea6c797fe17886024048f33b178b864a67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2ffdcea6c797fe17886024048f33b178b864a67",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e2ffdcea6c797fe17886024048f33b178b864a67"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 16,
    "deletions": 5
  },
  "files": [
    {
      "sha": "f1b3c0e72cdefab38fb9b9eb90c223c0f0a5b5c5",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_program_headers): Check PT_PHDR p_offset\n+\tas well as p_vaddr.  Use p_filesz, not p_memsz, in vaddr test.\n+\n 2019-10-21  Alan Modra  <amodra@gmail.com>\n \n \tPR 452"
    },
    {
      "sha": "370bc4c1b7d9483b6ce9335171ae19a6feb29f8e",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0c121b01c8a9408ae22ee9007dd0273f4c8d0be/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=c0c121b01c8a9408ae22ee9007dd0273f4c8d0be",
      "patch": "@@ -5262,11 +5262,17 @@ process_program_headers (Filedata * filedata)\n \t      unsigned int j;\n \n \t      for (j = 1; j < filedata->file_header.e_phnum; j++)\n-\t\tif (filedata->program_headers[j].p_vaddr <= segment->p_vaddr\n-\t\t    && (filedata->program_headers[j].p_vaddr\n-\t\t\t+ filedata->program_headers[j].p_memsz)\n-\t\t    >= (segment->p_vaddr + segment->p_filesz))\n-\t\t  break;\n+\t\t{\n+\t\t  Elf_Internal_Phdr *load = filedata->program_headers + j;\n+\t\t  if (load->p_type == PT_LOAD\n+\t\t      && load->p_offset <= segment->p_offset\n+\t\t      && (load->p_offset + load->p_filesz\n+\t\t\t  >= segment->p_offset + segment->p_filesz)\n+\t\t      && load->p_vaddr <= segment->p_vaddr\n+\t\t      && (load->p_vaddr + load->p_filesz\n+\t\t\t  >= segment->p_vaddr + segment->p_filesz))\n+\t\t    break;\n+\t\t}\n \t      if (j == filedata->file_header.e_phnum)\n \t\terror (_(\"the PHDR segment is not covered by a LOAD segment\\n\"));\n \t    }"
    }
  ]
}