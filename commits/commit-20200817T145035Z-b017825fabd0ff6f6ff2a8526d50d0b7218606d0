{
  "sha": "b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjAxNzgyNWZhYmQwZmY2ZjZmZjJhODUyNmQ1MGQwYjcyMTg2MDZkMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-17T14:50:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-17T14:50:35Z"
    },
    "message": "Convert CORE_ADDR to Python using gdb_py_object_from_ulongest\n\nAn internal test failed on a riscv64-elf cross build because\nInferior.search_memory returned a negative value.  I tracked this down\nto to use of PyLong_FromLong in infpy_search_memory.  Then, I looked\nat other conversions of CORE_ADDR to Python and fixed these as well.\n\nI don't think there is a good way to write a test for this.\n\ngdb/ChangeLog\n2020-08-17  Tom Tromey  <tromey@adacore.com>\n\n\t* python/py-inferior.c (infpy_search_memory): Use\n\tgdb_py_object_from_ulongest.\n\t* python/py-infevents.c (create_inferior_call_event_object)\n\t(create_memory_changed_event_object): Use\n\tgdb_py_object_from_ulongest.\n\t* python/py-linetable.c (ltpy_entry_get_pc): Use\n\tgdb_py_object_from_ulongest.",
    "tree": {
      "sha": "a35b73b6f6bb832682dc9b0e957fe3881b4bd96c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a35b73b6f6bb832682dc9b0e957fe3881b4bd96c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7635cf797e267246b858d3daa3d781135baa0ea4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7635cf797e267246b858d3daa3d781135baa0ea4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7635cf797e267246b858d3daa3d781135baa0ea4"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 14,
    "deletions": 4
  },
  "files": [
    {
      "sha": "e15dd15f7be4ee326afd584f740de4ae57edb196",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "patch": "@@ -1,3 +1,13 @@\n+2020-08-17  Tom Tromey  <tromey@adacore.com>\n+\n+\t* python/py-inferior.c (infpy_search_memory): Use\n+\tgdb_py_object_from_ulongest.\n+\t* python/py-infevents.c (create_inferior_call_event_object)\n+\t(create_memory_changed_event_object): Use\n+\tgdb_py_object_from_ulongest.\n+\t* python/py-linetable.c (ltpy_entry_get_pc): Use\n+\tgdb_py_object_from_ulongest.\n+\n 2020-08-17  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* loc.c (class symbol_needs_eval_context): Fix indentation."
    },
    {
      "sha": "a7699510db717fb45fd85624ce590f541c9b8ba8",
      "filename": "gdb/python/py-inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-inferior.c?ref=b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "patch": "@@ -736,7 +736,7 @@ infpy_search_memory (PyObject *self, PyObject *args, PyObject *kw)\n   GDB_PY_HANDLE_EXCEPTION (except);\n \n   if (found)\n-    return PyLong_FromLong (found_addr);\n+    return gdb_py_object_from_ulongest (found_addr).release ();\n   else\n     Py_RETURN_NONE;\n }"
    },
    {
      "sha": "3cf746103c7fb1816a25bd7380719f260eff7a19",
      "filename": "gdb/python/py-infevents.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-infevents.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-infevents.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-infevents.c?ref=b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "patch": "@@ -48,7 +48,7 @@ create_inferior_call_event_object (inferior_call_kind flag, ptid_t ptid,\n   if (evpy_add_attribute (event.get (), \"ptid\", ptid_obj.get ()) < 0)\n     return NULL;\n \n-  gdbpy_ref<> addr_obj (PyLong_FromLongLong (addr));\n+  gdbpy_ref<> addr_obj = gdb_py_object_from_ulongest (addr);\n   if (addr_obj == NULL)\n     return NULL;\n \n@@ -97,7 +97,7 @@ create_memory_changed_event_object (CORE_ADDR addr, ssize_t len)\n   if (event == NULL)\n     return NULL;\n \n-  gdbpy_ref<> addr_obj (PyLong_FromLongLong (addr));\n+  gdbpy_ref<> addr_obj = gdb_py_object_from_ulongest (addr);\n   if (addr_obj == NULL)\n     return NULL;\n "
    },
    {
      "sha": "49e98c0d8988493616721994bb9a12c1a35b1ca8",
      "filename": "gdb/python/py-linetable.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-linetable.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b017825fabd0ff6f6ff2a8526d50d0b7218606d0/gdb/python/py-linetable.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-linetable.c?ref=b017825fabd0ff6f6ff2a8526d50d0b7218606d0",
      "patch": "@@ -336,7 +336,7 @@ ltpy_entry_get_pc (PyObject *self, void *closure)\n {\n   linetable_entry_object *obj = (linetable_entry_object *) self;\n \n-  return  gdb_py_object_from_longest (obj->pc).release ();\n+  return gdb_py_object_from_ulongest (obj->pc).release ();\n }\n \n /* LineTable iterator functions.  */"
    }
  ]
}