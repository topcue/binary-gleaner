{
  "sha": "440cf44eb0f70830b8d8ac35289f84129c7a35c1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQwY2Y0NGViMGY3MDgzMGI4ZDhhYzM1Mjg5Zjg0MTI5YzdhMzVjMQ==",
  "commit": {
    "author": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-03-04T16:08:13Z"
    },
    "committer": {
      "name": "Luis Machado",
      "email": "luis.machado@linaro.org",
      "date": "2020-03-04T16:12:17Z"
    },
    "message": "Revert \"gdb: Do not print empty-group regs when printing general ones\"\n\nRevert the change since it breaks existing behavior of \"info registers\"\nfor some architectures. At least AArch64 and ARM are impacted by this change.\n\ngdb/ChangeLog:\n\n2020-03-04  Luis Machado  <luis.machado@linaro.org>\n\n\tRevert aa66aac47b4dd38f9524ddb5546c08cc09930d37 due to regressions\n\tin \"info registers\" for AArch64/ARM.\n\n\tThe change caused \"info registers\" to not print GPR's.\n\n\tgdb/ChangeLog:\n\n\t2020-02-01  Shahab Vahedi  <shahab@synopsys.com>\n\n\t* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0\n\twhen reg->group is empty and reggroup is not.",
    "tree": {
      "sha": "a9b87cebe881a6aa2abadb66b1f1a25a328a40e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a9b87cebe881a6aa2abadb66b1f1a25a328a40e3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/440cf44eb0f70830b8d8ac35289f84129c7a35c1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/440cf44eb0f70830b8d8ac35289f84129c7a35c1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/440cf44eb0f70830b8d8ac35289f84129c7a35c1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/440cf44eb0f70830b8d8ac35289f84129c7a35c1/comments",
  "author": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "luislinaro",
    "id": 53092780,
    "node_id": "MDQ6VXNlcjUzMDkyNzgw",
    "avatar_url": "https://avatars.githubusercontent.com/u/53092780?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/luislinaro",
    "html_url": "https://github.com/luislinaro",
    "followers_url": "https://api.github.com/users/luislinaro/followers",
    "following_url": "https://api.github.com/users/luislinaro/following{/other_user}",
    "gists_url": "https://api.github.com/users/luislinaro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/luislinaro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/luislinaro/subscriptions",
    "organizations_url": "https://api.github.com/users/luislinaro/orgs",
    "repos_url": "https://api.github.com/users/luislinaro/repos",
    "events_url": "https://api.github.com/users/luislinaro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/luislinaro/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0bab6cf11655d310690e48d7c07b4aa28a87026d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0bab6cf11655d310690e48d7c07b4aa28a87026d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0bab6cf11655d310690e48d7c07b4aa28a87026d"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 19,
    "deletions": 8
  },
  "files": [
    {
      "sha": "36b3f3dc439912a428a3fafedd2da9de3f96a72e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/440cf44eb0f70830b8d8ac35289f84129c7a35c1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/440cf44eb0f70830b8d8ac35289f84129c7a35c1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=440cf44eb0f70830b8d8ac35289f84129c7a35c1",
      "patch": "@@ -1,3 +1,17 @@\n+2020-03-04  Luis Machado  <luis.machado@linaro.org>\n+\n+\tRevert aa66aac47b4dd38f9524ddb5546c08cc09930d37 due to regressions\n+\tin \"info registers\" for AArch64/ARM.\n+\n+\tThe change caused \"info registers\" to not print GPR's.\n+\n+\tgdb/ChangeLog:\n+\n+\t2020-02-01  Shahab Vahedi  <shahab@synopsys.com>\n+\n+\t* target-descriptions.c (tdesc_register_in_reggroup_p): Return 0\n+\twhen reg->group is empty and reggroup is not.\n+\n 2020-03-03  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/frame.c (struct dwarf2_frame_cache)"
    },
    {
      "sha": "04711ba2fa52b8eabbf7b9ce5d82196b2ade0ee2",
      "filename": "gdb/target-descriptions.c",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/440cf44eb0f70830b8d8ac35289f84129c7a35c1/gdb/target-descriptions.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/440cf44eb0f70830b8d8ac35289f84129c7a35c1/gdb/target-descriptions.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-descriptions.c?ref=440cf44eb0f70830b8d8ac35289f84129c7a35c1",
      "patch": "@@ -977,16 +977,13 @@ tdesc_register_in_reggroup_p (struct gdbarch *gdbarch, int regno,\n {\n   struct tdesc_reg *reg = tdesc_find_register (gdbarch, regno);\n \n-  if (reg != NULL)\n-    {\n-      if (reggroup == all_reggroup)\n+  if (reg != NULL && !reg->group.empty ()\n+      && (reg->group == reggroup_name (reggroup)))\n \treturn 1;\n \n-      else if (reggroup == save_reggroup || reggroup == restore_reggroup)\n-\treturn reg->save_restore;\n-      else\n-\treturn (int) (reg->group == reggroup_name (reggroup));\n-    }\n+  if (reg != NULL\n+      && (reggroup == save_reggroup || reggroup == restore_reggroup))\n+    return reg->save_restore;\n \n   return -1;\n }"
    }
  ]
}