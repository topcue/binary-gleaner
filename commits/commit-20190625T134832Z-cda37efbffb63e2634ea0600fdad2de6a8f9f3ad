{
  "sha": "cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2RhMzdlZmJmZmI2M2UyNjM0ZWEwNjAwZmRhZDJkZTZhOGY5ZjNhZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T20:22:21Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:32Z"
    },
    "message": "Introduce make_visible method\n\nThis introduceds the make_visible to tui_win_info and overrides it in\nsubclasses as appropriate.  This allows the removal of the\ntui_win_is_source_type, as it is no longer used.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.c (tui_win_info::make_visible)\n\t(tui_source_window_base::make_visible): New methods.\n\t(make_all_visible): Make method call.\n\t* tui/tui-data.h (struct tui_win_info) <make_visible>: New method.\n\t(struct tui_source_window_base, struct tui_cmd_window): Override\n\tmake_visible.\n\t(tui_win_is_source_type): Don't declare.\n\t* tui/tui-data.c (tui_win_is_source_type): Remove.",
    "tree": {
      "sha": "8edadf6bec084e722503d27cc686e3cfd591e53d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8edadf6bec084e722503d27cc686e3cfd591e53d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6a0ee02c22b78b6d49fda99b6f2f9154d0cb0a47",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a0ee02c22b78b6d49fda99b6f2f9154d0cb0a47",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6a0ee02c22b78b6d49fda99b6f2f9154d0cb0a47"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 38,
    "deletions": 18
  },
  "files": [
    {
      "sha": "c4e464be20c99c5a299d4657734224d76f7de8eb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
      "patch": "@@ -1,3 +1,14 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.c (tui_win_info::make_visible)\n+\t(tui_source_window_base::make_visible): New methods.\n+\t(make_all_visible): Make method call.\n+\t* tui/tui-data.h (struct tui_win_info) <make_visible>: New method.\n+\t(struct tui_source_window_base, struct tui_cmd_window): Override\n+\tmake_visible.\n+\t(tui_win_is_source_type): Don't declare.\n+\t* tui/tui-data.c (tui_win_is_source_type): Remove.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (show_source_or_disasm_and_command): Remove"
    },
    {
      "sha": "6e1df0136f026de2ce680754163f7bb7766e6040",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 6,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
      "patch": "@@ -63,12 +63,6 @@ static void free_content_elements (tui_win_content,\n ** PUBLIC FUNCTIONS\n **********************************/\n \n-int\n-tui_win_is_source_type (enum tui_win_type win_type)\n-{\n-  return (win_type == SRC_WIN || win_type == DISASSEM_WIN);\n-}\n-\n int\n tui_win_is_auxillary (enum tui_win_type win_type)\n {"
    },
    {
      "sha": "4362af086bfd98d787eb2029e1810f25e780b14c",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
      "patch": "@@ -255,6 +255,9 @@ struct tui_win_info\n     return false;\n   }\n \n+  /* Make this window visible or invisible.  */\n+  virtual void make_visible (int visible);\n+\n   /* Methods to scroll the contents of this window.  Note that they\n      are named with \"_scroll\" coming at the end because the more\n      obvious \"scroll_forward\" is defined as a macro in term.h.  */\n@@ -295,6 +298,8 @@ struct tui_source_window_base : public tui_win_info\n     return m_has_locator;\n   }\n \n+  void make_visible (int visible) override;\n+\n   /* Does the locator belong to this window?  */\n   bool m_has_locator = false;\n   /* Execution information window.  */\n@@ -388,6 +393,10 @@ struct tui_cmd_window : public tui_win_info\n \n   void clear_detail () override;\n \n+  void make_visible (int visible) override\n+  {\n+  }\n+\n   int start_line = 0;\n \n protected:\n@@ -403,7 +412,6 @@ struct tui_cmd_window : public tui_win_info\n   }\n };\n \n-extern int tui_win_is_source_type (enum tui_win_type win_type);\n extern int tui_win_is_auxillary (enum tui_win_type win_type);\n extern void tui_set_win_highlight (struct tui_win_info *win_info,\n \t\t\t\t   int highlight);"
    },
    {
      "sha": "1308437befda766f956301a704f97d0160d94a98",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 18,
      "deletions": 11,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda37efbffb63e2634ea0600fdad2de6a8f9f3ad/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=cda37efbffb63e2634ea0600fdad2de6a8f9f3ad",
      "patch": "@@ -211,6 +211,22 @@ tui_make_invisible (struct tui_gen_win_info *win_info)\n   make_visible (win_info, 0);\n }\n \n+/* See tui-data.h.  */\n+\n+void\n+tui_win_info::make_visible (int visible)\n+{\n+  ::make_visible (&generic, visible);\n+}\n+\n+/* See tui-data.h.  */\n+\n+void\n+tui_source_window_base::make_visible (int visible)\n+{\n+  ::make_visible (execution_info, visible);\n+  tui_win_info::make_visible (visible);\n+}\n \n /* Makes all windows invisible (except the command and locator\n    windows).  */\n@@ -221,17 +237,8 @@ make_all_visible (int visible)\n \n   for (i = 0; i < MAX_MAJOR_WINDOWS; i++)\n     {\n-      if (tui_win_list[i] != NULL\n-\t  && ((tui_win_list[i])->generic.type) != CMD_WIN)\n-\t{\n-\t  if (tui_win_is_source_type ((tui_win_list[i])->generic.type))\n-\t    {\n-\t      tui_source_window_base *base\n-\t\t= (tui_source_window_base *) tui_win_list[i];\n-\t      make_visible (base->execution_info, visible);\n-\t    }\n-\t  make_visible (&tui_win_list[i]->generic, visible);\n-\t}\n+      if (tui_win_list[i] != NULL)\n+\ttui_win_list[i]->make_visible (visible);\n     }\n \n   return;"
    }
  ]
}