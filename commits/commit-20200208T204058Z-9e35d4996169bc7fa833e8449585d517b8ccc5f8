{
  "sha": "9e35d4996169bc7fa833e8449585d517b8ccc5f8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWUzNWQ0OTk2MTY5YmM3ZmE4MzNlODQ0OTU4NWQ1MTdiOGNjYzVmOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:58Z"
    },
    "message": "Remove die_reader_specs::comp_dir\n\ndie_reader_specs::comp_dir is assigned but never read; this patch\nremoves it.\n\ngdb/ChangeLog\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2read.c (struct die_reader_specs) <comp_dir>: Remove.\n\t(init_cu_die_reader, read_cutu_die_from_dwo): Update.\n\nChange-Id: I9818a2593197a6972cddec23cd2f3dd0ce28f580",
    "tree": {
      "sha": "afa821ca01adda4d19e17a02f14097512cac0f38",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/afa821ca01adda4d19e17a02f14097512cac0f38"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9e35d4996169bc7fa833e8449585d517b8ccc5f8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e35d4996169bc7fa833e8449585d517b8ccc5f8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9e35d4996169bc7fa833e8449585d517b8ccc5f8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e35d4996169bc7fa833e8449585d517b8ccc5f8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1eba2311e1a31072538aaa7937dd4cb893aea634",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1eba2311e1a31072538aaa7937dd4cb893aea634",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1eba2311e1a31072538aaa7937dd4cb893aea634"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 5,
    "deletions": 11
  },
  "files": [
    {
      "sha": "15a85a6e35dc55b228533f80e3f727116e85e9b6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e35d4996169bc7fa833e8449585d517b8ccc5f8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e35d4996169bc7fa833e8449585d517b8ccc5f8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9e35d4996169bc7fa833e8449585d517b8ccc5f8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2read.c (struct die_reader_specs) <comp_dir>: Remove.\n+\t(init_cu_die_reader, read_cutu_die_from_dwo): Update.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2read.h (struct die_info): Don't declare."
    },
    {
      "sha": "05311974793754c4d5dc5583cd46f4214dc64d21",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 0,
      "deletions": 11,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e35d4996169bc7fa833e8449585d517b8ccc5f8/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e35d4996169bc7fa833e8449585d517b8ccc5f8/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=9e35d4996169bc7fa833e8449585d517b8ccc5f8",
      "patch": "@@ -903,9 +903,6 @@ struct die_reader_specs\n   /* The end of the buffer.  */\n   const gdb_byte *buffer_end;\n \n-  /* The value of the DW_AT_comp_dir attribute.  */\n-  const char *comp_dir;\n-\n   /* The abbreviation table to use when reading the DIEs.  */\n   struct abbrev_table *abbrev_table;\n };\n@@ -6914,7 +6911,6 @@ init_cu_die_reader (struct die_reader_specs *reader,\n   reader->die_section = section;\n   reader->buffer = section->buffer;\n   reader->buffer_end = section->buffer + section->size;\n-  reader->comp_dir = NULL;\n   reader->abbrev_table = abbrev_table;\n }\n \n@@ -7096,13 +7092,6 @@ read_cutu_die_from_dwo (struct dwarf2_per_cu_data *this_cu,\n       dump_die (comp_unit_die, dwarf_die_debug);\n     }\n \n-  /* Save the comp_dir attribute.  If there is no DWP file then we'll read\n-     TUs by skipping the stub and going directly to the entry in the DWO file.\n-     However, skipping the stub means we won't get DW_AT_comp_dir, so we have\n-     to get it via circuitous means.  Blech.  */\n-  if (comp_dir != NULL)\n-    result_reader->comp_dir = DW_STRING (comp_dir);\n-\n   /* Skip dummy compilation units.  */\n   if (info_ptr >= begin_info_ptr + dwo_unit->length\n       || peek_abbrev_code (abfd, info_ptr) == 0)"
    }
  ]
}