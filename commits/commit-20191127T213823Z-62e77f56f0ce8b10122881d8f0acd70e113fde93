{
  "sha": "62e77f56f0ce8b10122881d8f0acd70e113fde93",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjJlNzdmNTZmMGNlOGIxMDEyMjg4MWQ4ZjBhY2Q3MGUxMTNmZGU5Mw==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-19T02:48:36Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-11-27T21:38:23Z"
    },
    "message": "Turn off threaded minsym demangling by default\n\nPer discussion on gdb-patches with Joel, this patch turns off multihreaded\nsymbol loading by default. It can be turned on using:\n  maint set worker-threads unlimited\n\nTo keep the behavior as close as possible to the old code, it still\ncalls symbol_set_names in the old place if n_worker_threads is 0.\n\ngdb/ChangeLog:\n\n2019-11-27  Christian Biesinger  <cbiesinger@google.com>\n\n\t* maint.c (n_worker_threads): Default to 0.\n\t(worker_threads_disabled): New function.\n\t* maint.h (worker_threads_disabled): New function.\n\t* minsyms.c (minimal_symbol_reader::record_full): Call symbol_set_names\n\there if worker_threads_disabled () is true.\n\t(minimal_symbol_reader::install): Skip all threading if\n\tworker_threads_disabled () is true.\n\nChange-Id: I92ba4f6bbf07363189666327cad452d6b9c8e01d",
    "tree": {
      "sha": "52c2785eed5d10604811d19995270b4afde2fe44",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/52c2785eed5d10604811d19995270b4afde2fe44"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/62e77f56f0ce8b10122881d8f0acd70e113fde93",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e77f56f0ce8b10122881d8f0acd70e113fde93",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/62e77f56f0ce8b10122881d8f0acd70e113fde93",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62e77f56f0ce8b10122881d8f0acd70e113fde93/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f29d7f6b83f60ca8dd64ec89ea803f79324ac12f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f29d7f6b83f60ca8dd64ec89ea803f79324ac12f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f29d7f6b83f60ca8dd64ec89ea803f79324ac12f"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 33,
    "deletions": 4
  },
  "files": [
    {
      "sha": "3033cf6455a8791e796c4c7c3ac8e7d914e534de",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=62e77f56f0ce8b10122881d8f0acd70e113fde93",
      "patch": "@@ -1,3 +1,13 @@\n+2019-11-27  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* maint.c (n_worker_threads): Default to 0.\n+\t(worker_threads_disabled): New function.\n+\t* maint.h (worker_threads_disabled): New function.\n+\t* minsyms.c (minimal_symbol_reader::record_full): Call symbol_set_names\n+\there if worker_threads_disabled () is true.\n+\t(minimal_symbol_reader::install): Skip all threading if\n+\tworker_threads_disabled () is true.\n+\n 2019-11-27  Christian Biesinger  <cbiesinger@google.com>\n \n \t* minsyms.c (add_minsym_to_hash_table): Use a previously computed"
    },
    {
      "sha": "dbc949a61c0a69d7b0c7c5925942f6b3583d97f3",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=62e77f56f0ce8b10122881d8f0acd70e113fde93",
      "patch": "@@ -845,7 +845,12 @@ maintenance_set_profile_cmd (const char *args, int from_tty,\n }\n #endif\n \n-static int n_worker_threads = -1;\n+static int n_worker_threads = 0;\n+\n+bool worker_threads_disabled ()\n+{\n+  return n_worker_threads == 0;\n+}\n \n /* Update the thread pool for the desired number of threads.  */\n static void"
    },
    {
      "sha": "cbaf9deaa8832620d5ee49efdd2dd678d9fcec0e",
      "filename": "gdb/maint.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/maint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/maint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.h?ref=62e77f56f0ce8b10122881d8f0acd70e113fde93",
      "patch": "@@ -26,6 +26,8 @@ extern void set_per_command_time (int);\n \n extern void set_per_command_space (int);\n \n+extern bool worker_threads_disabled ();\n+\n /* Records a run time and space usage to be used as a base for\n    reporting elapsed time or change in space.  */\n "
    },
    {
      "sha": "4f7260b3803fa0a89fc4b7bef6cec3885b2dcebe",
      "filename": "gdb/minsyms.c",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/minsyms.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62e77f56f0ce8b10122881d8f0acd70e113fde93/gdb/minsyms.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/minsyms.c?ref=62e77f56f0ce8b10122881d8f0acd70e113fde93",
      "patch": "@@ -54,6 +54,7 @@\n #include <algorithm>\n #include \"safe-ctype.h\"\n #include \"gdbsupport/parallel-for.h\"\n+#include \"maint.h\"\n \n #if CXX_STD_THREAD\n #include <mutex>\n@@ -1137,6 +1138,15 @@ minimal_symbol_reader::record_full (gdb::string_view name,\n   else\n     msymbol->name = name.data ();\n \n+  if (worker_threads_disabled ())\n+    {\n+      /* To keep our behavior as close as possible to the previous non-threaded\n+\t behavior for GDB 9.1, we call symbol_set_names here when threads\n+\t are disabled.  */\n+      symbol_set_names (msymbol, msymbol->name, false, m_objfile->per_bfd);\n+      msymbol->name_set = 1;\n+    }\n+\n   SET_MSYMBOL_VALUE_ADDRESS (msymbol, address);\n   MSYMBOL_SECTION (msymbol) = section;\n \n@@ -1407,10 +1417,12 @@ minimal_symbol_reader::install ()\n \t\t     (msym, demangled_name,\n \t\t      &m_objfile->per_bfd->storage_obstack);\n \t\t   msym->name_set = 1;\n-\n-\t\t   hash_values[idx].mangled_name_hash\n-\t\t     = fast_hash (msym->name, hash_values[idx].name_length);\n \t\t }\n+\t       /* This mangled_name_hash computation has to be outside of\n+\t\t  the name_set check, or symbol_set_names below will\n+\t\t  be called with an invalid hash value.  */\n+\t       hash_values[idx].mangled_name_hash\n+\t\t = fast_hash (msym->name, hash_values[idx].name_length);\n \t       hash_values[idx].minsym_hash\n \t\t = msymbol_hash (msym->linkage_name ());\n \t       /* We only use this hash code if the search name differs"
    }
  ]
}