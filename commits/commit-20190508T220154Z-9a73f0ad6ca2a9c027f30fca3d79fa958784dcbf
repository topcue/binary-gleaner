{
  "sha": "9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWE3M2YwYWQ2Y2EyYTljMDI3ZjMwZmNhM2Q3OWZhOTU4Nzg0ZGNiZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-01T21:44:00Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:54Z"
    },
    "message": "Convert hppa-tdep.c to type-safe registry API\n\nThis changes hppa-tdep.c to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* hppa-tdep.c (hppa_objfile_priv_data): Change type.\n\t(hppa_init_objfile_priv_data, read_unwind_info)\n\t(find_unwind_entry, _initialize_hppa_tdep): Update.",
    "tree": {
      "sha": "32155ad7b1ccf2fdd080a271f8d320c22e0cfbc2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/32155ad7b1ccf2fdd080a271f8d320c22e0cfbc2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8127a2fab5780f27a1c9998b0be4d8b5c28c1603",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8127a2fab5780f27a1c9998b0be4d8b5c28c1603"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 13,
    "deletions": 10
  },
  "files": [
    {
      "sha": "8194236ddf304481395330213d31074c7fb6949c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* hppa-tdep.c (hppa_objfile_priv_data): Change type.\n+\t(hppa_init_objfile_priv_data, read_unwind_info)\n+\t(find_unwind_entry, _initialize_hppa_tdep): Update.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* elfread.c (elf_objfile_gnu_ifunc_cache_data): Change type."
    },
    {
      "sha": "be30359638c37fab2bd3ac3e9e4389333e43a7ad",
      "filename": "gdb/hppa-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf/gdb/hppa-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf/gdb/hppa-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/hppa-tdep.c?ref=9a73f0ad6ca2a9c027f30fca3d79fa958784dcbf",
      "patch": "@@ -84,7 +84,9 @@ struct hppa_objfile_private\n    that separately and make this static. The solib data is probably hpux-\n    specific, so we can create a separate extern objfile_data that is registered\n    by hppa-hpux-tdep.c and shared with pa64solib.c and somsolib.c.  */\n-static const struct objfile_data *hppa_objfile_priv_data = NULL;\n+static const struct objfile_key<hppa_objfile_private,\n+\t\t\t\tgdb::noop_deleter<hppa_objfile_private>>\n+  hppa_objfile_priv_data;\n \n /* Get at various relevent fields of an instruction word.  */\n #define MASK_5 0x1f\n@@ -208,7 +210,7 @@ hppa_init_objfile_priv_data (struct objfile *objfile)\n   hppa_objfile_private *priv\n     = OBSTACK_ZALLOC (&objfile->objfile_obstack, hppa_objfile_private);\n \n-  set_objfile_data (objfile, hppa_objfile_priv_data, priv);\n+  hppa_objfile_priv_data.set (objfile, priv);\n \n   return priv;\n }\n@@ -466,8 +468,7 @@ read_unwind_info (struct objfile *objfile)\n \t compare_unwind_entries);\n \n   /* Keep a pointer to the unwind information.  */\n-  obj_private = (struct hppa_objfile_private *) \n-\t        objfile_data (objfile, hppa_objfile_priv_data);\n+  obj_private = hppa_objfile_priv_data.get (objfile);\n   if (obj_private == NULL)\n     obj_private = hppa_init_objfile_priv_data (objfile);\n \n@@ -501,16 +502,14 @@ find_unwind_entry (CORE_ADDR pc)\n     {\n       struct hppa_unwind_info *ui;\n       ui = NULL;\n-      priv = ((struct hppa_objfile_private *)\n-\t      objfile_data (objfile, hppa_objfile_priv_data));\n+      priv = hppa_objfile_priv_data.get (objfile);\n       if (priv)\n \tui = ((struct hppa_objfile_private *) priv)->unwind_info;\n \n       if (!ui)\n \t{\n \t  read_unwind_info (objfile);\n-\t  priv = ((struct hppa_objfile_private *)\n-\t\t  objfile_data (objfile, hppa_objfile_priv_data));\n+\t  priv = hppa_objfile_priv_data.get (objfile);\n \t  if (priv == NULL)\n \t    error (_(\"Internal error reading unwind information.\"));\n \t  ui = ((struct hppa_objfile_private *) priv)->unwind_info;\n@@ -3174,8 +3173,6 @@ _initialize_hppa_tdep (void)\n {\n   gdbarch_register (bfd_arch_hppa, hppa_gdbarch_init, hppa_dump_tdep);\n \n-  hppa_objfile_priv_data = register_objfile_data ();\n-\n   add_cmd (\"unwind\", class_maintenance, unwind_command,\n \t   _(\"Print unwind table entry at given address.\"),\n \t   &maintenanceprintlist);"
    }
  ]
}