{
  "sha": "f09ce22d6a2266c3bbe5061eb61e7fad65568652",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjA5Y2UyMmQ2YTIyNjZjM2JiZTUwNjFlYjYxZTdmYWQ2NTU2ODY1Mg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-08T15:15:11Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2019-03-09T13:09:38Z"
    },
    "message": "Split rank_one_type_parm_set from rank_one_type\n\ngdb/ChangeLog:\n\n\t* gdbtypes.c (rank_one_type_parm_set): New function extracted\n\tfrom...\n\t(rank_one_type): ... this.",
    "tree": {
      "sha": "8ea097359ff24faeed682afad4512b29f57b685c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8ea097359ff24faeed682afad4512b29f57b685c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f09ce22d6a2266c3bbe5061eb61e7fad65568652",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f09ce22d6a2266c3bbe5061eb61e7fad65568652",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f09ce22d6a2266c3bbe5061eb61e7fad65568652",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f09ce22d6a2266c3bbe5061eb61e7fad65568652/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "595f96a94448d1327aeac8783622e390794a722c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/595f96a94448d1327aeac8783622e390794a722c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/595f96a94448d1327aeac8783622e390794a722c"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 23,
    "deletions": 10
  },
  "files": [
    {
      "sha": "b96a40dedb5dfc1b35b5cb3a26cf0028f479c2fd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f09ce22d6a2266c3bbe5061eb61e7fad65568652/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f09ce22d6a2266c3bbe5061eb61e7fad65568652/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f09ce22d6a2266c3bbe5061eb61e7fad65568652",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* gdbtypes.c (rank_one_type_parm_set): New function extracted\n+\tfrom...\n+\t(rank_one_type): ... this.\n+\n 2019-03-08  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* gdbtypes.c (rank_one_type_parm_struct): New function extracted"
    },
    {
      "sha": "729d84962a300e457956d3daeb8b699b118cdabc",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 17,
      "deletions": 10,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f09ce22d6a2266c3bbe5061eb61e7fad65568652/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f09ce22d6a2266c3bbe5061eb61e7fad65568652/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=f09ce22d6a2266c3bbe5061eb61e7fad65568652",
      "patch": "@@ -4157,6 +4157,22 @@ rank_one_type_parm_struct (struct type *parm, struct type *arg, struct value *va\n     }\n }\n \n+/* rank_one_type helper for when PARM's type code is TYPE_CODE_SET.  */\n+\n+static struct rank\n+rank_one_type_parm_set (struct type *parm, struct type *arg, struct value *value)\n+{\n+  switch (TYPE_CODE (arg))\n+    {\n+      /* Not in C++ */\n+    case TYPE_CODE_SET:\n+      return rank_one_type (TYPE_FIELD_TYPE (parm, 0),\n+\t\t\t    TYPE_FIELD_TYPE (arg, 0), NULL);\n+    default:\n+      return INCOMPATIBLE_TYPE_BADNESS;\n+    }\n+}\n+\n /* Compare one type (PARM) for compatibility with another (ARG).\n  * PARM is intended to be the parameter type of a function; and\n  * ARG is the supplied argument's type.  This function tests if\n@@ -4301,16 +4317,7 @@ rank_one_type (struct type *parm, struct type *arg, struct value *value)\n \n       break;\n     case TYPE_CODE_SET:\n-      switch (TYPE_CODE (arg))\n-\t{\n-\t  /* Not in C++ */\n-\tcase TYPE_CODE_SET:\n-\t  return rank_one_type (TYPE_FIELD_TYPE (parm, 0), \n-\t\t\t\tTYPE_FIELD_TYPE (arg, 0), NULL);\n-\tdefault:\n-\t  return INCOMPATIBLE_TYPE_BADNESS;\n-\t}\n-      break;\n+      return rank_one_type_parm_set (parm, arg, value);\n     case TYPE_CODE_VOID:\n     default:\n       return INCOMPATIBLE_TYPE_BADNESS;"
    }
  ]
}