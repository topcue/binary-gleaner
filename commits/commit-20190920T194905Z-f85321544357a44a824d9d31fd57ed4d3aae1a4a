{
  "sha": "f85321544357a44a824d9d31fd57ed4d3aae1a4a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Zjg1MzIxNTQ0MzU3YTQ0YTgyNGQ5ZDMxZmQ1N2VkNGQzYWFlMWE0YQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-23T22:36:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-09-20T19:49:05Z"
    },
    "message": "Change tui_make_status_line to return std::string\n\nThis changes tui_make_status_line to return std::string.  This cleans\nit up a bit, and removes some explicit memory management.\n\ngdb/ChangeLog\n2019-09-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-stack.c (tui_make_status_line): Return std::string.\n\t(tui_locator_window::rerender): Update.",
    "tree": {
      "sha": "37fdfff7e86fab7ed000e6e902184a35a6590b6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/37fdfff7e86fab7ed000e6e902184a35a6590b6f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f85321544357a44a824d9d31fd57ed4d3aae1a4a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f85321544357a44a824d9d31fd57ed4d3aae1a4a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f85321544357a44a824d9d31fd57ed4d3aae1a4a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f85321544357a44a824d9d31fd57ed4d3aae1a4a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2d81b349982daae463bd29a87e962dde6d099392",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2d81b349982daae463bd29a87e962dde6d099392",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2d81b349982daae463bd29a87e962dde6d099392"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 30,
    "deletions": 44
  },
  "files": [
    {
      "sha": "862748efc1cfc4ca3a570446d79b01f181fccf33",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f85321544357a44a824d9d31fd57ed4d3aae1a4a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f85321544357a44a824d9d31fd57ed4d3aae1a4a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f85321544357a44a824d9d31fd57ed4d3aae1a4a",
      "patch": "@@ -1,3 +1,8 @@\n+2019-09-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-stack.c (tui_make_status_line): Return std::string.\n+\t(tui_locator_window::rerender): Update.\n+\n 2019-09-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_base)"
    },
    {
      "sha": "a2e4a161bb77722aba9deeb89f8006a393b7ff59",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 25,
      "deletions": 44,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f85321544357a44a824d9d31fd57ed4d3aae1a4a/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f85321544357a44a824d9d31fd57ed4d3aae1a4a/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=f85321544357a44a824d9d31fd57ed4d3aae1a4a",
      "patch": "@@ -66,14 +66,12 @@ tui_locator_win_info_ptr (void)\n /* Create the status line to display as much information as we can on\n    this single line: target name, process number, current function,\n    current line, current PC, SingleKey mode.  */\n-static char *\n+static std::string\n tui_make_status_line (struct tui_locator_window *loc)\n {\n-  char *string;\n   char line_buf[50], *pname;\n-  char *buf;\n   int status_size;\n-  int i, proc_width;\n+  int proc_width;\n   const char *pid_name;\n   int target_width;\n   int pid_width;\n@@ -97,8 +95,6 @@ tui_make_status_line (struct tui_locator_window *loc)\n     pid_width = MAX_PID_WIDTH;\n \n   status_size = tui_term_width ();\n-  string = (char *) xmalloc (status_size + 1);\n-  buf = (char*) alloca (status_size + 1);\n \n   /* Translate line number and obtain its size.  */\n   if (loc->line_no > 0)\n@@ -158,61 +154,47 @@ tui_make_status_line (struct tui_locator_window *loc)\n   pname = loc->proc_name;\n \n   /* Now create the locator line from the string version of the\n-     elements.  We could use sprintf() here but that wouldn't ensure\n-     that we don't overrun the size of the allocated buffer.\n-     strcat_to_buf() will.  */\n-  *string = (char) 0;\n+     elements.  */\n+  string_file string;\n \n   if (target_width > 0)\n-    {\n-      sprintf (buf, \"%*.*s \",\n-               -target_width, target_width, target_shortname);\n-      strcat_to_buf (string, status_size, buf);\n-    }\n+    string.printf (\"%*.*s \", -target_width, target_width, target_shortname);\n   if (pid_width > 0)\n-    {\n-      sprintf (buf, \"%*.*s \",\n-               -pid_width, pid_width, pid_name);\n-      strcat_to_buf (string, status_size, buf);\n-    }\n-  \n+    string.printf (\"%*.*s \", -pid_width, pid_width, pid_name);\n+\n   /* Show whether we are in SingleKey mode.  */\n   if (tui_current_key_mode == TUI_SINGLE_KEY_MODE)\n     {\n-      strcat_to_buf (string, status_size, SINGLE_KEY);\n-      strcat_to_buf (string, status_size, \" \");\n+      string.puts (SINGLE_KEY);\n+      string.puts (\" \");\n     }\n \n   /* Procedure/class name.  */\n   if (proc_width > 0)\n     {\n       if (strlen (pname) > proc_width)\n-        sprintf (buf, \"%s%*.*s* \", PROC_PREFIX,\n-                 1 - proc_width, proc_width - 1, pname);\n+        string.printf (\"%s%*.*s* \", PROC_PREFIX,\n+\t\t       1 - proc_width, proc_width - 1, pname);\n       else\n-        sprintf (buf, \"%s%*.*s \", PROC_PREFIX,\n-                 -proc_width, proc_width, pname);\n-      strcat_to_buf (string, status_size, buf);\n+        string.printf (\"%s%*.*s \", PROC_PREFIX,\n+\t\t       -proc_width, proc_width, pname);\n     }\n \n   if (line_width > 0)\n-    {\n-      sprintf (buf, \"%s%*.*s \", LINE_PREFIX,\n-               -line_width, line_width, line_buf);\n-      strcat_to_buf (string, status_size, buf);\n-    }\n+    string.printf (\"%s%*.*s \", LINE_PREFIX,\n+\t\t   -line_width, line_width, line_buf);\n   if (pc_width > 0)\n     {\n-      strcat_to_buf (string, status_size, PC_PREFIX);\n-      strcat_to_buf (string, status_size, pc_buf);\n+      string.puts (PC_PREFIX);\n+      string.puts (pc_buf);\n     }\n-  \n-  \n-  for (i = strlen (string); i < status_size; i++)\n-    string[i] = ' ';\n-  string[status_size] = (char) 0;\n \n-  return string;\n+  if (string.size () < status_size)\n+    string.puts (n_spaces (status_size - string.size ()));\n+  else if (string.size () > status_size)\n+    string.string ().erase (status_size, string.size ());\n+\n+  return std::move (string.string ());\n }\n \n /* Get a printable name for the function at the address.  The symbol\n@@ -252,20 +234,19 @@ tui_locator_window::rerender ()\n {\n   if (handle != NULL)\n     {\n-      char *string = tui_make_status_line (this);\n+      std::string string = tui_make_status_line (this);\n       wmove (handle, 0, 0);\n       /* We ignore the return value from wstandout and wstandend, casting\n \t them to void in order to avoid a compiler warning.  The warning\n \t itself was introduced by a patch to ncurses 5.7 dated 2009-08-29,\n \t changing these macro to expand to code that causes the compiler\n \t to generate an unused-value warning.  */\n       (void) wstandout (handle);\n-      waddstr (handle, string);\n+      waddstr (handle, string.c_str ());\n       wclrtoeol (handle);\n       (void) wstandend (handle);\n       refresh_window ();\n       wmove (handle, 0, 0);\n-      xfree (string);\n     }\n }\n "
    }
  ]
}