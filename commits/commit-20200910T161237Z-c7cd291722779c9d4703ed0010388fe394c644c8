{
  "sha": "c7cd291722779c9d4703ed0010388fe394c644c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdjZDI5MTcyMjc3OWM5ZDQ3MDNlZDAwMTAzODhmZTM5NGM2NDRjOA==",
  "commit": {
    "author": {
      "name": "Siddhesh Poyarekar",
      "email": "siddesh.poyarekar@arm.com",
      "date": "2020-09-01T08:55:52Z"
    },
    "committer": {
      "name": "Siddhesh Poyarekar",
      "email": "siddhesh@gotplt.org",
      "date": "2020-09-10T16:12:37Z"
    },
    "message": "aarch64: Return an error on conditional branch to an undefined symbol\n\nThe fix in 7e05773767820b441b23a16628b55c98cb1aef46 introduced a PLT\nfor conditional jumps when the target symbol is undefined.  This is\nincorrect because conditional branch relocations are not allowed to\nclobber IP0/IP1 and hence, should not result in a dynamic relocation.\n\nRevert that change and in its place, issue an error when the target\nsymbol is undefined.\n\nbfd/\n\n\t2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n\n\t* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Revert\n\tchanges in 7e05773767820b441b23a16628b55c98cb1aef46.  Set\n\terror for undefined symbol in BFD_RELOC_AARCH64_BRANCH19 and\n\tBFD_RELOC_AARCH64_TSTBR14 relocations.\n\nld/\n\n\t2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n\n\t* testsuite/ld-aarch64/emit-relocs-560.d: Expect error instead\n\tof valid output.",
    "tree": {
      "sha": "23053bc30ff3bc5f846937c4588493635f3d14c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/23053bc30ff3bc5f846937c4588493635f3d14c1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7cd291722779c9d4703ed0010388fe394c644c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7cd291722779c9d4703ed0010388fe394c644c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7cd291722779c9d4703ed0010388fe394c644c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7cd291722779c9d4703ed0010388fe394c644c8/comments",
  "author": null,
  "committer": {
    "login": "siddhesh",
    "id": 158582,
    "node_id": "MDQ6VXNlcjE1ODU4Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/158582?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/siddhesh",
    "html_url": "https://github.com/siddhesh",
    "followers_url": "https://api.github.com/users/siddhesh/followers",
    "following_url": "https://api.github.com/users/siddhesh/following{/other_user}",
    "gists_url": "https://api.github.com/users/siddhesh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/siddhesh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/siddhesh/subscriptions",
    "organizations_url": "https://api.github.com/users/siddhesh/orgs",
    "repos_url": "https://api.github.com/users/siddhesh/repos",
    "events_url": "https://api.github.com/users/siddhesh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/siddhesh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93d49941edbb5274bee6ce3e547a07c7ce4c4301",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93d49941edbb5274bee6ce3e547a07c7ce4c4301",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93d49941edbb5274bee6ce3e547a07c7ce4c4301"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 32,
    "deletions": 24
  },
  "files": [
    {
      "sha": "19415d6b9f13cce86f7e89db1a16ea00f9f35180",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7cd291722779c9d4703ed0010388fe394c644c8/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7cd291722779c9d4703ed0010388fe394c644c8/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c7cd291722779c9d4703ed0010388fe394c644c8",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n+\n+\t* elfnn-aarch64.c (elfNN_aarch64_final_link_relocate): Revert\n+\tchanges in 7e05773767820b441b23a16628b55c98cb1aef46.  Set\n+\terror for undefined symbol in BFD_RELOC_AARCH64_BRANCH19 and\n+\tBFD_RELOC_AARCH64_TSTBR14 relocations.\n+\n 2020-09-09  Nick Clifton  <nickc@redhat.com>\n \n \t* cofflink.c (coff_link_check_archive_element): Move the check for"
    },
    {
      "sha": "a9924e7ec5664c8f791bc317e40932f09f507ba8",
      "filename": "bfd/elfnn-aarch64.c",
      "status": "modified",
      "additions": 19,
      "deletions": 18,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7cd291722779c9d4703ed0010388fe394c644c8/bfd/elfnn-aarch64.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7cd291722779c9d4703ed0010388fe394c644c8/bfd/elfnn-aarch64.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfnn-aarch64.c?ref=c7cd291722779c9d4703ed0010388fe394c644c8",
      "patch": "@@ -5447,7 +5447,6 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n   bfd_vma orig_value = value;\n   bfd_boolean resolved_to_zero;\n   bfd_boolean abs_symbol_p;\n-  bfd_boolean via_plt_p;\n \n   globals = elf_aarch64_hash_table (info);\n \n@@ -5469,8 +5468,6 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n \t\t  : bfd_is_und_section (sym_sec));\n   abs_symbol_p = h != NULL && bfd_is_abs_symbol (&h->root);\n \n-  via_plt_p = (globals->root.splt != NULL && h != NULL\n-\t       && h->plt.offset != (bfd_vma) - 1);\n \n   /* Since STT_GNU_IFUNC symbol must go through PLT, we handle\n      it here if it is defined in a non-shared object.  */\n@@ -5806,23 +5803,12 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n \tvalue += signed_addend;\n       break;\n \n-    case BFD_RELOC_AARCH64_BRANCH19:\n-    case BFD_RELOC_AARCH64_TSTBR14:\n-      /* A conditional branch to an undefined weak symbol is converted to a\n-\t branch to itself.  */\n-      if (weak_undef_p && !via_plt_p)\n-\t{\n-\t  value = _bfd_aarch64_elf_resolve_relocation (input_bfd, bfd_r_type,\n-\t\t\t\t\t\t       place, value,\n-\t\t\t\t\t\t       signed_addend,\n-\t\t\t\t\t\t       weak_undef_p);\n-\t  break;\n-\t}\n-      /* Fall through.  */\n     case BFD_RELOC_AARCH64_CALL26:\n     case BFD_RELOC_AARCH64_JUMP26:\n       {\n \tasection *splt = globals->root.splt;\n+\tbfd_boolean via_plt_p =\n+\t  splt != NULL && h != NULL && h->plt.offset != (bfd_vma) - 1;\n \n \t/* A call to an undefined weak symbol is converted to a jump to\n \t   the next instruction unless a PLT entry will be created.\n@@ -5903,6 +5889,23 @@ elfNN_aarch64_final_link_relocate (reloc_howto_type *howto,\n \t  bfd_set_error (bfd_error_bad_value);\n \t  return bfd_reloc_notsupported;\n \t}\n+      value = _bfd_aarch64_elf_resolve_relocation (input_bfd, bfd_r_type,\n+\t\t\t\t\t\t   place, value,\n+\t\t\t\t\t\t   signed_addend,\n+\t\t\t\t\t\t   weak_undef_p);\n+      break;\n+\n+    case BFD_RELOC_AARCH64_BRANCH19:\n+    case BFD_RELOC_AARCH64_TSTBR14:\n+      if (h && h->root.type == bfd_link_hash_undefined)\n+\t{\n+\t  _bfd_error_handler\n+\t    /* xgettext:c-format */\n+\t    (_(\"%pB: conditional branch to undefined symbol `%s' \"\n+\t       \"not allowed\"), input_bfd, h->root.root.string);\n+\t  bfd_set_error (bfd_error_bad_value);\n+\t  return bfd_reloc_notsupported;\n+\t}\n       /* Fall through.  */\n \n     case BFD_RELOC_AARCH64_16:\n@@ -7968,8 +7971,6 @@ elfNN_aarch64_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    break;\n \t  }\n \n-\tcase BFD_RELOC_AARCH64_BRANCH19:\n-\tcase BFD_RELOC_AARCH64_TSTBR14:\n \tcase BFD_RELOC_AARCH64_CALL26:\n \tcase BFD_RELOC_AARCH64_JUMP26:\n \t  /* If this is a local symbol then we resolve it"
    },
    {
      "sha": "3b9a42669722b5d469bab3dc639e7c9c1baab05f",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7cd291722779c9d4703ed0010388fe394c644c8/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7cd291722779c9d4703ed0010388fe394c644c8/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c7cd291722779c9d4703ed0010388fe394c644c8",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-10  Siddhesh Poyarekar  <siddesh.poyarekar@arm.com>\n+\n+\t* testsuite/ld-aarch64/emit-relocs-560.d: Expect error instead\n+\tof valid output.\n+\n 2020-09-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/26590"
    },
    {
      "sha": "8751b743bd470179be54c9fc7c9330fada3ca2c6",
      "filename": "ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7cd291722779c9d4703ed0010388fe394c644c8/ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7cd291722779c9d4703ed0010388fe394c644c8/ld/testsuite/ld-aarch64/emit-relocs-560.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-aarch64/emit-relocs-560.d?ref=c7cd291722779c9d4703ed0010388fe394c644c8",
      "patch": "@@ -1,8 +1,3 @@\n #source: emit-relocs-560.s\n #ld: -shared\n-#readelf: -r\n-\n-Relocation section '.rela.plt' at offset 0x[0-9a-f]+ contains 2 entries:\n-  Offset          Info           Type           Sym. Value    Sym. Name \\+ Addend\n-[0-9a-f]+  000100000402 R_AARCH64_JUMP_SL 0000000000000000 baz \\+ 0\n-[0-9a-f]+  000200000402 R_AARCH64_JUMP_SL 0000000000000000 bar \\+ 0\n+#error: .*: conditional branch to undefined symbol `bar' not allowed"
    }
  ]
}