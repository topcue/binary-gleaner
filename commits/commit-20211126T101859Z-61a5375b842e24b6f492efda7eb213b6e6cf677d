{
  "sha": "61a5375b842e24b6f492efda7eb213b6e6cf677d",
  "node_id": "C_kwDOANOeidoAKDYxYTUzNzViODQyZTI0YjZmNDkyZWZkYTdlYjIxM2I2ZTZjZjY3N2Q",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-09-28T21:11:57Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-26T10:18:59Z"
    },
    "message": "gdb: add risc-v disassembler options support\n\nThis commit adds support for RISC-V disassembler options to GDB.  This\ncommit is based on this patch which was never committed:\n\n  https://sourceware.org/pipermail/binutils/2021-January/114944.html\n\nAll of the binutils refactoring has been moved to a separate, earlier,\ncommit, so this commit is pretty straight forward, just registering\nthe required gdbarch hooks.\n\nCo-authored-by: Simon Cook <simon.cook@embecosm.com>",
    "tree": {
      "sha": "5414919612452a1d8f658b0ea6cffa1c5a97043a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5414919612452a1d8f658b0ea6cffa1c5a97043a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/61a5375b842e24b6f492efda7eb213b6e6cf677d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61a5375b842e24b6f492efda7eb213b6e6cf677d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/61a5375b842e24b6f492efda7eb213b6e6cf677d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61a5375b842e24b6f492efda7eb213b6e6cf677d/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "3a337a86d9d273b5da57b1cd8ecec4baa7e95e33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3a337a86d9d273b5da57b1cd8ecec4baa7e95e33",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3a337a86d9d273b5da57b1cd8ecec4baa7e95e33"
    }
  ],
  "stats": {
    "total": 8,
    "additions": 8,
    "deletions": 0
  },
  "files": [
    {
      "sha": "4d87a899063e55b274088d8c04a86bace931a812",
      "filename": "gdb/riscv-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61a5375b842e24b6f492efda7eb213b6e6cf677d/gdb/riscv-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61a5375b842e24b6f492efda7eb213b6e6cf677d/gdb/riscv-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/riscv-tdep.c?ref=61a5375b842e24b6f492efda7eb213b6e6cf677d",
      "patch": "@@ -101,6 +101,9 @@ static const char *riscv_feature_name_fpu = \"org.gnu.gdb.riscv.fpu\";\n static const char *riscv_feature_name_virtual = \"org.gnu.gdb.riscv.virtual\";\n static const char *riscv_feature_name_vector = \"org.gnu.gdb.riscv.vector\";\n \n+/* The current set of options to be passed to the disassembler.  */\n+static char *riscv_disassembler_options;\n+\n /* Cached information about a frame.  */\n \n struct riscv_unwind_cache\n@@ -3803,6 +3806,11 @@ riscv_gdbarch_init (struct gdbarch_info info,\n   set_gdbarch_gcc_target_options (gdbarch, riscv_gcc_target_options);\n   set_gdbarch_gnu_triplet_regexp (gdbarch, riscv_gnu_triplet_regexp);\n \n+  /* Disassembler options support.  */\n+  set_gdbarch_valid_disassembler_options (gdbarch,\n+\t\t\t\t\t  disassembler_options_riscv ());\n+  set_gdbarch_disassembler_options (gdbarch, &riscv_disassembler_options);\n+\n   /* Hook in OS ABI-specific overrides, if they have been registered.  */\n   gdbarch_init_osabi (info, gdbarch);\n "
    }
  ]
}