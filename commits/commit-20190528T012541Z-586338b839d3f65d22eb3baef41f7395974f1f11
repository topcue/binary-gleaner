{
  "sha": "586338b839d3f65d22eb3baef41f7395974f1f11",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTg2MzM4YjgzOWQzZjY1ZDIyZWIzYmFlZjQxZjczOTU5NzRmMWYxMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-27T23:11:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-28T01:25:41Z"
    },
    "message": "HPPA64 linker segmentation faults\n\nOne of the ld tests produces:\nfailed with: <Segmentation fault>, no expected output\nFAIL: Discarded dynamic relocation section\n\nThis patch cures the segv.  (The test still fails with ld producing\na really messed up output, DT_RELA at address 0!)\n\n\tPR 24596\n\t* elf64-hppa.c (elf64_hppa_finalize_dynreloc): Get the output bfd\n\tfrom bfd_link_info, not an output section owner.\n\t(elf64_hppa_finish_dynamic_symbol, elf64_hppa_finalize_opd): Likewise.\n\t(elf_hppa_final_link_relocate): Likewise.",
    "tree": {
      "sha": "bfad34ec6b3a599675f821d82202dbf8a71cc56f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bfad34ec6b3a599675f821d82202dbf8a71cc56f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/586338b839d3f65d22eb3baef41f7395974f1f11",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/586338b839d3f65d22eb3baef41f7395974f1f11",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/586338b839d3f65d22eb3baef41f7395974f1f11",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/586338b839d3f65d22eb3baef41f7395974f1f11/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7b34aba62ce347b4e64ca197a5c8b997e3b72df",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7b34aba62ce347b4e64ca197a5c8b997e3b72df",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7b34aba62ce347b4e64ca197a5c8b997e3b72df"
    }
  ],
  "stats": {
    "total": 30,
    "additions": 17,
    "deletions": 13
  },
  "files": [
    {
      "sha": "72da0df26442ccad6aa89bafb46d5e96a9cbbf1e",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/586338b839d3f65d22eb3baef41f7395974f1f11/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/586338b839d3f65d22eb3baef41f7395974f1f11/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=586338b839d3f65d22eb3baef41f7395974f1f11",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24596\n+\t* elf64-hppa.c (elf64_hppa_finalize_dynreloc): Get the output bfd\n+\tfrom bfd_link_info, not an output section owner.\n+\t(elf64_hppa_finish_dynamic_symbol, elf64_hppa_finalize_opd): Likewise.\n+\t(elf_hppa_final_link_relocate): Likewise.\n+\n 2019-05-28  Alan Modra  <amodra@gmail.com>\n \n \tPR 24596"
    },
    {
      "sha": "9f6a51334f4d1070360f67a4e17b505ed09f4869",
      "filename": "bfd/elf64-hppa.c",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/586338b839d3f65d22eb3baef41f7395974f1f11/bfd/elf64-hppa.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/586338b839d3f65d22eb3baef41f7395974f1f11/bfd/elf64-hppa.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-hppa.c?ref=586338b839d3f65d22eb3baef41f7395974f1f11",
      "patch": "@@ -2011,7 +2011,7 @@ elf64_hppa_finish_dynamic_symbol (bfd *output_bfd,\n \t in the output_offset of the PLT section.  */\n \n       bfd_put_64 (splt->owner, value, splt->contents + hh->plt_offset);\n-      value = _bfd_get_gp_value (splt->output_section->owner);\n+      value = _bfd_get_gp_value (info->output_bfd);\n       bfd_put_64 (splt->owner, value, splt->contents + hh->plt_offset + 0x8);\n \n       /* Create a dynamic IPLT relocation for this entry.\n@@ -2027,7 +2027,7 @@ elf64_hppa_finish_dynamic_symbol (bfd *output_bfd,\n \n       loc = spltrel->contents;\n       loc += spltrel->reloc_count++ * sizeof (Elf64_External_Rela);\n-      bfd_elf64_swap_reloca_out (splt->output_section->owner, &rel, loc);\n+      bfd_elf64_swap_reloca_out (info->output_bfd, &rel, loc);\n     }\n \n   /* Initialize an external call stub entry if requested.  */\n@@ -2143,7 +2143,7 @@ elf64_hppa_finalize_opd (struct elf_link_hash_entry *eh, void *data)\n       bfd_put_64 (sopd->owner, value, sopd->contents + hh->opd_offset + 16);\n \n       /* The last word is our local __gp value.  */\n-      value = _bfd_get_gp_value (sopd->output_section->owner);\n+      value = _bfd_get_gp_value (info->output_bfd);\n       bfd_put_64 (sopd->owner, value, sopd->contents + hh->opd_offset + 24);\n     }\n \n@@ -2220,7 +2220,7 @@ elf64_hppa_finalize_opd (struct elf_link_hash_entry *eh, void *data)\n \n       loc = sopdrel->contents;\n       loc += sopdrel->reloc_count++ * sizeof (Elf64_External_Rela);\n-      bfd_elf64_swap_reloca_out (sopd->output_section->owner, &rel, loc);\n+      bfd_elf64_swap_reloca_out (info->output_bfd, &rel, loc);\n     }\n   return TRUE;\n }\n@@ -2315,7 +2315,7 @@ elf64_hppa_finalize_dlt (struct elf_link_hash_entry *eh, void *data)\n \n       loc = sdltrel->contents;\n       loc += sdltrel->reloc_count++ * sizeof (Elf64_External_Rela);\n-      bfd_elf64_swap_reloca_out (sdlt->output_section->owner, &rel, loc);\n+      bfd_elf64_swap_reloca_out (info->output_bfd, &rel, loc);\n     }\n   return TRUE;\n }\n@@ -2431,8 +2431,7 @@ elf64_hppa_finalize_dynreloc (struct elf_link_hash_entry *eh,\n \t  loc = hppa_info->other_rel_sec->contents;\n \t  loc += (hppa_info->other_rel_sec->reloc_count++\n \t\t  * sizeof (Elf64_External_Rela));\n-\t  bfd_elf64_swap_reloca_out (hppa_info->other_rel_sec->output_section->owner,\n-\t\t\t\t     &rel, loc);\n+\t  bfd_elf64_swap_reloca_out (info->output_bfd, &rel, loc);\n \t}\n     }\n \n@@ -3381,8 +3380,7 @@ elf_hppa_final_link_relocate (Elf_Internal_Rela *rel,\n \t\t\t\t(hppa_info->opd_sec->contents + off + 16));\n \n \t\t    /* The last word is our local __gp value.  */\n-\t\t    value = _bfd_get_gp_value\n-\t\t\t      (hppa_info->opd_sec->output_section->owner);\n+\t\t    value = _bfd_get_gp_value (info->output_bfd);\n \t\t    bfd_put_64 (hppa_info->opd_sec->owner, value,\n \t\t\t\t(hppa_info->opd_sec->contents + off + 24));\n \t\t  }\n@@ -3591,8 +3589,7 @@ elf_hppa_final_link_relocate (Elf_Internal_Rela *rel,\n \t\t\t + hh->opd_offset + 16));\n \n \t    /* The last word is our local __gp value.  */\n-\t    value = _bfd_get_gp_value\n-\t\t      (hppa_info->opd_sec->output_section->owner);\n+\t    value = _bfd_get_gp_value (info->output_bfd);\n \t    bfd_put_64 (hppa_info->opd_sec->owner, value,\n \t\t\thppa_info->opd_sec->contents + hh->opd_offset + 24);\n \n@@ -3718,8 +3715,7 @@ elf_hppa_final_link_relocate (Elf_Internal_Rela *rel,\n \t\t\t    (hppa_info->opd_sec->contents + off + 16));\n \n \t\t/* The last word is our local __gp value.  */\n-\t\tvalue = _bfd_get_gp_value\n-\t\t\t  (hppa_info->opd_sec->output_section->owner);\n+\t\tvalue = _bfd_get_gp_value (info->output_bfd);\n \t\tbfd_put_64 (hppa_info->opd_sec->owner, value,\n \t\t\t    hppa_info->opd_sec->contents + off + 24);\n \t      }"
    }
  ]
}