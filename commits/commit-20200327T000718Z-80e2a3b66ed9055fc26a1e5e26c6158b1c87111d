{
  "sha": "80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODBlMmEzYjY2ZWQ5MDU1ZmMyNmExZTVlMjZjNjE1OGIxYzg3MTExZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-27T00:00:56Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-27T00:07:18Z"
    },
    "message": "Re: readelf looping in process_archive\n\nThis patch fixes a leak of qualified_name caused by 4c83662712 and a\ndouble free introduced by fd486f32d1.  Not breaking out of the loop\nresults in an error: \"failed to seek to next archive header\".  That's\nslightly better than silently preventing the possibility of endless\nloops.\n\n\t* readelf.c (process_archive): Don't double free qualified_name.\n\tDon't break out of loop with \"negative\" archive_file_size, just\n\tset file offset to max.",
    "tree": {
      "sha": "5abc92bf82b05a19d765b1d4ff906a1e427fc362",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5abc92bf82b05a19d765b1d4ff906a1e427fc362"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89ff19d45e9acfff9c77bf570631df6b99b62619",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89ff19d45e9acfff9c77bf570631df6b99b62619",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89ff19d45e9acfff9c77bf570631df6b99b62619"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 7,
    "deletions": 2
  },
  "files": [
    {
      "sha": "efc2e9e2ae237f322d23ba2e6de1e2349db766b9",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_archive): Don't double free qualified_name.\n+\tDon't break out of loop with \"negative\" archive_file_size, just\n+\tset file offset to max.\n+\n 2020-03-25  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_archive): Prevent endless loop."
    },
    {
      "sha": "eb41e10dae939656d68cfbb64361eb7049be28bd",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/80e2a3b66ed9055fc26a1e5e26c6158b1c87111d/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=80e2a3b66ed9055fc26a1e5e26c6158b1c87111d",
      "patch": "@@ -20461,7 +20461,6 @@ process_archive (Filedata * filedata, bfd_boolean is_thin_archive)\n \n \t  close_file (member_filedata);\n \t  free (member_file_name);\n-\t  free (qualified_name);\n \t}\n       else if (is_thin_archive)\n \t{\n@@ -20511,7 +20510,7 @@ process_archive (Filedata * filedata, bfd_boolean is_thin_archive)\n \t  arch.next_arhdr_offset += archive_file_size;\n \t  /* Stop looping with \"negative\" archive_file_size.  */\n \t  if (arch.next_arhdr_offset < archive_file_size)\n-\t    break;\n+\t    arch.next_arhdr_offset = -1ul;\n \t}\n \n       free (qualified_name);"
    }
  ]
}