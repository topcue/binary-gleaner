{
  "sha": "928c8d70c82feea45683b43e324cd2079d4ee31d",
  "node_id": "C_kwDOANOeidoAKDkyOGM4ZDcwYzgyZmVlYTQ1NjgzYjQzZTMyNGNkMjA3OWQ0ZWUzMWQ",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:55:42Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2022-01-14T09:55:42Z"
    },
    "message": "x86: consistently use scalar_mode for AVX512-FP16 scalar insns\n\nFor some reason the original AVFX512F insns were not taken as a basis\nhere, causing unnecessary divergence. While not an active issue, it is\nstill relevant to note that OP_XMM() has special treatment of e.g.\nscalar_mode (marking broadcast as invalid). Such would better be\nconsistent for all sufficiently similar insns.",
    "tree": {
      "sha": "26183f9ccd8646cb453472c4247b3a07e0a800af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/26183f9ccd8646cb453472c4247b3a07e0a800af"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/928c8d70c82feea45683b43e324cd2079d4ee31d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/928c8d70c82feea45683b43e324cd2079d4ee31d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/928c8d70c82feea45683b43e324cd2079d4ee31d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/928c8d70c82feea45683b43e324cd2079d4ee31d/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a364447b5ecf58a60a2ba99a5d31b984d0443152",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a364447b5ecf58a60a2ba99a5d31b984d0443152",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a364447b5ecf58a60a2ba99a5d31b984d0443152"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 31,
    "deletions": 31
  },
  "files": [
    {
      "sha": "140c4e850b46e3e71cd78e3bd5c03ec08784012c",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/928c8d70c82feea45683b43e324cd2079d4ee31d/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/928c8d70c82feea45683b43e324cd2079d4ee31d/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=928c8d70c82feea45683b43e324cd2079d4ee31d",
      "patch": "@@ -440,7 +440,7 @@\n   },\n   /* PREFIX_EVEX_MAP5_1D */\n   {\n-    { \"vcvtss2s%XH\",      { XMM, VexScalar, EXd, EXxEVexR }, 0 },\n+    { \"vcvtss2s%XH\",      { XMScalar, VexScalar, EXd, EXxEVexR }, 0 },\n     { Bad_Opcode },\n     { \"vcvtps2p%XHx%XY\",  { XMxmmq, EXx, EXxEVexR }, 0 },\n   },\n@@ -470,24 +470,24 @@\n   /* PREFIX_EVEX_MAP5_51 */\n   {\n     { \"vsqrtp%XH\",        { XM, EXxh, EXxEVexR }, 0 },\n-    { \"vsqrts%XH\",        { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+    { \"vsqrts%XH\",        { XMScalar, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_58 */\n   {\n     { \"vaddp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n-    { \"vadds%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+    { \"vadds%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_59 */\n   {\n     { \"vmulp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n-    { \"vmuls%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+    { \"vmuls%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5A */\n   {\n     { \"vcvtp%XH2pd\",    { XM, EXxmmqdh, EXxEVexS }, 0 },\n-    { \"vcvts%XH2sd\",    { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vcvts%XH2sd\",    { XMScalar, VexScalar, EXw, EXxEVexS }, 0 },\n     { \"vcvtp%XD2ph%XZ\", { XMM, EXx, EXxEVexR }, 0 },\n-    { \"vcvts%XD2sh\",    { XMM, VexScalar, EXq, EXxEVexR }, 0 },\n+    { \"vcvts%XD2sh\",    { XMScalar, VexScalar, EXq, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5B */\n   {\n@@ -498,22 +498,22 @@\n   /* PREFIX_EVEX_MAP5_5C */\n   {\n     { \"vsubp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n-    { \"vsubs%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+    { \"vsubs%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5D */\n   {\n     { \"vminp%XH\", { XM, Vex, EXxh, EXxEVexS }, 0 },\n-    { \"vmins%XH\", { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vmins%XH\", { XMScalar, VexScalar, EXw, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5E */\n   {\n     { \"vdivp%XH\", { XM, Vex, EXxh, EXxEVexR }, 0 },\n-    { \"vdivs%XH\", { XMM, VexScalar, EXw, EXxEVexR }, 0 },\n+    { \"vdivs%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_5F */\n   {\n     { \"vmaxp%XH\", { XM, Vex, EXxh, EXxEVexS }, 0 },\n-    { \"vmaxs%XH\", { XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vmaxs%XH\", { XMScalar, VexScalar, EXw, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_MAP5_78 */\n   {\n@@ -555,7 +555,7 @@\n   },\n   /* PREFIX_EVEX_MAP6_13 */\n   {\n-    { \"vcvts%XH2ss\",\t{ XMM, VexScalar, EXw, EXxEVexS }, 0 },\n+    { \"vcvts%XH2ss\",\t{ XMScalar, VexScalar, EXw, EXxEVexS }, 0 },\n     { Bad_Opcode },\n     { \"vcvtp%XH2psx\",\t{ XM, EXxmmqh, EXxEVexS }, 0 },\n   },\n@@ -569,9 +569,9 @@\n   /* PREFIX_EVEX_MAP6_57 */\n   {\n     { Bad_Opcode },\n-    { \"vfmaddcs%XH\",      { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { \"vfmaddcs%XH\",      { { DistinctDest_Fixup, scalar_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n     { Bad_Opcode },\n-    { \"vfcmaddcs%XH\",     { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { \"vfcmaddcs%XH\",     { { DistinctDest_Fixup, scalar_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n   },\n   /* PREFIX_EVEX_MAP6_D6 */\n   {\n@@ -583,7 +583,7 @@\n   /* PREFIX_EVEX_MAP6_D7 */\n   {\n     { Bad_Opcode },\n-    { \"vfmulcs%XH\",     { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { \"vfmulcs%XH\",     { { DistinctDest_Fixup, scalar_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n     { Bad_Opcode },\n-    { \"vfcmulcs%XH\",    { { DistinctDest_Fixup, xmm_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n+    { \"vfcmulcs%XH\",    { { DistinctDest_Fixup, scalar_mode }, VexScalar, EXd, EXxEVexR }, 0 },\n   },"
    },
    {
      "sha": "fe39026a87171ef78d796d4bae5267502d8f3e53",
      "filename": "opcodes/i386-dis-evex.h",
      "status": "modified",
      "additions": 16,
      "deletions": 16,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/928c8d70c82feea45683b43e324cd2079d4ee31d/opcodes/i386-dis-evex.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/928c8d70c82feea45683b43e324cd2079d4ee31d/opcodes/i386-dis-evex.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex.h?ref=928c8d70c82feea45683b43e324cd2079d4ee31d",
      "patch": "@@ -1216,7 +1216,7 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { \"vscalefp%XH\",      { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vscalefs%XH\",      { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vscalefs%XH\",      { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     /* 30 */\n@@ -1241,7 +1241,7 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { \"vgetexpp%XH\",      { XM, EXxh, EXxEVexS }, PREFIX_DATA },\n-    { \"vgetexps%XH\",      { XMM, VexScalar, EXw, EXxEVexS }, PREFIX_DATA },\n+    { \"vgetexps%XH\",      { XMScalar, VexScalar, EXw, EXxEVexS }, PREFIX_DATA },\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -1252,9 +1252,9 @@ static const struct dis386 evex_table[][256] = {\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { \"vrcpp%XH\",\t  { XM, EXxh }, PREFIX_DATA },\n-    { \"vrcps%XH\",\t  { XMM, VexScalar, EXw }, PREFIX_DATA },\n+    { \"vrcps%XH\",\t  { XMScalar, VexScalar, EXw }, PREFIX_DATA },\n     { \"vrsqrtp%XH\",       { XM, EXxh }, PREFIX_DATA },\n-    { \"vrsqrts%XH\",       { XMM, VexScalar, EXw }, PREFIX_DATA },\n+    { \"vrsqrts%XH\",       { XMScalar, VexScalar, EXw }, PREFIX_DATA },\n     /* 50 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -1338,13 +1338,13 @@ static const struct dis386 evex_table[][256] = {\n     { \"vfmsubadd132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n     /* 98 */\n     { \"vfmadd132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmadd132s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd132s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfmsub132p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmsub132s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub132s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmadd132p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmadd132s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd132s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmsub132p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmsub132s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub132s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     /* A0 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -1356,13 +1356,13 @@ static const struct dis386 evex_table[][256] = {\n     { \"vfmsubadd213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n     /* A8 */\n     { \"vfmadd213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmadd213s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd213s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfmsub213p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmsub213s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub213s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmadd213p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmadd213s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd213s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmsub213p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmsub213s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub213s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     /* B0 */\n     { Bad_Opcode },\n     { Bad_Opcode },\n@@ -1374,13 +1374,13 @@ static const struct dis386 evex_table[][256] = {\n     { \"vfmsubadd231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n     /* B8 */\n     { \"vfmadd231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmadd231s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmadd231s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfmsub231p%XH\",  { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfmsub231s%XH\",  { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfmsub231s%XH\",  { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmadd231p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmadd231s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmadd231s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     { \"vfnmsub231p%XH\", { XM, Vex, EXxh, EXxEVexR }, PREFIX_DATA },\n-    { \"vfnmsub231s%XH\", { XMM, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n+    { \"vfnmsub231s%XH\", { XMScalar, VexScalar, EXw, EXxEVexR }, PREFIX_DATA },\n     /* C0 */\n     { Bad_Opcode },\n     { Bad_Opcode },"
    }
  ]
}