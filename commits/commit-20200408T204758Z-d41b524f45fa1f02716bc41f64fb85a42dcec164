{
  "sha": "d41b524f45fa1f02716bc41f64fb85a42dcec164",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDQxYjUyNGY0NWZhMWYwMjcxNmJjNDFmNjRmYjg1YTQyZGNlYzE2NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:33:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-04-08T20:47:58Z"
    },
    "message": "Normalize handle_output_debug_string API\n\nThis changes gdbserver's implementation of handle_output_debug_string\nto have the same calling convention as that of gdb.  This allows for\nsharing some more code in a subsequent patch.\n\ngdb/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* windows-nat.c (windows_nat::handle_output_debug_string):\n\tRename.  No longer static.\n\t* nat/windows-nat.h (handle_output_debug_string): Declare.\n\ngdbserver/ChangeLog\n2020-04-08  Tom Tromey  <tromey@adacore.com>\n\n\t* win32-low.c (handle_output_debug_string): Add parameter.  Change\n\treturn type.\n\t(win32_kill, get_child_debug_event): Update.",
    "tree": {
      "sha": "374299debc39ae26eb70f40e5c5ca076d4b6ceb3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/374299debc39ae26eb70f40e5c5ca076d4b6ceb3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d41b524f45fa1f02716bc41f64fb85a42dcec164",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d41b524f45fa1f02716bc41f64fb85a42dcec164",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d41b524f45fa1f02716bc41f64fb85a42dcec164",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d41b524f45fa1f02716bc41f64fb85a42dcec164/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3c76026df83bed7d97ed45e5b906b679a154b076",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c76026df83bed7d97ed45e5b906b679a154b076",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3c76026df83bed7d97ed45e5b906b679a154b076"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 39,
    "deletions": 14
  },
  "files": [
    {
      "sha": "aeab1ffa85631cd77bd7d0a2027c7e400a9a6485",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d41b524f45fa1f02716bc41f64fb85a42dcec164",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* windows-nat.c (windows_nat::handle_output_debug_string):\n+\tRename.  No longer static.\n+\t* nat/windows-nat.h (handle_output_debug_string): Declare.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (current_process_handle, current_process_id)"
    },
    {
      "sha": "f438befbc940c58a46c683db6b41aa0e07ae91f3",
      "filename": "gdb/nat/windows-nat.h",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/nat/windows-nat.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/nat/windows-nat.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/windows-nat.h?ref=d41b524f45fa1f02716bc41f64fb85a42dcec164",
      "patch": "@@ -114,6 +114,17 @@ enum thread_disposition_type\n extern windows_thread_info *thread_rec (ptid_t ptid,\n \t\t\t\t\tthread_disposition_type disposition);\n \n+\n+/* Handle OUTPUT_DEBUG_STRING_EVENT from child process.  Updates\n+   OURSTATUS and returns the thread id if this represents a thread\n+   change (this is specific to Cygwin), otherwise 0.\n+\n+   Cygwin prepends its messages with a \"cygwin:\".  Interpret this as\n+   a Cygwin signal.  Otherwise just print the string as a warning.\n+\n+   This function must be supplied by the embedding application.  */\n+extern int handle_output_debug_string (struct target_waitstatus *ourstatus);\n+\n /* Currently executing process */\n extern HANDLE current_process_handle;\n extern DWORD current_process_id;"
    },
    {
      "sha": "7ccd124ac29bdf5068e5b1d9b4d962600b7f262f",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=d41b524f45fa1f02716bc41f64fb85a42dcec164",
      "patch": "@@ -1004,11 +1004,10 @@ signal_event_command (const char *args, int from_tty)\n   CloseHandle ((HANDLE) event_id);\n }\n \n-/* Handle DEBUG_STRING output from child process.\n-   Cygwin prepends its messages with a \"cygwin:\".  Interpret this as\n-   a Cygwin signal.  Otherwise just print the string as a warning.  */\n-static int\n-handle_output_debug_string (struct target_waitstatus *ourstatus)\n+/* See nat/windows-nat.h.  */\n+\n+int\n+windows_nat::handle_output_debug_string (struct target_waitstatus *ourstatus)\n {\n   gdb::unique_xmalloc_ptr<char> s;\n   int retval = 0;"
    },
    {
      "sha": "c6aceced1912703f94518dfc71bbc730f9a421e1",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=d41b524f45fa1f02716bc41f64fb85a42dcec164",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* win32-low.c (handle_output_debug_string): Add parameter.  Change\n+\treturn type.\n+\t(win32_kill, get_child_debug_event): Update.\n+\n 2020-04-08  Tom Tromey  <tromey@adacore.com>\n \n \t* win32-low.c (current_process_handle, current_process_id)"
    },
    {
      "sha": "2130366747c91aa0c02d9784627acd831eb4ed6e",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d41b524f45fa1f02716bc41f64fb85a42dcec164/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=d41b524f45fa1f02716bc41f64fb85a42dcec164",
      "patch": "@@ -733,17 +733,18 @@ win32_process_target::attach (unsigned long pid)\n \t (int) err, strwinerror (err));\n }\n \n-/* Handle OUTPUT_DEBUG_STRING_EVENT from child process.  */\n-static void\n-handle_output_debug_string (void)\n+/* See nat/windows-nat.h.  */\n+\n+int\n+windows_nat::handle_output_debug_string (struct target_waitstatus *ourstatus)\n {\n #define READ_BUFFER_LEN 1024\n   CORE_ADDR addr;\n   char s[READ_BUFFER_LEN + 1] = { 0 };\n   DWORD nbytes = current_event.u.DebugString.nDebugStringLength;\n \n   if (nbytes == 0)\n-    return;\n+    return 0;\n \n   if (nbytes > READ_BUFFER_LEN)\n     nbytes = READ_BUFFER_LEN;\n@@ -756,26 +757,28 @@ handle_output_debug_string (void)\n \t in Unicode.  */\n       WCHAR buffer[(READ_BUFFER_LEN + 1) / sizeof (WCHAR)] = { 0 };\n       if (read_inferior_memory (addr, (unsigned char *) buffer, nbytes) != 0)\n-\treturn;\n+\treturn 0;\n       wcstombs (s, buffer, (nbytes + 1) / sizeof (WCHAR));\n     }\n   else\n     {\n       if (read_inferior_memory (addr, (unsigned char *) s, nbytes) != 0)\n-\treturn;\n+\treturn 0;\n     }\n \n   if (!startswith (s, \"cYg\"))\n     {\n       if (!server_waiting)\n \t{\n \t  OUTMSG2((\"%s\", s));\n-\t  return;\n+\t  return 0;\n \t}\n \n       monitor_output (s);\n     }\n #undef READ_BUFFER_LEN\n+\n+  return 0;\n }\n \n static void\n@@ -804,7 +807,7 @@ win32_process_target::kill (process_info *process)\n       if (current_event.dwDebugEventCode == EXIT_PROCESS_DEBUG_EVENT)\n \tbreak;\n       else if (current_event.dwDebugEventCode == OUTPUT_DEBUG_STRING_EVENT)\n-\thandle_output_debug_string ();\n+\thandle_output_debug_string (nullptr);\n     }\n \n   win32_clear_inferiors ();\n@@ -1504,7 +1507,7 @@ get_child_debug_event (struct target_waitstatus *ourstatus)\n \t\t\"for pid=%u tid=%x\\n\",\n \t\t(unsigned) current_event.dwProcessId,\n \t\t(unsigned) current_event.dwThreadId));\n-      handle_output_debug_string ();\n+      handle_output_debug_string (nullptr);\n       break;\n \n     default:"
    }
  ]
}