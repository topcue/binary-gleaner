{
  "sha": "58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NThmMDc2YzZmODZkYzgzNjFmMmU2YTZjNjc5NDBmZDliNWFkOWE2MA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-08T13:36:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-08T13:36:46Z"
    },
    "message": "[gdb/testsuite] Simplify gdb.base/info-types.exp.tcl further\n\nAfter adding support for --any in match_line, we can simplify\ngdb.base/info-types.exp.tcl further: we can add the \"All defined types:\"\nregexp in the output_lines list:\n...\n        set output_lines \\\n            [list \\\n+                \"All defined types:\" \\\n+                \"--any\" \\\n                 $file_re \\\n...\n\nConsequently, we can simplify the state machine to track a variable \"found\"\nwith values:\n-  0 (unmatched)\n-  1 (matched)\n- -1 (mismatch).\n\nThis makes the code generic enough to factor out into a new proc\ngdb_test_lines.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-06-08  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/info-types.exp.tcl (match_line): Handle --any.\n\t(gdb_test_lines): Factor out of ...\n\t(run_test): ... here.",
    "tree": {
      "sha": "c3605f25c5d6f2b9262d51ac8cd4e6073814e1a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c3605f25c5d6f2b9262d51ac8cd4e6073814e1a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7c757f41aaab38396066d0d57d084a3dc2f5a7d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c757f41aaab38396066d0d57d084a3dc2f5a7d3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7c757f41aaab38396066d0d57d084a3dc2f5a7d3"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 46,
    "deletions": 31
  },
  "files": [
    {
      "sha": "06880fac2612193c07f699edb28256514c88a799",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-08  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/info-types.exp.tcl (match_line): Handle --any.\n+\t(gdb_test_lines): Factor out of ...\n+\t(run_test): ... here.\n+\n 2021-06-08  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/batch-preserve-term-settings.exp (spawn_shell): Fix"
    },
    {
      "sha": "eef4b0782218412d59c5ff525026fbbcf4d14a70",
      "filename": "gdb/testsuite/gdb.base/info-types.exp.tcl",
      "status": "modified",
      "additions": 40,
      "deletions": 31,
      "changes": 71,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60/gdb/testsuite/gdb.base/info-types.exp.tcl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60/gdb/testsuite/gdb.base/info-types.exp.tcl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types.exp.tcl?ref=58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
      "patch": "@@ -16,7 +16,8 @@\n # Check that 'info types' produces the expected output for an inferior\n # containing a number of different types.\n \n-# Match LINE against regexp OUTPUT_LINES[IDX].\n+# Match LINE against regexp OUTPUT_LINES[IDX].  Helper function for\n+# gdb_test_lines.\n proc match_line { line output_lines idx_name } {\n     upvar $idx_name idx\n \n@@ -27,14 +28,17 @@ proc match_line { line output_lines idx_name } {\n \t}\n \n \tset re [lindex $output_lines $idx]\n+\tset opt 0\n+\tset any 0\n \tif { $re == \"--optional\" } {\n \t    # Optional, get actual regexp.\n \t    set opt 1\n \t    incr idx\n \t    set re [lindex $output_lines $idx]\n-\t} else {\n-\t    # Not optional.\n-\t    set opt 0\n+\t} elseif { $re == \"--any\" } {\n+\t    set any 1\n+\t    incr idx\n+\t    set re [lindex $output_lines $idx]\n \t}\n \n \tif { [regexp $re $line] } {\n@@ -55,6 +59,10 @@ proc match_line { line output_lines idx_name } {\n \t\t# Try next regexp on same line.\n \t\tincr idx\n \t\tcontinue\n+\t    } elseif { $any } {\n+\t\t# Try again with next line.\n+\t\tincr idx -1\n+\t\treturn 0\n \t    } else {\n \t\t# Mismatch, bail out.\n \t\treturn -1\n@@ -67,6 +75,29 @@ proc match_line { line output_lines idx_name } {\n     return 0\n }\n \n+# Match output of COMMAND line-by-line, using PATTERNS.\n+# Report pass/fail with MESSAGE.\n+\n+proc gdb_test_lines { command message patterns } {\n+    set found 0\n+    set idx 0\n+    if { $message == \"\"} {\n+\tset message $command\n+    }\n+    gdb_test_multiple $command $message {\n+\t-re \"\\r\\n(\\[^\\r\\n\\]*)(?=\\r\\n)\" {\n+\t    if { $found == 0 } {\n+\t\tset line $expect_out(1,string)\n+\t\tset found [match_line $line $patterns idx]\n+\t    }\n+\t    exp_continue\n+\t}\n+\t-re -wrap \"\" {\n+\t    gdb_assert { $found == 1 } $gdb_test_name\n+\t}\n+    }\n+}\n+\n # Run 'info types' test, compiling the test file for language LANG,\n # which should be either 'c' or 'c++'.\n proc run_test { lang } {\n@@ -94,6 +125,8 @@ proc run_test { lang } {\n     if { $lang == \"c++\" } {\n \tset output_lines \\\n \t    [list \\\n+\t\t \"All defined types:\" \\\n+\t\t \"--any\" \\\n \t\t $file_re \\\n \t\t \"98:\\[\\t \\]+CL;\" \\\n \t\t \"42:\\[\\t \\]+anon_struct_t;\" \\\n@@ -129,6 +162,8 @@ proc run_test { lang } {\n     } else {\n \tset output_lines \\\n \t    [list \\\n+\t\t \"All defined types:\" \\\n+\t\t \"--any\" \\\n \t\t $file_re \\\n \t\t \"52:\\[\\t \\]+typedef enum {\\\\.\\\\.\\\\.} anon_enum_t;\" \\\n \t\t \"45:\\[\\t \\]+typedef struct {\\\\.\\\\.\\\\.} anon_struct_t;\" \\\n@@ -157,33 +192,7 @@ proc run_test { lang } {\n \t\t \"\"]\n     }\n \n-    set state 0\n-    set idx 0\n-    gdb_test_multiple \"info types\" \"\" {\n-\t-re \"\\r\\nAll defined types:\" {\n-\t    if { $state == 0 } { set state 1 } else { set state -1 }\n-\t    exp_continue\n-\t}\n-\t-re \"^\\r\\n(\\[^\\r\\n\\]*)(?=\\r\\n)\" {\n-\t    if { $state == 1 } {\n-\t\tset line $expect_out(1,string)\n-\t\tset res [match_line $line $output_lines idx]\n-\t\tif { $res == 1 } {\n-\t\t    set state 2\n-\t\t} elseif { $res == -1 } {\n-\t\t    set state -2\n-\t\t}\n-\t    }\n-\t    exp_continue\n-\t}\n-\t-re -wrap \"\" {\n-\t    if { $state == 2} {\n-\t\tpass $gdb_test_name\n-\t    } else {\n-\t\tfail \"$gdb_test_name (state == $state)\"\n-\t    }\n-\t}\n-    }\n+    gdb_test_lines \"info types\" \"\" $output_lines\n }\n \n run_test $lang"
    }
  ]
}