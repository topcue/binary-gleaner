{
  "sha": "1825f487ae903438eb2a9b6f461337d8ec1b06c0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTgyNWY0ODdhZTkwMzQzOGViMmE5YjZmNDYxMzM3ZDhlYzFiMDZjMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T20:52:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:34Z"
    },
    "message": "Introduce the refresh_all method\n\nThis introduces the tui_win_info::refresh_all method and implements it\nas needed in subclasses.  The name and comment are a bit of a guess on\nmy part.  The main benefit of this patch is removing another switch on\nthe type of the window.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_rl_other_window): Call the refresh_all method.\n\t* tui/tui-windata.c (tui_data_window::refresh_all): Rename from\n\ttui_refresh_data_win.\n\t* tui/tui-win.c (tui_source_window_base::refresh_all): New\n\tmethod.\n\t(tui_refresh_all_win): Call the refresh_all method.\n\t(tui_set_focus): Likewise.\n\t* tui/tui-data.h (struct tui_win_info) <refresh_all>: New method.\n\t(struct tui_source_window_base, struct tui_data_window) <refresh>:\n\tLikewise.",
    "tree": {
      "sha": "ad8848b326dff919ab0ae05d62a9e9e9a62d4515",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ad8848b326dff919ab0ae05d62a9e9e9a62d4515"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1825f487ae903438eb2a9b6f461337d8ec1b06c0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1825f487ae903438eb2a9b6f461337d8ec1b06c0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1825f487ae903438eb2a9b6f461337d8ec1b06c0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1825f487ae903438eb2a9b6f461337d8ec1b06c0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad54d15bdb71b05010ece1ef32ab22ab46794166",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad54d15bdb71b05010ece1ef32ab22ab46794166",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad54d15bdb71b05010ece1ef32ab22ab46794166"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 38,
    "deletions": 23
  },
  "files": [
    {
      "sha": "595a76a8b02759ba42e105e3256e09ee13b74bb4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "patch": "@@ -1,3 +1,16 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_rl_other_window): Call the refresh_all method.\n+\t* tui/tui-windata.c (tui_data_window::refresh_all): Rename from\n+\ttui_refresh_data_win.\n+\t* tui/tui-win.c (tui_source_window_base::refresh_all): New\n+\tmethod.\n+\t(tui_refresh_all_win): Call the refresh_all method.\n+\t(tui_set_focus): Likewise.\n+\t* tui/tui-data.h (struct tui_win_info) <refresh_all>: New method.\n+\t(struct tui_source_window_base, struct tui_data_window) <refresh>:\n+\tLikewise.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (tui_refill_source_window)"
    },
    {
      "sha": "e45c9fabc734958415308c7505469271a24cf3c5",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "patch": "@@ -261,6 +261,12 @@ struct tui_win_info\n   /* Refresh this window and any associated windows.  */\n   virtual void refresh ();\n \n+  /* Called after all the TUI windows are refreshed, to let this\n+     window have a chance to update itself further.  */\n+  virtual void refresh_all ()\n+  {\n+  }\n+\n   /* Methods to scroll the contents of this window.  Note that they\n      are named with \"_scroll\" coming at the end because the more\n      obvious \"scroll_forward\" is defined as a macro in term.h.  */\n@@ -303,6 +309,7 @@ struct tui_source_window_base : public tui_win_info\n \n   void make_visible (bool visible) override;\n   void refresh () override;\n+  void refresh_all () override;\n \n   /* Refill the source window's source cache and update it.  If this\n      is a disassembly window, then just update it.  */\n@@ -371,6 +378,7 @@ struct tui_data_window : public tui_win_info\n   DISABLE_COPY_AND_ASSIGN (tui_data_window);\n \n   void clear_detail () override;\n+  void refresh_all () override;\n \n   /* Start of data display content.  */\n   tui_win_content data_content = NULL;"
    },
    {
      "sha": "383487e5f7a3a125cf78e99eded8f490737425ed",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 14,
      "deletions": 20,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "patch": "@@ -508,6 +508,17 @@ tui_win_info::right_scroll (int num_to_scroll)\n }\n \n \n+/* See tui-data.h.  */\n+\n+void\n+tui_source_window_base::refresh_all ()\n+{\n+  tui_show_source_content (this);\n+  tui_check_and_display_highlight_if_needed (this);\n+  tui_erase_exec_info_content (this);\n+  tui_update_exec_info (this);\n+}\n+\n void\n tui_refresh_all_win (void)\n {\n@@ -517,25 +528,8 @@ tui_refresh_all_win (void)\n   tui_refresh_all (tui_win_list);\n   for (type = SRC_WIN; type < MAX_MAJOR_WINDOWS; type++)\n     {\n-      if (tui_win_list[type] \n-\t  && tui_win_list[type]->generic.is_visible)\n-\t{\n-\t  switch (type)\n-\t    {\n-\t    case SRC_WIN:\n-\t    case DISASSEM_WIN:\n-\t      tui_show_source_content (tui_win_list[type]);\n-\t      tui_check_and_display_highlight_if_needed (tui_win_list[type]);\n-\t      tui_erase_exec_info_content (tui_win_list[type]);\n-\t      tui_update_exec_info (tui_win_list[type]);\n-\t      break;\n-\t    case DATA_WIN:\n-\t      tui_refresh_data_win ();\n-\t      break;\n-\t    default:\n-\t      break;\n-\t    }\n-\t}\n+      if (tui_win_list[type] && tui_win_list[type]->generic.is_visible)\n+\ttui_win_list[type]->refresh_all ();\n     }\n   tui_show_locator_content ();\n }\n@@ -872,7 +866,7 @@ The window name specified must be valid and visible.\\n\"));\n \t}\n \n       if (TUI_DATA_WIN && TUI_DATA_WIN->generic.is_visible)\n-\ttui_refresh_data_win ();\n+\tTUI_DATA_WIN->refresh_all ();\n       xfree (buf_ptr);\n       printf_filtered (_(\"Focus set to %s window.\\n\"),\n \t\t       tui_win_name (&tui_win_with_focus ()->generic));"
    },
    {
      "sha": "770baf857f606bde05ea02e6ba935c1b6c4fa0e3",
      "filename": "gdb/tui/tui-windata.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-windata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui-windata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.c?ref=1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "patch": "@@ -193,10 +193,10 @@ tui_display_data_from (int element_no, int reuse_windows)\n \n /* Function to redisplay the contents of the data window.  */\n void\n-tui_refresh_data_win (void)\n+tui_data_window::refresh_all ()\n {\n   tui_erase_data_content (NULL);\n-  if (TUI_DATA_WIN->generic.content_size > 0)\n+  if (generic.content_size > 0)\n     {\n       int first_element = tui_first_data_item_displayed ();\n "
    },
    {
      "sha": "55a44e8840ec501d2d77b7181fb15bb0faf5729d",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1825f487ae903438eb2a9b6f461337d8ec1b06c0/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=1825f487ae903438eb2a9b6f461337d8ec1b06c0",
      "patch": "@@ -237,7 +237,7 @@ tui_rl_other_window (int count, int key)\n     {\n       tui_set_win_focus_to (win_info);\n       if (TUI_DATA_WIN && TUI_DATA_WIN->generic.is_visible)\n-        tui_refresh_data_win ();\n+\tTUI_DATA_WIN->refresh_all ();\n       keypad (TUI_CMD_WIN->generic.handle, (win_info != TUI_CMD_WIN));\n     }\n   return 0;"
    }
  ]
}