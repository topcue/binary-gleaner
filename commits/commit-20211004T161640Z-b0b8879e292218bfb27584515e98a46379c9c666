{
  "sha": "b0b8879e292218bfb27584515e98a46379c9c666",
  "node_id": "C_kwDOANOeidoAKGIwYjg4NzllMjkyMjE4YmZiMjc1ODQ1MTVlOThhNDYzNzljOWM2NjY",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-04T16:16:40Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-10-04T16:16:40Z"
    },
    "message": "[gdb/symtab] Use unrelocated addresses in call_site\n\nConsider test-case gdb.trace/entry-values.exp with target board\nunix/-fPIE/-pie.\n\nUsing this command we have an abbreviated version, and can see the correct\n@entry values for foo:\n...\n$ gdb -q -batch outputs/gdb.trace/entry-values/entry-values \\\n  -ex start \\\n  -ex \"break foo\" \\\n  -ex \"set print entry-values both\" \\\n  -ex continue\nTemporary breakpoint 1 at 0x679\n\nTemporary breakpoint 1, 0x0000555555554679 in main ()\nBreakpoint 2 at 0x55555555463e\n\nBreakpoint 2, 0x000055555555463e in foo (i=0, i@entry=2, j=2, j@entry=3)\n...\n\nNow, let's try the same again, but run directly to foo rather than stopping at\nmain:\n...\n$ gdb -q -batch outputs/gdb.trace/entry-values/entry-values \\\n  -ex \"break foo\" \\\n  -ex \"set print entry-values both\" \\\n  -ex run\nBreakpoint 1 at 0x63e\n\nBreakpoint 1, 0x000055555555463e in foo (i=0, i@entry=<optimized out>, \\\n  j=2, j@entry=<optimized out>)\n...\n\nSo, what explains the difference?  Noteworthy, this is a dwarf assembly\ntest-case, with debug info for foo and bar, but not for main.\n\nIn the first case:\n- we run to main\n- this does not trigger expanding debug info, because there's none for main\n- we set a breakpoint at foo\n- this triggers expanding debug info.  Relocated addresses are used in\n  call_site info (because the exec is started)\n- we continue to foo, and manage to find the call_site info\n\nIn the second case:\n- we set a breakpoint at foo\n- this triggers expanding debug info.  Unrelocated addresses are used in\n  call_site info (because the exec is not started)\n- we run to foo\n- this triggers objfile_relocate1, but it doesn't update the call_site\n  info addresses\n- we don't manage to find the call_site info\n\nWe could fix this by adding the missing call_site relocation in\nobjfile_relocate1.\n\nThis solution however is counter-trend in the sense that we're trying to\nwork towards the situation where when starting two instances of an executable,\nwe need only one instance of debug information, implying the use of\nunrelocated addresses.\n\nSo, fix this instead by using unrelocated addresses in call_site info.\n\nTested on x86_64-linux.\n\nThis fixes all remaining unix/-fno-PIE/-no-pie vs unix/-fPIE/-pie\nregressions, like f.i. PR24892.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=24892\n\nCo-Authored-By: Tom de Vries <tdevries@suse.de>",
    "tree": {
      "sha": "3789b058a0b993a6949d3f681a63a70bde644bad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3789b058a0b993a6949d3f681a63a70bde644bad"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b0b8879e292218bfb27584515e98a46379c9c666",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0b8879e292218bfb27584515e98a46379c9c666",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b0b8879e292218bfb27584515e98a46379c9c666",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0b8879e292218bfb27584515e98a46379c9c666/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b84aaadaf8b774630b90d91d23e15c9f521fbeee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b84aaadaf8b774630b90d91d23e15c9f521fbeee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b84aaadaf8b774630b90d91d23e15c9f521fbeee"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 25,
    "deletions": 9
  },
  "files": [
    {
      "sha": "16e0be73d027ca3545ffd9246145fb6b3ec9d1b4",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0b8879e292218bfb27584515e98a46379c9c666/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0b8879e292218bfb27584515e98a46379c9c666/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=b0b8879e292218bfb27584515e98a46379c9c666",
      "patch": "@@ -713,7 +713,14 @@ call_site_to_target_addr (struct gdbarch *call_site_gdbarch,\n       }\n \n     case FIELD_LOC_KIND_PHYSADDR:\n-      return FIELD_STATIC_PHYSADDR (call_site->target);\n+      {\n+\tdwarf2_per_objfile *per_objfile = call_site->per_objfile;\n+\tcompunit_symtab *cust = per_objfile->get_symtab (call_site->per_cu);\n+\tint sect_idx = COMPUNIT_BLOCK_LINE_SECTION (cust);\n+\tCORE_ADDR delta = per_objfile->objfile->section_offsets[sect_idx];\n+\n+\treturn FIELD_STATIC_PHYSADDR (call_site->target) + delta;\n+      }\n \n     default:\n       internal_error (__FILE__, __LINE__, _(\"invalid call site target kind\"));"
    },
    {
      "sha": "e036b2eac637aef8aa6f00b6ec93185edec5746f",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0b8879e292218bfb27584515e98a46379c9c666/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0b8879e292218bfb27584515e98a46379c9c666/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=b0b8879e292218bfb27584515e98a46379c9c666",
      "patch": "@@ -13363,6 +13363,7 @@ read_call_site_scope (struct die_info *die, struct dwarf2_cu *cu)\n     }\n   pc = attr->as_address () + baseaddr;\n   pc = gdbarch_adjust_dwarf2_addr (gdbarch, pc);\n+  pc -= baseaddr;\n \n   if (cu->call_site_htab == NULL)\n     cu->call_site_htab = htab_create_alloc_ex (16, call_site::hash,\n@@ -13519,7 +13520,8 @@ read_call_site_scope (struct die_info *die, struct dwarf2_cu *cu)\n \t\t       sect_offset_str (die->sect_off), objfile_name (objfile));\n \t  else\n \t    {\n-\t      lowpc = gdbarch_adjust_dwarf2_addr (gdbarch, lowpc + baseaddr);\n+\t      lowpc = (gdbarch_adjust_dwarf2_addr (gdbarch, lowpc + baseaddr)\n+\t\t       - baseaddr);\n \t      SET_FIELD_PHYSADDR (call_site->target, lowpc);\n \t    }\n \t}"
    },
    {
      "sha": "853532838a2e24634791bbd91d701e23483f7358",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0b8879e292218bfb27584515e98a46379c9c666/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0b8879e292218bfb27584515e98a46379c9c666/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=b0b8879e292218bfb27584515e98a46379c9c666",
      "patch": "@@ -6314,7 +6314,10 @@ objfile_type (struct objfile *objfile)\n CORE_ADDR\n call_site::pc () const\n {\n-  return m_pc;\n+  compunit_symtab *cust = this->per_objfile->get_symtab (this->per_cu);\n+  CORE_ADDR delta\n+\t= this->per_objfile->objfile->section_offsets[COMPUNIT_BLOCK_LINE_SECTION (cust)];\n+  return m_unrelocated_pc + delta;\n }\n \n void _initialize_gdbtypes ();"
    },
    {
      "sha": "4e5b2f1a92f3fe2f318dc63b62e402504a2e49fc",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0b8879e292218bfb27584515e98a46379c9c666/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0b8879e292218bfb27584515e98a46379c9c666/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=b0b8879e292218bfb27584515e98a46379c9c666",
      "patch": "@@ -1795,19 +1795,19 @@ struct call_site\n   {\n     call_site (CORE_ADDR pc, dwarf2_per_cu_data *per_cu,\n \t       dwarf2_per_objfile *per_objfile)\n-      : per_cu (per_cu), per_objfile (per_objfile), m_pc (pc)\n+      : per_cu (per_cu), per_objfile (per_objfile), m_unrelocated_pc (pc)\n     {}\n \n     static int\n     eq (const call_site *a, const call_site *b)\n     {\n-      return core_addr_eq (&a->m_pc, &b->m_pc);\n+      return core_addr_eq (&a->m_unrelocated_pc, &b->m_unrelocated_pc);\n     }\n \n     static hashval_t\n     hash (const call_site *a)\n     {\n-      return core_addr_hash (&a->m_pc);\n+      return core_addr_hash (&a->m_unrelocated_pc);\n     }\n \n     static int\n@@ -1849,8 +1849,8 @@ struct call_site\n     dwarf2_per_objfile *const per_objfile = nullptr;\n \n   private:\n-    /* Address of the first instruction after this call.  */\n-    const CORE_ADDR m_pc;\n+    /* Unrelocated address of the first instruction after this call.  */\n+    const CORE_ADDR m_unrelocated_pc;\n \n   public:\n     /* * Describe DW_TAG_call_site's DW_TAG_formal_parameter.  */"
    },
    {
      "sha": "85e6b084551836017398900f161823452f8af78f",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b0b8879e292218bfb27584515e98a46379c9c666/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b0b8879e292218bfb27584515e98a46379c9c666/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=b0b8879e292218bfb27584515e98a46379c9c666",
      "patch": "@@ -337,7 +337,11 @@ compunit_symtab::find_call_site (CORE_ADDR pc) const\n   if (m_call_site_htab == nullptr)\n     return nullptr;\n \n-  struct call_site call_site_local (pc, nullptr, nullptr);\n+  CORE_ADDR delta\n+    = this->objfile->section_offsets[COMPUNIT_BLOCK_LINE_SECTION (this)];\n+  CORE_ADDR unrelocated_pc = pc - delta;\n+\n+  struct call_site call_site_local (unrelocated_pc, nullptr, nullptr);\n   void **slot\n     = htab_find_slot (m_call_site_htab, &call_site_local, NO_INSERT);\n   if (slot == nullptr)"
    }
  ]
}