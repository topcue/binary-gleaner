{
  "sha": "d30dcd1288ab230d9600413fc78a29bbd96aa14a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDMwZGNkMTI4OGFiMjMwZDk2MDA0MTNmYzc4YTI5YmJkOTZhYTE0YQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-04-23T14:19:15Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-05-11T21:27:04Z"
    },
    "message": "gdb/testsuite: Detect and warn about duplicate test names\n\nBuilding on the previous commit, this patch detects when two tests\nhave the same test name and causes Dejagnu to print a new result type\n'# of duplicate test names' in the result summary.  A line starting\nwith 'DUPLICATE: ' is also added to the gdb.sum and gdb.log files.\n\nThe DUPLICATE markers will be printed the second time a duplicate test\nname is seen, and every time after that.  So you might see:\n\n  PASS: gdb.base/sometest.exp: foo\n  PASS: gdb.base/sometest.exp: bar\n  PASS: gdb.base/sometest.exp: foo\n  DUPLICATE: gdb.base/sometest.exp: foo\n  PASS: gdb.base/sometest.exp: baz\n  PASS: gdb.base/sometest.exp: foo\n  DUPLICATE: gdb.base/sometest.exp: foo\n\nHowever, the results will report a duplicate count of 1, indicating\nthat just one test name (foo) was duplicated.\n\nCurrently if the tests are run in parallel mode the new result type is\nnot merged into the combined summary file so users will need to run in\nnon-parallel mode to check this result.  Similarly, the 'DUPLICATE: '\nmarkers will not be merged into the final gdb.sum file.  A later\ncommit will fix this.\n\ngdb/testsuite/ChangeLog:\n\n\t* lib/check-test-names.exp (all_test_names): New module variable.\n\t(counts): Add 'duplicates' field.\n\t(_check_duplicates): New procedure.\n\t(check): Also check for duplicates.\n\t(do_log_summary): Print duplicates count.\n\t(do_reset_vars): Reset counter for duplicate test names, and\n\tdiscard all know test names.",
    "tree": {
      "sha": "6d0eaf278f62c5ff5173c8374303fc6e0e56a539",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6d0eaf278f62c5ff5173c8374303fc6e0e56a539"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d30dcd1288ab230d9600413fc78a29bbd96aa14a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d30dcd1288ab230d9600413fc78a29bbd96aa14a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d30dcd1288ab230d9600413fc78a29bbd96aa14a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d30dcd1288ab230d9600413fc78a29bbd96aa14a/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "34584c091bb4414cea6531269f435b2938b2d8e6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/34584c091bb4414cea6531269f435b2938b2d8e6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/34584c091bb4414cea6531269f435b2938b2d8e6"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 48,
    "deletions": 6
  },
  "files": [
    {
      "sha": "29b6636b7ce5c5cb77a403c52d1f5875cf051c42",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d30dcd1288ab230d9600413fc78a29bbd96aa14a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d30dcd1288ab230d9600413fc78a29bbd96aa14a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=d30dcd1288ab230d9600413fc78a29bbd96aa14a",
      "patch": "@@ -1,3 +1,13 @@\n+2020-05-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* lib/check-test-names.exp (all_test_names): New module variable.\n+\t(counts): Add 'duplicates' field.\n+\t(_check_duplicates): New procedure.\n+\t(check): Also check for duplicates.\n+\t(do_log_summary): Print duplicates count.\n+\t(do_reset_vars): Reset counter for duplicate test names, and\n+\tdiscard all know test names.\n+\n 2020-05-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* lib/gdb.exp: Include check-test-names.exp library."
    },
    {
      "sha": "4c0fde6e4ea92a05b386719d0ff065129ec17ce6",
      "filename": "gdb/testsuite/lib/check-test-names.exp",
      "status": "modified",
      "additions": 38,
      "deletions": 6,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d30dcd1288ab230d9600413fc78a29bbd96aa14a/gdb/testsuite/lib/check-test-names.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d30dcd1288ab230d9600413fc78a29bbd96aa14a/gdb/testsuite/lib/check-test-names.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/check-test-names.exp?ref=d30dcd1288ab230d9600413fc78a29bbd96aa14a",
      "patch": "@@ -19,13 +19,18 @@\n # to compare results between two runs of GDB from different trees.\n \n namespace eval ::CheckTestNames {\n-    # An associative array of counts of tests that include a path in their\n-    # test name.  There are two counts, 'count', which counts occurrences\n-    # within a single variant run, and 'total', which counts across all\n-    # variants.\n+    # An associative array of all test names to the number of times each\n+    # name is seen.  Used to detect duplicate test names.\n+    variable all_test_names\n+    array set all_test_names {}\n+\n+    # An associative array of counts of tests that either include a path in\n+    # their test name, or have a duplicate test name.  There are two counts\n+    # for each issue, 'count', which counts occurrences within a single\n+    # variant run, and 'total', which counts across all variants.\n     variable counts\n     array set counts {}\n-    foreach nm {paths} {\n+    foreach nm {paths duplicates} {\n \tset counts($nm,count) 0\n \tset counts($nm,total) 0\n     }\n@@ -54,6 +59,25 @@ namespace eval ::CheckTestNames {\n \treturn false\n     }\n \n+    # Check if MESSAGE is a duplicate, if it is then increment the\n+    # duplicates counter and return true, otherwise, return false.\n+    proc _check_duplicates { message } {\n+\tvariable all_test_names\n+\n+\t# Initialise a count, or increment the count for this test name.\n+\tif {![info exists all_test_names($message)]} {\n+\t    set all_test_names($message) 0\n+\t} else {\n+\t    if {$all_test_names($message) == 0} {\n+\t\tinc_count duplicates\n+\t    }\n+\t    incr all_test_names($message)\n+\t    return true\n+\t}\n+\n+\treturn false\n+    }\n+\n     # Remove the leading Dejagnu status marker from MESSAGE, and\n     # return the remainder of MESSAGE.  A status marker is something\n     # like 'PASS: '.  It is assumed that MESSAGE does contain such a\n@@ -82,6 +106,10 @@ namespace eval ::CheckTestNames {\n \tif [ _check_paths $message ] {\n \t    clone_output \"PATH: $message\"\n \t}\n+\n+\tif [ _check_duplicates $message ] {\n+\t    clone_output \"DUPLICATE: $message\"\n+\t}\n     }\n \n     # If COUNT is greater than zero, disply PREFIX followed by COUNT.\n@@ -109,17 +137,21 @@ namespace eval ::CheckTestNames {\n \n \tmaybe_show_count \"# of paths in test names\\t\" \\\n \t    $counts(paths,$which)\n+\tmaybe_show_count \"# of duplicate test names\\t\" \\\n+\t    $counts(duplicates,$which)\n     }\n \n     # Rename Dejagnu's reset_vars procedure, and create do_reset_vars to\n     # replace it.  We arrange to have do_reset_vars called later.\n     rename ::reset_vars reset_vars\n     proc do_reset_vars {} {\n+\tvariable all_test_names\n \tvariable counts\n \n \tCheckTestNames::reset_vars\n \n-\tforeach nm {paths} {\n+\tunset all_test_names\n+\tforeach nm {paths duplicates} {\n \t    set counts($nm,count) 0\n \t}\n     }"
    }
  ]
}