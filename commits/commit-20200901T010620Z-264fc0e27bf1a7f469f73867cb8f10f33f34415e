{
  "sha": "264fc0e27bf1a7f469f73867cb8f10f33f34415e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjY0ZmMwZTI3YmYxYTdmNDY5ZjczODY3Y2I4ZjEwZjMzZjM0NDE1ZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-01T01:06:06Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-09-01T01:06:20Z"
    },
    "message": "gdb: change type of field_info::non_public_fields to bool\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.c (struct field_info) <non_public_fields>: Change\n\ttype to bool.\n\t(dwarf2_add_field): Use true instead of 1.\n\nChange-Id: I7e9c86429402c28d4f15861d17976b9c50049f94",
    "tree": {
      "sha": "9f01f97c9b8954306fb12246116b7a2a78c1468d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9f01f97c9b8954306fb12246116b7a2a78c1468d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/264fc0e27bf1a7f469f73867cb8f10f33f34415e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/264fc0e27bf1a7f469f73867cb8f10f33f34415e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/264fc0e27bf1a7f469f73867cb8f10f33f34415e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/264fc0e27bf1a7f469f73867cb8f10f33f34415e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2de01bdb2e25b81e7d65139ac4b767d2ff5eb5c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2de01bdb2e25b81e7d65139ac4b767d2ff5eb5c7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2de01bdb2e25b81e7d65139ac4b767d2ff5eb5c7"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 8,
    "deletions": 3
  },
  "files": [
    {
      "sha": "7aadd870423ab6cf648092d88034500fa97c0d74",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/264fc0e27bf1a7f469f73867cb8f10f33f34415e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/264fc0e27bf1a7f469f73867cb8f10f33f34415e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=264fc0e27bf1a7f469f73867cb8f10f33f34415e",
      "patch": "@@ -1,3 +1,8 @@\n+2020-08-31  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.c (struct field_info) <non_public_fields>: Change\n+\ttype to bool.\n+\n 2020-08-31  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2/read.c (struct field_info): Fix indentation."
    },
    {
      "sha": "c610ae4f068dfb72951514365b8d886ac1ffacb9",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/264fc0e27bf1a7f469f73867cb8f10f33f34415e/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/264fc0e27bf1a7f469f73867cb8f10f33f34415e/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=264fc0e27bf1a7f469f73867cb8f10f33f34415e",
      "patch": "@@ -1196,7 +1196,7 @@ struct field_info\n   std::vector<struct nextfield> baseclasses;\n \n   /* Set if the accessibility of one of the fields is not public.  */\n-  int non_public_fields = 0;\n+  bool non_public_fields = false;\n \n   /* Member function fieldlist array, contains name of possibly overloaded\n      member function, number of overloaded member functions and a pointer\n@@ -15015,7 +15015,7 @@ dwarf2_add_field (struct field_info *fip, struct die_info *die,\n   else\n     new_field->accessibility = dwarf2_default_access_attribute (die, cu);\n   if (new_field->accessibility != DW_ACCESS_public)\n-    fip->non_public_fields = 1;\n+    fip->non_public_fields = true;\n \n   attr = dwarf2_attr (die, DW_AT_virtuality, cu);\n   if (attr != nullptr)\n@@ -15112,7 +15112,7 @@ dwarf2_add_field (struct field_info *fip, struct die_info *die,\n \t{\n \t  FIELD_ARTIFICIAL (*fp) = 1;\n \t  new_field->accessibility = DW_ACCESS_private;\n-\t  fip->non_public_fields = 1;\n+\t  fip->non_public_fields = true;\n \t}\n     }\n   else if (die->tag == DW_TAG_member || die->tag == DW_TAG_variable)"
    }
  ]
}