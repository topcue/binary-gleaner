{
  "sha": "cd393cec3ab21f6e8b984dea5dafe2c7a5aec892",
  "node_id": "C_kwDOANOeidoAKGNkMzkzY2VjM2FiMjFmNmU4Yjk4NGRlYTVkYWZlMmM3YTVhZWM4OTI",
  "commit": {
    "author": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2022-01-31T06:24:54Z"
    },
    "committer": {
      "name": "Markus Metzger",
      "email": "markus.t.metzger@intel.com",
      "date": "2022-02-01T16:44:38Z"
    },
    "message": "gdb, btrace: improve error messages\n\nWhen trying to use 'record btrace' on a system that does not support it,\nthe error message isn't as clear as it could be.  See\nhttps://sourceware.org/pipermail/gdb/2022-January/049870.html.\n\nImprove the error message in a few cases.\n\nReported-by: Simon Sobisch  <simonsobisch@gnu.org>",
    "tree": {
      "sha": "768a2becd883fa544d482832bc9d153e490824c4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/768a2becd883fa544d482832bc9d153e490824c4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892/comments",
  "author": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "markus-metzger",
    "id": 5424725,
    "node_id": "MDQ6VXNlcjU0MjQ3MjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5424725?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markus-metzger",
    "html_url": "https://github.com/markus-metzger",
    "followers_url": "https://api.github.com/users/markus-metzger/followers",
    "following_url": "https://api.github.com/users/markus-metzger/following{/other_user}",
    "gists_url": "https://api.github.com/users/markus-metzger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markus-metzger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markus-metzger/subscriptions",
    "organizations_url": "https://api.github.com/users/markus-metzger/orgs",
    "repos_url": "https://api.github.com/users/markus-metzger/repos",
    "events_url": "https://api.github.com/users/markus-metzger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markus-metzger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "219c04fc3b3f7e7e19fc5f8d47e5036c7a80377f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/219c04fc3b3f7e7e19fc5f8d47e5036c7a80377f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/219c04fc3b3f7e7e19fc5f8d47e5036c7a80377f"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 19,
    "deletions": 2
  },
  "files": [
    {
      "sha": "b0d6dcd7cf16c5e3cf0b7b720a4191cbc006abe5",
      "filename": "gdb/nat/linux-btrace.c",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892/gdb/nat/linux-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cd393cec3ab21f6e8b984dea5dafe2c7a5aec892/gdb/nat/linux-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/linux-btrace.c?ref=cd393cec3ab21f6e8b984dea5dafe2c7a5aec892",
      "patch": "@@ -427,9 +427,11 @@ diagnose_perf_event_open_fail ()\n     case EACCES:\n       {\n \tstatic const char filename[] = \"/proc/sys/kernel/perf_event_paranoid\";\n+\terrno = 0;\n \tgdb_file_up file = gdb_fopen_cloexec (filename, \"r\");\n \tif (file.get () == nullptr)\n-\t  break;\n+\t  error (_(\"Failed to open %s (%s).  Your system does not support \"\n+\t\t   \"process recording.\"), filename, safe_strerror (errno));\n \n \tint level, found = fscanf (file.get (), \"%d\", &level);\n \tif (found == 1 && level > 2)\n@@ -571,7 +573,22 @@ perf_event_pt_event_type ()\n   errno = 0;\n   gdb_file_up file = gdb_fopen_cloexec (filename, \"r\");\n   if (file.get () == nullptr)\n-    error (_(\"Failed to open %s: %s.\"), filename, safe_strerror (errno));\n+    switch (errno)\n+      {\n+      case EACCES:\n+      case EFAULT:\n+      case EPERM:\n+\terror (_(\"Failed to open %s (%s).  You do not have permission \"\n+\t\t \"to use Intel PT.\"), filename, safe_strerror (errno));\n+\n+      case ENOTDIR:\n+      case ENOENT:\n+\terror (_(\"Failed to open %s (%s).  Your system does not support \"\n+\t\t \"Intel PT.\"), filename, safe_strerror (errno));\n+\n+      default:\n+\terror (_(\"Failed to open %s: %s.\"), filename, safe_strerror (errno));\n+      }\n \n   int type, found = fscanf (file.get (), \"%d\", &type);\n   if (found != 1)"
    }
  ]
}