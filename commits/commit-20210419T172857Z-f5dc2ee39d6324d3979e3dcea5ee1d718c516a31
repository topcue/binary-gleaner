{
  "sha": "f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjVkYzJlZTM5ZDYzMjRkMzk3OWUzZGNlYTVlZTFkNzE4YzUxNmEzMQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-15T17:30:57Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-04-19T17:28:57Z"
    },
    "message": "gdb: use compiled_regex instead of std::regex\n\nIn GDB we should be using compiled_regex instead of std::regex.\nReplace one use in producer.c.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* producer.c: Replace 'regex' include with 'gdb_regex.h'.\n\t(producer_is_icc): Replace use of std::regex with gdb's\n\tcompiled_regex.",
    "tree": {
      "sha": "4256bbe19ebc90b08a744e8cbf7d9674bf9c99da",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4256bbe19ebc90b08a744e8cbf7d9674bf9c99da"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "229597a129f62d5e8a101f1eed95489e2399f741",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/229597a129f62d5e8a101f1eed95489e2399f741",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/229597a129f62d5e8a101f1eed95489e2399f741"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 15,
    "deletions": 9
  },
  "files": [
    {
      "sha": "a7f079e70e387207857bda3e57c53785a8d08f77",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
      "patch": "@@ -1,3 +1,9 @@\n+2021-04-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* producer.c: Replace 'regex' include with 'gdb_regex.h'.\n+\t(producer_is_icc): Replace use of std::regex with gdb's\n+\tcompiled_regex.\n+\n 2021-04-17  Tom Tromey  <tom@tromey.com>\n \n \tPR gdb/23743:"
    },
    {
      "sha": "cdfd80d904c09394febd18749bb90359b2d128cc",
      "filename": "gdb/producer.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31/gdb/producer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f5dc2ee39d6324d3979e3dcea5ee1d718c516a31/gdb/producer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/producer.c?ref=f5dc2ee39d6324d3979e3dcea5ee1d718c516a31",
      "patch": "@@ -20,7 +20,7 @@\n #include \"defs.h\"\n #include \"producer.h\"\n #include \"gdbsupport/selftest.h\"\n-#include <regex>\n+#include \"gdb_regex.h\"\n \n /* See producer.h.  */\n \n@@ -91,9 +91,8 @@ producer_is_icc_ge_19 (const char *producer)\n bool\n producer_is_icc (const char *producer, int *major, int *minor)\n {\n-  std::regex i_re (\"Intel\\\\(R\\\\)\");\n-  std::cmatch i_m;\n-  if ((producer == nullptr) || !std::regex_search (producer, i_m, i_re))\n+  compiled_regex i_re (\"Intel(R)\", 0, \"producer_is_icc\");\n+  if (producer == nullptr || i_re.exec (producer, 0, nullptr, 0) != 0)\n     return false;\n \n   /* Prepare the used fields.  */\n@@ -106,12 +105,13 @@ producer_is_icc (const char *producer, int *major, int *minor)\n   *minor = 0;\n   *major = 0;\n \n-  std::regex re (\"[0-9]+\\\\.[0-9]+\");\n-  std::cmatch version;\n-\n-  if (std::regex_search (producer, version, re))\n+  compiled_regex re (\"[0-9]+\\\\.[0-9]+\", REG_EXTENDED, \"producer_is_icc\");\n+  regmatch_t version[1];\n+  if (re.exec (producer, ARRAY_SIZE (version), version, 0) == 0\n+      && version[0].rm_so != -1)\n     {\n-      sscanf (version.str ().c_str (), \"%d.%d\", major, minor);\n+      const char *version_str = producer + version[0].rm_so;\n+      sscanf (version_str, \"%d.%d\", major, minor);\n       return true;\n     }\n "
    }
  ]
}