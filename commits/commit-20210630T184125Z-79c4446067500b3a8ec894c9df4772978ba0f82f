{
  "sha": "79c4446067500b3a8ec894c9df4772978ba0f82f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzljNDQ0NjA2NzUwMGIzYThlYzg5NGM5ZGY0NzcyOTc4YmEwZjgyZg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-30T02:06:30Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-30T18:41:25Z"
    },
    "message": "sim: ppc: unify (most) compiler warnings with common code\n\nCopy most of the common build warning logic over from the common\ncode to help keep code behavior a bit consistent, and turn them\non by default.  We disable a few flags for now until we can clean\nthe code up.",
    "tree": {
      "sha": "a3c5ae40a4ace052390a7e9e52c93db176851ea5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a3c5ae40a4ace052390a7e9e52c93db176851ea5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/79c4446067500b3a8ec894c9df4772978ba0f82f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79c4446067500b3a8ec894c9df4772978ba0f82f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/79c4446067500b3a8ec894c9df4772978ba0f82f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79c4446067500b3a8ec894c9df4772978ba0f82f/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "408a44aac1c1ab2fc07ed77eb0671fd73a675559",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408a44aac1c1ab2fc07ed77eb0671fd73a675559",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/408a44aac1c1ab2fc07ed77eb0671fd73a675559"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 73,
    "deletions": 5
  },
  "files": [
    {
      "sha": "1166d9223cfcb8cd1e502535be79c83d57147549",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=79c4446067500b3a8ec894c9df4772978ba0f82f",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-30  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* configure.ac: Add -W flags from ../m4/sim_ac_option_warnings.m4.\n+\tRun compile tests against each flag.\n+\t* configure: Regenerate.\n+\n 2021-06-29  Mike Frysinger  <vapier@gentoo.org>\n \n \t* main.c (sim_io_error): Add comment"
    },
    {
      "sha": "54b9ba2d094b1a2e53ed0cb1e3d6c46f7ac011ad",
      "filename": "sim/ppc/configure",
      "status": "modified",
      "additions": 40,
      "deletions": 3,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure?ref=79c4446067500b3a8ec894c9df4772978ba0f82f",
      "patch": "@@ -3496,18 +3496,55 @@ else\n fi\n \n \n+sim_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith\n+-Wno-unused -Wunused-value -Wunused-function\n+-Wno-switch -Wno-char-subscripts\n+-Wempty-body -Wunused-but-set-parameter\n+-Wno-error=maybe-uninitialized\n+-Wno-missing-declarations\n+-Wno-missing-prototypes\n+-Wdeclaration-after-statement -Wmissing-parameter-type\n+-Wno-pointer-sign\n+-Wold-style-declaration -Wold-style-definition\n+\"\n # Check whether --enable-sim-warnings was given.\n if test \"${enable_sim_warnings+set}\" = set; then :\n   enableval=$enable_sim_warnings; case \"${enableval}\" in\n-  yes)\tsim_warnings=\"-Werror -Wall -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations \";;\n+  yes)\t;;\n   no)\tsim_warnings=\"-w\";;\n   *)\tsim_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n esac\n if test x\"$silent\" != x\"yes\" && test x\"$sim_warnings\" != x\"\"; then\n   echo \"Setting warning flags = $sim_warnings\" 6>&1\n fi\n-else\n-  sim_warnings=\"\"\n+fi\n+if test \"x${sim_warnings}\" != x -a \"x$GCC\" = xyes; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+  build_warnings=\"${sim_warnings}\"\n+  sim_warnings=\n+  for w in ${build_warnings}; do\n+        saved_CFLAGS=\"$CFLAGS\"\n+    CFLAGS=\"$CFLAGS -Werror $w\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  sim_warnings=\"${sim_warnings} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    CFLAGS=\"$saved_CFLAGS\"\n+  done\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${sim_warnings}\" >&5\n+$as_echo \"${sim_warnings}\" >&6; }\n fi\n \n "
    },
    {
      "sha": "a7d226df5cf62d546e36c9b41eb9c00d272c0ad8",
      "filename": "sim/ppc/configure.ac",
      "status": "modified",
      "additions": 27,
      "deletions": 2,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79c4446067500b3a8ec894c9df4772978ba0f82f/sim/ppc/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure.ac?ref=79c4446067500b3a8ec894c9df4772978ba0f82f",
      "patch": "@@ -430,16 +430,41 @@ if test x\"$silent\" != x\"yes\" && test x\"$sim_timebase\" != x\"\"; then\n fi],[sim_timebase=\"\"])dnl\n \n \n+dnl TODO: Switch to common $(WARN_CFLAGS).\n+sim_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith\n+-Wno-unused -Wunused-value -Wunused-function\n+-Wno-switch -Wno-char-subscripts\n+-Wempty-body -Wunused-but-set-parameter\n+-Wno-error=maybe-uninitialized\n+-Wno-missing-declarations\n+-Wno-missing-prototypes\n+-Wdeclaration-after-statement -Wmissing-parameter-type\n+-Wno-pointer-sign\n+-Wold-style-declaration -Wold-style-definition\n+\"\n AC_ARG_ENABLE(sim-warnings,\n [  --enable-sim-warnings=opts\t\tExtra CFLAGS for turning on compiler warnings except for idecode.o, semantics.o and psim.o],\n [case \"${enableval}\" in\n-  yes)\tsim_warnings=\"-Werror -Wall -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations \";;\n+  yes)\t;;\n   no)\tsim_warnings=\"-w\";;\n   *)\tsim_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n esac\n if test x\"$silent\" != x\"yes\" && test x\"$sim_warnings\" != x\"\"; then\n   echo \"Setting warning flags = $sim_warnings\" 6>&1\n-fi],[sim_warnings=\"\"])dnl\n+fi])dnl\n+if test \"x${sim_warnings}\" != x -a \"x$GCC\" = xyes; then\n+  AC_MSG_CHECKING(compiler warning flags)\n+  build_warnings=\"${sim_warnings}\"\n+  sim_warnings=\n+  for w in ${build_warnings}; do\n+    dnl Check that GCC accepts it\n+    saved_CFLAGS=\"$CFLAGS\"\n+    CFLAGS=\"$CFLAGS -Werror $w\"\n+    AC_TRY_COMPILE([],[],sim_warnings=\"${sim_warnings} $w\",)\n+    CFLAGS=\"$saved_CFLAGS\"\n+  done\n+  AC_MSG_RESULT(${sim_warnings})\n+fi\n \n \n AC_ARG_ENABLE(sim-xor-endian,"
    }
  ]
}