{
  "sha": "be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmUyYmMzMGY5Y2IzZThkZDhiNTY2ZGI1NTFhOGNlM2NjMzA1ZTAxNQ==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-15T14:48:02Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-15T15:00:00Z"
    },
    "message": "sim: ppc: clean up various warnings\n\nA random grab bag of minor fixes to enable -Werror for this port.\n\nCast address vars to long when the format was using %l.\nUse %zu with sizeof operations.\nAdd const to a bunch of strings.\nTrim unused variables.\nFix sizeof call to calculate target storage and not the pointer itself.",
    "tree": {
      "sha": "b956da9b71b744d3600ee4a1a7817c4f92f3c2ba",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b956da9b71b744d3600ee4a1a7817c4f92f3c2ba"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c5a2e0123b7241be6a2022f1acb8fa700dda628a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c5a2e0123b7241be6a2022f1acb8fa700dda628a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c5a2e0123b7241be6a2022f1acb8fa700dda628a"
    }
  ],
  "stats": {
    "total": 176,
    "additions": 122,
    "deletions": 54
  },
  "files": [
    {
      "sha": "42db5f26857ee95731ed1593d3887aea1d7ff0f5",
      "filename": "sim/ppc/ChangeLog",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ChangeLog?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -1,3 +1,39 @@\n+2021-05-15  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* Makefile.in (WERROR_CFLAGS): Define.\n+\t(STD_CFLAGS): Add $(WERROR_CFLAGS).\n+\t* configure.ac: Add --enable-werror.\n+\t* device.c (device_full_name): Delete full_name variable.\n+\t(device_clean): Delete system variable.\n+\t* emul_chirp.c (chirp_emul_getprop): Cast vars to unsigned long.\n+\t(chirp_emul_seek): Likewise.\n+\t* hw_glue.c (hw_glue_init_address): Use %zu format.\n+\t* hw_ide.c (hw_ide_io_read_buffer): Cast vars to unsigned long.\n+\t(hw_ide_io_write_buffer): Likewise.\n+\t* hw_init.c (update_for_binary_section): Cast vars to unsigned long.\n+\t* hw_phb.c (hw_phb_dma_read_buffer): Likewise.\n+\t(hw_phb_dma_write_buffer): Likewise.\n+\t* hw_shm.c (hw_shm_init_data): Delete d variable.\n+\t(hw_shm_attach_address_callback): Delete shm variable.\n+\t* igen.c (gen_semantics_c): Include tree.h.\n+\t* interrupts.c (alignment_interrupt): Cast vars to unsigned long.\n+\t* ld-insn.c (dump_insn_field): Cast vars to unsigned long.\n+\t* main.c (main): Add const to argv.\n+\t* options.c (print_options): Cast var to int.\n+\t* ppc-instructions: Add %s to format.  Delete shifted variable.  Add\n+\tparenthesis to binary operations.\n+\t* psim.c (find_arg): Add const to return and argv.\n+\t(is_num): Add const to string.\n+\t(psim_options): Add const to return and argv, and p & param.\n+\t(psim_command): Add const to argv, device, and media.\n+\t(psim_stack): Add const to argv and envp.\n+\t* psim.h: Add const to psim_options, psim_command, and psim_stack.\n+\t* tree.c (parse_reg_property): Delete & from sizeof.\n+\t* vm.c (om_virtual_to_real): Const vars to long.\n+\t* vm_n.h (vm_data_map_read_N): Change format to %zu.\n+\t(vm_data_map_write_N): Likewise.\n+\t* configure: Regenerate.\n+\n 2021-05-14  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in: Update path."
    },
    {
      "sha": "9fc864e677af9ad8aa260f19d20f02632ba7aa18",
      "filename": "sim/ppc/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/Makefile.in?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -64,6 +64,7 @@ AR = @AR@\n AR_FLAGS = rc\n CC = @CC@\n CFLAGS = @CFLAGS@\n+WERROR_CFLAGS = @WERROR_CFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n BISON = bison\n@@ -103,7 +104,7 @@ CONFIG_CFLAGS = \\\n   $(DEVZERO_CFLAGS)\n SIM_FPU_CFLAGS = @sim_fpu_cflags@\n \n-STD_CFLAGS\t= $(CFLAGS) $(INLINE_CFLAGS) $(CONFIG_CFLAGS) $(WARNING_CFLAGS) $(INCLUDES) $(INTL_CFLAGS) $(SIM_FPU_CFLAGS)\n+STD_CFLAGS\t= $(CFLAGS) $(WERROR_CFLAGS) $(INLINE_CFLAGS) $(CONFIG_CFLAGS) $(WARNING_CFLAGS) $(INCLUDES) $(INTL_CFLAGS) $(SIM_FPU_CFLAGS)\n NOWARN_CFLAGS\t= $(CFLAGS) $(INLINE_CFLAGS) $(CONFIG_CFLAGS) $(INCLUDES) $(SIM_FPU_CFLAGS)\n BUILD_CFLAGS\t= $(CFLAGS_FOR_BUILD) $(INCLUDES) $(WARNING_CFLAGS)\n "
    },
    {
      "sha": "235595b7b2c464433e79341a5b5f072b82a18503",
      "filename": "sim/ppc/configure",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -678,6 +678,7 @@ build\n REPORT_BUGS_TEXI\n REPORT_BUGS_TO\n PKGVERSION\n+WERROR_CFLAGS\n EGREP\n GREP\n CPP\n@@ -773,6 +774,7 @@ enable_sim_stdio\n enable_sim_switch\n enable_sim_timebase\n enable_sim_trace\n+enable_werror\n enable_sim_warnings\n enable_sim_xor_endian\n with_pkgversion\n@@ -1435,6 +1437,7 @@ Optional Features:\n   --enable-sim-switch\t\t\tUse a switch instead of a table for instruction call.\n   --enable-sim-timebase\t\t\tSpecify whether the PPC timebase is supported.\n   --enable-sim-trace\t\t\tSpecify whether tracing is supported.\n+  --enable-werror         treat compile warnings as errors\n   --enable-sim-warnings=opts\t\tExtra CFLAGS for turning on compiler warnings except for idecode.o, semantics.o and psim.o\n   --enable-sim-xor-endian=n\t\tSpecify number bytes involved in PowerPC XOR bi-endian mode (default 8).\n   --enable-plugins        Enable support for plugins\n@@ -4758,6 +4761,25 @@ _ACEOF\n $as_echo \"$sim_trace\" >&6; }\n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+\n+\n # Check whether --enable-sim-warnings was given.\n if test \"${enable_sim_warnings+set}\" = set; then :\n   enableval=$enable_sim_warnings; case \"${enableval}\" in"
    },
    {
      "sha": "21913a913294e3594ebbc874d5eab563b7f178e9",
      "filename": "sim/ppc/configure.ac",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/configure.ac?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -587,6 +587,23 @@ AC_DEFINE_UNQUOTED([WITH_TRACE], [$sim_trace], [Sim trace settings])\n AC_MSG_RESULT($sim_trace)\n \n \n+AC_ARG_ENABLE(werror,\n+  AS_HELP_STRING([--enable-werror], [treat compile warnings as errors]),\n+  [case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) AC_MSG_ERROR(bad value ${enableval} for --enable-werror) ;;\n+   esac])\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+  ERROR_ON_WARNING=yes\n+fi\n+WERROR_CFLAGS=\"\"\n+if test \"${ERROR_ON_WARNING}\" = yes ; then\n+  WERROR_CFLAGS=\"-Werror\"\n+fi\n+AC_SUBST(WERROR_CFLAGS)\n+\n AC_ARG_ENABLE(sim-warnings,\n [  --enable-sim-warnings=opts\t\tExtra CFLAGS for turning on compiler warnings except for idecode.o, semantics.o and psim.o],\n [case \"${enableval}\" in"
    },
    {
      "sha": "4abef6f9e23403712a9b3135794669b449ddff49",
      "filename": "sim/ppc/device.c",
      "status": "modified",
      "additions": 3,
      "deletions": 9,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/device.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/device.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/device.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -180,10 +180,9 @@ device_full_name(device *leaf,\n                  unsigned sizeof_buf)\n {\n   /* get a buffer */\n-  char full_name[1024];\n-  if (buf == (char*)0) {\n-    buf = full_name;\n-    sizeof_buf = sizeof(full_name);\n+  if (buf == NULL) {\n+    sizeof_buf = 1024;\n+    buf = malloc(sizeof_buf);\n   }\n \n   /* construct a name */\n@@ -211,9 +210,6 @@ device_full_name(device *leaf,\n     strcat (buf, unit);\n   }\n   \n-  /* return it usefully */\n-  if (buf == full_name)\n-    buf = (char *) strdup(full_name);\n   return buf;\n }\n \n@@ -1915,8 +1911,6 @@ INLINE_DEVICE\\\n device_clean(device *me,\n \t     void *data)\n {\n-  psim *system;\n-  system = (psim*)data;\n   TRACE(trace_device_init, (\"device_clean - initializing %s\", me->path));\n   clean_device_interrupt_edges(&me->interrupt_destinations);\n   clean_device_instances(me);"
    },
    {
      "sha": "ed49169cc2385ea9cf01f4b46735a744162b937f",
      "filename": "sim/ppc/emul_chirp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/emul_chirp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/emul_chirp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/emul_chirp.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -533,7 +533,7 @@ chirp_emul_getprop(os_emul_data *data,\n \tbreak;\n       case ihandle_property:\n \tTRACE(trace_os_emul, (\"getprop - ihandle=0x%lx(0x%lx`%s')\\n\",\n-\t\t\t      BE2H_cell(*(unsigned_cell*)prop->array),\n+\t\t\t      (unsigned long)BE2H_cell(*(unsigned_cell*)prop->array),\n \t\t\t      (unsigned long)device_find_ihandle_property(phandle, name),\n \t\t\t      ihandle_name(device_find_ihandle_property(phandle, name))));\n \tbreak;\n@@ -1143,7 +1143,8 @@ chirp_emul_seek(os_emul_data *data,\n \t\t\t(unsigned long)args.ihandle,\n \t\t\t(unsigned long)ihandle,\n \t\t\tihandle_name(ihandle),\n-\t\t\targs.pos_hi, args.pos_lo));\n+\t\t\t(unsigned long)args.pos_hi,\n+\t\t\t(unsigned long)args.pos_lo));\n   if (ihandle == NULL) {\n     /* OpenFirmware doesn't define this error */\n     error(\"chirp: invalid ihandle passed to seek method\");"
    },
    {
      "sha": "2af2434b5c3412d13aca664e46f59345324134dc",
      "filename": "sim/ppc/hw_glue.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_glue.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_glue.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/hw_glue.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -193,13 +193,13 @@ hw_glue_init_address(device *me)\n     if (glue->sizeof_output == 0)\n       device_error(me, \"at least one reg property size must be nonzero\");\n     if (glue->sizeof_output % sizeof(unsigned_word) != 0)\n-      device_error(me, \"reg property size must be %d aligned\", sizeof(unsigned_word));\n+      device_error(me, \"reg property size must be %zu aligned\", sizeof(unsigned_word));\n     /* and the address */\n     device_address_to_attach_address(device_parent(me),\n \t\t\t\t     &unit.address, &glue->space, &glue->address,\n \t\t\t\t     me);\n     if (glue->address % (sizeof(unsigned_word) * max_nr_interrupts) != 0)\n-      device_error(me, \"reg property address must be %d aligned\",\n+      device_error(me, \"reg property address must be %zu aligned\",\n \t\t   sizeof(unsigned_word) * max_nr_interrupts);\n     glue->nr_outputs = glue->sizeof_output / sizeof(unsigned_word);\n     glue->output = zalloc(glue->sizeof_output);"
    },
    {
      "sha": "6c5e05163ba1bac22d64cf4b9ddb6781b6bab209",
      "filename": "sim/ppc/hw_ide.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_ide.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_ide.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/hw_ide.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -766,7 +766,7 @@ hw_ide_io_read_buffer(device *me,\n     *(unsigned8*)dest = controller->reg[reg];\n     break;\n   default:\n-    device_error(me, \"bus-error at address 0x%lx\", addr);\n+    device_error(me, \"bus-error at address 0x%lx\", (unsigned long)addr);\n     break;\n   }\n   return nr_bytes;\n@@ -820,7 +820,7 @@ hw_ide_io_write_buffer(device *me,\n     controller->reg[reg] = *(unsigned8*)source;\n     break;\n   default:\n-    device_error(me, \"bus-error at 0x%lx\", addr);\n+    device_error(me, \"bus-error at 0x%lx\", (unsigned long)addr);\n     break;\n   }\n   return nr_bytes;"
    },
    {
      "sha": "e46643c9b49b186880a9154ee314a176f42386e7",
      "filename": "sim/ppc/hw_init.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_init.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_init.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/hw_init.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -369,8 +369,8 @@ update_for_binary_section(bfd *abfd,\n     mem_in[2] = section_vma;\n     if (device_instance_call_method(memory, \"claim\", 3, mem_in, 1, mem_out) < 0)\n       device_error(me, \"failed to claim memory for section at 0x%lx (0x%lx\",\n-\t\t   section_vma,\n-\t\t   section_size);\n+\t\t   (unsigned long)section_vma,\n+\t\t   (unsigned long)section_size);\n     if (mem_out[0] != section_vma)\n       device_error(me, \"section address not as requested\");\n   }"
    },
    {
      "sha": "70d59d3084494cf0d3649ec7d358f486e78eba52",
      "filename": "sim/ppc/hw_phb.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_phb.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_phb.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/hw_phb.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -967,7 +967,7 @@ hw_phb_dma_read_buffer(device *me,\n     device_error(me, \"Do not support DMA into own bus\");\n   /* do it */\n   DTRACE(phb, (\"dma read - %s:0x%lx (%d bytes)\\n\",\n-\t       pci_space->name, addr, nr_bytes));\n+\t       pci_space->name, (unsigned long)addr, nr_bytes));\n   return device_dma_read_buffer(device_parent(me),\n \t\t\t\tdest, pci_space->parent_space,\n \t\t\t\taddr, nr_bytes);\n@@ -996,7 +996,7 @@ hw_phb_dma_write_buffer(device *me,\n     device_error(me, \"Do not support DMA into own bus\");\n   /* do it */\n   DTRACE(phb, (\"dma write - %s:0x%lx (%d bytes)\\n\",\n-\t       pci_space->name, addr, nr_bytes));\n+\t       pci_space->name, (unsigned long)addr, nr_bytes));\n   return device_dma_write_buffer(device_parent(me),\n \t\t\t\t source, pci_space->parent_space,\n \t\t\t\t addr, nr_bytes,"
    },
    {
      "sha": "c4d5cae8345342dae12be0bd0744bd270bd013c5",
      "filename": "sim/ppc/hw_shm.c",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_shm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/hw_shm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/hw_shm.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -89,7 +89,6 @@ static void\n hw_shm_init_data(device *me)\n {\n   hw_shm_device *shm = (hw_shm_device*)device_data(me);\n-  const device_unit *d;\n   reg_property_spec reg;\n   int i;\n \n@@ -147,8 +146,6 @@ hw_shm_attach_address_callback(device *me,\n \t\t\t\taccess_type access,\n \t\t\t\tdevice *client) /*callback/default*/\n {\n-  hw_shm_device *shm = (hw_shm_device*)device_data(me);\n-\n   if (space != 0)\n     error(\"shm_attach_address_callback() invalid address space\\n\");\n "
    },
    {
      "sha": "0bf3b58ca26d4b3e3dae66656b239c1f88f2926a",
      "filename": "sim/ppc/igen.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/igen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/igen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/igen.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -218,6 +218,7 @@ gen_semantics_c(insn_table *table,\n     lf_printf(file, \"#include \\\"cpu.h\\\"\\n\");\n     lf_printf(file, \"#include \\\"idecode.h\\\"\\n\");\n     lf_printf(file, \"#include \\\"semantics.h\\\"\\n\");\n+    lf_printf(file, \"#include \\\"tree.h\\\"\\n\");\n     lf_printf(file, \"#ifdef HAVE_COMMON_FPU\\n\");\n     lf_printf(file, \"#include \\\"sim-inline.h\\\"\\n\");\n     lf_printf(file, \"#include \\\"sim-fpu.h\\\"\\n\");"
    },
    {
      "sha": "133638fdcafd7b53c19bb75080119b4d15c657b9",
      "filename": "sim/ppc/interrupts.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/interrupts.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/interrupts.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/interrupts.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -262,7 +262,7 @@ alignment_interrupt(cpu *processor,\n \n   case USER_ENVIRONMENT:\n   case VIRTUAL_ENVIRONMENT:\n-    cpu_error(processor, cia, \"alignment interrupt - ra=0x%lx\", ra);\n+    cpu_error(processor, cia, \"alignment interrupt - ra=0x%lx\", (unsigned long)ra);\n     \n   case OPERATING_ENVIRONMENT:\n     DAR = (spreg)ra;"
    },
    {
      "sha": "126fc78037b7ecfd01b7a954b9a70975964ee072",
      "filename": "sim/ppc/ld-insn.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ld-insn.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ld-insn.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ld-insn.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -828,7 +828,7 @@ dump_insn_field(insn_field *field,\n \t\tint indent)\n {\n \n-  printf(\"(insn_field*)0x%x\\n\", (unsigned)field);\n+  printf(\"(insn_field*)0x%lx\\n\", (unsigned long)field);\n \n   dumpf(indent, \"(first %d)\\n\", field->first);\n "
    },
    {
      "sha": "0c1a070fc2c22dd1a402f3c2566d3dca5bd03288",
      "filename": "sim/ppc/main.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/main.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -251,7 +251,7 @@ cntrl_c(int sig)\n \n \n int\n-main(int argc, char **argv)\n+main(int argc, char * const *argv)\n {\n   const char *name_of_file;\n   char *arg_;"
    },
    {
      "sha": "e327187b37565c305bd8896274366cbdefe89be6",
      "filename": "sim/ppc/options.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/options.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -233,7 +233,7 @@ print_options (void)\n \t\t       (((i == ARRAY_SIZE (defines) - 1)\n \t\t\t || (((i + 1) % cols) == 0))\n \t\t\t? 0\n-\t\t\t: max_len + 4 - strlen (defines[i])),\n+\t\t\t: max_len + 4 - (int)strlen (defines[i])),\n \t\t       \"\");\n     }\n     printf_filtered (\"\\n\");"
    },
    {
      "sha": "70aa04e2210ee17fcf80905d1b2767de81f6c13b",
      "filename": "sim/ppc/ppc-instructions",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ppc-instructions",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/ppc-instructions",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/ppc-instructions?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -331,7 +331,7 @@ void::model-static::model_trace_release:model_data *model_ptr, model_busy *busy\n \t  }\n \t}\n \tif (busy->vscr_busy)\n-\t  TRACE(trace_model, (\"VSCR Register is now available.\\n\", spr_name(busy->spr_busy)));\n+\t  TRACE(trace_model, (\"VSCR Register %s is now available.\\n\", spr_name(busy->spr_busy)));\n \n # Trace making registers busy\n void::model-static::model_trace_make_busy:model_data *model_ptr, unsigned32 int_mask, unsigned32 fp_mask, unsigned32 cr_mask\n@@ -3315,7 +3315,6 @@ void::function::invalid_zero_divide_operation:cpu *processor, unsigned_word cia,\n \tunsigned64 mask;\n \tint n = MASKED(*rB, 59, 63);\n \tsigned32 source = (signed32)*rS; /* signed to keep sign bit */\n-\tsigned32 shifted = source >> n;\n \tint S = (MASKED(*rS,32,32) != 0);\n \tsigned64 r = ((unsigned64) source);\n \tr = ((unsigned64) source) << 32 | (unsigned32) source;\n@@ -3324,7 +3323,7 @@ void::function::invalid_zero_divide_operation:cpu *processor, unsigned_word cia,\n \t\tmask = (unsigned64) MASK64(n+32,63);\n \telse\n \t\tmask = (unsigned64) 0;\n-\t*rA = (signed_word) (r & mask | ((signed64) -1*S) & ~mask); /* if 64bit will sign extend */\n+\t*rA = (signed_word) ((r & mask) | (((signed64) -1*S) & ~mask)); /* if 64bit will sign extend */\n \tif (S && (MASKED(r & ~mask,32,63)!=0))\n \t  XER |= xer_carry;\n \telse"
    },
    {
      "sha": "70c02f7141d499a10cac83ea00d300306e5175ce",
      "filename": "sim/ppc/psim.c",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/psim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/psim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/psim.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -93,10 +93,10 @@ psim_tree(void)\n }\n \n STATIC_INLINE_PSIM\\\n-(char *)\n-find_arg(char *err_msg,\n+(const char *)\n+find_arg(const char *err_msg,\n \t int *ptr_to_argp,\n-\t char **argv)\n+\t char * const *argv)\n {\n   *ptr_to_argp += 1;\n   if (argv[*ptr_to_argp] == NULL)\n@@ -216,7 +216,7 @@ psim_usage (int verbose, int help, SIM_OPEN_KIND kind)\n /* Test \"string\" for containing a string of digits that form a number\n between \"min\" and \"max\".  The return value is the number or \"err\". */\n static\n-int is_num( char *string, int min, int max, int err)\n+int is_num(const char *string, int min, int max, int err)\n {\n   int result = 0;\n \n@@ -236,9 +236,9 @@ int is_num( char *string, int min, int max, int err)\n }\n \n INLINE_PSIM\\\n-(char **)\n+(char * const *)\n psim_options(device *root,\n-\t     char **argv,\n+\t     char * const *argv,\n \t     SIM_OPEN_KIND kind)\n {\n   device *current = root;\n@@ -247,8 +247,8 @@ psim_options(device *root,\n     return NULL;\n   argp = 0;\n   while (argv[argp] != NULL && argv[argp][0] == '-') {\n-    char *p = argv[argp] + 1;\n-    char *param;\n+    const char *p = argv[argp] + 1;\n+    const char *param;\n     while (*p != '\\0') {\n       switch (*p) {\n       default:\n@@ -395,7 +395,7 @@ psim_options(device *root,\n INLINE_PSIM\\\n (void)\n psim_command(device *root,\n-\t     char **argv)\n+\t     char * const *argv)\n {\n   int argp = 0;\n   if (argv[argp] == NULL) {\n@@ -409,8 +409,8 @@ psim_command(device *root,\n       trace_option(opt, 1);\n   }\n   else if (strcmp(*argv, \"change-media\") == 0) {\n-    char *device = find_arg(\"Missing device name\", &argp, argv);\n-    char *media = argv[++argp];\n+    const char *device = find_arg(\"Missing device name\", &argp, argv);\n+    const char *media = argv[++argp];\n     device_ioctl(tree_find_device(root, device), NULL, 0,\n \t\t device_ioctl_change_media, media);\n   }\n@@ -738,8 +738,8 @@ psim_init(psim *system)\n INLINE_PSIM\\\n (void)\n psim_stack(psim *system,\n-\t   char **argv,\n-\t   char **envp)\n+\t   char * const *argv,\n+\t   char * const *envp)\n {\n   /* pass the stack device the argv/envp and let it work out what to\n      do with it */"
    },
    {
      "sha": "2070cbf7b903e74a090d1b66c5c32c5da0fa8741",
      "filename": "sim/ppc/psim.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/psim.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/psim.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/psim.h?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -47,14 +47,14 @@ typedef struct _psim_status {\n extern device *psim_tree\n (void);\n \n-extern char **psim_options\n+extern char * const *psim_options\n (device *root,\n- char **argv,\n+ char * const *argv,\n  SIM_OPEN_KIND kind);\n \n extern void psim_command\n (device *root,\n- char **argv);\n+ char * const *argv);\n \n \n extern void psim_merge_device_file\n@@ -79,8 +79,8 @@ extern void psim_init\n \n extern void psim_stack\n (psim *system,\n- char **argv,\n- char **envp);\n+ char * const *argv,\n+ char * const *envp);\n \n \n /* Run/stop the system */"
    },
    {
      "sha": "5c35d32f3c5cfa691ea7938847f32fdb0a7b6a71",
      "filename": "sim/ppc/tree.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/tree.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/tree.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/tree.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -528,7 +528,7 @@ parse_reg_property(device *current,\n     if (device_nr_size_cells(bus) > 0)\n       chp = parse_size(current, bus, chp, &regs[reg_nr].size);\n     else\n-      memset(&regs[reg_nr].size, 0, sizeof (&regs[reg_nr].size));\n+      memset(&regs[reg_nr].size, 0, sizeof (regs[reg_nr].size));\n   }\n \n   /* create it */"
    },
    {
      "sha": "9562fb6762c0059ac07ba1573b0cfd7b50c280c8",
      "filename": "sim/ppc/vm.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/vm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/vm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/vm.c?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -627,9 +627,9 @@ om_virtual_to_real(om_map *map,\n       TRACE(trace_vm,\n \t    (\"ea=0x%lx - htab search %d - htab=0x%lx hash=0x%lx mask=0x%lx pteg=0x%lx\\n\",\n \t     (long)ea, current_hash,\n-\t     map->real_address_of_page_table,\n-\t     page_hash,\n-\t     map->page_table_hash_mask,\n+\t     (long)map->real_address_of_page_table,\n+\t     (long)page_hash,\n+\t     (long)map->page_table_hash_mask,\n \t     (long)real_address_of_pte_group));\n       for (real_address_of_pte_0 = real_address_of_pte_group;\n \t   real_address_of_pte_0 < (real_address_of_pte_group"
    },
    {
      "sha": "ce1e05059e1f7dc4342c25be8b4fb399a8f7edf2",
      "filename": "sim/ppc/vm_n.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/vm_n.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be2bc30f9cb3e8dd8b566db551a8ce3cc305e015/sim/ppc/vm_n.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/ppc/vm_n.h?ref=be2bc30f9cb3e8dd8b566db551a8ce3cc305e015",
      "patch": "@@ -59,7 +59,7 @@ vm_data_map_read_N(vm_data_map *map,\n \tunsigned_N val;\n \tif (vm_data_map_read_buffer(map, &val, ea, sizeof(unsigned_N), processor, cia)\n \t    != sizeof(unsigned_N)) {\n-\t  cpu_error(processor, cia, \"misaligned %d byte read to 0x%lx failed\",\n+\t  cpu_error(processor, cia, \"misaligned %zu byte read to 0x%lx failed\",\n \t\t    sizeof(unsigned_N), (unsigned long)ea);\n \t}\n \tval = T2H_N(val);\n@@ -107,7 +107,7 @@ vm_data_map_write_N(vm_data_map *map,\n \tunsigned_N data = H2T_N(val);\n \tif (vm_data_map_write_buffer(map, &data, ea, sizeof(unsigned_N), 0, processor, cia)\n \t    != sizeof(unsigned_N)) {\n-\t  cpu_error(processor, cia, \"misaligned %d byte write to 0x%lx failed\",\n+\t  cpu_error(processor, cia, \"misaligned %zu byte write to 0x%lx failed\",\n \t\t    sizeof(unsigned_N), (unsigned long)ea);\n \t}\n \tif (WITH_MON & MONITOR_LOAD_STORE_UNIT) {"
    }
  ]
}