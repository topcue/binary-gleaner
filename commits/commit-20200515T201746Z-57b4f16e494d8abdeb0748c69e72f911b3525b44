{
  "sha": "57b4f16e494d8abdeb0748c69e72f911b3525b44",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTdiNGYxNmU0OTRkOGFiZGViMDc0OGM2OWU3MmY5MTFiMzUyNWI0NA==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-10T19:36:14Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-15T20:17:46Z"
    },
    "message": "Ensure class_alias is only used for user-defined aliases.\n\nThis commit finally does the (small) change that started this patch\nseries.\n\nIt ensures that the class_alias is only used for user-defined aliases.\nSo, the few GDB pre-defined aliases that were using the 'class_alias'\nclass are now using a real help class, typically the class of\nthe aliased command.\n\ngdb/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* command.h (enum command_class): Improve comments, document\n\tthat class_alias is for user-defined aliases, give the class\n\tname for each class, remove unused class_xdb.\n\t* cli/cli-decode.c (add_com_alias): Document THECLASS intended usage.\n\t* breakpoint.c (_initialize_breakpoint): Replace class_alias\n\tby a precise class.\n\t* infcmd.c (_initialize_infcmd): Likewise.\n\t* reverse.c (_initialize_reverse): Likewise.\n\t* stack.c (_initialize_stack): Likewise.\n\t* symfile.c (_initialize_symfile): Likewise.\n\t* tracepoint.c (_initialize_tracepoint): Likewise.\n\ngdb/testsuite/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/alias.exp: Verify 'help aliases' shows user defined aliases.",
    "tree": {
      "sha": "dfc66c3910d9bce236f778816771264549e74372",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dfc66c3910d9bce236f778816771264549e74372"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/57b4f16e494d8abdeb0748c69e72f911b3525b44",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57b4f16e494d8abdeb0748c69e72f911b3525b44",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/57b4f16e494d8abdeb0748c69e72f911b3525b44",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/57b4f16e494d8abdeb0748c69e72f911b3525b44/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7c05caf72d31d7382819f1113fdcf13c45729a8d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7c05caf72d31d7382819f1113fdcf13c45729a8d"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 81,
    "deletions": 32
  },
  "files": [
    {
      "sha": "8823d23e8032a30d333ead7defe61a1a861a18de",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -1,3 +1,17 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* command.h (enum command_class): Improve comments, document\n+\tthat class_alias is for user-defined aliases, give the class\n+\tname for each class, remove unused class_xdb.\n+\t* cli/cli-decode.c (add_com_alias): Document THECLASS intended usage.\n+\t* breakpoint.c (_initialize_breakpoint): Replace class_alias\n+\tby a precise class.\n+\t* infcmd.c (_initialize_infcmd): Likewise.\n+\t* reverse.c (_initialize_reverse): Likewise.\n+\t* stack.c (_initialize_stack): Likewise.\n+\t* symfile.c (_initialize_symfile): Likewise.\n+\t* tracepoint.c (_initialize_tracepoint): Likewise.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* cli/cli-decode.c (apropos_cmd): Produce output for aliases"
    },
    {
      "sha": "15d76d4a9c15545ab1ac8cb040764a634621eca4",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -15478,7 +15478,7 @@ A disabled breakpoint is not forgotten, but has no effect until re-enabled.\"),\n   add_com_alias (\"dis\", \"disable\", class_breakpoint, 1);\n   add_com_alias (\"disa\", \"disable\", class_breakpoint, 1);\n \n-  add_cmd (\"breakpoints\", class_alias, disable_command, _(\"\\\n+  add_cmd (\"breakpoints\", class_breakpoint, disable_command, _(\"\\\n Disable all or some breakpoints.\\n\\\n Usage: disable breakpoints [BREAKPOINTNUM]...\\n\\\n Arguments are breakpoint numbers with spaces in between.\\n\\\n@@ -15498,7 +15498,7 @@ Also a prefix command for deletion of other GDB objects.\"),\n   add_com_alias (\"d\", \"delete\", class_breakpoint, 1);\n   add_com_alias (\"del\", \"delete\", class_breakpoint, 1);\n \n-  add_cmd (\"breakpoints\", class_alias, delete_command, _(\"\\\n+  add_cmd (\"breakpoints\", class_breakpoint, delete_command, _(\"\\\n Delete all or some breakpoints or auto-display expressions.\\n\\\n Usage: delete breakpoints [BREAKPOINTNUM]...\\n\\\n Arguments are breakpoint numbers with spaces in between.\\n\\\n@@ -15686,10 +15686,10 @@ BREAK_ARGS_HELP (\"trace\") \"\\n\\\n Do \\\"help tracepoints\\\" for info on other tracepoint commands.\"));\n   set_cmd_completer (c, location_completer);\n \n-  add_com_alias (\"tp\", \"trace\", class_alias, 0);\n-  add_com_alias (\"tr\", \"trace\", class_alias, 1);\n-  add_com_alias (\"tra\", \"trace\", class_alias, 1);\n-  add_com_alias (\"trac\", \"trace\", class_alias, 1);\n+  add_com_alias (\"tp\", \"trace\", class_breakpoint, 0);\n+  add_com_alias (\"tr\", \"trace\", class_breakpoint, 1);\n+  add_com_alias (\"tra\", \"trace\", class_breakpoint, 1);\n+  add_com_alias (\"trac\", \"trace\", class_breakpoint, 1);\n \n   c = add_com (\"ftrace\", class_breakpoint, ftrace_command, _(\"\\\n Set a fast tracepoint at specified location.\\n\\"
    },
    {
      "sha": "a4ef93c62b056559c3f018ffca2d68cd126b06cc",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -1006,7 +1006,10 @@ add_com (const char *name, enum command_class theclass,\n   return add_cmd (name, theclass, fun, doc, &cmdlist);\n }\n \n-/* Add an alias or abbreviation command to the list of commands.  */\n+/* Add an alias or abbreviation command to the list of commands.\n+   For aliases predefined by GDB (such as bt), THECLASS must be\n+   different of class_alias, as class_alias is used to identify\n+   user defined aliases.  */\n \n struct cmd_list_element *\n add_com_alias (const char *name, const char *oldname, enum command_class theclass,"
    },
    {
      "sha": "04a380cba4aa65f7871069e84e7f30997d02d663",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 36,
      "deletions": 11,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -29,21 +29,46 @@ struct completion_tracker;\n /* Command classes are top-level categories into which commands are\n    broken down for \"help\" purposes.\n \n-   Notes on classes: class_alias is for alias commands which are not\n-   abbreviations of the original command.  class-pseudo is for\n-   commands which are not really commands nor help topics (\"stop\").  */\n+   The class_alias is used for the user-defined aliases, defined\n+   using the \"alias\" command.\n+\n+   Aliases pre-defined by GDB (e.g. the alias \"bt\" of the \"backtrace\" command)\n+   are not using the class_alias.\n+   Different pre-defined aliases of the same command do not necessarily\n+   have the same classes.  For example, class_stack is used for the\n+   \"backtrace\" and its \"bt\" alias\", while \"info stack\" (also an alias\n+   of \"backtrace\" uses class_info.  */\n \n enum command_class\n {\n-  /* Special args to help_list */\n-  class_deprecated = -3, all_classes = -2, all_commands = -1,\n+  /* Classes of commands followed by a comment giving the name\n+     to use in \"help <classname>\".\n+     Note that help accepts unambiguous abbreviated class names.  */\n+\n+  /* Special classes to help_list */\n+  class_deprecated = -3,\n+  all_classes = -2,  /* help without <classname> */\n+  all_commands = -1, /* all */\n+\n   /* Classes of commands */\n-  no_class = -1, class_run = 0, class_vars, class_stack, class_files,\n-  class_support, class_info, class_breakpoint, class_trace,\n-  class_alias, class_bookmark, class_obscure, class_maintenance,\n-  class_tui, class_user, class_xdb,\n-  no_set_class\t/* Used for \"show\" commands that have no corresponding\n-\t\t   \"set\" command.  */\n+  no_class = -1,\n+  class_run = 0,     /* running */\n+  class_vars,        /* data */\n+  class_stack,       /* stack */\n+  class_files,       /* files */\n+  class_support,     /* support */\n+  class_info,        /* status */\n+  class_breakpoint,  /* breakpoints */\n+  class_trace,       /* tracepoints */\n+  class_alias,       /* aliases */\n+  class_bookmark,\n+  class_obscure,     /* obscure */\n+  class_maintenance, /* internals */\n+  class_tui,\n+  class_user,        /* user-defined */\n+\n+  /* Used for \"show\" commands that have no corresponding \"set\" command.  */\n+  no_set_class\n };\n \n /* FIXME: cagney/2002-03-17: Once cmd_type() has been removed, ``enum"
    },
    {
      "sha": "32905a7b591e8d3d5b108d2e42a61e76d2433c0c",
      "filename": "gdb/infcmd.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/infcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/infcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infcmd.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -3180,7 +3180,7 @@ is restored.\"),\n   cmd_name = \"inferior-tty\";\n   c = lookup_cmd (&cmd_name, setlist, \"\", -1, 1);\n   gdb_assert (c != NULL);\n-  add_alias_cmd (\"tty\", c, class_alias, 0, &cmdlist);\n+  add_alias_cmd (\"tty\", c, class_run, 0, &cmdlist);\n \n   cmd_name = \"args\";\n   add_setshow_string_noescape_cmd (cmd_name, class_run,\n@@ -3318,14 +3318,14 @@ Step one instruction exactly.\\n\\\n Usage: stepi [N]\\n\\\n Argument N means step N times (or till program stops for another \\\n reason).\"));\n-  add_com_alias (\"si\", \"stepi\", class_alias, 0);\n+  add_com_alias (\"si\", \"stepi\", class_run, 0);\n \n   add_com (\"nexti\", class_run, nexti_command, _(\"\\\n Step one instruction, but proceed through subroutine calls.\\n\\\n Usage: nexti [N]\\n\\\n Argument N means step N times (or till program stops for another \\\n reason).\"));\n-  add_com_alias (\"ni\", \"nexti\", class_alias, 0);\n+  add_com_alias (\"ni\", \"nexti\", class_run, 0);\n \n   add_com (\"finish\", class_run, finish_command, _(\"\\\n Execute until selected stack frame returns.\\n\\"
    },
    {
      "sha": "583e0d02da2150dbc87aae5bb711af5b8960cc13",
      "filename": "gdb/reverse.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/reverse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/reverse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/reverse.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -330,34 +330,34 @@ _initialize_reverse ()\n Step program backward until it reaches the beginning of another source line.\\n\\\n Argument N means do this N times (or till program stops for another reason).\")\n \t   );\n-  add_com_alias (\"rs\", \"reverse-step\", class_alias, 1);\n+  add_com_alias (\"rs\", \"reverse-step\", class_run, 1);\n \n   add_com (\"reverse-next\", class_run, reverse_next, _(\"\\\n Step program backward, proceeding through subroutine calls.\\n\\\n Like the \\\"reverse-step\\\" command as long as subroutine calls do not happen;\\n\\\n when they do, the call is treated as one instruction.\\n\\\n Argument N means do this N times (or till program stops for another reason).\")\n \t   );\n-  add_com_alias (\"rn\", \"reverse-next\", class_alias, 1);\n+  add_com_alias (\"rn\", \"reverse-next\", class_run, 1);\n \n   add_com (\"reverse-stepi\", class_run, reverse_stepi, _(\"\\\n Step backward exactly one instruction.\\n\\\n Argument N means do this N times (or till program stops for another reason).\")\n \t   );\n-  add_com_alias (\"rsi\", \"reverse-stepi\", class_alias, 0);\n+  add_com_alias (\"rsi\", \"reverse-stepi\", class_run, 0);\n \n   add_com (\"reverse-nexti\", class_run, reverse_nexti, _(\"\\\n Step backward one instruction, but proceed through called subroutines.\\n\\\n Argument N means do this N times (or till program stops for another reason).\")\n \t   );\n-  add_com_alias (\"rni\", \"reverse-nexti\", class_alias, 0);\n+  add_com_alias (\"rni\", \"reverse-nexti\", class_run, 0);\n \n   add_com (\"reverse-continue\", class_run, reverse_continue, _(\"\\\n Continue program being debugged but run it in reverse.\\n\\\n If proceeding from breakpoint, a number N may be used as an argument,\\n\\\n which means to set the ignore count of that breakpoint to N - 1 (so that\\n\\\n the breakpoint won't break until the Nth time it is reached).\"));\n-  add_com_alias (\"rc\", \"reverse-continue\", class_alias, 0);\n+  add_com_alias (\"rc\", \"reverse-continue\", class_run, 0);\n \n   add_com (\"reverse-finish\", class_run, reverse_finish, _(\"\\\n Execute backward until just before selected stack frame is called.\"));"
    },
    {
      "sha": "d7e21205411afe746708e8da77d7786890dd8b83",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -3485,7 +3485,7 @@ With a negative COUNT, print outermost -COUNT frames.\"),\n \n   add_com_alias (\"bt\", \"backtrace\", class_stack, 0);\n \n-  add_com_alias (\"where\", \"backtrace\", class_alias, 0);\n+  add_com_alias (\"where\", \"backtrace\", class_stack, 0);\n   add_info (\"stack\", backtrace_command,\n \t    _(\"Backtrace of the stack, or innermost COUNT frames.\"));\n   add_info_alias (\"s\", \"stack\", 1);"
    },
    {
      "sha": "946443f07a89a911dc79ff67c19140553372a8ec",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -3906,8 +3906,8 @@ on its own.\"), &cmdlist);\n \t\t\t_(\"Commands for debugging overlays.\"), &overlaylist,\n \t\t\t\"overlay \", 0, &cmdlist);\n \n-  add_com_alias (\"ovly\", \"overlay\", class_alias, 1);\n-  add_com_alias (\"ov\", \"overlay\", class_alias, 1);\n+  add_com_alias (\"ovly\", \"overlay\", class_support, 1);\n+  add_com_alias (\"ov\", \"overlay\", class_support, 1);\n \n   add_cmd (\"map-overlay\", class_support, map_overlay_command,\n \t   _(\"Assert that an overlay section is mapped.\"), &overlaylist);"
    },
    {
      "sha": "c57ddf55cbfc7f986d751fc83d066395d95a9856",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/alias.exp: Verify 'help aliases' shows user defined aliases.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/help.exp: Test apropos and help for commands\n@@ -8,7 +12,7 @@\n \n \t* gdb.base/alias.exp: Update help output check.\n \n-c2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/default.exp: Update output following fixes.\n "
    },
    {
      "sha": "6993d426484a5166370e7c7eb2aa2cce8f1e3e64",
      "filename": "gdb/testsuite/gdb.base/alias.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/testsuite/gdb.base/alias.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/testsuite/gdb.base/alias.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/alias.exp?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -122,3 +122,6 @@ gdb_test_no_output \"alias abcd  = backtrace\"\n gdb_test_no_output \"alias abcde = backtrace\"\n gdb_test_no_output \"alias fghij = backtrace\"\n gdb_test_no_output \"alias fghi  = backtrace\"\n+\n+# Verify help aliases shows the user defined aliases\n+gdb_test \"help aliases\" \".*abcd --.*.*abcde --.*\""
    },
    {
      "sha": "f4a208f616926bb6728fb15442e8495e96f39787",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/57b4f16e494d8abdeb0748c69e72f911b3525b44/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=57b4f16e494d8abdeb0748c69e72f911b3525b44",
      "patch": "@@ -4098,8 +4098,8 @@ one or more \\\"collect\\\" commands, to specify what to collect\\n\\\n while single-stepping.\\n\\n\\\n Note: this command can only be used in a tracepoint \\\"actions\\\" list.\"));\n \n-  add_com_alias (\"ws\", \"while-stepping\", class_alias, 0);\n-  add_com_alias (\"stepping\", \"while-stepping\", class_alias, 0);\n+  add_com_alias (\"ws\", \"while-stepping\", class_trace, 0);\n+  add_com_alias (\"stepping\", \"while-stepping\", class_trace, 0);\n \n   add_com (\"collect\", class_trace, collect_pseudocommand, _(\"\\\n Specify one or more data items to be collected at a tracepoint.\\n\\"
    }
  ]
}