{
  "sha": "13c3a74afb50b240dbacfd60f91414eae50279ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTNjM2E3NGFmYjUwYjI0MGRiYWNmZDYwZjkxNDE0ZWFlNTAyNzlhZA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-28T15:05:50Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-28T15:05:50Z"
    },
    "message": "[gdb/testsuite] Fix psymtab expansion postponement in c-linkage-name.exp\n\nThe test-case gdb.base/c-linkage-name.exp starts with the following test:\n...\ngdb_test \"print symada__cS\" \\\n         \" = {a = 100829103}\" \\\n         \"print symada__cS before partial symtab expansion\"\n...\n\nHowever, printing the state of the partial symtabs using maint info psymtabs\nshows that in fact the symtab has already been expanded:\n...\n  { psymtab c-linkage-name.c ((struct partial_symtab *) 0x1e27b40)^M\n    readin yes^M\n...\n\nThis is due to set_initial_language, which looks up the main symbol, which\nexpands the psymtab containing main.\n\nFix this by moving all but main into a separate source file c-linkage-name-2.c.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-02-28  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/c-linkage-name.c (main): Call do_something_other_cu.\n\t(struct wrapper, do_something, mundane/symada__cS): Move ...\n\t* gdb.base/c-linkage-name-2.c: ... here.  New source file.\n\t* gdb.base/c-linkage-name.exp: Add verification of psymtab expansion.\n\tUpdate \"print symada__cS before partial symtab expansion\" regexp.\n\tUpdate breakpoint location.  Flush symbol cache after expansion.",
    "tree": {
      "sha": "42b055cde08cdfffa1edffae4d9a08b662edbee1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/42b055cde08cdfffa1edffae4d9a08b662edbee1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/13c3a74afb50b240dbacfd60f91414eae50279ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13c3a74afb50b240dbacfd60f91414eae50279ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/13c3a74afb50b240dbacfd60f91414eae50279ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/13c3a74afb50b240dbacfd60f91414eae50279ad/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "85d2d5bbee1c21c2e3e929cc68fe06d762b3073b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/85d2d5bbee1c21c2e3e929cc68fe06d762b3073b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/85d2d5bbee1c21c2e3e929cc68fe06d762b3073b"
    }
  ],
  "stats": {
    "total": 115,
    "additions": 89,
    "deletions": 26
  },
  "files": [
    {
      "sha": "70bee9c7de5aa0d63f6f6278810082b040e5cc3d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=13c3a74afb50b240dbacfd60f91414eae50279ad",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-28  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/c-linkage-name.c (main): Call do_something_other_cu.\n+\t(struct wrapper, do_something, mundane/symada__cS): Move ...\n+\t* gdb.base/c-linkage-name-2.c: ... here.  New source file.\n+\t* gdb.base/c-linkage-name.exp: Add verification of psymtab expansion.\n+\tUpdate \"print symada__cS before partial symtab expansion\" regexp.\n+\tUpdate breakpoint location.  Flush symbol cache after expansion.\n+\n 2020-02-28  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.arch/aarch64-pauth.exp: Recognize optional PAC output."
    },
    {
      "sha": "da56fc1e09c7fdc143a5f029f1b06996ef790195",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name-2.c",
      "status": "added",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name-2.c?ref=13c3a74afb50b240dbacfd60f91414eae50279ad",
      "patch": "@@ -0,0 +1,45 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2018-2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+struct wrapper\n+{\n+  int a;\n+};\n+\n+/* Create a global variable whose name in the assembly code\n+   (aka the \"linkage name\") is different from the name in\n+   the source code.  The goal is to create a symbol described\n+   in DWARF using a DW_AT_linkage_name attribute, with a name\n+   which follows the C++ mangling.\n+\n+   In this particular case, we chose \"symada__cS\" which, if it were\n+   demangled, would translate to \"symada (char, signed)\".  */\n+struct wrapper mundane asm (\"symada__cS\") = {0x060287af};\n+\n+void\n+do_something (struct wrapper *w)\n+{\n+  w->a++;\n+}\n+\n+extern void do_something_other_cu (void);\n+\n+void\n+do_something_other_cu (void)\n+{\n+  do_something (&mundane);\n+}"
    },
    {
      "sha": "40f00cce7a2d106ec2a37902185dad23d568a224",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name.c",
      "status": "modified",
      "additions": 2,
      "deletions": 21,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name.c?ref=13c3a74afb50b240dbacfd60f91414eae50279ad",
      "patch": "@@ -15,30 +15,11 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n-struct wrapper\n-{\n-  int a;\n-};\n-\n-/* Create a global variable whose name in the assembly code\n-   (aka the \"linkage name\") is different from the name in\n-   the source code.  The goal is to create a symbol described\n-   in DWARF using a DW_AT_linkage_name attribute, with a name\n-   which follows the C++ mangling.\n-\n-   In this particular case, we chose \"symada__cS\" which, if it were\n-   demangled, would translate to \"symada (char, signed)\".  */\n-struct wrapper mundane asm (\"symada__cS\") = {0x060287af};\n-\n-void\n-do_something (struct wrapper *w)\n-{\n-  w->a++;\n-}\n+extern void do_something_other_cu (void);\n \n int\n main (void)\n {\n-  do_something (&mundane);\n+  do_something_other_cu ();\n   return 0;\n }"
    },
    {
      "sha": "4551c8dcac2fc15bc90b4a8b01a1f38335f82681",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name.exp",
      "status": "modified",
      "additions": 33,
      "deletions": 5,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/13c3a74afb50b240dbacfd60f91414eae50279ad/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name.exp?ref=13c3a74afb50b240dbacfd60f91414eae50279ad",
      "patch": "@@ -17,27 +17,55 @@\n # gdb can correctly print arrays with indexes for each element of the\n # array.\n \n-standard_testfile .c\n+standard_testfile c-linkage-name.c c-linkage-name-2.c\n \n-if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {debug}] != \"\" } {\n+set sources \"${srcdir}/${subdir}/${srcfile} ${srcdir}/${subdir}/${srcfile2}\"\n+if { [gdb_compile \"${sources}\" \"${binfile}\" executable {debug}] != \"\" } {\n     untested \"failed to compile\"\n     return -1\n }\n \n clean_restart ${binfile}\n \n+# Verify that partial symtab expansion for $filename has state $readin\n+\n+proc verify_psymtab_expanded { filename readin } {\n+    set cmd \"maint info psymtab\"\n+    set test \"$cmd: $filename: $readin\"\n+    set re [multi_line \\\n+\t\t\"  \\{ psymtab \\[^\\r\\n\\]*$filename\\[^\\r\\n\\]*\" \\\n+\t\t\"    readin $readin\" \\\n+\t\t\".*\"]\n+\n+    gdb_test $cmd $re $test\n+}\n+\n+# Verify that partial symtab expansion has not taken place for\n+# c-linkage-name-2.c.\n+\n+verify_psymtab_expanded c-linkage-name-2.c no\n+\n # Try to print MUNDANE, but using its linkage name.\n \n gdb_test \"print symada__cS\" \\\n-         \" = {a = 100829103}\" \\\n+         \"'symada__cS' has unknown type; cast it to its declared type\" \\\n          \"print symada__cS before partial symtab expansion\"\n \n # Force the symbols to be expanded for the unit that contains\n # our symada__cS symbol by, e.g. inserting a breakpoint on one\n # of the founction also provided by the same using.\n \n-gdb_test \"break main\" \\\n-         \"Breakpoint $decimal at $hex: file .*$srcfile, line $decimal\\\\.\"\n+gdb_test \"break do_something_other_cu\" \\\n+         \"Breakpoint $decimal at $hex: file .*$srcfile2, line $decimal\\\\.\"\n+\n+# Verify that partial symtab expansion has taken place for\n+# c-linkage-name-2.c.\n+\n+verify_psymtab_expanded c-linkage-name-2.c yes\n+\n+# Flush the symbol cache to prevent the lookup to return the same as before.\n+\n+gdb_test \"maint flush-symbol-cache\"\n \n # Try to print MUNDANE using its linkage name again, after partial\n # symtab expansion."
    }
  ]
}