{
  "sha": "b623bbc9a5b18a1100837450b7806de220068ccc",
  "node_id": "C_kwDOANOeidoAKGI2MjNiYmM5YTViMThhMTEwMDgzNzQ1MGI3ODA2ZGUyMjAwNjhjY2M",
  "commit": {
    "author": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "committer": {
      "name": "John Baldwin",
      "email": "jhb@FreeBSD.org",
      "date": "2022-01-28T19:14:37Z"
    },
    "message": "regcache: Zero-extend small registers described by a register map.\n\nWhen registers are supplied via regcache_supply_register from a\nregister block described by a register map, registers may be stored in\nslots smaller than GDB's native register size (e.g. x86 segment\nregisters are 16 bits, but the GDB registers for those are 32-bits).\nregcache_collect_regset is careful to zero-extend slots larger than a\nregister size, but regcache_supply_regset just used\nregcache::raw_supply_part and did not initialize the upper bytes of a\nregister value.\n\ntrad_frame_set_reg_regmap assumes these semantics (zero-extending\nshort registers).  Upcoming patches also require these semantics for\nhandling x86 segment register values stored in 16-bit slots on\nFreeBSD.  Note that architecturally x86 segment registers are 16 bits,\nbut the x86 gdb architectures treat these registers as 32 bits.",
    "tree": {
      "sha": "8b94746b5789f82327160a098359ba69b2e453f1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8b94746b5789f82327160a098359ba69b2e453f1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b623bbc9a5b18a1100837450b7806de220068ccc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b623bbc9a5b18a1100837450b7806de220068ccc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b623bbc9a5b18a1100837450b7806de220068ccc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b623bbc9a5b18a1100837450b7806de220068ccc/comments",
  "author": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "bsdjhb",
    "id": 8976613,
    "node_id": "MDQ6VXNlcjg5NzY2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8976613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bsdjhb",
    "html_url": "https://github.com/bsdjhb",
    "followers_url": "https://api.github.com/users/bsdjhb/followers",
    "following_url": "https://api.github.com/users/bsdjhb/following{/other_user}",
    "gists_url": "https://api.github.com/users/bsdjhb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bsdjhb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bsdjhb/subscriptions",
    "organizations_url": "https://api.github.com/users/bsdjhb/orgs",
    "repos_url": "https://api.github.com/users/bsdjhb/repos",
    "events_url": "https://api.github.com/users/bsdjhb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bsdjhb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5046f3c8c0cf0a641f25cf0b3f6e3a6969f28dd8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5046f3c8c0cf0a641f25cf0b3f6e3a6969f28dd8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5046f3c8c0cf0a641f25cf0b3f6e3a6969f28dd8"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "00d7a10e2892a3f05b3526263f339242af21bdba",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b623bbc9a5b18a1100837450b7806de220068ccc/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b623bbc9a5b18a1100837450b7806de220068ccc/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=b623bbc9a5b18a1100837450b7806de220068ccc",
      "patch": "@@ -1164,7 +1164,12 @@ regcache::transfer_regset_register (struct regcache *out_regcache, int regnum,\n \tmemset (out_buf + offs + reg_size, 0, slot_size - reg_size);\n     }\n   else if (in_buf != nullptr)\n-    out_regcache->raw_supply_part (regnum, 0, reg_size, in_buf + offs);\n+    {\n+      /* Zero-extend the register value if the slot is smaller than the register.  */\n+      if (slot_size < register_size (gdbarch, regnum))\n+\tout_regcache->raw_supply_zeroed (regnum);\n+      out_regcache->raw_supply_part (regnum, 0, reg_size, in_buf + offs);\n+    }\n   else\n     {\n       /* Invalidate the register.  */"
    }
  ]
}