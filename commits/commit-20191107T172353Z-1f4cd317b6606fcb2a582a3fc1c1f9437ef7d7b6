{
  "sha": "1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWY0Y2QzMTdiNjYwNmZjYjJhNTgyYTNmYzFjMWY5NDM3ZWY3ZDdiNg==",
  "commit": {
    "author": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-11-07T17:22:45Z"
    },
    "committer": {
      "name": "Matthew Malcomson",
      "email": "matthew.malcomson@arm.com",
      "date": "2019-11-07T17:23:53Z"
    },
    "message": "[gas][aarch64] Add the v8.6 Data Gathering Hint mnemonic [10/X]\n\nHi,\n\nThis patch is part of a series that adds support for Armv8.6-A\nto binutils.\n\nIn this last patch, the new Data Gathering Hint mnemonic is introduced.\n\nCommitted on behalf of Mihail Ionescu.\n\ngas/ChangeLog:\n\n2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* testsuite/gas/aarch64/dgh.s: New test.\n\t* testsuite/gas/aarch64/dgh.d: New test.\n\nopcodes/ChangeLog:\n\n2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* opcodes/aarch64-tbl.h (V8_6_INSN): New macro for v8.6 instructions.\n\t(aarch64_opcode_table): Add data gathering hint mnemonic.\n\t* opcodes/aarch64-dis-2.c: Account for new instruction.\n\nIs it ok for trunk?\n\nRegards,\nMihail",
    "tree": {
      "sha": "49349c1113b4105ee9a03995c03a3fa9f73c31a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/49349c1113b4105ee9a03995c03a3fa9f73c31a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/comments",
  "author": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mmalcomson",
    "id": 57484298,
    "node_id": "MDQ6VXNlcjU3NDg0Mjk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mmalcomson",
    "html_url": "https://github.com/mmalcomson",
    "followers_url": "https://api.github.com/users/mmalcomson/followers",
    "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}",
    "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions",
    "organizations_url": "https://api.github.com/users/mmalcomson/orgs",
    "repos_url": "https://api.github.com/users/mmalcomson/repos",
    "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mmalcomson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "616ce08e1cc98c28c42bc2afed6b92df449c7b00",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/616ce08e1cc98c28c42bc2afed6b92df449c7b00",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/616ce08e1cc98c28c42bc2afed6b92df449c7b00"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 81,
    "deletions": 49
  },
  "files": [
    {
      "sha": "6376ce114ff7f56255703707e92f3c660879124d",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -1,3 +1,8 @@\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* testsuite/gas/aarch64/dgh.s: New test.\n+\t* testsuite/gas/aarch64/dgh.d: New test.\n+\n 2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* config/tc-arm.c (arm_ext_i8mm): New feature set."
    },
    {
      "sha": "6e196015a6f0acb470a137fb971c931ce3f445bf",
      "filename": "gas/testsuite/gas/aarch64/dgh.d",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/testsuite/gas/aarch64/dgh.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/testsuite/gas/aarch64/dgh.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/dgh.d?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -0,0 +1,11 @@\n+#name: V8.6 Data Gathering Hint\n+#as: -march=armv8.6-a\n+#objdump: -dr\n+\n+.* file format .*\n+\n+Disassembly of section \\.text:\n+\n+0000000000000000 <\\.text>:\n+ *[0-9a-f]*:\td50320df \thint\t#0x6\n+ *[0-9a-f]*:\td50320df \thint\t#0x6"
    },
    {
      "sha": "6470cd0937caf16a9b28ca5112a56ce68ac4e372",
      "filename": "gas/testsuite/gas/aarch64/dgh.s",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/testsuite/gas/aarch64/dgh.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/gas/testsuite/gas/aarch64/dgh.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/aarch64/dgh.s?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -0,0 +1,4 @@\n+# Test for the V8.6-a Data Gathering Hint instruction\n+\n+dgh\n+hint #6"
    },
    {
      "sha": "9bd41c01af24f2ddcd9136494c62a8841f0f8cd0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/aarch64-tbl.h (V8_6_INSN): New macro for v8.6 instructions.\n+\t(aarch64_opcode_table): Add data gathering hint mnemonic.\n+\t* opcodes/aarch64-dis-2.c: Account for new instruction.\n+\n 2019-11-07  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* arm-dis.c (neon_opcodes): Add i8mm SIMD instructions."
    },
    {
      "sha": "9ebaec7eaa1a3a2ae0339353f47a076a2652a82f",
      "filename": "opcodes/aarch64-dis-2.c",
      "status": "modified",
      "additions": 50,
      "deletions": 49,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/aarch64-dis-2.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/aarch64-dis-2.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-dis-2.c?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -4310,7 +4310,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  010001x01x1xxxxx000110xxxxxxxxxx\n                                                                  usdot.  */\n-                                                              return 2394;\n+                                                              return 2395;\n                                                             }\n                                                         }\n                                                     }\n@@ -4384,7 +4384,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  010001x01x1xxxxx000111xxxxxxxxxx\n                                                                  sudot.  */\n-                                                              return 2395;\n+                                                              return 2396;\n                                                             }\n                                                         }\n                                                     }\n@@ -7003,7 +7003,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                              10987654321098765432109876543210\n                                                              010001x0xx0xxxxx011110xxxxxxxxxx\n                                                              usdot.  */\n-                                                          return 2393;\n+                                                          return 2394;\n                                                         }\n                                                     }\n                                                 }\n@@ -8707,7 +8707,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  011001x0100xxx10101xxxxxxxxxxxxx\n                                                                  bfcvtnt.  */\n-                                                              return 2422;\n+                                                              return 2423;\n                                                             }\n                                                         }\n                                                       else\n@@ -8898,7 +8898,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          011001x0110xxxxx111xxxxxxxxxxxxx\n                                                          fmmla.  */\n-                                                      return 2397;\n+                                                      return 2398;\n                                                     }\n                                                   else\n                                                     {\n@@ -8961,15 +8961,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                  10987654321098765432109876543210\n                                                  101001x00x1xxxxxx00xxxxxxxxxxxxx\n                                                  ld1rob.  */\n-                                              return 2398;\n+                                              return 2399;\n                                             }\n                                           else\n                                             {\n                                               /* 33222222222211111111110000000000\n                                                  10987654321098765432109876543210\n                                                  101001x01x1xxxxxx00xxxxxxxxxxxxx\n                                                  ld1roh.  */\n-                                              return 2399;\n+                                              return 2400;\n                                             }\n                                         }\n                                       else\n@@ -9201,7 +9201,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          011001x0011xxxxx010xxxxxxxxxxxxx\n                                                          bfdot.  */\n-                                                      return 2419;\n+                                                      return 2420;\n                                                     }\n                                                   else\n                                                     {\n@@ -9222,15 +9222,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                              10987654321098765432109876543210\n                                                              011001x0111xxxxx010xx0xxxxxxxxxx\n                                                              bfmlalb.  */\n-                                                          return 2426;\n+                                                          return 2427;\n                                                         }\n                                                       else\n                                                         {\n                                                           /* 33222222222211111111110000000000\n                                                              10987654321098765432109876543210\n                                                              011001x0111xxxxx010xx1xxxxxxxxxx\n                                                              bfmlalt.  */\n-                                                          return 2425;\n+                                                          return 2426;\n                                                         }\n                                                     }\n                                                   else\n@@ -9285,7 +9285,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                  10987654321098765432109876543210\n                                                  x11001x0011xxxxx1x0xxxxxxxxxxxxx\n                                                  bfdot.  */\n-                                              return 2418;\n+                                              return 2419;\n                                             }\n                                           else\n                                             {\n@@ -9297,15 +9297,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          011001x0111xxxxx1x0xx0xxxxxxxxxx\n                                                          bfmlalb.  */\n-                                                      return 2424;\n+                                                      return 2425;\n                                                     }\n                                                   else\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n                                                          011001x0111xxxxx1x0xx1xxxxxxxxxx\n                                                          bfmlalt.  */\n-                                                      return 2423;\n+                                                      return 2424;\n                                                     }\n                                                 }\n                                               else\n@@ -9356,15 +9356,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                      10987654321098765432109876543210\n                                                      101001x00x1xxxxx001xxxxxxxxxxxxx\n                                                      ld1rob.  */\n-                                                  return 2402;\n+                                                  return 2403;\n                                                 }\n                                               else\n                                                 {\n                                                   /* 33222222222211111111110000000000\n                                                      10987654321098765432109876543210\n                                                      101001x01x1xxxxx001xxxxxxxxxxxxx\n                                                      ld1roh.  */\n-                                                  return 2403;\n+                                                  return 2404;\n                                                 }\n                                             }\n                                           else\n@@ -9723,7 +9723,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          011001x0101xxxxx111xxxxxxxxxxxxx\n                                                          fmmla.  */\n-                                                      return 2396;\n+                                                      return 2397;\n                                                     }\n                                                   else\n                                                     {\n@@ -9756,7 +9756,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          011001x0011xxxxx111xxxxxxxxxxxxx\n                                                          bfmmla.  */\n-                                                      return 2420;\n+                                                      return 2421;\n                                                     }\n                                                   else\n                                                     {\n@@ -9904,7 +9904,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  000001x1101xxxxx000x00xxxxxxxxxx\n                                                                  zip1.  */\n-                                                              return 2406;\n+                                                              return 2407;\n                                                             }\n                                                           else\n                                                             {\n@@ -9914,15 +9914,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                      10987654321098765432109876543210\n                                                                      000001x1101xxxxx000010xxxxxxxxxx\n                                                                      uzip1.  */\n-                                                                  return 2408;\n+                                                                  return 2409;\n                                                                 }\n                                                               else\n                                                                 {\n                                                                   /* 33222222222211111111110000000000\n                                                                      10987654321098765432109876543210\n                                                                      000001x1101xxxxx000110xxxxxxxxxx\n                                                                      trn1.  */\n-                                                                  return 2410;\n+                                                                  return 2411;\n                                                                 }\n                                                             }\n                                                         }\n@@ -9934,7 +9934,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  000001x1101xxxxx000x01xxxxxxxxxx\n                                                                  zip2.  */\n-                                                              return 2407;\n+                                                              return 2408;\n                                                             }\n                                                           else\n                                                             {\n@@ -9944,15 +9944,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                      10987654321098765432109876543210\n                                                                      000001x1101xxxxx000011xxxxxxxxxx\n                                                                      uzip2.  */\n-                                                                  return 2409;\n+                                                                  return 2410;\n                                                                 }\n                                                               else\n                                                                 {\n                                                                   /* 33222222222211111111110000000000\n                                                                      10987654321098765432109876543210\n                                                                      000001x1101xxxxx000111xxxxxxxxxx\n                                                                      trn2.  */\n-                                                                  return 2411;\n+                                                                  return 2412;\n                                                                 }\n                                                             }\n                                                         }\n@@ -11000,15 +11000,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                      10987654321098765432109876543210\n                                                                      010001x1000xxxxx100110xxxxxxxxxx\n                                                                      smmla.  */\n-                                                                  return 2390;\n+                                                                  return 2391;\n                                                                 }\n                                                               else\n                                                                 {\n                                                                   /* 33222222222211111111110000000000\n                                                                      10987654321098765432109876543210\n                                                                      010001x1100xxxxx100110xxxxxxxxxx\n                                                                      usmmla.  */\n-                                                                  return 2392;\n+                                                                  return 2393;\n                                                                 }\n                                                             }\n                                                           else\n@@ -11017,7 +11017,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                  10987654321098765432109876543210\n                                                                  010001x1x10xxxxx100110xxxxxxxxxx\n                                                                  ummla.  */\n-                                                              return 2391;\n+                                                              return 2392;\n                                                             }\n                                                         }\n                                                     }\n@@ -12513,15 +12513,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                      10987654321098765432109876543210\n                                                      101001x10x1xxxxx000xxxxxxxxxxxxx\n                                                      ld1row.  */\n-                                                  return 2400;\n+                                                  return 2401;\n                                                 }\n                                               else\n                                                 {\n                                                   /* 33222222222211111111110000000000\n                                                      10987654321098765432109876543210\n                                                      101001x11x1xxxxx000xxxxxxxxxxxxx\n                                                      ld1rod.  */\n-                                                  return 2401;\n+                                                  return 2402;\n                                                 }\n                                             }\n                                         }\n@@ -12895,15 +12895,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                      10987654321098765432109876543210\n                                                      101001x10x1xxxxx001xxxxxxxxxxxxx\n                                                      ld1row.  */\n-                                                  return 2404;\n+                                                  return 2405;\n                                                 }\n                                               else\n                                                 {\n                                                   /* 33222222222211111111110000000000\n                                                      10987654321098765432109876543210\n                                                      101001x11x1xxxxx001xxxxxxxxxxxxx\n                                                      ld1rod.  */\n-                                                  return 2405;\n+                                                  return 2406;\n                                                 }\n                                             }\n                                         }\n@@ -14337,7 +14337,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                          10987654321098765432109876543210\n                                                                          011001x110001x10101xxxxxxxxxxxxx\n                                                                          bfcvt.  */\n-                                                                      return 2421;\n+                                                                      return 2422;\n                                                                     }\n                                                                 }\n                                                               else\n@@ -16406,7 +16406,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          0x001110xx0xxxxx1x1001xxxxxxxxxx\n                                                          smmla.  */\n-                                                      return 2412;\n+                                                      return 2413;\n                                                     }\n                                                 }\n                                             }\n@@ -16513,7 +16513,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          0x001110xx0xxxxx1x1011xxxxxxxxxx\n                                                          usmmla.  */\n-                                                      return 2414;\n+                                                      return 2415;\n                                                     }\n                                                 }\n                                             }\n@@ -16546,7 +16546,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          0x001110xx0xxxxx1x0111xxxxxxxxxx\n                                                          usdot.  */\n-                                                      return 2415;\n+                                                      return 2416;\n                                                     }\n                                                 }\n                                               else\n@@ -16885,7 +16885,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                      10987654321098765432109876543210\n                                                      xx101110xx0xxxxx101x01xxxxxxxxxx\n                                                      ummla.  */\n-                                                  return 2413;\n+                                                  return 2414;\n                                                 }\n                                               else\n                                                 {\n@@ -16904,7 +16904,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                      10987654321098765432109876543210\n                                                      xx101110xx0xxxxx1x1011xxxxxxxxxx\n                                                      bfmmla.  */\n-                                                  return 2429;\n+                                                  return 2430;\n                                                 }\n                                               else\n                                                 {\n@@ -16914,7 +16914,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          xx1011100x0xxxxx1x1111xxxxxxxxxx\n                                                          bfdot.  */\n-                                                      return 2427;\n+                                                      return 2428;\n                                                     }\n                                                   else\n                                                     {\n@@ -16924,15 +16924,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                              10987654321098765432109876543210\n                                                              x01011101x0xxxxx1x1111xxxxxxxxxx\n                                                              bfmlalb.  */\n-                                                          return 2434;\n+                                                          return 2435;\n                                                         }\n                                                       else\n                                                         {\n                                                           /* 33222222222211111111110000000000\n                                                              10987654321098765432109876543210\n                                                              x11011101x0xxxxx1x1111xxxxxxxxxx\n                                                              bfmlalt.  */\n-                                                          return 2433;\n+                                                          return 2434;\n                                                         }\n                                                     }\n                                                 }\n@@ -17516,15 +17516,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                                          10987654321098765432109876543210\n                                                                          000011101x1xxxx1011010xxxxxxxxxx\n                                                                          bfcvtn.  */\n-                                                                      return 2430;\n+                                                                      return 2431;\n                                                                     }\n                                                                   else\n                                                                     {\n                                                                       /* 33222222222211111111110000000000\n                                                                          10987654321098765432109876543210\n                                                                          010011101x1xxxx1011010xxxxxxxxxx\n                                                                          bfcvtn2.  */\n-                                                                      return 2431;\n+                                                                      return 2432;\n                                                                     }\n                                                                 }\n                                                             }\n@@ -22626,15 +22626,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          xx00111100xxxxxx1111x0xxxxxxxxxx\n                                                          sudot.  */\n-                                                      return 2417;\n+                                                      return 2418;\n                                                     }\n                                                   else\n                                                     {\n                                                       /* 33222222222211111111110000000000\n                                                          10987654321098765432109876543210\n                                                          xx00111110xxxxxx1111x0xxxxxxxxxx\n                                                          usdot.  */\n-                                                      return 2416;\n+                                                      return 2417;\n                                                     }\n                                                 }\n                                               else\n@@ -22645,7 +22645,7 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                          10987654321098765432109876543210\n                                                          xx00111101xxxxxx1111x0xxxxxxxxxx\n                                                          bfdot.  */\n-                                                      return 2428;\n+                                                      return 2429;\n                                                     }\n                                                   else\n                                                     {\n@@ -22655,15 +22655,15 @@ aarch64_opcode_lookup_1 (uint32_t word)\n                                                              10987654321098765432109876543210\n                                                              x000111111xxxxxx1111x0xxxxxxxxxx\n                                                              bfmlalb.  */\n-                                                          return 2436;\n+                                                          return 2437;\n                                                         }\n                                                       else\n                                                         {\n                                                           /* 33222222222211111111110000000000\n                                                              10987654321098765432109876543210\n                                                              x100111111xxxxxx1111x0xxxxxxxxxx\n                                                              bfmlalt.  */\n-                                                          return 2435;\n+                                                          return 2436;\n                                                         }\n                                                     }\n                                                 }\n@@ -23204,7 +23204,8 @@ aarch64_find_next_opcode (const aarch64_opcode *opcode)\n     case 1215: value = 1216; break;\t/* sb --> sys.  */\n     case 1216: value = 1224; break;\t/* sys --> msr.  */\n     case 1224: value = 2373; break;\t/* msr --> cfinv.  */\n-    case 2373: return NULL;\t\t/* cfinv --> NULL.  */\n+    case 2373: value = 2390; break;\t/* cfinv --> dgh.  */\n+    case 2390: return NULL;\t\t/* dgh --> NULL.  */\n     case 1188: value = 1190; break;\t/* tstart --> ttest.  */\n     case 1190: value = 1225; break;\t/* ttest --> sysl.  */\n     case 1225: value = 1226; break;\t/* sysl --> mrs.  */\n@@ -23293,8 +23294,8 @@ aarch64_find_next_opcode (const aarch64_opcode *opcode)\n     case 823: return NULL;\t\t/* fsqrt --> NULL.  */\n     case 831: value = 832; break;\t/* frintz --> frintz.  */\n     case 832: return NULL;\t\t/* frintz --> NULL.  */\n-    case 824: value = 2432; break;\t/* fcvt --> bfcvt.  */\n-    case 2432: return NULL;\t\t/* bfcvt --> NULL.  */\n+    case 824: value = 2433; break;\t/* fcvt --> bfcvt.  */\n+    case 2433: return NULL;\t\t/* bfcvt --> NULL.  */\n     case 833: value = 834; break;\t/* frinta --> frinta.  */\n     case 834: return NULL;\t\t/* frinta --> NULL.  */\n     case 835: value = 836; break;\t/* frintx --> frintx.  */"
    },
    {
      "sha": "dc7661a9689acfa547dd041315ca5f61904f45a2",
      "filename": "opcodes/aarch64-tbl.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/aarch64-tbl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6/opcodes/aarch64-tbl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-tbl.h?ref=1f4cd317b6606fcb2a582a3fc1c1f9437ef7d7b6",
      "patch": "@@ -2557,6 +2557,8 @@ static const aarch64_feature_set aarch64_feature_f64mm_sve =\n #define SVE2BITPERM_INSN(NAME,OPCODE,MASK,CLASS,OP,OPS,QUALS,FLAGS,TIED) \\\n   { NAME, OPCODE, MASK, CLASS, OP, SVE2_BITPERM, OPS, QUALS, \\\n     FLAGS | F_STRICT, 0, TIED, NULL }\n+#define V8_6_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n+  { NAME, OPCODE, MASK, CLASS, 0, ARMV8_6, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define BFLOAT16_SVE_INSN(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS) \\\n   { NAME, OPCODE, MASK, CLASS, 0, BFLOAT16_SVE, OPS, QUALS, FLAGS, 0, 0, NULL }\n #define BFLOAT16_SVE_INSNC(NAME,OPCODE,MASK,CLASS,OPS,QUALS,FLAGS, CONSTRAINTS, TIED) \\\n@@ -5072,6 +5074,9 @@ struct aarch64_opcode aarch64_opcode_table[] =\n   V8_4_INSN (\"stlur\",    0xd9000000, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_OFFSET), QL_STLX, 0),\n   V8_4_INSN (\"ldapur\",   0xd9400000, 0xffe00c00, ldst_unscaled, OP2 (Rt, ADDR_OFFSET), QL_STLX, 0),\n \n+  /* V8.6 instructions */\n+  V8_6_INSN(\"dgh\",  0xd50320df, 0xffffffff, aarch64_misc, OP0 (), {}, 0),\n+\n   /* Matrix Multiply instructions.  */\n   INT8MATMUL_SVE_INSNC (\"smmla\",  0x45009800, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_SBB, 0, C_SCAN_MOVPRFX, 0),\n   INT8MATMUL_SVE_INSNC (\"ummla\",  0x45c09800, 0xffe0fc00, sve_misc, OP3 (SVE_Zd, SVE_Zn, SVE_Zm_16), OP_SVE_SBB, 0, C_SCAN_MOVPRFX, 0),"
    }
  ]
}