{
  "sha": "437061996d8d25ba902903e15952cfc14257b839",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDM3MDYxOTk2ZDhkMjViYTkwMjkwM2UxNTk1MmNmYzE0MjU3YjgzOQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T19:25:02Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:24Z"
    },
    "message": "libctf, types: allow ctf_type_reference of dynamic slices\n\nOne spot was missed when we rejigged ctf_update into ctf_serialize and\nallowed all operations on dynamic containers: ctf_type_reference of\nslices.  A dynamic slice's vlen state is stored in the dtu_slice member,\nso fetch it from there.\n\nlibctf/\n\t* ctf-types.c (ctf_type_reference): Add support for dynamic slices.",
    "tree": {
      "sha": "fb385ed0087bb5f53706387960c5ea828e23a826",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fb385ed0087bb5f53706387960c5ea828e23a826"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/437061996d8d25ba902903e15952cfc14257b839",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/437061996d8d25ba902903e15952cfc14257b839",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/437061996d8d25ba902903e15952cfc14257b839",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/437061996d8d25ba902903e15952cfc14257b839/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9943fa3a7320158e209a0339a4022a8165e9d5a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9943fa3a7320158e209a0339a4022a8165e9d5a6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9943fa3a7320158e209a0339a4022a8165e9d5a6"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 16,
    "deletions": 3
  },
  "files": [
    {
      "sha": "8dd6651e07a79726229edec17182124822c9a431",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/437061996d8d25ba902903e15952cfc14257b839/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/437061996d8d25ba902903e15952cfc14257b839/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=437061996d8d25ba902903e15952cfc14257b839",
      "patch": "@@ -1,3 +1,7 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_reference): Add support for dynamic slices.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-create.c (ctf_serialize): Add cast."
    },
    {
      "sha": "9c10905ea11aca624dcdd2acce5cbb6844917dc1",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/437061996d8d25ba902903e15952cfc14257b839/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/437061996d8d25ba902903e15952cfc14257b839/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=437061996d8d25ba902903e15952cfc14257b839",
      "patch": "@@ -680,10 +680,19 @@ ctf_type_reference (ctf_file_t *fp, ctf_id_t type)\n       /* Slices store their type in an unusual place.  */\n     case CTF_K_SLICE:\n       {\n+\tctf_dtdef_t *dtd;\n \tconst ctf_slice_t *sp;\n-\tssize_t increment;\n-\t(void) ctf_get_ctt_size (fp, tp, NULL, &increment);\n-\tsp = (const ctf_slice_t *) ((uintptr_t) tp + increment);\n+\n+\tif ((dtd = ctf_dynamic_type (ofp, type)) == NULL)\n+\t  {\n+\t    ssize_t increment;\n+\n+\t    (void) ctf_get_ctt_size (fp, tp, NULL, &increment);\n+\t    sp = (const ctf_slice_t *) ((uintptr_t) tp + increment);\n+\t  }\n+\telse\n+\t  sp = &dtd->dtd_u.dtu_slice;\n+\n \treturn sp->cts_type;\n       }\n     default:"
    }
  ]
}