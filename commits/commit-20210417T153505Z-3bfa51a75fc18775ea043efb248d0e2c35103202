{
  "sha": "3bfa51a75fc18775ea043efb248d0e2c35103202",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2JmYTUxYTc1ZmMxODc3NWVhMDQzZWZiMjQ4ZDBlMmMzNTEwMzIwMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-17T15:35:05Z"
    },
    "message": "Add 'domain' parameter to expand_symtabs_matching\n\nCurrently, expand_symtabs_matching only accepts a search_domain\nparameter.  However, lookup_symbol uses a domain_enum instead, and the\ntwo, confusingly, do quite different things -- one cannot emulate the\nother.  So, this patch adds a domain_enum parameter to\nexpand_symtabs_matching, with UNDEF_DOMAIN used as a wildcard.\n\nThis is another step toward replacing lookup_symbol with\nexpand_symtabs_matching.\n\ngdb/ChangeLog\n2021-04-17  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (global_symbol_searcher::expand_symtabs): Update.\n\t* symmisc.c (maintenance_expand_symtabs): Update.\n\t* symfile.c (expand_symtabs_matching): Update.\n\t* symfile-debug.c (objfile::expand_symtabs_matching): Add 'domain'\n\tparameter.\n\t* quick-symbol.h (struct quick_symbol_functions)\n\t<expand_symtabs_matching>: Add 'domain' parameter.\n\t* psymtab.c (recursively_search_psymtabs)\n\t(psymbol_functions::expand_symtabs_matching): Add 'domain'\n\tparameter.\n\t* psympriv.h (struct psymbol_functions) <expand_symtabs_matching>:\n\tAdd 'domain' parameter.\n\t* objfiles.h (struct objfile) <expand_symtabs_matching>: Add\n\t'domain' parameter.\n\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n\t* dwarf2/read.c (struct dwarf2_gdb_index)\n\t<expand_symtabs_matching>: Add 'domain' parameter.\n\t(struct dwarf2_debug_names_index) <expand_symtabs_matching>: Add\n\t'domain' parameter.\n\t(dw2_expand_symtabs_matching)\n\t(dwarf2_gdb_index::expand_symtabs_matching)\n\t(dw2_debug_names_iterator)\n\t(dwarf2_debug_names_index::expand_symtabs_matching): Add 'domain'\n\tparameter.",
    "tree": {
      "sha": "25e27a3c0ccf85f992657dde16c25277c163f0ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/25e27a3c0ccf85f992657dde16c25277c163f0ac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3bfa51a75fc18775ea043efb248d0e2c35103202",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3bfa51a75fc18775ea043efb248d0e2c35103202",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3bfa51a75fc18775ea043efb248d0e2c35103202",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3bfa51a75fc18775ea043efb248d0e2c35103202/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03a8ea51c31d8f27ec717ddb1ff68f5f5d0732ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03a8ea51c31d8f27ec717ddb1ff68f5f5d0732ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/03a8ea51c31d8f27ec717ddb1ff68f5f5d0732ab"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 66,
    "deletions": 18
  },
  "files": [
    {
      "sha": "31af446c5b611a8558380666f5942f4ee6398825",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -1,3 +1,30 @@\n+2021-04-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (global_symbol_searcher::expand_symtabs): Update.\n+\t* symmisc.c (maintenance_expand_symtabs): Update.\n+\t* symfile.c (expand_symtabs_matching): Update.\n+\t* symfile-debug.c (objfile::expand_symtabs_matching): Add 'domain'\n+\tparameter.\n+\t* quick-symbol.h (struct quick_symbol_functions)\n+\t<expand_symtabs_matching>: Add 'domain' parameter.\n+\t* psymtab.c (recursively_search_psymtabs)\n+\t(psymbol_functions::expand_symtabs_matching): Add 'domain'\n+\tparameter.\n+\t* psympriv.h (struct psymbol_functions) <expand_symtabs_matching>:\n+\tAdd 'domain' parameter.\n+\t* objfiles.h (struct objfile) <expand_symtabs_matching>: Add\n+\t'domain' parameter.\n+\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n+\t* dwarf2/read.c (struct dwarf2_gdb_index)\n+\t<expand_symtabs_matching>: Add 'domain' parameter.\n+\t(struct dwarf2_debug_names_index) <expand_symtabs_matching>: Add\n+\t'domain' parameter.\n+\t(dw2_expand_symtabs_matching)\n+\t(dwarf2_gdb_index::expand_symtabs_matching)\n+\t(dw2_debug_names_iterator)\n+\t(dwarf2_debug_names_index::expand_symtabs_matching): Add 'domain'\n+\tparameter.\n+\n 2021-04-17  Tom Tromey  <tom@tromey.com>\n \n \t* symtab.c (global_symbol_searcher::expand_symtabs)"
    },
    {
      "sha": "43d276f47360447bfe36bae4a10ecfa462a52ec4",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -2290,6 +2290,7 @@ struct dwarf2_gdb_index : public dwarf2_base_index_functions\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind) override;\n };\n \n@@ -2320,6 +2321,7 @@ struct dwarf2_debug_names_index : public dwarf2_base_index_functions\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind) override;\n };\n \n@@ -4878,6 +4880,7 @@ dwarf2_gdb_index::expand_symtabs_matching\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind)\n {\n   dwarf2_per_objfile *per_objfile = get_dwarf2_per_objfile (objfile);\n@@ -5398,8 +5401,10 @@ class dw2_debug_names_iterator\n \n   dw2_debug_names_iterator (const mapped_debug_names &map,\n \t\t\t    search_domain search, uint32_t namei,\n-\t\t\t    dwarf2_per_objfile *per_objfile)\n+\t\t\t    dwarf2_per_objfile *per_objfile,\n+\t\t\t    domain_enum domain = UNDEF_DOMAIN)\n     : m_map (map),\n+      m_domain (domain),\n       m_search (search),\n       m_addr (find_vec_in_debug_names (map, namei, per_objfile)),\n       m_per_objfile (per_objfile)\n@@ -5950,6 +5955,7 @@ dwarf2_debug_names_index::expand_symtabs_matching\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    block_search_flags search_flags,\n+   domain_enum domain,\n    enum search_domain kind)\n {\n   dwarf2_per_objfile *per_objfile = get_dwarf2_per_objfile (objfile);\n@@ -5983,7 +5989,7 @@ dwarf2_debug_names_index::expand_symtabs_matching\n     {\n       /* The name was matched, now expand corresponding CUs that were\n \t marked.  */\n-      dw2_debug_names_iterator iter (map, kind, namei, per_objfile);\n+      dw2_debug_names_iterator iter (map, kind, namei, per_objfile, domain);\n \n       struct dwarf2_per_cu_data *per_cu;\n       while ((per_cu = iter.next ()) != NULL)"
    },
    {
      "sha": "03a11fda214c842838978b449ea21302bb1c0555",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -1172,6 +1172,7 @@ iterate_over_all_matching_symtabs\n \t  objfile->expand_symtabs_matching (NULL, &lookup_name, NULL, NULL,\n \t\t\t\t\t    (SEARCH_GLOBAL_BLOCK\n \t\t\t\t\t     | SEARCH_STATIC_BLOCK),\n+\t\t\t\t\t    UNDEF_DOMAIN,\n \t\t\t\t\t    search_domain);\n \n \t  for (compunit_symtab *cu : objfile->compunits ())"
    },
    {
      "sha": "ec64b1c3a9838e388481d9e4a1c82711c9cbde81",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -609,6 +609,7 @@ struct objfile\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind);\n \n   /* See quick_symbol_functions.  */"
    },
    {
      "sha": "25f3fe500fa2c7dc8705ff19093a6fec00c3f3ab",
      "filename": "gdb/psympriv.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/psympriv.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/psympriv.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psympriv.h?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -548,6 +548,7 @@ struct psymbol_functions : public quick_symbol_functions\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind) override;\n \n   struct compunit_symtab *find_pc_sect_compunit_symtab"
    },
    {
      "sha": "c766107504d13eb049a4b221c1d228cf8bacf2af",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 20,
      "deletions": 14,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -1208,7 +1208,8 @@ recursively_search_psymtabs\n   (struct partial_symtab *ps,\n    struct objfile *objfile,\n    block_search_flags search_flags,\n-   enum search_domain domain,\n+   domain_enum domain,\n+   enum search_domain search,\n    const lookup_name_info &lookup_name,\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> sym_matcher)\n {\n@@ -1230,7 +1231,7 @@ recursively_search_psymtabs\n \tcontinue;\n \n       r = recursively_search_psymtabs (ps->dependencies[i],\n-\t\t\t\t       objfile, search_flags, domain,\n+\t\t\t\t       objfile, search_flags, domain, search,\n \t\t\t\t       lookup_name, sym_matcher);\n       if (r != 0)\n \t{\n@@ -1278,16 +1279,19 @@ recursively_search_psymtabs\n \t{\n \t  QUIT;\n \n-\t  if ((domain == ALL_DOMAIN\n-\t       || (domain == MODULES_DOMAIN\n-\t\t   && (*psym)->domain == MODULE_DOMAIN)\n-\t       || (domain == VARIABLES_DOMAIN\n-\t\t   && (*psym)->aclass != LOC_TYPEDEF\n-\t\t   && (*psym)->aclass != LOC_BLOCK)\n-\t       || (domain == FUNCTIONS_DOMAIN\n-\t\t   && (*psym)->aclass == LOC_BLOCK)\n-\t       || (domain == TYPES_DOMAIN\n-\t\t   && (*psym)->aclass == LOC_TYPEDEF))\n+\t  if ((domain == UNDEF_DOMAIN\n+\t       || symbol_matches_domain ((*psym)->ginfo.language (),\n+\t\t\t\t\t (*psym)->domain, domain))\n+\t      && (search == ALL_DOMAIN\n+\t\t  || (search == MODULES_DOMAIN\n+\t\t      && (*psym)->domain == MODULE_DOMAIN)\n+\t\t  || (search == VARIABLES_DOMAIN\n+\t\t      && (*psym)->aclass != LOC_TYPEDEF\n+\t\t      && (*psym)->aclass != LOC_BLOCK)\n+\t\t  || (search == FUNCTIONS_DOMAIN\n+\t\t      && (*psym)->aclass == LOC_BLOCK)\n+\t\t  || (search == TYPES_DOMAIN\n+\t\t      && (*psym)->aclass == LOC_TYPEDEF))\n \t      && psymbol_name_matches (*psym, lookup_name)\n \t      && (sym_matcher == NULL\n \t\t  || sym_matcher ((*psym)->ginfo.search_name ())))\n@@ -1315,7 +1319,8 @@ psymbol_functions::expand_symtabs_matching\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    block_search_flags search_flags,\n-   enum search_domain domain)\n+   domain_enum domain,\n+   enum search_domain search)\n {\n   /* Clear the search flags.  */\n   for (partial_symtab *ps : require_partial_symbols (objfile))\n@@ -1353,7 +1358,8 @@ psymbol_functions::expand_symtabs_matching\n \t}\n \n       if ((symbol_matcher == NULL && lookup_name == NULL)\n-\t  || recursively_search_psymtabs (ps, objfile, search_flags, domain,\n+\t  || recursively_search_psymtabs (ps, objfile, search_flags,\n+\t\t\t\t\t  domain, search,\n \t\t\t\t\t  *psym_lookup_name,\n \t\t\t\t\t  symbol_matcher))\n \t{"
    },
    {
      "sha": "4c0ef73547278a0a97049097af86f46cf3c77861",
      "filename": "gdb/quick-symbol.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/quick-symbol.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/quick-symbol.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/quick-symbol.h?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -202,7 +202,8 @@ struct quick_symbol_functions\n \n      Otherwise, individual symbols are considered.\n \n-     If KIND does not match, the symbol is skipped.\n+     If DOMAIN or KIND do not match, the symbol is skipped.\n+     If DOMAIN is UNDEF_DOMAIN, that is treated as a wildcard.\n \n      If the symbol name does not match LOOKUP_NAME, the symbol is skipped.\n \n@@ -220,6 +221,7 @@ struct quick_symbol_functions\n      gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n      gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n      block_search_flags search_flags,\n+     domain_enum domain,\n      enum search_domain kind) = 0;\n \n   /* Return the comp unit from OBJFILE that contains PC and"
    },
    {
      "sha": "577b0fcd86c576c79b31db50811ed4014317c199",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -272,6 +272,7 @@ objfile::expand_symtabs_matching\n    gdb::function_view<expand_symtabs_symbol_matcher_ftype> symbol_matcher,\n    gdb::function_view<expand_symtabs_exp_notify_ftype> expansion_notify,\n    block_search_flags search_flags,\n+   domain_enum domain,\n    enum search_domain kind)\n {\n   if (debug_symfile)\n@@ -286,7 +287,7 @@ objfile::expand_symtabs_matching\n   for (const auto &iter : qf)\n     if (!iter->expand_symtabs_matching (this, file_matcher, lookup_name,\n \t\t\t\t\tsymbol_matcher, expansion_notify,\n-\t\t\t\t\tsearch_flags, kind))\n+\t\t\t\t\tsearch_flags, domain, kind))\n       return false;\n   return true;\n }"
    },
    {
      "sha": "7dfe1ee1ca0153e0252591f29eb0c9b41afb72d9",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -3731,6 +3731,7 @@ expand_symtabs_matching\n \t\t\t\t\t   symbol_matcher,\n \t\t\t\t\t   expansion_notify,\n \t\t\t\t\t   search_flags,\n+\t\t\t\t\t   UNDEF_DOMAIN,\n \t\t\t\t\t   kind))\n       return false;\n   return true;"
    },
    {
      "sha": "d992c67163554f16cee3a0a71c9b034868448454",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -939,6 +939,7 @@ maintenance_expand_symtabs (const char *args, int from_tty)\n \t NULL,\n \t NULL,\n \t SEARCH_GLOBAL_BLOCK | SEARCH_STATIC_BLOCK,\n+\t UNDEF_DOMAIN,\n \t ALL_DOMAIN);\n }\n \f"
    },
    {
      "sha": "274ddfd1dae26763050d048c9ecbebb6d8046b09",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3bfa51a75fc18775ea043efb248d0e2c35103202/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=3bfa51a75fc18775ea043efb248d0e2c35103202",
      "patch": "@@ -4548,6 +4548,7 @@ global_symbol_searcher::expand_symtabs\n      },\n      NULL,\n      SEARCH_GLOBAL_BLOCK | SEARCH_STATIC_BLOCK,\n+     UNDEF_DOMAIN,\n      kind);\n \n   /* Here, we search through the minimal symbol tables for functions and"
    }
  ]
}