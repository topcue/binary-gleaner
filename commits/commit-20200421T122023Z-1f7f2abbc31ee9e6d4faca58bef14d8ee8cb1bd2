{
  "sha": "1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWY3ZjJhYmJjMzFlZTllNmQ0ZmFjYTU4YmVmMTRkOGVlOGNiMWJkMg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:20:11Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-04-21T12:20:23Z"
    },
    "message": "alpha: Warn DT_TEXTREL with -M\n\nThis fixes:\n\nFAIL: DT_TEXTREL map file warning\n\n\t* elf64-alpha.c (alpha_elf_reloc_entry): Replace reltext with\n\tsec.\n\t(elf64_alpha_check_relocs): Set sec instead of reltext.  Warn\n\tDT_TEXTREL with -M.\n\t(elf64_alpha_calc_dynrel_sizes): Warn DT_TEXTREL with -M.",
    "tree": {
      "sha": "44da9a8479c288ed3df24c23fb2a1ce24f57fd7a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/44da9a8479c288ed3df24c23fb2a1ce24f57fd7a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e04f33c09f85b936d544c78b1fa6b1134dfbcecd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e04f33c09f85b936d544c78b1fa6b1134dfbcecd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e04f33c09f85b936d544c78b1fa6b1134dfbcecd"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 30,
    "deletions": 9
  },
  "files": [
    {
      "sha": "a15a0f377577d33419fd422053fd08494951dd7b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
      "patch": "@@ -1,3 +1,11 @@\n+2020-04-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf64-alpha.c (alpha_elf_reloc_entry): Replace reltext with\n+\tsec.\n+\t(elf64_alpha_check_relocs): Set sec instead of reltext.  Warn\n+\tDT_TEXTREL with -M.\n+\t(elf64_alpha_calc_dynrel_sizes): Warn DT_TEXTREL with -M.\n+\n 2020-04-21  Nick Clifton  <nickc@redhat.com>\n \n \t* po/sr.po: Updated Serbian translation."
    },
    {
      "sha": "9f79d8e3fba8f73abd99442f8eef861368185795",
      "filename": "bfd/elf64-alpha.c",
      "status": "modified",
      "additions": 22,
      "deletions": 9,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2/bfd/elf64-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2/bfd/elf64-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-alpha.c?ref=1f7f2abbc31ee9e6d4faca58bef14d8ee8cb1bd2",
      "patch": "@@ -144,14 +144,14 @@ struct alpha_elf_reloc_entry\n   /* Which .reloc section? */\n   asection *srel;\n \n-  /* What kind of relocation? */\n-  unsigned int rtype;\n-\n-  /* Is this against read-only section? */\n-  unsigned int reltext : 1;\n+  /* Which section this relocation is against? */\n+  asection *sec;\n \n   /* How many did we find?  */\n   unsigned long count;\n+\n+  /* What kind of relocation? */\n+  unsigned int rtype;\n };\n \n struct alpha_elf_link_hash_entry\n@@ -1998,9 +1998,9 @@ elf64_alpha_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t\t    return FALSE;\n \n \t\t  rent->srel = sreloc;\n+\t\t  rent->sec = sec;\n \t\t  rent->rtype = r_type;\n \t\t  rent->count = 1;\n-\t\t  rent->reltext = (sec->flags & SEC_READONLY) != 0;\n \n \t\t  rent->next = h->reloc_entries;\n \t\t  h->reloc_entries = rent;\n@@ -2014,7 +2014,13 @@ elf64_alpha_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t\t loaded into memory, we need a RELATIVE reloc.  */\n \t      sreloc->size += sizeof (Elf64_External_Rela);\n \t      if (sec->flags & SEC_READONLY)\n-\t\tinfo->flags |= DF_TEXTREL;\n+\t\t{\n+\t\t  info->flags |= DF_TEXTREL;\n+\t\t  info->callbacks->minfo\n+\t\t    (_(\"%pB: dynamic relocation against `%pT' in \"\n+\t\t       \"read-only section `%pA'\\n\"),\n+\t\t     sec->owner, h->root.root.root.string, sec);\n+\t\t}\n \t    }\n \t}\n     }\n@@ -2699,10 +2705,17 @@ elf64_alpha_calc_dynrel_sizes (struct alpha_elf_link_hash_entry *h,\n \t\t\t\t\t\t bfd_link_pie (info));\n       if (entries)\n \t{\n+\t  asection *sec = relent->sec;\n \t  relent->srel->size +=\n \t    entries * sizeof (Elf64_External_Rela) * relent->count;\n-\t  if (relent->reltext)\n-\t    info->flags |= DT_TEXTREL;\n+\t  if ((sec->flags & SEC_READONLY) != 0)\n+\t    {\n+\t      info->flags |= DT_TEXTREL;\n+\t      info->callbacks->minfo\n+\t\t(_(\"%pB: dynamic relocation against `%pT' in \"\n+\t\t   \"read-only section `%pA'\\n\"),\n+\t\t sec->owner, h->root.root.root.string, sec);\n+\t    }\n \t}\n     }\n "
    }
  ]
}