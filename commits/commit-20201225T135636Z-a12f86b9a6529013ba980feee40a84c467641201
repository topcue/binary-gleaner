{
  "sha": "a12f86b9a6529013ba980feee40a84c467641201",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTEyZjg2YjlhNjUyOTAxM2JhOTgwZmVlZTQwYTg0YzQ2NzY0MTIwMQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-25T13:56:36Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-25T13:56:36Z"
    },
    "message": "gas: Update 80387 floating point 's' suffix\n\nUpdate 80387 floating point 's' suffix to read:\n\n  * Integer constructors are '.word', '.long' or '.int', and '.quad'\n     for the 16-, 32-, and 64-bit integer formats.  The corresponding\n     instruction mnemonic suffixes are 's' (short), 'l' (long), and 'q'\n     (quad).\n\ninstead of 's' (single).\n\n\tPR gas/27106\n\t* doc/c-i386.texi: Update 80387 floating point 's' suffix",
    "tree": {
      "sha": "97b1085ebdeed8de06c8f4995cba179ffcebaecc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/97b1085ebdeed8de06c8f4995cba179ffcebaecc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a12f86b9a6529013ba980feee40a84c467641201",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a12f86b9a6529013ba980feee40a84c467641201",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a12f86b9a6529013ba980feee40a84c467641201",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a12f86b9a6529013ba980feee40a84c467641201/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e142715391f5e6eced555e164b066b7636ce4d37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e142715391f5e6eced555e164b066b7636ce4d37",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e142715391f5e6eced555e164b066b7636ce4d37"
    }
  ],
  "stats": {
    "total": 2,
    "additions": 1,
    "deletions": 1
  },
  "files": [
    {
      "sha": "056f7c0489d48c77ba2eac4913d4db9173115962",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a12f86b9a6529013ba980feee40a84c467641201/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a12f86b9a6529013ba980feee40a84c467641201/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=a12f86b9a6529013ba980feee40a84c467641201",
      "patch": "@@ -1335,7 +1335,7 @@ top) and @samp{fstpt} (store 80-bit real and pop stack) instructions.\n @item\n Integer constructors are @samp{.word}, @samp{.long} or @samp{.int}, and\n @samp{.quad} for the 16-, 32-, and 64-bit integer formats.  The\n-corresponding instruction mnemonic suffixes are @samp{s} (single),\n+corresponding instruction mnemonic suffixes are @samp{s} (short),\n @samp{l} (long), and @samp{q} (quad).  As with the 80-bit real format,\n the 64-bit @samp{q} format is only present in the @samp{fildq} (load\n quad integer to stack top) and @samp{fistpq} (store quad integer and pop"
    }
  ]
}