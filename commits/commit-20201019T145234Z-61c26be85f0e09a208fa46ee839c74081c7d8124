{
  "sha": "61c26be85f0e09a208fa46ee839c74081c7d8124",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjFjMjZiZTg1ZjBlMDlhMjA4ZmE0NmVlODM5Yzc0MDgxYzdkODEyNA==",
  "commit": {
    "author": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-10-14T08:44:36Z"
    },
    "committer": {
      "name": "Mihails Strasuns",
      "email": "mihails.strasuns@intel.com",
      "date": "2020-10-19T14:52:34Z"
    },
    "message": "gdb: get jiter objfile from a bound minsym\n\nThis fixes a regression introduced by the following commit:\n\nfe053b9e853 gdb/jit: pass the jiter objfile as an argument to jit_event_handler\n\nIn the refactoring `handle_jit_event` function was changed to pass a matching\nobjfile pointer to the `jit_event_handler` explicitly, rather using internal\nstorage:\n\n```\n--- a/gdb/breakpoint.c\n+++ b/gdb/breakpoint.c\n@@ -5448,8 +5448,9 @@ handle_jit_event (void)\n\n   frame = get_current_frame ();\n   gdbarch = get_frame_arch (frame);\n+  objfile *jiter = symbol_objfile (get_frame_function (frame));\n\n-  jit_event_handler (gdbarch);\n+  jit_event_handler (gdbarch, jiter);\n```\n\nThis was needed to add support for multiple jiters.  However it has also\nintroduced a regression, because `get_frame_function (frame)` here may\nreturn `nullptr`, resulting in a crash.\n\nA more resilient way would be to use an approach mirroring\n`jit_breakpoint_re_set` - to find a minimal symbol matching the\nbreakpoint location and use its object file.  We know that this\nbreakpoint event comes from a breakpoint set by `jit_breakpoint_re_set`,\nthus using the reverse approach should be reliable enough.\n\ngdb/Changelog:\n2020-10-14  Mihails Strasuns  <mihails.strasuns@intel.com>\n\n\t* breakpoint.c (handle_jit_event): Add an argument, change how\n\t`jit_event_handler` is called.",
    "tree": {
      "sha": "0c322cce6849ea19ed3ba531aa35debcec2995ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0c322cce6849ea19ed3ba531aa35debcec2995ed"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/61c26be85f0e09a208fa46ee839c74081c7d8124",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61c26be85f0e09a208fa46ee839c74081c7d8124",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/61c26be85f0e09a208fa46ee839c74081c7d8124",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61c26be85f0e09a208fa46ee839c74081c7d8124/comments",
  "author": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "mihails-strasuns-intel",
    "id": 55576710,
    "node_id": "MDQ6VXNlcjU1NTc2NzEw",
    "avatar_url": "https://avatars.githubusercontent.com/u/55576710?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mihails-strasuns-intel",
    "html_url": "https://github.com/mihails-strasuns-intel",
    "followers_url": "https://api.github.com/users/mihails-strasuns-intel/followers",
    "following_url": "https://api.github.com/users/mihails-strasuns-intel/following{/other_user}",
    "gists_url": "https://api.github.com/users/mihails-strasuns-intel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mihails-strasuns-intel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mihails-strasuns-intel/subscriptions",
    "organizations_url": "https://api.github.com/users/mihails-strasuns-intel/orgs",
    "repos_url": "https://api.github.com/users/mihails-strasuns-intel/repos",
    "events_url": "https://api.github.com/users/mihails-strasuns-intel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mihails-strasuns-intel/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0f03783c8e9f14d02749081815949493bb28d4e3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0f03783c8e9f14d02749081815949493bb28d4e3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0f03783c8e9f14d02749081815949493bb28d4e3"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 16,
    "deletions": 8
  },
  "files": [
    {
      "sha": "0a81dacc9e02957ace4682f3755236335216fe32",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c26be85f0e09a208fa46ee839c74081c7d8124/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c26be85f0e09a208fa46ee839c74081c7d8124/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=61c26be85f0e09a208fa46ee839c74081c7d8124",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-14  Mihails Strasuns  <mihails.strasuns@intel.com>\n+\n+\t* breakpoint.c (handle_jit_event): Add an argument, change how\n+\t`jit_event_handler` is called.\n+\n 2020-10-17  Tom Tromey  <tom@tromey.com>\n \n \t* xcoffread.c (xcoff_end_psymtab): Use partial_symtab::empty."
    },
    {
      "sha": "631bee540b4ce85399ed21d3e6ad7bd8b3ec2325",
      "filename": "gdb/breakpoint.c",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/61c26be85f0e09a208fa46ee839c74081c7d8124/gdb/breakpoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/61c26be85f0e09a208fa46ee839c74081c7d8124/gdb/breakpoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/breakpoint.c?ref=61c26be85f0e09a208fa46ee839c74081c7d8124",
      "patch": "@@ -5441,9 +5441,8 @@ bpstat_stop_status (const address_space *aspace,\n }\n \n static void\n-handle_jit_event (void)\n+handle_jit_event (CORE_ADDR address)\n {\n-  struct frame_info *frame;\n   struct gdbarch *gdbarch;\n \n   infrun_debug_printf (\"handling bp_jit_event\");\n@@ -5452,11 +5451,15 @@ handle_jit_event (void)\n      breakpoint_re_set.  */\n   target_terminal::ours_for_output ();\n \n-  frame = get_current_frame ();\n-  gdbarch = get_frame_arch (frame);\n-  objfile *jiter = symbol_objfile (get_frame_function (frame));\n-\n-  jit_event_handler (gdbarch, jiter);\n+  gdbarch = get_frame_arch (get_current_frame ());\n+  /* This event is caused by a breakpoint set in `jit_breakpoint_re_set`,\n+     thus it is expected that its objectfile can be found through\n+     minimal symbol lookup.  If it doesn't work (and assert fails), it\n+     most likely means that `jit_breakpoint_re_set` was changes and this\n+     function needs to be updated too.  */\n+  bound_minimal_symbol jit_bp_sym = lookup_minimal_symbol_by_pc (address);\n+  gdb_assert (jit_bp_sym.objfile != nullptr);\n+  jit_event_handler (gdbarch, jit_bp_sym.objfile);\n \n   target_terminal::inferior ();\n }\n@@ -5657,7 +5660,7 @@ bpstat_run_callbacks (bpstat bs_head)\n       switch (b->type)\n \t{\n \tcase bp_jit_event:\n-\t  handle_jit_event ();\n+\t  handle_jit_event (bs->bp_location_at->address);\n \t  break;\n \tcase bp_gnu_ifunc_resolver:\n \t  gnu_ifunc_resolver_stop (b);"
    }
  ]
}