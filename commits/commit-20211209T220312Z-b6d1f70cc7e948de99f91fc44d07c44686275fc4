{
  "sha": "b6d1f70cc7e948de99f91fc44d07c44686275fc4",
  "node_id": "C_kwDOANOeidoAKGI2ZDFmNzBjYzdlOTQ4ZGU5OWY5MWZjNDRkMDdjNDQ2ODYyNzVmYzQ",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-08T09:34:25Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-12-09T22:03:12Z"
    },
    "message": "Set sh_link for reloc sections created as normal sections\n\nbinutils-all/strip-13 and binutils-all/strip-14 tests create\nSHT_REL/SHT_RELA sections by hand.  These don't have sh_link set to\nthe .symtab section as they should, leading to readelf warnings if you\nhappen to be looking at the object files.\n\n\t* elf.c (assign_section_numbers): Formatting.  Set sh_link for\n\treloc sections created as normal sections in relocatable\n\tobjects.",
    "tree": {
      "sha": "18a575389f6374734af296155a876c832d38efce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/18a575389f6374734af296155a876c832d38efce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6d1f70cc7e948de99f91fc44d07c44686275fc4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6d1f70cc7e948de99f91fc44d07c44686275fc4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6d1f70cc7e948de99f91fc44d07c44686275fc4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6d1f70cc7e948de99f91fc44d07c44686275fc4/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe72c32765e1190c8a17d309fc3a7e1882d6a430",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe72c32765e1190c8a17d309fc3a7e1882d6a430",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe72c32765e1190c8a17d309fc3a7e1882d6a430"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 16,
    "deletions": 10
  },
  "files": [
    {
      "sha": "98f47da0797489689d2a0346d4b1cdcc1e72e71a",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 16,
      "deletions": 10,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6d1f70cc7e948de99f91fc44d07c44686275fc4/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6d1f70cc7e948de99f91fc44d07c44686275fc4/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=b6d1f70cc7e948de99f91fc44d07c44686275fc4",
      "patch": "@@ -3779,9 +3779,9 @@ assign_section_numbers (bfd *abfd, struct bfd_link_info *link_info)\n     }\n \n   need_symtab = (bfd_get_symcount (abfd) > 0\n-\t\t|| (link_info == NULL\n-\t\t    && ((abfd->flags & (EXEC_P | DYNAMIC | HAS_RELOC))\n-\t\t\t== HAS_RELOC)));\n+\t\t || (link_info == NULL\n+\t\t     && ((abfd->flags & (EXEC_P | DYNAMIC | HAS_RELOC))\n+\t\t\t == HAS_RELOC)));\n   if (need_symtab)\n     {\n       elf_onesymtab (abfd) = section_number++;\n@@ -3935,11 +3935,17 @@ assign_section_numbers (bfd *abfd, struct bfd_link_info *link_info)\n \t     section.  sh_link is the section index of the symbol\n \t     table.  sh_info is the section index of the section to\n \t     which the relocation entries apply.  We assume that an\n-\t     allocated reloc section uses the dynamic symbol table.\n-\t     FIXME: How can we be sure?  */\n-\t  s = bfd_get_section_by_name (abfd, \".dynsym\");\n-\t  if (s != NULL)\n-\t    d->this_hdr.sh_link = elf_section_data (s)->this_idx;\n+\t     allocated reloc section uses the dynamic symbol table\n+\t     if there is one.  Otherwise we guess the normal symbol\n+\t     table.  FIXME: How can we be sure?  */\n+\t  if (d->this_hdr.sh_link == 0 && (sec->flags & SEC_ALLOC) != 0)\n+\t    {\n+\t      s = bfd_get_section_by_name (abfd, \".dynsym\");\n+\t      if (s != NULL)\n+\t\td->this_hdr.sh_link = elf_section_data (s)->this_idx;\n+\t    }\n+\t  if (d->this_hdr.sh_link == 0)\n+\t    d->this_hdr.sh_link = elf_onesymtab (abfd);\n \n \t  s = elf_get_reloc_section (sec);\n \t  if (s != NULL)\n@@ -3994,8 +4000,8 @@ assign_section_numbers (bfd *abfd, struct bfd_link_info *link_info)\n \t  /* sh_link is the section header index of the prelink library\n \t     list used for the dynamic entries, or the symbol table, or\n \t     the version strings.  */\n-\t  s = bfd_get_section_by_name (abfd, (sec->flags & SEC_ALLOC)\n-\t\t\t\t\t     ? \".dynstr\" : \".gnu.libstr\");\n+\t  s = bfd_get_section_by_name (abfd, ((sec->flags & SEC_ALLOC)\n+\t\t\t\t\t      ? \".dynstr\" : \".gnu.libstr\"));\n \t  if (s != NULL)\n \t    d->this_hdr.sh_link = elf_section_data (s)->this_idx;\n \t  break;"
    }
  ]
}