{
  "sha": "314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
  "node_id": "C_kwDOANOeidoAKDMxNGVjN2FlZWIxYjJlNjhmMGQ4ZmI5OTkwZjIzMzVmNDc1YTZlMzM",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-06T10:18:14Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-06T10:45:49Z"
    },
    "message": "Modernise yyerror\n\nNewer versions of bison emit a prototype for yyerror\n\tvoid yyerror (const char *);\nThis clashes with some of our old code that declares yyerror to return\nan int.  Fix that in most cases by modernizing yyerror.  bfin-parse.y\nuses the return value all over the place, so for there disable\ngeneration of the prototype as specified by posix.\n\nbinutils/\n\t* arparse.y (yyerror): Return void.\n\t* dlltool.c (yyerror): Likewise.\n\t* dlltool.h (yyerror): Likewise.\n\t* sysinfo.y (yyerror): Likewise.\n\t* windmc.h (yyerror): Likewise.\n\t* mclex.c (mc_error): Extract from ..\n\t(yyerror): ..here, both now returning void.\ngas/\n\t* config/bfin-parse.y (yyerror): Define.\n\t(yyerror): Make static.\n\t* itbl-parse.y (yyerror): Return void.\nld/\n\t* deffilep.y (def_error): Return void.",
    "tree": {
      "sha": "55e741cd404603b278fabe83cf3cb9f04eb4feb4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/55e741cd404603b278fabe83cf3cb9f04eb4feb4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e8f81980cee2d21605e60414a025f8b795147d9f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8f81980cee2d21605e60414a025f8b795147d9f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e8f81980cee2d21605e60414a025f8b795147d9f"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 26,
    "deletions": 24
  },
  "files": [
    {
      "sha": "7ea5e7ff0db6274a3670d9e794f2b1f47cc540e7",
      "filename": "binutils/arparse.y",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/arparse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/arparse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/arparse.y?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -31,7 +31,7 @@\n #include \"arsup.h\"\n extern int verbose;\n extern int yylex (void);\n-static int yyerror (const char *);\n+static void yyerror (const char *);\n %}\n \n %union {\n@@ -193,11 +193,10 @@ verbose_command:\n \n %%\n \n-static int\n+static void\n yyerror (const char *x ATTRIBUTE_UNUSED)\n {\n   extern int linenumber;\n \n   printf (_(\"Syntax error in archive script, line %d\\n\"), linenumber + 1);\n-  return 0;\n }"
    },
    {
      "sha": "4f337f78d24e67acf93fcbaeecb97bc2ac7e65e9",
      "filename": "binutils/dlltool.c",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/dlltool.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/dlltool.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dlltool.c?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -990,13 +990,11 @@ static int d_nforwards = 0;\t/* Number of forwarded exports.  */\n static int d_is_dll;\n static int d_is_exe;\n \n-int\n+void\n yyerror (const char * err ATTRIBUTE_UNUSED)\n {\n   /* xgettext:c-format */\n   non_fatal (_(\"Syntax error in def file %s:%d\"), def_file, linenumber);\n-\n-  return 0;\n }\n \n void"
    },
    {
      "sha": "74e9b817161682bb5dc3f7ae07b54f7b510ea736",
      "filename": "binutils/dlltool.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/dlltool.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/dlltool.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dlltool.h?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -31,7 +31,7 @@ extern void def_section (const char *, int);\n extern void def_stacksize (int, int);\n extern void def_version (int, int);\n extern int  yyparse (void);\n-extern int  yyerror (const char *);\n+extern void yyerror (const char *);\n extern int  yylex (void);\n \n extern int yydebug;"
    },
    {
      "sha": "670e88652e9c5a971c87f4f3ad52ee24deb48fad",
      "filename": "binutils/mclex.c",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/mclex.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/mclex.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/mclex.c?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -103,14 +103,19 @@ mc_fatal (const char *s, ...)\n }\n \n \n-int\n-yyerror (const char *s, ...)\n+static void\n+mc_error (const char *s, ...)\n {\n   va_list argp;\n   va_start (argp, s);\n   show_msg (\"parser\", s, argp);\n   va_end (argp);\n-  return 1;\n+}\n+\n+void\n+yyerror (const char *s)\n+{\n+  mc_error (s);\n }\n \n static unichar *\n@@ -451,7 +456,7 @@ yylex (void)\n \tyylval.ustr = get_diff (input_stream_pos, start_token);\n \treturn MCIDENT;\n       }\n-    yyerror (\"illegal character 0x%x.\", ch);\n+    mc_error (\"illegal character 0x%x.\", ch);\n   }\n   return -1;\n }"
    },
    {
      "sha": "7aca49ef7f8b9ea7a65405465bee512afc19aaa4",
      "filename": "binutils/sysinfo.y",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/sysinfo.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/sysinfo.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/sysinfo.y?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -33,7 +33,7 @@ static int rdepth;\n static char *names[] = {\" \",\"[n]\",\"[n][m]\"};\n static char *pnames[]= {\"\",\"*\",\"**\"};\n \n-static int yyerror (char *s);\n+static void yyerror (const char *s);\n extern int yylex (void);\n %}\n \n@@ -434,9 +434,8 @@ if (writecode == 'd')\n return 0;\n }\n \n-static int\n-yyerror (char *s)\n+static void\n+yyerror (const char *s)\n {\n   fprintf(stderr, \"%s\\n\" , s);\n-  return 0;\n }"
    },
    {
      "sha": "e3ef2e314cedcfff7502e564602ef8bde19e2dab",
      "filename": "binutils/windmc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/windmc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/binutils/windmc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/windmc.h?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -80,7 +80,7 @@ mc_node_lang *mc_add_node_lang (mc_node *, const mc_keyword *, rc_uint_type);\n mc_node *mc_add_node (void);\n \n /* Standard yacc/flex stuff.  */\n-int yyerror (const char *, ...);\n+void yyerror (const char *);\n int yylex (void);\n int yyparse (void);\n "
    },
    {
      "sha": "5b93d4a66116679f359242a4e9987fcde957caee",
      "filename": "gas/config/bfin-parse.y",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/gas/config/bfin-parse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/gas/config/bfin-parse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/bfin-parse.y?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -25,6 +25,10 @@\n #include \"elf/common.h\"\n #include \"elf/bfin.h\"\n \n+/* This file uses an old-style yyerror returning int.  Disable\n+   generation of a modern prototype for yyerror.  */\n+#define yyerror yyerror\n+\n #define DSP32ALU(aopcde, HL, dst1, dst0, src0, src1, s, x, aop) \\\n \tbfin_gen_dsp32alu (HL, aopcde, aop, s, x, dst0, dst1, src0, src1)\n \n@@ -160,7 +164,6 @@ static Expr_Node *unary  (Expr_Op_Type, Expr_Node *);\n static void notethat (const char *, ...);\n \n extern char *yytext;\n-int yyerror (const char *);\n \n /* Used to set SRCx fields to all 1s as described in the PRM.  */\n static Register reg7 = {REG_R7, 0};\n@@ -177,7 +180,7 @@ void error (const char *format, ...)\n     as_bad (\"%s\", buffer);\n }\n \n-int\n+static int\n yyerror (const char *msg)\n {\n   if (msg[0] == '\\0')"
    },
    {
      "sha": "7f56c73cfc45851ce0bd2c51f45dc63095ffa747",
      "filename": "gas/itbl-parse.y",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/gas/itbl-parse.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/gas/itbl-parse.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/itbl-parse.y?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -274,7 +274,7 @@ FIXME! hex is ambiguous with any digit\n \n static int sbit, ebit;\n static struct itbl_entry *insn=0;\n-static int yyerror (const char *);\n+static void yyerror (const char *);\n \n %}\n \n@@ -449,9 +449,8 @@ value:\n \t;\n %%\n \n-static int\n+static void\n yyerror (const char *msg)\n {\n   printf (\"line %d: %s\\n\", insntbl_line, msg);\n-  return 0;\n }"
    },
    {
      "sha": "6bed6437fe2a63836ffd3cdde4c26ec23cdc4326",
      "filename": "ld/deffilep.y",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/ld/deffilep.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33/ld/deffilep.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/deffilep.y?ref=314ec7aeeb1b2e68f0d8fb9990f2335f475a6e33",
      "patch": "@@ -102,7 +102,7 @@ static void def_version (int, int);\n static void def_directive (char *);\n static void def_aligncomm (char *str, int align);\n static int def_parse (void);\n-static int def_error (const char *);\n+static void def_error (const char *);\n static int def_lex (void);\n \n static int lex_forced_token = 0;\n@@ -1261,12 +1261,11 @@ def_aligncomm (char *str, int align)\n     }\n }\n \n-static int\n+static void\n def_error (const char *err)\n {\n   einfo (\"%P: %s:%d: %s\\n\",\n \t def_filename ? def_filename : \"<unknown-file>\", linenumber, err);\n-  return 0;\n }\n \n "
    }
  ]
}