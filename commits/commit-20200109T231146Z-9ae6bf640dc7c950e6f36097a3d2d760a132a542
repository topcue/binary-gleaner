{
  "sha": "9ae6bf640dc7c950e6f36097a3d2d760a132a542",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWFlNmJmNjQwZGM3Yzk1MGU2ZjM2MDk3YTNkMmQ3NjBhMTMyYTU0Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-22T23:52:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-01-09T23:11:46Z"
    },
    "message": "gdb: Fix scrolling in TUI\n\nHannes Domani pointed out that my previous patch to fix the \"list\"\ncommand in the TUI instead broke vertical scrolling.  While looking at\nthis, I found that do_scroll_vertical calls print_source_lines, which\nseems like a very roundabout way to change the source window.  This\npatch removes this oddity and fixes the bug at the same time.\n\nI've added a new test case.  This is somewhat tricky, because the\nobvious approach of sending a dummy command after the scroll did not\nwork -- due to how the TUI works, sennding a command causes the scroll\nto take effect.\n\ngdb/ChangeLog\n2019-12-22  Tom Tromey  <tom@tromey.com>\n\n\tPR tui/18932:\n\t* tui/tui-source.c (tui_source_window::do_scroll_vertical): Call\n\tupdate_source_window, not print_source_lines.\n\ngdb/testsuite/ChangeLog\n2019-12-22  Tom Tromey  <tom@tromey.com>\n\n\tPR tui/18932:\n\t* lib/tuiterm.exp (Term::wait_for): Rename from _accept.  Return a\n\tmeangingful value.\n\t(Term::command, Term::resize): Update.\n\t* gdb.tui/basic.exp: Add scrolling test.\n\nChange-Id: I9636a7c8a8cade37431c6165ee996a9d556ef1c8",
    "tree": {
      "sha": "56debc86e8389a30050d484139d13ddb6024240c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/56debc86e8389a30050d484139d13ddb6024240c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9ae6bf640dc7c950e6f36097a3d2d760a132a542",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ae6bf640dc7c950e6f36097a3d2d760a132a542",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9ae6bf640dc7c950e6f36097a3d2d760a132a542",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9ae6bf640dc7c950e6f36097a3d2d760a132a542/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b2efe70cf34e2f3ada8d0def69e53f27a6b71578",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b2efe70cf34e2f3ada8d0def69e53f27a6b71578",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b2efe70cf34e2f3ada8d0def69e53f27a6b71578"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 50,
    "deletions": 16
  },
  "files": [
    {
      "sha": "4c789119cec5576c54f3d3123d6cccbe6e6a7f7e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9ae6bf640dc7c950e6f36097a3d2d760a132a542",
      "patch": "@@ -1,3 +1,9 @@\n+2020-01-09  Tom Tromey  <tom@tromey.com>\n+\n+\tPR tui/18932:\n+\t* tui/tui-source.c (tui_source_window::do_scroll_vertical): Call\n+\tupdate_source_window, not print_source_lines.\n+\n 2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* tui/tui.c (tui_enable): Register tui hooks after calling"
    },
    {
      "sha": "16f3b5503df25157539ac6a8ef898388f5b69e14",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9ae6bf640dc7c950e6f36097a3d2d760a132a542",
      "patch": "@@ -1,3 +1,11 @@\n+2020-01-09  Tom Tromey  <tom@tromey.com>\n+\n+\tPR tui/18932:\n+\t* lib/tuiterm.exp (Term::wait_for): Rename from _accept.  Return a\n+\tmeangingful value.\n+\t(Term::command, Term::resize): Update.\n+\t* gdb.tui/basic.exp: Add scrolling test.\n+\n 2020-01-09  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.tui/tui-layout-asm.exp: New file."
    },
    {
      "sha": "be822f8a9151baa0fa228c7914b0643083cb6108",
      "filename": "gdb/testsuite/gdb.tui/basic.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/gdb.tui/basic.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/gdb.tui/basic.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/basic.exp?ref=9ae6bf640dc7c950e6f36097a3d2d760a132a542",
      "patch": "@@ -35,6 +35,19 @@ gdb_assert {![string match \"No Source Available\" $text]} \\\n Term::command \"list main\"\n Term::check_contents \"list main\" \"21 *return 0\"\n \n+# Get the first source line.\n+set line [Term::get_line 1]\n+# Send an up arrow.\n+send_gdb \"\\033\\[A\"\n+# Wait for a redraw and check that the first line changed.\n+if {[Term::wait_for [string_to_regexp $line]] \\\n+\t&& [Term::get_line 1] != $line\\\n+\t&& [Term::get_line 2] == $line} {\n+    pass \"scroll up\"\n+} else {\n+    fail \"scroll up\"\n+}\n+\n Term::check_box \"source box\" 0 0 80 15\n \n Term::command \"layout asm\""
    },
    {
      "sha": "7adaf1b71ab8a8ee4da1f7217ef01d1324cd7988",
      "filename": "gdb/testsuite/lib/tuiterm.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/lib/tuiterm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/testsuite/lib/tuiterm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/tuiterm.exp?ref=9ae6bf640dc7c950e6f36097a3d2d760a132a542",
      "patch": "@@ -388,8 +388,10 @@ namespace eval Term {\n \t_clear_lines 0 $_rows\n     }\n \n-    # Accept some output from gdb and update the screen.\n-    proc _accept {wait_for} {\n+    # Accept some output from gdb and update the screen.  WAIT_FOR is\n+    # a regexp matching the line to wait for.  Return 0 on timeout, 1\n+    # on success.\n+    proc wait_for {wait_for} {\n \tglobal expect_out\n \tglobal gdb_prompt\n \tvariable _cur_x\n@@ -424,7 +426,7 @@ namespace eval Term {\n \t\ttimeout {\n \t\t    # Assume a timeout means we somehow missed the\n \t\t    # expected result, and carry on.\n-\t\t    return\n+\t\t    return 0\n \t\t}\n \t    }\n \n@@ -443,6 +445,8 @@ namespace eval Term {\n \t\tset wait_for $prompt_wait_for\n \t    }\n \t}\n+\n+\treturn 1\n     }\n \n     # Like ::clean_restart, but ensures that gdb starts in an\n@@ -490,7 +494,7 @@ namespace eval Term {\n     # be supplied by this function.\n     proc command {cmd} {\n \tsend_gdb \"$cmd\\n\"\n-\t_accept [string_to_regexp $cmd]\n+\twait_for [string_to_regexp $cmd]\n     }\n \n     # Return the text of screen line N, without attributes.  Lines are\n@@ -682,14 +686,14 @@ namespace eval Term {\n \t# Due to the strange column resizing behavior, and because we\n \t# don't care about this intermediate resize, we don't check\n \t# the size here.\n-\t_accept \"@@ resize done $_resize_count\"\n+\twait_for \"@@ resize done $_resize_count\"\n \tincr _resize_count\n \t# Somehow the number of columns transmitted to gdb is one less\n \t# than what we request from expect.  We hide this weird\n \t# details from the caller.\n \t_do_resize $_rows $cols\n \tstty columns [expr {$_cols + 1}] < $gdb_spawn_name\n-\t_accept \"@@ resize done $_resize_count, size = ${_cols}x${rows}\"\n+\twait_for \"@@ resize done $_resize_count, size = ${_cols}x${rows}\"\n \tincr _resize_count\n     }\n }"
    },
    {
      "sha": "13f2dc7cfe177904495e88fe95daad9ee92d0a0b",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9ae6bf640dc7c950e6f36097a3d2d760a132a542/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=9ae6bf640dc7c950e6f36097a3d2d760a132a542",
      "patch": "@@ -136,26 +136,29 @@ tui_source_window::do_scroll_vertical (int num_to_scroll)\n {\n   if (!content.empty ())\n     {\n-      struct tui_line_or_address l;\n       struct symtab *s;\n       struct symtab_and_line cursal = get_current_source_symtab_and_line ();\n+      struct gdbarch *arch = gdbarch;\n \n       if (cursal.symtab == NULL)\n-\ts = find_pc_line_symtab (get_frame_pc (get_selected_frame (NULL)));\n+\t{\n+\t  struct frame_info *fi = get_selected_frame (NULL);\n+\t  s = find_pc_line_symtab (get_frame_pc (fi));\n+\t  arch = get_frame_arch (fi);\n+\t}\n       else\n \ts = cursal.symtab;\n \n-      l.loa = LOA_LINE;\n-      l.u.line_no = start_line_or_addr.u.line_no\n-\t+ num_to_scroll;\n+      int line_no = start_line_or_addr.u.line_no + num_to_scroll;\n       const std::vector<off_t> *offsets;\n       if (g_source_cache.get_line_charpos (s, &offsets)\n-\t  && l.u.line_no > offsets->size ())\n-\tl.u.line_no = start_line_or_addr.u.line_no;\n-      if (l.u.line_no <= 0)\n-\tl.u.line_no = 1;\n+\t  && line_no > offsets->size ())\n+\tline_no = start_line_or_addr.u.line_no;\n+      if (line_no <= 0)\n+\tline_no = 1;\n \n-      print_source_lines (s, l.u.line_no, l.u.line_no + 1, 0);\n+      cursal.line = line_no;\n+      update_source_window (arch, cursal);\n     }\n }\n "
    }
  ]
}