{
  "sha": "874ef0386fe438d654f0c3c230d4a9d0c4db9213",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODc0ZWYwMzg2ZmU0MzhkNjU0ZjBjM2MyMzBkNGE5ZDBjNGRiOTIxMw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-07T13:27:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-16T12:43:49Z"
    },
    "message": "ld: Allow symbols from PROVIDE to be use in MEMORY regions\n\nI wanted to write a linker script like this:\n\n  PROVIDE(mem_origin = 0x1000);\n  PROVIDE(mem_length = 0x1000);\n\n  MEMORY\n  {\n    REGION : ORIGIN = mem_origin, LENGTH = mem_length\n  }\n\n  ....\n\nThen when I link using this script I can optionally supply:\n\n  --defsym=mem_origin=..... --defsym=mem_length=....\n\nto override the defaults.\n\nAnd though passing `--defsym' does work, if I remove the use of\n`--defsym' and just rely on the defaults I get an error:\n\n  ld-new: invalid origin for memory region REGION\n\nInterestingly, if I make the above error non-fatal and dump a linker\nmap file I see that (a) REGION has origin 0x0, and length 0xffff...,\nand (b) the symbol from the PROVIDE is provided.\n\nAn examination of ldlang.c:lang_process shows us what the issue is,\nthe origin and length of all memory regions are set as a result of a\nsingle call to lang_do_memory_regions, this call is done after calling\nopen_input_bfds.\n\nDuring the open_input_bfds call provide statements can be converted to\nprovided statements if we know that the assigned symbol is needed, but\nfor symbols that are only used in the memory regions we are unaware\nthat we need these symbols.\n\nWhat I propose in this patch is to make two calls to\nlang_do_memory_regions, in the first call we process the expressions\nfor the origin and length fields of each region, however, errors,\nespecially undefined symbols, will be ignored.  The origin and length\nvalues are not updated.  However, by evaluating the expressions any\nsymbols we need will be added to the symbol table.\n\nNow when we call open_input_bfds, when we process the provide\nstatements, we will see that the assigned symbol is needed add its new\nvalue to the symbol table.\n\nFinally we reach the original call to lang_do_memory_regions, in\nthis (now second) call we again process the expressions, and this time\nupdate the origin and length values.  Any errors encountered now are\nreported to the user.\n\nld/ChangeLog:\n\n\t* ldlang.c (lang_process): Add extra call to\n\tlang_do_memory_regions, and pass parameter.\n\t(lang_do_memory_regions): Add parameter, only define origin and\n\tlength when requested.  Reindent.\n\t* testsuite/ld-scripts/provide-10.d: New file.\n\t* testsuite/ld-scripts/provide-10.map: New file.\n\t* testsuite/ld-scripts/provide-11.d: New file.\n\t* testsuite/ld-scripts/provide-11.map: New file.\n\t* testsuite/ld-scripts/provide-12.d: New file.\n\t* testsuite/ld-scripts/provide-12.map: New file.\n\t* testsuite/ld-scripts/provide-9.d: New file.\n\t* testsuite/ld-scripts/provide-9.map: New file.\n\t* testsuite/ld-scripts/provide-9.t: New file.",
    "tree": {
      "sha": "d60d334d383bd1a1476da0341ce543583417fb74",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d60d334d383bd1a1476da0341ce543583417fb74"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/874ef0386fe438d654f0c3c230d4a9d0c4db9213",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/874ef0386fe438d654f0c3c230d4a9d0c4db9213",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/874ef0386fe438d654f0c3c230d4a9d0c4db9213",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/874ef0386fe438d654f0c3c230d4a9d0c4db9213/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "54874444da47cab42de1d0b22e7009e7ca3eb6f2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/54874444da47cab42de1d0b22e7009e7ca3eb6f2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/54874444da47cab42de1d0b22e7009e7ca3eb6f2"
    }
  ],
  "stats": {
    "total": 138,
    "additions": 118,
    "deletions": 20
  },
  "files": [
    {
      "sha": "a7869c759f0463ab1d708890451ea55af419fd53",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -1,3 +1,19 @@\n+2020-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ldlang.c (lang_process): Add extra call to\n+\tlang_do_memory_regions, and pass parameter.\n+\t(lang_do_memory_regions): Add parameter, only define origin and\n+\tlength when requested.  Reindent.\n+\t* testsuite/ld-scripts/provide-10.d: New file.\n+\t* testsuite/ld-scripts/provide-10.map: New file.\n+\t* testsuite/ld-scripts/provide-11.d: New file.\n+\t* testsuite/ld-scripts/provide-11.map: New file.\n+\t* testsuite/ld-scripts/provide-12.d: New file.\n+\t* testsuite/ld-scripts/provide-12.map: New file.\n+\t* testsuite/ld-scripts/provide-9.d: New file.\n+\t* testsuite/ld-scripts/provide-9.map: New file.\n+\t* testsuite/ld-scripts/provide-9.t: New file.\n+\n 2020-10-16  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ld.texi (Options): Extend the description of --defsym."
    },
    {
      "sha": "2073ac09ce4320ddccd657726cf209aa90b82af4",
      "filename": "ld/ldlang.c",
      "status": "modified",
      "additions": 41,
      "deletions": 20,
      "changes": 61,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/ldlang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/ldlang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldlang.c?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -98,7 +98,7 @@ static void lang_record_phdrs (void);\n static void lang_do_version_exports_section (void);\n static void lang_finalize_version_expr_head\n   (struct bfd_elf_version_expr_head *);\n-static void lang_do_memory_regions (void);\n+static void lang_do_memory_regions (bfd_boolean);\n \n /* Exported variables.  */\n const char *output_target;\n@@ -7909,13 +7909,22 @@ lang_process (void)\n   if (!bfd_section_already_linked_table_init ())\n     einfo (_(\"%F%P: can not create hash table: %E\\n\"));\n \n+  /* A first pass through the memory regions ensures that if any region\n+     references a symbol for its origin or length then this symbol will be\n+     added to the symbol table.  Having these symbols in the symbol table\n+     means that when we call open_input_bfds PROVIDE statements will\n+     trigger to provide any needed symbols.  The regions origins and\n+     lengths are not assigned as a result of this call.  */\n+  lang_do_memory_regions (FALSE);\n+\n   /* Create a bfd for each input file.  */\n   current_target = default_target;\n   lang_statement_iteration++;\n   open_input_bfds (statement_list.head, OPEN_BFD_NORMAL);\n-  /* open_input_bfds also handles assignments, so we can give values\n-     to symbolic origin/length now.  */\n-  lang_do_memory_regions ();\n+\n+  /* Now that open_input_bfds has processed assignments and provide\n+     statements we can give values to symbolic origin/length now.  */\n+  lang_do_memory_regions (TRUE);\n \n #if BFD_SUPPORTS_PLUGINS\n   if (link_info.lto_plugin_active)\n@@ -9373,10 +9382,16 @@ lang_do_version_exports_section (void)\n \t\t\t   lang_new_vers_node (greg, lreg), NULL);\n }\n \n-/* Evaluate LENGTH and ORIGIN parts of MEMORY spec */\n+/* Evaluate LENGTH and ORIGIN parts of MEMORY spec.  This is initially\n+   called with UPDATE_REGIONS_P set to FALSE, in this case no errors are\n+   thrown, however, references to symbols in the origin and length fields\n+   will be pushed into the symbol table, this allows PROVIDE statements to\n+   then provide these symbols.  This function is called a second time with\n+   UPDATE_REGIONS_P set to TRUE, this time the we update the actual region\n+   data structures, and throw errors if missing symbols are encountered.  */\n \n static void\n-lang_do_memory_regions (void)\n+lang_do_memory_regions (bfd_boolean update_regions_p)\n {\n   lang_memory_region_type *r = lang_memory_region_list;\n \n@@ -9385,24 +9400,30 @@ lang_do_memory_regions (void)\n       if (r->origin_exp)\n \t{\n \t  exp_fold_tree_no_dot (r->origin_exp);\n-\t  if (expld.result.valid_p)\n-\t    {\n-\t      r->origin = expld.result.value;\n-\t      r->current = r->origin;\n-\t    }\n-\t  else\n-\t    einfo (_(\"%F%P: invalid origin for memory region %s\\n\"),\n-\t\t   r->name_list.name);\n+          if (update_regions_p)\n+            {\n+              if (expld.result.valid_p)\n+                {\n+                  r->origin = expld.result.value;\n+                  r->current = r->origin;\n+                }\n+              else\n+                einfo (_(\"%P: invalid origin for memory region %s\\n\"),\n+                       r->name_list.name);\n+            }\n \t}\n       if (r->length_exp)\n \t{\n \t  exp_fold_tree_no_dot (r->length_exp);\n-\t  if (expld.result.valid_p)\n-\t    r->length = expld.result.value;\n-\t  else\n-\t    einfo (_(\"%F%P: invalid length for memory region %s\\n\"),\n-\t\t   r->name_list.name);\n-\t}\n+          if (update_regions_p)\n+            {\n+              if (expld.result.valid_p)\n+                r->length = expld.result.value;\n+              else\n+                einfo (_(\"%P: invalid length for memory region %s\\n\"),\n+                       r->name_list.name);\n+            }\n+        }\n     }\n }\n "
    },
    {
      "sha": "7481a92bbbd26cd405bce775c4035c44c74b9c1f",
      "filename": "ld/testsuite/ld-scripts/provide-10.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-10.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-10.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-10.d?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,3 @@\n+#source: provide-5.s\n+#ld: --defsym=mem_origin=0x300 --defsym=mem_length=0x400 -T provide-9.t\n+#map: provide-10.map"
    },
    {
      "sha": "022b962b2d8f0e27d19ad466e9582f07f6030263",
      "filename": "ld/testsuite/ld-scripts/provide-10.map",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-10.map",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-10.map",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-10.map?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,6 @@\n+#...\n+Memory Configuration\n+\n+Name             Origin             Length             Attributes\n+FOO              0x[0-9a-f]+300 +0x[0-9a-f]+400\n+#pass"
    },
    {
      "sha": "79bcfa621622f8fa8a5d810569cc58e4a88a5bbd",
      "filename": "ld/testsuite/ld-scripts/provide-11.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-11.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-11.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-11.d?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,3 @@\n+#source: provide-5.s\n+#ld: --defsym=mem_length=0x400 -T provide-9.t\n+#map: provide-11.map"
    },
    {
      "sha": "71763123123580405d76dbd83cf3faed4b7a65a6",
      "filename": "ld/testsuite/ld-scripts/provide-11.map",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-11.map",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-11.map",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-11.map?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,6 @@\n+#...\n+Memory Configuration\n+\n+Name             Origin             Length             Attributes\n+FOO              0x[0-9a-f]+100 +0x[0-9a-f]+400\n+#pass"
    },
    {
      "sha": "41d95900fd36d37a6bc77df51852f81b3b20a31d",
      "filename": "ld/testsuite/ld-scripts/provide-12.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-12.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-12.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-12.d?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,3 @@\n+#source: provide-5.s\n+#ld: --defsym=mem_origin=0x300 -T provide-9.t\n+#map: provide-12.map"
    },
    {
      "sha": "e76654b10fddc074610c6a047f9f0ef9f5356be3",
      "filename": "ld/testsuite/ld-scripts/provide-12.map",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-12.map",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-12.map",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-12.map?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,6 @@\n+#...\n+Memory Configuration\n+\n+Name             Origin             Length             Attributes\n+FOO              0x[0-9a-f]+300 +0x[0-9a-f]+200\n+#pass"
    },
    {
      "sha": "94dc02949b78eed953a8f07da17681743b84ff19",
      "filename": "ld/testsuite/ld-scripts/provide-9.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-9.d?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,3 @@\n+#source: provide-5.s\n+#ld: -T provide-9.t\n+#map: provide-9.map"
    },
    {
      "sha": "e35e3e2515769f376e996db2057a4f15cb13f781",
      "filename": "ld/testsuite/ld-scripts/provide-9.map",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.map",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.map",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-9.map?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,6 @@\n+#...\n+Memory Configuration\n+\n+Name             Origin             Length             Attributes\n+FOO              0x[0-9a-f]+100 +0x[0-9a-f]+200\n+#pass"
    },
    {
      "sha": "00d906aa80a1cc06b52b8e62a827791f1c032fa3",
      "filename": "ld/testsuite/ld-scripts/provide-9.t",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.t",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/874ef0386fe438d654f0c3c230d4a9d0c4db9213/ld/testsuite/ld-scripts/provide-9.t",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/provide-9.t?ref=874ef0386fe438d654f0c3c230d4a9d0c4db9213",
      "patch": "@@ -0,0 +1,25 @@\n+PROVIDE (mem_origin = 0x100);\n+PROVIDE (mem_length = 0x200);\n+\n+MEMORY\n+{\n+  FOO : ORIGIN = mem_origin, LENGTH = mem_length\n+}\n+\n+SECTIONS\n+{\n+  .data : {\n+    *(.data .data.*)\n+  } >FOO\n+\n+  .text : {\n+    *(.text .text.*)\n+  } >FOO\n+\n+  .bss : {\n+    *(.bss .bss.*)\n+  } >FOO\n+\n+  /DISCARD/ : { *(.*) }\n+}\n+"
    }
  ]
}