{
  "sha": "7f99d636c2b30fbcee569b7add37d255677e502a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2Y5OWQ2MzZjMmIzMGZiY2VlNTY5YjdhZGQzN2QyNTU2NzdlNTAyYQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-08T18:34:08Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-03-12T12:18:34Z"
    },
    "message": "gdb/testsuite: resolve remaining duplicate test names in gdb.python/*.exp\n\nThis commit resolves the remaining duplicate test names in the\ngdb.python/ directory, there's 1 duplicate per test script.  In each\ncase I have just extended some test names to make them more\ndescriptive.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.python/py-bad-printers.exp: Extend test names to make them\n\tunique.\n\t* gdb.python/py-events.exp: Likewise.\n\t* gdb.python/py-finish-breakpoint2.exp: Likewise.\n\t* gdb.python/py-frame-inline.exp: Likewise.\n\t* gdb.python/py-frame.exp: Likewise.\n\t* gdb.python/py-infthread.exp: Likewise.",
    "tree": {
      "sha": "3a98150a9aab85f8c94e530a9607a8861721a805",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3a98150a9aab85f8c94e530a9607a8861721a805"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f99d636c2b30fbcee569b7add37d255677e502a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f99d636c2b30fbcee569b7add37d255677e502a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f99d636c2b30fbcee569b7add37d255677e502a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f99d636c2b30fbcee569b7add37d255677e502a/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "323b848c51d19151e282470c866421b39d575da4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/323b848c51d19151e282470c866421b39d575da4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/323b848c51d19151e282470c866421b39d575da4"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 25,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6eddfc16c39fbd8c072424a5d8bca01a4ab30c99",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.python/py-bad-printers.exp: Extend test names to make them\n+\tunique.\n+\t* gdb.python/py-events.exp: Likewise.\n+\t* gdb.python/py-finish-breakpoint2.exp: Likewise.\n+\t* gdb.python/py-frame-inline.exp: Likewise.\n+\t* gdb.python/py-frame.exp: Likewise.\n+\t* gdb.python/py-infthread.exp: Likewise.\n+\n 2021-03-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.python/py-value-cc.exp: Remove a duplicate test."
    },
    {
      "sha": "708f0e0c5c987fbe03ce46897d4fdc9d69c91a67",
      "filename": "gdb/testsuite/gdb.python/py-bad-printers.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-bad-printers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-bad-printers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-bad-printers.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -44,10 +44,13 @@ gdb_test \"enable pretty-printer global bad-printers;container1\" \\\n     \"printers enabled\"\n gdb_test \"disable pretty-printer global bad-printers;container2\" \\\n     \"printers enabled\"\n-gdb_test \"print c\" \"Result of children iterator not a tuple of two elements.*\"\n+gdb_test \"print c\" \\\n+    \"Result of children iterator not a tuple of two elements.*\" \\\n+    \"print c, children method doesn't return a tuple\"\n \n gdb_test \"enable pretty-printer global bad-printers;container2\" \\\n     \"printers enabled\"\n gdb_test \"disable pretty-printer global bad-printers;container1\" \\\n     \"printers enabled\"\n-gdb_test \"print c\" \"Bad result from children iterator.*\"\n+gdb_test \"print c\" \"Bad result from children iterator.*\" \\\n+    \"print c, children method returns a malformed tuple\""
    },
    {
      "sha": "e89cd8b021b9445265dfbb4321f5479611af7da9",
      "filename": "gdb/testsuite/gdb.python/py-events.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -234,4 +234,4 @@ gdb_test_no_output \"set variable \\$x = 32\" \"do something\"\n gdb_test \"python print(count)\" 2 \"check for before_prompt event\"\n \n gdb_test_no_output \"xxz\" \"run a canned sequence\"\n-gdb_test \"python print(count)\" 4 \"check for before_prompt event\"\n+gdb_test \"python print(count)\" 4 \"check for before_prompt event again\""
    },
    {
      "sha": "58e086ad3b4007b108d1ea43ee43872b390b58cc",
      "filename": "gdb/testsuite/gdb.python/py-finish-breakpoint2.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-finish-breakpoint2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-finish-breakpoint2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-finish-breakpoint2.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -48,10 +48,12 @@ gdb_breakpoint \"throw_exception_1\"\n gdb_test \"continue\" \"Breakpoint .*throw_exception_1.*\" \"run to exception 1\"\n \n gdb_test \"python print (len(gdb.breakpoints()))\" \"3\" \"check BP count\"\n-gdb_test \"python ExceptionFinishBreakpoint(gdb.newest_frame())\" \"init ExceptionFinishBreakpoint\" \"set FinishBP after the exception\"\n+gdb_test \"python ExceptionFinishBreakpoint(gdb.newest_frame())\" \\\n+    \"init ExceptionFinishBreakpoint\" \"set FinishBP after the exception\"\n gdb_test \"continue\" \".*stopped at ExceptionFinishBreakpoint.*\" \"check FinishBreakpoint in catch()\"\n gdb_test \"python print (len(gdb.breakpoints()))\" \"3\" \"check finish BP removal\"\n \n gdb_test \"continue\" \".*Breakpoint.* throw_exception_1.*\" \"continue to second exception\"\n-gdb_test \"python ExceptionFinishBreakpoint(gdb.newest_frame())\" \"init ExceptionFinishBreakpoint\" \"set FinishBP after the exception\"\n+gdb_test \"python ExceptionFinishBreakpoint(gdb.newest_frame())\" \\\n+    \"init ExceptionFinishBreakpoint\" \"set FinishBP after the exception again\"\n gdb_test \"continue\" \".*exception did not finish.*\" \"FinishBreakpoint with exception thrown not caught\""
    },
    {
      "sha": "211c930ce506f8fbe20218f8b0e3effb3dcfce99",
      "filename": "gdb/testsuite/gdb.python/py-frame-inline.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-frame-inline.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-frame-inline.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-frame-inline.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -48,7 +48,7 @@ gdb_test \"python print (gdb.selected_frame().read_var('l'))\" \"\\r\\n42\"\n # the frame cache is flushed somehow after setting the limit, to force\n # frame id recomputation.\n gdb_test_no_output \"set backtrace limit 1\"\n-gdb_continue_to_breakpoint \"Block break here.\"\n+gdb_continue_to_breakpoint \"Block break here again.\"\n \n gdb_test \"python print (gdb.newest_frame())\" \".*\"\n "
    },
    {
      "sha": "a6a5c0de726341f56349e436999a0ba8f06efd92",
      "filename": "gdb/testsuite/gdb.python/py-frame.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-frame.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-frame.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-frame.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -83,7 +83,8 @@ gdb_test \"python print ('result = %s' % (f0 != f0))\" \" = False\" \"test inequality\n gdb_test \"python print ('result = %s' % f0.is_valid ())\" \" = True\" \"test Frame.is_valid\"\n gdb_test \"python print ('result = %s' % f0.name ())\" \" = f2\" \"test Frame.name\"\n gdb_test \"python print ('result = %s' % (f0.type () == gdb.NORMAL_FRAME))\" \" = True\" \"test Frame.type\"\n-gdb_test \"python print ('result = %s' % (f0.unwind_stop_reason () == gdb.FRAME_UNWIND_NO_REASON))\" \" = True\" \"test Frame.type\"\n+gdb_test \"python print ('result = %s' % (f0.unwind_stop_reason () == gdb.FRAME_UNWIND_NO_REASON))\" \\\n+    \" = True\" \"test Frame.unwind_stop_reason\"\n gdb_test \"python print ('result = %s' % gdb.frame_stop_reason_string (gdb.FRAME_UNWIND_INNER_ID))\" \" = previous frame inner to this frame \\\\(corrupt stack\\\\?\\\\)\" \"test gdb.frame_stop_reason_string\"\n gdb_test \"python print ('result = %s' % f0.pc ())\" \" = \\[0-9\\]+\" \"test Frame.pc\"\n gdb_test \"python print ('result = %s' % (f0.older () == f1))\" \" = True\" \"test Frame.older\""
    },
    {
      "sha": "aa0b802a11e96191be6740cfec04747404aea44d",
      "filename": "gdb/testsuite/gdb.python/py-infthread.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-infthread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f99d636c2b30fbcee569b7add37d255677e502a/gdb/testsuite/gdb.python/py-infthread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-infthread.exp?ref=7f99d636c2b30fbcee569b7add37d255677e502a",
      "patch": "@@ -89,4 +89,5 @@ gdb_test \"python print ('result = %s' % t0.is_exited ())\" \" = False\" \"test Infer\n \n gdb_test \"python print ('result = %s' % t0.is_valid ())\" \" = True\" \"test InferiorThread.is_valid\"\n gdb_test_no_output \"kill inferior 1\" \"kill inferior 1\"\n-gdb_test \"python print ('result = %s' % t0.is_valid ())\" \" = False\" \"test InferiorThread.is_valid\"\n+gdb_test \"python print ('result = %s' % t0.is_valid ())\" \" = False\" \\\n+    \"test InferiorThread.is_valid after thread has been killed\""
    }
  ]
}