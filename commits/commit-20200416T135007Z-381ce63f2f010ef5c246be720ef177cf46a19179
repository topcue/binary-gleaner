{
  "sha": "381ce63f2f010ef5c246be720ef177cf46a19179",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzgxY2U2M2YyZjAxMGVmNWMyNDZiZTcyMGVmMTc3Y2Y0NmExOTE3OQ==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-04-16T13:50:07Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-04-16T13:50:07Z"
    },
    "message": "Refactor delete_program_space as a destructor\n\nCurrently, while the program_space's ctor adds the new pspace to the\npspaces list, the destructor doesn't remove the pspace from the pspace\nlist.  Instead, you're supposed to use delete_program_space, to both\nremove the pspace from the list, and deleting the pspace.\n\nThis patch eliminates delete_program_space, and makes the pspace dtor\nremove the deleted pspace from the pspace list itself, i.e., makes the\ndtor do the mirror opposite of the ctor.\n\nI found this helps with a following patch that will allocate a mock\nprogram_space on the stack.  It's easier to just let the regular dtor\nremove the mock pspace from the pspace list than arrange to call\ndelete_program_space instead of the pspace dtor in that situation.\n\nWhile at it, move the ctor/dtor intro comments to the header file, and\nmake the ctor explicit.\n\ngdb/ChangeLog:\n2020-04-16  Pedro Alves  <palves@redhat.com>\n\n\t* inferior.c (delete_inferior): Use delete operator directly\n\tinstead of delete_program_space.\n\t* progspace.c (add_program_space): New, factored out from\n\tprogram_space::program_space.\n\t(remove_program_space): New, factored out from\n\tdelete_program_space.\n\t(program_space::program_space): Remove intro comment.  Rewrite.\n\t(program_space::~program_space): Remove intro comment.  Call\n\tremove_program_space.\n\t(delete_program_space): Delete.\n\t* progspace.h (program_space::program_space): Make explicit.  Move\n\tintro comment here, adjusted.\n\t(program_space::~program_space): Move intro comment here,\n\tadjusted.\n\t(delete_program_space): Remove.",
    "tree": {
      "sha": "34a22623bd10566a7a231891444d06fa711ef71d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/34a22623bd10566a7a231891444d06fa711ef71d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/381ce63f2f010ef5c246be720ef177cf46a19179",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/381ce63f2f010ef5c246be720ef177cf46a19179",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/381ce63f2f010ef5c246be720ef177cf46a19179",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/381ce63f2f010ef5c246be720ef177cf46a19179/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a010605fef0eba73c564c3dd22e0a6ecbc26b10e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a010605fef0eba73c564c3dd22e0a6ecbc26b10e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a010605fef0eba73c564c3dd22e0a6ecbc26b10e"
    }
  ],
  "stats": {
    "total": 118,
    "additions": 71,
    "deletions": 47
  },
  "files": [
    {
      "sha": "6c280e3f49f391c69821200b50fcf725f06359ac",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=381ce63f2f010ef5c246be720ef177cf46a19179",
      "patch": "@@ -1,3 +1,21 @@\n+2020-04-16  Pedro Alves  <palves@redhat.com>\n+\n+\t* inferior.c (delete_inferior): Use delete operator directly\n+\tinstead of delete_program_space.\n+\t* progspace.c (add_program_space): New, factored out from\n+\tprogram_space::program_space.\n+\t(remove_program_space): New, factored out from\n+\tdelete_program_space.\n+\t(program_space::program_space): Remove intro comment.  Rewrite.\n+\t(program_space::~program_space): Remove intro comment.  Call\n+\tremove_program_space.\n+\t(delete_program_space): Delete.\n+\t* progspace.h (program_space::program_space): Make explicit.  Move\n+\tintro comment here, adjusted.\n+\t(program_space::~program_space): Move intro comment here,\n+\tadjusted.\n+\t(delete_program_space): Remove.\n+\n 2020-04-16  Tom Tromey  <tromey@adacore.com>\n \n \t* windows-nat.c (windows_nat::handle_access_violation): New"
    },
    {
      "sha": "ceee00e9eed5d6a780442f59ab31225fcc6b23d0",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=381ce63f2f010ef5c246be720ef177cf46a19179",
      "patch": "@@ -162,7 +162,7 @@ delete_inferior (struct inferior *todel)\n \n   /* If this program space is rendered useless, remove it. */\n   if (program_space_empty_p (inf->pspace))\n-    delete_program_space (inf->pspace);\n+    delete inf->pspace;\n \n   delete inf;\n }"
    },
    {
      "sha": "6419f01770448a238183b328d4b8f0f3aa5510ab",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 43,
      "deletions": 41,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=381ce63f2f010ef5c246be720ef177cf46a19179",
      "patch": "@@ -109,36 +109,65 @@ init_address_spaces (void)\n \n \f\n \n-/* Adds a new empty program space to the program space list, and binds\n-   it to ASPACE.  Returns the pointer to the new object.  */\n+/* Add a program space from the program spaces list.  */\n \n-program_space::program_space (address_space *aspace_)\n-: num (++last_program_space_num), aspace (aspace_)\n+static void\n+add_program_space (program_space *pspace)\n {\n-  program_space_alloc_data (this);\n-\n   if (program_spaces == NULL)\n-    program_spaces = this;\n+    program_spaces = pspace;\n   else\n     {\n-      struct program_space *last;\n+      program_space *last;\n \n       for (last = program_spaces; last->next != NULL; last = last->next)\n \t;\n-      last->next = this;\n+      last->next = pspace;\n     }\n }\n \n-/* Releases program space PSPACE, and all its contents (shared\n-   libraries, objfiles, and any other references to the PSPACE in\n-   other modules).  It is an internal error to call this when PSPACE\n-   is the current program space, since there should always be a\n-   program space.  */\n+/* Remove a program space from the program spaces list.  */\n+\n+static void\n+remove_program_space (program_space *pspace)\n+{\n+  program_space *ss, **ss_link;\n+  gdb_assert (pspace != NULL);\n+\n+  ss = program_spaces;\n+  ss_link = &program_spaces;\n+  while (ss != NULL)\n+    {\n+      if (ss == pspace)\n+\t{\n+\t  *ss_link = ss->next;\n+\t  return;\n+\t}\n+\n+      ss_link = &ss->next;\n+      ss = *ss_link;\n+    }\n+}\n+\n+/* See progspace.h.  */\n+\n+program_space::program_space (address_space *aspace_)\n+  : num (++last_program_space_num),\n+    aspace (aspace_)\n+{\n+  program_space_alloc_data (this);\n+\n+  add_program_space (this);\n+}\n+\n+/* See progspace.h.  */\n \n program_space::~program_space ()\n {\n   gdb_assert (this != current_program_space);\n \n+  remove_program_space (this);\n+\n   scoped_restore_current_program_space restore_pspace;\n \n   set_current_program_space (this);\n@@ -259,33 +288,6 @@ program_space_empty_p (struct program_space *pspace)\n   return 1;\n }\n \n-/* Remove a program space from the program spaces list and release it.  It is\n-   an error to call this function while PSPACE is the current program space. */\n-\n-void\n-delete_program_space (struct program_space *pspace)\n-{\n-  struct program_space *ss, **ss_link;\n-  gdb_assert (pspace != NULL);\n-  gdb_assert (pspace != current_program_space);\n-\n-  ss = program_spaces;\n-  ss_link = &program_spaces;\n-  while (ss != NULL)\n-    {\n-      if (ss == pspace)\n-\t{\n-\t  *ss_link = ss->next;\n-\t  break;\n-\t}\n-\n-      ss_link = &ss->next;\n-      ss = *ss_link;\n-    }\n-\n-  delete pspace;\n-}\n-\n /* Prints the list of program spaces and their details on UIOUT.  If\n    REQUESTED is not -1, it's the ID of the pspace that should be\n    printed.  Otherwise, all spaces are printed.  */"
    },
    {
      "sha": "2b887847e17ac4236c4404c922c858825b5e5277",
      "filename": "gdb/progspace.h",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/progspace.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/381ce63f2f010ef5c246be720ef177cf46a19179/gdb/progspace.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.h?ref=381ce63f2f010ef5c246be720ef177cf46a19179",
      "patch": "@@ -209,7 +209,15 @@ struct unwrapping_objfile_range\n \n struct program_space\n {\n-  program_space (address_space *aspace_);\n+  /* Constructs a new empty program space, binds it to ASPACE, and\n+     adds it to the program space list.  */\n+  explicit program_space (address_space *aspace);\n+\n+  /* Releases a program space, and all its contents (shared libraries,\n+     objfiles, and any other references to the program space in other\n+     modules).  It is an internal error to call this when the program\n+     space is the current program space, since there should always be\n+     a program space.  */\n   ~program_space ();\n \n   typedef unwrapping_objfile_range objfiles_range;\n@@ -362,10 +370,6 @@ extern struct program_space *current_program_space;\n #define ALL_PSPACES(pspace) \\\n   for ((pspace) = program_spaces; (pspace) != NULL; (pspace) = (pspace)->next)\n \n-/* Remove a program space from the program spaces list and release it.  It is\n-   an error to call this function while PSPACE is the current program space. */\n-extern void delete_program_space (struct program_space *pspace);\n-\n /* Returns the number of program spaces listed.  */\n extern int number_of_program_spaces (void);\n "
    }
  ]
}