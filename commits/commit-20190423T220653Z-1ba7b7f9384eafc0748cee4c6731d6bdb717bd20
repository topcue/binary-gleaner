{
  "sha": "1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWJhN2I3ZjkzODRlYWZjMDc0OGNlZTRjNjczMWQ2YmRiNzE3YmQyMA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-01-10T20:23:44Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-04-23T22:06:53Z"
    },
    "message": "gdb/tic6x: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id, and\ngdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* tic6x-tdep.c (tic6x_unwind_sp): Delete.\n\t(tic6x_dummy_id): Delete.\n\t(tic6x_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "9d0ecab273133b09622a76eed1d4f31c233c78fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d0ecab273133b09622a76eed1d4f31c233c78fc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d31f262c36a450fe64e5886228d585c75cfecf14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d31f262c36a450fe64e5886228d585c75cfecf14",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d31f262c36a450fe64e5886228d585c75cfecf14"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 7,
    "deletions": 22
  },
  "files": [
    {
      "sha": "21f2ef48ceba8f384372df88a5ca353489e9c275",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
      "patch": "@@ -1,3 +1,10 @@\n+2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* tic6x-tdep.c (tic6x_unwind_sp): Delete.\n+\t(tic6x_dummy_id): Delete.\n+\t(tic6x_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* sparc-tdep.c (sparc_unwind_pc): Delete."
    },
    {
      "sha": "2df83c4f61970da91dc4f145fba2460681b5d3ec",
      "filename": "gdb/tic6x-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20/gdb/tic6x-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1ba7b7f9384eafc0748cee4c6731d6bdb717bd20/gdb/tic6x-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tic6x-tdep.c?ref=1ba7b7f9384eafc0748cee4c6731d6bdb717bd20",
      "patch": "@@ -376,15 +376,6 @@ tic6x_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n   return extract_typed_address (buf, builtin_type (gdbarch)->builtin_func_ptr);\n }\n \n-/* This is the implementation of gdbarch method unwind_sp.  */\n-\n-static CORE_ADDR\n-tic6x_unwind_sp (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_unwind_register_unsigned (this_frame, TIC6X_SP_REGNUM);\n-}\n-\n-\n /* Frame base handling.  */\n \n static struct tic6x_unwind_cache*\n@@ -811,16 +802,6 @@ tic6x_return_value (struct gdbarch *gdbarch, struct value *function,\n   return RETURN_VALUE_REGISTER_CONVENTION;\n }\n \n-/* This is the implementation of gdbarch method dummy_id.  */\n-\n-static struct frame_id\n-tic6x_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  return frame_id_build\n-    (get_frame_register_unsigned (this_frame, TIC6X_SP_REGNUM),\n-     get_frame_pc (this_frame));\n-}\n-\n /* Get the alignment requirement of TYPE.  */\n \n static int\n@@ -1283,7 +1264,6 @@ tic6x_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \t\t\t\t       tic6x_sw_breakpoint_from_kind);\n \n   set_gdbarch_unwind_pc (gdbarch, tic6x_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, tic6x_unwind_sp);\n \n   /* Unwinding.  */\n   dwarf2_append_unwinders (gdbarch);\n@@ -1302,8 +1282,6 @@ tic6x_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n \n   set_gdbarch_return_value (gdbarch, tic6x_return_value);\n \n-  set_gdbarch_dummy_id (gdbarch, tic6x_dummy_id);\n-\n   /* Enable inferior call support.  */\n   set_gdbarch_push_dummy_call (gdbarch, tic6x_push_dummy_call);\n "
    }
  ]
}