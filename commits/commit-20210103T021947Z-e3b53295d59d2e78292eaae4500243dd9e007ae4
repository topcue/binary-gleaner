{
  "sha": "e3b53295d59d2e78292eaae4500243dd9e007ae4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTNiNTMyOTVkNTlkMmU3ODI5MmVhYWU0NTAwMjQzZGQ5ZTAwN2FlNA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-02T11:15:02Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-03T02:19:47Z"
    },
    "message": "PR27140, ppc32 segmentation fault in make_stub\n\nThis fixes a thinko in commit fa40fbe4849.  st_other global entry bits\nare relevant only for 64-bit ELFv2.  PowerPC gold leaves local sym\nvector of st_other bits as NULL for 32-bit, hence the segfault.\n\n\tPR 27140\n\t* powerpc.cc (Target_powerpc::Branch_info::make_stub): Only access\n\tobject->st_other() when 64-bit.\n\t(Stub_table::add_long_branch_entry): Ignore \"other\" when 32-bit.",
    "tree": {
      "sha": "5a72c008f0da971ad043a1c98e2389f29a35108a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5a72c008f0da971ad043a1c98e2389f29a35108a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e3b53295d59d2e78292eaae4500243dd9e007ae4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3b53295d59d2e78292eaae4500243dd9e007ae4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e3b53295d59d2e78292eaae4500243dd9e007ae4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e3b53295d59d2e78292eaae4500243dd9e007ae4/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0ede24f2c46d2b888f5e19418e577f3c1110f6a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ede24f2c46d2b888f5e19418e577f3c1110f6a5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0ede24f2c46d2b888f5e19418e577f3c1110f6a5"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 13,
    "deletions": 4
  },
  "files": [
    {
      "sha": "117716643953db674e1bcef4ff5f0feca7ebdf1d",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3b53295d59d2e78292eaae4500243dd9e007ae4/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3b53295d59d2e78292eaae4500243dd9e007ae4/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=e3b53295d59d2e78292eaae4500243dd9e007ae4",
      "patch": "@@ -1,3 +1,10 @@\n+2021-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27140\n+\t* powerpc.cc (Target_powerpc::Branch_info::make_stub): Only access\n+\tobject->st_other() when 64-bit.\n+\t(Stub_table::add_long_branch_entry): Ignore \"other\" when 32-bit.\n+\n 2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n \n \t* tilegx.cc: Correct comment spelling."
    },
    {
      "sha": "e2966ef096b0043cd40dc2f38f41f0f798abcdb7",
      "filename": "gold/powerpc.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e3b53295d59d2e78292eaae4500243dd9e007ae4/gold/powerpc.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e3b53295d59d2e78292eaae4500243dd9e007ae4/gold/powerpc.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/powerpc.cc?ref=e3b53295d59d2e78292eaae4500243dd9e007ae4",
      "patch": "@@ -3536,7 +3536,7 @@ Target_powerpc<size, big_endian>::Branch_info::make_stub(\n       from += (this->object_->output_section(this->shndx_)->address()\n \t       + this->offset_);\n       Address to;\n-      unsigned int other;\n+      unsigned int other = 0;\n       if (gsym != NULL)\n \t{\n \t  switch (gsym->source())\n@@ -3564,7 +3564,8 @@ Target_powerpc<size, big_endian>::Branch_info::make_stub(\n \t  to = symtab->compute_final_value<size>(gsym, &status);\n \t  if (status != Symbol_table::CFVS_OK)\n \t    return true;\n-\t  other = gsym->nonvis() >> 3;\n+\t  if (size == 64)\n+\t    other = gsym->nonvis() >> 3;\n \t}\n       else\n \t{\n@@ -3581,7 +3582,8 @@ Target_powerpc<size, big_endian>::Branch_info::make_stub(\n \t      || !symval.has_output_value())\n \t    return true;\n \t  to = symval.value(this->object_, 0);\n-\t  other = this->object_->st_other(this->r_sym_) >> 5;\n+\t  if (size == 64)\n+\t    other = this->object_->st_other(this->r_sym_) >> 5;\n \t}\n       if (!(size == 32 && this->r_type_ == elfcpp::R_PPC_PLTREL24))\n \tto += this->addend_;\n@@ -5303,7 +5305,7 @@ Stub_table<size, big_endian>::add_long_branch_entry(\n \tthis->need_resize_ = true;\n       p.first->second.toc_ = true;\n     }\n-  if (p.first->second.other_ == 0)\n+  if (size == 64 && p.first->second.other_ == 0)\n     p.first->second.other_ = other;\n   gold_assert(save_res == p.first->second.save_res_);\n   if (p.second || (this->resizing_ && !p.first->second.iter_))"
    }
  ]
}