{
  "sha": "3818d4ab066ee40b976513b247b5da5f20379b66",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzgxOGQ0YWIwNjZlZTQwYjk3NjUxM2IyNDdiNWRhNWYyMDM3OWI2Ng==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-19T03:46:28Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-19T03:57:02Z"
    },
    "message": "elf: Handle .gnu.debuglto_.debug_* sections\n\ncommit 994b25132814f4c2be93ce53a616a74139c4cf3c\nAuthor: H.J. Lu <hjl.tools@gmail.com>\nDate:   Sun Jan 17 20:01:16 2021 -0800\n\n    ld/elf: Ignore section symbols when matching linkonce with comdat\n\nignored section symbols when comparing symbols in 2 sections.  Since all\nreferences to debugging sections are done with section symbols, symbols\nin debugging sections are ignored and we fail to match symbols in comdat\ndebugging sections.  Also .gnu.debuglto_.debug_* sections aren't treated\nas debugging sections.\n\n1. Treate .gnu.debuglto_.debug_ section as debugging section unless it\nis marked with SHF_EXCLUDE.\n2. Revert commit 994b2513281 in elf_create_symbuf.\n3. Ignore section symbols only when matching non-debugging sections or\nlinkonce section with comdat section.\n\nbfd/\n\n\tPR ld/27590\n\t* elf.c (_bfd_elf_make_section_from_shdr): Treate\n\t.gnu.debuglto_.debug_ section as debugging section unless it is\n\tmarked with SHF_EXCLUDE.\n\t* elflink.c (elf_create_symbuf): Revert commit 994b2513281.\n\t(bfd_elf_match_symbols_in_sections): Ignore section symbols when\n\tmatching non-debugging sections or linkonce section with comdat\n\tsection.\n\nld/\n\n\tPR ld/27590\n\t* testsuite/ld-elf/pr27590.s: New file.\n\t* testsuite/ld-elf/pr27590a.d: Likewise.\n\t* testsuite/ld-elf/pr27590b.d: Likewise.\n\t* testsuite/ld-i386/i386.exp: Also run ld/27193 test with\n\t--reduce-memory-overheads.",
    "tree": {
      "sha": "ebb68ff9dea8c35f68178204ce3de18989126655",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ebb68ff9dea8c35f68178204ce3de18989126655"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3818d4ab066ee40b976513b247b5da5f20379b66",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3818d4ab066ee40b976513b247b5da5f20379b66",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3818d4ab066ee40b976513b247b5da5f20379b66",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3818d4ab066ee40b976513b247b5da5f20379b66/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51f6e7a9f4210aed0f8156c1d2e348de6f96f37d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/51f6e7a9f4210aed0f8156c1d2e348de6f96f37d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/51f6e7a9f4210aed0f8156c1d2e348de6f96f37d"
    }
  ],
  "stats": {
    "total": 137,
    "additions": 111,
    "deletions": 26
  },
  "files": [
    {
      "sha": "2e43a4d784d368f547fde24e5d332d6da7f4cd62",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -1,3 +1,14 @@\n+2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/27590\n+\t* elf.c (_bfd_elf_make_section_from_shdr): Treate\n+\t.gnu.debuglto_.debug_ section as debugging section unless it is\n+\tmarked with SHF_EXCLUDE.\n+\t* elflink.c (elf_create_symbuf): Revert commit 994b2513281.\n+\t(bfd_elf_match_symbols_in_sections): Ignore section symbols when\n+\tmatching non-debugging sections or linkonce section with comdat\n+\tsection.\n+\n 2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/27587"
    },
    {
      "sha": "7bd12dfbf37be4ca22304fa10729aa258000334f",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -1085,6 +1085,10 @@ _bfd_elf_make_section_from_shdr (bfd *abfd,\n       if (name [0] == '.')\n \t{\n \t  if (strncmp (name, \".debug\", 6) == 0\n+\t      /* NB: Treate .gnu.debuglto_.debug_ section as debugging\n+\t\t section unless it is marked with SHF_EXCLUDE.  */\n+\t      || ((flags & SEC_EXCLUDE) == 0\n+\t\t  && strncmp (name, \".gnu.debuglto_.debug_\", 21) == 0)\n \t      || strncmp (name, \".gnu.linkonce.wi.\", 17) == 0\n \t      || strncmp (name, \".zdebug\", 7) == 0)\n \t    flags |= SEC_DEBUGGING | SEC_ELF_OCTETS;"
    },
    {
      "sha": "69362670667586d8448b41bd14fe5954d135f8ee",
      "filename": "bfd/elflink.c",
      "status": "modified",
      "additions": 54,
      "deletions": 24,
      "changes": 78,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/elflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/bfd/elflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elflink.c?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -8135,12 +8135,8 @@ elf_create_symbuf (size_t symcount, Elf_Internal_Sym *isymbuf)\n   if (indbuf == NULL)\n     return NULL;\n \n-  /* NB: When checking if 2 sections define the same set of local and\n-     global symbols, ignore both undefined and section symbols in the\n-     symbol table.  */\n   for (ind = indbuf, i = 0; i < symcount; i++)\n-    if (isymbuf[i].st_shndx != SHN_UNDEF\n-\t&& ELF_ST_TYPE (isymbuf[i].st_info) != STT_SECTION)\n+    if (isymbuf[i].st_shndx != SHN_UNDEF)\n       *ind++ = &isymbuf[i];\n   indbufend = ind;\n \n@@ -8203,9 +8199,10 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n   struct elf_symbuf_head *ssymbuf1, *ssymbuf2;\n   Elf_Internal_Sym *isym, *isymend;\n   struct elf_symbol *symtable1 = NULL, *symtable2 = NULL;\n-  size_t count1, count2, i;\n+  size_t count1, count2, sec_count1, sec_count2, i;\n   unsigned int shndx1, shndx2;\n   bfd_boolean result;\n+  bfd_boolean ignore_section_symbol_p;\n \n   bfd1 = sec1->owner;\n   bfd2 = sec2->owner;\n@@ -8239,6 +8236,13 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n   ssymbuf1 = (struct elf_symbuf_head *) elf_tdata (bfd1)->symbuf;\n   ssymbuf2 = (struct elf_symbuf_head *) elf_tdata (bfd2)->symbuf;\n \n+  /* Ignore section symbols only when matching non-debugging sections\n+     or linkonce section with comdat section.  */\n+  ignore_section_symbol_p\n+    = ((sec1->flags & SEC_DEBUGGING) == 0\n+       || ((elf_section_flags (sec1) & SHF_GROUP)\n+\t   != (elf_section_flags (sec2) & SHF_GROUP)));\n+\n   if (ssymbuf1 == NULL)\n     {\n       isymbuf1 = bfd_elf_get_elf_syms (bfd1, hdr1, symcount1, 0,\n@@ -8278,6 +8282,7 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n       hi = ssymbuf1->count;\n       ssymbuf1++;\n       count1 = 0;\n+      sec_count1 = 0;\n       while (lo < hi)\n \t{\n \t  mid = (lo + hi) / 2;\n@@ -8292,11 +8297,19 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n \t      break;\n \t    }\n \t}\n+      if (ignore_section_symbol_p)\n+\t{\n+\t  for (i = 0; i < count1; i++)\n+\t    if (ELF_ST_TYPE (ssymbuf1->ssym[i].st_info) == STT_SECTION)\n+\t      sec_count1++;\n+\t  count1 -= sec_count1;\n+\t}\n \n       lo = 0;\n       hi = ssymbuf2->count;\n       ssymbuf2++;\n       count2 = 0;\n+      sec_count2 = 0;\n       while (lo < hi)\n \t{\n \t  mid = (lo + hi) / 2;\n@@ -8311,6 +8324,13 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n \t      break;\n \t    }\n \t}\n+      if (ignore_section_symbol_p)\n+\t{\n+\t  for (i = 0; i < count2; i++)\n+\t    if (ELF_ST_TYPE (ssymbuf2->ssym[i].st_info) == STT_SECTION)\n+\t      sec_count2++;\n+\t  count2 -= sec_count2;\n+\t}\n \n       if (count1 == 0 || count2 == 0 || count1 != count2)\n \tgoto done;\n@@ -8323,24 +8343,30 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n \tgoto done;\n \n       symp = symtable1;\n-      for (ssym = ssymbuf1->ssym, ssymend = ssym + count1;\n-\t   ssym < ssymend; ssym++, symp++)\n-\t{\n-\t  symp->u.ssym = ssym;\n-\t  symp->name = bfd_elf_string_from_elf_section (bfd1,\n-\t\t\t\t\t\t\thdr1->sh_link,\n-\t\t\t\t\t\t\tssym->st_name);\n-\t}\n+      for (ssym = ssymbuf1->ssym, ssymend = ssym + count1 + sec_count1;\n+\t   ssym < ssymend; ssym++)\n+\tif (sec_count1 == 0\n+\t    || ELF_ST_TYPE (ssym->st_info) != STT_SECTION)\n+\t  {\n+\t    symp->u.ssym = ssym;\n+\t    symp->name = bfd_elf_string_from_elf_section (bfd1,\n+\t\t\t\t\t\t\t  hdr1->sh_link,\n+\t\t\t\t\t\t\t  ssym->st_name);\n+\t    symp++;\n+\t  }\n \n       symp = symtable2;\n-      for (ssym = ssymbuf2->ssym, ssymend = ssym + count2;\n-\t   ssym < ssymend; ssym++, symp++)\n-\t{\n-\t  symp->u.ssym = ssym;\n-\t  symp->name = bfd_elf_string_from_elf_section (bfd2,\n-\t\t\t\t\t\t\thdr2->sh_link,\n-\t\t\t\t\t\t\tssym->st_name);\n-\t}\n+      for (ssym = ssymbuf2->ssym, ssymend = ssym + count2 + sec_count2;\n+\t   ssym < ssymend; ssym++)\n+\tif (sec_count2 == 0\n+\t    || ELF_ST_TYPE (ssym->st_info) != STT_SECTION)\n+\t  {\n+\t    symp->u.ssym = ssym;\n+\t    symp->name = bfd_elf_string_from_elf_section (bfd2,\n+\t\t\t\t\t\t\t  hdr2->sh_link,\n+\t\t\t\t\t\t\t  ssym->st_name);\n+\t    symp++;\n+\t  }\n \n       /* Sort symbol by name.  */\n       qsort (symtable1, count1, sizeof (struct elf_symbol),\n@@ -8369,12 +8395,16 @@ bfd_elf_match_symbols_in_sections (asection *sec1, asection *sec2,\n   /* Count definitions in the section.  */\n   count1 = 0;\n   for (isym = isymbuf1, isymend = isym + symcount1; isym < isymend; isym++)\n-    if (isym->st_shndx == shndx1)\n+    if (isym->st_shndx == shndx1\n+\t&& (!ignore_section_symbol_p\n+\t    || ELF_ST_TYPE (isym->st_info) != STT_SECTION))\n       symtable1[count1++].u.isym = isym;\n \n   count2 = 0;\n   for (isym = isymbuf2, isymend = isym + symcount2; isym < isymend; isym++)\n-    if (isym->st_shndx == shndx2)\n+    if (isym->st_shndx == shndx2\n+\t&& (!ignore_section_symbol_p\n+\t    || ELF_ST_TYPE (isym->st_info) != STT_SECTION))\n       symtable2[count2++].u.isym = isym;\n \n   if (count1 == 0 || count2 == 0 || count1 != count2)"
    },
    {
      "sha": "30ac9b4d4705e5768995ca7b78978929bc5d48b0",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/27590\n+\t* testsuite/ld-elf/pr27590.s: New file.\n+\t* testsuite/ld-elf/pr27590a.d: Likewise.\n+\t* testsuite/ld-elf/pr27590b.d: Likewise.\n+\t* testsuite/ld-i386/i386.exp: Also run ld/27193 test with\n+\t--reduce-memory-overheads.\n+\n 2021-03-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/27587"
    },
    {
      "sha": "f7340b4d46feaf380f202144d7b58e2ff03f1009",
      "filename": "ld/testsuite/ld-elf/pr27590.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr27590.s?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -0,0 +1,6 @@\n+\t.section\t.gnu.debuglto_.debug_macro,\"\",%progbits\n+.Ldebug_macro0:\n+\t.dc.a\t.Ldebug_macro2\n+\t.section\t.gnu.debuglto_.debug_macro,\"G\",%progbits,wm4,comdat\n+.Ldebug_macro2:\n+\t.long\t0x4"
    },
    {
      "sha": "c24cd8907ae46af4d55d2fcbc60589e45dc23b4f",
      "filename": "ld/testsuite/ld-elf/pr27590a.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr27590a.d?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -0,0 +1,10 @@\n+#source: pr27590.s\n+#ld: -r tmpdir/pr27590.o\n+#readelf: -rW\n+#xfail: [is_generic]\n+\n+Relocation section '\\.rel.*\\.gnu\\.debuglto_\\.debug_macro' at offset 0x[0-9a-z]+ contains 2 entries:\n+[ \\t]+Offset[ \\t]+Info[ \\t]+Type[ \\t]+Sym.*\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0]+[ \\t]+\\.gnu\\.debuglto_\\.debug_macro.*\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0]+[ \\t]+\\.gnu\\.debuglto_\\.debug_macro.*\n+#pass"
    },
    {
      "sha": "68b198b299293103c451450ac029f25e8a73623d",
      "filename": "ld/testsuite/ld-elf/pr27590b.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-elf/pr27590b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr27590b.d?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -0,0 +1,10 @@\n+#source: pr27590.s\n+#ld: -r tmpdir/pr27590.o --reduce-memory-overheads\n+#readelf: -rW\n+#xfail: [is_generic]\n+\n+Relocation section '\\.rel.*\\.gnu\\.debuglto_\\.debug_macro' at offset 0x[0-9a-z]+ contains 2 entries:\n+[ \\t]+Offset[ \\t]+Info[ \\t]+Type[ \\t]+Sym.*\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0]+[ \\t]+\\.gnu\\.debuglto_\\.debug_macro.*\n+[0-9a-f]+[ \\t]+[0-9a-f]+[ \\t]+R_.*[ \\t]+[0]+[ \\t]+\\.gnu\\.debuglto_\\.debug_macro.*\n+#pass"
    },
    {
      "sha": "6ad69a818f5ebed7522c1feac7ca3ee22312d23a",
      "filename": "ld/testsuite/ld-i386/i386.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3818d4ab066ee40b976513b247b5da5f20379b66/ld/testsuite/ld-i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-i386/i386.exp?ref=3818d4ab066ee40b976513b247b5da5f20379b66",
      "patch": "@@ -245,11 +245,16 @@ set i386tests {\n      \"-melf_i386 -shared -Bsymbolic -z notext\" \"\"\n      \"--32 -mx86-used-note=yes\"\n      { pr19827a.S }  {{readelf {-rW} pr19827.rd}} \"pr19827.so\"}\n-    {\"Build pr27193.so\"\n+    {\"Build pr27193a.so\"\n      \"-melf_i386 -shared\" \"\"\n      \"--32\"\n      { pr27193a.o.bz2 pr27193b.s }\n-     {{objdump {-dw} pr27193.dd}} \"pr27193.so\"}\n+     {{objdump {-dw} pr27193.dd}} \"pr27193a.so\"}\n+    {\"Build pr27193b.so\"\n+     \"-melf_i386 -shared --reduce-memory-overheads\" \"\"\n+     \"--32\"\n+     { pr27193a.o.bz2 pr27193b.s }\n+     {{objdump {-dw} pr27193.dd}} \"pr27193b.so\"}\n }\n \n proc iamcu_tests {} {"
    }
  ]
}