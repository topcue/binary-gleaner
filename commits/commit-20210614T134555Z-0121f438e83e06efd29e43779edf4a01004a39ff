{
  "sha": "0121f438e83e06efd29e43779edf4a01004a39ff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDEyMWY0MzhlODNlMDZlZmQyOWU0Mzc3OWVkZjRhMDEwMDRhMzlmZg==",
  "commit": {
    "author": {
      "name": "Eric Botcazou",
      "email": "ebotcazou@gcc.gnu.org",
      "date": "2021-06-14T13:43:19Z"
    },
    "committer": {
      "name": "Eric Botcazou",
      "email": "ebotcazou@gcc.gnu.org",
      "date": "2021-06-14T13:45:55Z"
    },
    "message": "Use consistent type in binutils/dwarf.c\n\nIf you look at the type used for implicit_const objects in binutils/dwarf.c,\nyou'll get sometimes bfd_signed_vma and sometimes dwarf_signed_vma.\n\nThey are the same on 64-bit hosts, but not on 32-bit hosts, and the latter\ndiscrepancy, in particular in process_abbrev_set, is responsible for the\nfollowing error issued by objdump on some object files containing DWARF 5:\n\nbinutils/dwarf.c:1108: read LEB value is too large to store in destination\nvariable\n\nbinutis/\n\t* dwarf.c (struct abbrev_attr): Change type of implicit_const.\n\t(add_abbrev_attr): Likewise.\n\t(process_abbrev_set): Likewise.\n\t(display_debug_abbrev): Adjust to above change.",
    "tree": {
      "sha": "e5abd2f0fa0caee9825852dc427a8bf2227acc18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e5abd2f0fa0caee9825852dc427a8bf2227acc18"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0121f438e83e06efd29e43779edf4a01004a39ff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0121f438e83e06efd29e43779edf4a01004a39ff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0121f438e83e06efd29e43779edf4a01004a39ff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0121f438e83e06efd29e43779edf4a01004a39ff/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "90d3edf01630093142e833235abea548aa78e65b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d3edf01630093142e833235abea548aa78e65b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/90d3edf01630093142e833235abea548aa78e65b"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 17,
    "deletions": 10
  },
  "files": [
    {
      "sha": "7a9fa1de0641635d1da27bd3fa9c80fb5823dd0c",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0121f438e83e06efd29e43779edf4a01004a39ff/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0121f438e83e06efd29e43779edf4a01004a39ff/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=0121f438e83e06efd29e43779edf4a01004a39ff",
      "patch": "@@ -1,3 +1,10 @@\n+2021-06-14  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* dwarf.c (struct abbrev_attr): Change type of implicit_const.\n+\t(add_abbrev_attr): Likewise.\n+\t(process_abbrev_set): Likewise.\n+\t(display_debug_abbrev): Adjust to above change.\n+\n 2021-06-12  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_file_header): Don't clear section_headers."
    },
    {
      "sha": "ebc7b023e3bb026b114f85c15f5c1e41726c988f",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0121f438e83e06efd29e43779edf4a01004a39ff/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0121f438e83e06efd29e43779edf4a01004a39ff/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=0121f438e83e06efd29e43779edf4a01004a39ff",
      "patch": "@@ -823,7 +823,7 @@ typedef struct abbrev_attr\n {\n   unsigned long          attribute;\n   unsigned long          form;\n-  bfd_signed_vma         implicit_const;\n+  dwarf_signed_vma       implicit_const;\n   struct abbrev_attr *   next;\n }\n abbrev_attr;\n@@ -998,19 +998,19 @@ add_abbrev (unsigned long  number,\n }\n \n static void\n-add_abbrev_attr (unsigned long   attribute,\n-\t\t unsigned long   form,\n-\t\t bfd_signed_vma  implicit_const,\n-\t\t abbrev_list *   list)\n+add_abbrev_attr (unsigned long    attribute,\n+\t\t unsigned long    form,\n+\t\t dwarf_signed_vma implicit_const,\n+\t\t abbrev_list *    list)\n {\n   abbrev_attr *attr;\n \n   attr = (abbrev_attr *) xmalloc (sizeof (*attr));\n \n-  attr->attribute = attribute;\n-  attr->form      = form;\n+  attr->attribute      = attribute;\n+  attr->form           = form;\n   attr->implicit_const = implicit_const;\n-  attr->next      = NULL;\n+  attr->next           = NULL;\n \n   assert (list != NULL && list->last_abbrev != NULL);\n \n@@ -1085,7 +1085,7 @@ process_abbrev_set (struct dwarf_section *section,\n \t{\n \t  unsigned long form;\n \t  /* Initialize it due to a false compiler warning.  */\n-\t  bfd_signed_vma implicit_const = -1;\n+\t  dwarf_signed_vma implicit_const = -1;\n \n \t  READ_ULEB (attribute, start, end);\n \t  if (start == end)\n@@ -6255,7 +6255,7 @@ display_debug_abbrev (struct dwarf_section *section,\n \t\t      get_AT_name (attr->attribute),\n \t\t      get_FORM_name (attr->form));\n \t      if (attr->form == DW_FORM_implicit_const)\n-\t\tprintf (\": %\" BFD_VMA_FMT \"d\", attr->implicit_const);\n+\t\tprintf (\": %s\", dwarf_vmatoa (\"d\", attr->implicit_const));\n \t      putchar ('\\n');\n \t    }\n \t}"
    }
  ]
}