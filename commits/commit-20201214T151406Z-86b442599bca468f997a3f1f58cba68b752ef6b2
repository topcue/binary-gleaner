{
  "sha": "86b442599bca468f997a3f1f58cba68b752ef6b2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODZiNDQyNTk5YmNhNDY4Zjk5N2EzZjFmNThjYmE2OGI3NTJlZjZiMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-12-14T15:14:06Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-12-14T15:14:06Z"
    },
    "message": "Handle block-local names for Ada\n\nGNAT can generate a mangled name with \"B_N\" (where N is a number) in\nthe middle, like \"hello__B_1__fourth.0\".  This is used for names local\nto a block.  Multiple levels of block-local name can also occur, a\npossibility that was neglected by v1 of this patch.  This patch\nchanges gdb to handle these names.\n\nThe wild name matcher is updated a straightforward way.  The full\nmatcher is rewritten.  The hash function is updated to ensure that\nthis works.\n\nThis version does not seem to have the performance problems that\naffected v1.  In particular, the previously-slow \"bt\" problem has been\nfixed.\n\ngdb/ChangeLog\n2020-12-14  Tom Tromey  <tromey@adacore.com>\n\n\t* dictionary.c (language_defn::search_name_hash): Ignore \"B\".\n\t* ada-lang.c (advance_wild_match): Ignore \"B\".\n\t(full_match): Remove.\n\t(do_full_match): Rewrite.\n\ngdb/testsuite/ChangeLog\n2020-12-14  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/nested.exp: Add new tests.\n\t* gdb.ada/nested/hello.adb (Fourth, Fifth): New procedures.",
    "tree": {
      "sha": "bbdf6c450491a0746e511eeccf9982cef12c512a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bbdf6c450491a0746e511eeccf9982cef12c512a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/86b442599bca468f997a3f1f58cba68b752ef6b2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86b442599bca468f997a3f1f58cba68b752ef6b2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/86b442599bca468f997a3f1f58cba68b752ef6b2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/86b442599bca468f997a3f1f58cba68b752ef6b2/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25a1127be7d6923904b2346ff76e7e9658620bf5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25a1127be7d6923904b2346ff76e7e9658620bf5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25a1127be7d6923904b2346ff76e7e9658620bf5"
    }
  ],
  "stats": {
    "total": 117,
    "additions": 92,
    "deletions": 25
  },
  "files": [
    {
      "sha": "e15d6958cbf0c83cd63f4f2d44d6cf5869a55100",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-12-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dictionary.c (language_defn::search_name_hash): Ignore \"B\".\n+\t* ada-lang.c (advance_wild_match): Ignore \"B\".\n+\t(full_match): Remove.\n+\t(do_full_match): Rewrite.\n+\n 2020-12-14  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (get_var_value): Only consider exact matches."
    },
    {
      "sha": "564cdbee13cec3fd6b3c85b4cdc0188c827053f1",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 42,
      "deletions": 23,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -6037,6 +6037,13 @@ advance_wild_match (const char **namep, const char *name0, char target0)\n \t      name += 2;\n \t      break;\n \t    }\n+\t  else if (t1 == '_' && name[2] == 'B' && name[3] == '_')\n+\t    {\n+\t      /* Names like \"pkg__B_N__name\", where N is a number, are\n+\t\t block-local.  We can handle these by simply skipping\n+\t\t the \"B_\" here.  */\n+\t      name += 4;\n+\t    }\n \t  else\n \t    return 0;\n \t}\n@@ -6081,28 +6088,6 @@ wild_match (const char *name, const char *patn)\n     }\n }\n \n-/* Returns true iff symbol name SYM_NAME matches SEARCH_NAME, ignoring\n-   any trailing suffixes that encode debugging information or leading\n-   _ada_ on SYM_NAME (see is_name_suffix commentary for the debugging\n-   information that is ignored).  */\n-\n-static bool\n-full_match (const char *sym_name, const char *search_name)\n-{\n-  size_t search_name_len = strlen (search_name);\n-\n-  if (strncmp (sym_name, search_name, search_name_len) == 0\n-      && is_name_suffix (sym_name + search_name_len))\n-    return true;\n-\n-  if (startswith (sym_name, \"_ada_\")\n-      && strncmp (sym_name + 5, search_name, search_name_len) == 0\n-      && is_name_suffix (sym_name + search_name_len + 5))\n-    return true;\n-\n-  return false;\n-}\n-\n /* Add symbols from BLOCK matching LOOKUP_NAME in DOMAIN to vector\n    *defn_symbols, updating the list of symbols in OBSTACKP (if\n    necessary).  OBJFILE is the section containing BLOCK.  */\n@@ -13606,7 +13591,41 @@ do_full_match (const char *symbol_search_name,\n \t       const lookup_name_info &lookup_name,\n \t       completion_match_result *comp_match_res)\n {\n-  return full_match (symbol_search_name, ada_lookup_name (lookup_name));\n+  if (startswith (symbol_search_name, \"_ada_\"))\n+    symbol_search_name += 5;\n+\n+  const char *lname = lookup_name.ada ().lookup_name ().c_str ();\n+  int uscore_count = 0;\n+  while (*lname != '\\0')\n+    {\n+      if (*symbol_search_name != *lname)\n+\t{\n+\t  if (*symbol_search_name == 'B' && uscore_count == 2\n+\t      && symbol_search_name[1] == '_')\n+\t    {\n+\t      symbol_search_name += 2;\n+\t      while (isdigit (*symbol_search_name))\n+\t\t++symbol_search_name;\n+\t      if (symbol_search_name[0] == '_'\n+\t\t  && symbol_search_name[1] == '_')\n+\t\t{\n+\t\t  symbol_search_name += 2;\n+\t\t  continue;\n+\t\t}\n+\t    }\n+\t  return false;\n+\t}\n+\n+      if (*symbol_search_name == '_')\n+\t++uscore_count;\n+      else\n+\tuscore_count = 0;\n+\n+      ++symbol_search_name;\n+      ++lname;\n+    }\n+\n+  return is_name_suffix (symbol_search_name);\n }\n \n /* symbol_name_matcher_ftype for exact (verbatim) matches.  */"
    },
    {
      "sha": "d51f209e715740d21855d85c5c4538f13c1263c5",
      "filename": "gdb/dictionary.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/dictionary.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/dictionary.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dictionary.c?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -761,6 +761,13 @@ language_defn::search_name_hash (const char *string0) const\n \t    {\n \t      int c = string[2];\n \n+\t      if (c == 'B' && string[3] == '_')\n+\t\t{\n+\t\t  for (string += 4; ISDIGIT (*string); ++string)\n+\t\t    ;\n+\t\t  continue;\n+\t\t}\n+\n \t      if ((c < 'a' || c > 'z') && c != 'O')\n \t\treturn hash;\n \t      hash = 0;"
    },
    {
      "sha": "d5442f9a1d8c24267c75e2574dd6ec11cff80706",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-14  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/nested.exp: Add new tests.\n+\t* gdb.ada/nested/hello.adb (Fourth, Fifth): New procedures.\n+\n 2020-12-14  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.dwarf2/ada-thick-pointer.exp: New file."
    },
    {
      "sha": "74f9f1f87aed9f3bde4beaeba78b9148acef6b05",
      "filename": "gdb/testsuite/gdb.ada/nested.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/gdb.ada/nested.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/gdb.ada/nested.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/nested.exp?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -34,3 +34,18 @@ gdb_test \"break first\" \\\n          \"Breakpoint $any_nb at $any_addr: file .*hello.adb, line $any_nb.\" \\\n          \"break on nested function First\"\n \n+gdb_test \"break fourth\" \\\n+    \"Breakpoint $any_nb at $any_addr: file .*hello.adb, line $any_nb.\" \\\n+    \"break on nested function fourth\"\n+\n+gdb_test \"break hello.fourth\" \\\n+    \"Breakpoint $any_nb at $any_addr: file .*hello.adb, line $any_nb.\" \\\n+    \"full-qualified break on nested function fourth\"\n+\n+gdb_test \"break fifth\" \\\n+    \"Breakpoint $any_nb at $any_addr: file .*hello.adb, line $any_nb.\" \\\n+    \"break on nested function fifth\"\n+\n+gdb_test \"break hello.fourth.fifth\" \\\n+    \"Breakpoint $any_nb at $any_addr: file .*hello.adb, line $any_nb.\" \\\n+    \"full-qualified break on nested function fifth\""
    },
    {
      "sha": "10ec6bf8201a8f714fd8a4a7e3d58df178c776c9",
      "filename": "gdb/testsuite/gdb.ada/nested/hello.adb",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/gdb.ada/nested/hello.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/86b442599bca468f997a3f1f58cba68b752ef6b2/gdb/testsuite/gdb.ada/nested/hello.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/nested/hello.adb?ref=86b442599bca468f997a3f1f58cba68b752ef6b2",
      "patch": "@@ -31,6 +31,20 @@ procedure Hello is\n    end Third;\n \n begin\n-   Third;\n+   declare\n+      procedure Fourth is\n+      begin\n+         Third;\n+         declare\n+            procedure Fifth is\n+            begin\n+               Second;\n+            end Fifth;\n+         begin\n+            Fifth;\n+         end;\n+      end Fourth;\n+   begin\n+      Fourth;\n+   end;\n end Hello;\n-"
    }
  ]
}