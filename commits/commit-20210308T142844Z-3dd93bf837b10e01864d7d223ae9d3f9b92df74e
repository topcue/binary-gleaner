{
  "sha": "3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2RkOTNiZjgzN2IxMGUwMTg2NGQ3ZDIyM2FlOWQzZjliOTJkZjc0ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:44Z"
    },
    "message": "Remove some null checks\n\nWhen not parsing for completion, parse_expression ensures that the\nresulting expression has operations.  This patch removes a couple of\nunnecessary checks for this situation.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* printcmd.c (set_command): Remove null check.\n\t* value.c (init_if_undefined_command): Remove null check.",
    "tree": {
      "sha": "6f48c2db566069ae33c55e883994927dcc1b570c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f48c2db566069ae33c55e883994927dcc1b570c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9c79936b3df018166d53869f7f2bb2909f129e51",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c79936b3df018166d53869f7f2bb2909f129e51",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9c79936b3df018166d53869f7f2bb2909f129e51"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 20,
    "deletions": 16
  },
  "files": [
    {
      "sha": "2024f942ad498b59f019300167c5acb5c9be5c15",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* printcmd.c (set_command): Remove null check.\n+\t* value.c (init_if_undefined_command): Remove null check.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* parse.c (parser_state::push_symbol, parser_state::push_dollar):"
    },
    {
      "sha": "850890644aafd5bfe54410449aec197d6ff68257",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 14,
      "deletions": 15,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
      "patch": "@@ -1375,21 +1375,20 @@ set_command (const char *exp, int from_tty)\n {\n   expression_up expr = parse_expression (exp);\n \n-  if (expr->op != nullptr)\n-    switch (expr->op->opcode ())\n-      {\n-      case UNOP_PREINCREMENT:\n-      case UNOP_POSTINCREMENT:\n-      case UNOP_PREDECREMENT:\n-      case UNOP_POSTDECREMENT:\n-      case BINOP_ASSIGN:\n-      case BINOP_ASSIGN_MODIFY:\n-      case BINOP_COMMA:\n-\tbreak;\n-      default:\n-\twarning\n-\t  (_(\"Expression is not an assignment (and might have no effect)\"));\n-      }\n+  switch (expr->op->opcode ())\n+    {\n+    case UNOP_PREINCREMENT:\n+    case UNOP_POSTINCREMENT:\n+    case UNOP_PREDECREMENT:\n+    case UNOP_POSTDECREMENT:\n+    case BINOP_ASSIGN:\n+    case BINOP_ASSIGN_MODIFY:\n+    case BINOP_COMMA:\n+      break;\n+    default:\n+      warning\n+\t(_(\"Expression is not an assignment (and might have no effect)\"));\n+    }\n \n   evaluate_expression (expr.get ());\n }"
    },
    {
      "sha": "9527186f57afeb3a88cb8e605a82fa7cdd6d77cf",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3dd93bf837b10e01864d7d223ae9d3f9b92df74e/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=3dd93bf837b10e01864d7d223ae9d3f9b92df74e",
      "patch": "@@ -2015,7 +2015,7 @@ init_if_undefined_command (const char* args, int from_tty)\n   /* Validate the expression.\n      Was the expression an assignment?\n      Or even an expression at all?  */\n-  if (expr->op == nullptr || expr->first_opcode () != BINOP_ASSIGN)\n+  if (expr->first_opcode () != BINOP_ASSIGN)\n     error (_(\"Init-if-undefined requires an assignment expression.\"));\n \n   /* Extract the variable from the parsed expression.  */"
    }
  ]
}