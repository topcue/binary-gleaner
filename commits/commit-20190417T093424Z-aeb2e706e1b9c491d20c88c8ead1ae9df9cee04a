{
  "sha": "aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWViMmU3MDZlMWI5YzQ5MWQyMGM4OGM4ZWFkMWFlOWRmOWNlZTA0YQ==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-12T14:49:11Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-04-17T09:34:24Z"
    },
    "message": "gdbserver: Add debug-file option\n\nAdd command line option to send all debug output to a given file.\nAlways default back to stderr.\n\nAdd matching monitor command. Add documentation.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo\n\t(Other Command-Line Arguments for gdbserver): Add debug-file\n\toption.\n\t(Monitor Commands for gdbserver): Likewise.\n\t(gdbserver man): Likewise.\n\ngdb/gdbserver/ChangeLog:\n\n\t* debug.c (debug_set_output): New function.\n\t(debug_vprintf): Send output to debug_file.\n\t(debug_flush): Likewise.\n\t* debug.h (debug_set_output): New declaration.\n\t* server.c (handle_monitor_command): Add debug-file option.\n\t(captured_main): Likewise.",
    "tree": {
      "sha": "1057f29c9095e72c43efa41fe631c7c1f27fff5a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1057f29c9095e72c43efa41fe631c7c1f27fff5a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c1bc0935a4afb513486dc0a479cd57c0924b677c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1bc0935a4afb513486dc0a479cd57c0924b677c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c1bc0935a4afb513486dc0a479cd57c0924b677c"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 79,
    "deletions": 5
  },
  "files": [
    {
      "sha": "64073278fa9115905e5c2a8840c28706ed24ce95",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* gdb.texinfo (Other Command-Line Arguments for gdbserver)\n+\t(Monitor Commands for gdbserver)\n+\t(gdbserver man): Add debug-file option.\n+\n 2019-04-08  Kevin Buettner  <kevinb@redhat.com>\n \n \t* python.texi (Inferiors In Python): Rename"
    },
    {
      "sha": "a3a5f3e28cc374d1b2946d84a7c1dddd41ea0d22",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -21332,8 +21332,12 @@ The @option{--debug} option tells @code{gdbserver} to display extra\n status information about the debugging process.\n @cindex @option{--remote-debug}, @code{gdbserver} option\n The @option{--remote-debug} option tells @code{gdbserver} to display\n-remote protocol debug output.  These options are intended for\n-@code{gdbserver} development and for bug reports to the developers.\n+remote protocol debug output.\n+@cindex @option{--debug-file}, @code{gdbserver} option\n+@cindex @code{gdbserver}, send all debug output to a single file\n+The @option{--debug-file=@var{filename}} option tells @code{gdbserver} to\n+write any debug output to the given @var{filename}.  These options are intended\n+for @code{gdbserver} development and for bug reports to the developers.\n \n @cindex @option{--debug-format}, @code{gdbserver} option\n The @option{--debug-format=option1[,option2,...]} option tells\n@@ -21433,6 +21437,10 @@ Disable or enable general debugging messages.\n Disable or enable specific debugging messages associated with the remote\n protocol (@pxref{Remote Protocol}).\n \n+@item monitor set debug-file filename\n+@itemx monitor set debug-file\n+Send any debug output to the given file, or to stderr.\n+\n @item monitor set debug-format option1@r{[},option2,...@r{]}\n Specify additional text to add to debugging messages.\n Possible options are:\n@@ -44563,6 +44571,11 @@ Instruct @code{gdbserver} to display remote protocol debug output.\n This option is intended for @code{gdbserver} development and for bug reports to\n the developers.\n \n+@item --debug-file=@var{filename}\n+Instruct @code{gdbserver} to send any debug output to the given @var{filename}.\n+This option is intended for @code{gdbserver} development and for bug reports to\n+the developers.\n+\n @item --debug-format=option1@r{[},option2,...@r{]}\n Instruct @code{gdbserver} to include extra information in each line\n of debugging output."
    },
    {
      "sha": "d3380d614526ca00332edf7fbb47c482135035c1",
      "filename": "gdb/gdbserver/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/ChangeLog?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -1,3 +1,12 @@\n+2019-04-17  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* debug.c (debug_set_output): New function.\n+\t(debug_vprintf): Send output to debug_file.\n+\t(debug_flush): Likewise.\n+\t* debug.h (debug_set_output): New declaration.\n+\t* server.c (handle_monitor_command): Add debug-file option.\n+\t(captured_main): Likewise.\n+\n 2019-04-17  Alan Hayward  <alan.hayward@arm.com>\n \n \t* debug.c (remote_debug): Add definition."
    },
    {
      "sha": "d80cd5254051bc77aa6d84f6d03a9537b6ea2323",
      "filename": "gdb/gdbserver/debug.c",
      "status": "modified",
      "additions": 38,
      "deletions": 3,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/debug.c?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -23,13 +23,48 @@\n int remote_debug = 0;\n #endif\n \n+/* Output file for debugging.  Default to standard error.  */\n+FILE *debug_file = stderr;\n+\n /* Enable miscellaneous debugging output.  The name is historical - it\n    was originally used to debug LinuxThreads support.  */\n int debug_threads;\n \n /* Include timestamps in debugging output.  */\n int debug_timestamp;\n \n+#if !defined (IN_PROCESS_AGENT)\n+\n+/* See debug.h.  */\n+\n+void\n+debug_set_output (const char *new_debug_file)\n+{\n+  /* Close any existing file and reset to standard error.  */\n+  if (debug_file != stderr)\n+    {\n+      fclose (debug_file);\n+    }\n+  debug_file = stderr;\n+\n+  /* Catch empty filenames.  */\n+  if (new_debug_file == nullptr || strlen (new_debug_file) == 0)\n+    return;\n+\n+  FILE *fptr = fopen (new_debug_file, \"w\");\n+\n+  if (fptr == nullptr)\n+    {\n+      debug_printf (\"Cannot open %s for writing. %s. Switching to stderr.\\n\",\n+\t\t    new_debug_file, strerror (errno));\n+      return;\n+    }\n+\n+  debug_file = fptr;\n+}\n+\n+#endif\n+\n /* Print a debugging message.\n    If the text begins a new line it is preceded by a timestamp.\n    We don't get fancy with newline checking, we just check whether the\n@@ -50,11 +85,11 @@ debug_vprintf (const char *format, va_list ap)\n       seconds s = duration_cast<seconds> (now.time_since_epoch ());\n       microseconds us = duration_cast<microseconds> (now.time_since_epoch ()) - s;\n \n-      fprintf (stderr, \"%ld.%06ld \", (long) s.count (), (long) us.count ());\n+      fprintf (debug_file, \"%ld.%06ld \", (long) s.count (), (long) us.count ());\n     }\n #endif\n \n-  vfprintf (stderr, format, ap);\n+  vfprintf (debug_file, format, ap);\n \n #if !defined (IN_PROCESS_AGENT)\n   if (*format)\n@@ -69,7 +104,7 @@ debug_vprintf (const char *format, va_list ap)\n void\n debug_flush (void)\n {\n-  fflush (stderr);\n+  fflush (debug_file);\n }\n \n /* Notify the user that the code is entering FUNCTION_NAME."
    },
    {
      "sha": "f65c91c9ebc3bbc0b0dff8afc046b53343eaf07e",
      "filename": "gdb/gdbserver/debug.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/debug.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/debug.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/debug.h?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -21,6 +21,11 @@\n \n #if !defined (IN_PROCESS_AGENT)\n extern int remote_debug;\n+\n+/* Switch all debug output to DEBUG_FILE.  If DEBUG_FILE is nullptr or an\n+   empty string, or if the file cannot be opened, then debug output is sent to\n+   stderr.  */\n+void debug_set_output (const char *debug_file);\n #endif\n \n extern int debug_threads;"
    },
    {
      "sha": "36510ad1b2f1af84f3c67f6b65458aba3baeaf1f",
      "filename": "gdb/gdbserver/server.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/server.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a/gdb/gdbserver/server.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbserver/server.c?ref=aeb2e706e1b9c491d20c88c8ead1ae9df9cee04a",
      "patch": "@@ -1403,6 +1403,10 @@ handle_monitor_command (char *mon, char *own_buf)\n \t  write_enn (own_buf);\n \t}\n     }\n+  else if (strcmp (mon, \"set debug-file\") == 0)\n+    debug_set_output (nullptr);\n+  else if (startswith (mon, \"set debug-file \"))\n+    debug_set_output (mon + sizeof (\"set debug-file \") - 1);\n   else if (strcmp (mon, \"help\") == 0)\n     monitor_show_help ();\n   else if (strcmp (mon, \"exit\") == 0)\n@@ -3649,6 +3653,8 @@ captured_main (int argc, char *argv[])\n \t}\n       else if (strcmp (*next_arg, \"--remote-debug\") == 0)\n \tremote_debug = 1;\n+      else if (startswith (*next_arg, \"--debug-file=\"))\n+\tdebug_set_output ((*next_arg) + sizeof (\"--debug-file=\") -1);\n       else if (strcmp (*next_arg, \"--disable-packet\") == 0)\n \t{\n \t  gdbserver_show_disableable (stdout);"
    }
  ]
}