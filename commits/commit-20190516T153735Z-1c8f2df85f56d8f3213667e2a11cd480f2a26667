{
  "sha": "1c8f2df85f56d8f3213667e2a11cd480f2a26667",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWM4ZjJkZjg1ZjU2ZDhmMzIxMzY2N2UyYTExY2Q0ODBmMmEyNjY2Nw==",
  "commit": {
    "author": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T13:33:36Z"
    },
    "committer": {
      "name": "Andre Vieira",
      "email": "andre.simoesdiasvieira@arm.com",
      "date": "2019-05-16T15:37:35Z"
    },
    "message": "[PATCH 48/57][Arm][OBJDUMP] Add support for MVE instructions: vddup, vdwdup, vidup and viwdup\n\nopcodes/ChangeLog:\n2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\t    Michael Collison <michael.collison@arm.com>\n\n\t* arm-dis.c (enum mve_instructions): Add new instructions.\n\t(is_mve_encoding_conflict): Handle new instructions.\n\t(is_mve_unpredictable): Likewise.\n\t(print_mve_size): Likewise.\n\t(print_insn_mve): Likewise.",
    "tree": {
      "sha": "0f11b133b6ef16f5df26f40aabc20a650463268e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0f11b133b6ef16f5df26f40aabc20a650463268e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c8f2df85f56d8f3213667e2a11cd480f2a26667",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c8f2df85f56d8f3213667e2a11cd480f2a26667",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c8f2df85f56d8f3213667e2a11cd480f2a26667",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c8f2df85f56d8f3213667e2a11cd480f2a26667/comments",
  "author": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "avieira-arm",
    "id": 68072104,
    "node_id": "MDQ6VXNlcjY4MDcyMTA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/68072104?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/avieira-arm",
    "html_url": "https://github.com/avieira-arm",
    "followers_url": "https://api.github.com/users/avieira-arm/followers",
    "following_url": "https://api.github.com/users/avieira-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/avieira-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/avieira-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/avieira-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/avieira-arm/orgs",
    "repos_url": "https://api.github.com/users/avieira-arm/repos",
    "events_url": "https://api.github.com/users/avieira-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/avieira-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d3b6314397347943f40cdbf6efe34e209a162cc0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3b6314397347943f40cdbf6efe34e209a162cc0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3b6314397347943f40cdbf6efe34e209a162cc0"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 96,
    "deletions": 1
  },
  "files": [
    {
      "sha": "23cff2788f4609ba94f665f5003ae6e009a11a29",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c8f2df85f56d8f3213667e2a11cd480f2a26667/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c8f2df85f56d8f3213667e2a11cd480f2a26667/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=1c8f2df85f56d8f3213667e2a11cd480f2a26667",
      "patch": "@@ -1,3 +1,12 @@\n+2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\t    Michael Collison <michael.collison@arm.com>\n+\n+\t* arm-dis.c (enum mve_instructions): Add new instructions.\n+\t(is_mve_encoding_conflict): Handle new instructions.\n+\t(is_mve_unpredictable): Likewise.\n+\t(print_mve_size): Likewise.\n+\t(print_insn_mve): Likewise.\n+\n 2019-05-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Michael Collison <michael.collison@arm.com>\n "
    },
    {
      "sha": "586e0012968893346d45c8919b141dea7b0bdc42",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 87,
      "deletions": 1,
      "changes": 88,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c8f2df85f56d8f3213667e2a11cd480f2a26667/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c8f2df85f56d8f3213667e2a11cd480f2a26667/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=1c8f2df85f56d8f3213667e2a11cd480f2a26667",
      "patch": "@@ -175,6 +175,10 @@ enum mve_instructions\n   MVE_VQRDMULH_T2,\n   MVE_VQDMULH_T3,\n   MVE_VQRDMULH_T4,\n+  MVE_VDDUP,\n+  MVE_VDWDUP,\n+  MVE_VIWDUP,\n+  MVE_VIDUP,\n   MVE_NONE\n };\n \n@@ -1957,9 +1961,12 @@ static const struct opcode32 neon_opcodes[] =\n \t\t\tUNPREDICTABLE\n    %<bitfield>s\t\tprint size for vector predicate & non VMOV instructions\n    %<bitfield>i\t\tprint immediate for vstr/vldr reg +/- imm\n+   %<bitfield>h\t\tprint high half of 64-bit destination reg\n    %<bitfield>k\t\tprint immediate for vector conversion instruction\n+   %<bitfield>l\t\tprint low half of 64-bit destination reg\n+   %<bitfield>u\t\tprint immediate value for vddup/vdwdup\n    %<bitfield>x\t\tprint the bitfield in hex.\n- */\n+  */\n \n static const struct mopcode32 mve_opcodes[] =\n {\n@@ -2182,6 +2189,30 @@ static const struct mopcode32 mve_opcodes[] =\n    0xffb30040, 0xffb31c51,\n    \"vcvt%m%v.%s\\t%13-15,22Q, %1-3,5Q\"},\n \n+  /* Vector VDDUP.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VDDUP,\n+   0xee011f6e, 0xff811f7e,\n+   \"vddup%v.u%20-21s\\t%13-15,22Q, %17-19l, #%0,7u\"},\n+\n+  /* Vector VDWDUP.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VDWDUP,\n+   0xee011f60, 0xff811f70,\n+   \"vdwdup%v.u%20-21s\\t%13-15,22Q, %17-19l, %1-3h, #%0,7u\"},\n+\n+  /* Vector VIWDUP.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VIWDUP,\n+   0xee010f60, 0xff811f70,\n+   \"viwdup%v.u%20-21s\\t%13-15,22Q, %17-19l, %1-3h, #%0,7u\"},\n+\n+  /* Vector VIDUP.  */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VIDUP,\n+   0xee010f6e, 0xff811f7e,\n+   \"vidup%v.u%20-21s\\t%13-15,22Q, %17-19l, #%0,7u\"},\n+\n   /* Vector VLD2.  */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n    MVE_VLD2,\n@@ -4667,6 +4698,8 @@ is_mve_encoding_conflict (unsigned long given,\n       else\n \treturn FALSE;\n \n+    case MVE_VDDUP:\n+    case MVE_VIDUP:\n     case MVE_VQRDMLADH:\n     case MVE_VQDMLAH:\n     case MVE_VQRDMLAH:\n@@ -4794,6 +4827,14 @@ is_mve_encoding_conflict (unsigned long given,\n       else\n \treturn FALSE;\n \n+    case MVE_VDWDUP:\n+    case MVE_VIWDUP:\n+      if ((arm_decode_field (given, 20, 21) == 3)\n+\t  || (arm_decode_field (given, 1, 3) == 7))\n+\treturn TRUE;\n+      else\n+\treturn FALSE;\n+\n     default:\n       return FALSE;\n \n@@ -5545,6 +5586,16 @@ is_mve_unpredictable (unsigned long given, enum mve_instructions matched_insn,\n       else\n \treturn FALSE;\n \n+    case MVE_VDWDUP:\n+    case MVE_VIWDUP:\n+      if (arm_decode_field (given, 1, 3) == 6)\n+\t{\n+\t  *unpredictable_code = UNPRED_R13;\n+\t  return TRUE;\n+\t}\n+      else\n+\treturn FALSE;\n+\n     default:\n       return FALSE;\n     }\n@@ -6181,10 +6232,14 @@ print_mve_size (struct disassemble_info *info,\n     case MVE_VCMP_VEC_T4:\n     case MVE_VCMP_VEC_T5:\n     case MVE_VCMP_VEC_T6:\n+    case MVE_VDDUP:\n+    case MVE_VDWDUP:\n     case MVE_VHADD_T1:\n     case MVE_VHADD_T2:\n     case MVE_VHSUB_T1:\n     case MVE_VHSUB_T2:\n+    case MVE_VIDUP:\n+    case MVE_VIWDUP:\n     case MVE_VLD2:\n     case MVE_VLD4:\n     case MVE_VLDRB_GATHER_T1:\n@@ -7948,6 +8003,12 @@ print_insn_mve (struct disassemble_info *info, long given)\n \t\t\t    if (value == 1)\n \t\t\t      func (stream, \"a\");\n \t\t\t    break;\n+\t\t\t  case 'h':\n+\t\t\t    {\n+\t\t\t      unsigned int odd_reg = (value << 1) | 1;\n+\t\t\t      func (stream, \"%s\", arm_regnames[odd_reg]);\n+\t\t\t    }\n+\t\t\t    break;\n \t\t\t  case 'i':\n \t\t\t    {\n \t\t\t      unsigned long imm\n@@ -7975,6 +8036,31 @@ print_insn_mve (struct disassemble_info *info, long given)\n \t\t\t  case 'k':\n \t\t\t    func (stream, \"%lu\", 64 - value);\n \t\t\t    break;\n+\t\t\t  case 'l':\n+\t\t\t    {\n+\t\t\t      unsigned int even_reg = value << 1;\n+\t\t\t      func (stream, \"%s\", arm_regnames[even_reg]);\n+\t\t\t    }\n+\t\t\t    break;\n+\t\t\t  case 'u':\n+\t\t\t    switch (value)\n+\t\t\t      {\n+\t\t\t      case 0:\n+\t\t\t\tfunc (stream, \"1\");\n+\t\t\t\tbreak;\n+\t\t\t      case 1:\n+\t\t\t\tfunc (stream, \"2\");\n+\t\t\t\tbreak;\n+\t\t\t      case 2:\n+\t\t\t\tfunc (stream, \"4\");\n+\t\t\t\tbreak;\n+\t\t\t      case 3:\n+\t\t\t\tfunc (stream, \"8\");\n+\t\t\t\tbreak;\n+\t\t\t      default:\n+\t\t\t\tbreak;\n+\t\t\t      }\n+\t\t\t    break;\n \t\t\t  case 'r':\n \t\t\t    func (stream, \"%s\", arm_regnames[value]);\n \t\t\t    break;"
    }
  ]
}