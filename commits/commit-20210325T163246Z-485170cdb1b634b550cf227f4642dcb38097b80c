{
  "sha": "485170cdb1b634b550cf227f4642dcb38097b80c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDg1MTcwY2RiMWI2MzRiNTUwY2YyMjdmNDY0MmRjYjM4MDk3YjgwYw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:46Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-25T16:32:46Z"
    },
    "message": "libctf, dump: do not emit size or alignment if it would error\n\nWhen we dump normal types, we emit their size and/or alignment:\nbut size and alignment dumping can return errors if the type is\npart of a chain that terminates in a forward.\n\nEmitting 0xffffffff as a size or alignment is unhelpful, so simply\nskip emitting this info for any type for which size or alignment\nchecks return an error, no matter what the error is.\n\nlibctf/ChangeLog\n2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dump.c (ctf_dump_format_type): Don't emit size or alignment\n\ton error.",
    "tree": {
      "sha": "3492de973db099fd12f05c3b288e698924fc4dfd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3492de973db099fd12f05c3b288e698924fc4dfd"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/485170cdb1b634b550cf227f4642dcb38097b80c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/485170cdb1b634b550cf227f4642dcb38097b80c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/485170cdb1b634b550cf227f4642dcb38097b80c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/485170cdb1b634b550cf227f4642dcb38097b80c/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ba3c61fc5854059a71baee9cb2b951275bf3cb7b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba3c61fc5854059a71baee9cb2b951275bf3cb7b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ba3c61fc5854059a71baee9cb2b951275bf3cb7b"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 12,
    "deletions": 5
  },
  "files": [
    {
      "sha": "909c4fc87b5c2806daecd141b27a11f481ac00c7",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/485170cdb1b634b550cf227f4642dcb38097b80c/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/485170cdb1b634b550cf227f4642dcb38097b80c/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=485170cdb1b634b550cf227f4642dcb38097b80c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Don't emit size or alignment\n+\ton error.\n+\n 2021-03-21  Alan Modra  <amodra@gmail.com>\n \n \t* ctf-impl.h: Include string.h."
    },
    {
      "sha": "bd9b50d94790bf7cb926ec398a84f64625c592f5",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/485170cdb1b634b550cf227f4642dcb38097b80c/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/485170cdb1b634b550cf227f4642dcb38097b80c/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=485170cdb1b634b550cf227f4642dcb38097b80c",
      "patch": "@@ -100,6 +100,7 @@ ctf_dump_format_type (ctf_dict_t *fp, ctf_id_t id, int flag)\n       ctf_encoding_t ep;\n       ctf_arinfo_t ar;\n       int kind, unsliced_kind;\n+      ssize_t size, align;\n       const char *nonroot_leader = \"\";\n       const char *nonroot_trailer = \"\";\n       const char *idstr = \"\";\n@@ -180,21 +181,22 @@ ctf_dump_format_type (ctf_dict_t *fp, ctf_id_t id, int flag)\n \t  bit = NULL;\n \t}\n \n-      if (kind != CTF_K_FUNCTION && kind != CTF_K_FORWARD)\n+      size = ctf_type_size (fp, id);\n+      if (kind != CTF_K_FUNCTION && size >= 0)\n \t{\n-\t  if (asprintf (&bit, \" (size 0x%lx)\",\n-\t\t\t(unsigned long) ctf_type_size (fp, id)) < 0)\n+\t  if (asprintf (&bit, \" (size 0x%lx)\", (unsigned long int) size) < 0)\n \t    goto oom;\n \n \t  str = str_append (str, bit);\n \t  free (bit);\n \t  bit = NULL;\n \t}\n \n-      if (kind != CTF_K_FORWARD)\n+      align = ctf_type_align (fp, id);\n+      if (align >= 0)\n \t{\n \t  if (asprintf (&bit, \" (aligned at 0x%lx)\",\n-\t\t\t(unsigned long) ctf_type_align (fp, id)) < 0)\n+\t\t\t(unsigned long int) align) < 0)\n \t    goto oom;\n \n \t  str = str_append (str, bit);"
    }
  ]
}