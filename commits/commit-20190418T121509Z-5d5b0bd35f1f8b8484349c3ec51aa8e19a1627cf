{
  "sha": "5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWQ1YjBiZDM1ZjFmOGI4NDg0MzQ5YzNlYzUxYWE4ZTE5YTE2MjdjZg==",
  "commit": {
    "author": {
      "name": "Jozef Lawrynowicz",
      "email": "jozef.l@mittosystems.com",
      "date": "2019-04-18T12:15:09Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-04-18T12:15:09Z"
    },
    "message": "MSP430 Assembler: Define symbols for functions to run through.\n\ngas\t* config/tc-msp430.c (msp430_make_init_symbols): Define\n\t__crt0_run_{preinit,init,fini}_array symbols if\n\t.{preinit,init,fini}_array sections exist.\n\t* testsuite/gas/msp430/fini-array.d: New test.\n\t* testsuite/gas/msp430/init-array.d: New test.\n\t* testsuite/gas/msp430/preinit-array.d: New test.\n\t* testsuite/gas/msp430/fini-array.s: New test source.\n\t* testsuite/gas/msp430/init-array.s: New test source.\n\t* testsuite/gas/msp430/preinit-array.s: New test source.\n\t* testsuite/gas/msp430/msp430.exp: Add new tests to driver.",
    "tree": {
      "sha": "9d4f8ffc9ed00dba1d8a945c2614264dd3cdb945",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d4f8ffc9ed00dba1d8a945c2614264dd3cdb945"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/comments",
  "author": {
    "login": "jozefl-mitto",
    "id": 36524004,
    "node_id": "MDQ6VXNlcjM2NTI0MDA0",
    "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jozefl-mitto",
    "html_url": "https://github.com/jozefl-mitto",
    "followers_url": "https://api.github.com/users/jozefl-mitto/followers",
    "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}",
    "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions",
    "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs",
    "repos_url": "https://api.github.com/users/jozefl-mitto/repos",
    "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "05be37e5c34b822ff3032791c2415e652fbf9fbf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/05be37e5c34b822ff3032791c2415e652fbf9fbf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/05be37e5c34b822ff3032791c2415e652fbf9fbf"
    }
  ],
  "stats": {
    "total": 147,
    "additions": 141,
    "deletions": 6
  },
  "files": [
    {
      "sha": "922ffebcc0f7bc40100d87b036d04895d0e523c9",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -1,3 +1,16 @@\n+2019-04-18  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/tc-msp430.c (msp430_make_init_symbols): Define\n+\t__crt0_run_{preinit,init,fini}_array symbols if\n+\t.{preinit,init,fini}_array sections exist.\n+\t* testsuite/gas/msp430/fini-array.d: New test.\n+\t* testsuite/gas/msp430/init-array.d: New test.\n+\t* testsuite/gas/msp430/preinit-array.d: New test.\n+\t* testsuite/gas/msp430/fini-array.s: New test source.\n+\t* testsuite/gas/msp430/init-array.s: New test source.\n+\t* testsuite/gas/msp430/preinit-array.s: New test source.\n+\t* testsuite/gas/msp430/msp430.exp: Add new tests to driver.\n+\n 2019-04-17  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* config/tc-msp430.c (msp430_make_init_symbols): Define __crt0_init_bss"
    },
    {
      "sha": "5821b1c81108de78fcf6930f2d04d350fad7aa88",
      "filename": "gas/config/tc-msp430.c",
      "status": "modified",
      "additions": 38,
      "deletions": 6,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/config/tc-msp430.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/config/tc-msp430.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-msp430.c?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -209,9 +209,9 @@ static struct hash_control *msp430_hash;\n #define CEBL\t4\n \n /* Length.  */\n-#define STATE_BITS10\t1\t/* wild guess. short jump */\n-#define STATE_WORD\t2\t/* 2 bytes pc rel. addr. more */\n-#define STATE_UNDEF\t3\t/* cannot handle this yet. convert to word mode */\n+#define STATE_BITS10\t1\t/* Wild guess. short jump.  */\n+#define STATE_WORD\t2\t/* 2 bytes pc rel. addr. more.  */\n+#define STATE_UNDEF\t3\t/* Cannot handle this yet. convert to word mode.  */\n \n #define ENCODE_RELAX(what,length) (((what) << 2) + (length))\n #define RELAX_STATE(s)            ((s) & 3)\n@@ -415,6 +415,7 @@ parse_exp (char * s, expressionS * op)\n   expression (op);\n   if (op->X_op == O_absent)\n     as_bad (_(\"missing operand\"));\n+\n   /* Our caller is likely to check that the entire expression was parsed.\n      If we have found a hex constant with an 'h' suffix, ilp will be left\n      pointing at the 'h', so skip it here.  */\n@@ -1520,6 +1521,32 @@ msp430_make_init_symbols (const char * name)\n       || strncmp (name, \".either.bss\", 11) == 0\n       || upper_data_region_in_use)\n     (void) symbol_find_or_make (\"__crt0_init_highbss\");\n+\n+  /* The following symbols are for the crt0 functions that run through\n+     the different .*_array sections and call the functions placed there.\n+     - init_array stores global static C++ constructors to run before main.\n+     - preinit_array is not expected to ever be used for MSP430.\n+     GCC only places initialization functions for runtime \"sanitizers\"\n+     (i.e. {a,l,t,u}san) and \"virtual table verification\" in preinit_array.\n+     - fini_array stores global static C++ destructors to run after calling\n+     exit() or returning from main.\n+     __crt0_run_array is required to actually call the functions in the above\n+     arrays.  */\n+  if (strncmp (name, \".init_array\", 11) == 0)\n+    {\n+      (void) symbol_find_or_make (\"__crt0_run_init_array\");\n+      (void) symbol_find_or_make (\"__crt0_run_array\");\n+    }\n+  else if (strncmp (name, \".preinit_array\", 14) == 0)\n+    {\n+      (void) symbol_find_or_make (\"__crt0_run_preinit_array\");\n+      (void) symbol_find_or_make (\"__crt0_run_array\");\n+    }\n+  else if (strncmp (name, \".fini_array\", 11) == 0)\n+    {\n+      (void) symbol_find_or_make (\"__crt0_run_fini_array\");\n+      (void) symbol_find_or_make (\"__crt0_run_array\");\n+    }\n }\n \n static void\n@@ -2003,8 +2030,8 @@ msp430_srcoperand (struct msp430_operand_s * op,\n     {\n       char *h = l;\n \n-      op->reg = 2;\t\t/* reg 2 in absolute addr mode.  */\n-      op->am = 1;\t\t/* mode As == 01 bin.  */\n+      op->reg = 2;\t\t/* Reg 2 in absolute addr mode.  */\n+      op->am = 1;\t\t/* Mode As == 01 bin.  */\n       op->ol = 1;\t\t/* Immediate value followed by instruction.  */\n       __tl = h + 1;\n       end = parse_exp (__tl, &(op->exp));\n@@ -2554,6 +2581,7 @@ gen_nop (void)\n }\n \n /* Insert/inform about adding a NOP if this insn enables interrupts.  */\n+\n static void\n warn_eint_nop (bfd_boolean prev_insn_is_nop, bfd_boolean prev_insn_is_dint)\n {\n@@ -2564,6 +2592,7 @@ warn_eint_nop (bfd_boolean prev_insn_is_nop, bfd_boolean prev_insn_is_dint)\n       /* 430 ISA does not require a NOP before EINT.  */\n       || (! target_is_430x ()))\n     return;\n+\n   if (gen_interrupt_nops)\n     {\n       gen_nop ();\n@@ -2576,6 +2605,7 @@ warn_eint_nop (bfd_boolean prev_insn_is_nop, bfd_boolean prev_insn_is_dint)\n \n /* Use when unsure what effect the insn will have on the interrupt status,\n    to insert/warn about adding a NOP before the current insn.  */\n+\n static void\n warn_unsure_interrupt (bfd_boolean prev_insn_is_nop,\n \t\t       bfd_boolean prev_insn_is_dint)\n@@ -2587,6 +2617,7 @@ warn_unsure_interrupt (bfd_boolean prev_insn_is_nop,\n       /* 430 ISA does not require a NOP before EINT or DINT.  */\n       || (! target_is_430x ()))\n     return;\n+\n   if (gen_interrupt_nops)\n     {\n       gen_nop ();\n@@ -2856,7 +2887,8 @@ msp430_operands (struct msp430_opcode_s * opcode, char * line)\n \n   switch (fmt)\n     {\n-    case 0:\t\t\t/* Emulated.  */\n+    case 0:\n+      /* Emulated.  */\n       switch (opcode->insn_opnumb)\n \t{\n \tcase 0:"
    },
    {
      "sha": "c9cf572b67f3e87259bce006512451906fb31d24",
      "filename": "gas/testsuite/gas/msp430/fini-array.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/fini-array.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/fini-array.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/fini-array.d?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,7 @@\n+#objdump: -t\n+#name: Check symbols to run .fini_array functions have been defined\n+#...\n+.*__crt0_run_fini_array.*\n+#...\n+.*__crt0_run_array.*\n+#pass"
    },
    {
      "sha": "54d1ad22a445dab5f5bd340c17ed8894d280bf88",
      "filename": "gas/testsuite/gas/msp430/fini-array.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/fini-array.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/fini-array.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/fini-array.s?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,22 @@\n+\t.file\t\"main.c\"\n+  .section  .fini_array,\"aw\"\n+  .balign 2\n+  .short  42\n+.text\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   0\n+; framesize_outgoing: 0\n+; framesize:          0\n+; elim ap -> fp       2\n+; elim fp -> sp       0\n+; saved regs:(none)\n+\t; start of prologue\n+\t; end of prologue\n+.L2:\n+\tBR\t#.L2\n+\t.size\tmain, .-main"
    },
    {
      "sha": "d3fa5979c8bf5e8c1fbb78ac3984ca6d37f2b941",
      "filename": "gas/testsuite/gas/msp430/init-array.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/init-array.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/init-array.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/init-array.d?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,7 @@\n+#objdump: -t\n+#name: Check symbols to run .init_array functions have been defined\n+#...\n+.*__crt0_run_init_array.*\n+#...\n+.*__crt0_run_array.*\n+#pass"
    },
    {
      "sha": "b049ec449811290fa76703c6c3d98ed7726f82fd",
      "filename": "gas/testsuite/gas/msp430/init-array.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/init-array.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/init-array.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/init-array.s?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,22 @@\n+\t.file\t\"main.c\"\n+  .section  .init_array,\"aw\"\n+  .balign 2\n+  .short  42\n+.text\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   0\n+; framesize_outgoing: 0\n+; framesize:          0\n+; elim ap -> fp       2\n+; elim fp -> sp       0\n+; saved regs:(none)\n+\t; start of prologue\n+\t; end of prologue\n+.L2:\n+\tBR\t#.L2\n+\t.size\tmain, .-main"
    },
    {
      "sha": "9c7a1975f9418f8f65c84317ade785c84ad62efa",
      "filename": "gas/testsuite/gas/msp430/msp430.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/msp430.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/msp430.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/msp430.exp?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -43,4 +43,7 @@ if [expr [istarget \"msp430-*-*\"]]  then {\n     run_dump_test \"nop-unknown-intr-430\"\n     run_dump_test \"nop-unknown-intr-430x\"\n     run_dump_test \"nop-unknown-intr-430x-ignore\"\n+    run_dump_test \"preinit-array\"\n+    run_dump_test \"init-array\"\n+    run_dump_test \"fini-array\"\n }"
    },
    {
      "sha": "8401adcd065e9138522c4762114a0d1833e3a650",
      "filename": "gas/testsuite/gas/msp430/preinit-array.d",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/preinit-array.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/preinit-array.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/preinit-array.d?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,7 @@\n+#objdump: -t\n+#name: Check symbols to run .preinit_array functions have been defined\n+#...\n+.*__crt0_run_preinit_array.*\n+#...\n+.*__crt0_run_array.*\n+#pass"
    },
    {
      "sha": "563326aef80ecf6879f4298b12c88f1c0f929aaf",
      "filename": "gas/testsuite/gas/msp430/preinit-array.s",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/preinit-array.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf/gas/testsuite/gas/msp430/preinit-array.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/msp430/preinit-array.s?ref=5d5b0bd35f1f8b8484349c3ec51aa8e19a1627cf",
      "patch": "@@ -0,0 +1,22 @@\n+\t.file\t\"main.c\"\n+  .section  .preinit_array,\"aw\"\n+  .balign 2\n+  .short  42\n+.text\n+\t.balign 2\n+\t.global\tmain\n+\t.type\tmain, @function\n+main:\n+; start of function\n+; framesize_regs:     0\n+; framesize_locals:   0\n+; framesize_outgoing: 0\n+; framesize:          0\n+; elim ap -> fp       2\n+; elim fp -> sp       0\n+; saved regs:(none)\n+\t; start of prologue\n+\t; end of prologue\n+.L2:\n+\tBR\t#.L2\n+\t.size\tmain, .-main"
    }
  ]
}