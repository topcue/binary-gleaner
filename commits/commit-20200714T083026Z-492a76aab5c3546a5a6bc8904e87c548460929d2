{
  "sha": "492a76aab5c3546a5a6bc8904e87c548460929d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDkyYTc2YWFiNWMzNTQ2YTVhNmJjODkwNGU4N2M1NDg0NjA5MjlkMg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:30:26Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:30:26Z"
    },
    "message": "x86: replace %LW by %DQ\n\nThis makes more visible what the two alternatives will be that result\nfrom this macro.",
    "tree": {
      "sha": "3ff8532c3273a951901deb3869125eaad101aee4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3ff8532c3273a951901deb3869125eaad101aee4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/492a76aab5c3546a5a6bc8904e87c548460929d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/492a76aab5c3546a5a6bc8904e87c548460929d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/492a76aab5c3546a5a6bc8904e87c548460929d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/492a76aab5c3546a5a6bc8904e87c548460929d2/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "059edf8b977782457c358b408a71caba4b0311e4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/059edf8b977782457c358b408a71caba4b0311e4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/059edf8b977782457c358b408a71caba4b0311e4"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 59,
    "deletions": 52
  },
  "files": [
    {
      "sha": "e54596ebf9f36ae3df452e231d695ef378b83c44",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=492a76aab5c3546a5a6bc8904e87c548460929d2",
      "patch": "@@ -1,3 +1,10 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (dis386): \"LW\" description now applies to \"DQ\".\n+\t(putop): Handle \"DQ\". Don't handle \"LW\" anymore.\n+\t(prefix_table, mod_table): Replace %LW by %DQ.\n+\t* i386-dis-evex-len.h, i386-dis-evex-prefix.h: Likewise.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (OP_E_memory): Move xmm_mw_mode, xmm_mb_mode,"
    },
    {
      "sha": "028fd1270a2e4bee12c2324886df57f9f4f7dfa7",
      "filename": "opcodes/i386-dis-evex-len.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis-evex-len.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis-evex-len.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-len.h?ref=492a76aab5c3546a5a6bc8904e87c548460929d2",
      "patch": "@@ -81,8 +81,8 @@ static const struct dis386 evex_len_table[][3] = {\n   /* EVEX_LEN_0F3836_P_2 */\n   {\n     { Bad_Opcode },\n-    { \"vperm%LW\",\t{ XM, Vex, EXx }, 0 },\n-    { \"vperm%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vperm%DQ\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vperm%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n \n   /* EVEX_LEN_0F385A_P_2_W_0_M_0 */"
    },
    {
      "sha": "8e2c361539b38135e9e25cf849dc2ba3b7e8ae3b",
      "filename": "opcodes/i386-dis-evex-prefix.h",
      "status": "modified",
      "additions": 41,
      "deletions": 41,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis-evex-prefix.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis-evex-prefix.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis-evex-prefix.h?ref=492a76aab5c3546a5a6bc8904e87c548460929d2",
      "patch": "@@ -180,13 +180,13 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpror%LW\",\t{ Vex, EXx, Ib }, 0 },\n+    { \"vpror%DQ\",\t{ Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F72_REG_1 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vprol%LW\",\t{ Vex, EXx, Ib }, 0 },\n+    { \"vprol%DQ\",\t{ Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F72_REG_2 */\n   {\n@@ -198,7 +198,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsra%LW\",\t{ Vex, EXx, Ib }, 0 },\n+    { \"vpsra%DQ\",\t{ Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F72_REG_6 */\n   {\n@@ -318,19 +318,19 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpand%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpand%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0FDF */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpandn%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpandn%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0FE2 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsra%LW\",\t{ XM, Vex, EXxmm }, 0 },\n+    { \"vpsra%DQ\",\t{ XM, Vex, EXxmm }, 0 },\n   },\n   /* PREFIX_EVEX_0FE6 */\n   {\n@@ -349,13 +349,13 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpor%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpor%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0FEF */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpxor%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpxor%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F380D */\n   {\n@@ -391,13 +391,13 @@\n   {\n     { Bad_Opcode },\n     { VEX_W_TABLE (EVEX_W_0F3814_P_1) },\n-    { \"vprorv%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vprorv%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3815 */\n   {\n     { Bad_Opcode },\n     { VEX_W_TABLE (EVEX_W_0F3815_P_1) },\n-    { \"vprolv%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vprolv%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3816 */\n   {\n@@ -480,8 +480,8 @@\n   /* PREFIX_EVEX_0F3827 */\n   {\n     { Bad_Opcode },\n-    { \"vptestnm%LW\",\t{ XMask, Vex, EXx }, 0 },\n-    { \"vptestm%LW\",\t{ XMask, Vex, EXx }, 0 },\n+    { \"vptestnm%DQ\",\t{ XMask, Vex, EXx }, 0 },\n+    { \"vptestm%DQ\",\t{ XMask, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3828 */\n   {\n@@ -564,14 +564,14 @@\n   /* PREFIX_EVEX_0F3838 */\n   {\n     { Bad_Opcode },\n-    { \"vpmovm2%LW\",\t{ XM, MaskR }, 0 },\n+    { \"vpmovm2%DQ\",\t{ XM, MaskR }, 0 },\n     { \"vpminsb\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3839 */\n   {\n     { Bad_Opcode },\n-    { \"vpmov%LW2m\",\t{ XMask, EXx }, 0 },\n-    { \"vpmins%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpmov%DQ2m\",\t{ XMask, EXx }, 0 },\n+    { \"vpmins%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F383A */\n   {\n@@ -583,25 +583,25 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpminu%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpminu%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F383D */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmaxs%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpmaxs%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F383F */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmaxu%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpmaxu%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3840 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpmull%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpmull%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3842 */\n   {\n@@ -619,25 +619,25 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vplzcnt%LW\",\t{ XM, EXx }, 0 },\n+    { \"vplzcnt%DQ\",\t{ XM, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3845 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsrlv%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpsrlv%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3846 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsrav%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpsrav%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3847 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsllv%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpsllv%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F384C */\n   {\n@@ -699,7 +699,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpopcnt%LW\",\t{ XM, EXx }, 0 },\n+    { \"vpopcnt%DQ\",\t{ XM, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3859 */\n   {\n@@ -735,7 +735,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpblendm%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpblendm%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3865 */\n   {\n@@ -754,7 +754,7 @@\n     { Bad_Opcode },\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vp2intersect%LW\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n+    { \"vp2intersect%DQ\", { XMask, Vex, EXx, EXxEVexS }, 0 },\n   },\n   /* PREFIX_EVEX_0F3870 */\n   {\n@@ -766,7 +766,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpshldv%LW\",  { XM, Vex, EXx }, 0 },\n+    { \"vpshldv%DQ\",  { XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3872 */\n   {\n@@ -779,7 +779,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpshrdv%LW\",  { XM, Vex, EXx }, 0 },\n+    { \"vpshrdv%DQ\",  { XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3875 */\n   {\n@@ -791,7 +791,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpermi2%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpermi2%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F3877 */\n   {\n@@ -827,7 +827,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpermt2%LW\",\t{ XM, Vex, EXx }, 0 },\n+    { \"vpermt2%DQ\",\t{ XM, Vex, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F387F */\n   {\n@@ -851,7 +851,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpexpand%LW\",\t{ XM, EXEvexXGscat }, 0 },\n+    { \"vpexpand%DQ\",\t{ XM, EXEvexXGscat }, 0 },\n   },\n   /* PREFIX_EVEX_0F388A */\n   {\n@@ -863,7 +863,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpcompress%LW\",\t{ EXEvexXGscat, XM }, 0 },\n+    { \"vpcompress%DQ\",\t{ EXEvexXGscat, XM }, 0 },\n   },\n   /* PREFIX_EVEX_0F388D */\n   {\n@@ -881,7 +881,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpgatherd%LW\",\t{ XM, MVexVSIBDWpX }, 0 },\n+    { \"vpgatherd%DQ\",\t{ XM, MVexVSIBDWpX }, 0 },\n   },\n   /* PREFIX_EVEX_0F3891 */\n   {\n@@ -919,7 +919,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpscatterd%LW\",\t{ MVexVSIBDWpX, XM }, 0 },\n+    { \"vpscatterd%DQ\",\t{ MVexVSIBDWpX, XM }, 0 },\n   },\n   /* PREFIX_EVEX_0F38A1 */\n   {\n@@ -969,7 +969,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpconflict%LW\",\t{ XM, EXx }, 0 },\n+    { \"vpconflict%DQ\",\t{ XM, EXx }, 0 },\n   },\n   /* PREFIX_EVEX_0F38C6_REG_1 */\n   {\n@@ -1065,7 +1065,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"valign%LW\",\t{ XM, Vex, EXx, Ib }, 0 },\n+    { \"valign%DQ\",\t{ XM, Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A05 */\n   {\n@@ -1149,13 +1149,13 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpcmpu%LW\",\t{ XMask, Vex, EXx, VPCMP }, 0 },\n+    { \"vpcmpu%DQ\",\t{ XMask, Vex, EXx, VPCMP }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A1F */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpcmp%LW\",\t{ XMask, Vex, EXx, VPCMP }, 0 },\n+    { \"vpcmp%DQ\",\t{ XMask, Vex, EXx, VPCMP }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A20 */\n   {\n@@ -1185,7 +1185,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpternlog%LW\",\t{ XM, Vex, EXx, Ib }, 0 },\n+    { \"vpternlog%DQ\",\t{ XM, Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A26 */\n   {\n@@ -1305,7 +1305,7 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpshld%LW\",   { XM, Vex, EXx, Ib }, 0 },\n+    { \"vpshld%DQ\",   { XM, Vex, EXx, Ib }, 0 },\n   },\n   /* PREFIX_EVEX_0F3A72 */\n   {\n@@ -1317,5 +1317,5 @@\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpshrd%LW\",   { XM, Vex, EXx, Ib }, 0 },\n+    { \"vpshrd%DQ\",   { XM, Vex, EXx, Ib }, 0 },\n   },"
    },
    {
      "sha": "b0a6c63a3e098e966b82d0ac3e9eddf9cdd7cf07",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/492a76aab5c3546a5a6bc8904e87c548460929d2/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=492a76aab5c3546a5a6bc8904e87c548460929d2",
      "patch": "@@ -2287,7 +2287,7 @@ struct dis386 {\n    \"LB\" => print \"abs\" in 64bit mode and behave as 'B' otherwise\n    \"LS\" => print \"abs\" in 64bit mode and behave as 'S' otherwise\n    \"LV\" => print \"abs\" for 64bit operand and behave as 'S' otherwise\n-   \"LW\" => print 'd', 'q' depending on the VEX.W bit\n+   \"DQ\" => print 'd' or 'q' depending on the VEX.W bit\n    \"BW\" => print 'b' or 'w' depending on the EVEX.W bit\n    \"LP\" => print 'w' or 'l' ('d' in Intel mode) if instruction has\n \t   an operand size prefix, or suffix_always is true.  print\n@@ -5891,7 +5891,7 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsrlv%LW\", { XM, Vex, EXx }, 0 },\n+    { \"vpsrlv%DQ\", { XM, Vex, EXx }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3846 */\n@@ -5905,7 +5905,7 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpsllv%LW\", { XM, Vex, EXx }, 0 },\n+    { \"vpsllv%DQ\", { XM, Vex, EXx }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3849_X86_64 */\n@@ -5992,14 +5992,14 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpgatherd%LW\", { XM, MVexVSIBDWpX, Vex }, 0 },\n+    { \"vpgatherd%DQ\", { XM, MVexVSIBDWpX, Vex }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3891 */\n   {\n     { Bad_Opcode },\n     { Bad_Opcode },\n-    { \"vpgatherq%LW\", { XMGatherQ, MVexVSIBQWpX, VexGatherQ }, 0 },\n+    { \"vpgatherq%DQ\", { XMGatherQ, MVexVSIBQWpX, VexGatherQ }, 0 },\n   },\n \n   /* PREFIX_VEX_0F3892 */\n@@ -11477,11 +11477,11 @@ static const struct dis386 mod_table[][2] = {\n   },\n   {\n     /* MOD_VEX_0F388C_PREFIX_2 */\n-    { \"vpmaskmov%LW\",\t{ XM, Vex, Mx }, 0 },\n+    { \"vpmaskmov%DQ\",\t{ XM, Vex, Mx }, 0 },\n   },\n   {\n     /* MOD_VEX_0F388E_PREFIX_2 */\n-    { \"vpmaskmov%LW\",\t{ Mx, Vex, XM }, 0 },\n+    { \"vpmaskmov%DQ\",\t{ Mx, Vex, XM }, 0 },\n   },\n   {\n     /* MOD_VEX_W_0_0F3A30_P_2_LEN_0 */\n@@ -13636,6 +13636,8 @@ putop (const char *in_template, int sizeflag)\n \t\t    }\n \t\t}\n \t    }\n+\t  else if (l == 1 && last[0] == 'D')\n+\t    *obufp++ = vex.w ? 'q' : 'd';\n \t  else if (l == 1 && last[0] == 'L')\n \t    {\n \t      if (cond ? modrm.mod == 3 && !(sizeflag & SUFFIX_ALWAYS)\n@@ -13796,8 +13798,6 @@ putop (const char *in_template, int sizeflag)\n \t\tabort ();\n \t      if (last[0] == 'X')\n \t\t*obufp++ = vex.w ? 'd': 's';\n-\t      else if (last[0] == 'L')\n-\t\t*obufp++ = vex.w ? 'q': 'd';\n \t      else if (last[0] == 'B')\n \t\t*obufp++ = vex.w ? 'w': 'b';\n \t      else"
    }
  ]
}