{
  "sha": "8326546ebb46bba75a01e441960f408dd7ccdf2c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODMyNjU0NmViYjQ2YmJhNzVhMDFlNDQxOTYwZjQwOGRkN2NjZGYyYw==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-03-03T13:09:19Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-03T13:09:19Z"
    },
    "message": "Fix a potential illegal memory access in the Z80 assembler.\n\n\tPR 25604\n\t* config/tc-z80.c (contains_register): Prevent an illegal memory\n\taccess when checking an expression for a register name.",
    "tree": {
      "sha": "aac8145ec911372273633cbc84f602177c787139",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/aac8145ec911372273633cbc84f602177c787139"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8326546ebb46bba75a01e441960f408dd7ccdf2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8326546ebb46bba75a01e441960f408dd7ccdf2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8326546ebb46bba75a01e441960f408dd7ccdf2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8326546ebb46bba75a01e441960f408dd7ccdf2c/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d8e4137b5efc2dd5e99c45534cdccbdfcc814f1a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8e4137b5efc2dd5e99c45534cdccbdfcc814f1a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d8e4137b5efc2dd5e99c45534cdccbdfcc814f1a"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 30,
    "deletions": 8
  },
  "files": [
    {
      "sha": "00c56238cd7c17703a4c95a525b9db9af7b6e20c",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8326546ebb46bba75a01e441960f408dd7ccdf2c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8326546ebb46bba75a01e441960f408dd7ccdf2c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8326546ebb46bba75a01e441960f408dd7ccdf2c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-03  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25604\n+\t* config/tc-z80.c (contains_register): Prevent an illegal memory\n+\taccess when checking an expression for a register name.\n+\n 2020-03-03  Alan Modra  <amodra@gmail.com>\n \n \t* config/obj-coff.h: Remove vestiges of coff-m68k and pe-mips"
    },
    {
      "sha": "312a0fc034d91c52c5291ea31c98ad5c14c8a7f6",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 24,
      "deletions": 8,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8326546ebb46bba75a01e441960f408dd7ccdf2c/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8326546ebb46bba75a01e441960f408dd7ccdf2c/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=8326546ebb46bba75a01e441960f408dd7ccdf2c",
      "patch": "@@ -825,19 +825,35 @@ is_indir (const char *s)\n }\n \n /* Check whether a symbol involves a register.  */\n-static int\n+static bfd_boolean\n contains_register (symbolS *sym)\n {\n   if (sym)\n     {\n-      expressionS * ex = symbol_get_value_expression(sym);\n+      expressionS * ex = symbol_get_value_expression (sym);\n+\n+      switch (ex->X_op)\n+\t{\n+\tcase O_register:\n+\t  return TRUE;\n+\n+\tcase O_add:\n+\tcase O_subtract:\n+\t  if (ex->X_op_symbol && contains_register (ex->X_op_symbol))\n+\t    return TRUE;\n+\t  /* Fall through.  */\n+\tcase O_uminus:\n+\tcase O_symbol:\n+\t  if (ex->X_add_symbol && contains_register (ex->X_add_symbol))\n+\t    return TRUE;\n+\t  break;\n \n-      return (O_register == ex->X_op)\n-\t|| (ex->X_add_symbol && contains_register(ex->X_add_symbol))\n-\t|| (ex->X_op_symbol && contains_register(ex->X_op_symbol));\n+\tdefault:\n+\t  break;\n+\t}\n     }\n \n-  return 0;\n+  return FALSE;\n }\n \n /* Parse general expression, not looking for indexed addressing.  */\n@@ -1168,7 +1184,7 @@ emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n     }\n   p = frag_more (1);\n   *p = val->X_add_number;\n-  if ( contains_register (val->X_add_symbol) || contains_register (val->X_op_symbol) )\n+  if (contains_register (val->X_add_symbol) || contains_register (val->X_op_symbol))\n     {\n       ill_op ();\n     }\n@@ -1188,7 +1204,7 @@ emit_byte (expressionS * val, bfd_reloc_code_real_type r_type)\n     }\n   else\n     {\n-      /* For symbols only, constants are stored at begin of function */\n+      /* For symbols only, constants are stored at begin of function.  */\n       fix_new_exp (frag_now, p - frag_now->fr_literal, 1, val,\n \t\t   (r_type == BFD_RELOC_8_PCREL) ? TRUE : FALSE, r_type);\n     }"
    }
  ]
}