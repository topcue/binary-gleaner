{
  "sha": "3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2Q3ZDZhNmZmNDY3ODY4NWY4Njk3NmYwOGFiNGM5YzYzOWUyNjJlMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-27T00:08:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-05-27T04:26:28Z"
    },
    "message": "Generic ELF target group signature symbol\n\nEven though the generic ELF target doesn't handle groups correctly,\nthis helps avoid a segfault in bfd_elf_set_group_contents seen on\nd30v-elf, dlx-elf, pj-elf, and xgate-elf when linking the pr22836\ntestcase.\n\n\tPR 24596\nbfd/\n\t* linker.c (_bfd_generic_link_output_symbols): Heed BSF_KEEP.\nld/\n\t* emultempl/genelf.em (gld${EMULATION_NAME}_after_open): Set\n\tBFS_KEEP on group signature symbol.",
    "tree": {
      "sha": "d3b5ce6d4a5e6502170e32affe05d38abbb26049",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d3b5ce6d4a5e6502170e32affe05d38abbb26049"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d5b7ce35a19350969b609c56a8bfff17f91cca20",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5b7ce35a19350969b609c56a8bfff17f91cca20",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d5b7ce35a19350969b609c56a8bfff17f91cca20"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 21,
    "deletions": 7
  },
  "files": [
    {
      "sha": "3f7f174e9883e956ad42be339e5474a8e0aae743",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
      "patch": "@@ -1,3 +1,8 @@\n+2019-05-27  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24596\n+\t* linker.c (_bfd_generic_link_output_symbols): Heed BSF_KEEP.\n+\n 2019-05-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* elfnn-aarch64.c (elfNN_aarch64_merge_symbol_attribute): New function."
    },
    {
      "sha": "1b71fcf8f0d59f0de0363300394425e7ad7ee676",
      "filename": "bfd/linker.c",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/bfd/linker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/bfd/linker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/linker.c?ref=3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
      "patch": "@@ -2112,12 +2112,11 @@ _bfd_generic_link_output_symbols (bfd *output_bfd,\n \t    }\n \t}\n \n-      /* This switch is straight from the old code in\n-\t write_file_locals in ldsym.c.  */\n-      if (info->strip == strip_all\n-\t  || (info->strip == strip_some\n-\t      && bfd_hash_lookup (info->keep_hash, bfd_asymbol_name (sym),\n-\t\t\t\t  FALSE, FALSE) == NULL))\n+      if ((sym->flags & BSF_KEEP) == 0\n+\t  && (info->strip == strip_all\n+\t      || (info->strip == strip_some\n+\t\t  && bfd_hash_lookup (info->keep_hash, bfd_asymbol_name (sym),\n+\t\t\t\t      FALSE, FALSE) == NULL)))\n \toutput = FALSE;\n       else if ((sym->flags & (BSF_GLOBAL | BSF_WEAK | BSF_GNU_UNIQUE)) != 0)\n \t{\n@@ -2131,6 +2130,8 @@ _bfd_generic_link_output_symbols (bfd *output_bfd,\n \t  else\n \t    output = FALSE;\n \t}\n+      else if ((sym->flags & BSF_KEEP) != 0)\n+\toutput = TRUE;\n       else if (bfd_is_ind_section (sym->section))\n \toutput = FALSE;\n       else if ((sym->flags & BSF_DEBUGGING) != 0)"
    },
    {
      "sha": "36d866f46568ed503c6a34c6379e80c8e9feacc1",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-27  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24596\n+\t* emultempl/genelf.em (gld${EMULATION_NAME}_after_open): Set\n+\tBFS_KEEP on group signature symbol.\n+\n 2019-04-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \t* testsuite/ld-aarch64/aarch64-elf.exp: Add new tests."
    },
    {
      "sha": "664a5b1804afa6b32a7caa0be2c0971e1c6dab04",
      "filename": "ld/emultempl/genelf.em",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/ld/emultempl/genelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d7d6a6ff4678685f86976f08ab4c9c639e262e1/ld/emultempl/genelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/genelf.em?ref=3d7d6a6ff4678685f86976f08ab4c9c639e262e1",
      "patch": "@@ -45,7 +45,9 @@ gld${EMULATION_NAME}_after_open (void)\n \t  if ((sec->flags & (SEC_GROUP | SEC_LINKER_CREATED)) == SEC_GROUP)\n \t    {\n \t      struct bfd_elf_section_data *sec_data = elf_section_data (sec);\n-\t      elf_group_id (sec) = syms[sec_data->this_hdr.sh_info - 1];\n+\t      struct bfd_symbol *sym = syms[sec_data->this_hdr.sh_info - 1];\n+\t      elf_group_id (sec) = sym;\n+\t      sym->flags |= BSF_KEEP;\n \t    }\n }\n "
    }
  ]
}