{
  "sha": "7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2E2Y2I5NmI3MTAyNTdhNGY1YmM3ZTg1Y2MxMDNiNmJmOGRmYzI1Yw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-03T14:38:59Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-03T14:38:59Z"
    },
    "message": "[gdb/testsuite] Add untested case in gdb.gdb/complaints.exp\n\nWhen building gdb with \"-Wall -O2 -g -flto=auto\", I run into:\n...\n(gdb) call clear_complaints()^M\nNo symbol \"clear_complaints\" in current context.^M\n(gdb) FAIL: gdb.gdb/complaints.exp: clear complaints\n...\n\nThe problem is that lto has optimized away clear_complaints, and consequently\nthe selftests cannot run.\n\nFix this by:\n- using info function to detect presence of clear_complaints\n- handling the absence of clear_complaints by calling untested\n...\n(gdb) UNTESTED: gdb.gdb/complaints.exp: \\\n  Cannot find clear_complaints, skipping test\n...\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-09-03  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.gdb/complaints.exp: Use untested if clear_complaints cannot\n\tbe found.",
    "tree": {
      "sha": "0e2af8598ae1016fdd41d5e12813000cca85f00e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0e2af8598ae1016fdd41d5e12813000cca85f00e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b99a66053fa1e93a984f75a7a3d5343c74882fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0b99a66053fa1e93a984f75a7a3d5343c74882fb"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 20,
    "deletions": 0
  },
  "files": [
    {
      "sha": "2391d66125076a651eb2cc7bee23a9a9ea8f9d78",
      "filename": "gdb/testsuite/gdb.gdb/complaints.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c/gdb/testsuite/gdb.gdb/complaints.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c/gdb/testsuite/gdb.gdb/complaints.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/complaints.exp?ref=7a6cb96b710257a4f5bc7e85cc103b6bf8dfc25c",
      "patch": "@@ -104,6 +104,26 @@ proc test_empty_complaint { cmd msg } {\n }\n \n proc test_empty_complaints { } {\n+    global decimal\n+\n+    set re [multi_line \\\n+\t\t\"All functions matching regular expression \\[^:\\]*:\" \\\n+\t\t\"\" \\\n+\t\t\"File \\[^\\r\\n\\]*/complaints\\\\.c:\" \\\n+\t\t\"$decimal:\\tvoid clear_complaints\\\\(\\\\);\"]\n+\n+    set found 0\n+    gdb_test_multiple \"info function ^clear_complaints()$\" \"\" {\n+\t-re -wrap $re {\n+\t    set found 1\n+\t}\n+\t-re -wrap \"\" {\n+\t}\n+    }\n+    if { ! $found } {\n+\tuntested \"Cannot find clear_complaints, skipping test\"\n+\treturn 0\n+    }\n \n     test_empty_complaint \"call clear_complaints()\" \\\n \t    \"clear complaints\""
    }
  ]
}