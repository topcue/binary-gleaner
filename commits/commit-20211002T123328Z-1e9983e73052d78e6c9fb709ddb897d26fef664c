{
  "sha": "1e9983e73052d78e6c9fb709ddb897d26fef664c",
  "node_id": "C_kwDOANOeidoAKDFlOTk4M2U3MzA1MmQ3OGU2YzlmYjcwOWRkYjg5N2QyNmZlZjY2NGM",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-02T12:23:48Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-10-02T12:33:28Z"
    },
    "message": "gdb/python: fix a few flake8 warnings\n\nFix these rather obvious warnings reported by flake8:\n\n    ./lib/gdb/FrameIterator.py:16:1: F401 'gdb' imported but unused\n    ./lib/gdb/FrameIterator.py:17:1: F401 'itertools' imported but unused\n    ./lib/gdb/command/prompt.py:55:26: E712 comparison to False should be 'if cond is False:' or 'if not cond:'\n    ./lib/gdb/command/explore.py:526:9: F841 local variable 'has_explorable_fields' is assigned to but never used\n    ./lib/gdb/command/explore.py:697:56: E712 comparison to False should be 'if cond is False:' or 'if not cond:'\n    ./lib/gdb/command/explore.py:736:62: E712 comparison to False should be 'if cond is False:' or 'if not cond:'\n    ./lib/gdb/command/explore.py:767:61: E712 comparison to False should be 'if cond is False:' or 'if not cond:'\n    ./lib/gdb/command/frame_filters.py:21:1: F401 'copy' imported but unused\n    ./lib/gdb/command/frame_filters.py:22:1: F401 'gdb.FrameIterator.FrameIterator' imported but unused\n    ./lib/gdb/command/frame_filters.py:23:1: F401 'gdb.FrameDecorator.FrameDecorator' imported but unused\n    ./lib/gdb/command/frame_filters.py:25:1: F401 'itertools' imported but unused\n    ./lib/gdb/command/frame_filters.py:179:17: E712 comparison to True should be 'if cond is True:' or 'if cond:'\n\nChange-Id: I4f49c0cb430359ee872222600c61d9c5283b09ab",
    "tree": {
      "sha": "cc1d3c4b8df472360664df34020c25f96423179f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc1d3c4b8df472360664df34020c25f96423179f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1e9983e73052d78e6c9fb709ddb897d26fef664c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e9983e73052d78e6c9fb709ddb897d26fef664c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1e9983e73052d78e6c9fb709ddb897d26fef664c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1e9983e73052d78e6c9fb709ddb897d26fef664c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "223809519e2670cc92cbaa4dd88dbd308fff7e34",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/223809519e2670cc92cbaa4dd88dbd308fff7e34",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/223809519e2670cc92cbaa4dd88dbd308fff7e34"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 5,
    "deletions": 13
  },
  "files": [
    {
      "sha": "3da1b1fed8b3882f3b5ca95a41a8b7e02eeb1dad",
      "filename": "gdb/python/lib/gdb/FrameIterator.py",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/FrameIterator.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/FrameIterator.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/FrameIterator.py?ref=1e9983e73052d78e6c9fb709ddb897d26fef664c",
      "patch": "@@ -13,9 +13,6 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-import gdb\n-import itertools\n-\n \n class FrameIterator(object):\n     \"\"\"A gdb.Frame iterator.  Iterates over gdb.Frames or objects that"
    },
    {
      "sha": "3b930fb0e4967cc924e4fef653c99746d7e82b8f",
      "filename": "gdb/python/lib/gdb/command/explore.py",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/explore.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/explore.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/command/explore.py?ref=1e9983e73052d78e6c9fb709ddb897d26fef664c",
      "patch": "@@ -523,7 +523,6 @@ def explore_type(name, datatype, is_child):\n         else:\n             print(\"'%s' is a %s with the following \" \"fields:\\n\" % (name, type_desc))\n \n-        has_explorable_fields = False\n         current_choice = 0\n         choice_to_compound_field_map = {}\n         print_list = []\n@@ -694,7 +693,7 @@ def __init__(self):\n         )\n \n     def invoke(self, arg_str, from_tty):\n-        if ExploreUtils.check_args(\"explore\", arg_str) == False:\n+        if ExploreUtils.check_args(\"explore\", arg_str) is False:\n             return\n \n         # Check if it is a value\n@@ -733,7 +732,7 @@ def __init__(self):\n         )\n \n     def invoke(self, arg_str, from_tty):\n-        if ExploreUtils.check_args(\"explore value\", arg_str) == False:\n+        if ExploreUtils.check_args(\"explore value\", arg_str) is False:\n             return\n \n         value = ExploreUtils.get_value_from_str(arg_str)\n@@ -764,7 +763,7 @@ def __init__(self):\n         )\n \n     def invoke(self, arg_str, from_tty):\n-        if ExploreUtils.check_args(\"explore type\", arg_str) == False:\n+        if ExploreUtils.check_args(\"explore type\", arg_str) is False:\n             return\n \n         datatype = ExploreUtils.get_type_from_str(arg_str)"
    },
    {
      "sha": "5ea562e751157c283ba1dafdb79b3c7e3f2bcec8",
      "filename": "gdb/python/lib/gdb/command/frame_filters.py",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/frame_filters.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/frame_filters.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/command/frame_filters.py?ref=1e9983e73052d78e6c9fb709ddb897d26fef664c",
      "patch": "@@ -18,11 +18,7 @@\n \n import sys\n import gdb\n-import copy\n-from gdb.FrameIterator import FrameIterator\n-from gdb.FrameDecorator import FrameDecorator\n import gdb.frames\n-import itertools\n \n # GDB Commands.\n class SetFilterPrefixCmd(gdb.Command):\n@@ -176,7 +172,7 @@ def _complete_frame_filter_list(text, word, all_flag):\n         from text/word analysis.  This list can be empty when there\n         are no suggestions for completion.\n     \"\"\"\n-    if all_flag == True:\n+    if all_flag:\n         filter_locations = [\"all\", \"global\", \"progspace\"]\n     else:\n         filter_locations = [\"global\", \"progspace\"]"
    },
    {
      "sha": "b001cc14106ef5230f31f00ca7ee9987df9c1ade",
      "filename": "gdb/python/lib/gdb/command/prompt.py",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/prompt.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1e9983e73052d78e6c9fb709ddb897d26fef664c/gdb/python/lib/gdb/command/prompt.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/command/prompt.py?ref=1e9983e73052d78e6c9fb709ddb897d26fef664c",
      "patch": "@@ -52,7 +52,7 @@ def get_show_string(self, pvalue):\n             return \"The extended prompt is not set.\"\n \n     def get_set_string(self):\n-        if self.hook_set == False:\n+        if self.hook_set is False:\n             gdb.prompt_hook = self.before_prompt_hook\n             self.hook_set = True\n         return \"\""
    }
  ]
}