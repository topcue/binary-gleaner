{
  "sha": "272560b577894c388a3d0d3fda8294683714f582",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjcyNTYwYjU3Nzg5NGMzODhhM2QwZDNmZGE4Mjk0NjgzNzE0ZjU4Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-01T17:41:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-15T19:42:31Z"
    },
    "message": "Fix bug with character enumeration literal\n\ngnat encodes character enumeration literals using a few different\nschemes.  The gnat compiler documented the \"QU\" and \"QW\" encodings,\nbut failed to document that a simpler encoding was used for certain\ncharacters.\n\nThis patch updates gdb to handle this simple Q encoding.  Note that\nwide character literals are still not handled.\n\ngdb/ChangeLog\n2019-08-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-exp.y (convert_char_literal): Handle \"Q%c\" encoding.\n\t* ada-lang.c (ada_enum_name): Likewise.\n\ngdb/testsuite/ChangeLog\n2019-08-15  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/char_enum.exp: Add regression tests.\n\t* gdb.ada/char_enum/foo.adb (Char_Enum_Type): Use '_'\n\tand '0'.\n\t(Char, Gchar): Update.\n\t* gdb.ada/char_enum/pck.ads (Global_Enum_Type): Use '+'.",
    "tree": {
      "sha": "3d1482fc1b7b8d3585b59a06bd5120c198c13cde",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3d1482fc1b7b8d3585b59a06bd5120c198c13cde"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/272560b577894c388a3d0d3fda8294683714f582",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272560b577894c388a3d0d3fda8294683714f582",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/272560b577894c388a3d0d3fda8294683714f582",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272560b577894c388a3d0d3fda8294683714f582/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "08235187bcdd66599884f33b046cf8abcf949727",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/08235187bcdd66599884f33b046cf8abcf949727",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/08235187bcdd66599884f33b046cf8abcf949727"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 35,
    "deletions": 5
  },
  "files": [
    {
      "sha": "d11753f60054a4202286f13e3e44854affbc316a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-exp.y (convert_char_literal): Handle \"Q%c\" encoding.\n+\t* ada-lang.c (ada_enum_name): Likewise.\n+\n 2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n \n \t* python/lib/gdb/__init__.py (GdbOutputFile): Rename to have a"
    },
    {
      "sha": "c8a7b9c9c752885619164d2f857199eaca73eb05",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -1390,7 +1390,10 @@ convert_char_literal (struct type *type, LONGEST val)\n   if (TYPE_CODE (type) != TYPE_CODE_ENUM)\n     return val;\n \n-  xsnprintf (name, sizeof (name), \"QU%02x\", (int) val);\n+  if ((val >= 'a' && val <= 'z') || (val >= '0' && val <= '9'))\n+    xsnprintf (name, sizeof (name), \"Q%c\", (int) val);\n+  else\n+    xsnprintf (name, sizeof (name), \"QU%02x\", (int) val);\n   size_t len = strlen (name);\n   for (f = 0; f < TYPE_NFIELDS (type); f += 1)\n     {"
    },
    {
      "sha": "609f2d4391922c963224353e57a6254d31cb1903",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -9439,6 +9439,14 @@ ada_enum_name (const char *name)\n           if (sscanf (name + 2, \"%x\", &v) != 1)\n             return name;\n         }\n+      else if (((name[1] >= '0' && name[1] <= '9')\n+\t\t|| (name[1] >= 'a' && name[1] <= 'z'))\n+\t       && name[2] == '\\0')\n+\t{\n+\t  GROW_VECT (result, result_len, 4);\n+\t  xsnprintf (result, result_len, \"'%c'\", name[1]);\n+\t  return result;\n+\t}\n       else\n         return name;\n "
    },
    {
      "sha": "def8a3174b4592615ab05a15351a3d6b02d1ac6a",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -1,3 +1,11 @@\n+2019-08-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/char_enum.exp: Add regression tests.\n+\t* gdb.ada/char_enum/foo.adb (Char_Enum_Type): Use '_'\n+\tand '0'.\n+\t(Char, Gchar): Update.\n+\t* gdb.ada/char_enum/pck.ads (Global_Enum_Type): Use '+'.\n+\n 2019-08-15  Christian Biesinger  <cbiesinger@google.com>\n \n \t* gdb.python/python.exp: Expect a leading underscore on"
    },
    {
      "sha": "1c814aa97f462a894f8982979f45774bbba79a05",
      "filename": "gdb/testsuite/gdb.ada/char_enum.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/char_enum.exp?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -26,5 +26,11 @@ clean_restart ${testfile}\n set bp_location [gdb_get_line_number \"STOP\" ${testdir}/foo.adb]\n runto \"foo.adb:$bp_location\"\n \n+gdb_test \"ptype Char_Enum_Type\" \"type = \\\\('A', 'B', 'C', '_', '0'\\\\)\"\n gdb_test \"print Char_Enum_Type'('B')\" \"= 1 'B'\"\n+gdb_test \"print Char_Enum_Type'('_')\" \"= 3 '_'\"\n+gdb_test \"print Char_Enum_Type'('0')\" \"= 4 '0'\"\n+gdb_test \"ptype pck.Global_Enum_Type\" \"type = \\\\('x', 'Y', '\\\\+'\\\\)\"\n+gdb_test \"print pck.Global_Enum_Type'('x')\" \"= 0 'x'\"\n gdb_test \"print pck.Global_Enum_Type'('Y')\" \"= 1 'Y'\"\n+gdb_test \"print pck.Global_Enum_Type'('+')\" \"= 2 '\\\\+'\""
    },
    {
      "sha": "6ae1ef61ae8cdd022d2e7ebe2915ba994c41af08",
      "filename": "gdb/testsuite/gdb.ada/char_enum/foo.adb",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum/foo.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum/foo.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/char_enum/foo.adb?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -16,9 +16,9 @@\n with Pck; use Pck;\n \n procedure Foo is\n-   type Char_Enum_Type is ('A', 'B', 'C', 'D', 'E');\n-   Char : Char_Enum_Type := 'D';\n-   Gchar : Global_Enum_Type := 'Z';\n+   type Char_Enum_Type is ('A', 'B', 'C', '_', '0');\n+   Char : Char_Enum_Type := '_';\n+   Gchar : Global_Enum_Type := '+';\n begin\n    Do_Nothing (Char'Address);  -- STOP\n end Foo;"
    },
    {
      "sha": "d3e7423646bc44089693508ecd7d2e93c7544fe3",
      "filename": "gdb/testsuite/gdb.ada/char_enum/pck.ads",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272560b577894c388a3d0d3fda8294683714f582/gdb/testsuite/gdb.ada/char_enum/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/char_enum/pck.ads?ref=272560b577894c388a3d0d3fda8294683714f582",
      "patch": "@@ -16,7 +16,7 @@\n with System;\n \n package Pck is\n-   type Global_Enum_Type is ('X', 'Y', 'Z');\n+   type Global_Enum_Type is ('x', 'Y', '+');\n    procedure Do_Nothing (A : System.Address);\n end Pck;\n "
    }
  ]
}