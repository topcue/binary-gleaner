{
  "sha": "db92718b541158d4782dbc9f48401c20f2bbad6d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGI5MjcxOGI1NDExNThkNDc4MmRiYzlmNDg0MDFjMjBmMmJiYWQ2ZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-02T19:18:05Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-03-15T22:02:09Z"
    },
    "message": "Use htab_up for demangled hash\n\nThis changes objfile_per_bfd_storage::demangled_names_hash to be an\nhtab_up.  This lets us remove some manual management code from the\nobjfile_per_bfd_storage destructor.\n\ngdb/ChangeLog\n2019-03-15  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (create_demangled_names_hash): Update.\n\t(symbol_set_names): Update.\n\t* objfiles.h (struct objfile_per_bfd_storage)\n\t<demangled_names_hash>: Now an htab_up.\n\t* objfiles.c (objfile_per_bfd_storage): Simplify.",
    "tree": {
      "sha": "07e8ecdc56396760bd73fe7bef776d7c51146665",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/07e8ecdc56396760bd73fe7bef776d7c51146665"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db92718b541158d4782dbc9f48401c20f2bbad6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db92718b541158d4782dbc9f48401c20f2bbad6d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db92718b541158d4782dbc9f48401c20f2bbad6d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db92718b541158d4782dbc9f48401c20f2bbad6d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d6797f465c3f67b41a0db38870bbd33384b6551f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d6797f465c3f67b41a0db38870bbd33384b6551f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d6797f465c3f67b41a0db38870bbd33384b6551f"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 12,
    "deletions": 6
  },
  "files": [
    {
      "sha": "3a9532047a027a54ba946d8d486c4b26bbed001c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=db92718b541158d4782dbc9f48401c20f2bbad6d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-03-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (create_demangled_names_hash): Update.\n+\t(symbol_set_names): Update.\n+\t* objfiles.h (struct objfile_per_bfd_storage)\n+\t<demangled_names_hash>: Now an htab_up.\n+\t* objfiles.c (objfile_per_bfd_storage): Simplify.\n+\n 2019-03-15  Tom Tromey  <tom@tromey.com>\n \n \t* objfiles.h (struct objfile_per_bfd_storage): Declare"
    },
    {
      "sha": "7d36a2a7114d74ecb280e3d3f8dc69d022dd8b1a",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=db92718b541158d4782dbc9f48401c20f2bbad6d",
      "patch": "@@ -119,8 +119,6 @@ static const struct bfd_data *objfiles_bfd_data;\n \n objfile_per_bfd_storage::~objfile_per_bfd_storage ()\n {\n-  if (demangled_names_hash)\n-    htab_delete (demangled_names_hash);\n }\n \n /* Create the per-BFD storage object for OBJFILE.  If ABFD is not"
    },
    {
      "sha": "1fa6f3c40ab23228d3cad22d1fb90937f4cc00b4",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=db92718b541158d4782dbc9f48401c20f2bbad6d",
      "patch": "@@ -262,7 +262,7 @@ struct objfile_per_bfd_storage\n      name, and the second is the demangled name or just a zero byte\n      if the name doesn't demangle.  */\n \n-  htab *demangled_names_hash = NULL;\n+  htab_up demangled_names_hash;\n \n   /* The per-objfile information about the entry point, the scope (file/func)\n      containing the entry point, and the scope of the user's main() func.  */"
    },
    {
      "sha": "449bc4cd2b329d0d3c310e9a945f4f2328d36aa8",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db92718b541158d4782dbc9f48401c20f2bbad6d/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=db92718b541158d4782dbc9f48401c20f2bbad6d",
      "patch": "@@ -740,9 +740,9 @@ create_demangled_names_hash (struct objfile_per_bfd_storage *per_bfd)\n      Choosing a much larger table size wastes memory, and saves only about\n      1% in symbol reading.  */\n \n-  per_bfd->demangled_names_hash = htab_create_alloc\n+  per_bfd->demangled_names_hash.reset (htab_create_alloc\n     (256, hash_demangled_name_entry, eq_demangled_name_entry,\n-     NULL, xcalloc, xfree);\n+     NULL, xcalloc, xfree));\n }\n \n /* Try to determine the demangled name for a symbol, based on the\n@@ -848,7 +848,7 @@ symbol_set_names (struct general_symbol_info *gsymbol,\n \n   entry.mangled = linkage_name_copy;\n   slot = ((struct demangled_name_entry **)\n-\t  htab_find_slot (per_bfd->demangled_names_hash,\n+\t  htab_find_slot (per_bfd->demangled_names_hash.get (),\n \t\t\t  &entry, INSERT));\n \n   /* If this name is not in the hash table, add it.  */"
    }
  ]
}