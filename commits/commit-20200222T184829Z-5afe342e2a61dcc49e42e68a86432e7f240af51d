{
  "sha": "5afe342e2a61dcc49e42e68a86432e7f240af51d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWFmZTM0MmUyYTYxZGNjNDllNDJlNjhhODY0MzJlN2YyNDBhZjUxZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:29Z"
    },
    "message": "Reimplement TUI \"C-x 1\" binding\n\nThe TUI \"C-x 1\" key binding removes TUI windows, based on the current\nlayout.  With user-defined layouts, this is no longer easy to do.\n\nThis patch changes \"C-x 1\" to simply delete windows, leaving just the\nfocus window, the locator, and the command window.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c (tui_rl_delete_other_windows): Call\n\ttui_remove_some_windows.\n\t* tui/tui-layout.h (class tui_layout_base) <remove_windows>:\n\tDeclare method.\n\t(class tui_layout_window) <remove_windows>: New method.\n\t(class tui_layout_split) <remove_windows>: Declare.\n\t(tui_remove_some_windows): Declare.\n\t* tui/tui-layout.c (tui_remove_some_windows): New function.\n\t(tui_layout_split::remove_windows): New method.\n\nChange-Id: If186f9c3f263913e963b965204481d1b4385c6d4",
    "tree": {
      "sha": "8aa116a10a603ea5cdb8f36c576f8c73879347ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8aa116a10a603ea5cdb8f36c576f8c73879347ea"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5afe342e2a61dcc49e42e68a86432e7f240af51d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5afe342e2a61dcc49e42e68a86432e7f240af51d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5afe342e2a61dcc49e42e68a86432e7f240af51d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5afe342e2a61dcc49e42e68a86432e7f240af51d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "427326a826888b39a38c9f1b497aa981f37b72af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/427326a826888b39a38c9f1b497aa981f37b72af",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/427326a826888b39a38c9f1b497aa981f37b72af"
    }
  ],
  "stats": {
    "total": 94,
    "additions": 73,
    "deletions": 21
  },
  "files": [
    {
      "sha": "4579505c7d5c743f5f148f9bd1c55f02be34a531",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5afe342e2a61dcc49e42e68a86432e7f240af51d",
      "patch": "@@ -1,3 +1,15 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c (tui_rl_delete_other_windows): Call\n+\ttui_remove_some_windows.\n+\t* tui/tui-layout.h (class tui_layout_base) <remove_windows>:\n+\tDeclare method.\n+\t(class tui_layout_window) <remove_windows>: New method.\n+\t(class tui_layout_split) <remove_windows>: Declare.\n+\t(tui_remove_some_windows): Declare.\n+\t* tui/tui-layout.c (tui_remove_some_windows): New function.\n+\t(tui_layout_split::remove_windows): New method.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui.c (tui_rl_change_windows): Call tui_next_layout."
    },
    {
      "sha": "e9642584fdd25bd2c5c11ee247c51ca65fae32cf",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 45,
      "deletions": 0,
      "changes": 45,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=5afe342e2a61dcc49e42e68a86432e7f240af51d",
      "patch": "@@ -286,6 +286,28 @@ tui_next_layout ()\n   tui_layout_command (\"next\", 0);\n }\n \n+/* See tui-layout.h.  */\n+\n+void\n+tui_remove_some_windows ()\n+{\n+  tui_win_info *focus = tui_win_with_focus ();\n+\n+  if (strcmp (focus->name (), \"cmd\") == 0)\n+    {\n+      /* Try leaving the source or disassembly window.  If neither\n+\t exists, just do nothing.  */\n+      focus = TUI_SRC_WIN;\n+      if (focus == nullptr)\n+\tfocus = TUI_DISASM_WIN;\n+      if (focus == nullptr)\n+\treturn;\n+    }\n+\n+  applied_layout->remove_windows (focus->name ());\n+  tui_apply_current_layout ();\n+}\n+\n static void\n extract_display_start_addr (struct gdbarch **gdbarch_p, CORE_ADDR *addr_p)\n {\n@@ -751,6 +773,29 @@ tui_layout_split::apply (int x_, int y_, int width_, int height_)\n   m_applied = true;\n }\n \n+/* See tui-layout.h.  */\n+\n+void\n+tui_layout_split::remove_windows (const char *name)\n+{\n+  for (int i = 0; i < m_splits.size (); ++i)\n+    {\n+      const char *this_name = m_splits[i].layout->get_name ();\n+      if (this_name == nullptr)\n+\tm_splits[i].layout->remove_windows (name);\n+      else\n+\t{\n+\t  if (strcmp (this_name, name) == 0\n+\t      || strcmp (this_name, \"cmd\") == 0)\n+\t    {\n+\t      /* Keep.  */\n+\t    }\n+\t  m_splits.erase (m_splits.begin () + i);\n+\t  --i;\n+\t}\n+    }\n+}\n+\n static void\n initialize_layouts ()\n {"
    },
    {
      "sha": "f711b004b840c71b310c07637223442a33f415ba",
      "filename": "gdb/tui/tui-layout.h",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui-layout.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui-layout.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.h?ref=5afe342e2a61dcc49e42e68a86432e7f240af51d",
      "patch": "@@ -64,6 +64,10 @@ class tui_layout_base\n      the sizes of the other windows around it.  */\n   virtual bool adjust_size (const char *name, int new_height) = 0;\n \n+  /* Remove some windows from the layout, leaving the command window\n+     and the window being passed in here.  */\n+  virtual void remove_windows (const char *name) = 0;\n+\n   /* The most recent space allocation.  */\n   int x = 0;\n   int y = 0;\n@@ -106,6 +110,10 @@ class tui_layout_window : public tui_layout_base\n \n   bool bottom_boxed_p () const override;\n \n+  void remove_windows (const char *name) override\n+  {\n+  }\n+\n protected:\n \n   void get_sizes (int *min_height, int *max_height) override;\n@@ -149,6 +157,8 @@ class tui_layout_split : public tui_layout_base\n \n   bool bottom_boxed_p () const override;\n \n+  void remove_windows (const char *name) override;\n+\n protected:\n \n   void get_sizes (int *min_height, int *max_height) override;\n@@ -184,6 +194,11 @@ extern void tui_set_layout (enum tui_layout_type);\n /* Switch to the next layout.  */\n extern void tui_next_layout ();\n \n+/* Remove some windows from the layout, leaving only the focused\n+   window and the command window; if no window has the focus, then\n+   some other window is chosen to remain.  */\n+extern void tui_remove_some_windows ();\n+\n /* Apply the current layout.  */\n extern void tui_apply_current_layout ();\n "
    },
    {
      "sha": "280af8acce9cbc45a84f4fea4e9edcf34d22e5e9",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 1,
      "deletions": 21,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5afe342e2a61dcc49e42e68a86432e7f240af51d/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=5afe342e2a61dcc49e42e68a86432e7f240af51d",
      "patch": "@@ -162,28 +162,8 @@ tui_rl_delete_other_windows (int notused1, int notused2)\n     tui_rl_switch_mode (0 /* notused */, 0 /* notused */);\n \n   if (tui_active)\n-    {\n-      enum tui_layout_type new_layout;\n-\n-      new_layout = tui_current_layout ();\n+    tui_remove_some_windows ();\n \n-      /* Kill one window.  */\n-      switch (new_layout)\n-\t{\n-\tcase SRC_COMMAND:\n-\tcase SRC_DATA_COMMAND:\n-\tcase SRC_DISASSEM_COMMAND:\n-\tdefault:\n-\t  new_layout = SRC_COMMAND;\n-\t  break;\n-\n-\tcase DISASSEM_COMMAND:\n-\tcase DISASSEM_DATA_COMMAND:\n-\t  new_layout = DISASSEM_COMMAND;\n-\t  break;\n-\t}\n-      tui_set_layout (new_layout);\n-    }\n   return 0;\n }\n "
    }
  ]
}