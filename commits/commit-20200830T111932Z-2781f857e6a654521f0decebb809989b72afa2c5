{
  "sha": "2781f857e6a654521f0decebb809989b72afa2c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjc4MWY4NTdlNmE2NTQ1MjFmMGRlY2ViYjgwOTk4OWI3MmFmYTJjNQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-30T10:10:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-30T11:19:32Z"
    },
    "message": "cr16 disassembly error of disp20 fields\n\nWhen looking at the UB errors, I noticed that cbitb_test.d disassembly\nwasn't reproducing the input assembly.  That turned out to be an error\nin make_argument case arg_cr.  This fixes that and makes some general\ntidies.\n\nopcodes/\n\t* cr16-dis.c: Formatting.\n\t(parameter): Delete struct typedef.  Use dwordU instead\n\tthroughout file.\n\t(make_argument <arg_idxr>): Simplify detection of cbitb, sbitb\n\tand tbitb.\n\t(make_argument <arg_cr>): Extract 20-bit field not 16-bit.\ngas/\n\t* testsuite/gas/cr16/cbitb_test.d: Update expected output.\n\t* testsuite/gas/cr16/cbitw_test.d: Likewise.\n\t* testsuite/gas/cr16/sbitb_test.d: Likewise.\n\t* testsuite/gas/cr16/sbitw_test.d: Likewise.\n\t* testsuite/gas/cr16/storb_test.d: Likewise.\n\t* testsuite/gas/cr16/storw_test.d: Likewise.\n\t* testsuite/gas/cr16/tbitb_test.d: Likewise.\n\t* testsuite/gas/cr16/tbitw_test.d: Likewise.",
    "tree": {
      "sha": "ce94a580e92857aa5a88e173b6a8088a0ae314d1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ce94a580e92857aa5a88e173b6a8088a0ae314d1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2781f857e6a654521f0decebb809989b72afa2c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2781f857e6a654521f0decebb809989b72afa2c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2781f857e6a654521f0decebb809989b72afa2c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2781f857e6a654521f0decebb809989b72afa2c5/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c930281005b0a01ab824864c231c19c297bfdda5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c930281005b0a01ab824864c231c19c297bfdda5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c930281005b0a01ab824864c231c19c297bfdda5"
    }
  ],
  "stats": {
    "total": 244,
    "additions": 126,
    "deletions": 118
  },
  "files": [
    {
      "sha": "262211dc4c947ca113b5319e16b41cc413b97481",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -1,3 +1,14 @@\n+2020-08-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/gas/cr16/cbitb_test.d: Update expected output.\n+\t* testsuite/gas/cr16/cbitw_test.d: Likewise.\n+\t* testsuite/gas/cr16/sbitb_test.d: Likewise.\n+\t* testsuite/gas/cr16/sbitw_test.d: Likewise.\n+\t* testsuite/gas/cr16/storb_test.d: Likewise.\n+\t* testsuite/gas/cr16/storw_test.d: Likewise.\n+\t* testsuite/gas/cr16/tbitb_test.d: Likewise.\n+\t* testsuite/gas/cr16/tbitw_test.d: Likewise.\n+\n 2020-08-30  Alan Modra  <amodra@gmail.com>\n \n \tPR26437"
    },
    {
      "sha": "67ea611efa316dcc11bf03f767c700420dfd0493",
      "filename": "gas/testsuite/gas/cr16/cbitb_test.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/cbitb_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/cbitb_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/cbitb_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -59,17 +59,17 @@ Disassembly of section .text:\n   b0:\t3d 6b ff 0f \tcbitb\t\\$0x3,0xfff:m\\(r13\\)\n   b4:\t3d 6b ff ff \tcbitb\t\\$0x3,0xffff:m\\(r13\\)\n   b8:\t3c 6b 43 23 \tcbitb\t\\$0x3,0x2343:m\\(r12\\)\n-  bc:\t10 00 32 41 \tcbitb\t\\$0x3,0x2345:l\\(r2\\)\n+  bc:\t10 00 32 41 \tcbitb\t\\$0x3,0x12345:l\\(r2\\)\n   c0:\t45 23 \n-  c2:\t10 00 38 44 \tcbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  c2:\t10 00 38 44 \tcbitb\t\\$0x3,0x4abcd:l\\(r8\\)\n   c6:\tcd ab \n   c8:\t10 00 3d 5f \tcbitb\t\\$0x3,0xfabcd:l\\(r13\\)\n   cc:\tcd ab \n-  ce:\t10 00 38 4f \tcbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  ce:\t10 00 38 4f \tcbitb\t\\$0x3,0xfabcd:l\\(r8\\)\n   d2:\tcd ab \n-  d4:\t10 00 39 4f \tcbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  d4:\t10 00 39 4f \tcbitb\t\\$0x3,0xfabcd:l\\(r9\\)\n   d8:\tcd ab \n-  da:\t10 00 39 44 \tcbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  da:\t10 00 39 44 \tcbitb\t\\$0x3,0x4abcd:l\\(r9\\)\n   de:\tcd ab \n   e0:\t31 6a       \tcbitb\t\\$0x3,0x0:s\\(r2,r1\\)\n   e2:\t51 6b 01 00 \tcbitb\t\\$0x5,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "8a808777bca783fd0cd14b1226272709f946e728",
      "filename": "gas/testsuite/gas/cr16/cbitw_test.d",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/cbitw_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/cbitw_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/cbitw_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -95,17 +95,17 @@ Disassembly of section .text:\n  136:\t3d 69 ff 0f \tcbitw\t\\$0x3:s,0xfff:m\\(r13\\)\n  13a:\t3d 69 ff ff \tcbitw\t\\$0x3:s,0xffff:m\\(r13\\)\n  13e:\t3c 69 43 23 \tcbitw\t\\$0x3:s,0x2343:m\\(r12\\)\n- 142:\t11 00 32 41 \tcbitw\t\\$0x3:s,0x2345:l\\(r2\\)\n+ 142:\t11 00 32 41 \tcbitw\t\\$0x3:s,0x12345:l\\(r2\\)\n  146:\t45 23 \n- 148:\t11 00 38 44 \tcbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 148:\t11 00 38 44 \tcbitw\t\\$0x3:s,0x4abcd:l\\(r8\\)\n  14c:\tcd ab \n  14e:\t11 00 3d 5f \tcbitw\t\\$0x3:s,0xfabcd:l\\(r13\\)\n  152:\tcd ab \n- 154:\t11 00 38 4f \tcbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 154:\t11 00 38 4f \tcbitw\t\\$0x3:s,0xfabcd:l\\(r8\\)\n  158:\tcd ab \n- 15a:\t11 00 39 4f \tcbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 15a:\t11 00 39 4f \tcbitw\t\\$0x3:s,0xfabcd:l\\(r9\\)\n  15e:\tcd ab \n- 160:\t11 00 39 44 \tcbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 160:\t11 00 39 44 \tcbitw\t\\$0x3:s,0x4abcd:l\\(r9\\)\n  164:\tcd ab \n  166:\t11 00 f2 40 \tcbitw\t\\$0xf:s,0x0:l\\(r2\\)\n  16a:\t00 00 \n@@ -123,17 +123,17 @@ Disassembly of section .text:\n  190:\tdd 69 ff 0f \tcbitw\t\\$0xd:s,0xfff:m\\(r13\\)\n  194:\tdd 69 ff ff \tcbitw\t\\$0xd:s,0xffff:m\\(r13\\)\n  198:\tdc 69 43 23 \tcbitw\t\\$0xd:s,0x2343:m\\(r12\\)\n- 19c:\t11 00 d2 41 \tcbitw\t\\$0xd:s,0x2345:l\\(r2\\)\n+ 19c:\t11 00 d2 41 \tcbitw\t\\$0xd:s,0x12345:l\\(r2\\)\n  1a0:\t45 23 \n- 1a2:\t11 00 d8 44 \tcbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1a2:\t11 00 d8 44 \tcbitw\t\\$0xd:s,0x4abcd:l\\(r8\\)\n  1a6:\tcd ab \n  1a8:\t11 00 dd 5f \tcbitw\t\\$0xd:s,0xfabcd:l\\(r13\\)\n  1ac:\tcd ab \n- 1ae:\t11 00 d8 4f \tcbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1ae:\t11 00 d8 4f \tcbitw\t\\$0xd:s,0xfabcd:l\\(r8\\)\n  1b2:\tcd ab \n- 1b4:\t11 00 d9 4f \tcbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1b4:\t11 00 d9 4f \tcbitw\t\\$0xd:s,0xfabcd:l\\(r9\\)\n  1b8:\tcd ab \n- 1ba:\t11 00 d9 44 \tcbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1ba:\t11 00 d9 44 \tcbitw\t\\$0xd:s,0x4abcd:l\\(r9\\)\n  1be:\tcd ab \n  1c0:\t31 6e       \tcbitw\t\\$0x3:s,0x0:s\\(r2,r1\\)\n  1c2:\t51 69 01 00 \tcbitw\t\\$0x5:s,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "13d69fbf535a223b4b47763646141c0ce100fd2f",
      "filename": "gas/testsuite/gas/cr16/sbitb_test.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/sbitb_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/sbitb_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/sbitb_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -59,17 +59,17 @@ Disassembly of section .text:\n   b0:\t3d 73 ff 0f \tsbitb\t\\$0x3,0xfff:m\\(r13\\)\n   b4:\t3d 73 ff ff \tsbitb\t\\$0x3,0xffff:m\\(r13\\)\n   b8:\t3c 73 43 23 \tsbitb\t\\$0x3,0x2343:m\\(r12\\)\n-  bc:\t10 00 32 81 \tsbitb\t\\$0x3,0x2345:l\\(r2\\)\n+  bc:\t10 00 32 81 \tsbitb\t\\$0x3,0x12345:l\\(r2\\)\n   c0:\t45 23 \n-  c2:\t10 00 38 84 \tsbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  c2:\t10 00 38 84 \tsbitb\t\\$0x3,0x4abcd:l\\(r8\\)\n   c6:\tcd ab \n   c8:\t10 00 3d 9f \tsbitb\t\\$0x3,0xfabcd:l\\(r13\\)\n   cc:\tcd ab \n-  ce:\t10 00 38 8f \tsbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  ce:\t10 00 38 8f \tsbitb\t\\$0x3,0xfabcd:l\\(r8\\)\n   d2:\tcd ab \n-  d4:\t10 00 39 8f \tsbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  d4:\t10 00 39 8f \tsbitb\t\\$0x3,0xfabcd:l\\(r9\\)\n   d8:\tcd ab \n-  da:\t10 00 39 84 \tsbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  da:\t10 00 39 84 \tsbitb\t\\$0x3,0x4abcd:l\\(r9\\)\n   de:\tcd ab \n   e0:\t31 72       \tsbitb\t\\$0x3,0x0:s\\(r2,r1\\)\n   e2:\t51 73 01 00 \tsbitb\t\\$0x5,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "bc02fdf2916069628cd8804c37bfd4ef08e3b4cf",
      "filename": "gas/testsuite/gas/cr16/sbitw_test.d",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/sbitw_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/sbitw_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/sbitw_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -95,17 +95,17 @@ Disassembly of section .text:\n  136:\t3d 71 ff 0f \tsbitw\t\\$0x3:s,0xfff:m\\(r13\\)\n  13a:\t3d 71 ff ff \tsbitw\t\\$0x3:s,0xffff:m\\(r13\\)\n  13e:\t3c 71 43 23 \tsbitw\t\\$0x3:s,0x2343:m\\(r12\\)\n- 142:\t11 00 32 81 \tsbitw\t\\$0x3:s,0x2345:l\\(r2\\)\n+ 142:\t11 00 32 81 \tsbitw\t\\$0x3:s,0x12345:l\\(r2\\)\n  146:\t45 23 \n- 148:\t11 00 38 84 \tsbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 148:\t11 00 38 84 \tsbitw\t\\$0x3:s,0x4abcd:l\\(r8\\)\n  14c:\tcd ab \n  14e:\t11 00 3d 9f \tsbitw\t\\$0x3:s,0xfabcd:l\\(r13\\)\n  152:\tcd ab \n- 154:\t11 00 38 8f \tsbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 154:\t11 00 38 8f \tsbitw\t\\$0x3:s,0xfabcd:l\\(r8\\)\n  158:\tcd ab \n- 15a:\t11 00 39 8f \tsbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 15a:\t11 00 39 8f \tsbitw\t\\$0x3:s,0xfabcd:l\\(r9\\)\n  15e:\tcd ab \n- 160:\t11 00 39 84 \tsbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 160:\t11 00 39 84 \tsbitw\t\\$0x3:s,0x4abcd:l\\(r9\\)\n  164:\tcd ab \n  166:\t11 00 f2 80 \tsbitw\t\\$0xf:s,0x0:l\\(r2\\)\n  16a:\t00 00 \n@@ -123,17 +123,17 @@ Disassembly of section .text:\n  190:\tdd 71 ff 0f \tsbitw\t\\$0xd:s,0xfff:m\\(r13\\)\n  194:\tdd 71 ff ff \tsbitw\t\\$0xd:s,0xffff:m\\(r13\\)\n  198:\tdc 71 43 23 \tsbitw\t\\$0xd:s,0x2343:m\\(r12\\)\n- 19c:\t11 00 d2 81 \tsbitw\t\\$0xd:s,0x2345:l\\(r2\\)\n+ 19c:\t11 00 d2 81 \tsbitw\t\\$0xd:s,0x12345:l\\(r2\\)\n  1a0:\t45 23 \n- 1a2:\t11 00 d8 84 \tsbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1a2:\t11 00 d8 84 \tsbitw\t\\$0xd:s,0x4abcd:l\\(r8\\)\n  1a6:\tcd ab \n  1a8:\t11 00 dd 9f \tsbitw\t\\$0xd:s,0xfabcd:l\\(r13\\)\n  1ac:\tcd ab \n- 1ae:\t11 00 d8 8f \tsbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1ae:\t11 00 d8 8f \tsbitw\t\\$0xd:s,0xfabcd:l\\(r8\\)\n  1b2:\tcd ab \n- 1b4:\t11 00 d9 8f \tsbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1b4:\t11 00 d9 8f \tsbitw\t\\$0xd:s,0xfabcd:l\\(r9\\)\n  1b8:\tcd ab \n- 1ba:\t11 00 d9 84 \tsbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1ba:\t11 00 d9 84 \tsbitw\t\\$0xd:s,0x4abcd:l\\(r9\\)\n  1be:\tcd ab \n  1c0:\t31 76       \tsbitw\t\\$0x3:s,0x0:s\\(r2,r1\\)\n  1c2:\t51 71 01 00 \tsbitw\t\\$0x5:s,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "f766831179b11a26836ca834bfa37b7c134b27f7",
      "filename": "gas/testsuite/gas/cr16/storb_test.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/storb_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/storb_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/storb_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -130,17 +130,17 @@ Disassembly of section .text:\n  198:\t3d 83 ff 0f \tstorb\t\\$0x3:s,0xfff:m\\(r13\\)\n  19c:\t3d 83 ff ff \tstorb\t\\$0x3:s,0xffff:m\\(r13\\)\n  1a0:\t3c 83 43 23 \tstorb\t\\$0x3:s,0x2343:m\\(r12\\)\n- 1a4:\t12 00 32 01 \tstorb\t\\$0x3:s,0x2345:l\\(r2\\)\n+ 1a4:\t12 00 32 01 \tstorb\t\\$0x3:s,0x12345:l\\(r2\\)\n  1a8:\t45 23 \n- 1aa:\t12 00 38 04 \tstorb\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 1aa:\t12 00 38 04 \tstorb\t\\$0x3:s,0x4abcd:l\\(r8\\)\n  1ae:\tcd ab \n  1b0:\t12 00 3d 1f \tstorb\t\\$0x3:s,0xfabcd:l\\(r13\\)\n  1b4:\tcd ab \n- 1b6:\t12 00 38 0f \tstorb\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 1b6:\t12 00 38 0f \tstorb\t\\$0x3:s,0xfabcd:l\\(r8\\)\n  1ba:\tcd ab \n- 1bc:\t12 00 39 0f \tstorb\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 1bc:\t12 00 39 0f \tstorb\t\\$0x3:s,0xfabcd:l\\(r9\\)\n  1c0:\tcd ab \n- 1c2:\t12 00 39 04 \tstorb\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 1c2:\t12 00 39 04 \tstorb\t\\$0x3:s,0x4abcd:l\\(r9\\)\n  1c6:\tcd ab \n  1c8:\t31 82       \tstorb\t\\$0x3:s,0x0:s\\(r2,r1\\)\n  1ca:\t51 83 01 00 \tstorb\t\\$0x5:s,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "e904b108a80f8d87c82c991cc46b00f1eb38acd7",
      "filename": "gas/testsuite/gas/cr16/storw_test.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/storw_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/storw_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/storw_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -130,17 +130,17 @@ Disassembly of section .text:\n  198:\t3d c3 ff 0f \tstorw\t\\$0x3:s,0xfff:m\\(r13\\)\n  19c:\t3d c3 ff ff \tstorw\t\\$0x3:s,0xffff:m\\(r13\\)\n  1a0:\t3c c3 43 23 \tstorw\t\\$0x3:s,0x2343:m\\(r12\\)\n- 1a4:\t13 00 32 01 \tstorw\t\\$0x3:s,0x2345:l\\(r2\\)\n+ 1a4:\t13 00 32 01 \tstorw\t\\$0x3:s,0x12345:l\\(r2\\)\n  1a8:\t45 23 \n- 1aa:\t13 00 38 04 \tstorw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 1aa:\t13 00 38 04 \tstorw\t\\$0x3:s,0x4abcd:l\\(r8\\)\n  1ae:\tcd ab \n  1b0:\t13 00 3d 1f \tstorw\t\\$0x3:s,0xfabcd:l\\(r13\\)\n  1b4:\tcd ab \n- 1b6:\t13 00 38 0f \tstorw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 1b6:\t13 00 38 0f \tstorw\t\\$0x3:s,0xfabcd:l\\(r8\\)\n  1ba:\tcd ab \n- 1bc:\t13 00 39 0f \tstorw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 1bc:\t13 00 39 0f \tstorw\t\\$0x3:s,0xfabcd:l\\(r9\\)\n  1c0:\tcd ab \n- 1c2:\t13 00 39 04 \tstorw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 1c2:\t13 00 39 04 \tstorw\t\\$0x3:s,0x4abcd:l\\(r9\\)\n  1c6:\tcd ab \n  1c8:\t31 c2       \tstorw\t\\$0x3:s,0x0:s\\(r2,r1\\)\n  1ca:\t51 c3 01 00 \tstorw\t\\$0x5:s,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "46a697ba36bc8922136dfc72fd4424a7aa41e65b",
      "filename": "gas/testsuite/gas/cr16/tbitb_test.d",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/tbitb_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/tbitb_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/tbitb_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -59,17 +59,17 @@ Disassembly of section .text:\n   b0:\t3d 7b ff 0f \ttbitb\t\\$0x3,0xfff:m\\(r13\\)\n   b4:\t3d 7b ff ff \ttbitb\t\\$0x3,0xffff:m\\(r13\\)\n   b8:\t3c 7b 43 23 \ttbitb\t\\$0x3,0x2343:m\\(r12\\)\n-  bc:\t10 00 32 c1 \ttbitb\t\\$0x3,0x2345:l\\(r2\\)\n+  bc:\t10 00 32 c1 \ttbitb\t\\$0x3,0x12345:l\\(r2\\)\n   c0:\t45 23 \n-  c2:\t10 00 38 c4 \ttbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  c2:\t10 00 38 c4 \ttbitb\t\\$0x3,0x4abcd:l\\(r8\\)\n   c6:\tcd ab \n   c8:\t10 00 3d df \ttbitb\t\\$0x3,0xfabcd:l\\(r13\\)\n   cc:\tcd ab \n-  ce:\t10 00 38 cf \ttbitb\t\\$0x3,0xabcd:l\\(r8\\)\n+  ce:\t10 00 38 cf \ttbitb\t\\$0x3,0xfabcd:l\\(r8\\)\n   d2:\tcd ab \n-  d4:\t10 00 39 cf \ttbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  d4:\t10 00 39 cf \ttbitb\t\\$0x3,0xfabcd:l\\(r9\\)\n   d8:\tcd ab \n-  da:\t10 00 39 c4 \ttbitb\t\\$0x3,0xabcd:l\\(r9\\)\n+  da:\t10 00 39 c4 \ttbitb\t\\$0x3,0x4abcd:l\\(r9\\)\n   de:\tcd ab \n   e0:\t31 7a       \ttbitb\t\\$0x3,0x0:s\\(r2,r1\\)\n   e2:\t51 7b 01 00 \ttbitb\t\\$0x5,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "b50df20e6e485d6cb2831cec425106513d9e3ff7",
      "filename": "gas/testsuite/gas/cr16/tbitw_test.d",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/tbitw_test.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/gas/testsuite/gas/cr16/tbitw_test.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/cr16/tbitw_test.d?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -95,17 +95,17 @@ Disassembly of section .text:\n  136:\t3d 79 ff 0f \ttbitw\t\\$0x3:s,0xfff:m\\(r13\\)\n  13a:\t3d 79 ff ff \ttbitw\t\\$0x3:s,0xffff:m\\(r13\\)\n  13e:\t3c 79 43 23 \ttbitw\t\\$0x3:s,0x2343:m\\(r12\\)\n- 142:\t11 00 32 c1 \ttbitw\t\\$0x3:s,0x2345:l\\(r2\\)\n+ 142:\t11 00 32 c1 \ttbitw\t\\$0x3:s,0x12345:l\\(r2\\)\n  146:\t45 23 \n- 148:\t11 00 38 c4 \ttbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 148:\t11 00 38 c4 \ttbitw\t\\$0x3:s,0x4abcd:l\\(r8\\)\n  14c:\tcd ab \n  14e:\t11 00 3d df \ttbitw\t\\$0x3:s,0xfabcd:l\\(r13\\)\n  152:\tcd ab \n- 154:\t11 00 38 cf \ttbitw\t\\$0x3:s,0xabcd:l\\(r8\\)\n+ 154:\t11 00 38 cf \ttbitw\t\\$0x3:s,0xfabcd:l\\(r8\\)\n  158:\tcd ab \n- 15a:\t11 00 39 cf \ttbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 15a:\t11 00 39 cf \ttbitw\t\\$0x3:s,0xfabcd:l\\(r9\\)\n  15e:\tcd ab \n- 160:\t11 00 39 c4 \ttbitw\t\\$0x3:s,0xabcd:l\\(r9\\)\n+ 160:\t11 00 39 c4 \ttbitw\t\\$0x3:s,0x4abcd:l\\(r9\\)\n  164:\tcd ab \n  166:\t11 00 f2 c0 \ttbitw\t\\$0xf:s,0x0:l\\(r2\\)\n  16a:\t00 00 \n@@ -123,17 +123,17 @@ Disassembly of section .text:\n  190:\tdd 79 ff 0f \ttbitw\t\\$0xd:s,0xfff:m\\(r13\\)\n  194:\tdd 79 ff ff \ttbitw\t\\$0xd:s,0xffff:m\\(r13\\)\n  198:\tdc 79 43 23 \ttbitw\t\\$0xd:s,0x2343:m\\(r12\\)\n- 19c:\t11 00 d2 c1 \ttbitw\t\\$0xd:s,0x2345:l\\(r2\\)\n+ 19c:\t11 00 d2 c1 \ttbitw\t\\$0xd:s,0x12345:l\\(r2\\)\n  1a0:\t45 23 \n- 1a2:\t11 00 d8 c4 \ttbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1a2:\t11 00 d8 c4 \ttbitw\t\\$0xd:s,0x4abcd:l\\(r8\\)\n  1a6:\tcd ab \n  1a8:\t11 00 dd df \ttbitw\t\\$0xd:s,0xfabcd:l\\(r13\\)\n  1ac:\tcd ab \n- 1ae:\t11 00 d8 cf \ttbitw\t\\$0xd:s,0xabcd:l\\(r8\\)\n+ 1ae:\t11 00 d8 cf \ttbitw\t\\$0xd:s,0xfabcd:l\\(r8\\)\n  1b2:\tcd ab \n- 1b4:\t11 00 d9 cf \ttbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1b4:\t11 00 d9 cf \ttbitw\t\\$0xd:s,0xfabcd:l\\(r9\\)\n  1b8:\tcd ab \n- 1ba:\t11 00 d9 c4 \ttbitw\t\\$0xd:s,0xabcd:l\\(r9\\)\n+ 1ba:\t11 00 d9 c4 \ttbitw\t\\$0xd:s,0x4abcd:l\\(r9\\)\n  1be:\tcd ab \n  1c0:\t31 7e       \ttbitw\t\\$0x3:s,0x0:s\\(r2,r1\\)\n  1c2:\t51 79 01 00 \ttbitw\t\\$0x5:s,0x1:m\\(r2,r1\\)"
    },
    {
      "sha": "b6119c459b47b1ed69389012ef8812925754e0d0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -1,3 +1,12 @@\n+2020-08-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* cr16-dis.c: Formatting.\n+\t(parameter): Delete struct typedef.  Use dwordU instead\n+\tthroughout file.\n+\t(make_argument <arg_idxr>): Simplify detection of cbitb, sbitb\n+\tand tbitb.\n+\t(make_argument <arg_cr>): Extract 20-bit field not 16-bit.\n+\n 2020-08-29  Alan Modra  <amodra@gmail.com>\n \n \tPR 26446"
    },
    {
      "sha": "d38dba31b1a3edd30db14c409d844f69edb8f737",
      "filename": "opcodes/cr16-dis.c",
      "status": "modified",
      "additions": 51,
      "deletions": 63,
      "changes": 114,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2781f857e6a654521f0decebb809989b72afa2c5/opcodes/cr16-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2781f857e6a654521f0decebb809989b72afa2c5/opcodes/cr16-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/cr16-dis.c?ref=2781f857e6a654521f0decebb809989b72afa2c5",
      "patch": "@@ -29,19 +29,13 @@\n #define ESCAPE_16_BIT  0xB\n \n /* Extract 'n_bits' from 'a' starting from offset 'offs'.  */\n-#define EXTRACT(a, offs, n_bits)                    \\\n+#define EXTRACT(a, offs, n_bits) \\\n   (((a) >> (offs)) & ((1ul << ((n_bits) - 1) << 1) - 1))\n \n /* Set Bit Mask - a mask to set all bits in a 32-bit word starting\n    from offset 'offs'.  */\n #define SBM(offs)  ((1ul << 31 << 1) - (1ul << (offs)))\n \n-typedef struct\n-{\n-  dwordU val;\n-  int nbits;\n-} parameter;\n-\n /* Structure to map valid 'cinv' instruction options.  */\n \n typedef struct\n@@ -287,14 +281,10 @@ getprocpregname (int reg_index)\n                        0         16        32        48\n     words                  [0]       [1]       [2]      */\n \n-static parameter\n+static inline dwordU\n makelongparameter (ULONGLONG val, int start, int end)\n {\n-  parameter p;\n-\n-  p.val = (dwordU) EXTRACT (val, 48 - end, end - start);\n-  p.nbits = end - start;\n-  return p;\n+  return EXTRACT (val, 48 - end, end - start);\n }\n \n /* Build a mask of the instruction's 'constant' opcode,\n@@ -330,10 +320,10 @@ cr16_match_opcode (void)\n       mask = build_mask ();\n \n       if ((doubleWord & mask) == BIN (instruction->match,\n-                                      instruction->match_bits))\n-        return 1;\n+\t\t\t\t      instruction->match_bits))\n+\treturn 1;\n       else\n-        instruction--;\n+\tinstruction--;\n     }\n   return 0;\n }\n@@ -344,7 +334,7 @@ static void\n make_argument (argument * a, int start_bits)\n {\n   int inst_bit_size;\n-  parameter p;\n+  dwordU p;\n \n   if ((instruction->size == 3) && a->size >= 16)\n     inst_bit_size = 48;\n@@ -357,75 +347,72 @@ make_argument (argument * a, int start_bits)\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-      a->r = p.val;\n+      a->r = p;\n       break;\n \n     case arg_rp:\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-      a->rp = p.val;\n+      a->rp = p;\n       break;\n \n     case arg_pr:\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-      a->pr = p.val;\n+      a->pr = p;\n       break;\n \n     case arg_prp:\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-      a->prp = p.val;\n+      a->prp = p;\n       break;\n \n     case arg_ic:\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-      a->constant = p.val;\n+      a->constant = p;\n       break;\n \n     case arg_cc:\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t     inst_bit_size - start_bits);\n-\n-      a->cc = p.val;\n+      a->cc = p;\n       break;\n \n     case arg_idxr:\n-      if ((IS_INSN_MNEMONIC (\"cbitb\"))\n-\t  || (IS_INSN_MNEMONIC (\"sbitb\"))\n-\t  || (IS_INSN_MNEMONIC (\"tbitb\")))\n+      if (IS_INSN_TYPE (CSTBIT_INS) && instruction->mnemonic[4] == 'b')\n \tp = makelongparameter (cr16_allWords, 8, 9);\n       else\n \tp = makelongparameter (cr16_allWords, 9, 10);\n-      a->i_r = p.val;\n+      a->i_r = p;\n       p = makelongparameter (cr16_allWords,\n \t\t\t     inst_bit_size - a->size, inst_bit_size);\n-      a->constant = p.val;\n+      a->constant = p;\n       break;\n \n     case arg_idxrp:\n       p = makelongparameter (cr16_allWords, start_bits + 12, start_bits + 13);\n-      a->i_r = p.val;\n+      a->i_r = p;\n       p = makelongparameter (cr16_allWords, start_bits + 13, start_bits + 16);\n-      a->rp = p.val;\n+      a->rp = p;\n       if (inst_bit_size > 32)\n \t{\n \t  p = makelongparameter (cr16_allWords, inst_bit_size - start_bits - 12,\n \t\t\t\t inst_bit_size);\n-\t  a->constant = ((p.val & 0xffff) | (p.val >> 8 & 0xf0000));\n+\t  a->constant = (p & 0xffff) | (p >> 8 & 0xf0000);\n \t}\n       else if (instruction->size == 2)\n \t{\n \t  p = makelongparameter (cr16_allWords, inst_bit_size - 22,\n \t\t\t\t inst_bit_size);\n-\t  a->constant = (p.val & 0xf) | (((p.val >>20) & 0x3) << 4)\n-\t    | ((p.val >>14 & 0x3) << 6) | (((p.val >>7) & 0x1f) <<7);\n+\t  a->constant = ((p & 0xf) | (((p >> 20) & 0x3) << 4)\n+\t\t\t | ((p >> 14 & 0x3) << 6) | (((p >>7) & 0x1f) << 7));\n \t}\n       else if (instruction->size == 1 && a->size == 0)\n \ta->constant = 0;\n@@ -434,37 +421,37 @@ make_argument (argument * a, int start_bits)\n \n     case arg_rbase:\n       p = makelongparameter (cr16_allWords, inst_bit_size, inst_bit_size);\n-      a->constant = p.val;\n+      a->constant = p;\n       p = makelongparameter (cr16_allWords, inst_bit_size - (start_bits + 4),\n-                             inst_bit_size - start_bits);\n-      a->r = p.val;\n+\t\t\t     inst_bit_size - start_bits);\n+      a->r = p;\n       break;\n \n     case arg_cr:\n       p = makelongparameter (cr16_allWords, start_bits + 12, start_bits + 16);\n-      a->r = p.val;\n-      p = makelongparameter (cr16_allWords, inst_bit_size - 16, inst_bit_size);\n-      a->constant = p.val;\n+      a->r = p;\n+      p = makelongparameter (cr16_allWords, inst_bit_size - 28, inst_bit_size);\n+      a->constant = ((p >> 8) & 0xf0000) | (p & 0xffff);\n       break;\n \n     case arg_crp:\n       if (instruction->size == 1)\n \tp = makelongparameter (cr16_allWords, 12, 16);\n       else\n \tp = makelongparameter (cr16_allWords, start_bits + 12, start_bits + 16);\n-      a->rp = p.val;\n+      a->rp = p;\n \n       if (inst_bit_size > 32)\n \t{\n \t  p = makelongparameter (cr16_allWords, inst_bit_size - start_bits - 12,\n \t\t\t\t inst_bit_size);\n-\t  a->constant = ((p.val & 0xffff) | (p.val >> 8 & 0xf0000));\n+\t  a->constant = ((p & 0xffff) | (p >> 8 & 0xf0000));\n \t}\n       else if (instruction->size == 2)\n \t{\n \t  p = makelongparameter (cr16_allWords, inst_bit_size - 16,\n \t\t\t\t inst_bit_size);\n-\t  a->constant = p.val;\n+\t  a->constant = p;\n \t}\n       else if (instruction->size == 1 && a->size != 0)\n \t{\n@@ -473,9 +460,9 @@ make_argument (argument * a, int start_bits)\n \t      || IS_INSN_MNEMONIC (\"loadd\")\n \t      || IS_INSN_MNEMONIC (\"storw\")\n \t      || IS_INSN_MNEMONIC (\"stord\"))\n-\t    a->constant = (p.val * 2);\n+\t    a->constant = p * 2;\n \t  else\n-\t    a->constant = p.val;\n+\t    a->constant = p;\n \t}\n       else /* below case for 0x0(reg pair) */\n \ta->constant = 0;\n@@ -493,29 +480,29 @@ make_argument (argument * a, int start_bits)\n \t    {\n \t    case 8 :\n \t      p = makelongparameter (cr16_allWords, 0, start_bits);\n-\t      a->constant = ((((p.val&0xf00)>>4)) | (p.val&0xf));\n+\t      a->constant = ((p & 0xf00) >> 4) | (p & 0xf);\n \t      break;\n \n \t    case 24:\n \t      if (instruction->size == 3)\n \t\t{\n \t\t  p = makelongparameter (cr16_allWords, 16, inst_bit_size);\n-\t\t  a->constant = ((((p.val>>16)&0xf) << 20)\n-\t\t\t\t | (((p.val>>24)&0xf) << 16)\n-\t\t\t\t | (p.val & 0xffff));\n+\t\t  a->constant = ((((p >> 16) & 0xf) << 20)\n+\t\t\t\t | (((p >> 24) & 0xf) << 16)\n+\t\t\t\t | (p & 0xffff));\n \t\t}\n \t      else if (instruction->size == 2)\n \t\t{\n \t\t  p = makelongparameter (cr16_allWords, 8, inst_bit_size);\n-\t\t  a->constant = p.val;\n+\t\t  a->constant = p;\n \t\t}\n \t      break;\n \n \t    default:\n \t      p = makelongparameter (cr16_allWords,\n \t\t\t\t     inst_bit_size - (start_bits + a->size),\n \t\t\t\t     inst_bit_size - start_bits);\n-\t      a->constant = p.val;\n+\t      a->constant = p;\n \t      break;\n \t    }\n \t}\n@@ -524,7 +511,7 @@ make_argument (argument * a, int start_bits)\n \t  p = makelongparameter (cr16_allWords,\n \t\t\t\t inst_bit_size - (start_bits + a->size),\n \t\t\t\t inst_bit_size - start_bits);\n-\t  a->constant = p.val;\n+\t  a->constant = p;\n \t}\n       break;\n \n@@ -721,18 +708,18 @@ print_arguments (ins *currentInsn, bfd_vma memaddr, struct disassemble_info *inf\n \n       /* For \"bal (ra), disp17\" instruction only.  */\n       if ((IS_INSN_MNEMONIC (\"bal\")) && (i == 0) && instruction->size == 2)\n-        {\n-          info->fprintf_func (info->stream, \"(ra),\");\n-          continue;\n-        }\n+\t{\n+\t  info->fprintf_func (info->stream, \"(ra),\");\n+\t  continue;\n+\t}\n \n       if ((INST_HAS_REG_LIST) && (i == 2))\n-        info->fprintf_func (info->stream, \"RA\");\n+\tinfo->fprintf_func (info->stream, \"RA\");\n       else\n-        print_arg (&currentInsn->arg[i], memaddr, info);\n+\tprint_arg (&currentInsn->arg[i], memaddr, info);\n \n       if ((i != currentInsn->nargs - 1) && (!IS_INSN_MNEMONIC (\"b\")))\n-        info->fprintf_func (info->stream, \",\");\n+\tinfo->fprintf_func (info->stream, \",\");\n     }\n }\n \n@@ -814,17 +801,18 @@ print_insn_cr16 (bfd_vma memaddr, struct disassemble_info *info)\n   if (is_decoded > 0 && (cr16_words[0] != 0 || cr16_words[1] != 0))\n     {\n       if (strneq (instruction->mnemonic, \"cinv\", 4))\n-        info->fprintf_func (info->stream,\"%s\", getcinvstring (instruction->mnemonic));\n+\tinfo->fprintf_func (info->stream,\"%s\",\n+\t\t\t    getcinvstring (instruction->mnemonic));\n       else\n-        info->fprintf_func (info->stream, \"%s\", instruction->mnemonic);\n+\tinfo->fprintf_func (info->stream, \"%s\", instruction->mnemonic);\n \n       if (((cr16_currInsn.nargs = get_number_of_operands ()) != 0)\n \t  && ! (IS_INSN_MNEMONIC (\"b\")))\n-        info->fprintf_func (info->stream, \"\\t\");\n+\tinfo->fprintf_func (info->stream, \"\\t\");\n       cr16_make_instruction ();\n       /* For push/pop/pushrtn with RA instructions.  */\n       if ((INST_HAS_REG_LIST) && ((cr16_words[0] >> 7) & 0x1))\n-        cr16_currInsn.nargs +=1;\n+\tcr16_currInsn.nargs +=1;\n       print_arguments (&cr16_currInsn, memaddr, info);\n       return cr16_currInsn.size;\n     }"
    }
  ]
}