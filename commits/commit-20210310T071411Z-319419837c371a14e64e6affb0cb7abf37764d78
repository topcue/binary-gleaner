{
  "sha": "319419837c371a14e64e6affb0cb7abf37764d78",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzE5NDE5ODM3YzM3MWExNGU2NGU2YWZmYjBjYjdhYmYzNzc2NGQ3OA==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-10T07:14:11Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-10T07:14:11Z"
    },
    "message": "x86: correct decoding of nop/reserved space (0f18 ... 0x1f)\n\nAll encodings not used in this range are (reserved) NOPs. Hence their\ndecoding should be fully consistent. For this to work the PREFIX_IGNORED\nlogic needs slightly extending, such that the attribute will also\n- have an effect when used inside prefix_table[], yet without always\n  falling back to using slot 0,\n- cause prefixes marked as ignored while decoding through prefix_table[]\n  to no longer be considered decoded, when encountered in a subsequent\n  decoding step.\n\nIn adjacent code also drop meaningless PREFIX_OPCODE.",
    "tree": {
      "sha": "ba21e51c48e5828c6d7bf1a48aed47b2f714c053",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ba21e51c48e5828c6d7bf1a48aed47b2f714c053"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/319419837c371a14e64e6affb0cb7abf37764d78",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/319419837c371a14e64e6affb0cb7abf37764d78",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/319419837c371a14e64e6affb0cb7abf37764d78",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/319419837c371a14e64e6affb0cb7abf37764d78/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "67b0f684803f5bec9b801c43fe1559bc88c15bb6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/67b0f684803f5bec9b801c43fe1559bc88c15bb6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/67b0f684803f5bec9b801c43fe1559bc88c15bb6"
    }
  ],
  "stats": {
    "total": 2497,
    "additions": 2433,
    "deletions": 64
  },
  "files": [
    {
      "sha": "2cee4f5d264483682dac07335ee1720c7a8a0e81",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -1,3 +1,12 @@\n+2021-03-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* testsuite/gas/i386/prefetch.d,\n+\ttestsuite/gas/i386/prefetch-intel.d,\n+\ttestsuite/gas/i386/x86-64-prefetch.d,\n+\ttestsuite/gas/i386/x86-64-prefetch-intel.d: Adjust expectations.\n+\t* testsuite/gas/i386/nops-8.s, testsuite/gas/i386/nops-8.d: New.\n+\t* testsuite/gas/i386/i386.exp: Run new test.\n+\n 2021-03-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (check_hle): Replace HLEPrefix* by Prefix*."
    },
    {
      "sha": "2282f527aaecdbc1889f13e29b48f1f1697246b0",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -134,6 +134,7 @@ if [gas_32_check] then {\n     run_dump_test \"nops-5-i686\"\n     run_dump_test \"nops-6\"\n     run_dump_test \"nops-7\"\n+    run_dump_test \"nops-8\"\n     run_dump_test \"noreg16\"\n     run_list_test \"noreg16\"\n     run_dump_test \"noreg16-data32\""
    },
    {
      "sha": "2c34410233fc7b239ab0af9ddf2c2085db3103dc",
      "filename": "gas/testsuite/gas/i386/nops-8.d",
      "status": "added",
      "additions": 2327,
      "deletions": 0,
      "changes": 2327,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/nops-8.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/nops-8.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/nops-8.d?ref=319419837c371a14e64e6affb0cb7abf37764d78"
    },
    {
      "sha": "47f1c2689d05388ff686342bde5b1c3e1e6ab626",
      "filename": "gas/testsuite/gas/i386/nops-8.s",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/nops-8.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/nops-8.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/nops-8.s?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -0,0 +1,19 @@\n+\t.text\n+\t.irp opc, 18, 19, 1a, 1b, 1c, 1d, 1e, 1f\n+_0f\\opc:\n+\t.irp pfx, , 66, f3, f2\n+\t.irp mod, 3, 0\n+\t.irp reg, 0, 1, 2, 3, 4, 5, 6, 7\n+\t.irp rm, 0, 1, 2, 3, 4, 5, 6, 7\n+\t.if !\\mod && \\rm\n+\t.exitm\n+\t.endif\n+\t.ifnb \\pfx\n+\t.byte 0x\\pfx\n+\t.endif\n+\t.byte 0xf, 0x\\opc, (\\mod << 6) | (\\reg << 3) | \\rm\n+\t.endr\n+\t.endr\n+\t.endr\n+\t.endr\n+\t.endr"
    },
    {
      "sha": "39307f2937ac863634bb32a280d7cd8dd68e76e6",
      "filename": "gas/testsuite/gas/i386/prefetch-intel.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/prefetch-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/prefetch-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/prefetch-intel.d?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -21,7 +21,7 @@ Disassembly of section .text:\n \\s*[a-f0-9]+:\t0f 18 08             \tprefetcht0 BYTE PTR \\[eax\\]\n \\s*[a-f0-9]+:\t0f 18 10             \tprefetcht1 BYTE PTR \\[eax\\]\n \\s*[a-f0-9]+:\t0f 18 18             \tprefetcht2 BYTE PTR \\[eax\\]\n-\\s*[a-f0-9]+:\t0f 18 20             \tnop/reserved BYTE PTR \\[eax\\]\n-\\s*[a-f0-9]+:\t0f 18 28             \tnop/reserved BYTE PTR \\[eax\\]\n-\\s*[a-f0-9]+:\t0f 18 30             \tnop/reserved BYTE PTR \\[eax\\]\n-\\s*[a-f0-9]+:\t0f 18 38             \tnop/reserved BYTE PTR \\[eax\\]\n+\\s*[a-f0-9]+:\t0f 18 20             \tnop    DWORD PTR \\[eax\\]\n+\\s*[a-f0-9]+:\t0f 18 28             \tnop    DWORD PTR \\[eax\\]\n+\\s*[a-f0-9]+:\t0f 18 30             \tnop    DWORD PTR \\[eax\\]\n+\\s*[a-f0-9]+:\t0f 18 38             \tnop    DWORD PTR \\[eax\\]"
    },
    {
      "sha": "b37f8aedbed3c0735aa437368f3a74e3a5fb11dd",
      "filename": "gas/testsuite/gas/i386/prefetch.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/prefetch.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/prefetch.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/prefetch.d?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -20,7 +20,7 @@ Disassembly of section .text:\n \\s*[a-f0-9]+:\t0f 18 08             \tprefetcht0 \\(%eax\\)\n \\s*[a-f0-9]+:\t0f 18 10             \tprefetcht1 \\(%eax\\)\n \\s*[a-f0-9]+:\t0f 18 18             \tprefetcht2 \\(%eax\\)\n-\\s*[a-f0-9]+:\t0f 18 20             \tnop/reserved \\(%eax\\)\n-\\s*[a-f0-9]+:\t0f 18 28             \tnop/reserved \\(%eax\\)\n-\\s*[a-f0-9]+:\t0f 18 30             \tnop/reserved \\(%eax\\)\n-\\s*[a-f0-9]+:\t0f 18 38             \tnop/reserved \\(%eax\\)\n+\\s*[a-f0-9]+:\t0f 18 20             \tnopl   \\(%eax\\)\n+\\s*[a-f0-9]+:\t0f 18 28             \tnopl   \\(%eax\\)\n+\\s*[a-f0-9]+:\t0f 18 30             \tnopl   \\(%eax\\)\n+\\s*[a-f0-9]+:\t0f 18 38             \tnopl   \\(%eax\\)"
    },
    {
      "sha": "4b5995f474e6715d76e2f5d879ed2182d8dc0304",
      "filename": "gas/testsuite/gas/i386/x86-64-prefetch-intel.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/x86-64-prefetch-intel.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/x86-64-prefetch-intel.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-prefetch-intel.d?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -21,7 +21,7 @@ Disassembly of section .text:\n \\s*[a-f0-9]+:\t0f 18 08             \tprefetcht0 BYTE PTR \\[rax\\]\n \\s*[a-f0-9]+:\t0f 18 10             \tprefetcht1 BYTE PTR \\[rax\\]\n \\s*[a-f0-9]+:\t0f 18 18             \tprefetcht2 BYTE PTR \\[rax\\]\n-\\s*[a-f0-9]+:\t0f 18 20             \tnop/reserved BYTE PTR \\[rax\\]\n-\\s*[a-f0-9]+:\t0f 18 28             \tnop/reserved BYTE PTR \\[rax\\]\n-\\s*[a-f0-9]+:\t0f 18 30             \tnop/reserved BYTE PTR \\[rax\\]\n-\\s*[a-f0-9]+:\t0f 18 38             \tnop/reserved BYTE PTR \\[rax\\]\n+\\s*[a-f0-9]+:\t0f 18 20             \tnop    DWORD PTR \\[rax\\]\n+\\s*[a-f0-9]+:\t0f 18 28             \tnop    DWORD PTR \\[rax\\]\n+\\s*[a-f0-9]+:\t0f 18 30             \tnop    DWORD PTR \\[rax\\]\n+\\s*[a-f0-9]+:\t0f 18 38             \tnop    DWORD PTR \\[rax\\]"
    },
    {
      "sha": "121592b6ecc0e2d094d04d653559465dddb93554",
      "filename": "gas/testsuite/gas/i386/x86-64-prefetch.d",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/x86-64-prefetch.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/gas/testsuite/gas/i386/x86-64-prefetch.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-prefetch.d?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -21,7 +21,7 @@ Disassembly of section .text:\n \\s*[a-f0-9]+:\t0f 18 08             \tprefetcht0 \\(%rax\\)\n \\s*[a-f0-9]+:\t0f 18 10             \tprefetcht1 \\(%rax\\)\n \\s*[a-f0-9]+:\t0f 18 18             \tprefetcht2 \\(%rax\\)\n-\\s*[a-f0-9]+:\t0f 18 20             \tnop/reserved \\(%rax\\)\n-\\s*[a-f0-9]+:\t0f 18 28             \tnop/reserved \\(%rax\\)\n-\\s*[a-f0-9]+:\t0f 18 30             \tnop/reserved \\(%rax\\)\n-\\s*[a-f0-9]+:\t0f 18 38             \tnop/reserved \\(%rax\\)\n+\\s*[a-f0-9]+:\t0f 18 20             \tnopl   \\(%rax\\)\n+\\s*[a-f0-9]+:\t0f 18 28             \tnopl   \\(%rax\\)\n+\\s*[a-f0-9]+:\t0f 18 30             \tnopl   \\(%rax\\)\n+\\s*[a-f0-9]+:\t0f 18 38             \tnopl   \\(%rax\\)"
    },
    {
      "sha": "7f526d702fd7d9beef447e135a1029fa0f01b644",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -1,3 +1,19 @@\n+2021-03-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* opcodes/i386-dis.c (MOD_0F18_REG_4, MOD_0F18_REG_5,\n+\tMOD_0F18_REG_6, MOD_0F18_REG_7): Delete.\n+\t(reg_table): Don't link to mod_table[] where not needed. Add\n+\tPREFIX_IGNORED to nop entries.\n+\t(prefix_table): Replace PREFIX_OPCODE in nop entries.\n+\t(mod_table): Add nop entries next to prefetch ones. Drop\n+\tMOD_0F18_REG_4, MOD_0F18_REG_5, MOD_0F18_REG_6, and\n+\tMOD_0F18_REG_7 entries. Add PREFIX_IGNORED to nop entries.\n+\t(rm_table): Add PREFIX_IGNORED to nop entries. Drop\n+\tPREFIX_OPCODE from endbr* entries.\n+\t(get_valid_dis386): Also consider entry's name when zapping\n+\tvindex.\n+\t(print_insn): Handle PREFIX_IGNORED.\n+\n 2021-03-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* opcodes/i386-gen.c (opcode_modifiers): Delete NoTrackPrefixOk,"
    },
    {
      "sha": "3d3800efe8e5f354c02561052a2af0594fe87bb0",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 45,
      "deletions": 48,
      "changes": 93,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/319419837c371a14e64e6affb0cb7abf37764d78/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/319419837c371a14e64e6affb0cb7abf37764d78/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=319419837c371a14e64e6affb0cb7abf37764d78",
      "patch": "@@ -743,10 +743,6 @@ enum\n   MOD_0F18_REG_1,\n   MOD_0F18_REG_2,\n   MOD_0F18_REG_3,\n-  MOD_0F18_REG_4,\n-  MOD_0F18_REG_5,\n-  MOD_0F18_REG_6,\n-  MOD_0F18_REG_7,\n   MOD_0F1A_PREFIX_0,\n   MOD_0F1B_PREFIX_0,\n   MOD_0F1B_PREFIX_1,\n@@ -2907,10 +2903,10 @@ static const struct dis386 reg_table[][8] = {\n     { MOD_TABLE (MOD_0F18_REG_1) },\n     { MOD_TABLE (MOD_0F18_REG_2) },\n     { MOD_TABLE (MOD_0F18_REG_3) },\n-    { MOD_TABLE (MOD_0F18_REG_4) },\n-    { MOD_TABLE (MOD_0F18_REG_5) },\n-    { MOD_TABLE (MOD_0F18_REG_6) },\n-    { MOD_TABLE (MOD_0F18_REG_7) },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n   },\n   /* REG_0F1C_P_0_MOD_0 */\n   {\n@@ -2925,13 +2921,13 @@ static const struct dis386 reg_table[][8] = {\n   },\n   /* REG_0F1E_P_1_MOD_3 */\n   {\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"rdsspK\",\t\t{ Edq }, PREFIX_OPCODE },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"rdsspK\",\t\t{ Edq }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n     { RM_TABLE (RM_0F1E_P_1_MOD_3_REG_7) },\n   },\n   /* REG_0F38D8_PREFIX_1 */\n@@ -3287,17 +3283,17 @@ static const struct dis386 prefix_table[][4] = {\n   /* PREFIX_0F1C */\n   {\n     { MOD_TABLE (MOD_0F1C_PREFIX_0) },\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n+    { \"nopQ\",\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t{ Ev }, 0 },\n+    { \"nopQ\",\t{ Ev }, PREFIX_IGNORED },\n   },\n \n   /* PREFIX_0F1E */\n   {\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n+    { \"nopQ\",\t{ Ev }, 0 },\n     { MOD_TABLE (MOD_0F1E_PREFIX_1) },\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n-    { \"nopQ\",\t{ Ev }, PREFIX_OPCODE },\n+    { \"nopQ\",\t{ Ev }, 0 },\n+    { NULL,\t{ XX }, PREFIX_IGNORED },\n   },\n \n   /* PREFIX_0F2A */\n@@ -8201,34 +8197,22 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_0F18_REG_0 */\n     { \"prefetchnta\",\t{ Mb }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n   },\n   {\n     /* MOD_0F18_REG_1 */\n     { \"prefetcht0\",\t{ Mb }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n   },\n   {\n     /* MOD_0F18_REG_2 */\n     { \"prefetcht1\",\t{ Mb }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n   },\n   {\n     /* MOD_0F18_REG_3 */\n     { \"prefetcht2\",\t{ Mb }, 0 },\n-  },\n-  {\n-    /* MOD_0F18_REG_4 */\n-    { \"nop/reserved\",\t{ Mb }, 0 },\n-  },\n-  {\n-    /* MOD_0F18_REG_5 */\n-    { \"nop/reserved\",\t{ Mb }, 0 },\n-  },\n-  {\n-    /* MOD_0F18_REG_6 */\n-    { \"nop/reserved\",\t{ Mb }, 0 },\n-  },\n-  {\n-    /* MOD_0F18_REG_7 */\n-    { \"nop/reserved\",\t{ Mb }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, 0 },\n   },\n   {\n     /* MOD_0F1A_PREFIX_0 */\n@@ -8243,7 +8227,7 @@ static const struct dis386 mod_table[][2] = {\n   {\n     /* MOD_0F1B_PREFIX_1 */\n     { \"bndmk\",\t\t{ Gbnd, Mv_bnd }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n   },\n   {\n     /* MOD_0F1C_PREFIX_0 */\n@@ -8252,7 +8236,7 @@ static const struct dis386 mod_table[][2] = {\n   },\n   {\n     /* MOD_0F1E_PREFIX_1 */\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n     { REG_TABLE (REG_0F1E_P_1_MOD_3) },\n   },\n   {\n@@ -9034,14 +9018,14 @@ static const struct dis386 rm_table[][8] = {\n   },\n   {\n     /* RM_0F1E_P_1_MOD_3_REG_7 */\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"endbr64\",\t{ Skip_MODRM },  PREFIX_OPCODE },\n-    { \"endbr32\",\t{ Skip_MODRM },  PREFIX_OPCODE },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n-    { \"nopQ\",\t\t{ Ev }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"endbr64\",\t{ Skip_MODRM }, 0 },\n+    { \"endbr32\",\t{ Skip_MODRM }, 0 },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n+    { \"nopQ\",\t\t{ Ev }, PREFIX_IGNORED },\n   },\n   {\n     /* RM_0F3A0F_P_1_MOD_3_REG_0 */\n@@ -9471,7 +9455,8 @@ get_valid_dis386 (const struct dis386 *dp, disassemble_info *info)\n \t      /* Check if prefix should be ignored.  */\n \t      if ((((prefix_table[dp->op[1].bytemode][vindex].prefix_requirement\n \t\t     & PREFIX_IGNORED) >> PREFIX_IGNORED_SHIFT)\n-\t\t   & prefix) != 0)\n+\t\t   & prefix) != 0\n+\t\t  && !prefix_table[dp->op[1].bytemode][vindex].name)\n \t\tvindex = 0;\n \t    }\n \n@@ -10245,6 +10230,18 @@ print_insn (bfd_vma pc, disassemble_info *info)\n \t  return end_codep - priv.the_buffer;\n \t}\n       break;\n+\n+    case PREFIX_IGNORED:\n+      /* Zap data size and rep prefixes from used_prefixes and reinstate their\n+\t origins in all_prefixes.  */\n+      used_prefixes &= ~PREFIX_OPCODE;\n+      if (last_data_prefix >= 0)\n+\tall_prefixes[last_repz_prefix] = 0x66;\n+      if (last_repz_prefix >= 0)\n+\tall_prefixes[last_repz_prefix] = 0xf3;\n+      if (last_repnz_prefix >= 0)\n+\tall_prefixes[last_repnz_prefix] = 0xf2;\n+      break;\n     }\n \n   /* Check if the REX prefix is used.  */"
    }
  ]
}