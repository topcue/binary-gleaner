{
  "sha": "d66beefaf6334d69b638b3300e264f7996c572dc",
  "node_id": "C_kwDOANOeidoAKGQ2NmJlZWZhZjYzMzRkNjliNjM4YjMzMDBlMjY0Zjc5OTZjNTcyZGM",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-13T01:11:53Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-18T17:34:05Z"
    },
    "message": "Simplify Ada catchpoints\n\nAll the Ada catchpoints use the same breakpoint_ops contents, because\nthe catchpoint itself records its kind.  This patch simplifies the\ncode by removing the redundant ops structures.",
    "tree": {
      "sha": "a67e8d17b06eaff6ade678a7049d0f869fd7a5ce",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a67e8d17b06eaff6ade678a7049d0f869fd7a5ce"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d66beefaf6334d69b638b3300e264f7996c572dc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d66beefaf6334d69b638b3300e264f7996c572dc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d66beefaf6334d69b638b3300e264f7996c572dc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d66beefaf6334d69b638b3300e264f7996c572dc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de8e4cb3af98396ecad849588c9c05a45a9e823c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de8e4cb3af98396ecad849588c9c05a45a9e823c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de8e4cb3af98396ecad849588c9c05a45a9e823c"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 3,
    "deletions": 65
  },
  "files": [
    {
      "sha": "642527e068c38a4f761fb146004c2f0499c67aa2",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 3,
      "deletions": 65,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d66beefaf6334d69b638b3300e264f7996c572dc/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d66beefaf6334d69b638b3300e264f7996c572dc/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=d66beefaf6334d69b638b3300e264f7996c572dc",
      "patch": "@@ -12042,21 +12042,15 @@ print_recreate_exception (struct breakpoint *b, struct ui_file *fp)\n   print_recreate_thread (b, fp);\n }\n \n-/* Virtual tables for various breakpoint types.  */\n+/* Virtual table for breakpoint type.  */\n static struct breakpoint_ops catch_exception_breakpoint_ops;\n-static struct breakpoint_ops catch_exception_unhandled_breakpoint_ops;\n-static struct breakpoint_ops catch_assert_breakpoint_ops;\n-static struct breakpoint_ops catch_handlers_breakpoint_ops;\n \n /* See ada-lang.h.  */\n \n bool\n is_ada_exception_catchpoint (breakpoint *bp)\n {\n-  return (bp->ops == &catch_exception_breakpoint_ops\n-\t  || bp->ops == &catch_exception_unhandled_breakpoint_ops\n-\t  || bp->ops == &catch_assert_breakpoint_ops\n-\t  || bp->ops == &catch_handlers_breakpoint_ops);\n+  return bp->ops == &catch_exception_breakpoint_ops;\n }\n \n /* Split the arguments specified in a \"catch exception\" command.  \n@@ -12166,32 +12160,6 @@ ada_exception_sym_name (enum ada_exception_catchpoint_kind ex)\n     }\n }\n \n-/* Return the breakpoint ops \"virtual table\" used for catchpoints\n-   of the EX kind.  */\n-\n-static const struct breakpoint_ops *\n-ada_exception_breakpoint_ops (enum ada_exception_catchpoint_kind ex)\n-{\n-  switch (ex)\n-    {\n-      case ada_catch_exception:\n-\treturn (&catch_exception_breakpoint_ops);\n-\tbreak;\n-      case ada_catch_exception_unhandled:\n-\treturn (&catch_exception_unhandled_breakpoint_ops);\n-\tbreak;\n-      case ada_catch_assert:\n-\treturn (&catch_assert_breakpoint_ops);\n-\tbreak;\n-      case ada_catch_handlers:\n-\treturn (&catch_handlers_breakpoint_ops);\n-\tbreak;\n-      default:\n-\tinternal_error (__FILE__, __LINE__,\n-\t\t\t_(\"unexpected catchpoint kind (%d)\"), ex);\n-    }\n-}\n-\n /* Return the condition that will be used to match the current exception\n    being raised with the exception that the user wants to catch.  This\n    assumes that this condition is used when the inferior just triggered\n@@ -12285,7 +12253,7 @@ ada_exception_sal (enum ada_exception_catchpoint_kind ex,\n   *addr_string = sym_name;\n \n   /* Set OPS.  */\n-  *ops = ada_exception_breakpoint_ops (ex);\n+  *ops = &catch_exception_breakpoint_ops;\n \n   return find_function_start_sal (sym, 1);\n }\n@@ -13445,36 +13413,6 @@ initialize_ada_catchpoint_ops (void)\n   ops->print_one = print_one_exception;\n   ops->print_mention = print_mention_exception;\n   ops->print_recreate = print_recreate_exception;\n-\n-  ops = &catch_exception_unhandled_breakpoint_ops;\n-  *ops = bkpt_breakpoint_ops;\n-  ops->allocate_location = allocate_location_exception;\n-  ops->re_set = re_set_exception;\n-  ops->check_status = check_status_exception;\n-  ops->print_it = print_it_exception;\n-  ops->print_one = print_one_exception;\n-  ops->print_mention = print_mention_exception;\n-  ops->print_recreate = print_recreate_exception;\n-\n-  ops = &catch_assert_breakpoint_ops;\n-  *ops = bkpt_breakpoint_ops;\n-  ops->allocate_location = allocate_location_exception;\n-  ops->re_set = re_set_exception;\n-  ops->check_status = check_status_exception;\n-  ops->print_it = print_it_exception;\n-  ops->print_one = print_one_exception;\n-  ops->print_mention = print_mention_exception;\n-  ops->print_recreate = print_recreate_exception;\n-\n-  ops = &catch_handlers_breakpoint_ops;\n-  *ops = bkpt_breakpoint_ops;\n-  ops->allocate_location = allocate_location_exception;\n-  ops->re_set = re_set_exception;\n-  ops->check_status = check_status_exception;\n-  ops->print_it = print_it_exception;\n-  ops->print_one = print_one_exception;\n-  ops->print_mention = print_mention_exception;\n-  ops->print_recreate = print_recreate_exception;\n }\n \n /* This module's 'new_objfile' observer.  */"
    }
  ]
}