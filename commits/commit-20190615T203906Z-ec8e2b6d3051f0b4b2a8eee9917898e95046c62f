{
  "sha": "ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWM4ZTJiNmQzMDUxZjBiNGIyYThlZWU5OTE3ODk4ZTk1MDQ2YzYyZg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-14T22:43:00Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-06-15T20:39:06Z"
    },
    "message": "gdb: Don't allow annotations to influence what else GDB prints\n\nThe annotations should be additional information printed by GDB to be\nconsumed by users (GUIs), but GDB shouldn't reduce what it prints\nbased on whether annotations are on or not.  However, this is what\nhappens for annotate_source_line.\n\nThis commit makes annotate_source_line a void function that simply\noutputs the annotation information, GDB will then print the contents\nof the source line to the terminal in the normal way.\n\nSome tests needed to be updated after this commit.\n\ngdb/ChangeLog:\n\n\t* annotate.c (annotate_source_line): Change return type to void,\n\tupdate implementation to match.\n\t* annotate.h (annotate_source_line): Change return type to void,\n\tupdate header comment.\n\t* stack.c (print_frame_info): Don't change what frame information\n\tis printed based on whether annotations are on or not.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/annota1.exp: Update expected results.\n\t* gdb.cp/annota2.exp: Likewise.\n\t* gdb.cp/annota3.exp: Likewise.",
    "tree": {
      "sha": "6954251f1ea7259a107f40632c8147beb231d3c7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6954251f1ea7259a107f40632c8147beb231d3c7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0d3abd8cc936360f8c46502135edd2e646473438",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d3abd8cc936360f8c46502135edd2e646473438",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0d3abd8cc936360f8c46502135edd2e646473438"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 52,
    "deletions": 45
  },
  "files": [
    {
      "sha": "d3b9b8d9aee3a7053159494ae65eea7899c33c17",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -1,3 +1,12 @@\n+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* annotate.c (annotate_source_line): Change return type to void,\n+\tupdate implementation to match.\n+\t* annotate.h (annotate_source_line): Change return type to void,\n+\tupdate header comment.\n+\t* stack.c (print_frame_info): Don't change what frame information\n+\tis printed based on whether annotations are on or not.\n+\n 2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* annotate.c: Add 'source.h' and 'objfiles.h' includes."
    },
    {
      "sha": "8d8a0196fb02d32f3021f780625ba7b317750c45",
      "filename": "gdb/annotate.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/annotate.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/annotate.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.c?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -434,7 +434,7 @@ annotate_source (const char *filename, int line, int character, int mid,\n \n /* See annotate.h.  */\n \n-bool\n+void\n annotate_source_line (struct symtab *s, int line, int mid_statement,\n \t\t      CORE_ADDR pc)\n {\n@@ -443,17 +443,15 @@ annotate_source_line (struct symtab *s, int line, int mid_statement,\n       if (s->line_charpos == nullptr)\n \topen_source_file_with_line_charpos (s);\n       if (s->fullname == nullptr)\n-\treturn false;\n+\treturn;\n       /* Don't index off the end of the line_charpos array.  */\n       if (line > s->nlines)\n-\treturn false;\n+\treturn;\n \n       annotate_source (s->fullname, line, s->line_charpos[line - 1],\n \t\t       mid_statement, get_objfile_arch (SYMTAB_OBJFILE (s)),\n \t\t       pc);\n-      return true;\n     }\n-  return false;\n }\n \n "
    },
    {
      "sha": "5e9f11d60538b2c7107f9115b1e755c344084976",
      "filename": "gdb/annotate.h",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/annotate.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/annotate.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/annotate.h?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -92,11 +92,8 @@ struct annotate_arg_emitter\n    character position.\n \n    MID_STATEMENT is nonzero if the PC is not at the beginning of that\n-   line.\n-\n-   Return true if successful, false if the file could not be found or\n-   annotations are turned off.  */\n-extern bool annotate_source_line (struct symtab *s, int line,\n+   line.  */\n+extern void annotate_source_line (struct symtab *s, int line,\n \t\t\t\t  int mid_statement, CORE_ADDR pc);\n \n extern void annotate_frame_begin (int, struct gdbarch *, CORE_ADDR);"
    },
    {
      "sha": "b3d113d3b42a2df0384548e1cab7713b77465b28",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 28,
      "deletions": 32,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -965,45 +965,41 @@ print_frame_info (const frame_print_options &fp_opts,\n     {\n       int mid_statement = ((print_what == SRC_LINE)\n \t\t\t   && frame_show_address (frame, sal));\n-      bool done = annotate_source_line (sal.symtab, sal.line, mid_statement,\n-\t\t\t\t\tget_frame_pc (frame));\n+      annotate_source_line (sal.symtab, sal.line, mid_statement,\n+\t\t\t    get_frame_pc (frame));\n \n-      if (!done)\n+      if (deprecated_print_frame_info_listing_hook)\n+\tdeprecated_print_frame_info_listing_hook (sal.symtab, sal.line,\n+\t\t\t\t\t\t  sal.line + 1, 0);\n+      else\n \t{\n-\t  if (deprecated_print_frame_info_listing_hook)\n-\t    deprecated_print_frame_info_listing_hook (sal.symtab, \n-\t\t\t\t\t\t      sal.line, \n-\t\t\t\t\t\t      sal.line + 1, 0);\n-\t  else\n-\t    {\n-\t      struct value_print_options opts;\n-\n-\t      get_user_print_options (&opts);\n-\t      /* We used to do this earlier, but that is clearly\n-\t\t wrong.  This function is used by many different\n-\t\t parts of gdb, including normal_stop in infrun.c,\n-\t\t which uses this to print out the current PC\n-\t\t when we stepi/nexti into the middle of a source\n-\t\t line.  Only the command line really wants this\n-\t\t behavior.  Other UIs probably would like the\n-\t\t ability to decide for themselves if it is desired.  */\n-\t      if (opts.addressprint && mid_statement)\n-\t\t{\n-\t\t  uiout->field_core_addr (\"addr\",\n-\t\t\t\t\t  gdbarch, get_frame_pc (frame));\n-\t\t  uiout->text (\"\\t\");\n-\t\t}\n+\t  struct value_print_options opts;\n \n-\t      print_source_lines (sal.symtab, sal.line, sal.line + 1, 0);\n+\t  get_user_print_options (&opts);\n+\t  /* We used to do this earlier, but that is clearly\n+\t     wrong.  This function is used by many different\n+\t     parts of gdb, including normal_stop in infrun.c,\n+\t     which uses this to print out the current PC\n+\t     when we stepi/nexti into the middle of a source\n+\t     line.  Only the command line really wants this\n+\t     behavior.  Other UIs probably would like the\n+\t     ability to decide for themselves if it is desired.  */\n+\t  if (opts.addressprint && mid_statement)\n+\t    {\n+\t      uiout->field_core_addr (\"addr\",\n+\t\t\t\t      gdbarch, get_frame_pc (frame));\n+\t      uiout->text (\"\\t\");\n \t    }\n-\t}\n \n-      /* If disassemble-next-line is set to on and there is line debug\n-         messages, output assembly codes for next line.  */\n-      if (disassemble_next_line == AUTO_BOOLEAN_TRUE)\n-\tdo_gdb_disassembly (get_frame_arch (frame), -1, sal.pc, sal.end);\n+\t  print_source_lines (sal.symtab, sal.line, sal.line + 1, 0);\n+\t}\n     }\n \n+  /* If disassemble-next-line is set to on and there is line debug\n+     messages, output assembly codes for next line.  */\n+  if (disassemble_next_line == AUTO_BOOLEAN_TRUE)\n+    do_gdb_disassembly (get_frame_arch (frame), -1, sal.pc, sal.end);\n+\n   if (set_current_sal)\n     {\n       CORE_ADDR pc;"
    },
    {
      "sha": "4c7f59b82dfe1a97868de5efe1f9bab8fd149ebe",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/annota1.exp: Update expected results.\n+\t* gdb.cp/annota2.exp: Likewise.\n+\t* gdb.cp/annota3.exp: Likewise.\n+\n 2019-06-15  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/style-logging.exp: Remove path from test name."
    },
    {
      "sha": "3d379f0fd497210cd31d87b45623ab98e5d713a8",
      "filename": "gdb/testsuite/gdb.base/annota1.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.base/annota1.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.base/annota1.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/annota1.exp?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -268,10 +268,10 @@ if [target_info exists gdb,nosignals] {\n     unsupported \"backtrace @ signal handler\"\n } else {\n     gdb_test_multiple \"signal SIGUSR1\" \"send SIGUSR1\" {\n-\t-re \"\\r\\n\\032\\032post-prompt\\r\\nContinuing with signal SIGUSR1.\\r\\n\\r\\n\\032\\032starting\\(\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)|\\(\\r\\n\\r\\n\\032\\032breakpoints-invalid\\)\\)+\\r\\n\\r\\n\\032\\032breakpoint 2\\r\\n\\r\\nBreakpoint 2, \\r\\n\\032\\032frame-begin 0 $hex\\r\\n\\r\\n\\032\\032frame-function-name\\r\\nhandle_USR1\\r\\n\\032\\032frame-args\\r\\n \\\\(\\r\\n\\032\\032arg-begin\\r\\nsig\\r\\n\\032\\032arg-name-end\\r\\n=\\r\\n\\032\\032arg-value -\\r\\n$decimal\\r\\n\\032\\032arg-end\\r\\n\\\\)\\r\\n\\032\\032frame-source-begin\\r\\n at \\r\\n\\032\\032frame-source-file\\r\\n${escapedsrcfile}\\r\\n\\032\\032frame-source-file-end\\r\\n:\\r\\n\\032\\032frame-source-line\\r\\n.*\\r\\n\\032\\032frame-source-end\\r\\n\\r\\n\\r\\n\\032\\032source.*annota1.c:.*:.*:beg:$hex\\r\\n\\r\\n\\032\\032frame-end\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n+\t-re \"\\r\\n\\032\\032post-prompt\\r\\nContinuing with signal SIGUSR1.\\r\\n\\r\\n\\032\\032starting\\(\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)|\\(\\r\\n\\r\\n\\032\\032breakpoints-invalid\\)\\)+\\r\\n\\r\\n\\032\\032breakpoint 2\\r\\n\\r\\nBreakpoint 2, \\r\\n\\032\\032frame-begin 0 $hex\\r\\n\\r\\n\\032\\032frame-function-name\\r\\nhandle_USR1\\r\\n\\032\\032frame-args\\r\\n \\\\(\\r\\n\\032\\032arg-begin\\r\\nsig\\r\\n\\032\\032arg-name-end\\r\\n=\\r\\n\\032\\032arg-value -\\r\\n$decimal\\r\\n\\032\\032arg-end\\r\\n\\\\)\\r\\n\\032\\032frame-source-begin\\r\\n at \\r\\n\\032\\032frame-source-file\\r\\n${escapedsrcfile}\\r\\n\\032\\032frame-source-file-end\\r\\n:\\r\\n\\032\\032frame-source-line\\r\\n.*\\r\\n\\032\\032frame-source-end\\r\\n\\r\\n\\r\\n\\032\\032source.*annota1.c:.*:.*:beg:$hex\\r\\n$decimal\\[^\\r\\n\\]+\\r\\n\\r\\n\\032\\032frame-end\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n \t    pass \"send SIGUSR1\"\n \t}\n-\t-re \"\\r\\n\\032\\032post-prompt\\r\\nContinuing with signal SIGUSR1.\\r\\n\\r\\n\\032\\032starting\\(\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)|\\(\\r\\n\\r\\n\\032\\032breakpoints-invalid\\)\\)+\\r\\n\\r\\n\\032\\032breakpoint 2\\r\\n\\r\\nBreakpoint 2, \\r\\n\\032\\032frame-begin 0 $hex\\r\\n\\r\\n\\032\\032frame-function-name\\r\\nhandle_USR1\\r\\n\\032\\032frame-args\\r\\n \\\\(\\r\\n\\032\\032arg-begin\\r\\nsig\\r\\n\\032\\032arg-name-end\\r\\n=\\r\\n\\032\\032arg-value -\\r\\n$decimal\\r\\n\\032\\032arg-end\\r\\n\\\\)\\r\\n\\032\\032frame-source-begin\\r\\n at \\r\\n\\032\\032frame-source-file\\r\\n.*${srcfile}\\r\\n\\032\\032frame-source-file-end\\r\\n:\\r\\n\\032\\032frame-source-line\\r\\n.*\\r\\n\\032\\032frame-source-end\\r\\n\\r\\n\\r\\n\\032\\032source.*annota1.c:.*:.*:beg:$hex\\r\\n\\r\\n\\032\\032frame-end\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n+\t-re \"\\r\\n\\032\\032post-prompt\\r\\nContinuing with signal SIGUSR1.\\r\\n\\r\\n\\032\\032starting\\(\\(\\r\\n\\r\\n\\032\\032frames-invalid\\)|\\(\\r\\n\\r\\n\\032\\032breakpoints-invalid\\)\\)+\\r\\n\\r\\n\\032\\032breakpoint 2\\r\\n\\r\\nBreakpoint 2, \\r\\n\\032\\032frame-begin 0 $hex\\r\\n\\r\\n\\032\\032frame-function-name\\r\\nhandle_USR1\\r\\n\\032\\032frame-args\\r\\n \\\\(\\r\\n\\032\\032arg-begin\\r\\nsig\\r\\n\\032\\032arg-name-end\\r\\n=\\r\\n\\032\\032arg-value -\\r\\n$decimal\\r\\n\\032\\032arg-end\\r\\n\\\\)\\r\\n\\032\\032frame-source-begin\\r\\n at \\r\\n\\032\\032frame-source-file\\r\\n.*${srcfile}\\r\\n\\032\\032frame-source-file-end\\r\\n:\\r\\n\\032\\032frame-source-line\\r\\n.*\\r\\n\\032\\032frame-source-end\\r\\n\\r\\n\\r\\n\\032\\032source.*annota1.c:.*:.*:beg:$hex\\r\\n$decimal\\[^\\r\\n\\]+\\r\\n\\r\\n\\032\\032frame-end\\r\\n\\r\\n\\032\\032stopped\\r\\n$gdb_prompt$\" {\n \t    setup_xfail \"*-*-*\" 1270\n \t    fail \"send SIGUSR1\"\n \t}"
    },
    {
      "sha": "6699de01a3bc7acb7a0e68871650555f3c249009",
      "filename": "gdb/testsuite/gdb.cp/annota2.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.cp/annota2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.cp/annota2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/annota2.exp?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -243,6 +243,7 @@ set pat [multi_line \"\" \\\n \t     \"\" \\\n \t     \"\" \\\n \t     \"\\032\\032source .*$srcfile.*beg:$hex\" \\\n+\t     \"$decimal\\[^\\r\\n\\]+\" \\\n \t     \"\" \\\n \t     \"\\032\\032frame-end\" \\\n \t     \"\" \\"
    },
    {
      "sha": "8f9a1456912340bfeec6c3357d3b4b48ee3b9bdb",
      "filename": "gdb/testsuite/gdb.cp/annota3.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.cp/annota3.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ec8e2b6d3051f0b4b2a8eee9917898e95046c62f/gdb/testsuite/gdb.cp/annota3.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/annota3.exp?ref=ec8e2b6d3051f0b4b2a8eee9917898e95046c62f",
      "patch": "@@ -164,7 +164,7 @@ gdb_expect_list \"set watch on a.x\" \"$gdb_prompt$\" {\n # annotate-watchpoint\n #\n gdb_test_multiple \"next\" \"watch triggered on a.x\" {\n-    -re \"\\r\\n\\032\\032post-prompt\\r\\n\\r\\n\\032\\032starting\\r\\n\\r\\n\\032\\032watchpoint 3\\r\\n.*atchpoint 3: a.x\\r\\n\\r\\nOld value = 0\\r\\nNew value = 1\\r\\n\\r\\n(\\032\\032frame-begin 0 0x\\[0-9a-z\\]+\\r\\n|)main \\\\(\\\\) at .*$srcfile:$decimal\\r\\n\\r\\n\\032\\032source .*$srcfile.*beg:$hex\\r\\n\\r\\n\\032\\032stopped\\r\\n.*$gdb_prompt$\" { \n+    -re \"\\r\\n\\032\\032post-prompt\\r\\n\\r\\n\\032\\032starting\\r\\n\\r\\n\\032\\032watchpoint 3\\r\\n.*atchpoint 3: a.x\\r\\n\\r\\nOld value = 0\\r\\nNew value = 1\\r\\n\\r\\n(\\032\\032frame-begin 0 0x\\[0-9a-z\\]+\\r\\n|)main \\\\(\\\\) at .*$srcfile:$decimal\\r\\n\\r\\n\\032\\032source .*$srcfile.*beg:$hex\\r\\n$decimal\\[^\\r\\n\\]+\\r\\n\\r\\n\\032\\032stopped\\r\\n.*$gdb_prompt$\" { \n \tpass \"watch triggered on a.x\"\n     }\n }"
    }
  ]
}