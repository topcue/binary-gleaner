{
  "sha": "fadf6add3028d477457c809f60f07643964d7fd2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmFkZjZhZGQzMDI4ZDQ3NzQ1N2M4MDlmNjBmMDc2NDM5NjRkN2ZkMg==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:50:32Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-03-23T13:50:32Z"
    },
    "message": "gdb: remove unpush_target free function\n\nunpush_target unpushes the passed-in target from the current inferior's\ntarget stack.  Calling it is therefore an implicit dependency on the\ncurrent global inferior.  Remove that function and make the callers use\nthe inferior::unpush_target method directly.  This sometimes allows\nusing the inferior from the context rather than the global current\ninferior.\n\ntarget_unpusher::operator() now needs to be implemented in target.c,\notherwise target.h and inferior.h both need to include each other, and\nthat wouldn't work.\n\ngdb/ChangeLog:\n\n\t* target.h (unpush_target): Remove, update all callers\n\tto use `inferior::unpush_target` instead.\n\t(struct target_unpusher) <operator()>: Just declare.\n\t* target.c (unpush_target): Remove.\n\t(target_unpusher::operator()): New.\n\nChange-Id: Ia5172dfb3f373e0a75b991885b50322ca2142a8c",
    "tree": {
      "sha": "6892c92baa1dc60e5e238e9bee69c0fd2fe732cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6892c92baa1dc60e5e238e9bee69c0fd2fe732cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fadf6add3028d477457c809f60f07643964d7fd2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fadf6add3028d477457c809f60f07643964d7fd2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fadf6add3028d477457c809f60f07643964d7fd2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fadf6add3028d477457c809f60f07643964d7fd2/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "70e958370c8f4dc3222b658a725571d8d2f5f98a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/70e958370c8f4dc3222b658a725571d8d2f5f98a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/70e958370c8f4dc3222b658a725571d8d2f5f98a"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 36,
    "deletions": 35
  },
  "files": [
    {
      "sha": "7396237d90f285f43b19a0f71c98074d1b62a8a4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-23  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* target.h (unpush_target): Remove, update all callers\n+\tto use `inferior::unpush_target` instead.\n+\t(struct target_unpusher) <operator()>: Just declare.\n+\t* target.c (unpush_target): Remove.\n+\t(target_unpusher::operator()): New.\n+\n 2021-03-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* dwarf2/read.c (process_psymtab_comp_unit): Replace abort with an"
    },
    {
      "sha": "a479d0150bc209865d7dbb1dce39d2cd3259bf03",
      "filename": "gdb/aix-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/aix-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/aix-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aix-thread.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -993,7 +993,7 @@ pd_disable (void)\n   if (pd_active)\n     pd_deactivate ();\n   pd_able = 0;\n-  unpush_target (&aix_thread_ops);\n+  current_inferior ()->unpush_target (&aix_thread_ops);\n }\n \n /* new_objfile observer callback."
    },
    {
      "sha": "17db2fe1cd60dbdc4a4d2676ea784d382ba504e4",
      "filename": "gdb/bsd-kvm.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/bsd-kvm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/bsd-kvm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-kvm.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -132,7 +132,7 @@ bsd_kvm_target_open (const char *arg, int from_tty)\n     error ((\"%s\"), errbuf);\n \n   bsd_kvm_corefile = filename;\n-  unpush_target (&bsd_kvm_ops);\n+  current_inferior ()->unpush_target (&bsd_kvm_ops);\n   core_kd = temp_kd;\n   push_target (&bsd_kvm_ops);\n "
    },
    {
      "sha": "2ee47bfb5c47335d7246182ba06e79648ceecfa1",
      "filename": "gdb/bsd-uthread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/bsd-uthread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/bsd-uthread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bsd-uthread.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -259,7 +259,7 @@ bsd_uthread_deactivate (void)\n   if (!bsd_uthread_active)\n     return;\n \n-  unpush_target (&bsd_uthread_ops);\n+  current_inferior ()->unpush_target (&bsd_uthread_ops);\n }\n \n static void"
    },
    {
      "sha": "a4c1f6354c6e427ca449e9e3f6fc7e5c09e45bd0",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -580,7 +580,7 @@ core_target::detach (inferior *inf, int from_tty)\n   /* Note that 'this' is dangling after this call.  unpush_target\n      closes the target, and our close implementation deletes\n      'this'.  */\n-  unpush_target (this);\n+  inf->unpush_target (this);\n \n   /* Clear the register cache and the frame cache.  */\n   registers_changed ();"
    },
    {
      "sha": "bcc54bd966fe15d6a1e028f5e3fbc241a94f0aed",
      "filename": "gdb/exec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/exec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/exec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/exec.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -671,7 +671,7 @@ program_space::remove_target_sections (void *owner)\n \t    continue;\n \n \t  switch_to_inferior_no_thread (inf);\n-\t  unpush_target (&exec_ops);\n+\t  inf->unpush_target (&exec_ops);\n \t}\n     }\n }"
    },
    {
      "sha": "b8bc2e2598e649ad3e53371d5e9bb470232e19fb",
      "filename": "gdb/inf-child.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/inf-child.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/inf-child.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inf-child.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -207,7 +207,7 @@ void\n inf_child_target::maybe_unpush_target ()\n {\n   if (!inf_child_explicitly_opened)\n-    unpush_target (this);\n+    current_inferior ()->unpush_target (this);\n }\n \n void"
    },
    {
      "sha": "3a3d3def6074eb0559cbbbd93ede95b3587e016e",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -1364,7 +1364,7 @@ thread_db_target::detach (inferior *inf, int from_tty)\n   /* NOTE: From this point on, inferior_ptid is null_ptid.  */\n \n   /* Detach the thread_db target from this inferior.  */\n-  unpush_target (this);\n+  inf->unpush_target (this);\n }\n \n ptid_t\n@@ -1398,7 +1398,7 @@ thread_db_target::wait (ptid_t ptid, struct target_waitstatus *ourstatus,\n       /* New image, it may or may not end up using thread_db.  Assume\n \t not unless we find otherwise.  */\n       delete_thread_db_info (beneath, ptid.pid ());\n-      unpush_target (this);\n+      current_inferior ()->unpush_target (this);\n \n       return ptid;\n     }\n@@ -1420,7 +1420,7 @@ thread_db_target::mourn_inferior ()\n   target_beneath->mourn_inferior ();\n \n   /* Detach the thread_db target from this inferior.  */\n-  unpush_target (this);\n+  current_inferior ()->unpush_target (this);\n }\n \n struct callback_data"
    },
    {
      "sha": "63aa1d1db843e8d64948c2869b8de959041e0e5b",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -620,7 +620,7 @@ ravenscar_thread_target::mourn_inferior ()\n {\n   m_base_ptid = null_ptid;\n   target_ops *beneath = this->beneath ();\n-  unpush_target (this);\n+  current_inferior ()->unpush_target (this);\n   beneath->mourn_inferior ();\n }\n "
    },
    {
      "sha": "1a0cac2f710e543039819af019453b04de5304bd",
      "filename": "gdb/record-btrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-btrace.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -428,7 +428,7 @@ record_btrace_target::disconnect (const char *args,\n   struct target_ops *beneath = this->beneath ();\n \n   /* Do not stop recording, just clean up GDB side.  */\n-  unpush_target (this);\n+  current_inferior ()->unpush_target (this);\n \n   /* Forward disconnect.  */\n   beneath->disconnect (args, from_tty);"
    },
    {
      "sha": "59e4410c0085182391977b6c94bb9a74fdc9d24f",
      "filename": "gdb/record-full.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record-full.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record-full.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record-full.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -2078,7 +2078,7 @@ record_full_core_target::kill ()\n   if (record_debug)\n     fprintf_unfiltered (gdb_stdlog, \"Process record: record_full_core_kill\\n\");\n \n-  unpush_target (this);\n+  current_inferior ()->unpush_target (this);\n }\n \n /* \"fetch_registers\" method for prec over corefile.  */"
    },
    {
      "sha": "483b906c2d06c706f8418a92a00a3a15b445da8a",
      "filename": "gdb/record.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -166,7 +166,7 @@ record_unpush (struct target_ops *t)\n {\n   DEBUG (\"unpush %s\", t->shortname ());\n \n-  unpush_target (t);\n+  current_inferior ()->unpush_target (t);\n }\n \n /* See record.h.  */"
    },
    {
      "sha": "f72bbd2015e407987cb43c60c55b10e8a443ec49",
      "filename": "gdb/remote-sim.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/remote-sim.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/remote-sim.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote-sim.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -699,7 +699,7 @@ gdbsim_target_open (const char *args, int from_tty)\n      operation until after we complete those operations which could\n      error out.  */\n   if (gdbsim_is_open)\n-    unpush_target (&gdbsim_ops);\n+    current_inferior ()->unpush_target (&gdbsim_ops);\n \n   len = (7 + 1\t\t\t/* gdbsim */\n \t + strlen (\" -E little\")\n@@ -834,7 +834,7 @@ gdbsim_target::detach (inferior *inf, int from_tty)\n   if (remote_debug)\n     fprintf_unfiltered (gdb_stdlog, \"gdbsim_detach\\n\");\n \n-  unpush_target (this);\t\t/* calls gdbsim_close to do the real work */\n+  inf->unpush_target (this);\t\t/* calls gdbsim_close to do the real work */\n   if (from_tty)\n     printf_filtered (\"Ending simulator %s debugging\\n\", target_shortname);\n }"
    },
    {
      "sha": "1458185f414fafcbbacec0858f186036cb45ab2d",
      "filename": "gdb/sol-thread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/sol-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/sol-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/sol-thread.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -387,7 +387,7 @@ sol_thread_target::detach (inferior *inf, int from_tty)\n \n   sol_thread_active = 0;\n   inferior_ptid = ptid_t (main_ph.ptid.pid ());\n-  unpush_target (this);\n+  inf->unpush_target (this);\n   beneath->detach (inf, from_tty);\n }\n \n@@ -681,7 +681,7 @@ sol_thread_target::mourn_inferior ()\n \n   sol_thread_active = 0;\n \n-  unpush_target (this);\n+  current_inferior ()->unpush_target (this);\n \n   beneath->mourn_inferior ();\n }"
    },
    {
      "sha": "236aded0a2e175269248ce61ce9f04e8e330dcac",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -160,7 +160,7 @@ set_targetdebug  (const char *args, int from_tty, struct cmd_list_element *c)\n   if (targetdebug)\n     push_target (the_debug_target);\n   else\n-    unpush_target (the_debug_target);\n+    current_inferior ()->unpush_target (the_debug_target);\n }\n \n static void\n@@ -589,14 +589,6 @@ push_target (target_ops_up &&t)\n \n /* See target.h.  */\n \n-int\n-unpush_target (struct target_ops *t)\n-{\n-  return current_inferior ()->unpush_target (t);\n-}\n-\n-/* See target.h.  */\n-\n bool\n target_stack::unpush (target_ops *t)\n {\n@@ -640,7 +632,7 @@ target_stack::unpush (target_ops *t)\n static void\n unpush_target_and_assert (struct target_ops *target)\n {\n-  if (!unpush_target (target))\n+  if (!current_inferior ()->unpush_target (target))\n     {\n       fprintf_unfiltered (gdb_stderr,\n \t\t\t  \"pop_all_targets couldn't find target %s\\n\",\n@@ -681,6 +673,12 @@ target_is_pushed (target_ops *t)\n   return current_inferior ()->target_is_pushed (t);\n }\n \n+void\n+target_unpusher::operator() (struct target_ops *ops) const\n+{\n+  current_inferior ()->unpush_target (ops);\n+}\n+\n /* Default implementation of to_get_thread_local_address.  */\n \n static void"
    },
    {
      "sha": "3a64094ae5b2394350da0283ea5e795949ac4937",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -2390,16 +2390,11 @@ extern void push_target (struct target_ops *);\n /* An overload that deletes the target on failure.  */\n extern void push_target (target_ops_up &&);\n \n-extern int unpush_target (struct target_ops *);\n-\n /* A unique_ptr helper to unpush a target.  */\n \n struct target_unpusher\n {\n-  void operator() (struct target_ops *ops) const\n-  {\n-    unpush_target (ops);\n-  }\n+  void operator() (struct target_ops *ops) const;\n };\n \n /* A unique_ptr that unpushes a target on destruction.  */"
    },
    {
      "sha": "ea703643d8f1b81223ba37110fdee9e0a3ebf1cd",
      "filename": "gdb/tracefile-tfile.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fadf6add3028d477457c809f60f07643964d7fd2/gdb/tracefile-tfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fadf6add3028d477457c809f60f07643964d7fd2/gdb/tracefile-tfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracefile-tfile.c?ref=fadf6add3028d477457c809f60f07643964d7fd2",
      "patch": "@@ -481,7 +481,7 @@ tfile_target_open (const char *arg, int from_tty)\n \n   /* Looks semi-reasonable.  Toss the old trace file and work on the new.  */\n \n-  unpush_target (&tfile_ops);\n+  current_inferior ()->unpush_target (&tfile_ops);\n \n   trace_filename = filename.release ();\n   trace_fd = scratch_chan;\n@@ -551,7 +551,7 @@ tfile_target_open (const char *arg, int from_tty)\n   catch (const gdb_exception &ex)\n     {\n       /* Remove the partially set up target.  */\n-      unpush_target (&tfile_ops);\n+      current_inferior ()->unpush_target (&tfile_ops);\n       throw;\n     }\n "
    }
  ]
}