{
  "sha": "8613fa4c49b7df547fbb89cc26667cd99e7cb2f5",
  "node_id": "C_kwDOANOeidoAKDg2MTNmYTRjNDliN2RmNTQ3ZmJiODljYzI2NjY3Y2Q5OWU3Y2IyZjU",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-27T06:22:30Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-11-27T06:26:41Z"
    },
    "message": "sim: cris: always search for local rvdummy tool\n\nIf the board info sets the sim to a basename that is found via $PATH\n(which is the default dejagnu behavior), the logic here to use its\ndirname to find rvdummy fails because it looks for `./rvdummy`.  So\nswitch it to always use the local build of rvdummy which is the one\nwe want to be testing against in the first place.\n\nIf we get a request for testing against a different setup, we can\nfigure out & document the needs at that point, and then setup some\nconfig knobs to control it.",
    "tree": {
      "sha": "fd4dc14f258a4eddba7669229ac93351d8b90f67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fd4dc14f258a4eddba7669229ac93351d8b90f67"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "950065a38b317c32ffb0b9d4723a59d7faf95726",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/950065a38b317c32ffb0b9d4723a59d7faf95726",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/950065a38b317c32ffb0b9d4723a59d7faf95726"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 2,
    "deletions": 8
  },
  "files": [
    {
      "sha": "905a2da92ecebf0fc6a44c73ddf42a3294c39b2c",
      "filename": "sim/testsuite/cris/hw/rv-n-cris/rvc.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5/sim/testsuite/cris/hw/rv-n-cris/rvc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8613fa4c49b7df547fbb89cc26667cd99e7cb2f5/sim/testsuite/cris/hw/rv-n-cris/rvc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/cris/hw/rv-n-cris/rvc.exp?ref=8613fa4c49b7df547fbb89cc26667cd99e7cb2f5",
      "patch": "@@ -122,14 +122,8 @@ if [istarget cris*-*-*] {\n     global SIMFLAGS_FOR_TARGET\n     set has_rv_and_cris [sim_has_rv_and_cris]\n \n-    # See the logic in sim-defs.exp for more details.\n-    set sim [board_info target sim]\n-    if [string equal \"\" $sim] {\n-\tglobal builddir\n-\tset rvdummy \"$builddir/cris/rvdummy\"\n-    } else {\n-\tset rvdummy \"[file dirname [board_info target sim]]/rvdummy\"\n-    }\n+    global builddir\n+    set rvdummy \"$builddir/cris/rvdummy\"\n \n     # All machines we test and the corresponding assembler option.\n     # We'll only ever test v10 and higher here."
    }
  ]
}