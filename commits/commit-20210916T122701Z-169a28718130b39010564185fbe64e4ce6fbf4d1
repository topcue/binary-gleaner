{
  "sha": "169a28718130b39010564185fbe64e4ce6fbf4d1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTY5YTI4NzE4MTMwYjM5MDEwNTY0MTg1ZmJlNjRlNGNlNmZiZjRkMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-16T12:27:01Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-16T12:27:01Z"
    },
    "message": "[gdb/testsuite] Fix interrupted sleep in multi-threaded test-cases\n\nWhen running test-case gdb.threads/continue-pending-status.exp with native, I\nhave:\n...\n(gdb) continue^M\nContinuing.^M\nPASS: gdb.threads/continue-pending-status.exp: attempt 0: continue for ctrl-c\n^C^M\nThread 1 \"continue-pendin\" received signal SIGINT, Interrupt.^M\n[Switching to Thread 0x7ffff7fc4740 (LWP 1276)]^M\n0x00007ffff758e4c0 in __GI___nanosleep () at nanosleep.c:27^M\n27        return SYSCALL_CANCEL (nanosleep, requested_time, remaining);^M\n(gdb) PASS: gdb.threads/continue-pending-status.exp: attempt 0: caught interrupt\n...\nbut with target board unix/-m32, I run into:\n...\n(gdb) continue^M\nContinuing.^M\nPASS: gdb.threads/continue-pending-status.exp: attempt 0: continue for ctrl-c\n[Thread 0xf74aeb40 (LWP 31957) exited]^M\n[Thread 0xf7cafb40 (LWP 31956) exited]^M\n[Inferior 1 (process 31952) exited normally]^M\n(gdb) Quit^M\n...\n\nThe problem is that the sleep (300) call at the end of main is interrupted,\nwhich causes the inferior to exit before the ctrl-c can be send.\n\nThis problem is described at \"Interrupted System Calls\" in the docs, and the\nsuggested solution (using a sleep loop) indeed fixes the problem.\n\nFix this instead using the more prevalent:\n...\n  alarm (300);\n  ...\n  while (1) sleep (1);\n...\nwhich is roughly equivalent because the sleep is called at the end of main,\nbut slightly better because it guards against hangs from the start rather than\nfrom the end of main.\n\nLikewise in gdb.base/watch_thread_num.exp.\n\nLikewise in gdb.btrace/enable-running.exp, but use the sleep loop there,\nbecause the sleep is not called at the end of main.\n\nTested on x86_64-linux.",
    "tree": {
      "sha": "b575310da7df8a8bc6bc2899dce8a28dd116fbb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b575310da7df8a8bc6bc2899dce8a28dd116fbb1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/169a28718130b39010564185fbe64e4ce6fbf4d1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/169a28718130b39010564185fbe64e4ce6fbf4d1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/169a28718130b39010564185fbe64e4ce6fbf4d1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/169a28718130b39010564185fbe64e4ce6fbf4d1/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0ffd31f0443ffc6dd2608b93737a931ea793e465",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ffd31f0443ffc6dd2608b93737a931ea793e465",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0ffd31f0443ffc6dd2608b93737a931ea793e465"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 14,
    "deletions": 3
  },
  "files": [
    {
      "sha": "46029cf1291628be95451fc00afdbb9cc6fe3191",
      "filename": "gdb/testsuite/gdb.base/watch_thread_num.c",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.base/watch_thread_num.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.base/watch_thread_num.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/watch_thread_num.c?ref=169a28718130b39010564185fbe64e4ce6fbf4d1",
      "patch": "@@ -43,6 +43,8 @@ int main () {\n     void *thread_result;\n     long i;\n \n+    alarm (180);\n+\n     pthread_barrier_init (&threads_started_barrier, NULL, NUM + 1);\n \n     pthread_barrier_init (&threads_started_barrier2, NULL, 2);\n@@ -61,7 +63,10 @@ int main () {\n \n     pthread_join (threads[0], NULL);\n \n-    sleep (180);  /* first child thread exited */\n+    /* first child thread exited */\n+\n+    while (1)\n+      sleep (1);\n \n     exit (EXIT_SUCCESS);\n }"
    },
    {
      "sha": "2db3b7d28cb155efa7e9fa6a8a567a2d3bef2885",
      "filename": "gdb/testsuite/gdb.btrace/enable-running.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.btrace/enable-running.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.btrace/enable-running.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.btrace/enable-running.c?ref=169a28718130b39010564185fbe64e4ce6fbf4d1",
      "patch": "@@ -25,7 +25,9 @@ test (void *arg)\n {\n   /* Let's hope this is long enough for GDB to enable tracing and check that\n      everything is working as expected.  */\n-  sleep (10);\n+  int unslept = 10;\n+  while (unslept > 0)\n+    unslept = sleep (unslept);\n \n   return arg;\n }"
    },
    {
      "sha": "965a071fe329a03d0caf1c29da84ddf50ddd0b56",
      "filename": "gdb/testsuite/gdb.threads/continue-pending-status.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.threads/continue-pending-status.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/169a28718130b39010564185fbe64e4ce6fbf4d1/gdb/testsuite/gdb.threads/continue-pending-status.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/continue-pending-status.c?ref=169a28718130b39010564185fbe64e4ce6fbf4d1",
      "patch": "@@ -41,6 +41,8 @@ main (void)\n {\n   int i;\n \n+  alarm (300);\n+\n   pthread_barrier_init (&barrier, NULL, NUM_THREADS);\n \n   for (i = 0; i < NUM_THREADS; i++)\n@@ -53,6 +55,8 @@ main (void)\n       assert (res == 0);\n     }\n \n-  sleep (300);\n+  while (1)\n+    sleep (1);\n+\n   return 0;\n }"
    }
  ]
}