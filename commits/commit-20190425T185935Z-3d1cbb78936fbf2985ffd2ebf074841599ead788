{
  "sha": "3d1cbb78936fbf2985ffd2ebf074841599ead788",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2QxY2JiNzg5MzZmYmYyOTg1ZmZkMmViZjA3NDg0MTU5OWVhZDc4OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-24T18:13:35Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-04-25T18:59:35Z"
    },
    "message": "Fix memory leak in exception code\n\nPR gdb/24475 concerns a memory leak coming from gdb's exception\nhandling code.\n\nThe leak occurs because throw_exception_sjlj does not arrange to\ndestroy the exception object it is passed.  However, because\ngdb_exception has a destructor, it's undefined to longjmp in this\nsituation.\n\nThis patch fixes the problem by avoiding the need to run any\ndestructors in gdb_rl_callback_handler, by making the gdb_exception\n\"static\".\n\ngdb/ChangeLog\n2019-04-25  Tom Tromey  <tromey@adacore.com>\n\n\tPR gdb/24475:\n\t* event-top.c (gdb_rl_callback_handler): Make \"gdb_rl_expt\"\n\tstatic.",
    "tree": {
      "sha": "728d88d63e015063cbe01606711f2b0b3153dbd2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/728d88d63e015063cbe01606711f2b0b3153dbd2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3d1cbb78936fbf2985ffd2ebf074841599ead788",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1cbb78936fbf2985ffd2ebf074841599ead788",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3d1cbb78936fbf2985ffd2ebf074841599ead788",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3d1cbb78936fbf2985ffd2ebf074841599ead788/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "94aeb44b001ab2d632806242a3bacb0a879abe15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/94aeb44b001ab2d632806242a3bacb0a879abe15",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/94aeb44b001ab2d632806242a3bacb0a879abe15"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 11,
    "deletions": 1
  },
  "files": [
    {
      "sha": "17e10e869b8d542a88727e68c819eb5babb3764b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cbb78936fbf2985ffd2ebf074841599ead788/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cbb78936fbf2985ffd2ebf074841599ead788/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3d1cbb78936fbf2985ffd2ebf074841599ead788",
      "patch": "@@ -1,3 +1,9 @@\n+2019-04-25  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR gdb/24475:\n+\t* event-top.c (gdb_rl_callback_handler): Make \"gdb_rl_expt\"\n+\tstatic.\n+\n 2019-04-25  Tom Tromey  <tromey@adacore.com>\n \n \t* xml-support.c (struct gdb_xml_parser) <set_error>: Take an"
    },
    {
      "sha": "3ccf136ff12d3478bd18c81aa3eb043b3f164cee",
      "filename": "gdb/event-top.c",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3d1cbb78936fbf2985ffd2ebf074841599ead788/gdb/event-top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3d1cbb78936fbf2985ffd2ebf074841599ead788/gdb/event-top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/event-top.c?ref=3d1cbb78936fbf2985ffd2ebf074841599ead788",
      "patch": "@@ -205,11 +205,15 @@ gdb_rl_callback_read_char_wrapper (gdb_client_data client_data)\n static void\n gdb_rl_callback_handler (char *rl) noexcept\n {\n-  struct gdb_exception gdb_rl_expt;\n+  /* This is static to avoid undefined behavior when calling longjmp\n+     -- gdb_exception has a destructor with side effects.  */\n+  static struct gdb_exception gdb_rl_expt;\n   struct ui *ui = current_ui;\n \n   try\n     {\n+      /* Ensure the exception is reset on each call.  */\n+      gdb_rl_expt = {};\n       ui->input_handler (gdb::unique_xmalloc_ptr<char> (rl));\n     }\n   catch (gdb_exception &ex)"
    }
  ]
}