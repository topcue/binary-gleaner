{
  "sha": "44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQ0NjZlNDVjNTFiMWM2OGVkMmY5NWY4NmJjZGIxZjE4ZjA4YjM4MA==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-20T09:19:47Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-08-20T09:19:47Z"
    },
    "message": "Apply a workaround to mitigate a quadratic performance hit in the linker when writing out secondary reloc sections.\n\n\tPR 26406\n\t* elf-bfd.h (struct bfd_elf_section_data): Add\n\thas_secondary_relocs field.\n\t* elf.c (_bfd_elf_copy_special_section_fields): Set the\n\thas_secondary_relocs field for sections which have associated\n\tsecondary relocs.\n\t* elfcode.h (elf_write_relocs): Only call write_secondary_relocs\n\ton sections which have associated secondary relocs.",
    "tree": {
      "sha": "1ff4a510d9fbf38f3c03274b8b5b93018c177bf9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ff4a510d9fbf38f3c03274b8b5b93018c177bf9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2fd7faea8f2c3a267f276ceb6a95f9f537ea7c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2fd7faea8f2c3a267f276ceb6a95f9f537ea7c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2fd7faea8f2c3a267f276ceb6a95f9f537ea7c1"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 34,
    "deletions": 7
  },
  "files": [
    {
      "sha": "8c43a163fc4b5cfc7c36d688536b6889a34ceb58",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
      "patch": "@@ -1,3 +1,14 @@\n+2020-08-20  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 26406\n+\t* elf-bfd.h (struct bfd_elf_section_data): Add\n+\thas_secondary_relocs field.\n+\t* elf.c (_bfd_elf_copy_special_section_fields): Set the\n+\thas_secondary_relocs field for sections which have associated\n+\tsecondary relocs.\n+\t* elfcode.h (elf_write_relocs): Only call write_secondary_relocs\n+\ton sections which have associated secondary relocs.\n+\n 2020-08-15  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-frv.c (elf32_frv_add_symbol_hook): Set SEC_SMALL_DATA on"
    },
    {
      "sha": "eebdf9ac738d55d781ac95d3d813eb51a48300c1",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
      "patch": "@@ -1756,6 +1756,11 @@ struct bfd_elf_section_data\n   /* Link from a text section to its .eh_frame_entry section.  */\n   asection *eh_frame_entry;\n \n+  /* TRUE if the section has secondary reloc sections associated with it.\n+     FIXME: In the future it might be better to change this into a list\n+     of secondary reloc sections, making lookup easier and faster.  */\n+  bfd_boolean has_secondary_relocs;\n+\n   /* A pointer used for various section optimizations.  */\n   void *sec_info;\n };"
    },
    {
      "sha": "ecd9217b34d237a92f7eeb3989fe2c5ed007f9c6",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
      "patch": "@@ -12714,6 +12714,7 @@ _bfd_elf_copy_special_section_fields (const bfd *   ibfd ATTRIBUTE_UNUSED,\n {\n   asection * isec;\n   asection * osec;\n+  struct bfd_elf_section_data * esd;\n \n   if (isection == NULL)\n     return FALSE;\n@@ -12729,8 +12730,9 @@ _bfd_elf_copy_special_section_fields (const bfd *   ibfd ATTRIBUTE_UNUSED,\n   if (osec == NULL)\n     return FALSE;\n \n-  BFD_ASSERT (elf_section_data (osec)->sec_info == NULL);\n-  elf_section_data (osec)->sec_info = elf_section_data (isec)->sec_info;\n+  esd = elf_section_data (osec);\n+  BFD_ASSERT (esd->sec_info == NULL);\n+  esd->sec_info = elf_section_data (isec)->sec_info;\n   osection->sh_type = SHT_RELA;\n   osection->sh_link = elf_onesymtab (obfd);\n   if (osection->sh_link == 0)\n@@ -12770,18 +12772,26 @@ _bfd_elf_copy_special_section_fields (const bfd *   ibfd ATTRIBUTE_UNUSED,\n       return FALSE;\n     }\n \n-  osection->sh_info =\n-    elf_section_data (isection->bfd_section->output_section)->this_idx;\n-\n+  esd = elf_section_data (isection->bfd_section->output_section);\n+  BFD_ASSERT (esd != NULL);\n+  osection->sh_info = esd->this_idx;\n+  esd->has_secondary_relocs = TRUE;\n #if DEBUG_SECONDARY_RELOCS\n   fprintf (stderr, \"update header of %s, sh_link = %u, sh_info = %u\\n\",\n \t   osec->name, osection->sh_link, osection->sh_info);\n+  fprintf (stderr, \"mark section %s as having secondary relocs\\n\",\n+\t   bfd_section_name (isection->bfd_section->output_section));\n #endif\n \n   return TRUE;\n }\n \n-/* Write out a secondary reloc section.  */\n+/* Write out a secondary reloc section.\n+\n+   FIXME: Currently this function can result in a serious performance penalty\n+   for files with secondary relocs and lots of sections.  The proper way to\n+   fix this is for _bfd_elf_copy_special_section_fields() to chain secondary\n+   relocs together and then to have this function just walk that chain.  */\n \n bfd_boolean\n _bfd_elf_write_secondary_reloc_section (bfd *abfd, asection *sec)"
    },
    {
      "sha": "2ed2f135c347444d9cb98fdbfee9d579c4303d06",
      "filename": "bfd/elfcode.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elfcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44466e45c51b1c68ed2f95f86bcdb1f18f08b380/bfd/elfcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfcode.h?ref=44466e45c51b1c68ed2f95f86bcdb1f18f08b380",
      "patch": "@@ -999,7 +999,8 @@ elf_write_relocs (bfd *abfd, asection *sec, void *data)\n       (*swap_out) (abfd, &src_rela, dst_rela);\n     }\n \n-  if (!bed->write_secondary_relocs (abfd, sec))\n+  if (elf_section_data (sec)->has_secondary_relocs\n+      && !bed->write_secondary_relocs (abfd, sec))\n     {\n       *failedp = TRUE;\n       return;"
    }
  ]
}