{
  "sha": "d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDhkNmRhMTM3ZDdlY2VjY2QwZTEwYzU3NWFhMTg3YmI4YzliMjRlMA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-26T08:09:58Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-26T13:53:44Z"
    },
    "message": "PR26448 UBSAN: symbols.c:1586 left shift of negative value\n\nBesides avoiding the UB, this also makes right shifts inside\nexpression symbols unsigned, consistent with the way gas evaluates\nexpressions in source.\n\n\tPR 26448\n\t* symbols.c: Include limits.h.\n\t(resolve_symbol_value <O_left_shift, O_right_shift>): Do an\n\tunsigned shift.  Warn if shift count larger than valueT size.",
    "tree": {
      "sha": "f57f56b1a46cb23bcdbbbbd50cc3c914d0d4cfa9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f57f56b1a46cb23bcdbbbbd50cc3c914d0d4cfa9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b2f386b99caeab72eae26ca5bc9024421de145d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b2f386b99caeab72eae26ca5bc9024421de145d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b2f386b99caeab72eae26ca5bc9024421de145d9"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 26,
    "deletions": 2
  },
  "files": [
    {
      "sha": "c56b992685cb302e6f6d8797dfd2f2bc6d3b65a7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-26  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26448\n+\t* symbols.c: Include limits.h.\n+\t(resolve_symbol_value <O_left_shift, O_right_shift>): Do an\n+\tunsigned shift.  Warn if shift count larger than valueT size.\n+\n 2020-08-26  Alan Modra  <amodra@gmail.com>\n \n \tPR 26447"
    },
    {
      "sha": "d6080886be8b27000d03621310776fd35e570762",
      "filename": "gas/symbols.c",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0/gas/symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d8d6da137d7ececcd0e10c575aa187bb8c9b24e0/gas/symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.c?ref=d8d6da137d7ececcd0e10c575aa187bb8c9b24e0",
      "patch": "@@ -26,6 +26,13 @@\n #include \"subsegs.h\"\n #include \"write.h\"\n \n+#ifdef HAVE_LIMITS_H\n+#include <limits.h>\n+#endif\n+#ifndef CHAR_BIT\n+#define CHAR_BIT 8\n+#endif\n+\n struct symbol_flags\n {\n   /* Whether the symbol is a local_symbol.  */\n@@ -1559,14 +1566,24 @@ resolve_symbol_value (symbolS *symp)\n \n \t      right = 1;\n \t    }\n+\t  if ((op == O_left_shift || op == O_right_shift)\n+\t      && (valueT) right >= sizeof (valueT) * CHAR_BIT)\n+\t    {\n+\t      as_warn_value_out_of_range (_(\"shift count\"), right, 0,\n+\t\t\t\t\t  sizeof (valueT) * CHAR_BIT - 1,\n+\t\t\t\t\t  NULL, 0);\n+\t      left = right = 0;\n+\t    }\n \n \t  switch (symp->x->value.X_op)\n \t    {\n \t    case O_multiply:\t\tleft *= right; break;\n \t    case O_divide:\t\tleft /= right; break;\n \t    case O_modulus:\t\tleft %= right; break;\n-\t    case O_left_shift:\t\tleft <<= right; break;\n-\t    case O_right_shift:\t\tleft >>= right; break;\n+\t    case O_left_shift:\n+\t      left = (valueT) left << (valueT) right; break;\n+\t    case O_right_shift:\n+\t      left = (valueT) left >> (valueT) right; break;\n \t    case O_bit_inclusive_or:\tleft |= right; break;\n \t    case O_bit_or_not:\t\tleft |= ~right; break;\n \t    case O_bit_exclusive_or:\tleft ^= right; break;"
    }
  ]
}