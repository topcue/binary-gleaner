{
  "sha": "ba85f98c42877287f45644a6d75513239c9490a5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmE4NWY5OGM0Mjg3NzI4N2Y0NTY0NGE2ZDc1NTEzMjM5Yzk0OTBhNQ==",
  "commit": {
    "author": {
      "name": "Barnaby Wilk  s",
      "email": "barnaby.wilks@arm.com",
      "date": "2019-06-27T13:06:02Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-06-27T13:06:02Z"
    },
    "message": "This fixes a bug in the ARm assembler where an immediate operand larger than 4 bits (0xF) could be passed to the SMC (Secure Monitor Call) instruction.\n\nFor example, this code is invalid:\nsmc #0x6951\n\nThe code would previously check for and encode for up to 16 bit immediate values, however\nthis immediate should instead be only a 4 bit value\n(as documented herehttps://static.docs.arm.com/ddi0406/c/DDI0406C_C_arm_architecture_reference_manual.pdf  ).\n\nFixed this by adding range checks in the relevant areas and also removing code that would\nencode more than the first 4 bits of the immediate (code that is now redundant, as any immediate operand\nlarger than 0xF would error now anyway).\n\ngas\t* config/tc-arm.c (do_smc): Add range check for immediate operand.\n\t(do_t_smc): Add range check for immediate operand. Remove\n\tobsolete immediate encoding.\n\t(md_apply_fix): Fix range check. Remove obsolete immediate encoding.\n\t* testsuite/gas/arm/arch6zk.d: Fix test.\n\t* testsuite/gas/arm/arch6zk.s: Fix test.\n\t* testsuite/gas/arm/smc-bad.d: New test.\n\t* testsuite/gas/arm/smc-bad.l: New test.\n\t* testsuite/gas/arm/smc-bad.s: New test.\n\t* testsuite/gas/arm/thumb32.d: Fix test.\n\t* testsuite/gas/arm/thumb32.s: Fix test.",
    "tree": {
      "sha": "4b99cd21520a8c6a56fa4ba4e4fbe4e25d36dfe9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4b99cd21520a8c6a56fa4ba4e4fbe4e25d36dfe9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba85f98c42877287f45644a6d75513239c9490a5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba85f98c42877287f45644a6d75513239c9490a5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba85f98c42877287f45644a6d75513239c9490a5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba85f98c42877287f45644a6d75513239c9490a5/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5ceb1f4d804b09cb8767ca704c2ba41e50a2bcdb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ceb1f4d804b09cb8767ca704c2ba41e50a2bcdb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5ceb1f4d804b09cb8767ca704c2ba41e50a2bcdb"
    }
  ],
  "stats": {
    "total": 64,
    "additions": 54,
    "deletions": 10
  },
  "files": [
    {
      "sha": "98bae969fc5c96ca88e0cb0ba2b27df63883b0b7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -1,3 +1,17 @@\n+2019-06-27  Barnaby Wilk  s<barnaby.wilks@arm.com>\n+\n+\t* config/tc-arm.c (do_smc): Add range check for immediate operand.\n+\t(do_t_smc): Add range check for immediate operand. Remove\n+\tobsolete immediate encoding.\n+\t(md_apply_fix): Fix range check. Remove obsolete immediate encoding.\n+\t* testsuite/gas/arm/arch6zk.d: Fix test.\n+\t* testsuite/gas/arm/arch6zk.s: Fix test.\n+\t* testsuite/gas/arm/smc-bad.d: New test.\n+\t* testsuite/gas/arm/smc-bad.l: New test.\n+\t* testsuite/gas/arm/smc-bad.s: New test.\n+\t* testsuite/gas/arm/thumb32.d: Fix test.\n+\t* testsuite/gas/arm/thumb32.s: Fix test.\n+\n 2019-06-27  Jan Beulich  <jbeulich@suse.com>\n \n \tconfig/tc-i386.c (md_assemble): Check for protected mode"
    },
    {
      "sha": "b70028f7c2e31c179196b3c9ea9665fbf4b0159f",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 9,
      "deletions": 4,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -10247,6 +10247,9 @@ do_shift (void)\n static void\n do_smc (void)\n {\n+  unsigned int value = inst.relocs[0].exp.X_add_number;\n+  constraint (value > 0xf, _(\"immediate too large (bigger than 0xF)\"));\n+\n   inst.relocs[0].type = BFD_RELOC_ARM_SMC;\n   inst.relocs[0].pc_rel = 0;\n }\n@@ -13877,10 +13880,11 @@ do_t_smc (void)\n \t      _(\"SMC is not permitted on this architecture\"));\n   constraint (inst.relocs[0].exp.X_op != O_constant,\n \t      _(\"expression too complex\"));\n+  constraint (value > 0xf, _(\"immediate too large (bigger than 0xF)\"));\n+\n   inst.relocs[0].type = BFD_RELOC_UNUSED;\n-  inst.instruction |= (value & 0xf000) >> 12;\n-  inst.instruction |= (value & 0x0ff0);\n   inst.instruction |= (value & 0x000f) << 16;\n+\n   /* PR gas/15623: SMC instructions must be last in an IT block.  */\n   set_pred_insn_type_last ();\n }\n@@ -27765,11 +27769,12 @@ md_apply_fix (fixS *\tfixP,\n       break;\n \n     case BFD_RELOC_ARM_SMC:\n-      if (((unsigned long) value) > 0xffff)\n+      if (((unsigned long) value) > 0xf)\n \tas_bad_where (fixP->fx_file, fixP->fx_line,\n \t\t      _(\"invalid smc expression\"));\n+\n       newval = md_chars_to_number (buf, INSN_SIZE);\n-      newval |= (value & 0xf) | ((value & 0xfff0) << 4);\n+      newval |= (value & 0xf);\n       md_number_to_chars (buf, newval, INSN_SIZE);\n       break;\n "
    },
    {
      "sha": "f9ae025295f562a1987dc5abf71134d7a137f036",
      "filename": "gas/testsuite/gas/arm/arch6zk.d",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/arch6zk.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/arch6zk.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/arch6zk.d?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -24,6 +24,6 @@ Disassembly of section .text:\n 0+040 <[^>]*> e320f002 ?\twfe\n 0+044 <[^>]*> e320f003 ?\twfi\n 0+048 <[^>]*> e320f001 ?\tyield\n-0+04c <[^>]*> e16ec371 ?\tsmc\t60465.*\n-0+050 <[^>]*> 11613c7e ?\tsmcne\t5070.*\n+0+04c <[^>]*> e1600071 ?\tsmc\t1.*\n+0+050 <[^>]*> 1160007e ?\tsmcne\t14.*\n #..."
    },
    {
      "sha": "db2e0b29e0d2d7ab046c357f520e16d1987b7bf2",
      "filename": "gas/testsuite/gas/arm/arch6zk.s",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/arch6zk.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/arch6zk.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/arch6zk.s?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -23,8 +23,8 @@ label:\n \twfi\n \tyield\n \t# ARMV6Z instructions\n-\tsmc 0xec31\n-\tsmcne 0x13ce\n+\tsmc 0x1\n+\tsmcne 0xe\n \n \t# Ensure output is 32-byte aligned as required for arm-aout.\n \t.p2align 5"
    },
    {
      "sha": "ca3a5a5335130decf1ea92a685ca1c026fc01c04",
      "filename": "gas/testsuite/gas/arm/smc-bad.d",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/smc-bad.d?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -0,0 +1,3 @@\n+# name: Invalid SMC operand test\n+# source: smc-bad.s\n+# error_output: smc-bad.l"
    },
    {
      "sha": "ac206e0673df0bfa617c6d34d9ed02023e337d54",
      "filename": "gas/testsuite/gas/arm/smc-bad.l",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/smc-bad.l?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -0,0 +1,8 @@\n+.*smc-bad.s: Assembler messages:\n+.*smc-bad.s:2: Error: immediate too large \\(bigger than 0xF\\) -- `smc #0xfefe'\n+.*smc-bad.s:3: Error: immediate too large \\(bigger than 0xF\\) -- `smc #0x12'\n+.*smc-bad.s:4: Error: immediate too large \\(bigger than 0xF\\) -- `smc 123'\n+.*smc-bad.s:7: Error: immediate too large \\(bigger than 0xF\\) -- `smc #0xdfd'\n+.*smc-bad.s:8: Error: immediate too large \\(bigger than 0xF\\) -- `smc #0x43'\n+.*smc-bad.s:9: Error: immediate too large \\(bigger than 0xF\\) -- `smc 4343343'\n+.*smc-bad.s:14: Error: immediate too large \\(bigger than 0xF\\) -- `smc #0x6951'"
    },
    {
      "sha": "04453ae7aadff34b26055271a0590ed2218f410c",
      "filename": "gas/testsuite/gas/arm/smc-bad.s",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/smc-bad.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/smc-bad.s?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -0,0 +1,14 @@\n+.arm\n+\tsmc #0xfefe\n+\tsmc #0x12\n+\tsmc 123\n+\n+.thumb\n+\tsmc #0xdfd\n+\tsmc #0x43\n+\tsmc 4343343\n+\n+.arm\n+.syntax unified\n+.cpu cortex-a8\n+\tsmc #0x6951"
    },
    {
      "sha": "f265f5af0c150b91a9e2d2e94cd21b65c134944e",
      "filename": "gas/testsuite/gas/arm/thumb32.d",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/thumb32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/thumb32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/thumb32.d?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -844,7 +844,7 @@ Disassembly of section .text:\n 0[0-9a-f]+ <[^>]+> ea4f 0132 \tmov.w\tr1, r2, rrx\n 0[0-9a-f]+ <[^>]+> ea5f 0334 \tmovs.w\tr3, r4, rrx\n 0[0-9a-f]+ <[^>]+> f7f0 8000 \tsmc\t#0\n-0[0-9a-f]+ <[^>]+> f7fd 8bca \tsmc\t#43981\t; 0xabcd\n+0[0-9a-f]+ <[^>]+> f7fd 8000 \tsmc\t#13\n 0[0-9a-f]+ <[^>]+> fb10 0000 \tsmlabb\tr0, r0, r0, r0\n 0[0-9a-f]+ <[^>]+> fb10 0900 \tsmlabb\tr9, r0, r0, r0\n 0[0-9a-f]+ <[^>]+> fb19 0000 \tsmlabb\tr0, r9, r0, r0"
    },
    {
      "sha": "5f8cb8337ed9ae031ec44797dd18bd7565143dca",
      "filename": "gas/testsuite/gas/arm/thumb32.s",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/thumb32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba85f98c42877287f45644a6d75513239c9490a5/gas/testsuite/gas/arm/thumb32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/thumb32.s?ref=ba85f98c42877287f45644a6d75513239c9490a5",
      "patch": "@@ -637,7 +637,7 @@ rrx:\n \t.arch_extension sec\n smc:\n \tsmc\t#0\n-\tsmc\t#0xabcd\n+\tsmc\t#0xd\n \n smla:\n \tsmlabb\tr0, r0, r0, r0"
    }
  ]
}