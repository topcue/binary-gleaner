{
  "sha": "2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmExN2M4MDNmNmU3MGYyNmExY2UwYzBiOGMzYzA1YTliOTYzYjE5Yg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-06-30T16:40:21Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-06-30T16:40:21Z"
    },
    "message": "Fix test breakages caused by removal of gdb_py_test_multiple.\n\nTom de Vries detected that some python tests were broken as\nthey were still using gdb_py_test_multiple that was replaced\nby gdb_test_multiline.  Repair these tests by using the new function.\n\ngdb/testsuite/ChangeLog\n2020-06-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.python/py-breakpoint.exp: use gdb_test_multiline instead\n\tof gdb_py_test_multiple.\n\t* gdb.python/py-cmd.exp: Likewise.\n\t* gdb.python/py-events.exp: Likewise.\n\t* gdb.python/py-function.exp: Likewise.\n\t* gdb.python/py-inferior.exp: Likewise.\n\t* gdb.python/py-infthread.exp: Likewise.\n\t* gdb.python/py-linetable.exp: Likewise.\n\t* gdb.python/py-parameter.exp: Likewise.\n\t* gdb.python/py-value.exp: Likewise.",
    "tree": {
      "sha": "db0b2b4ce6a6440e373a8d89b0f7b2968300161a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/db0b2b4ce6a6440e373a8d89b0f7b2968300161a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "bbd19b19e44ee6f547291db62cba7150bb407a4c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bbd19b19e44ee6f547291db62cba7150bb407a4c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bbd19b19e44ee6f547291db62cba7150bb407a4c"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 52,
    "deletions": 39
  },
  "files": [
    {
      "sha": "84855513b41b89e81b9ce0f2c8593498232e19b8",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -1,3 +1,16 @@\n+2020-06-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.python/py-breakpoint.exp: use gdb_test_multiline instead\n+\tof gdb_py_test_multiple.\n+\t* gdb.python/py-cmd.exp: Likewise.\n+\t* gdb.python/py-events.exp: Likewise.\n+\t* gdb.python/py-function.exp: Likewise.\n+\t* gdb.python/py-inferior.exp: Likewise.\n+\t* gdb.python/py-infthread.exp: Likewise.\n+\t* gdb.python/py-linetable.exp: Likewise.\n+\t* gdb.python/py-parameter.exp: Likewise.\n+\t* gdb.python/py-value.exp: Likewise.\n+\n 2020-06-30  Tom de Vries  <tdevries@suse.de>\n \n \tPR testsuite/26175"
    },
    {
      "sha": "f81a769d0e7a72cca6f6c5b9fa68d4e56aca2e47",
      "filename": "gdb/testsuite/gdb.python/py-breakpoint.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-breakpoint.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -320,7 +320,7 @@ proc_with_prefix test_bkpt_eval_funcs { } {\n     }\n     delete_breakpoints\n \n-    gdb_py_test_multiple \"Sub-class a breakpoint\" \\\n+    gdb_test_multiline \"Sub-class a breakpoint\" \\\n \t\"python\" \"\" \\\n \t\"class bp_eval (gdb.Breakpoint):\" \"\" \\\n \t\"   inf_i = 0\" \"\" \\\n@@ -333,7 +333,7 @@ proc_with_prefix test_bkpt_eval_funcs { } {\n \t\"      return False\" \"\" \\\n \t\"end\" \"\"\n \n-    gdb_py_test_multiple \"Sub-class a second breakpoint\" \\\n+    gdb_test_multiline \"Sub-class a second breakpoint\" \\\n \t\"python\" \"\" \\\n \t\"class bp_also_eval (gdb.Breakpoint):\" \"\" \\\n \t\"   count = 0\" \"\" \\\n@@ -344,7 +344,7 @@ proc_with_prefix test_bkpt_eval_funcs { } {\n \t\"      return False\" \"\" \\\n \t\"end\" \"\"\n \n-    gdb_py_test_multiple \"Sub-class a third breakpoint\" \\\n+    gdb_test_multiline \"Sub-class a third breakpoint\" \\\n \t\"python\" \"\" \\\n \t\"class basic (gdb.Breakpoint):\" \"\" \\\n \t\"   count = 0\" \"\" \\\n@@ -381,7 +381,7 @@ proc_with_prefix test_bkpt_eval_funcs { } {\n \t\"Set breakpoint\" 0\n     gdb_py_test_silent_cmd \"python eval_bp2.condition = \\\"1==1\\\"\" \\\n \t\"Set a condition\" 0\n-    gdb_py_test_multiple \"Construct an eval function\" \\\n+    gdb_test_multiline \"Construct an eval function\" \\\n \t\"python\" \"\" \\\n \t\"def stop_func ():\" \"\" \\\n \t\"   return True\" \"\" \\\n@@ -402,7 +402,7 @@ proc_with_prefix test_bkpt_eval_funcs { } {\n     gdb_test \"python print (check_eval.count)\" \"1\" \\\n \t\"Test that evaluate function is run when location also has normal bp\"\n \n-    gdb_py_test_multiple \"Sub-class a watchpoint\" \\\n+    gdb_test_multiline \"Sub-class a watchpoint\" \\\n \t\"python\" \"\" \\\n \t\"class wp_eval (gdb.Breakpoint):\" \"\" \\\n \t\"   def stop (self):\" \"\" \\\n@@ -434,7 +434,7 @@ proc_with_prefix test_bkpt_temporary { } {\n     }\n     delete_breakpoints\n \n-    gdb_py_test_multiple \"Sub-class and check temporary breakpoint\" \\\n+    gdb_test_multiline \"Sub-class and check temporary breakpoint\" \\\n \t\"python\" \"\" \\\n \t\"class temp_bp (gdb.Breakpoint):\" \"\" \\\n \t\"   count = 0\" \"\" \\\n@@ -521,7 +521,7 @@ proc_with_prefix test_bkpt_events {} {\n \n     clean_restart ${testfile}\n \n-    gdb_py_test_multiple \"Create event handler\" \\\n+    gdb_test_multiline \"Create event handler\" \\\n \t\"python\" \"\" \\\n \t\"def note_event(arg):\" \"\" \\\n \t\"  global last_bp_event\" \"\" \\"
    },
    {
      "sha": "c17a870cfd35330b8f95cda751d49a9669dc2420",
      "filename": "gdb/testsuite/gdb.python/py-cmd.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-cmd.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-cmd.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-cmd.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -34,7 +34,7 @@ if ![runto_main] then {\n \n # Test a simple command.\n \n-gdb_py_test_multiple \"input simple command\" \\\n+gdb_test_multiline \"input simple command\" \\\n   \"python\" \"\" \\\n   \"class test_cmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -48,7 +48,7 @@ gdb_test \"test_cmd ugh\" \"test_cmd output, arg = ugh\" \"call simple command\"\n \n # Test a prefix command, and a subcommand within it.\n \n-gdb_py_test_multiple \"input prefix command\" \\\n+gdb_test_multiline \"input prefix command\" \\\n   \"python\" \"\" \\\n   \"class prefix_cmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -60,7 +60,7 @@ gdb_py_test_multiple \"input prefix command\" \\\n \n gdb_test \"prefix_cmd ugh\" \"prefix_cmd output, arg = ugh\" \"call prefix command\"\n \n-gdb_py_test_multiple \"input subcommand\" \\\n+gdb_test_multiline \"input subcommand\" \\\n   \"python\" \"\" \\\n   \"class subcmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -74,7 +74,7 @@ gdb_test \"prefix_cmd subcmd ugh\" \"subcmd output, arg = ugh\" \"call subcmd\"\n \n # Test prefix command using keyword arguments.\n \n-gdb_py_test_multiple \"input prefix command, keyword arguments\" \\\n+gdb_test_multiline \"input prefix command, keyword arguments\" \\\n   \"python\" \"\" \\\n   \"class prefix_cmd2 (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -86,7 +86,7 @@ gdb_py_test_multiple \"input prefix command, keyword arguments\" \\\n \n gdb_test \"prefix_cmd2 argh\" \"prefix_cmd2 output, arg = argh\" \"call prefix command, keyword arguments\"\n \n-gdb_py_test_multiple \"input subcommand under prefix_cmd2\" \\\n+gdb_test_multiline \"input subcommand under prefix_cmd2\" \\\n   \"python\" \"\" \\\n   \"class subcmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -100,7 +100,7 @@ gdb_test \"prefix_cmd2 subcmd ugh\" \"subcmd output, arg = ugh\" \"call subcmd under\n \n # Test a subcommand in an existing GDB prefix.\n \n-gdb_py_test_multiple \"input new subcommand\" \\\n+gdb_test_multiline \"input new subcommand\" \\\n   \"python\" \"\" \\\n   \"class newsubcmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -114,7 +114,7 @@ gdb_test \"info newsubcmd ugh\" \"newsubcmd output, arg = ugh\" \"call newsubcmd\"\n \n # Test a command that throws gdb.GdbError.\n \n-gdb_py_test_multiple \"input command to throw error\" \\\n+gdb_test_multiline \"input command to throw error\" \\\n   \"python\" \"\" \\\n   \"class test_error_cmd (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -145,7 +145,7 @@ gdb_test \"python print (gdb.string_to_argv ('1\\\\ 2 3'))\" \\\n     \"string_to_argv ('1\\\\ 2 3')\"\n \n # Test user-defined python commands.\n-gdb_py_test_multiple \"input simple user-defined command\" \\\n+gdb_test_multiline \"input simple user-defined command\" \\\n   \"python\" \"\" \\\n   \"class test_help (gdb.Command):\" \"\" \\\n   \"  \\\"\\\"\\\"Docstring\\\"\\\"\\\"\" \"\" \\\n@@ -166,7 +166,7 @@ gdb_test \"show user test_help\" \"Not a user command\\.\" \\\n     \"don't show user-defined python command in `show user command`\"\n \n # Test expression completion on fields\n-gdb_py_test_multiple \"expression completion command\" \\\n+gdb_test_multiline \"expression completion command\" \\\n   \"python\" \"\" \\\n   \"class expr_test (gdb.Command):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -266,7 +266,7 @@ if { [readline_is_used] } {\n # Test that interrupting pagination throws a gdb quit.\n gdb_test_no_output \"set height 10\"\n \n-gdb_py_test_multiple \"input multi-line-output command\" \\\n+gdb_test_multiline \"input multi-line-output command\" \\\n   \"python\" \"\" \\\n   \"class test_mline (gdb.Command):\" \"\" \\\n   \"  \\\"\\\"\\\"Docstring\\\"\\\"\\\"\" \"\" \\"
    },
    {
      "sha": "2950afa655af3c89ef9e7f46d692d90a9c1683c8",
      "filename": "gdb/testsuite/gdb.python/py-events.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-events.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-events.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-events.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -213,13 +213,13 @@ dir ok: True.*\" \"Inferior 2 terminated.\"\n \n \n # Test before_prompt event.\n-gdb_py_test_multiple \"define new user command\" \\\n+gdb_test_multiline \"define new user command\" \\\n     \"define xxz\" \"End with a line saying just .end..\" \\\n     \"set variable \\$x = 72\" \"\" \\\n     \"set variable \\$y = 93\" \"\" \\\n     \"end\" \"\"\n \n-gdb_py_test_multiple \"add before_prompt listener\" \\\n+gdb_test_multiline \"add before_prompt listener\" \\\n     \"python\" \"\" \\\n     \"count = 0\" \"\" \\\n     \"def listener():\" \"\" \\"
    },
    {
      "sha": "d98f2ac210cfe7f263d1133dd20ec4c736719496",
      "filename": "gdb/testsuite/gdb.python/py-function.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-function.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-function.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-function.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -27,7 +27,7 @@ gdb_reinitialize_dir $srcdir/$subdir\n # Skip all tests if Python scripting is not enabled.\n if { [skip_python_tests] } { continue }\n \n-gdb_py_test_multiple \"input convenience function\" \\\n+gdb_test_multiline \"input convenience function\" \\\n   \"python\" \"\" \\\n   \"class test_func (gdb.Function):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -41,7 +41,7 @@ gdb_test \"print \\$test_func (\\\"ugh\\\")\" \"= \\\"test_func output, arg = ugh\\\"\" \"call\n \n # Test returning a gdb.Value from the function. This segfaulted GDB at one point.\n \n-gdb_py_test_multiple \"input value-returning convenience function\" \\\n+gdb_test_multiline \"input value-returning convenience function\" \\\n   \"python\" \"\" \\\n   \"class Double (gdb.Function):\" \"\" \\\n   \"  def __init__ (self):\" \"\" \\\n@@ -59,7 +59,7 @@ foreach lang [concat [gdb_supported_languages] auto] {\n     gdb_test \"print \\$double (1)\" \"= 2\" \"call value-returning function, language = $lang\"\n }\n \n-gdb_py_test_multiple \"input int-returning function\" \\\n+gdb_test_multiline \"input int-returning function\" \\\n   \"python\" \"\" \\\n   \"class Yes(gdb.Function):\" \"\" \\\n   \"    def __init__(self):\" \"\" \\\n@@ -72,7 +72,7 @@ gdb_py_test_multiple \"input int-returning function\" \\\n gdb_test \"print \\$yes() && \\$yes()\" \" = 1\" \"call yes with &&\"\n gdb_test \"print \\$yes() || \\$yes()\" \" = 1\" \"call yes with ||\"\n \n-gdb_py_test_multiple \"Test GDBError\" \\\n+gdb_test_multiline \"Test GDBError\" \\\n   \"python\" \"\" \\\n   \"class GDBError(gdb.Function):\" \"\" \\\n   \"    def __init__(self):\" \"\" \\\n@@ -85,7 +85,7 @@ gdb_py_test_multiple \"Test GDBError\" \\\n gdb_test \"print \\$gdberror()\" \"This is a GdbError.*\" \\\n     \"Test GdbError.  There should not be a stack trace\"\n \n-gdb_py_test_multiple \"Test Normal Error\" \\\n+gdb_test_multiline \"Test Normal Error\" \\\n   \"python\" \"\" \\\n   \"class NormalError(gdb.Function):\" \"\" \\\n   \"    def __init__(self):\" \"\" \\\n@@ -99,7 +99,7 @@ gdb_test_no_output \"set python print-stack full\"\n gdb_test \"print \\$normalerror()\" \"Traceback.*File.*line 5.*in invoke.*RuntimeError.*This is a Normal Error.*\" \\\n     \"Test a Runtime error.  There should be a stack trace.\"\n \n-gdb_py_test_multiple \"input command-calling function\" \\\n+gdb_test_multiline \"input command-calling function\" \\\n   \"python\" \"\" \\\n   \"class CallCommand(gdb.Function):\" \"\" \\\n   \"    def __init__(self):\" \"\" \\"
    },
    {
      "sha": "1f4017d79889883a3de6437b6e5f1de1626b5fa7",
      "filename": "gdb/testsuite/gdb.python/py-inferior.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-inferior.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-inferior.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-inferior.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -218,7 +218,7 @@ with_test_prefix \"is_valid\" {\n     gdb_test \"python print (inf_list\\[0\\].is_valid())\" \"True\" \\\n \t\"check inferior validity 1\"\n \n-    gdb_py_test_multiple \"install new inferior event handler\" \\\n+    gdb_test_multiline \"install new inferior event handler\" \\\n \t\"python\" \"\" \\\n \t\"my_inferior_count = 1\" \"\" \\\n \t\"def new_inf_handler(evt):\" \"\" \\\n@@ -227,7 +227,7 @@ with_test_prefix \"is_valid\" {\n \t\"    my_inferior_count = my_inferior_count + 1\" \"\" \\\n \t\"gdb.events.new_inferior.connect(new_inf_handler)\" \"\" \\\n \t\"end\" \"\"\n-    gdb_py_test_multiple \"install inferior deleted event handler\" \\\n+    gdb_test_multiline \"install inferior deleted event handler\" \\\n \t\"python\" \"\" \\\n \t\"def del_inf_handler(evt):\" \"\" \\\n \t\"  global my_inferior_count\" \"\" \\"
    },
    {
      "sha": "8224b04530c6c22c01c421d367ccf702937a0486",
      "filename": "gdb/testsuite/gdb.python/py-infthread.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-infthread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-infthread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-infthread.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -30,7 +30,7 @@ clean_restart ${testfile}\n # Skip all tests if Python scripting is not enabled.\n if { [skip_python_tests] } { continue }\n \n-gdb_py_test_multiple \"install new_thread event handler\" \\\n+gdb_test_multiline \"install new_thread event handler\" \\\n     \"python\" \"\" \\\n     \"seen_a_thread = False\" \"\" \\\n     \"def thread_handler(evt):\" \"\" \\"
    },
    {
      "sha": "535a9358c3f4cd8cf9accc93707b132b93565893",
      "filename": "gdb/testsuite/gdb.python/py-linetable.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-linetable.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-linetable.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-linetable.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -40,7 +40,7 @@ if { [skip_python_tests] } { continue }\n gdb_py_test_silent_cmd \"python lt = gdb.selected_frame().find_sal().symtab.linetable()\" \\\n     \"get instruction\" 0\n \n-gdb_py_test_multiple \"input simple command\" \\\n+gdb_test_multiline \"input simple command\" \\\n   \"python\" \"\" \\\n   \"def list_lines():\" \"\" \\\n   \"   for l in lt:\" \"\" \\"
    },
    {
      "sha": "98434d4f45538c641f621062874ce5550d398314",
      "filename": "gdb/testsuite/gdb.python/py-parameter.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-parameter.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-parameter.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-parameter.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -39,7 +39,7 @@ gdb_test \"python print (gdb.parameter ('directories'))\" $directories\n \n # Test a simple boolean parameter.\n with_test_prefix \"boolean parameter\" {\n-    gdb_py_test_multiple \"Simple gdb booleanparameter\" \\\n+    gdb_test_multiline \"Simple gdb booleanparameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestParam (gdb.Parameter):\" \"\" \\\n \t\"   \\\"\\\"\\\"When enabled, test param does something useful. When disabled, does nothing.\\\"\\\"\\\"\" \"\" \\\n@@ -79,7 +79,7 @@ with_test_prefix \"boolean parameter\" {\n \n # Test an enum parameter.\n with_test_prefix \"enum parameter\" {\n-    gdb_py_test_multiple \"enum gdb parameter\" \\\n+    gdb_test_multiline \"enum gdb parameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestEnumParam (gdb.Parameter):\" \"\" \\\n \t\"   \\\"\\\"\\\"When set, test param does something useful. When disabled, does nothing.\\\"\\\"\\\"\" \"\" \\\n@@ -112,7 +112,7 @@ with_test_prefix \"enum parameter\" {\n \n # Test a file parameter.\n with_test_prefix \"file parameter\" {\n-    gdb_py_test_multiple \"file gdb parameter\" \\\n+    gdb_test_multiline \"file gdb parameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestFileParam (gdb.Parameter):\" \"\" \\\n \t\"   \\\"\\\"\\\"When set, test param does something useful. When disabled, does nothing.\\\"\\\"\\\"\" \"\" \\\n@@ -144,7 +144,7 @@ with_test_prefix \"file parameter\" {\n \n # Test a parameter that is not documented.\n with_test_prefix \"undocumented parameter\" {\n-    gdb_py_test_multiple \"Simple gdb booleanparameter\" \\\n+    gdb_test_multiline \"Simple gdb booleanparameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestUndocParam (gdb.Parameter):\" \"\" \\\n \t\"   def get_show_string (self, pvalue):\" \"\"\\\n@@ -179,7 +179,7 @@ with_test_prefix \"undocumented parameter\" {\n \n # Test a parameter that is not documented in any way..\n with_test_prefix \"really undocumented parameter\" {\n-    gdb_py_test_multiple \"Simple gdb booleanparameter\" \\\n+    gdb_test_multiline \"Simple gdb booleanparameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestNodocParam (gdb.Parameter):\" \"\" \\\n \t\"   def __init__ (self, name):\" \"\" \\\n@@ -207,7 +207,7 @@ with_test_prefix \"really undocumented parameter\" {\n \n # Test deprecated API. Do not use in your own implementations.\n with_test_prefix \"deprecated API parameter\" {\n-    gdb_py_test_multiple \"Simple gdb booleanparameter\" \\\n+    gdb_test_multiline \"Simple gdb booleanparameter\" \\\n \t\"python\" \"\" \\\n \t\"class TestParam (gdb.Parameter):\" \"\" \\\n \t\"   \\\"\\\"\\\"When enabled, test param does something useful. When disabled, does nothing.\\\"\\\"\\\"\" \"\" \\\n@@ -238,7 +238,7 @@ with_test_prefix \"deprecated API parameter\" {\n }\n \n foreach kind {PARAM_ZUINTEGER PARAM_ZUINTEGER_UNLIMITED} {\n-    gdb_py_test_multiple \"Simple gdb $kind\" \\\n+    gdb_test_multiline \"Simple gdb $kind\" \\\n \t\"python\" \"\" \\\n \t\"class TestNodocParam (gdb.Parameter):\" \"\" \\\n \t\"   def __init__ (self, name):\" \"\" \\\n@@ -261,7 +261,7 @@ foreach kind {PARAM_ZUINTEGER PARAM_ZUINTEGER_UNLIMITED} {\n     }\n }\n \n-gdb_py_test_multiple \"Throwing gdb parameter\" \\\n+gdb_test_multiline \"Throwing gdb parameter\" \\\n     \"python\" \"\" \\\n     \"class TestThrowParam (gdb.Parameter):\" \"\" \\\n     \"   def __init__ (self, name):\" \"\" \\"
    },
    {
      "sha": "8d651bccbc7d8833aaa44d5569380558328a9917",
      "filename": "gdb/testsuite/gdb.python/py-value.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-value.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b/gdb/testsuite/gdb.python/py-value.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-value.exp?ref=2a17c803f6e70f26a1ce0c0b8c3c05a9b963b19b",
      "patch": "@@ -172,7 +172,7 @@ proc test_value_numeric_ops {} {\n \n proc test_value_boolean {} {\n   # First, define a useful function to test booleans.\n-  gdb_py_test_multiple \"define function to test booleans\" \\\n+  gdb_test_multiline \"define function to test booleans\" \\\n     \"python\" \"\" \\\n     \"def test_bool (val):\" \"\" \\\n     \"  if val:\" \"\" \\\n@@ -506,7 +506,7 @@ proc test_parse_and_eval {} {\n \n # Test that values are hashable.\n proc test_value_hash {} {\n-  gdb_py_test_multiple \"Simple Python value dictionary\" \\\n+  gdb_test_multiline \"Simple Python value dictionary\" \\\n     \"python\" \"\" \\\n     \"one = gdb.Value(1)\" \"\" \\\n     \"two = gdb.Value(2)\" \"\" \\"
    }
  ]
}