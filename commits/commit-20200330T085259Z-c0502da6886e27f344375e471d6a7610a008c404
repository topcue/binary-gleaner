{
  "sha": "c0502da6886e27f344375e471d6a7610a008c404",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzA1MDJkYTY4ODZlMjdmMzQ0Mzc1ZTQ3MWQ2YTc2MTBhMDA4YzQwNA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-30T08:52:59Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-30T08:52:59Z"
    },
    "message": "[gdb/testsuite] Fix c-linkage-name.exp with {cc-with-gdb-index,readnow}.exp\n\nWhen running test-case gdb.base/c-linkage-name.exp with target board\ncc-with-gdb-index.exp, I see:\n...\nFAIL: gdb.base/c-linkage-name.exp: maint info psymtab: c-linkage-name-2.c: no\nFAIL: gdb.base/c-linkage-name.exp: maint info psymtab: c-linkage-name-2.c: yes\n...\nThe FAILs are due to the fact that partial symbol tables are not generated for\nindexed executables.\n\nWhen running the same test-case with target board readnow.exp, I see:\n...\nFAIL: gdb.base/c-linkage-name.exp: maint info psymtab: c-linkage-name-2.c: no\nFAIL: gdb.base/c-linkage-name.exp: print symada__cS before partial symtab \\\n  expansion\nFAIL: gdb.base/c-linkage-name.exp: maint info psymtab: c-linkage-name-2.c: yes\n...\nThe \"maint info psymtab\" FAILs are also due to fact that the partial symbol\ntables not generated, but in this case it's because the symtabs are fully\nexpanded upon load due to using -readnow.  The \"print symada__cS before\npartial symtab expansion\" test intends to test the state before symbol table\nexpansion, and with -readnow that's not possible.\n\nMark these FAILs as UNSUPPORTED.\n\nTested on x86_64-linux, with native, and target boards cc-with-gdb-index.exp,\ncc-with-debug-names.exp and readnow.exp.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-30  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/c-linkage-name.exp: Use readnow call to mark a test\n\tunsupported.\n\t(verify_psymtab_expanded): Move ...\n\t* lib/gdb.exp (verify_psymtab_expanded): ... here.  Add unsupported\n\ttest.\n\t(readnow): New proc.",
    "tree": {
      "sha": "1cd4071244852096bda2393a3852da801e437a73",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1cd4071244852096bda2393a3852da801e437a73"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c0502da6886e27f344375e471d6a7610a008c404",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0502da6886e27f344375e471d6a7610a008c404",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c0502da6886e27f344375e471d6a7610a008c404",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c0502da6886e27f344375e471d6a7610a008c404/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c9fef64dab28713fa94681b593890c38bd43a27c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c9fef64dab28713fa94681b593890c38bd43a27c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c9fef64dab28713fa94681b593890c38bd43a27c"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 57,
    "deletions": 17
  },
  "files": [
    {
      "sha": "9d879fba3bc8ac251d4d614efaae58a3e2898074",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c0502da6886e27f344375e471d6a7610a008c404",
      "patch": "@@ -1,3 +1,12 @@\n+2020-03-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/c-linkage-name.exp: Use readnow call to mark a test\n+\tunsupported.\n+\t(verify_psymtab_expanded): Move ...\n+\t* lib/gdb.exp (verify_psymtab_expanded): ... here.  Add unsupported\n+\ttest.\n+\t(readnow): New proc.\n+\n 2020-03-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.fortran/mixed-lang-stack.exp: Replace two hard coded address"
    },
    {
      "sha": "9a472a79a294fb8478af79260fbfe7868e8dbada",
      "filename": "gdb/testsuite/gdb.base/c-linkage-name.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 17,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/gdb.base/c-linkage-name.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/c-linkage-name.exp?ref=c0502da6886e27f344375e471d6a7610a008c404",
      "patch": "@@ -26,30 +26,23 @@ if { [gdb_compile \"${sources}\" \"${binfile}\" executable {debug}] != \"\" } {\n }\n \n clean_restart ${binfile}\n-\n-# Verify that partial symtab expansion for $filename has state $readin\n-\n-proc verify_psymtab_expanded { filename readin } {\n-    set cmd \"maint info psymtab\"\n-    set test \"$cmd: $filename: $readin\"\n-    set re [multi_line \\\n-\t\t\"  \\{ psymtab \\[^\\r\\n\\]*$filename\\[^\\r\\n\\]*\" \\\n-\t\t\"    readin $readin\" \\\n-\t\t\".*\"]\n-\n-    gdb_test $cmd $re $test\n-}\n+set readnow [readnow]\n \n # Verify that partial symtab expansion has not taken place for\n # c-linkage-name-2.c.\n \n verify_psymtab_expanded c-linkage-name-2.c no\n \n-# Try to print MUNDANE, but using its linkage name.\n+set test \"print symada__cS before partial symtab expansion\"\n+if { $readnow } {\n+    unsupported $test\n+} else {\n+    # Try to print MUNDANE, but using its linkage name.\n \n-gdb_test \"print symada__cS\" \\\n-         \"'symada__cS' has unknown type; cast it to its declared type\" \\\n-         \"print symada__cS before partial symtab expansion\"\n+    gdb_test \"print symada__cS\" \\\n+\t\"'symada__cS' has unknown type; cast it to its declared type\" \\\n+\t$test\n+}\n \n # Force the symbols to be expanded for the unit that contains\n # our symada__cS symbol by, e.g. inserting a breakpoint on one"
    },
    {
      "sha": "3bd08816b6d7f9ea5ea05dc3b1067913437db8ec",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c0502da6886e27f344375e471d6a7610a008c404/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=c0502da6886e27f344375e471d6a7610a008c404",
      "patch": "@@ -6982,5 +6982,43 @@ gdb_caching_proc supports_statement_frontiers {\n     } executable \"additional_flags=-gstatement-frontiers\"]\n }\n \n+# Return 1 if symbols were read in using -readnow.  Otherwise, return 0.\n+\n+proc readnow { } {\n+    set cmd \"maint print objfiles\"\n+    gdb_test_multiple $cmd \"\" {\n+\t-re -wrap \"\\r\\n.gdb_index: faked for \\\"readnow\\\"\\r\\n.*\" {\n+\t    return 1\n+\t}\n+\t-re -wrap \"\" {\n+\t    return 0\n+\t}\n+    }\n+\n+    return 0\n+}\n+\n+# Verify that partial symtab expansion for $filename has state $readin.\n+\n+proc verify_psymtab_expanded { filename readin } {\n+    global gdb_prompt\n+\n+    set cmd \"maint info psymtab\"\n+    set test \"$cmd: $filename: $readin\"\n+    set re [multi_line \\\n+\t\t\"  \\{ psymtab \\[^\\r\\n\\]*$filename\\[^\\r\\n\\]*\" \\\n+\t\t\"    readin $readin\" \\\n+\t\t\".*\"]\n+\n+    gdb_test_multiple $cmd $test {\n+\t-re \"$cmd\\r\\n$gdb_prompt $\" {\n+\t    unsupported $gdb_test_name\n+\t}\n+\t-re -wrap $re {\n+\t    pass $gdb_test_name\n+\t}\n+    }\n+}\n+\n # Always load compatibility stuff.\n load_lib future.exp"
    }
  ]
}