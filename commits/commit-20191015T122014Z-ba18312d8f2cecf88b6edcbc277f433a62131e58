{
  "sha": "ba18312d8f2cecf88b6edcbc277f433a62131e58",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmExODMxMmQ4ZjJjZWNmODhiNmVkY2JjMjc3ZjQzM2E2MjEzMWU1OA==",
  "commit": {
    "author": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2019-10-15T12:20:14Z"
    },
    "committer": {
      "name": "Andreas Arnez",
      "email": "arnez@linux.ibm.com",
      "date": "2019-10-15T12:20:14Z"
    },
    "message": "s390: Fix infcalls passing a single-field struct with static members\n\nThe infcall-nested-structs test case yields 36 FAILs on s390x because GCC\nand GDB disagree on how to pass a C++ struct like this as an argument to a\nfunction:\n\n  struct s { float x; static float y; };\n\nFor the purpose of argument passing, GCC ignores static fields, while GDB\ndoes not.  Thus GCC passes the argument in a floating-point register and\nGDB passes it via memory.\n\nFix this by explicitly ignoring static fields when detecting single-field\nstructs.\n\ngdb/ChangeLog:\n\n\t* s390-tdep.c (s390_effective_inner_type): Ignore static fields\n\twhen unwrapping single-field structs.",
    "tree": {
      "sha": "f1083c75b6db6a816e3e9f05e6f608c8150e1de9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f1083c75b6db6a816e3e9f05e6f608c8150e1de9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba18312d8f2cecf88b6edcbc277f433a62131e58",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba18312d8f2cecf88b6edcbc277f433a62131e58",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba18312d8f2cecf88b6edcbc277f433a62131e58",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba18312d8f2cecf88b6edcbc277f433a62131e58/comments",
  "author": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aarnez",
    "id": 32961398,
    "node_id": "MDQ6VXNlcjMyOTYxMzk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/32961398?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aarnez",
    "html_url": "https://github.com/aarnez",
    "followers_url": "https://api.github.com/users/aarnez/followers",
    "following_url": "https://api.github.com/users/aarnez/following{/other_user}",
    "gists_url": "https://api.github.com/users/aarnez/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aarnez/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aarnez/subscriptions",
    "organizations_url": "https://api.github.com/users/aarnez/orgs",
    "repos_url": "https://api.github.com/users/aarnez/repos",
    "events_url": "https://api.github.com/users/aarnez/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aarnez/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9a73315161bc07d958060847ae01996312e1b30f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9a73315161bc07d958060847ae01996312e1b30f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9a73315161bc07d958060847ae01996312e1b30f"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 23,
    "deletions": 3
  },
  "files": [
    {
      "sha": "21d5233f5bbd8a36a0ed9809643ddceb33b2163e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba18312d8f2cecf88b6edcbc277f433a62131e58/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba18312d8f2cecf88b6edcbc277f433a62131e58/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ba18312d8f2cecf88b6edcbc277f433a62131e58",
      "patch": "@@ -1,3 +1,8 @@\n+2019-10-15  Andreas Arnez  <arnez@linux.ibm.com>\n+\n+\t* s390-tdep.c (s390_effective_inner_type): Ignore static fields\n+\twhen unwrapping single-field structs.\n+\n 2019-10-14  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* dwarf2read.c: Remove includes."
    },
    {
      "sha": "6bd0528cf44584b01af9cabd4f47e69b08b41e63",
      "filename": "gdb/s390-tdep.c",
      "status": "modified",
      "additions": 18,
      "deletions": 3,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba18312d8f2cecf88b6edcbc277f433a62131e58/gdb/s390-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba18312d8f2cecf88b6edcbc277f433a62131e58/gdb/s390-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/s390-tdep.c?ref=ba18312d8f2cecf88b6edcbc277f433a62131e58",
      "patch": "@@ -1637,11 +1637,26 @@ s390_address_class_name_to_type_flags (struct gdbarch *gdbarch,\n static struct type *\n s390_effective_inner_type (struct type *type, unsigned int min_size)\n {\n-  while (TYPE_CODE (type) == TYPE_CODE_STRUCT\n-\t && TYPE_NFIELDS (type) == 1)\n+  while (TYPE_CODE (type) == TYPE_CODE_STRUCT)\n     {\n-      struct type *inner = check_typedef (TYPE_FIELD_TYPE (type, 0));\n+      struct type *inner = NULL;\n \n+      /* Find a non-static field, if any.  Unless there's exactly one,\n+\t abort the unwrapping.  */\n+      for (int i = 0; i < TYPE_NFIELDS (type); i++)\n+\t{\n+\t  struct field f = TYPE_FIELD (type, i);\n+\n+\t  if (field_is_static (&f))\n+\t    continue;\n+\t  if (inner != NULL)\n+\t    return type;\n+\t  inner = FIELD_TYPE (f);\n+\t}\n+\n+      if (inner == NULL)\n+\tbreak;\n+      inner = check_typedef (inner);\n       if (TYPE_LENGTH (inner) < min_size)\n \tbreak;\n       type = inner;"
    }
  ]
}