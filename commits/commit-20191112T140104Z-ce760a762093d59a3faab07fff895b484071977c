{
  "sha": "ce760a762093d59a3faab07fff895b484071977c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2U3NjBhNzYyMDkzZDU5YTNmYWFiMDdmZmY4OTViNDg0MDcxOTc3Yw==",
  "commit": {
    "author": {
      "name": "Mihail Ionescu",
      "email": "mihail.ionescu@arm.com",
      "date": "2019-11-12T13:55:37Z"
    },
    "committer": {
      "name": "Kyrylo Tkachov",
      "email": "kyrylo.tkachov@arm.com",
      "date": "2019-11-12T14:01:04Z"
    },
    "message": "[binutils][arm] Update the decoding of MVE VMOV, VMVN\n\nThis patch updates the decoding of the VMOV and VMVN instructions which depend on cmode.\nPreviously VMOV and VMVN with cmode 1101 were not allowed.\nThe cmode changes also required updating of the MVE conflict checking.\nNow instructions with opcodes 0xef800d50 and 0xef800e70 correctly get decoded as VMOV\nand VMVN, respectively.\n\n2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* opcodes/arm-dis.c (mve_opcodes): Enable VMOV imm to vec with\n\tcmode 1101.\n\t(is_mve_encoding_conflict): Update cmode conflict checks for\n\tMVE_VMVN_IMM.\n\n2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n\n\t* gas/config/tc-arm.c (do_neon_mvn): Allow mve_ext cmode=0xd.\n\t* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s: New test.\n\t* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d: Likewise.",
    "tree": {
      "sha": "eefed25dd6f3445f294c6df9b5eb7c32d8f0c452",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eefed25dd6f3445f294c6df9b5eb7c32d8f0c452"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ce760a762093d59a3faab07fff895b484071977c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce760a762093d59a3faab07fff895b484071977c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ce760a762093d59a3faab07fff895b484071977c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce760a762093d59a3faab07fff895b484071977c/comments",
  "author": null,
  "committer": {
    "login": "ktkachov-arm",
    "id": 74917949,
    "node_id": "MDQ6VXNlcjc0OTE3OTQ5",
    "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ktkachov-arm",
    "html_url": "https://github.com/ktkachov-arm",
    "followers_url": "https://api.github.com/users/ktkachov-arm/followers",
    "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs",
    "repos_url": "https://api.github.com/users/ktkachov-arm/repos",
    "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f439988037a589de3798f44e7268301adaec21a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f439988037a589de3798f44e7268301adaec21a9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f439988037a589de3798f44e7268301adaec21a9"
    }
  ],
  "stats": {
    "total": 120,
    "additions": 112,
    "deletions": 8
  },
  "files": [
    {
      "sha": "f84de0f25c811c61c6dfc9dfde7a74c92e8a8558",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* gas/config/tc-arm.c (do_neon_mvn): Allow mve_ext cmode=0xd.\n+\t* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s: New test.\n+\t* testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d: Likewise.\n+\n 2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* config/tc-arm.c (s_arm_fpu): Clear selected_cpu fpu bits."
    },
    {
      "sha": "a76aaf3621a5f857d17207188ccc2cba96eed597",
      "filename": "gas/config/tc-arm.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/gas/config/tc-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/gas/config/tc-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-arm.c?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -19545,8 +19545,6 @@ do_neon_mvn (void)\n   if (ARM_CPU_HAS_FEATURE (cpu_variant, mve_ext))\n     {\n       constraint (!inst.operands[1].isreg && !inst.operands[0].isquad, BAD_FPU);\n-      constraint ((inst.instruction & 0xd00) == 0xd00,\n-\t\t  _(\"immediate value out of range\"));\n     }\n }\n "
    },
    {
      "sha": "ad2196640ef5eda4f506f43f541e900d71ec0545",
      "filename": "gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.d?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -0,0 +1,41 @@\n+# name: MVE vmov, vmvn, vbic, vorr aliases\n+# as: -march=armv8.1-m.main+mve\n+# objdump: -dr --prefix-addresses --show-raw-insn -marmv8.1-m.main\n+# skip: *-*-pe *-*-wince\n+\n+.*: +file format .*arm.*\n+\n+Disassembly of section .text:\n+[^>]*> ff80 0d70 \tvmvn.i32\tq0, #8454143\t; 0x0080ffff\n+[^>]*> ff80 0f70 \t\t\t; <UNDEFINED> instruction: 0xff800f70\n+[^>]*> ef80 0e70 \tvmov.i64\tq0, #0x0000000000000000\n+[^>]*> ef80 0070 \tvmvn.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0270 \tvmvn.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0470 \tvmvn.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0670 \tvmvn.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0870 \tvmvn.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0a70 \tvmvn.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0c70 \tvmvn.i32\tq0, #255\t; 0x000000ff\n+[^>]*> ef80 0150 \tvorr.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0350 \tvorr.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0550 \tvorr.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0950 \tvorr.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0b50 \tvorr.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0170 \tvbic.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0370 \tvbic.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0570 \tvbic.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0770 \tvbic.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0970 \tvbic.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0b70 \tvbic.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0050 \tvmov.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0250 \tvmov.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0450 \tvmov.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0650 \tvmov.i32\tq0, #0\t; 0x00000000\n+[^>]*> ef80 0850 \tvmov.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0a50 \tvmov.i16\tq0, #0\t; 0x0000\n+[^>]*> ef80 0c50 \tvmov.i32\tq0, #255\t; 0x000000ff\n+[^>]*> ef80 0e50 \tvmov.i8\tq0, #0\t; 0x00\n+[^>]*> ef80 0d50 \tvmov.i32\tq0, #65535\t; 0x0000ffff\n+[^>]*> ef80 0f50 \tvmov.f32\tq0, #2\t; 0x40000000\n+[^>]*> ff80 0d70 \tvmvn.i32\tq0, #8454143\t; 0x0080ffff\n+[^>]*> ff80 0d50 \tvmov.i32\tq0, #8454143\t; 0x0080ffff"
    },
    {
      "sha": "7f5bba482f3eda1e468fd97d73779805f9c69360",
      "filename": "gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s",
      "status": "added",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/arm/mve-vmov-vmvn-vorr-vbic.s?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -0,0 +1,47 @@\n+.syntax unified\n+.text\n+@ VMVN with cmode = d\n+.inst 0xff800d70\n+\n+@ VMVN with cmode = f, should be undefined\n+.inst 0xff800f70\n+\n+@ VBIC\n+.inst 0xef800e70 @VMOV\n+.inst 0xef800070 @VMVN\n+.inst 0xef800270 @VMVN\n+.inst 0xef800470 @VMVN\n+.inst 0xef800670 @VMVN\n+.inst 0xef800870 @VMVN\n+.inst 0xef800a70 @VMVN\n+.inst 0xef800c70 @VMVN\n+\n+@ VMOV\n+.inst 0xef800150 @VORR\n+.inst 0xef800350 @VORR\n+.inst 0xef800550 @VORR\n+.inst 0xef800950 @VORR\n+.inst 0xef800b50 @VORR\n+.inst 0xef800170 @VBIC\n+.inst 0xef800370 @VBIC\n+.inst 0xef800570 @VBIC\n+.inst 0xef800770 @VBIC\n+.inst 0xef800970 @VBIC\n+.inst 0xef800b70 @VBIC\n+\n+@ VMVN same as VMOV -> VBIC\n+@ VORR\n+.inst 0xef800050 @VMOV\n+.inst 0xef800250 @VMOV\n+.inst 0xef800450 @VMOV\n+.inst 0xef800650 @VMOV\n+.inst 0xef800850 @VMOV\n+.inst 0xef800a50 @VMOV\n+.inst 0xef800c50 @VMOV\n+.inst 0xef800e50 @VMOV\n+.inst 0xef800d50 @VMOV\n+.inst 0xef800f50 @VMOV\n+\n+\n+vmvn.i32 q0,#0x80ffff\n+vmov.i32 q0,#0x80ffff"
    },
    {
      "sha": "62b05628159808d55fb310e18cc1771455dfe9fe",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -1,3 +1,10 @@\n+2019-11-12  Mihail Ionescu  <mihail.ionescu@arm.com>\n+\n+\t* opcodes/arm-dis.c (mve_opcodes): Enable VMOV imm to vec with\n+\tcmode 1101.\n+\t(is_mve_encoding_conflict): Update cmode conflict checks for\n+\tMVE_VMVN_IMM.\n+\n 2019-11-12  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-gen.c (operand_type_init): Remove OPERAND_TYPE_ESSEG"
    },
    {
      "sha": "e04dd17283115aea08b982a4f8f421a460e90edb",
      "filename": "opcodes/arm-dis.c",
      "status": "modified",
      "additions": 11,
      "deletions": 6,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ce760a762093d59a3faab07fff895b484071977c/opcodes/arm-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ce760a762093d59a3faab07fff895b484071977c/opcodes/arm-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/arm-dis.c?ref=ce760a762093d59a3faab07fff895b484071977c",
      "patch": "@@ -2842,10 +2842,15 @@ static const struct mopcode32 mve_opcodes[] =\n    \"vsri%v.%19-21s\\t%13-15,22Q, %1-3,5Q, #%16-18d\"},\n \n   /* Vector VMOV immediate to vector,\n-     cmode == 11x1 -> VMVN which is UNDEFINED\n-     for such a cmode.  */\n+     undefinded for cmode == 1111 */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n-   MVE_VMVN_IMM, 0xef800d50, 0xefb81dd0, UNDEFINED_INSTRUCTION},\n+   MVE_VMVN_IMM, 0xef800f70, 0xefb81ff0, UNDEFINED_INSTRUCTION},\n+\n+  /* Vector VMOV immediate to vector,\n+     cmode == 1101 */\n+  {ARM_FEATURE_COPROC (FPU_MVE),\n+   MVE_VMOV_IMM_TO_VEC, 0xef800d50, 0xefb81fd0,\n+   \"vmov%v.%5,8-11s\\t%13-15,22Q, %E\"},\n \n   /* Vector VMOV immediate to vector.  */\n   {ARM_FEATURE_COPROC (FPU_MVE),\n@@ -5664,11 +5669,11 @@ is_mve_encoding_conflict (unsigned long given,\n       {\n \tunsigned long cmode = arm_decode_field (given, 8, 11);\n \n-\tif ((cmode & 9) == 1)\n+\tif (cmode == 0xe)\n \t  return TRUE;\n-\telse if ((cmode & 5) == 1)\n+\telse if ((cmode & 0x9) == 1)\n \t  return TRUE;\n-\telse if ((cmode & 0xe) == 0xe)\n+\telse if ((cmode & 0xd) == 9)\n \t  return TRUE;\n \telse\n \t  return FALSE;"
    }
  ]
}