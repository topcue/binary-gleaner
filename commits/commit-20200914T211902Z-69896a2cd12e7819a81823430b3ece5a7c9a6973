{
  "sha": "69896a2cd12e7819a81823430b3ece5a7c9a6973",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Njk4OTZhMmNkMTJlNzgxOWE4MTgyMzQzMGIzZWNlNWE3YzlhNjk3Mw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-14T20:16:57Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2020-09-14T21:19:02Z"
    },
    "message": "Rename address_space_int_to_name/address_space_name_to_int\n\nThese methods now take/return a type_instance_flags instead of a raw\ninteger, so rename them accordingly.\n\ngdb/ChangeLog:\n\n\t* c-typeprint.c (c_type_print_modifier): Adjust to rename.\n\t* gdbtypes.c (address_space_name_to_int): Rename to ...\n\t(address_space_name_to_type_instance_flags): ... this.\n\t(address_space_int_to_name): Rename to ...\n\t(address_space_type_instance_flags_to_name): ... this.\n\t* gdbtypes.h (address_space_name_to_int): Rename to ...\n\t(address_space_name_to_type_instance_flags): ... this.\n\t(address_space_int_to_name): Rename to ...\n\t(address_space_type_instance_flags_to_name): ... this.\n\t* type-stack.c (type_stack::insert): Adjust to rename.\n\t* type-stack.h (type_stack::insert): Likewise.",
    "tree": {
      "sha": "995105bbfff38fedd49859208bb8df2c3acb05c9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/995105bbfff38fedd49859208bb8df2c3acb05c9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/69896a2cd12e7819a81823430b3ece5a7c9a6973",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69896a2cd12e7819a81823430b3ece5a7c9a6973",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/69896a2cd12e7819a81823430b3ece5a7c9a6973",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/69896a2cd12e7819a81823430b3ece5a7c9a6973/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "314ad88df63c26a986e1ecd18bfe1de81a3cc0fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/314ad88df63c26a986e1ecd18bfe1de81a3cc0fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/314ad88df63c26a986e1ecd18bfe1de81a3cc0fb"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 37,
    "deletions": 21
  },
  "files": [
    {
      "sha": "cb435c1fd78a964f7382ae2c697224c80abe173c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -1,3 +1,17 @@\n+2020-09-14  Pedro Alves  <pedro@palves.net>\n+\n+\t* c-typeprint.c (c_type_print_modifier): Adjust to rename.\n+\t* gdbtypes.c (address_space_name_to_int): Rename to ...\n+\t(address_space_name_to_type_instance_flags): ... this.\n+\t(address_space_int_to_name): Rename to ...\n+\t(address_space_type_instance_flags_to_name): ... this.\n+\t* gdbtypes.h (address_space_name_to_int): Rename to ...\n+\t(address_space_name_to_type_instance_flags): ... this.\n+\t(address_space_int_to_name): Rename to ...\n+\t(address_space_type_instance_flags_to_name): ... this.\n+\t* type-stack.c (type_stack::insert): Adjust to rename.\n+\t* type-stack.h (type_stack::insert): Likewise.\n+\n 2020-09-14  Pedro Alves  <pedro@palves.net>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "
    },
    {
      "sha": "a07b29a95de856c93889db530733f8e9e6f8a4f6",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -526,8 +526,9 @@ c_type_print_modifier (struct type *type, struct ui_file *stream,\n       did_print_modifier = 1;\n     }\n \n-  address_space_id = address_space_int_to_name (get_type_arch (type),\n-\t\t\t\t\t\tTYPE_INSTANCE_FLAGS (type));\n+  address_space_id\n+    = address_space_type_instance_flags_to_name (get_type_arch (type),\n+\t\t\t\t\t\t TYPE_INSTANCE_FLAGS (type));\n   if (address_space_id)\n     {\n       if (did_print_modifier || need_pre_space)"
    },
    {
      "sha": "7ade2ccb533b95880fcbe3bb256f31a8fdb5b985",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -575,12 +575,12 @@ lookup_function_type_with_arguments (struct type *type,\n   return fn;\n }\n \n-/* Identify address space identifier by name --\n-   return the integer flag defined in gdbtypes.h.  */\n+/* Identify address space identifier by name -- return a\n+   type_instance_flags.  */\n \n type_instance_flags\n-address_space_name_to_int (struct gdbarch *gdbarch,\n-\t\t\t   const char *space_identifier)\n+address_space_name_to_type_instance_flags (struct gdbarch *gdbarch,\n+\t\t\t\t\t   const char *space_identifier)\n {\n   type_instance_flags type_flags;\n \n@@ -598,12 +598,12 @@ address_space_name_to_int (struct gdbarch *gdbarch,\n     error (_(\"Unknown address space specifier: \\\"%s\\\"\"), space_identifier);\n }\n \n-/* Identify address space identifier by integer flag as defined in \n-   gdbtypes.h -- return the string version of the adress space name.  */\n+/* Identify address space identifier by type_instance_flags and return\n+   the string version of the adress space name.  */\n \n const char *\n-address_space_int_to_name (struct gdbarch *gdbarch,\n-\t\t\t   type_instance_flags space_flag)\n+address_space_type_instance_flags_to_name (struct gdbarch *gdbarch,\n+\t\t\t\t\t   type_instance_flags space_flag)\n {\n   if (space_flag & TYPE_INSTANCE_FLAG_CODE_SPACE)\n     return \"code\";"
    },
    {
      "sha": "6b87de307bde8e06c119a8b5d96cf2510930a571",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -2217,11 +2217,11 @@ extern struct type *make_atomic_type (struct type *);\n \n extern void replace_type (struct type *, struct type *);\n \n-extern type_instance_flags address_space_name_to_int (struct gdbarch *,\n-\t\t\t\t\t\t      const char *);\n+extern type_instance_flags address_space_name_to_type_instance_flags\n+  (struct gdbarch *, const char *);\n \n-extern const char *address_space_int_to_name (struct gdbarch *,\n-\t\t\t\t\t      type_instance_flags);\n+extern const char *address_space_type_instance_flags_to_name\n+  (struct gdbarch *, type_instance_flags);\n \n extern struct type *make_type_with_address_space\n   (struct type *type, type_instance_flags space_identifier);"
    },
    {
      "sha": "94ff9ba8c91242782c1523eb7d144e597ba08d55",
      "filename": "gdb/type-stack.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/type-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/type-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/type-stack.c?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -67,8 +67,9 @@ type_stack::insert (struct expr_builder *pstate, const char *string)\n \n   element.piece = tp_space_identifier;\n   insert_into (slot, element);\n-  element.int_val = address_space_name_to_int (pstate->gdbarch (),\n-\t\t\t\t\t       string);\n+  element.int_val\n+    = address_space_name_to_type_instance_flags (pstate->gdbarch (),\n+\t\t\t\t\t\t string);\n   insert_into (slot, element);\n }\n "
    },
    {
      "sha": "265178fc3723daf74ee2b35a0c36beafcd363684",
      "filename": "gdb/type-stack.h",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/type-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/69896a2cd12e7819a81823430b3ece5a7c9a6973/gdb/type-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/type-stack.h?ref=69896a2cd12e7819a81823430b3ece5a7c9a6973",
      "patch": "@@ -157,11 +157,11 @@ struct type_stack\n \n   /* Insert a tp_space_identifier and the corresponding address space\n      value into the stack.  STRING is the name of an address space, as\n-     recognized by address_space_name_to_int.  If the stack is empty,\n-     the new elements are simply pushed.  If the stack is not empty,\n-     this function assumes that the first item on the stack is a\n-     tp_pointer, and the new values are inserted above the first\n-     item.  */\n+     recognized by address_space_name_to_type_instance_flags.  If the\n+     stack is empty, the new elements are simply pushed.  If the stack\n+     is not empty, this function assumes that the first item on the\n+     stack is a tp_pointer, and the new values are inserted above the\n+     first item.  */\n \n   void insert (struct expr_builder *pstate, const char *string);\n "
    }
  ]
}