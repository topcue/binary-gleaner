{
  "sha": "a54700c6c45ea424b668f2201ef14906f2052412",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTU0NzAwYzZjNDVlYTQyNGI2NjhmMjIwMWVmMTQ5MDZmMjA1MjQxMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-06T21:04:12Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-15T18:29:28Z"
    },
    "message": "Move contents of tui_show_frame_info to new method\n\nThis moves much of the body of tui_show_frame_info to a new method on\ntui_source_window_base.  This removes a check for the type of a\nwindow.\n\ngdb/ChangeLog\n2019-08-15  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<maybe_update>: Declare.\n\t* tui/tui-stack.c (tui_show_frame_info): Call maybe_update\n\tmethod.\n\t* tui/tui-source.h (struct tui_source_window) <maybe_update>:\n\tDeclare.\n\t* tui/tui-source.c (tui_source_window::maybe_update): New method.\n\t* tui/tui-disasm.h (struct tui_disasm_window) <maybe_update>:\n\tDeclare.\n\t* tui/tui-disasm.c (tui_disasm_window::maybe_update): New method.",
    "tree": {
      "sha": "e379e5c24176b5ea9c3017b56a66374f144932f4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e379e5c24176b5ea9c3017b56a66374f144932f4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a54700c6c45ea424b668f2201ef14906f2052412",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a54700c6c45ea424b668f2201ef14906f2052412",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a54700c6c45ea424b668f2201ef14906f2052412",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a54700c6c45ea424b668f2201ef14906f2052412/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e2a678a557b52816a7aa45902a6519bc1cae918e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2a678a557b52816a7aa45902a6519bc1cae918e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e2a678a557b52816a7aa45902a6519bc1cae918e"
    }
  ],
  "stats": {
    "total": 142,
    "additions": 85,
    "deletions": 57
  },
  "files": [
    {
      "sha": "b0da5a1a3a848d8e896f84955bd79ae9ff767fe5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -1,3 +1,16 @@\n+2019-08-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<maybe_update>: Declare.\n+\t* tui/tui-stack.c (tui_show_frame_info): Call maybe_update\n+\tmethod.\n+\t* tui/tui-source.h (struct tui_source_window) <maybe_update>:\n+\tDeclare.\n+\t* tui/tui-source.c (tui_source_window::maybe_update): New method.\n+\t* tui/tui-disasm.h (struct tui_disasm_window) <maybe_update>:\n+\tDeclare.\n+\t* tui/tui-disasm.c (tui_disasm_window::maybe_update): New method.\n+\n 2019-08-15  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-stack.c (tui_make_status_line): Use string constructor."
    },
    {
      "sha": "fcb33bccfd7e66532ce654991bfccb4088fa36fe",
      "filename": "gdb/tui/tui-disasm.c",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-disasm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-disasm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.c?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -380,3 +380,34 @@ tui_disasm_window::location_matches_p (struct bp_location *loc, int line_no)\n   return (content[line_no].line_or_addr.loa == LOA_ADDRESS\n \t  && content[line_no].line_or_addr.u.addr == loc->address);\n }\n+\n+void\n+tui_disasm_window::maybe_update (struct frame_info *fi, symtab_and_line sal,\n+\t\t\t\t int line_no, CORE_ADDR addr)\n+{\n+  CORE_ADDR low;\n+\n+  if (find_pc_partial_function (get_frame_pc (fi),\n+\t\t\t\tNULL, &low, NULL) == 0)\n+    {\n+      /* There is no symbol available for current PC.  There is no\n+\t safe way how to \"disassemble backwards\".  */\n+      low = get_frame_pc (fi);\n+    }\n+  else\n+    low = tui_get_low_disassembly_address (get_frame_arch (fi),\n+\t\t\t\t\t   low, get_frame_pc (fi));\n+\n+  struct tui_line_or_address a;\n+\n+  a.loa = LOA_ADDRESS;\n+  a.u.addr = low;\n+  if (!tui_addr_is_displayed (addr, this, TRUE))\n+    tui_update_source_window (this, get_frame_arch (fi),\n+\t\t\t      sal.symtab, a, TRUE);\n+  else\n+    {\n+      a.u.addr = addr;\n+      set_is_exec_point_at (a);\n+    }\n+}"
    },
    {
      "sha": "20bc4290ffc1ac22f05828d93320a677e68e5d1c",
      "filename": "gdb/tui/tui-disasm.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.h?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -44,6 +44,10 @@ struct tui_disasm_window : public tui_source_window_base\n \n   bool location_matches_p (struct bp_location *loc, int line_no) override;\n \n+  void maybe_update (struct frame_info *fi, symtab_and_line sal,\n+\t\t     int line_no, CORE_ADDR addr)\n+    override;\n+\n protected:\n \n   void do_scroll_vertical (int num_to_scroll) override;"
    },
    {
      "sha": "34b8f54557dd9e6c91ac18c9a4c9f9969e4856ff",
      "filename": "gdb/tui/tui-source.c",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.c?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -293,3 +293,29 @@ tui_source_window::location_matches_p (struct bp_location *loc, int line_no)\n \t  && filename_cmp (fullname,\n \t\t\t   symtab_to_fullname (loc->symtab)) == 0);\n }\n+\n+void\n+tui_source_window::maybe_update (struct frame_info *fi, symtab_and_line sal,\n+\t\t\t\t int line_no, CORE_ADDR addr)\n+{\n+  int start_line = (line_no - (viewport_height / 2)) + 1;\n+  if (start_line <= 0)\n+    start_line = 1;\n+\n+  bool source_already_displayed = (sal.symtab != 0\n+\t\t\t\t   && showing_source_p (fullname));\n+\n+  struct tui_line_or_address l;\n+\n+  l.loa = LOA_LINE;\n+  l.u.line_no = start_line;\n+  if (!(source_already_displayed\n+\t&& tui_line_is_displayed (line_no, this, TRUE)))\n+    tui_update_source_window (this, get_frame_arch (fi),\n+\t\t\t      sal.symtab, l, TRUE);\n+  else\n+    {\n+      l.u.line_no = line_no;\n+      set_is_exec_point_at (l);\n+    }\n+}"
    },
    {
      "sha": "dc4470e9e5a86940af311c5e10dcf50bfa5c90d8",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -47,6 +47,10 @@ struct tui_source_window : public tui_source_window_base\n \n   bool showing_source_p (const char *filename) const;\n \n+  void maybe_update (struct frame_info *fi, symtab_and_line sal,\n+\t\t     int line_no, CORE_ADDR addr)\n+    override;\n+\n protected:\n \n   void do_scroll_vertical (int num_to_scroll) override;"
    },
    {
      "sha": "09ee87f4027cec5b0493030f0458542aed79b7fe",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 1,
      "deletions": 57,
      "changes": 58,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -364,7 +364,6 @@ tui_show_frame_info (struct frame_info *fi)\n   if (fi)\n     {\n       struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n-      int source_already_displayed;\n       CORE_ADDR pc;\n \n       symtab_and_line sal = find_frame_sal (fi);\n@@ -373,10 +372,6 @@ tui_show_frame_info (struct frame_info *fi)\n       if (sal.symtab != nullptr)\n \tfullname = symtab_to_fullname (sal.symtab);\n \n-      source_already_displayed = (sal.symtab != 0\n-\t\t\t\t  && TUI_SRC_WIN != nullptr\n-\t\t\t\t  && TUI_SRC_WIN->showing_source_p (fullname));\n-\n       if (get_frame_pc_if_available (fi, &pc))\n \tlocator_changed_p\n \t  = tui_set_locator_info (get_frame_arch (fi),\n@@ -399,58 +394,7 @@ tui_show_frame_info (struct frame_info *fi)\n       tui_show_locator_content ();\n       for (struct tui_source_window_base *win_info : tui_source_windows ())\n \t{\n-\t  if (win_info == TUI_SRC_WIN)\n-\t    {\n-\t      int start_line = (locator->line_no -\n-\t\t\t\t(win_info->viewport_height / 2)) + 1;\n-\t      if (start_line <= 0)\n-\t\tstart_line = 1;\n-\n-\t      struct tui_line_or_address l;\n-\n-\t      l.loa = LOA_LINE;\n-\t      l.u.line_no = start_line;\n-\t      if (!(source_already_displayed\n-\t\t    && tui_line_is_displayed (locator->line_no,\n-\t\t\t\t\t      win_info, TRUE)))\n-\t\ttui_update_source_window (win_info, get_frame_arch (fi),\n-\t\t\t\t\t  sal.symtab, l, TRUE);\n-\t      else\n-\t\t{\n-\t\t  l.u.line_no = locator->line_no;\n-\t\t  win_info->set_is_exec_point_at (l);\n-\t\t}\n-\t    }\n-\t  else\n-\t    {\n-\t      CORE_ADDR low;\n-\n-\t      if (find_pc_partial_function (get_frame_pc (fi),\n-\t\t\t\t\t    NULL, &low, NULL) == 0)\n-\t\t{\n-\t\t  /* There is no symbol available for current PC.  There is no\n-\t\t     safe way how to \"disassemble backwards\".  */\n-\t\t  low = get_frame_pc (fi);\n-\t\t}\n-\t      else\n-\t\tlow = tui_get_low_disassembly_address (get_frame_arch (fi),\n-\t\t\t\t\t\t       low, get_frame_pc (fi));\n-\n-\t      struct tui_line_or_address a;\n-\n-\t      a.loa = LOA_ADDRESS;\n-\t      a.u.addr = low;\n-\t      if (!tui_addr_is_displayed (locator->addr,\n-\t\t\t\t\t  win_info, TRUE))\n-\t\ttui_update_source_window (win_info, get_frame_arch (fi),\n-\t\t\t\t\t  sal.symtab, a, TRUE);\n-\t      else\n-\t\t{\n-\t\t  a.u.addr = locator->addr;\n-\t\t  win_info->set_is_exec_point_at (a);\n-\t\t}\n-\t    }\n-\n+\t  win_info->maybe_update (fi, sal, locator->line_no, locator->addr);\n \t  win_info->update_exec_info ();\n \t}\n "
    },
    {
      "sha": "f2fd1eb1b0bf0b6df8c5d0ae9fa8c2a9a4411d72",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a54700c6c45ea424b668f2201ef14906f2052412/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=a54700c6c45ea424b668f2201ef14906f2052412",
      "patch": "@@ -23,6 +23,7 @@\n #define TUI_TUI_WINSOURCE_H\n \n #include \"tui/tui-data.h\"\n+#include \"symtab.h\"\n \n /* Flags to tell what kind of breakpoint is at current line.  */\n enum tui_bp_flag\n@@ -116,6 +117,11 @@ struct tui_source_window_base : public tui_win_info\n \n   void update_exec_info ();\n \n+  /* Update the window to display the given location.  Does nothing if\n+     the location is already displayed.  */\n+  virtual void maybe_update (struct frame_info *fi, symtab_and_line sal,\n+\t\t\t     int line_no, CORE_ADDR addr) = 0;\n+\n   /* Does the locator belong to this window?  */\n   bool m_has_locator = false;\n   /* Execution information window.  */"
    }
  ]
}