{
  "sha": "494b2fc8078502f84a2ff2a3402a5989b221526d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDk0YjJmYzgwNzg1MDJmODRhMmZmMmEzNDAyYTU5ODliMjIxNTI2ZA==",
  "commit": {
    "author": {
      "name": "Martin Liska",
      "email": "mliska@suse.cz",
      "date": "2020-08-18T08:51:28Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-08-20T01:26:07Z"
    },
    "message": "Port dw2gencfi.c to str_htab.\n\n\t* dw2gencfi.c (dwcfi_hash_insert): Use htab_t and str_hash_*\n\tfunctions.\n\t(dwcfi_hash_find): Likewise.\n\t(dwcfi_hash_find_or_make): Likewise.",
    "tree": {
      "sha": "f4c57d1d7df46ef3dddb70339710f6ebe0bb40a8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f4c57d1d7df46ef3dddb70339710f6ebe0bb40a8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/494b2fc8078502f84a2ff2a3402a5989b221526d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/494b2fc8078502f84a2ff2a3402a5989b221526d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/494b2fc8078502f84a2ff2a3402a5989b221526d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/494b2fc8078502f84a2ff2a3402a5989b221526d/comments",
  "author": {
    "login": "marxin",
    "id": 2658545,
    "node_id": "MDQ6VXNlcjI2NTg1NDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/marxin",
    "html_url": "https://github.com/marxin",
    "followers_url": "https://api.github.com/users/marxin/followers",
    "following_url": "https://api.github.com/users/marxin/following{/other_user}",
    "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/marxin/subscriptions",
    "organizations_url": "https://api.github.com/users/marxin/orgs",
    "repos_url": "https://api.github.com/users/marxin/repos",
    "events_url": "https://api.github.com/users/marxin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/marxin/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f7a5981beb423a0bc03633ac8156d33d83ef41d6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7a5981beb423a0bc03633ac8156d33d83ef41d6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f7a5981beb423a0bc03633ac8156d33d83ef41d6"
    }
  ],
  "stats": {
    "total": 25,
    "additions": 11,
    "deletions": 14
  },
  "files": [
    {
      "sha": "77aa83fdbcf58beafc189b59ab6fcd0df69d811a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/494b2fc8078502f84a2ff2a3402a5989b221526d/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/494b2fc8078502f84a2ff2a3402a5989b221526d/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=494b2fc8078502f84a2ff2a3402a5989b221526d",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* dw2gencfi.c (dwcfi_hash_insert): Use htab_t and str_hash_*\n+\tfunctions.\n+\t(dwcfi_hash_find): Likewise.\n+\t(dwcfi_hash_find_or_make): Likewise.\n+\n 2020-08-20  Martin Liska  <mliska@suse.cz>\n \n \t* ecoff.c (INIT_VARRAY): Use htab_t."
    },
    {
      "sha": "964a7792270c3e1dcdfed898c9c956ac3ee2b72e",
      "filename": "gas/dw2gencfi.c",
      "status": "modified",
      "additions": 4,
      "deletions": 14,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/494b2fc8078502f84a2ff2a3402a5989b221526d/gas/dw2gencfi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/494b2fc8078502f84a2ff2a3402a5989b221526d/gas/dw2gencfi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dw2gencfi.c?ref=494b2fc8078502f84a2ff2a3402a5989b221526d",
      "patch": "@@ -115,7 +115,7 @@ static bfd_boolean compact_eh;\n #define compact_eh 0\n #endif\n \n-static struct hash_control *dwcfi_hash;\n+static htab_t dwcfi_hash;\n \f\n /* Emit a single byte into the current segment.  */\n \n@@ -325,20 +325,10 @@ make_debug_seg (segT cseg, char *name, int sflags)\n   return r;\n }\n \n-static void\n-dwcfi_hash_insert (const char *name, struct dwcfi_seg_list *item)\n-{\n-  const char *error_string;\n-\n-  if ((error_string = hash_jam (dwcfi_hash, name, (char *) item)))\n-    as_fatal (_(\"Inserting \\\"%s\\\" into structure table failed: %s\"),\n-\t      name, error_string);\n-}\n-\n static struct dwcfi_seg_list *\n dwcfi_hash_find (char *name)\n {\n-  return (struct dwcfi_seg_list *) hash_find (dwcfi_hash, name);\n+  return (struct dwcfi_seg_list *) str_hash_find (dwcfi_hash, name);\n }\n \n static struct dwcfi_seg_list *\n@@ -349,7 +339,7 @@ dwcfi_hash_find_or_make (segT cseg, const char *base_name, int flags)\n \n   /* Initialize dwcfi_hash once.  */\n   if (!dwcfi_hash)\n-    dwcfi_hash = hash_new ();\n+    dwcfi_hash = str_htab_create ();\n \n   name = get_debugseg_name (cseg, base_name);\n \n@@ -358,7 +348,7 @@ dwcfi_hash_find_or_make (segT cseg, const char *base_name, int flags)\n     {\n       item = alloc_debugseg_item (make_debug_seg (cseg, name, flags), 0, name);\n \n-      dwcfi_hash_insert (item->seg_name, item);\n+      str_hash_insert (dwcfi_hash, item->seg_name, (char *) item);\n     }\n   else\n     free (name);"
    }
  ]
}