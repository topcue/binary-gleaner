{
  "sha": "b054970d54e141e5d2c824223772685742af2c2a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjA1NDk3MGQ1NGUxNDFlNWQyYzgyNDIyMzc3MjY4NTc0MmFmMmMyYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-07-12T19:34:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-09-10T14:30:45Z"
    },
    "message": "Change map_matching_symbols to take a lookup_name_info\n\nThis patch further simplifies the map_matching_symbols callback, by\nhaving it take a lookup_name_info rather than a plain string.\n\ngdb/ChangeLog\n2019-09-10  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (add_nonlocal_symbols): Combine calls to\n\tmap_matching_symbols.  Update.\n\t* dwarf2read.c (dw2_map_matching_symbols): Update.\n\t* psymtab.c (match_partial_symbol): Change type; update.\n\t(psym_map_matching_symbols): Likewise.\n\t* symfile-debug.c (debug_qf_map_matching_symbols): Change\n\ttype; update.\n\t* symfile.h (struct quick_symbol_functions)\n\t<map_matching_symbols>: Change \"name\" to be a lookup_name_info.\n\tRemove \"match\".",
    "tree": {
      "sha": "3542155421525de7fb5cafd2f71d516768138a8b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3542155421525de7fb5cafd2f71d516768138a8b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b054970d54e141e5d2c824223772685742af2c2a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b054970d54e141e5d2c824223772685742af2c2a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b054970d54e141e5d2c824223772685742af2c2a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b054970d54e141e5d2c824223772685742af2c2a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6a3dbf1bc620ae068c84074b2f72e11c24dc1e6d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6a3dbf1bc620ae068c84074b2f72e11c24dc1e6d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6a3dbf1bc620ae068c84074b2f72e11c24dc1e6d"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 33,
    "deletions": 43
  },
  "files": [
    {
      "sha": "e54629c9949ec44b3e25cbae443531b21831d829",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -1,3 +1,16 @@\n+2019-09-10  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (add_nonlocal_symbols): Combine calls to\n+\tmap_matching_symbols.  Update.\n+\t* dwarf2read.c (dw2_map_matching_symbols): Update.\n+\t* psymtab.c (match_partial_symbol): Change type; update.\n+\t(psym_map_matching_symbols): Likewise.\n+\t* symfile-debug.c (debug_qf_map_matching_symbols): Change\n+\ttype; update.\n+\t* symfile.h (struct quick_symbol_functions)\n+\t<map_matching_symbols>: Change \"name\" to be a lookup_name_info.\n+\tRemove \"match\".\n+\n 2019-09-10  Tom Tromey  <tromey@adacore.com>\n \n \t* psymtab.c (map_block): Remove."
    },
    {
      "sha": "8cdb62bde034e5f369aa97a2cb2cf66728053036",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 7,
      "deletions": 13,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -5550,16 +5550,10 @@ add_nonlocal_symbols (struct obstack *obstackp,\n     {\n       data.objfile = objfile;\n \n-      if (is_wild_match)\n-\tobjfile->sf->qf->map_matching_symbols (objfile, lookup_name.name ().c_str (),\n-\t\t\t\t\t       domain, global, callback,\n-\t\t\t\t\t       symbol_name_match_type::WILD,\n-\t\t\t\t\t       NULL);\n-      else\n-\tobjfile->sf->qf->map_matching_symbols (objfile, lookup_name.name ().c_str (),\n-\t\t\t\t\t       domain, global, callback,\n-\t\t\t\t\t       symbol_name_match_type::FULL,\n-\t\t\t\t\t       compare_names);\n+      objfile->sf->qf->map_matching_symbols (objfile, lookup_name,\n+\t\t\t\t\t     domain, global, callback,\n+\t\t\t\t\t     (is_wild_match\n+\t\t\t\t\t      ? NULL : compare_names));\n \n       for (compunit_symtab *cu : objfile->compunits ())\n \t{\n@@ -5575,14 +5569,14 @@ add_nonlocal_symbols (struct obstack *obstackp,\n   if (num_defns_collected (obstackp) == 0 && global && !is_wild_match)\n     {\n       const char *name = ada_lookup_name (lookup_name);\n-      std::string name1 = std::string (\"<_ada_\") + name + '>';\n+      lookup_name_info name1 (std::string (\"<_ada_\") + name + '>',\n+\t\t\t      symbol_name_match_type::FULL);\n \n       for (objfile *objfile : current_program_space->objfiles ())\n         {\n \t  data.objfile = objfile;\n-\t  objfile->sf->qf->map_matching_symbols (objfile, name1.c_str (),\n+\t  objfile->sf->qf->map_matching_symbols (objfile, name1,\n \t\t\t\t\t\t domain, global, callback,\n-\t\t\t\t\t\t symbol_name_match_type::FULL,\n \t\t\t\t\t\t compare_names);\n \t}\n     }      \t"
    },
    {
      "sha": "d57684be9015f8db9427986cd0078a8958fef4be",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -4186,10 +4186,9 @@ dw2_expand_symtabs_with_fullname (struct objfile *objfile,\n static void\n dw2_map_matching_symbols\n   (struct objfile *objfile,\n-   const char * name, domain_enum domain,\n+   const lookup_name_info &name, domain_enum domain,\n    int global,\n    gdb::function_view<symbol_found_callback_ftype> callback,\n-   symbol_name_match_type match,\n    symbol_compare_ftype *ordered_compare)\n {\n   /* Currently unimplemented; used for Ada.  The function can be called if the"
    },
    {
      "sha": "1f5f492d39d74587f0996333a4408da52c51bc68",
      "filename": "gdb/psymtab.c",
      "status": "modified",
      "additions": 7,
      "deletions": 20,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/psymtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/psymtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/psymtab.c?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -37,13 +37,6 @@\n #include <algorithm>\n #include <set>\n \n-static struct partial_symbol *match_partial_symbol (struct objfile *,\n-\t\t\t\t\t\t    struct partial_symtab *,\n-\t\t\t\t\t\t    int,\n-\t\t\t\t\t\t    const char *, domain_enum,\n-\t\t\t\t\t\t    symbol_name_match_type,\n-\t\t\t\t\t\t    symbol_compare_ftype *);\n-\n static struct partial_symbol *lookup_partial_symbol (struct objfile *,\n \t\t\t\t\t\t     struct partial_symtab *,\n \t\t\t\t\t\t     const char *, int,\n@@ -545,8 +538,7 @@ psymbol_name_matches (partial_symbol *psym,\n static struct partial_symbol *\n match_partial_symbol (struct objfile *objfile,\n \t\t      struct partial_symtab *pst, int global,\n-\t\t      const char *name, domain_enum domain,\n-\t\t      symbol_name_match_type match_type,\n+\t\t      const lookup_name_info &name, domain_enum domain,\n \t\t      symbol_compare_ftype *ordered_compare)\n {\n   struct partial_symbol **start, **psym;\n@@ -557,8 +549,6 @@ match_partial_symbol (struct objfile *objfile,\n   if (length == 0)\n     return NULL;\n \n-  lookup_name_info lookup_name (name, match_type);\n-\n   start = (global ?\n \t   &objfile->partial_symtabs->global_psymbols[pst->globals_offset] :\n \t   &objfile->partial_symtabs->static_psymbols[pst->statics_offset]);\n@@ -583,7 +573,7 @@ match_partial_symbol (struct objfile *objfile,\n \n \t  enum language lang = (*center)->ginfo.language;\n \t  const char *lang_ln\n-\t    = lookup_name.language_lookup_name (lang).c_str ();\n+\t    = name.language_lookup_name (lang).c_str ();\n \n \t  if (ordered_compare (symbol_search_name (&(*center)->ginfo),\n \t\t\t       lang_ln) >= 0)\n@@ -594,7 +584,7 @@ match_partial_symbol (struct objfile *objfile,\n       gdb_assert (top == bottom);\n \n       while (top <= real_top\n-\t     && psymbol_name_matches (*top, lookup_name))\n+\t     && psymbol_name_matches (*top, name))\n \t{\n \t  if (symbol_matches_domain ((*top)->ginfo.language,\n \t\t\t\t     (*top)->domain, domain))\n@@ -612,7 +602,7 @@ match_partial_symbol (struct objfile *objfile,\n \t{\n \t  if (symbol_matches_domain ((*psym)->ginfo.language,\n \t\t\t\t     (*psym)->domain, domain)\n-\t      && psymbol_name_matches (*psym, lookup_name))\n+\t      && psymbol_name_matches (*psym, name))\n \t    return *psym;\n \t}\n     }\n@@ -1174,21 +1164,18 @@ psymtab_to_fullname (struct partial_symtab *ps)\n static void\n psym_map_matching_symbols\n   (struct objfile *objfile,\n-   const char *name, domain_enum domain,\n+   const lookup_name_info &name, domain_enum domain,\n    int global,\n    gdb::function_view<symbol_found_callback_ftype> callback,\n-   symbol_name_match_type match,\n    symbol_compare_ftype *ordered_compare)\n {\n   const int block_kind = global ? GLOBAL_BLOCK : STATIC_BLOCK;\n \n-  lookup_name_info lookup_name (name, match);\n-\n   for (partial_symtab *ps : require_partial_symbols (objfile, 1))\n     {\n       QUIT;\n       if (ps->readin\n-\t  || match_partial_symbol (objfile, ps, global, name, domain, match,\n+\t  || match_partial_symbol (objfile, ps, global, name, domain,\n \t\t\t\t   ordered_compare))\n \t{\n \t  struct compunit_symtab *cust = psymtab_to_symtab (objfile, ps);\n@@ -1197,7 +1184,7 @@ psym_map_matching_symbols\n \t  if (cust == NULL)\n \t    continue;\n \t  block = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust), block_kind);\n-\t  if (!iterate_over_symbols_terminated (block, lookup_name,\n+\t  if (!iterate_over_symbols_terminated (block, name,\n \t\t\t\t\t\tdomain, callback))\n \t    return;\n \t}"
    },
    {
      "sha": "9a5d0fa0a66bbfc077399eb10d2934a3bbb0d439",
      "filename": "gdb/symfile-debug.c",
      "status": "modified",
      "additions": 3,
      "deletions": 6,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/symfile-debug.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/symfile-debug.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile-debug.c?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -230,26 +230,23 @@ debug_qf_expand_symtabs_with_fullname (struct objfile *objfile,\n static void\n debug_qf_map_matching_symbols\n   (struct objfile *objfile,\n-   const char *name, domain_enum domain,\n+   const lookup_name_info &name, domain_enum domain,\n    int global,\n    gdb::function_view<symbol_found_callback_ftype> callback,\n-   symbol_name_match_type match,\n    symbol_compare_ftype *ordered_compare)\n {\n   const struct debug_sym_fns_data *debug_data\n     = symfile_debug_objfile_data_key.get (objfile);\n \n   fprintf_filtered (gdb_stdlog,\n-\t\t    \"qf->map_matching_symbols (%s, \\\"%s\\\", %s, %d, %s, %s)\\n\",\n-\t\t    objfile_debug_name (objfile), name,\n+\t\t    \"qf->map_matching_symbols (%s, %s, %d, %s)\\n\",\n+\t\t    objfile_debug_name (objfile),\n \t\t    domain_name (domain), global,\n-\t\t    plongest ((LONGEST) match),\n \t\t    host_address_to_string (ordered_compare));\n \n   debug_data->real_sf->qf->map_matching_symbols (objfile, name,\n \t\t\t\t\t\t domain, global,\n \t\t\t\t\t\t callback,\n-\t\t\t\t\t\t match,\n \t\t\t\t\t\t ordered_compare);\n }\n "
    },
    {
      "sha": "6fa6db4750e957ee7c57c52a972bdf322602cdf1",
      "filename": "gdb/symfile.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b054970d54e141e5d2c824223772685742af2c2a/gdb/symfile.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b054970d54e141e5d2c824223772685742af2c2a/gdb/symfile.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.h?ref=b054970d54e141e5d2c824223772685742af2c2a",
      "patch": "@@ -227,10 +227,10 @@ struct quick_symbol_functions\n \n   void (*map_matching_symbols)\n     (struct objfile *,\n-     const char *name, domain_enum domain,\n+     const lookup_name_info &lookup_name,\n+     domain_enum domain,\n      int global,\n      gdb::function_view<symbol_found_callback_ftype> callback,\n-     symbol_name_match_type match,\n      symbol_compare_ftype *ordered_compare);\n \n   /* Expand all symbol tables in OBJFILE matching some criteria."
    }
  ]
}