{
  "sha": "60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjAxMDhlNDdiNWIxNmIzMmE2MmViMzJjNWU2ZjkyOWFiMmNiNWNmMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-19T15:43:17Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-19T15:43:17Z"
    },
    "message": "[gdb/testsuite] Introduce supports_scalar_storage_order_attribute\n\nIntroduce support test procs:\n- supports_scalar_storage_order_attribute, and\n- supports_gnuc\nand use them in test-case gdb.base/endianity.exp.\n\nTested on x86_64-linux with gcc-7.5.0, gcc-4.8.5, and clang 10.0.1.\n\ngdb/testsuite/ChangeLog:\n\n2020-12-19  Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (supports_scalar_storage_order_attribute)\n\t(supports_gnuc): New proc.\n\t* gdb.base/endianity.exp: Define TEST_SSO.  Eliminate\n\ttest_compiler_info calls.  Add unsupported message.\n\t* gdb.base/endianity.c: Use TEST_SSO.",
    "tree": {
      "sha": "792fc4285772135a37d3b350b38094661efbb268",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/792fc4285772135a37d3b350b38094661efbb268"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa639f555afbe6bf670c27d161c42974740987cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa639f555afbe6bf670c27d161c42974740987cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa639f555afbe6bf670c27d161c42974740987cb"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 63,
    "deletions": 4
  },
  "files": [
    {
      "sha": "8bcc735b1ceb458d24de135fdfbd165084bb7668",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
      "patch": "@@ -1,3 +1,11 @@\n+2020-12-19  Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (supports_scalar_storage_order_attribute)\n+\t(supports_gnuc): New proc.\n+\t* gdb.base/endianity.exp: Define TEST_SSO.  Eliminate\n+\ttest_compiler_info calls.  Add unsupported message.\n+\t* gdb.base/endianity.c: Use TEST_SSO.\n+\n 2020-12-19  Hannes Domani  <ssbssa@yahoo.de>\n \n \tPR exp/27070"
    },
    {
      "sha": "15cbdd9a26555db8a642ced9550b8c8c565f3a80",
      "filename": "gdb/testsuite/gdb.base/endianity.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/gdb.base/endianity.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/gdb.base/endianity.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/endianity.c?ref=60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
      "patch": "@@ -26,7 +26,7 @@ struct otherendian\n   __complex__ float cplx;\n   double d;\n }\n-#if defined __GNUC__ && (__GNUC__ >= 6)\n+#if TEST_SSO\n #if __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__\n __attribute__( ( scalar_storage_order( \"big-endian\" ) ) )\n #else"
    },
    {
      "sha": "d54c1b6973aaae95518195864daffbf3b05eafa4",
      "filename": "gdb/testsuite/gdb.base/endianity.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/gdb.base/endianity.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/gdb.base/endianity.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/endianity.exp?ref=60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
      "patch": "@@ -15,7 +15,12 @@\n \n standard_testfile .c\n \n-if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile}] } {\n+set test_sso [expr \\\n+\t\t  [supports_scalar_storage_order_attribute] \\\n+\t\t  && [supports_gnuc]]\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile} \\\n+\t  [list debug additional_flags=-DTEST_SSO=$test_sso]] } {\n   return -1\n }\n \n@@ -37,12 +42,12 @@ gdb_test \"print o.d = -23.125\" \"= -23.125\"\n gdb_test \"print o\" \"= {v = 4, w = 3, x = 2, f = 1.5, cplx = 1.25 \\\\+ 7.25i, d = -23.125}\" \\\n     \"print o after assignment\"\n \n-if { ([test_compiler_info {gcc-[0-5]-*}] || ![test_compiler_info gcc*]) } {\n+if { !$test_sso } {\n     # The rest of the testcase requires Scalar Storage Order support.\n     # This compiler does not support it, so skip the rest.\n+    unsupported \"No scalar storage order support\"\n     return -1\n }\n \n gdb_test \"x/x &o.v\" \"0x04000000\"\n gdb_test \"x/xh &o.w\" \"0x0300\"\n-"
    },
    {
      "sha": "e91023093e1412934e360266be0ec7b0b8173be3",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=60108e47b5b16b32a62eb32c5e6f929ab2cb5cf1",
      "patch": "@@ -7669,5 +7669,51 @@ gdb_caching_proc have_fuse_ld_gold {\n     return [gdb_simple_compile $me $src executable $flags]\n }\n \n+# Return 1 if compiler supports scalar_storage_order attribute, otherwise\n+# return 0.\n+gdb_caching_proc supports_scalar_storage_order_attribute {\n+    set me \"supports_scalar_storage_order_attribute\"\n+    set src {\n+\t#include <string.h>\n+\tstruct sle {\n+\t    int v;\n+\t} __attribute__((scalar_storage_order(\"little-endian\")));\n+\tstruct sbe {\n+\t    int v;\n+\t} __attribute__((scalar_storage_order(\"big-endian\")));\n+\tstruct sle sle;\n+\tstruct sbe sbe;\n+\tint main () {\n+\t    sle.v = sbe.v = 0x11223344;\n+\t    int same = memcmp (&sle, &sbe, sizeof (int)) == 0;\n+\t    int sso = !same;\n+\t    return sso;\n+\t}\n+    }\n+    if { ![gdb_simple_compile $me $src executable \"\"] } {\n+\treturn 0\n+    }\n+\n+    set result [remote_exec target $obj]\n+    set status [lindex $result 0]\n+    set output [lindex $result 1]\n+    if { $output != \"\" } {\n+\treturn 0\n+    }\n+\n+    return $status\n+}\n+\n+# Return 1 if compiler supports __GNUC__, otherwise return 0.\n+gdb_caching_proc supports_gnuc {\n+    set me \"supports_gnuc\"\n+    set src {\n+\t#ifndef __GNUC__\n+\t#error \"No gnuc\"\n+\t#endif\n+    }\n+    return [gdb_simple_compile $me $src object \"\"]\n+}\n+\n # Always load compatibility stuff.\n load_lib future.exp"
    }
  ]
}