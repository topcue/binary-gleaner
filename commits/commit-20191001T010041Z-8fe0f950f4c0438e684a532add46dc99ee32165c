{
  "sha": "8fe0f950f4c0438e684a532add46dc99ee32165c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGZlMGY5NTBmNGMwNDM4ZTY4NGE1MzJhZGQ0NmRjOTllZTMyMTY1Yw==",
  "commit": {
    "author": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-08-27T01:40:18Z"
    },
    "committer": {
      "name": "Ali Tamur",
      "email": "tamur@google.com",
      "date": "2019-10-01T01:00:41Z"
    },
    "message": "[PATCH v2 2/4] DWARF 5 support: Handle DW_FORM_strx\n\n* Handle DW_FORM_strx forms everywhere.\n\nTested with CC=/usr/bin/gcc (version 8.3.0) against master branch (also with\n-gsplit-dwarf and -gdwarf-4 flags) and there was no increase in the set of\ntests that fails.\n\nThis is part of an effort to support DWARF 5 in gdb.\n\ngdb/ChangeLog:\n\n        * dwarf2read.c (skip_one_die): Handle DW_FORM_strx forms.\n        (dwarf2_string_attr): Likewise.",
    "tree": {
      "sha": "4f1847a8eb7903015aec81e9626b915243417c50",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4f1847a8eb7903015aec81e9626b915243417c50"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8fe0f950f4c0438e684a532add46dc99ee32165c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8fe0f950f4c0438e684a532add46dc99ee32165c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8fe0f950f4c0438e684a532add46dc99ee32165c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8fe0f950f4c0438e684a532add46dc99ee32165c/comments",
  "author": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alitamur",
    "id": 59383390,
    "node_id": "MDQ6VXNlcjU5MzgzMzkw",
    "avatar_url": "https://avatars.githubusercontent.com/u/59383390?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alitamur",
    "html_url": "https://github.com/alitamur",
    "followers_url": "https://api.github.com/users/alitamur/followers",
    "following_url": "https://api.github.com/users/alitamur/following{/other_user}",
    "gists_url": "https://api.github.com/users/alitamur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alitamur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alitamur/subscriptions",
    "organizations_url": "https://api.github.com/users/alitamur/orgs",
    "repos_url": "https://api.github.com/users/alitamur/repos",
    "events_url": "https://api.github.com/users/alitamur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alitamur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af79fcc547dde358d66666c348e324e50bc2b125",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af79fcc547dde358d66666c348e324e50bc2b125",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af79fcc547dde358d66666c348e324e50bc2b125"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 15,
    "deletions": 0
  },
  "files": [
    {
      "sha": "1be7f4b2f6ec77ca32cddf8ec8bfaf928dd6fb03",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8fe0f950f4c0438e684a532add46dc99ee32165c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8fe0f950f4c0438e684a532add46dc99ee32165c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8fe0f950f4c0438e684a532add46dc99ee32165c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-09-30  Ali Tamur <tamur@google.com>\n+\n+\t* dwarf2read.c (skip_one_die): Handle DW_FORM_strx forms.\n+\t(dwarf2_string_attr): Likewise.\n+\n 2019-09-30  Ali Tamur <tamur@google.com>\n \n \t* dwarf2read.c (process_full_comp_unit): Remove whitespace at the EOL."
    },
    {
      "sha": "53e7393a7c92b2fc0136777cbae18395a7ae35ca",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8fe0f950f4c0438e684a532add46dc99ee32165c/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8fe0f950f4c0438e684a532add46dc99ee32165c/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=8fe0f950f4c0438e684a532add46dc99ee32165c",
      "patch": "@@ -9336,17 +9336,23 @@ skip_one_die (const struct die_reader_specs *reader, const gdb_byte *info_ptr,\n \tcase DW_FORM_data1:\n \tcase DW_FORM_ref1:\n \tcase DW_FORM_flag:\n+\tcase DW_FORM_strx1:\n \t  info_ptr += 1;\n \t  break;\n \tcase DW_FORM_flag_present:\n \tcase DW_FORM_implicit_const:\n \t  break;\n \tcase DW_FORM_data2:\n \tcase DW_FORM_ref2:\n+\tcase DW_FORM_strx2:\n \t  info_ptr += 2;\n \t  break;\n+\tcase DW_FORM_strx3:\n+\t  info_ptr += 3;\n+\t  break;\n \tcase DW_FORM_data4:\n \tcase DW_FORM_ref4:\n+\tcase DW_FORM_strx4:\n \t  info_ptr += 4;\n \t  break;\n \tcase DW_FORM_data8:\n@@ -20168,6 +20174,10 @@ dwarf2_string_attr (struct die_info *die, unsigned int name, struct dwarf2_cu *c\n       if (attr->form == DW_FORM_strp || attr->form == DW_FORM_line_strp\n \t  || attr->form == DW_FORM_string\n \t  || attr->form == DW_FORM_strx\n+\t  || attr->form == DW_FORM_strx1\n+\t  || attr->form == DW_FORM_strx2\n+\t  || attr->form == DW_FORM_strx3\n+\t  || attr->form == DW_FORM_strx4\n \t  || attr->form == DW_FORM_GNU_str_index\n \t  || attr->form == DW_FORM_GNU_strp_alt)\n \tstr = DW_STRING (attr);"
    }
  ]
}