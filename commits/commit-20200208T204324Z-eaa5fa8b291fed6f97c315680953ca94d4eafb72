{
  "sha": "eaa5fa8b291fed6f97c315680953ca94d4eafb72",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWFhNWZhOGIyOTFmZWQ2Zjk3YzMxNTY4MDk1M2NhOTRkNGVhZmI3Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Change dwarf2_per_objfile::type_unit_groups to htab_up\n\nThis changes dwarf2_per_objfile::type_unit_groups to be an htab_up,\nagain allowing us to move the memory used by the hash table from the\nobjfile obstack to the heap.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (allocate_type_unit_groups_table): Return\n\thtab_up.  Don't allocate on obstack.\n\t(get_type_unit_group, dwarf2_build_psymtabs_hard): Update.\n\t* dwarf2/read.h (struct dwarf2_per_objfile) <type_unit_groups>:\n\tChange type to htab_up.\n\nChange-Id: Ia045df0ff3ec30aac813da5a9a2314a607ef7ec8",
    "tree": {
      "sha": "988c21327e662e1da916c2ebd8e9463b8c2ad438",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/988c21327e662e1da916c2ebd8e9463b8c2ad438"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eaa5fa8b291fed6f97c315680953ca94d4eafb72",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eaa5fa8b291fed6f97c315680953ca94d4eafb72",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eaa5fa8b291fed6f97c315680953ca94d4eafb72",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eaa5fa8b291fed6f97c315680953ca94d4eafb72/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b0b6a9878a472438a6fe2e93be819546efc5033a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b0b6a9878a472438a6fe2e93be819546efc5033a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b0b6a9878a472438a6fe2e93be819546efc5033a"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 16,
    "deletions": 11
  },
  "files": [
    {
      "sha": "7e603f0c9f134e5283f624a3d8afaf37ad7e1832",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=eaa5fa8b291fed6f97c315680953ca94d4eafb72",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (allocate_type_unit_groups_table): Return\n+\thtab_up.  Don't allocate on obstack.\n+\t(get_type_unit_group, dwarf2_build_psymtabs_hard): Update.\n+\t* dwarf2/read.h (struct dwarf2_per_objfile) <type_unit_groups>:\n+\tChange type to htab_up.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.h (struct dwarf2_per_objfile) <signatured_types>:"
    },
    {
      "sha": "f6501c6b605998b21b50320a0112c5111e18453d",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=eaa5fa8b291fed6f97c315680953ca94d4eafb72",
      "patch": "@@ -7520,16 +7520,13 @@ eq_type_unit_group (const void *item_lhs, const void *item_rhs)\n \n /* Allocate a hash table for type unit groups.  */\n \n-static htab_t\n+static htab_up\n allocate_type_unit_groups_table (struct objfile *objfile)\n {\n-  return htab_create_alloc_ex (3,\n-\t\t\t       hash_type_unit_group,\n-\t\t\t       eq_type_unit_group,\n-\t\t\t       NULL,\n-\t\t\t       &objfile->objfile_obstack,\n-\t\t\t       hashtab_obstack_allocate,\n-\t\t\t       dummy_obstack_deallocate);\n+  return htab_up (htab_create_alloc (3,\n+\t\t\t\t     hash_type_unit_group,\n+\t\t\t\t     eq_type_unit_group,\n+\t\t\t\t     NULL, xcalloc, xfree));\n }\n \n /* Type units that don't have DW_AT_stmt_list are grouped into their own\n@@ -7625,7 +7622,7 @@ get_type_unit_group (struct dwarf2_cu *cu, const struct attribute *stmt_list)\n \n   type_unit_group_for_lookup.hash.dwo_unit = cu->dwo_unit;\n   type_unit_group_for_lookup.hash.line_sect_off = (sect_offset) line_offset;\n-  slot = htab_find_slot (dwarf2_per_objfile->type_unit_groups,\n+  slot = htab_find_slot (dwarf2_per_objfile->type_unit_groups.get (),\n \t\t\t &type_unit_group_for_lookup, INSERT);\n   if (*slot != NULL)\n     {\n@@ -8193,7 +8190,7 @@ dwarf2_build_psymtabs_hard (struct dwarf2_per_objfile *dwarf2_per_objfile)\n   /* Now that all TUs have been processed we can fill in the dependencies.  */\n   if (dwarf2_per_objfile->type_unit_groups != NULL)\n     {\n-      htab_traverse_noresize (dwarf2_per_objfile->type_unit_groups,\n+      htab_traverse_noresize (dwarf2_per_objfile->type_unit_groups.get (),\n \t\t\t      build_type_psymtab_dependencies, dwarf2_per_objfile);\n     }\n "
    },
    {
      "sha": "9e08cc1acde1db77133d8a5c93f33bfe3713a18a",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eaa5fa8b291fed6f97c315680953ca94d4eafb72/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=eaa5fa8b291fed6f97c315680953ca94d4eafb72",
      "patch": "@@ -153,7 +153,7 @@ struct dwarf2_per_objfile\n \n   /* Table of struct type_unit_group objects.\n      The hash key is the DW_AT_stmt_list value.  */\n-  htab_t type_unit_groups {};\n+  htab_up type_unit_groups;\n \n   /* A table mapping .debug_types signatures to its signatured_type entry.\n      This is NULL if the .debug_types section hasn't been read in yet.  */"
    }
  ]
}