{
  "sha": "58de646be2108bbe30facd7a294fc45df7b46065",
  "node_id": "C_kwDOANOeidoAKDU4ZGU2NDZiZTIxMDhiYmUzMGZhY2Q3YTI5NGZjNDVkZjdiNDYwNjU",
  "commit": {
    "author": {
      "name": "Martin Storsj?",
      "email": "martin@martin.st",
      "date": "2022-01-22T14:31:22Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2022-01-22T14:31:22Z"
    },
    "message": "Allow inferring tmp_prefix from the dll name from a def file.",
    "tree": {
      "sha": "825726c0453de13a09cf6462dd497fbf20125f68",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/825726c0453de13a09cf6462dd497fbf20125f68"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/58de646be2108bbe30facd7a294fc45df7b46065",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58de646be2108bbe30facd7a294fc45df7b46065",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/58de646be2108bbe30facd7a294fc45df7b46065",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58de646be2108bbe30facd7a294fc45df7b46065/comments",
  "author": {
    "login": "mstorsjo",
    "id": 69727,
    "node_id": "MDQ6VXNlcjY5NzI3",
    "avatar_url": "https://avatars.githubusercontent.com/u/69727?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mstorsjo",
    "html_url": "https://github.com/mstorsjo",
    "followers_url": "https://api.github.com/users/mstorsjo/followers",
    "following_url": "https://api.github.com/users/mstorsjo/following{/other_user}",
    "gists_url": "https://api.github.com/users/mstorsjo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mstorsjo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mstorsjo/subscriptions",
    "organizations_url": "https://api.github.com/users/mstorsjo/orgs",
    "repos_url": "https://api.github.com/users/mstorsjo/repos",
    "events_url": "https://api.github.com/users/mstorsjo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mstorsjo/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc5e40736d994e53df7d550b7d705f6dcc15169d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc5e40736d994e53df7d550b7d705f6dcc15169d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc5e40736d994e53df7d550b7d705f6dcc15169d"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 22,
    "deletions": 17
  },
  "files": [
    {
      "sha": "09f392091e82c809e68bd258a07a29f5d2ef87ef",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58de646be2108bbe30facd7a294fc45df7b46065/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58de646be2108bbe30facd7a294fc45df7b46065/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=58de646be2108bbe30facd7a294fc45df7b46065",
      "patch": "@@ -1,3 +1,8 @@\n+2022-01-22  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* dlltool.c (main): Allow inferring tmp_prefix from the dll name\n+\tfrom a def file.\n+\n 2022-01-22  Nick Clifton  <nickc@redhat.com>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "d95bf3f5470b999fa3b30bc887791859f48d81d1",
      "filename": "binutils/dlltool.c",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/58de646be2108bbe30facd7a294fc45df7b46065/binutils/dlltool.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/58de646be2108bbe30facd7a294fc45df7b46065/binutils/dlltool.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dlltool.c?ref=58de646be2108bbe30facd7a294fc45df7b46065",
      "patch": "@@ -3930,23 +3930,6 @@ main (int ac, char **av)\n \t}\n     }\n \n-  if (tmp_prefix == NULL)\n-    {\n-      /* If possible use a deterministic prefix.  */\n-      if (dll_name)\n-        {\n-          tmp_prefix = xmalloc (strlen (dll_name) + 2);\n-          sprintf (tmp_prefix, \"%s_\", dll_name);\n-          for (i = 0; tmp_prefix[i]; i++)\n-            if (!ISALNUM (tmp_prefix[i]))\n-              tmp_prefix[i] = '_';\n-        }\n-      else\n-        {\n-          tmp_prefix = prefix_encode (\"d\", getpid ());\n-        }\n-    }\n-\n   for (i = 0; mtable[i].type; i++)\n     if (strcmp (mtable[i].type, mname) == 0)\n       break;\n@@ -4006,6 +3989,23 @@ main (int ac, char **av)\n       optind++;\n     }\n \n+  if (tmp_prefix == NULL)\n+    {\n+      /* If possible use a deterministic prefix.  */\n+      if (dll_name)\n+        {\n+          tmp_prefix = xmalloc (strlen (dll_name) + 2);\n+          sprintf (tmp_prefix, \"%s_\", dll_name);\n+          for (i = 0; tmp_prefix[i]; i++)\n+            if (!ISALNUM (tmp_prefix[i]))\n+              tmp_prefix[i] = '_';\n+        }\n+      else\n+        {\n+          tmp_prefix = prefix_encode (\"d\", getpid ());\n+        }\n+    }\n+\n   mangle_defs ();\n \n   if (exp_name)"
    }
  ]
}