{
  "sha": "238eb706f902da8afef1d5e3c9fdfeecf688bac3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjM4ZWI3MDZmOTAyZGE4YWZlZjFkNWUzYzlmZGZlZWNmNjg4YmFjMw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-16T20:03:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-06-25T13:48:30Z"
    },
    "message": "Remove struct tui_data_info\n\nLike the previous two patches, this removes struct tui_data_info in\nfavor of inlining its contents into tui_data_window.  This was the\nlast member of the tui_win_info detail union, so that is removed.\n\ngdb/ChangeLog\n2019-06-25  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-windata.c (tui_display_all_data)\n\t(tui_display_data_from_line, tui_display_data_from)\n\t(tui_check_data_values, tui_data_window::do_scroll_vertical):\n\tUpdate.\n\t* tui/tui-regs.c (tui_last_regs_line_no)\n\t(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)\n\t(tui_show_registers, tui_show_register_group)\n\t(tui_display_registers_from, tui_display_reg_element_at_line)\n\t(tui_display_registers_from_line, tui_check_register_values)\n\t(tui_reg_next, tui_reg_prev): Update.\n\t* tui/tui-layout.c (tui_set_layout, show_data): Update.\n\t* tui/tui-data.h (struct tui_data_info): Remove.  Move contents to\n\ttui_data_window.\n\t(struct tui_win_info) <detail>: Remove.  Add new fields from\n\ttui_data_info.\n\t(TUI_DATA_WIN): Add cast.\n\t* tui/tui-data.c (tui_data_window::clear_detail, tui_data_window)\n\t(~tui_data_window): Simplify.",
    "tree": {
      "sha": "d36be41771293a95bd1489fc81ba0d205df0b303",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d36be41771293a95bd1489fc81ba0d205df0b303"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/238eb706f902da8afef1d5e3c9fdfeecf688bac3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/238eb706f902da8afef1d5e3c9fdfeecf688bac3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/238eb706f902da8afef1d5e3c9fdfeecf688bac3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/238eb706f902da8afef1d5e3c9fdfeecf688bac3/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "81491aa0968e5bcab0388914f909ccb12e084e32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/81491aa0968e5bcab0388914f909ccb12e084e32",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/81491aa0968e5bcab0388914f909ccb12e084e32"
    }
  ],
  "stats": {
    "total": 234,
    "additions": 112,
    "deletions": 122
  },
  "files": [
    {
      "sha": "23a521dde84106ffa066aa0cd1d799c1f2b1db5b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -1,3 +1,24 @@\n+2019-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-windata.c (tui_display_all_data)\n+\t(tui_display_data_from_line, tui_display_data_from)\n+\t(tui_check_data_values, tui_data_window::do_scroll_vertical):\n+\tUpdate.\n+\t* tui/tui-regs.c (tui_last_regs_line_no)\n+\t(tui_line_from_reg_element_no, tui_first_reg_element_no_inline)\n+\t(tui_show_registers, tui_show_register_group)\n+\t(tui_display_registers_from, tui_display_reg_element_at_line)\n+\t(tui_display_registers_from_line, tui_check_register_values)\n+\t(tui_reg_next, tui_reg_prev): Update.\n+\t* tui/tui-layout.c (tui_set_layout, show_data): Update.\n+\t* tui/tui-data.h (struct tui_data_info): Remove.  Move contents to\n+\ttui_data_window.\n+\t(struct tui_win_info) <detail>: Remove.  Add new fields from\n+\ttui_data_info.\n+\t(TUI_DATA_WIN): Add cast.\n+\t* tui/tui-data.c (tui_data_window::clear_detail, tui_data_window)\n+\t(~tui_data_window): Simplify.\n+\n 2019-06-25  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.c (show_source_disasm_command)"
    },
    {
      "sha": "48332fa4b75c70dcfebe653c5973b9f513ff5e9d",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 21,
      "deletions": 23,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -190,12 +190,12 @@ tui_cmd_window::clear_detail ()\n void\n tui_data_window::clear_detail ()\n {\n-  detail.data_display_info.data_content = NULL;\n-  detail.data_display_info.data_content_count = 0;\n-  detail.data_display_info.regs_content = NULL;\n-  detail.data_display_info.regs_content_count = 0;\n-  detail.data_display_info.regs_column_count = 1;\n-  detail.data_display_info.display_regs = FALSE;\n+  data_content = NULL;\n+  data_content_count = 0;\n+  regs_content = NULL;\n+  regs_content_count = 0;\n+  regs_column_count = 1;\n+  display_regs = FALSE;\n }\n \n /* Accessor for the source execution info ptr.  */\n@@ -498,13 +498,13 @@ tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n tui_data_window::tui_data_window ()\n   : tui_win_info (DATA_WIN)\n {\n-  detail.data_display_info.data_content = (tui_win_content) NULL;\n-  detail.data_display_info.data_content_count = 0;\n-  detail.data_display_info.regs_content = (tui_win_content) NULL;\n-  detail.data_display_info.regs_content_count = 0;\n-  detail.data_display_info.regs_column_count = 1;\n-  detail.data_display_info.display_regs = FALSE;\n-  detail.data_display_info.current_group = 0;\n+  data_content = NULL;\n+  data_content_count = 0;\n+  regs_content = NULL;\n+  regs_content_count = 0;\n+  regs_column_count = 1;\n+  display_regs = FALSE;\n+  current_group = 0;\n }\n \n tui_cmd_window::tui_cmd_window ()\n@@ -614,16 +614,14 @@ tui_data_window::~tui_data_window ()\n {\n   if (generic.content != NULL)\n     {\n-      tui_free_data_content (detail.data_display_info.regs_content,\n-\t\t\t     detail.data_display_info.regs_content_count);\n-      detail.data_display_info.regs_content = NULL;\n-      detail.data_display_info.regs_content_count = 0;\n-      tui_free_data_content (detail.data_display_info.data_content,\n-\t\t\t     detail.data_display_info.data_content_count);\n-      detail.data_display_info.data_content = NULL;\n-      detail.data_display_info.data_content_count = 0;\n-      detail.data_display_info.regs_column_count = 1;\n-      detail.data_display_info.display_regs = FALSE;\n+      tui_free_data_content (regs_content, regs_content_count);\n+      regs_content = NULL;\n+      regs_content_count = 0;\n+      tui_free_data_content (data_content, data_content_count);\n+      data_content = NULL;\n+      data_content_count = 0;\n+      regs_column_count = 1;\n+      display_regs = FALSE;\n       generic.content = NULL;\n       generic.content_size = 0;\n     }"
    },
    {
      "sha": "0acc5abd154a888f0930f7fbbf3307e0c2e4fcac",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 9,
      "deletions": 20,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -224,20 +224,6 @@ struct tui_win_element\n   union tui_which_element which_element;\n };\n \n-/* This struct defines the specific information about a data display\n-   window.  */\n-struct tui_data_info\n-{\n-  tui_win_content data_content;\t/* Start of data display content.  */\n-  int data_content_count;\n-  tui_win_content regs_content;\t/* Start of regs display content.  */\n-  int regs_content_count;\n-  int regs_column_count;\n-  int display_regs;\t\t/* Should regs be displayed at all?  */\n-  struct reggroup *current_group;\n-};\n-\n-\n /* This defines information about each logical window.  */\n struct tui_win_info\n {\n@@ -278,11 +264,6 @@ struct tui_win_info\n   void right_scroll (int num_to_scroll);\n \n   struct tui_gen_win_info generic;\t/* General window information.  */\n-  union\n-  {\n-    struct tui_data_info data_display_info;\n-  }\n-  detail;\n \n   /* Can this window ever be highlighted?  */\n   int can_highlight = 0;\n@@ -371,6 +352,14 @@ struct tui_data_window : public tui_win_info\n \n   void clear_detail () override;\n \n+  tui_win_content data_content;\t/* Start of data display content.  */\n+  int data_content_count;\n+  tui_win_content regs_content;\t/* Start of regs display content.  */\n+  int regs_content_count;\n+  int regs_column_count;\n+  int display_regs;\t\t/* Should regs be displayed at all?  */\n+  struct reggroup *current_group;\n+\n protected:\n \n   void do_scroll_vertical (enum tui_scroll_direction,\n@@ -414,7 +403,7 @@ extern struct tui_win_info *tui_win_list[MAX_MAJOR_WINDOWS];\n \n #define TUI_SRC_WIN     ((tui_source_window_base *) tui_win_list[SRC_WIN])\n #define TUI_DISASM_WIN\t((tui_source_window_base *) tui_win_list[DISASSEM_WIN])\n-#define TUI_DATA_WIN    tui_win_list[DATA_WIN]\n+#define TUI_DATA_WIN    ((tui_data_window *) tui_win_list[DATA_WIN])\n #define TUI_CMD_WIN     ((tui_cmd_window *) tui_win_list[CMD_WIN])\n \n /* Data Manipulation Functions.  */"
    },
    {
      "sha": "72ec924f72c5cc41061a1fae03d10b16ceed1518",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -227,11 +227,7 @@ tui_set_layout (enum tui_layout_type layout_type)\n \t  tui_update_source_windows_with_addr (gdbarch, addr);\n \n \t  if (regs_populate)\n-\t    {\n-\t      struct reggroup *group =\n-\t\tTUI_DATA_WIN->detail.data_display_info.current_group;\n-\t      tui_show_registers (group);\n-\t    }\n+\t    tui_show_registers (TUI_DATA_WIN->current_group);\n \t}\n     }\n   else\n@@ -726,7 +722,7 @@ show_data (enum tui_layout_type new_layout)\n   src_height = total_height - data_height;\n   tui_make_all_invisible ();\n   tui_make_invisible (locator);\n-  make_data_window (&TUI_DATA_WIN, data_height, 0);\n+  make_data_window (&tui_win_list[DATA_WIN], data_height, 0);\n   TUI_DATA_WIN->can_highlight = TRUE;\n   if (new_layout == SRC_DATA_COMMAND)\n     win_type = SRC_WIN;"
    },
    {
      "sha": "451bcdfb364eedd59ea717fc567e0c9262126576",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 52,
      "deletions": 63,
      "changes": 115,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -72,12 +72,11 @@ tui_last_regs_line_no (void)\n {\n   int num_lines = (-1);\n \n-  if (TUI_DATA_WIN->detail.data_display_info.regs_content_count > 0)\n+  if (TUI_DATA_WIN->regs_content_count > 0)\n     {\n-      num_lines = (TUI_DATA_WIN->detail.data_display_info.regs_content_count /\n-\t\t  TUI_DATA_WIN->detail.data_display_info.regs_column_count);\n-      if (TUI_DATA_WIN->detail.data_display_info.regs_content_count %\n-\t  TUI_DATA_WIN->detail.data_display_info.regs_column_count)\n+      num_lines = (TUI_DATA_WIN->regs_content_count\n+\t\t   / TUI_DATA_WIN->regs_column_count);\n+      if (TUI_DATA_WIN->regs_content_count % TUI_DATA_WIN->regs_column_count)\n \tnum_lines++;\n     }\n   return num_lines;\n@@ -90,15 +89,14 @@ tui_last_regs_line_no (void)\n int\n tui_line_from_reg_element_no (int element_no)\n {\n-  if (element_no < TUI_DATA_WIN->detail.data_display_info.regs_content_count)\n+  if (element_no < TUI_DATA_WIN->regs_content_count)\n     {\n       int i, line = (-1);\n \n       i = 1;\n       while (line == (-1))\n \t{\n-\t  if (element_no <\n-\t      (TUI_DATA_WIN->detail.data_display_info.regs_column_count * i))\n+\t  if (element_no < TUI_DATA_WIN->regs_column_count * i)\n \t    line = i - 1;\n \t  else\n \t    i++;\n@@ -116,11 +114,10 @@ tui_line_from_reg_element_no (int element_no)\n int\n tui_first_reg_element_no_inline (int line_no)\n {\n-  if ((line_no * TUI_DATA_WIN->detail.data_display_info.regs_column_count)\n-      <= TUI_DATA_WIN->detail.data_display_info.regs_content_count)\n-    return ((line_no + 1) *\n-\t    TUI_DATA_WIN->detail.data_display_info.regs_column_count) -\n-      TUI_DATA_WIN->detail.data_display_info.regs_column_count;\n+  if ((line_no * TUI_DATA_WIN->regs_column_count)\n+      <= TUI_DATA_WIN->regs_content_count)\n+    return (((line_no + 1) * TUI_DATA_WIN->regs_column_count) \n+\t    - TUI_DATA_WIN->regs_column_count);\n   else\n     return (-1);\n }\n@@ -132,7 +129,6 @@ void\n tui_show_registers (struct reggroup *group)\n {\n   enum tui_status ret = TUI_FAILURE;\n-  struct tui_data_info *display_info;\n \n   /* Make sure the curses mode is enabled.  */\n   tui_enable ();\n@@ -142,40 +138,39 @@ tui_show_registers (struct reggroup *group)\n   if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->generic.is_visible)\n     tui_set_layout_by_name (DATA_NAME);\n \n-  display_info = &TUI_DATA_WIN->detail.data_display_info;\n   if (group == 0)\n     group = general_reggroup;\n \n   /* Say that registers should be displayed, even if there is a\n      problem.  */\n-  display_info->display_regs = TRUE;\n+  TUI_DATA_WIN->display_regs = TRUE;\n \n   if (target_has_registers && target_has_stack && target_has_memory)\n     {\n       ret = tui_show_register_group (group, get_selected_frame (NULL),\n-                                     group == display_info->current_group);\n+                                     group == TUI_DATA_WIN->current_group);\n     }\n   if (ret == TUI_FAILURE)\n     {\n-      display_info->current_group = 0;\n+      TUI_DATA_WIN->current_group = 0;\n       tui_erase_data_content (NO_REGS_STRING);\n     }\n   else\n     {\n       int i;\n \n       /* Clear all notation of changed values.  */\n-      for (i = 0; i < display_info->regs_content_count; i++)\n+      for (i = 0; i < TUI_DATA_WIN->regs_content_count; i++)\n \t{\n \t  struct tui_gen_win_info *data_item_win;\n           struct tui_win_element *win;\n \n-\t  data_item_win = &display_info->regs_content[i]\n+\t  data_item_win = &TUI_DATA_WIN->regs_content[i]\n             ->which_element.data_window;\n           win = data_item_win->content[0];\n           win->which_element.data.highlight = FALSE;\n \t}\n-      display_info->current_group = group;\n+      TUI_DATA_WIN->current_group = group;\n       tui_display_all_data ();\n     }\n }\n@@ -196,7 +191,6 @@ tui_show_register_group (struct reggroup *group,\n   int allocated_here = FALSE;\n   int regnum, pos;\n   char title[80];\n-  struct tui_data_info *display_info = &TUI_DATA_WIN->detail.data_display_info;\n \n   /* Make a new title showing which group we display.  */\n   snprintf (title, sizeof (title) - 1, \"Register group: %s\",\n@@ -223,29 +217,29 @@ tui_show_register_group (struct reggroup *group,\n       nr_regs++;\n     }\n \n-  if (display_info->regs_content_count > 0 && !refresh_values_only)\n+  if (TUI_DATA_WIN->regs_content_count > 0 && !refresh_values_only)\n     {\n-      tui_free_data_content (display_info->regs_content,\n-                             display_info->regs_content_count);\n-      display_info->regs_content_count = 0;\n+      tui_free_data_content (TUI_DATA_WIN->regs_content,\n+                             TUI_DATA_WIN->regs_content_count);\n+      TUI_DATA_WIN->regs_content_count = 0;\n     }\n \n-  if (display_info->regs_content_count <= 0)\n+  if (TUI_DATA_WIN->regs_content_count <= 0)\n     {\n-      display_info->regs_content = tui_alloc_content (nr_regs, DATA_WIN);\n+      TUI_DATA_WIN->regs_content = tui_alloc_content (nr_regs, DATA_WIN);\n       allocated_here = TRUE;\n       refresh_values_only = FALSE;\n     }\n \n-  if (display_info->regs_content != NULL)\n+  if (TUI_DATA_WIN->regs_content != NULL)\n     {\n       if (!refresh_values_only || allocated_here)\n \t{\n \t  TUI_DATA_WIN->generic.content = NULL;\n \t  TUI_DATA_WIN->generic.content_size = 0;\n \t  tui_add_content_elements (&TUI_DATA_WIN->generic, nr_regs);\n-\t  display_info->regs_content = TUI_DATA_WIN->generic.content;\n-\t  display_info->regs_content_count = nr_regs;\n+\t  TUI_DATA_WIN->regs_content = TUI_DATA_WIN->generic.content;\n+\t  TUI_DATA_WIN->regs_content_count = nr_regs;\n \t}\n \n       /* Now set the register names and values.  */\n@@ -267,7 +261,7 @@ tui_show_register_group (struct reggroup *group,\n \t    continue;\n \n \t  data_item_win =\n-            &display_info->regs_content[pos]->which_element.data_window;\n+            &TUI_DATA_WIN->regs_content[pos]->which_element.data_window;\n           data = &data_item_win->content[0]->which_element.data;\n           if (data)\n             {\n@@ -283,7 +277,7 @@ tui_show_register_group (struct reggroup *group,\n \t}\n \n       TUI_DATA_WIN->generic.content_size =\n-\tdisplay_info->regs_content_count + display_info->data_content_count;\n+\tTUI_DATA_WIN->regs_content_count + TUI_DATA_WIN->data_content_count;\n       ret = TUI_SUCCESS;\n     }\n \n@@ -297,24 +291,22 @@ tui_show_register_group (struct reggroup *group,\n void\n tui_display_registers_from (int start_element_no)\n {\n-  struct tui_data_info *display_info = &TUI_DATA_WIN->detail.data_display_info;\n-\n-  if (display_info->regs_content != NULL\n-      && display_info->regs_content_count > 0)\n+  if (TUI_DATA_WIN->regs_content != NULL\n+      && TUI_DATA_WIN->regs_content_count > 0)\n     {\n       int i = start_element_no;\n       int j, item_win_width, cur_y;\n \n       int max_len = 0;\n-      for (i = 0; i < display_info->regs_content_count; i++)\n+      for (i = 0; i < TUI_DATA_WIN->regs_content_count; i++)\n         {\n           struct tui_data_element *data;\n           struct tui_gen_win_info *data_item_win;\n           char *p;\n           int len;\n \n           data_item_win\n-\t    = &display_info->regs_content[i]->which_element.data_window;\n+\t    = &TUI_DATA_WIN->regs_content[i]->which_element.data_window;\n           data = &data_item_win->content[0]->which_element.data;\n           len = 0;\n           p = data->content;\n@@ -333,29 +325,29 @@ tui_display_registers_from (int start_element_no)\n       item_win_width = max_len + 1;\n       i = start_element_no;\n \n-      display_info->regs_column_count =\n+      TUI_DATA_WIN->regs_column_count =\n         (TUI_DATA_WIN->generic.width - 2) / item_win_width;\n-      if (display_info->regs_column_count == 0)\n-        display_info->regs_column_count = 1;\n+      if (TUI_DATA_WIN->regs_column_count == 0)\n+        TUI_DATA_WIN->regs_column_count = 1;\n       item_win_width =\n-        (TUI_DATA_WIN->generic.width - 2) / display_info->regs_column_count;\n+        (TUI_DATA_WIN->generic.width - 2) / TUI_DATA_WIN->regs_column_count;\n \n       /* Now create each data \"sub\" window, and write the display into\n \t it.  */\n       cur_y = 1;\n-      while (i < display_info->regs_content_count \n+      while (i < TUI_DATA_WIN->regs_content_count \n \t     && cur_y <= TUI_DATA_WIN->generic.viewport_height)\n \t{\n \t  for (j = 0;\n-\t       j < display_info->regs_column_count\n-\t\t && i < display_info->regs_content_count;\n+\t       j < TUI_DATA_WIN->regs_column_count\n+\t\t && i < TUI_DATA_WIN->regs_content_count;\n \t       j++)\n \t    {\n \t      struct tui_gen_win_info *data_item_win;\n \t      struct tui_data_element *data_element_ptr;\n \n \t      /* Create the window if necessary.  */\n-\t      data_item_win = &display_info->regs_content[i]\n+\t      data_item_win = &TUI_DATA_WIN->regs_content[i]\n                 ->which_element.data_window;\n \t      data_element_ptr = &data_item_win->content[0]->which_element.data;\n               if (data_item_win->handle != NULL\n@@ -398,8 +390,8 @@ static void\n tui_display_reg_element_at_line (int start_element_no,\n \t\t\t\t int start_line_no)\n {\n-  if (TUI_DATA_WIN->detail.data_display_info.regs_content != NULL\n-      && TUI_DATA_WIN->detail.data_display_info.regs_content_count > 0)\n+  if (TUI_DATA_WIN->regs_content != NULL\n+      && TUI_DATA_WIN->regs_content_count > 0)\n     {\n       int element_no = start_element_no;\n \n@@ -417,7 +409,7 @@ tui_display_reg_element_at_line (int start_element_no,\n \t     the element_no causes us to scroll past the end of the\n \t     registers, adjust what element to really start the\n \t     display at.  */\n-\t  if (TUI_DATA_WIN->detail.data_display_info.data_content_count <= 0\n+\t  if (TUI_DATA_WIN->data_content_count <= 0\n \t      && start_line_no > first_line_on_last_page)\n \t    element_no\n \t      = tui_first_reg_element_no_inline (first_line_on_last_page);\n@@ -435,7 +427,7 @@ int\n tui_display_registers_from_line (int line_no, \n \t\t\t\t int force_display)\n {\n-  if (TUI_DATA_WIN->detail.data_display_info.regs_content_count > 0)\n+  if (TUI_DATA_WIN->regs_content_count > 0)\n     {\n       int line, element_no;\n \n@@ -448,7 +440,7 @@ tui_display_registers_from_line (int line_no,\n \t  if (line_no >= tui_last_regs_line_no ())\n \t    {\n \t      if ((line = tui_line_from_reg_element_no (\n-\t\t TUI_DATA_WIN->detail.data_display_info.regs_content_count - 1)) < 0)\n+\t\t TUI_DATA_WIN->regs_content_count - 1)) < 0)\n \t\tline = 0;\n \t    }\n \t  else\n@@ -459,7 +451,7 @@ tui_display_registers_from_line (int line_no,\n \n       element_no = tui_first_reg_element_no_inline (line);\n       if (element_no\n-\t  < TUI_DATA_WIN->detail.data_display_info.regs_content_count)\n+\t  < TUI_DATA_WIN->regs_content_count)\n \ttui_display_reg_element_at_line (element_no, line);\n       else\n \tline = (-1);\n@@ -480,23 +472,20 @@ tui_check_register_values (struct frame_info *frame)\n   if (TUI_DATA_WIN != NULL\n       && TUI_DATA_WIN->generic.is_visible)\n     {\n-      struct tui_data_info *display_info\n-        = &TUI_DATA_WIN->detail.data_display_info;\n-\n-      if (display_info->regs_content_count <= 0 \n-\t  && display_info->display_regs)\n-\ttui_show_registers (display_info->current_group);\n+      if (TUI_DATA_WIN->regs_content_count <= 0 \n+\t  && TUI_DATA_WIN->display_regs)\n+\ttui_show_registers (TUI_DATA_WIN->current_group);\n       else\n \t{\n \t  int i;\n \n-\t  for (i = 0; (i < display_info->regs_content_count); i++)\n+\t  for (i = 0; (i < TUI_DATA_WIN->regs_content_count); i++)\n \t    {\n \t      struct tui_data_element *data;\n \t      struct tui_gen_win_info *data_item_win_ptr;\n \t      int was_hilighted;\n \n-\t      data_item_win_ptr = &display_info->regs_content[i]->\n+\t      data_item_win_ptr = &TUI_DATA_WIN->regs_content[i]->\n                 which_element.data_window;\n \t      data = &data_item_win_ptr->content[0]->which_element.data;\n \t      was_hilighted = data->highlight;\n@@ -560,7 +549,7 @@ tui_reg_next (struct gdbarch *gdbarch)\n \n   if (TUI_DATA_WIN != NULL)\n     {\n-      group = TUI_DATA_WIN->detail.data_display_info.current_group;\n+      group = TUI_DATA_WIN->current_group;\n       group = reggroup_next (gdbarch, group);\n       if (group == NULL)\n         group = reggroup_next (gdbarch, NULL);\n@@ -579,7 +568,7 @@ tui_reg_prev (struct gdbarch *gdbarch)\n \n   if (TUI_DATA_WIN != NULL)\n     {\n-      group = TUI_DATA_WIN->detail.data_display_info.current_group;\n+      group = TUI_DATA_WIN->current_group;\n       group = reggroup_prev (gdbarch, group);\n       if (group == NULL)\n \tgroup = reggroup_prev (gdbarch, NULL);"
    },
    {
      "sha": "a0f20c309e1eee006f7f5d787b28c42d2fcbde73",
      "filename": "gdb/tui/tui-windata.c",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-windata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/238eb706f902da8afef1d5e3c9fdfeecf688bac3/gdb/tui/tui-windata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.c?ref=238eb706f902da8afef1d5e3c9fdfeecf688bac3",
      "patch": "@@ -121,8 +121,8 @@ tui_display_all_data (void)\n       tui_display_registers_from (0);\n \n       /* Then display the other data.  */\n-      if (TUI_DATA_WIN->detail.data_display_info.data_content != NULL\n-\t  && TUI_DATA_WIN->detail.data_display_info.data_content_count > 0)\n+      if (TUI_DATA_WIN->data_content != NULL\n+\t  && TUI_DATA_WIN->data_content_count > 0)\n \t{\n \t}\n     }\n@@ -143,7 +143,7 @@ tui_display_data_from_line (int line_no)\n \n   /* There is no general data, force regs to display (if there are\n      any).  */\n-  if (TUI_DATA_WIN->detail.data_display_info.data_content_count <= 0)\n+  if (TUI_DATA_WIN->data_content_count <= 0)\n     tui_display_registers_from_line (_line_no, TRUE);\n   else\n     {\n@@ -175,7 +175,7 @@ tui_display_data_from (int element_no, int reuse_windows)\n {\n   int first_line = (-1);\n \n-  if (element_no < TUI_DATA_WIN->detail.data_display_info.regs_content_count)\n+  if (element_no < TUI_DATA_WIN->regs_content_count)\n     first_line = tui_line_from_reg_element_no (element_no);\n   else\n     { /* Calculate the first_line from the element number.  */\n@@ -218,16 +218,14 @@ tui_check_data_values (struct frame_info *frame)\n     {\n       int i;\n \n-      for (i = 0; \n-\t   TUI_DATA_WIN->detail.data_display_info.data_content_count; \n-\t   i++)\n+      for (i = 0; TUI_DATA_WIN->data_content_count; i++)\n \t{\n #ifdef LATER\n \t  tui_data_element_ptr data_element_ptr;\n \t  struct tui_gen_win_info *data_item_win_ptr;\n \t  Opaque new_value;\n \n-\t  data_item_ptr = &TUI_DATA_WIN->detail.data_display_info.\n+\t  data_item_ptr = &TUI_DATA_WIN->\n \t    data_content[i]->which_element.data_window;\n \t  data_element_ptr = &((tui_win_content)\n \t\t\t       data_item_win_ptr->content)[0]->which_element.data;\n@@ -252,8 +250,7 @@ tui_data_window::do_scroll_vertical\n   int first_line = (-1);\n \n   first_element_no = tui_first_data_item_displayed ();\n-  if (first_element_no \n-      < detail.data_display_info.regs_content_count)\n+  if (first_element_no < regs_content_count)\n     first_line = tui_line_from_reg_element_no (first_element_no);\n   else\n     { /* Calculate the first line from the element number which is in"
    }
  ]
}