{
  "sha": "6015a0674901be2c3fd24867e1a610d2abf8c1a0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjAxNWEwNjc0OTAxYmUyYzNmZDI0ODY3ZTFhNjEwZDJhYmY4YzFhMA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-04T06:40:38Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-05-04T06:40:38Z"
    },
    "message": "[gdb/testsuite] Fix gdb.base/async.exp with gcc-8\n\nWhen running test-case gdb.base/async.exp with gcc-8, we run into:\n...\nFAIL: gdb.base/async.exp: stepi&\n...\n\nThe problem is that with gcc-8, the instruction address is no longer printed:\n...\n stepi&\n-(gdb) 0x00000000004004b2       9        x = 5; x = 5; x = 5;\n+(gdb) 9         x = 5; x = 5; x = 5;\n completed.\n-PASS: gdb.base/async.exp: stepi&\n+FAIL: gdb.base/async.exp: stepi&\n...\n\nThis is due to the fact that gcc-8 contains more precise line info, making the\naddress being stepped to a \"recommended breakpoint location\", and consequently\ngdb doesn't print the address prefix anymore.\n\nGiven that:\n- we step through statements on the same line, and\n- there's no addres prefix anymore,\nthis gives the impression of lack of progress, which could be improved upon,\nfiled as enhancement PR25911 - \"Show column when stepping through line\".\n\nFix the FAIL by checking in the test-case whether addresses are at\n\"recommended breakpoint location\" or not.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2020-05-04  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/async.exp: Check whether instruction addresses are a\n\t\"recommended breakpoint location\".",
    "tree": {
      "sha": "831469c3b59d364fe9687b8a04452ceee3fa767b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/831469c3b59d364fe9687b8a04452ceee3fa767b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6015a0674901be2c3fd24867e1a610d2abf8c1a0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6015a0674901be2c3fd24867e1a610d2abf8c1a0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6015a0674901be2c3fd24867e1a610d2abf8c1a0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6015a0674901be2c3fd24867e1a610d2abf8c1a0/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c7b8e9b92696f38ff29efeeb12eb166994c0a23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9c7b8e9b92696f38ff29efeeb12eb166994c0a23"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 53,
    "deletions": 6
  },
  "files": [
    {
      "sha": "409f44ca9d0d527086de4bf886475a59c4d829e7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6015a0674901be2c3fd24867e1a610d2abf8c1a0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6015a0674901be2c3fd24867e1a610d2abf8c1a0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=6015a0674901be2c3fd24867e1a610d2abf8c1a0",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-04  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/async.exp: Check whether instruction addresses are a\n+\t\"recommended breakpoint location\".\n+\n 2020-05-03  Tom Tromey  <tom@tromey.com>\n \n \t* gdb.base/sepdebug.exp: Remove \"catch\" test."
    },
    {
      "sha": "bf124ca56a9980c265c5f4fee6778fdeb91c0864",
      "filename": "gdb/testsuite/gdb.base/async.exp",
      "status": "modified",
      "additions": 48,
      "deletions": 6,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6015a0674901be2c3fd24867e1a610d2abf8c1a0/gdb/testsuite/gdb.base/async.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6015a0674901be2c3fd24867e1a610d2abf8c1a0/gdb/testsuite/gdb.base/async.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/async.exp?ref=6015a0674901be2c3fd24867e1a610d2abf8c1a0",
      "patch": "@@ -79,7 +79,16 @@ test_background \"step&\" \"\" \".*y = foo \\\\(\\\\).*\" \"step& #1\"\n \n test_background \"step&\" \"\" \" foo \\\\(\\\\) at .*async.c.*x = 5.*\" \"step& #2\"\n \n-test_background \"stepi&\" \"\" \".*$hex.*x = 5.*\"\n+set is_stmt [list]\n+gdb_test_multiple \"maint info line-table async.c\" \"\" {\n+    -re \"\\r\\n$decimal\\[ \\t\\]+$decimal\\[ \\t\\]+($hex)\\[ \\t\\]+Y\\[^\\r\\n\\]*\" {\n+\tlappend is_stmt $expect_out(1,string)\n+\texp_continue\n+    }\n+    -re -wrap \"\" {\n+\tpass $gdb_test_name\n+    }\n+}\n \n # Get the next instruction address.\n set next_insn_addr \"\"\n@@ -90,13 +99,46 @@ gdb_test_multiple {x/2i $pc} \"$test\" {\n \tpass \"$test\"\n     }\n }\n+set next_insn_is_stmt \\\n+    [expr [lsearch -regexp $is_stmt 0x0*$next_insn_addr] != -1]\n+\n+if { $next_insn_is_stmt } {\n+    set prefix \"\"\n+} else {\n+    # The current PC is printed out.\n+    set prefix \"0x0*$next_insn_addr.*\"\n+}\n+test_background \"stepi&\" \"\" \".*$prefix x = 5; .*\"\n \n-# We nexti into the same source line.  The current PC is printed out.\n-test_background \"nexti&\" \"\" \".* 0x0*$next_insn_addr.* x = 5; .*\"\n-\n-# PC is in the middle of a source line, so the PC address is displayed.\n+# Get the next instruction address.\n+set next_insn_addr \"\"\n+set test \"get next insn\"\n+gdb_test_multiple {x/2i $pc} \"$test\" {\n+    -re \"=> $hex .* 0x(\\[0-9a-f\\]*) .*$gdb_prompt $\" {\n+\tset next_insn_addr $expect_out(1,string)\n+\tpass \"$test\"\n+    }\n+}\n+set next_insn_is_stmt \\\n+    [expr [lsearch -regexp $is_stmt 0x0*$next_insn_addr] != -1]\n+\n+if { $next_insn_is_stmt } {\n+    set prefix \"\"\n+} else {\n+    # The current PC is printed out.\n+    set prefix \"0x0*$next_insn_addr.*\"\n+}\n+# We nexti into the same source line.\n+test_background \"nexti&\" \"\" \".*$prefix x = 5; .*\"\n+\n+if { $next_insn_is_stmt } {\n+    set prefix \"\"\n+} else {\n+    # PC is in the middle of a source line, so the PC address is displayed.\n+    set prefix \"0x0*$next_insn_addr in \"\n+}\n test_background \"finish&\" \\\n-    \"Run till exit from #0  $hex in foo \\\\(\\\\) at.*async.c.*\\r\\n\" \\\n+    \"Run till exit from #0  ${prefix}foo \\\\(\\\\) at.*async.c.*\\r\\n\" \\\n     \".*$hex in main \\\\(\\\\) at.*async.c.*y = foo \\\\(\\\\).*Value returned is.*= 8.*\"\n \n set jump_here [gdb_get_line_number \"jump here\"]"
    }
  ]
}