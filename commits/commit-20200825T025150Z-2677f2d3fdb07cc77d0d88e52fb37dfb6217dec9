{
  "sha": "2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjY3N2YyZDNmZGIwN2NjNzdkMGQ4OGU1MmZiMzdkZmI2MjE3ZGVjOQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-25T02:51:50Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-08-25T02:51:50Z"
    },
    "message": "gdb: move declaration of valprint_check_validity to valprint.h\n\nThe implementation is in valprint.c, so the declaration belongs in\nvalprint.h.\n\ngdb/ChangeLog:\n\n\t* value.h (valprint_check_validity): Move declaration from\n\there...\n\t* valprint.h (valprint_check_validity): ... to here.\n\nChange-Id: Ibe577d3696720099e6d79888d4ee8e3c1bf05a26",
    "tree": {
      "sha": "43b4857a5707aa1db9293a335b94c1d81df91995",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/43b4857a5707aa1db9293a335b94c1d81df91995"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4cf3d79e64bebab661564d81bd72a9d8436dbb3a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4cf3d79e64bebab661564d81bd72a9d8436dbb3a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4cf3d79e64bebab661564d81bd72a9d8436dbb3a"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 21,
    "deletions": 15
  },
  "files": [
    {
      "sha": "642cb6441b3438e1455a0894dffac3d0520a3b91",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-24  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* value.h (valprint_check_validity): Move declaration from\n+\there...\n+\t* valprint.h (valprint_check_validity): ... to here.\n+\n 2020-08-24  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* debug.h: New file."
    },
    {
      "sha": "d95b1700bf714c0ab112ffa101aebe4d8ac9849d",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
      "patch": "@@ -301,7 +301,7 @@ val_print_scalar_or_string_type_p (struct type *type,\n \t  || language->is_string_type_p (type));\n }\n \n-/* See its definition in value.h.  */\n+/* See valprint.h.  */\n \n int\n valprint_check_validity (struct ui_file *stream,"
    },
    {
      "sha": "489d14ba0e908f1c661ad9f0561d95d03e8b9325",
      "filename": "gdb/valprint.h",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/valprint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/valprint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.h?ref=2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
      "patch": "@@ -171,6 +171,20 @@ extern int read_string (CORE_ADDR addr, int len, int width,\n \t\t\tgdb::unique_xmalloc_ptr<gdb_byte> *buffer,\n \t\t\tint *bytes_read);\n \n+/* Helper function to check the validity of some bits of a value.\n+\n+   If TYPE represents some aggregate type (e.g., a structure), return 1.\n+\n+   Otherwise, any of the bytes starting at OFFSET and extending for\n+   TYPE_LENGTH(TYPE) bytes are invalid, print a message to STREAM and\n+   return 0.  The checking is done using FUNCS.\n+\n+   Otherwise, return 1.  */\n+\n+extern int valprint_check_validity (struct ui_file *stream, struct type *type,\n+\t\t\t\t    LONGEST embedded_offset,\n+\t\t\t\t    const struct value *val);\n+\n extern void val_print_optimized_out (const struct value *val,\n \t\t\t\t     struct ui_file *stream);\n "
    },
    {
      "sha": "f7d57d125421d68963db2090a57ab284be1fb206",
      "filename": "gdb/value.h",
      "status": "modified",
      "additions": 0,
      "deletions": 14,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/value.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9/gdb/value.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.h?ref=2677f2d3fdb07cc77d0d88e52fb37dfb6217dec9",
      "patch": "@@ -302,20 +302,6 @@ extern struct value *allocate_computed_value (struct type *type,\n \t\t\t\t\t      const struct lval_funcs *funcs,\n \t\t\t\t\t      void *closure);\n \n-/* Helper function to check the validity of some bits of a value.\n-\n-   If TYPE represents some aggregate type (e.g., a structure), return 1.\n-   \n-   Otherwise, any of the bytes starting at OFFSET and extending for\n-   TYPE_LENGTH(TYPE) bytes are invalid, print a message to STREAM and\n-   return 0.  The checking is done using FUNCS.\n-   \n-   Otherwise, return 1.  */\n-\n-extern int valprint_check_validity (struct ui_file *stream, struct type *type,\n-\t\t\t\t    LONGEST embedded_offset,\n-\t\t\t\t    const struct value *val);\n-\n extern struct value *allocate_optimized_out_value (struct type *type);\n \n /* If VALUE is lval_computed, return its lval_funcs structure.  */"
    }
  ]
}