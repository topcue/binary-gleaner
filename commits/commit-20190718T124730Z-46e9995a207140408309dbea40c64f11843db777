{
  "sha": "46e9995a207140408309dbea40c64f11843db777",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDZlOTk5NWEyMDcxNDA0MDgzMDlkYmVhNDBjNjRmMTE4NDNkYjc3Nw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-18T01:34:06Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-07-18T12:47:30Z"
    },
    "message": "[PowerPC64] Don't store TLS_EXPLICIT in tls_mask\n\nThis saves a bit in tls_mask, and fixes a bug that could be triggered\nin the unlikely case that both @got (usual ELF style) and @toc\n(PowerOpen style) code was used to set up args for __tls_get_addr.\n\n\t* elf64-ppc.c (TLS_EXPLICIT): Define as 256.\n\t(ppc64_elf_check_relocs): Don't store TLS_EXPLICIT even if char\n\tis more than 8 bits.\n\t(ppc64_elf_tls_optimize): Likewise.  Make tls_set, tls_clear, and\n\ttls_type vars unsigned int.\n\t(ppc64_elf_relocate_section): Use r_type rather than TLS_EXPLICIT\n\tto select r_type edit.",
    "tree": {
      "sha": "58d3cce8c9b382bb415186a6b4d813687134b4f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/58d3cce8c9b382bb415186a6b4d813687134b4f8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/46e9995a207140408309dbea40c64f11843db777",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46e9995a207140408309dbea40c64f11843db777",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/46e9995a207140408309dbea40c64f11843db777",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46e9995a207140408309dbea40c64f11843db777/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b00a0a86c40c681cf4b22a3630f85188ac849721",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b00a0a86c40c681cf4b22a3630f85188ac849721",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b00a0a86c40c681cf4b22a3630f85188ac849721"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 19,
    "deletions": 8
  },
  "files": [
    {
      "sha": "eb64f86389fdd9823595b8f044dd26dd4c27701d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46e9995a207140408309dbea40c64f11843db777/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46e9995a207140408309dbea40c64f11843db777/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=46e9995a207140408309dbea40c64f11843db777",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.c (TLS_EXPLICIT): Define as 256.\n+\t(ppc64_elf_check_relocs): Don't store TLS_EXPLICIT even if char\n+\tis more than 8 bits.\n+\t(ppc64_elf_tls_optimize): Likewise.  Make tls_set, tls_clear, and\n+\ttls_type vars unsigned int.\n+\t(ppc64_elf_relocate_section): Use r_type rather than TLS_EXPLICIT\n+\tto select r_type edit.\n+\n 2019-07-18  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-ppc.c (TLS_GDIE): Rename from TLS_TPRELGD throughout file."
    },
    {
      "sha": "0c0d4a4c13ef1f44e55745b082e78c8bdc7fec7a",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 9,
      "deletions": 8,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/46e9995a207140408309dbea40c64f11843db777/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/46e9995a207140408309dbea40c64f11843db777/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=46e9995a207140408309dbea40c64f11843db777",
      "patch": "@@ -3048,7 +3048,7 @@ struct ppc_link_hash_entry\n #define TLS_DTPREL\t16\t/* DTPREL reloc, => LD. */\n #define TLS_MARK\t32\t/* __tls_get_addr call marked. */\n #define TLS_GDIE\t64\t/* GOT TPREL reloc resulting from GD->IE. */\n-#define TLS_EXPLICIT   128\t/* Marks TOC section TLS relocs. */\n+#define TLS_EXPLICIT   256\t/* TOC section TLS reloc, not stored. */\n   unsigned char tls_mask;\n \n   /* The above field is also used to mark function symbols.  In which\n@@ -4901,7 +4901,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,\n \t    {\n \t      struct ppc_link_hash_entry *eh;\n \t      eh = (struct ppc_link_hash_entry *) h;\n-\t      eh->tls_mask |= tls_type;\n+\t      eh->tls_mask |= tls_type & 0xff;\n \t    }\n \t  else\n \t    if (!update_local_sym_info (abfd, symtab_hdr, r_symndx,\n@@ -7677,7 +7677,7 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)\n \t\t  Elf_Internal_Sym *sym;\n \t\t  asection *sym_sec;\n \t\t  unsigned char *tls_mask;\n-\t\t  unsigned char tls_set, tls_clear, tls_type = 0;\n+\t\t  unsigned int tls_set, tls_clear, tls_type = 0;\n \t\t  bfd_vma value;\n \t\t  bfd_boolean ok_tprel, is_local;\n \t\t  long toc_ref_index = 0;\n@@ -8067,7 +8067,7 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)\n \t\t\t}\n \t\t    }\n \n-\t\t  *tls_mask |= tls_set;\n+\t\t  *tls_mask |= tls_set & 0xff;\n \t\t  *tls_mask &= ~tls_clear;\n \t\t}\n \n@@ -14530,11 +14530,12 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t\t  insn2 = 0x7c636a14;\t/* add 3,3,13 */\n \t\t  if (offset != (bfd_vma) -1)\n \t\t    rel[1].r_info = ELF64_R_INFO (STN_UNDEF, R_PPC64_NONE);\n-\t\t  if ((tls_mask & TLS_EXPLICIT) == 0)\n-\t\t    r_type = (((r_type - (R_PPC64_GOT_TLSGD16 & 3)) & 3)\n-\t\t\t      + R_PPC64_GOT_TPREL16_DS);\n-\t\t  else\n+\t\t  if (r_type == R_PPC64_TOC16\n+\t\t      || r_type == R_PPC64_TOC16_LO)\n \t\t    r_type += R_PPC64_TOC16_DS - R_PPC64_TOC16;\n+\t\t  else\n+\t\t    r_type = (((r_type - (R_PPC64_GOT_TLSGD16 & 1)) & 1)\n+\t\t\t      + R_PPC64_GOT_TPREL16_DS);\n \t\t  rel->r_info = ELF64_R_INFO (r_symndx, r_type);\n \t\t}\n \t      else"
    }
  ]
}