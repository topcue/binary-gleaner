{
  "sha": "3426ae5760319b6b31d71f3ba798154e6fcea34d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzQyNmFlNTc2MDMxOWI2YjMxZDcxZjNiYTc5ODE1NGU2ZmNlYTM0ZA==",
  "commit": {
    "author": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-06-26T13:10:08Z"
    },
    "committer": {
      "name": "Alan Hayward",
      "email": "alan.hayward@arm.com",
      "date": "2019-06-26T13:11:07Z"
    },
    "message": "Arm: Allow version strings in the triplet regexp\n\nOn Arm, the OS may use the full version string for the arch name when\ninstalling the compiler, for example armv7hl-redhat-linux-gnueabi-gcc.\n\nImplement gdbarch_gnu_triplet_regexp for Arm to allow this to be detected.\nEnsure that other Arm targets (eg iwmmxt) are not affected.\n\nThis fixes the compile/ set of tests on those systems.\n\ngdb/ChangeLog:\n\n2019-06-26  Alan Hayward  <alan.hayward@arm.com>\n\n\t* arm-tdep.c (arm_gnu_triplet_regexp): New function.\n\t(arm_gdbarch_init): Add arm_gnu_triplet_regexp.",
    "tree": {
      "sha": "61c2b2347ce87a438fc9e5ae8f969ce0acf95bb7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/61c2b2347ce87a438fc9e5ae8f969ce0acf95bb7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3426ae5760319b6b31d71f3ba798154e6fcea34d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3426ae5760319b6b31d71f3ba798154e6fcea34d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3426ae5760319b6b31d71f3ba798154e6fcea34d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3426ae5760319b6b31d71f3ba798154e6fcea34d/comments",
  "author": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "a74nh",
    "id": 4146708,
    "node_id": "MDQ6VXNlcjQxNDY3MDg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4146708?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/a74nh",
    "html_url": "https://github.com/a74nh",
    "followers_url": "https://api.github.com/users/a74nh/followers",
    "following_url": "https://api.github.com/users/a74nh/following{/other_user}",
    "gists_url": "https://api.github.com/users/a74nh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/a74nh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/a74nh/subscriptions",
    "organizations_url": "https://api.github.com/users/a74nh/orgs",
    "repos_url": "https://api.github.com/users/a74nh/repos",
    "events_url": "https://api.github.com/users/a74nh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/a74nh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8af58ffe5d06eaed8adfd1f0db2cb10d38c364e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8af58ffe5d06eaed8adfd1f0db2cb10d38c364e2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8af58ffe5d06eaed8adfd1f0db2cb10d38c364e2"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 18,
    "deletions": 1
  },
  "files": [
    {
      "sha": "3e6a1704fbba7875d15b134a256d6661f6f5827c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3426ae5760319b6b31d71f3ba798154e6fcea34d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3426ae5760319b6b31d71f3ba798154e6fcea34d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3426ae5760319b6b31d71f3ba798154e6fcea34d",
      "patch": "@@ -1,3 +1,8 @@\n+2019-06-26  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* arm-tdep.c (arm_gnu_triplet_regexp): New function.\n+\t(arm_gdbarch_init): Add arm_gnu_triplet_regexp.\n+\n 2019-06-25  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* arm-tdep.c (struct arm_per_objfile) <section_maps_sorted>: New"
    },
    {
      "sha": "039b2f071b29acdf5bb1e3a661517803b91b67d0",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3426ae5760319b6b31d71f3ba798154e6fcea34d/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3426ae5760319b6b31d71f3ba798154e6fcea34d/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=3426ae5760319b6b31d71f3ba798154e6fcea34d",
      "patch": "@@ -8831,7 +8831,17 @@ arm_code_of_frame_writable (struct gdbarch *gdbarch, struct frame_info *frame)\n     return 1;\n }\n \n-\f\n+/* Implement gdbarch_gnu_triplet_regexp.  If the arch name is arm then allow it\n+   to be postfixed by a version (eg armv7hl).  */\n+\n+static const char *\n+arm_gnu_triplet_regexp (struct gdbarch *gdbarch)\n+{\n+  if (strcmp (gdbarch_bfd_arch_info (gdbarch)->arch_name, \"arm\") == 0)\n+    return \"arm(v[^- ]*)?\";\n+  return gdbarch_bfd_arch_info (gdbarch)->arch_name;\n+}\n+\n /* Initialize the current architecture based on INFO.  If possible,\n    re-use an architecture from ARCHES, which is a list of\n    architectures already created during this debugging session.\n@@ -9433,6 +9443,8 @@ arm_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_disassembler_options (gdbarch, &arm_disassembler_options);\n   set_gdbarch_valid_disassembler_options (gdbarch, disassembler_options_arm ());\n \n+  set_gdbarch_gnu_triplet_regexp (gdbarch, arm_gnu_triplet_regexp);\n+\n   return gdbarch;\n }\n "
    }
  ]
}