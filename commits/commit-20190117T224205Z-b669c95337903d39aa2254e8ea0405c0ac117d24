{
  "sha": "b669c95337903d39aa2254e8ea0405c0ac117d24",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjY2OWM5NTMzNzkwM2QzOWFhMjI1NGU4ZWEwNDA1YzBhYzExN2QyNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-16T03:06:48Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T22:42:05Z"
    },
    "message": "Add compunits range adapter to objfile\n\nThis removes the objfile_compunits range adapter in favor of using a\nmethod on objfile.\n\n2019-01-15  Tom Tromey  <tom@tromey.com>\n\n\t* symtab.c (lookup_objfile_from_block)\n\t(lookup_symbol_in_objfile_symtabs)\n\t(basic_lookup_transparent_type_1, find_pc_sect_compunit_symtab)\n\t(find_line_symtab, info_sources_command)\n\t(default_collect_symbol_completion_matches_break_on)\n\t(make_source_files_completion_list): Update.\n\t* symmisc.c (print_objfile_statistics, dump_objfile)\n\t(maintenance_print_symbols, maintenance_info_symtabs)\n\t(maintenance_check_symtabs, maintenance_info_line_tables):\n\tUpdate.\n\t* source.c (select_source_symtab)\n\t(forget_cached_source_info_for_objfile): Update.\n\t* objfiles.h (class objfile_compunits): Remove.\n\t(struct objfile) <compunits_range>: New typedef.\n\t(compunits): New method.\n\t* objfiles.c (objfile_relocate1): Update.\n\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.\n\t* maint.c (count_symtabs_and_blocks): Update.\n\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n\t* cp-support.c (add_symbol_overload_list_qualified): Update.\n\t* coffread.c (coff_symtab_read): Update.\n\t* ada-lang.c (add_nonlocal_symbols)\n\t(ada_collect_symbol_completion_matches)\n\t(ada_add_global_exceptions): Update.",
    "tree": {
      "sha": "78a37f3188cbc3f00e0c2c87298f92bed8b64e76",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/78a37f3188cbc3f00e0c2c87298f92bed8b64e76"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b669c95337903d39aa2254e8ea0405c0ac117d24",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b669c95337903d39aa2254e8ea0405c0ac117d24",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b669c95337903d39aa2254e8ea0405c0ac117d24",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b669c95337903d39aa2254e8ea0405c0ac117d24/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e955d83c4128ec773d84b92487ed1cdfed09938",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e955d83c4128ec773d84b92487ed1cdfed09938",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e955d83c4128ec773d84b92487ed1cdfed09938"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 67,
    "deletions": 44
  },
  "files": [
    {
      "sha": "d3b16f64c512f641de350233959482f7e509fc0f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -1,3 +1,30 @@\n+2019-01-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* symtab.c (lookup_objfile_from_block)\n+\t(lookup_symbol_in_objfile_symtabs)\n+\t(basic_lookup_transparent_type_1, find_pc_sect_compunit_symtab)\n+\t(find_line_symtab, info_sources_command)\n+\t(default_collect_symbol_completion_matches_break_on)\n+\t(make_source_files_completion_list): Update.\n+\t* symmisc.c (print_objfile_statistics, dump_objfile)\n+\t(maintenance_print_symbols, maintenance_info_symtabs)\n+\t(maintenance_check_symtabs, maintenance_info_line_tables):\n+\tUpdate.\n+\t* source.c (select_source_symtab)\n+\t(forget_cached_source_info_for_objfile): Update.\n+\t* objfiles.h (class objfile_compunits): Remove.\n+\t(struct objfile) <compunits_range>: New typedef.\n+\t(compunits): New method.\n+\t* objfiles.c (objfile_relocate1): Update.\n+\t* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_files): Update.\n+\t* maint.c (count_symtabs_and_blocks): Update.\n+\t* linespec.c (iterate_over_all_matching_symtabs): Update.\n+\t* cp-support.c (add_symbol_overload_list_qualified): Update.\n+\t* coffread.c (coff_symtab_read): Update.\n+\t* ada-lang.c (add_nonlocal_symbols)\n+\t(ada_collect_symbol_completion_matches)\n+\t(ada_add_global_exceptions): Update.\n+\n 2019-01-15  Tom Tromey  <tom@tromey.com>\n \n \t* progspace.h (program_space) <objfiles_safe_range>: New"
    },
    {
      "sha": "7d997543c2630514be3e4e5f3a9b5adf0d5b527c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -5629,7 +5629,7 @@ add_nonlocal_symbols (struct obstack *obstackp,\n \t\t\t\t\t       symbol_name_match_type::FULL,\n \t\t\t\t\t       compare_names);\n \n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  const struct block *global_block\n \t    = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cu), GLOBAL_BLOCK);\n@@ -6467,7 +6467,7 @@ ada_collect_symbol_completion_matches (completion_tracker &tracker,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *s : objfile_compunits (objfile))\n+      for (compunit_symtab *s : objfile->compunits ())\n \t{\n \t  QUIT;\n \t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), GLOBAL_BLOCK);\n@@ -6486,7 +6486,7 @@ ada_collect_symbol_completion_matches (completion_tracker &tracker,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *s : objfile_compunits (objfile))\n+      for (compunit_symtab *s : objfile->compunits ())\n \t{\n \t  QUIT;\n \t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (s), STATIC_BLOCK);\n@@ -13568,7 +13568,7 @@ ada_add_global_exceptions (compiled_regex *preg,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *s : objfile_compunits (objfile))\n+      for (compunit_symtab *s : objfile->compunits ())\n \t{\n \t  const struct blockvector *bv = COMPUNIT_BLOCKVECTOR (s);\n \t  int i;"
    },
    {
      "sha": "2b75d8189fb7fe956f78d3a1e4bbf834a8e8f0b7",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -1203,7 +1203,7 @@ coff_symtab_read (minimal_symbol_reader &reader,\n   /* Patch up any opaque types (references to types that are not defined\n      in the file where they are referenced, e.g. \"struct foo *bar\").  */\n   {\n-    for (compunit_symtab *cu : objfile_compunits (objfile))\n+    for (compunit_symtab *cu : objfile->compunits ())\n       {\n \tfor (symtab *s : compunit_filetabs (cu))\n \t  patch_opaque_types (s);"
    },
    {
      "sha": "bc5e8047ae8dfbf887ba207f135e6076953610f1",
      "filename": "gdb/cp-support.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/cp-support.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/cp-support.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cp-support.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -1397,7 +1397,7 @@ add_symbol_overload_list_qualified (const char *func_name,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (objfile))\n+      for (compunit_symtab *cust : objfile->compunits ())\n \t{\n \t  QUIT;\n \t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust), GLOBAL_BLOCK);\n@@ -1407,7 +1407,7 @@ add_symbol_overload_list_qualified (const char *func_name,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (objfile))\n+      for (compunit_symtab *cust : objfile->compunits ())\n \t{\n \t  QUIT;\n \t  b = BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust), STATIC_BLOCK);"
    },
    {
      "sha": "cedbd39bd77dc357bb930ff39374a5a0a816997f",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -1150,7 +1150,7 @@ iterate_over_all_matching_symtabs\n \t\t\t\t\t\t    NULL, NULL,\n \t\t\t\t\t\t    search_domain);\n \n-\tfor (compunit_symtab *cu : objfile_compunits (objfile))\n+\tfor (compunit_symtab *cu : objfile->compunits ())\n \t  {\n \t    struct symtab *symtab = COMPUNIT_FILETABS (cu);\n "
    },
    {
      "sha": "ddd25a480cca2235aea5cd9fb99d476a26499e33",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -773,7 +773,7 @@ count_symtabs_and_blocks (int *nr_symtabs_ptr, int *nr_compunit_symtabs_ptr,\n     {\n       for (objfile *o : current_program_space->objfiles ())\n \t{\n-\t  for (compunit_symtab *cu : objfile_compunits (o))\n+\t  for (compunit_symtab *cu : o->compunits ())\n \t    {\n \t      ++nr_compunit_symtabs;\n \t      nr_blocks += BLOCKVECTOR_NBLOCKS (COMPUNIT_BLOCKVECTOR (cu));"
    },
    {
      "sha": "714ab01b2646c1c82ed8ccb437d28c1fb916d11b",
      "filename": "gdb/mi/mi-cmd-file.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/mi/mi-cmd-file.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/mi/mi-cmd-file.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-file.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -94,7 +94,7 @@ mi_cmd_file_list_exec_source_files (const char *command, char **argv, int argc)\n   /* Look at all of the file symtabs.  */\n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  for (symtab *s : compunit_filetabs (cu))\n \t    {"
    },
    {
      "sha": "34b271e86de2b9e2fa392e9815e8aea291b29c09",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -787,7 +787,7 @@ objfile_relocate1 (struct objfile *objfile,\n \n   /* OK, get all the symtabs.  */\n   {\n-    for (compunit_symtab *cust : objfile_compunits (objfile))\n+    for (compunit_symtab *cust : objfile->compunits ())\n       {\n \tfor (symtab *s : compunit_filetabs (cust))\n \t  {\n@@ -805,7 +805,7 @@ objfile_relocate1 (struct objfile *objfile,\n \t  }\n       }\n \n-    for (compunit_symtab *cust : objfile_compunits (objfile))\n+    for (compunit_symtab *cust : objfile->compunits ())\n       {\n \tconst struct blockvector *bv = COMPUNIT_BLOCKVECTOR (cust);\n \tint block_line_section = COMPUNIT_BLOCK_LINE_SECTION (cust);"
    },
    {
      "sha": "2cf61957ec1d1a3b534c0acbce71f045a24a653b",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 9,
      "deletions": 13,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -301,6 +301,15 @@ struct objfile\n     partial_symtabs.reset (new psymtab_storage ());\n   }\n \n+  typedef next_adapter<struct compunit_symtab> compunits_range;\n+\n+  /* A range adapter that makes it possible to iterate over all\n+     compunits in one objfile.  */\n+\n+  compunits_range compunits ()\n+  {\n+    return compunits_range (compunit_symtabs);\n+  }\n \n   /* All struct objfile's are chained together by their next pointers.\n      The program space field \"objfiles\"  (frequently referenced via\n@@ -553,19 +562,6 @@ extern void default_iterate_over_objfiles_in_search_order\n    void *cb_data, struct objfile *current_objfile);\n \f\n \n-/* A range adapter that makes it possible to iterate over all\n-   compunits in one objfile.  */\n-\n-class objfile_compunits : public next_adapter<struct compunit_symtab>\n-{\n-public:\n-\n-  explicit objfile_compunits (struct objfile *objfile)\n-    : next_adapter<struct compunit_symtab> (objfile->compunit_symtabs)\n-  {\n-  }\n-};\n-\n /* A range adapter that makes it possible to iterate over all\n    minimal symbols of an objfile.  */\n "
    },
    {
      "sha": "d070958e852213c73b8c7f41287e4d5309279842",
      "filename": "gdb/source.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/source.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/source.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/source.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -271,7 +271,7 @@ select_source_symtab (struct symtab *s)\n \n   for (objfile *ofp : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cu : objfile_compunits (ofp))\n+      for (compunit_symtab *cu : ofp->compunits ())\n \t{\n \t  for (symtab *symtab : compunit_filetabs (cu))\n \t    {\n@@ -353,7 +353,7 @@ show_directories_command (struct ui_file *file, int from_tty,\n void\n forget_cached_source_info_for_objfile (struct objfile *objfile)\n {\n-  for (compunit_symtab *cu : objfile_compunits (objfile))\n+  for (compunit_symtab *cu : objfile->compunits ())\n     {\n       for (symtab *s : compunit_filetabs (cu))\n \t{"
    },
    {
      "sha": "ac5c392dc5d823fc33d7022ee2aca44cab907c50",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -108,7 +108,7 @@ print_objfile_statistics (void)\n       if (objfile->sf)\n \tobjfile->sf->qf->print_stats (objfile);\n       i = linetables = 0;\n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  for (symtab *s : compunit_filetabs (cu))\n \t    {\n@@ -117,8 +117,8 @@ print_objfile_statistics (void)\n \t\tlinetables++;\n \t    }\n \t}\n-      blockvectors = std::distance (objfile_compunits (objfile).begin (),\n-\t\t\t\t    objfile_compunits (objfile).end ());\n+      blockvectors = std::distance (objfile->compunits ().begin (),\n+\t\t\t\t    objfile->compunits ().end ());\n       printf_filtered (_(\"  Number of symbol tables: %d\\n\"), i);\n       printf_filtered (_(\"  Number of symbol tables with line tables: %d\\n\"),\n \t\t       linetables);\n@@ -162,7 +162,7 @@ dump_objfile (struct objfile *objfile)\n   if (objfile->compunit_symtabs != NULL)\n     {\n       printf_filtered (\"Symtabs:\\n\");\n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  for (symtab *symtab : compunit_filetabs (cu))\n \t    {\n@@ -486,7 +486,7 @@ maintenance_print_symbols (const char *args, int from_tty)\n \t  if (!print_for_objfile)\n \t    continue;\n \n-\t  for (compunit_symtab *cu : objfile_compunits (objfile))\n+\t  for (compunit_symtab *cu : objfile->compunits ())\n \t    {\n \t      for (symtab *s : compunit_filetabs (cu))\n \t\t{\n@@ -784,7 +784,7 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t   actually find a symtab whose name matches.  */\n \tint printed_objfile_start = 0;\n \n-\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n+\tfor (compunit_symtab *cust : objfile->compunits ())\n \t  {\n \t    int printed_compunit_symtab_start = 0;\n \n@@ -869,7 +869,7 @@ maintenance_check_symtabs (const char *ignore, int from_tty)\n \t   actually find something worth printing.  */\n \tint printed_objfile_start = 0;\n \n-\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n+\tfor (compunit_symtab *cust : objfile->compunits ())\n \t  {\n \t    int found_something = 0;\n \t    struct symtab *symtab = compunit_primary_filetab (cust);\n@@ -1032,7 +1032,7 @@ maintenance_info_line_tables (const char *regexp, int from_tty)\n   ALL_PSPACES (pspace)\n     for (objfile *objfile : pspace->objfiles ())\n       {\n-\tfor (compunit_symtab *cust : objfile_compunits (objfile))\n+\tfor (compunit_symtab *cust : objfile->compunits ())\n \t  {\n \t    for (symtab *symtab : compunit_filetabs (cust))\n \t      {"
    },
    {
      "sha": "b8ebbc2e1a04119ed69dbc554ab5b171fcb81876",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b669c95337903d39aa2254e8ea0405c0ac117d24/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=b669c95337903d39aa2254e8ea0405c0ac117d24",
      "patch": "@@ -2171,7 +2171,7 @@ lookup_objfile_from_block (const struct block *block)\n   /* Look through all blockvectors.  */\n   for (objfile *obj : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (obj))\n+      for (compunit_symtab *cust : obj->compunits ())\n \tif (block == BLOCKVECTOR_BLOCK (COMPUNIT_BLOCKVECTOR (cust),\n \t\t\t\t\tGLOBAL_BLOCK))\n \t  {\n@@ -2265,7 +2265,7 @@ lookup_symbol_in_objfile_symtabs (struct objfile *objfile, int block_index,\n \t\t\t  name, domain_name (domain));\n     }\n \n-  for (compunit_symtab *cust : objfile_compunits (objfile))\n+  for (compunit_symtab *cust : objfile->compunits ())\n     {\n       const struct blockvector *bv;\n       const struct block *block;\n@@ -2763,7 +2763,7 @@ basic_lookup_transparent_type_1 (struct objfile *objfile, int block_index,\n   const struct block *block;\n   const struct symbol *sym;\n \n-  for (compunit_symtab *cust : objfile_compunits (objfile))\n+  for (compunit_symtab *cust : objfile->compunits ())\n     {\n       bv = COMPUNIT_BLOCKVECTOR (cust);\n       block = BLOCKVECTOR_BLOCK (bv, block_index);\n@@ -2904,7 +2904,7 @@ find_pc_sect_compunit_symtab (CORE_ADDR pc, struct obj_section *section)\n \n   for (objfile *obj_file : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (obj_file))\n+      for (compunit_symtab *cust : obj_file->compunits ())\n \t{\n \t  struct block *b;\n \t  const struct blockvector *bv;\n@@ -3360,7 +3360,7 @@ find_line_symtab (struct symtab *sym_tab, int line,\n \n       for (objfile *objfile : current_program_space->objfiles ())\n \t{\n-\t  for (compunit_symtab *cu : objfile_compunits (objfile))\n+\t  for (compunit_symtab *cu : objfile->compunits ())\n \t    {\n \t      for (symtab *s : compunit_filetabs (cu))\n \t\t{\n@@ -4200,7 +4200,7 @@ info_sources_command (const char *ignore, int from_tty)\n   data.first = 1;\n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  for (symtab *s : compunit_filetabs (cu))\n \t    {\n@@ -4492,7 +4492,7 @@ search_symbols (const char *regexp, enum search_domain kind,\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (objfile))\n+      for (compunit_symtab *cust : objfile->compunits ())\n \t{\n \t  bv = COMPUNIT_BLOCKVECTOR (cust);\n \t  for (i = GLOBAL_BLOCK; i <= STATIC_BLOCK; i++)\n@@ -5293,7 +5293,7 @@ default_collect_symbol_completion_matches_break_on\n   /* Add completions for all currently loaded symbol tables.  */\n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cust : objfile_compunits (objfile))\n+      for (compunit_symtab *cust : objfile->compunits ())\n \tadd_symtab_completions (cust, tracker, mode, lookup_name,\n \t\t\t\tsym_text, word, code);\n     }\n@@ -5602,7 +5602,7 @@ make_source_files_completion_list (const char *text, const char *word)\n \n   for (objfile *objfile : current_program_space->objfiles ())\n     {\n-      for (compunit_symtab *cu : objfile_compunits (objfile))\n+      for (compunit_symtab *cu : objfile->compunits ())\n \t{\n \t  for (symtab *s : compunit_filetabs (cu))\n \t    {"
    }
  ]
}