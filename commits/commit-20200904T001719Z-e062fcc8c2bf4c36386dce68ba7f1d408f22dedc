{
  "sha": "e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTA2MmZjYzhjMmJmNGMzNjM4NmRjZTY4YmE3ZjFkNDA4ZjIyZGVkYw==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-09-04T00:17:19Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-09-04T00:17:19Z"
    },
    "message": "ld: Change NOSANTIZE_CFLAGS to NOSANITIZE_CFLAGS\n\n\t* testsuite/config/default.exp: Change NOSANTIZE_CFLAGS to\n\tNOSANITIZE_CFLAGS.\n\t* testsuite/ld-elf/dwarf.exp: Likewise.\n\t* testsuite/ld-elf/indirect.exp: Likewise.\n\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n\t* testsuite/ld-elf/shared.exp: Likewise.\n\t* testsuite/ld-elf/tls.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-scripts/crossref.exp: Likewise.\n\t* testsuite/ld-selective/selective.exp: Likewise.\n\t* testsuite/ld-shared/shared.exp: Likewise.\n\t* testsuite/ld-size/size.exp: Likewise.\n\t* testsuite/ld-srec/srec.exp: Likewise.\n\t* testsuite/ld-x86-64/x86-64.exp: Likewise.",
    "tree": {
      "sha": "f78bddda5ddfcb7366f38eb8a1238b61758f01d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f78bddda5ddfcb7366f38eb8a1238b61758f01d2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cdafde0beb436ef4f96f0afcca9f17a58a1e208f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cdafde0beb436ef4f96f0afcca9f17a58a1e208f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cdafde0beb436ef4f96f0afcca9f17a58a1e208f"
    }
  ],
  "stats": {
    "total": 217,
    "additions": 120,
    "deletions": 97
  },
  "files": [
    {
      "sha": "0fcbf0d6c21226394280aaee92facd529b49dbf6",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -1,3 +1,26 @@\n+2020-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/config/default.exp: Change NOSANTIZE_CFLAGS to\n+\tNOSANITIZE_CFLAGS.\n+\t* testsuite/ld-elf/dwarf.exp: Likewise.\n+\t* testsuite/ld-elf/indirect.exp: Likewise.\n+\t* testsuite/ld-elf/linux-x86.exp: Likewise.\n+\t* testsuite/ld-elf/shared.exp: Likewise.\n+\t* testsuite/ld-elf/tls.exp: Likewise.\n+\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n+\t* testsuite/ld-elfvers/vers.exp: Likewise.\n+\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n+\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n+\t* testsuite/ld-gc/gc.exp: Likewise.\n+\t* testsuite/ld-plugin/lto.exp: Likewise.\n+\t* testsuite/ld-plugin/plugin.exp: Likewise.\n+\t* testsuite/ld-scripts/crossref.exp: Likewise.\n+\t* testsuite/ld-selective/selective.exp: Likewise.\n+\t* testsuite/ld-shared/shared.exp: Likewise.\n+\t* testsuite/ld-size/size.exp: Likewise.\n+\t* testsuite/ld-srec/srec.exp: Likewise.\n+\t* testsuite/ld-x86-64/x86-64.exp: Likewise.\n+\n 2020-09-03  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* testsuite/ld-riscv-elf/attr-merge-priv-spec-failed-01.d: Remove"
    },
    {
      "sha": "58ca4a278cbc0e876dd29a66a96a39bdf38f1076",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -576,10 +576,10 @@ if { ![info exists STATIC_PIE_LDFLAGS] } then {\n     }\n }\n \n-# Set NOSANTIZE_CFLAGS to \"-fno-sanitize=all\" if target compiler\n+# Set NOSANITIZE_CFLAGS to \"-fno-sanitize=all\" if target compiler\n # supports it.\n \n-if { ![info exists NOSANTIZE_CFLAGS] } then {\n+if { ![info exists NOSANITIZE_CFLAGS] } then {\n     if { [check_compiler_available] } {\n \t# Check if gcc supports -fno-sanitize=all.\n \tset flags \"\"\n@@ -605,11 +605,11 @@ if { ![info exists NOSANTIZE_CFLAGS] } then {\n \tfile delete $src\n \n \tif { $available == 1 } then {\n-\t    set NOSANTIZE_CFLAGS \"-fno-sanitize=all\"\n+\t    set NOSANITIZE_CFLAGS \"-fno-sanitize=all\"\n \t} else {\n-\t    set NOSANTIZE_CFLAGS \"\"\n+\t    set NOSANITIZE_CFLAGS \"\"\n \t}\n     } else {\n-\tset NOSANTIZE_CFLAGS \"\"\n+\tset NOSANITIZE_CFLAGS \"\"\n     }\n }"
    },
    {
      "sha": "65b61ce04b7d4137ca983cc76a3d178a24265e5c",
      "filename": "ld/testsuite/ld-elf/dwarf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/dwarf.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -70,7 +70,7 @@ set run_tests {\n \n # Disable all sanitizers.\n set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANTIZE_CFLAGS\"\n+append CFLAGS \" $NOSANITIZE_CFLAGS\"\n run_cc_link_tests $build_tests\n run_ld_link_exec_tests $run_tests\n set CFLAGS \"$old_CFLAGS\""
    },
    {
      "sha": "bed1dfdb7b050d589650a6f79a7290b46ba78002",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -65,7 +65,7 @@ if {[check_lto_available]} {\n }\n \n # Disable all sanitizers.\n-append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+append cc_cmd \" $NOSANITIZE_CFLAGS\"\n \n if { ![ld_compile $cc_cmd $srcdir/$subdir/indirect1a.c tmpdir/indirect1a.o]\n      || ![ld_compile $cc_cmd $srcdir/$subdir/indirect1b.c tmpdir/indirect1b.o]"
    },
    {
      "sha": "3c038164f40e7a7d145abef4e522deaba95f4ed6",
      "filename": "ld/testsuite/ld-elf/linux-x86.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/linux-x86.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/linux-x86.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/linux-x86.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -56,7 +56,7 @@ run_ld_link_exec_tests [list \\\n \t{ linux-x86.S pr23428.c dummy.s } \\\n \t\"pr23428\" \\\n \t\"pass.out\" \\\n-\t\"$NOPIE_CFLAGS $NOSANTIZE_CFLAGS -fno-asynchronous-unwind-tables\" \\\n+\t\"$NOPIE_CFLAGS $NOSANITIZE_CFLAGS -fno-asynchronous-unwind-tables\" \\\n \t\"asm\" \\\n     ] \\\n ]"
    },
    {
      "sha": "87a40a362ed59955079fbf27e6032d910a3ae45c",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 34,
      "deletions": 34,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -787,24 +787,24 @@ set build_tests {\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build libpr2404a.so\" \\\n-\t\"-shared $NOSANTIZE_CFLAGS\" \\\n-\t\"-fPIC $NOSANTIZE_CFLAGS\" \\\n+\t\"-shared $NOSANITIZE_CFLAGS\" \\\n+\t\"-fPIC $NOSANITIZE_CFLAGS\" \\\n \t{pr2404a.c} \\\n \t{} \\\n \t\"libpr2404a.so\" \\\n     ] \\\n     [list \\\n \t\"Build libpr2404n.so\" \\\n-\t\"-shared -Wl,-z,now $NOSANTIZE_CFLAGS\" \\\n-\t\"-fPIC $NOSANTIZE_CFLAGS\" \\\n+\t\"-shared -Wl,-z,now $NOSANITIZE_CFLAGS\" \\\n+\t\"-fPIC $NOSANITIZE_CFLAGS\" \\\n \t{pr2404a.c} \\\n \t{} \\\n \t\"libpr2404n.so\" \\\n     ] \\\n     [list \\\n \t\"Build libpr2404b.a\" \\\n \t\"\" \\\n-\t\"$NOSANTIZE_CFLAGS\" \\\n+\t\"$NOSANITIZE_CFLAGS\" \\\n \t{pr2404b.c} \\\n \t{} \\\n \t\"libpr2404b.a\" \\\n@@ -892,7 +892,7 @@ run_ld_link_tests [list \\\n \t{ pr22269-1.c } \\\n \t{{readelf -rW pr22269-1.rd}} \\\n \t\"pr22269-1\" \\\n-\t\"-fPIE -O2 $NOSANTIZE_CFLAGS\" \\\n+\t\"-fPIE -O2 $NOSANITIZE_CFLAGS\" \\\n     ] \\\n ]\n \n@@ -1025,16 +1025,16 @@ set run_tests [list \\\n      \"-Wl,--no-as-needed,-rpath=tmpdir -Ltmpdir -lrel\" \"\" \\\n      {relmain.c} \"relmain\" \"relmain.out\" ] \\\n     [list \"Run pr2404\" \\\n-     \"$NOSANTIZE_CFLAGS -Wl,--no-as-needed \\\n+     \"$NOSANITIZE_CFLAGS -Wl,--no-as-needed \\\n       tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n      \"\" \\\n      {dummy.c} \"pr2404\" \"pr2404.out\" \\\n-     \"$NOSANTIZE_CFLAGS\" ] \\\n+     \"$NOSANITIZE_CFLAGS\" ] \\\n     [list \"Run pr2404n\" \\\n-     \"$NOSANTIZE_CFLAGS -Wl,-z,now \\\n+     \"$NOSANITIZE_CFLAGS -Wl,-z,now \\\n       -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \"\" \\\n      {dummy.c} \"pr2404n\" \"pr2404.out\" \\\n-     \"$NOSANTIZE_CFLAGS\" ] \\\n+     \"$NOSANITIZE_CFLAGS\" ] \\\n     [list \"Run pr18458\" \\\n      \"-Wl,--no-as-needed,-z,now tmpdir/libpr18458a.so tmpdir/libpr18458b.so\" \"\" \\\n      {pr18458c.c} \"pr18458\" \"pass.out\" ] \\\n@@ -1104,7 +1104,7 @@ if [check_libdl_available] {\n   # sections.\n   # Disable all sanitizers.\n   set old_CFLAGS \"$CFLAGS\"\n-  append CFLAGS \" $NOSANTIZE_CFLAGS\"\n+  append CFLAGS \" $NOSANITIZE_CFLAGS\"\n   run_ld_link_exec_tests $dlopen_run_tests \"*-*-netbsdelf*\"\n   set CFLAGS \"$old_CFLAGS\"\n }\n@@ -1159,17 +1159,17 @@ set build_cxx_tests {\n run_cc_link_tests [list \\\n     [list \\\n \t\"Build libdnew1a.so with --Bsymbolic-functions --dynamic-list-cpp-new\" \\\n-\t\"-shared $NOSANTIZE_CFLAGS -Wl,-Bsymbolic-functions,--dynamic-list-cpp-new\" \\\n-\t\"-fPIC -ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"-shared $NOSANITIZE_CFLAGS -Wl,-Bsymbolic-functions,--dynamic-list-cpp-new\" \\\n+\t\"-fPIC -ansi $NOSANITIZE_CFLAGS\" \\\n \t{del.cc new.cc} \\\n \t{} \\\n \t\"libnew1a.so\" \\\n \t\"c++\" \\\n     ] \\\n     [list \\\n \t\"Build libdnew1b.so with --dynamic-list-data --dynamic-list-cpp-new\" \\\n-\t\"-shared $NOSANTIZE_CFLAGS -Wl,--dynamic-list-data,--dynamic-list-cpp-new\" \\\n-\t\"-fPIC -ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"-shared $NOSANITIZE_CFLAGS -Wl,--dynamic-list-data,--dynamic-list-cpp-new\" \\\n+\t\"-fPIC -ansi $NOSANITIZE_CFLAGS\" \\\n \t{del.cc new.cc} \\\n \t{} \\\n \t\"libnew1b.so\" \\\n@@ -1193,22 +1193,22 @@ set run_cxx_tests {\n run_ld_link_exec_tests [list \\\n     [list \\\n \t\"Run with libnew1a.so\" \\\n-\t\"-Wl,--no-as-needed tmpdir/libnew1a.so $NOSANTIZE_CFLAGS\" \\\n+\t\"-Wl,--no-as-needed tmpdir/libnew1a.so $NOSANITIZE_CFLAGS\" \\\n \t\"\" \\\n \t{dl5.cc} \\\n \t\"dl5a\" \\\n \t\"dl5.out\" \\\n-\t\"-ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"-ansi $NOSANITIZE_CFLAGS\" \\\n \t\"c++\" \\\n     ] \\\n     [list \\\n \t\"Run with libnew1b.so\" \\\n-\t\"-Wl,--no-as-needed tmpdir/libnew1b.so $NOSANTIZE_CFLAGS\" \\\n+\t\"-Wl,--no-as-needed tmpdir/libnew1b.so $NOSANITIZE_CFLAGS\" \\\n \t\"\" \\\n \t{dl5.cc} \\\n \t\"dl5b\" \\\n \t\"dl5.out\" \\\n-\t\"-ansi $NOSANTIZE_CFLAGS\" \\\n+\t\"-ansi $NOSANITIZE_CFLAGS\" \\\n \t\"c++\" \\\n     ] \\\n ]\n@@ -1223,7 +1223,7 @@ if { [istarget *-*-linux*]\n \t[list \\\n \t    \"Build libpr2404b.a with PIE\" \\\n \t    \"\" \\\n-\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIE $NOSANITIZE_CFLAGS\" \\\n \t    { pr2404b.c } \\\n \t    {} \\\n \t    \"libpr2404b.a\" \\\n@@ -1309,21 +1309,21 @@ if { [istarget *-*-linux*]\n \t] \\\n \t[list \\\n \t    \"Run pr2404 with PIE\" \\\n-\t    \"-pie $NOSANTIZE_CFLAGS -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n+\t    \"-pie $NOSANITIZE_CFLAGS -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404a.so\" \\\n \t    \"\" \\\n \t    { dummy.c } \\\n \t    \"pr2404pie\" \\\n \t    \"pr2404.out\" \\\n-\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIE $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Run pr2404 with PIE (-z now)\" \\\n-\t    \"-pie $NOSANTIZE_CFLAGS -Wl,-z,now -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \\\n+\t    \"-pie $NOSANITIZE_CFLAGS -Wl,-z,now -Wl,--no-as-needed tmpdir/pr2404b.o tmpdir/libpr2404n.so\" \\\n \t    \"\" \\\n \t    { dummy.c } \\\n \t    \"pr2404pien\" \\\n \t    \"pr2404.out\" \\\n-\t    \"-fPIE $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIE $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Run pr18718\" \\\n@@ -1559,7 +1559,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162a.c } \\\n \t    \"\" \\\n \t    \"libpr23162a.so\" \\\n-\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O2 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23162a\" \\\n@@ -1569,7 +1569,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162b.c } \\\n \t    {{readelf {-rW} pr23162.rd}} \\\n \t    \"pr23162a\" \\\n-\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O0 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23162b.so\" \\\n@@ -1579,7 +1579,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162a.c } \\\n \t    \"\" \\\n \t    \"libpr23162b.so\" \\\n-\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O2 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23162b\" \\\n@@ -1589,7 +1589,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23162b.c } \\\n \t    {{readelf {-rW} pr23162.rd}} \\\n \t    \"pr23162b\" \\\n-\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O0 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23161a.so\" \\\n@@ -1599,7 +1599,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161a.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161a.rd}} \\\n \t    \"libpr23161a.so\" \\\n-\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O2 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161a\" \\\n@@ -1609,7 +1609,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161b.rd}} \\\n \t    \"pr23161a\" \\\n-\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O0 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build libpr23161b.so\" \\\n@@ -1619,7 +1619,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161a.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161a.rd}} \\\n \t    \"libpr23161b.so\" \\\n-\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O2 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161b\" \\\n@@ -1629,7 +1629,7 @@ if { ([istarget \"*-*-linux*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161b.rd}} \\\n \t    \"pr23161b\" \\\n-\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O0 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n     ]\n }\n@@ -1645,7 +1645,7 @@ if { [istarget \"i?86-*-*\"]\n \t    { pr23161c.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161c.rd}} \\\n \t    \"libpr23161c.so\" \\\n-\t    \"-fPIC -O2 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O2 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n \t[list \\\n \t    \"Build pr23161c\" \\\n@@ -1655,7 +1655,7 @@ if { [istarget \"i?86-*-*\"]\n \t    { pr23161b.c } \\\n \t    {{readelf {--dyn-syms -rW} pr23161d.rd}} \\\n \t    \"pr23161c\" \\\n-\t    \"-fPIC -O0 $NOSANTIZE_CFLAGS\" \\\n+\t    \"-fPIC -O0 $NOSANITIZE_CFLAGS\" \\\n \t] \\\n     ]\n }"
    },
    {
      "sha": "45d2a84b8b714518a3ff682958ae2c146f5c27c0",
      "filename": "ld/testsuite/ld-elf/tls.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elf/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/tls.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -48,6 +48,6 @@ run_ld_link_tests [list \\\n \t{ pr22263-1a.c pr22263-1b.c } \\\n \t{{readelf -r pr22263-1.rd}} \\\n \t\"pr22263-1\" \\\n-\t\"-fPIE -O2 $NOSANTIZE_CFLAGS\" \\\n+\t\"-fPIE -O2 $NOSANITIZE_CFLAGS\" \\\n     ] \\\n ]"
    },
    {
      "sha": "c4836d9c46d1a31fdc67be7cac412f3cea0db654",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -169,9 +169,9 @@ if [istarget nios2*-*-*] {\n \n # Explicitly use \"-fcommon\" so that even if $CFLAGS includes\n # \"-fno-common\", these tests are compiled as expected.\n-if {   ![ld_compile \"$CC $CFLAGS -fcommon $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n-    || ![ld_compile \"$CC $CFLAGS -fcommon $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n-    || ![ld_compile \"$CC $CFLAGS $NOSANTIZE_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n+if {   ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n+    || ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n+    || ![ld_compile \"$CC $CFLAGS $NOSANITIZE_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n     unresolved $test1\n     unresolved $test1\n     return"
    },
    {
      "sha": "91ff8f1448e5b7bd7e971f87fe3ddf67300823f0",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -489,9 +489,9 @@ proc build_binary { shared pic test source libname other mapfile verexp versymex\n     global CC\n     global CFLAGS\n     global script\n-    global NOSANTIZE_CFLAGS\n+    global NOSANITIZE_CFLAGS\n \n-    if ![ld_compile \"$CC -S $pic $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n+    if ![ld_compile \"$CC -S $pic $CFLAGS $NOSANITIZE_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n \tunresolved \"$test\"\n \treturn\n     }\n@@ -688,7 +688,7 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     global objdump\n     global CC\n     global CFLAGS\n-    global NOSANTIZE_CFLAGS\n+    global NOSANITIZE_CFLAGS\n \n     set shared \"--shared --no-undefined-version\"\n     set script --version-script\n@@ -700,7 +700,7 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     }\n \n     # Disable all sanitizers.\n-    append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+    append cc_cmd \" $NOSANITIZE_CFLAGS\"\n \n     if ![ld_compile $cc_cmd $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunresolved \"$test\""
    },
    {
      "sha": "05052cc3ba4fddc353c98c1c7fe64b3c7e8cc654",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -197,7 +197,7 @@ proc visibility_run {visibility} {\n     global PLT_CFLAGS\n     global NOPIE_CFLAGS\n     global COMPRESS_LDFLAG\n-    global NOSANTIZE_CFLAGS\n+    global NOSANITIZE_CFLAGS\n \n     if [ string match $visibility \"hidden\" ] {\n \tset VSBCFLAG \"-DHIDDEN_TEST\"\n@@ -236,7 +236,7 @@ proc visibility_run {visibility} {\n     } else {\n     # Compile the main program.  Make sure that PLT is used since PLT\n     # is expected.\n-    if ![ld_compile \"$CC -g $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n+    if ![ld_compile \"$CC -g $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n \tunresolved \"visibility ($visibility) (non PIC)\"\n \tunresolved \"visibility ($visibility)\"\n     } else {\n@@ -246,8 +246,8 @@ proc visibility_run {visibility} {\n \t# will need to do more relocation work.  However, note that not\n \t# using -fpic will cause some of the tests to return different\n \t# results.  Make sure that PLT is used since PLT is expected.\n-\tif { ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n-\t     || ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n+\tif { ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n+\t     || ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n \t    unresolved \"visibility ($visibility) (non PIC)\"\n \t} else {\n \t    # SunOS non PIC shared libraries don't permit some cases of\n@@ -335,8 +335,8 @@ proc visibility_run {visibility} {\n \n \t# Now compile the code using -fpic.\n \n-\tif { ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n-\t    || ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n+\tif { ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n+\t    || ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n \t    unresolved \"visibility ($visibility)\"\n \t} else {\n \t    if { [ string match $visibility \"protected\" ]\n@@ -353,7 +353,7 @@ proc visibility_run {visibility} {\n \t# Don't bother.\n     } else {\n     # Now do the same tests again, but this time compile main.c PIC.\n-    if ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANTIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n+    if ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n \tunresolved \"visibility ($visibility) (PIC main, non PIC so)\"\n \tunresolved \"visibility ($visibility) (PIC main)\"\n     } else {\n@@ -445,7 +445,7 @@ visibility_run protected_undef_def\n visibility_run protected_weak\n visibility_run normal\n \n-if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n+if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n     unresolved \"common hidden symbol\"\n } else {\n     if ![ld_link $ld tmpdir/common \"tmpdir/common.o\"] {\n@@ -455,10 +455,10 @@ if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/common.c tm\n     }\n }\n \n-if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n+if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n     unresolved \"weak hidden symbol\"\n } else {\n-   if { ![ld_compile \"$CC -g $CFLAGS $NOSANTIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n+   if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n \tunresolved \"weak hidden symbol\"\n     } else {\n \tif ![ld_link $ld tmpdir/sh3.so \"-shared tmpdir/sh3.o\"] {"
    },
    {
      "sha": "62478b9e607aad4886ca94bbb530228a03deb91e",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -267,14 +267,14 @@ proc build_lib {test libname objs dynsymexp} {\n     global shared\n     global srcdir\n     global subdir\n-    global NOSANTIZE_CFLAGS\n+    global NOSANITIZE_CFLAGS\n \n     set files \"\"\n     foreach obj $objs {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link \"$CC $NOSANTIZE_CFLAGS\" $tmpdir/$libname.so \"$shared $files\"]} {\n+    if {![ld_link \"$CC $NOSANITIZE_CFLAGS\" $tmpdir/$libname.so \"$shared $files\"]} {\n \tfail $test\n \treturn\n     }\n@@ -294,14 +294,14 @@ proc build_exec { test execname objs flags dat dynsymexp symexp} {\n     global srcdir\n     global subdir\n     global exec_output\n-    global NOSANTIZE_CFLAGS\n+    global NOSANITIZE_CFLAGS\n \n     set files \"\"\n     foreach obj $objs {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link $CC $tmpdir/$execname \"$flags $NOSANTIZE_CFLAGS $files\"]} {\n+    if {![ld_link $CC $tmpdir/$execname \"$flags $NOSANITIZE_CFLAGS $files\"]} {\n \tfail \"$test\"\n \treturn\n     }\n@@ -357,7 +357,7 @@ if {[check_lto_available]} {\n }\n \n # Disable all sanitizers.\n-append cc_cmd \" $NOSANTIZE_CFLAGS\"\n+append cc_cmd \" $NOSANITIZE_CFLAGS\"\n \n # Old version of GCC for MIPS default to enabling -fpic\n # and get confused if it is used on the command line.\n@@ -438,7 +438,7 @@ run_dump_test $srcdir/$subdir/size2\n \n if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n     || ![ld_link $cc_cmd $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $NOSANTIZE_CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS $NOSANITIZE_CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n     || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n     unresolved \"ELF weak (alias)\""
    },
    {
      "sha": "02da44f27a0ccb6e39fe660c8a63c40b78e7d41c",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -23,7 +23,7 @@ if ![check_gc_sections_available] {\n     return\n }\n \n-set cflags \"-ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n+set cflags \"-ffunction-sections -fdata-sections $NOSANITIZE_CFLAGS\"\n set objfile \"tmpdir/gc.o\"\n \n if { [istarget powerpc*-*-*] && ![istarget powerpc64*-*-*] } {"
    },
    {
      "sha": "adad1e4895ca82de49645932786b71c50ac12af9",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -71,11 +71,11 @@ set lto_link_tests [list \\\n    \"-O2 -flto -fuse-linker-plugin\" \"-flto -fuse-linker-plugin\" \\\n    {lto-1a.c lto-1b.c} {} \"lto-1.exe\"] \\\n   [list \"Compile 2\" \\\n-   \"\" \"-O2 -flto -fuse-linker-plugin $NOSANTIZE_CFLAGS\" \\\n+   \"\" \"-O2 -flto -fuse-linker-plugin $NOSANITIZE_CFLAGS\" \\\n    {lto-2.c} {} \"\"] \\\n   [list \"LTO 2\" \\\n    \"-static -O2 -flto -fuse-linker-plugin tmpdir/lto-2.o -lm\" \\\n-   \"$NOSANTIZE_CFLAGS\" \\\n+   \"$NOSANITIZE_CFLAGS\" \\\n    {dummy.c} {} \"lto-2.exe\"] \\\n   [list \"Compile 3a\" \\\n    \"\" \"-flto\" \\\n@@ -138,11 +138,11 @@ set lto_link_tests [list \\\n    \"\" \"\" \\\n    {pr12758a.s} {} \"\"] \\\n   [list \"Build libpr12758.a\" \\\n-   \"\" \"-flto -O2 $lto_fat $NOSANTIZE_CFLAGS\" \\\n+   \"\" \"-flto -O2 $lto_fat $NOSANITIZE_CFLAGS\" \\\n    {pr12758b.c} {} \"libpr12758.a\"] \\\n   [list \"PR ld/12758\" \\\n-   \"$NOPIE_LDFLAGS $NOSANTIZE_CFLAGS -O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \\\n-   \"$NOSANTIZE_CFLAGS\" \\\n+   \"$NOPIE_LDFLAGS $NOSANITIZE_CFLAGS -O2 -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin tmpdir/pr12758a.o -Wl,--start-group tmpdir/libpr12758.a -Wl,--end-group\" \\\n+   \"$NOSANITIZE_CFLAGS\" \\\n    {dummy.c} {} \"pr12758.exe\"] \\\n   [list \"Build libpr13183.a\" \\\n    \"-T\" \"-flto -O2 $lto_fat\" \\\n@@ -458,12 +458,12 @@ set lto_link_symbol_tests [list \\\n    \"-O2 -flto -fuse-linker-plugin tmpdir/lto-9.o\" \"\" \\\n    {dummy.c} {{\"nm\" {-C} \"lto-9.d\"}} \"lto-9.exe\" \"c++\"] \\\n   [list \"LTO 16a symbol\" \\\n-   \"-O2 $NOSANTIZE_CFLAGS -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin\" \\\n-   \"-flto $NOSANTIZE_CFLAGS\" \\\n+   \"-O2 $NOSANITIZE_CFLAGS -Wl,-e,foo -nostdlib -flto -fuse-linker-plugin\" \\\n+   \"-flto $NOSANITIZE_CFLAGS\" \\\n    {lto-16a.c} {{\"nm\" {} \"lto-16a.d\"}} \"lto-16.exe\" \"c\"] \\\n   [list \"LTO 16b symbol\" \\\n-   \"-O2 $NOSANTIZE_CFLAGS -Wl,-e,foo -u bar -nostdlib -flto -fuse-linker-plugin\" \\\n-   \"-flto $NOSANTIZE_CFLAGS\" \\\n+   \"-O2 $NOSANITIZE_CFLAGS -Wl,-e,foo -u bar -nostdlib -flto -fuse-linker-plugin\" \\\n+   \"-flto $NOSANITIZE_CFLAGS\" \\\n    {lto-16a.c lto-16b.c} {{\"nm\" {} \"lto-16b.d\"}} \"lto-16b.exe\" \"c\"] \\\n   [list \"PR ld/13183\" \\\n    \"-O2 -flto -fuse-linker-plugin tmpdir/pr13183b.o tmpdir/libpr13183.a\" \"\" \\\n@@ -669,7 +669,7 @@ if { [at_least_gcc_version 4 7] } {\n \trun_cc_link_tests [list \\\n \t    [list \\\n \t\t\"Build pr22721a.so\" \\\n-\t\t\"-shared $NOSANTIZE_CFLAGS -nostdlib -nostartfiles \\\n+\t\t\"-shared $NOSANITIZE_CFLAGS -nostdlib -nostartfiles \\\n \t\t -Wl,-version-script,pr22721.t\" \\\n \t\t\"\" \\\n \t\t{pr22721a.s} \\\n@@ -678,16 +678,16 @@ if { [at_least_gcc_version 4 7] } {\n \t    ] \\\n \t    [list \\\n \t\t\"Build pr22721b.o\" \\\n-\t\t\"$plug_opt $NOSANTIZE_CFLAGS\" \\\n+\t\t\"$plug_opt $NOSANITIZE_CFLAGS\" \\\n \t\t\"-O2 -fPIC -flto $lto_no_fat\" \\\n \t\t{pr22721b.c} \\\n \t    ] \\\n \t    [list \\\n \t\t\"Build PR ld/pr22721\" \\\n \t\t\"-O2 -flto -fuse-linker-plugin -nostdlib -nostartfiles \\\n-\t\t $NOSANTIZE_CFLAGS \\\n+\t\t $NOSANITIZE_CFLAGS \\\n \t\t -Wl,-e,_start tmpdir/pr22721b.o tmpdir/pr22721a.so\" \\\n-\t\t\"$NOSANTIZE_CFLAGS\" \\\n+\t\t\"$NOSANITIZE_CFLAGS\" \\\n \t\t{dummy.c} \\\n \t\t{} \\\n \t\t\"pr22721.exe\""
    },
    {
      "sha": "b30b05f1449eea0e7f3158f609aef22fb329c2b7",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -94,7 +94,7 @@ set failed_compile 0\n set _ \"\"\n set plugin_nm_output \"\"\n set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANTIZE_CFLAGS\"\n+append CFLAGS \" $NOSANITIZE_CFLAGS\"\n \n if { $can_compile && \\\n \t(![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/main.c tmpdir/main.o] \\"
    },
    {
      "sha": "94452f747948ed0a519775034db023f9d418e2d4",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -63,8 +63,8 @@ if [istarget tic6x*-*-*] {\n     set CFLAGS \"-mno-dsbt -msdata=none\"\n }\n \n-if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n-     || ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n+if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n+     || ![ld_compile \"$CC $NOSANITIZE_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n     unresolved $test1\n     unresolved $test2\n     set CFLAGS \"$old_CFLAGS\"\n@@ -101,7 +101,7 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references within a single object.\n \n-if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n+if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n     unresolved $test2\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\"\n@@ -126,7 +126,7 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references for ld -r\n \n-if { ![ld_compile \"$CC $NOSANTIZE_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n+if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n     unresolved $test3\n     set CFLAGS \"$old_CFLAGS\"\n     set CC \"$old_CC\""
    },
    {
      "sha": "f8c143fa15b4949afc8a12146a0e300c2794aabc",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -46,8 +46,8 @@ set seltests {\n     {A::foo() B::foo() dropme1() dropme2()} {*-*-*}}\n }\n \n-set cflags \"-w -O -ffunction-sections -fdata-sections $NOSANTIZE_CFLAGS\"\n-set cxxflags \"-fno-exceptions -fno-rtti $NOSANTIZE_CFLAGS\"\n+set cflags \"-w -O -ffunction-sections -fdata-sections $NOSANITIZE_CFLAGS\"\n+set cxxflags \"-fno-exceptions -fno-rtti $NOSANITIZE_CFLAGS\"\n set ldflags \"--gc-sections -Bstatic\"\n \n if [istarget mips*-*] {"
    },
    {
      "sha": "a130fffecc70cf006aed5f2d7eecc3901050c172",
      "filename": "ld/testsuite/ld-shared/shared.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-shared/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-shared/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-shared/shared.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -67,7 +67,7 @@ set shared_needs_pic \"no\"\n \n # Disable all sanitizers.\n set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANTIZE_CFLAGS\"\n+append CFLAGS \" $NOSANITIZE_CFLAGS\"\n \n if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n "
    },
    {
      "sha": "d859a6a46d5959d8c4ae8e15eb3bdf7dc1205f4c",
      "filename": "ld/testsuite/ld-size/size.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-size/size.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-size/size.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-size/size.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -134,8 +134,8 @@ run_cc_link_tests [list \\\n     ] \\\n     [list \\\n \t\"Build libsize-9.so\" \\\n-\t\"-shared $NOSANTIZE_CFLAGS\" \\\n-\t\"-fPIC $NOSANTIZE_CFLAGS\" \\\n+\t\"-shared $NOSANITIZE_CFLAGS\" \\\n+\t\"-fPIC $NOSANITIZE_CFLAGS\" \\\n \t{size-9b.c} \\\n \t{{readelf -rW size-9.rd}} \\\n \t\"libsize-9.so\" \\\n@@ -284,12 +284,12 @@ run_ld_link_exec_tests [list \\\n     ] \\\n     [list \\\n \t\"Run size-9\" \\\n-\t\"-Wl,--no-as-needed tmpdir/libsize-9.so $NOSANTIZE_CFLAGS\" \\\n+\t\"-Wl,--no-as-needed tmpdir/libsize-9.so $NOSANITIZE_CFLAGS\" \\\n \t\"\" \\\n \t{size-9a.c} \\\n \t\"size-9\" \\\n \t\"size-9.out\" \\\n-\t\"$NOSANTIZE_CFLAGS\" \\\n+\t\"$NOSANITIZE_CFLAGS\" \\\n     ] \\\n     [list \\\n \t\"Run size-10\" \\"
    },
    {
      "sha": "3b279fe805ca353d6d07a345f54b1c079739aa3e",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -351,11 +351,11 @@ if { ![check_compiler_available] } {\n # Pass -fplt to CC and CXX since -fno-plt doesn't work with S-records\n # tests. Also add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if PIE doesn't work\n # with S-records.  Also add $NOCF_PROTECTION_CFLAGS for S-records.\n-# Also add $NOSANTIZE_CFLAGS for S-records.\n+# Also add $NOSANITIZE_CFLAGS for S-records.\n set old_CC \"$CC\"\n-set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANTIZE_CFLAGS\"\n+set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS\"\n set old_CXX \"$CXX\"\n-set CXX \"$CXX $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANTIZE_CFLAGS\"\n+set CXX \"$CXX $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS\"\n \n # S-records can't handle .note.gnu.property sections.\n if { [is_elf_format] \\"
    },
    {
      "sha": "3c0b4347d023e2572a81d0e2a598453e289c041a",
      "filename": "ld/testsuite/ld-x86-64/x86-64.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-x86-64/x86-64.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e062fcc8c2bf4c36386dce68ba7f1d408f22dedc/ld/testsuite/ld-x86-64/x86-64.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/x86-64.exp?ref=e062fcc8c2bf4c36386dce68ba7f1d408f22dedc",
      "patch": "@@ -703,7 +703,7 @@ if { [isnative] && [check_compiler_available] } {\n     run_cc_link_tests [list \\\n \t[list \\\n \t    \"Helper X32 DSO from x86-64 object\" \"\" \\\n-\t    \"-m64 $NOSANTIZE_CFLAGS -fPIC -g\" \\\n+\t    \"-m64 $NOSANITIZE_CFLAGS -fPIC -g\" \\\n \t    {simple.c} {} \"libsimple.a\" \\\n \t] \\\n     ]\n@@ -721,7 +721,7 @@ if { [isnative] && [check_compiler_available] } {\n \t[list \\\n \t    \"X32 DSO from x86-64 object\" \\\n \t    \"-shared -melf32_x86_64 tmpdir/simple-x32.o\" \\\n-\t    \"$NOSANTIZE_CFLAGS\" \\\n+\t    \"$NOSANITIZE_CFLAGS\" \\\n \t    \"--x32 -mx86-used-note=yes\" \\\n \t    {dummy.s} {{readelf {-s --wide} x86-64-x32.rd}} \\\n \t    \"x86-64-x32\" \\"
    }
  ]
}