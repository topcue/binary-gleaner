{
  "sha": "660da3c14b3b1815d6b3f1849a7225a10d819042",
  "node_id": "C_kwDOANOeidoAKDY2MGRhM2MxNGIzYjE4MTVkNmIzZjE4NDlhNzIyNWExMGQ4MTkwNDI",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-01-22T23:32:48Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2022-02-14T13:22:33Z"
    },
    "message": "Remove LA_PRINT_STRING\n\nThis removes the LA_PRINT_STRING macro, in favor of using ordinary\nmethod calls.",
    "tree": {
      "sha": "569508305b97cfb486866c69a09fa3635e9cd213",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/569508305b97cfb486866c69a09fa3635e9cd213"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/660da3c14b3b1815d6b3f1849a7225a10d819042",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/660da3c14b3b1815d6b3f1849a7225a10d819042",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/660da3c14b3b1815d6b3f1849a7225a10d819042",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/660da3c14b3b1815d6b3f1849a7225a10d819042/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "362501dc5c85ae67c7141292ed5be1bfbd334645",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/362501dc5c85ae67c7141292ed5be1bfbd334645",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/362501dc5c85ae67c7141292ed5be1bfbd334645"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 8,
    "deletions": 18
  },
  "files": [
    {
      "sha": "0d30700c06d17f68ccbb3389b648834f68659df5",
      "filename": "gdb/c-valprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/c-valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/c-valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-valprint.c?ref=660da3c14b3b1815d6b3f1849a7225a10d819042",
      "patch": "@@ -277,7 +277,7 @@ c_value_print_array (struct value *val,\n \t\t   ++temp_len)\n \t\t;\n \n-\t      /* Force LA_PRINT_STRING to print ellipses if\n+\t      /* Force printstr to print ellipses if\n \t\t we've printed the maximum characters and\n \t\t the next character is not \\000.  */\n \t      if (temp_len == options->print_max && temp_len < len)\n@@ -292,8 +292,8 @@ c_value_print_array (struct value *val,\n \t      len = temp_len;\n \t    }\n \n-\t  LA_PRINT_STRING (stream, unresolved_elttype, valaddr, len,\n-\t\t\t   NULL, force_ellipses, options);\n+\t  current_language->printstr (stream, unresolved_elttype, valaddr, len,\n+\t\t\t\t      NULL, force_ellipses, options);\n \t}\n       else\n \t{"
    },
    {
      "sha": "f2885000259b2df35dbd0f555a15323f88c22630",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=660da3c14b3b1815d6b3f1849a7225a10d819042",
      "patch": "@@ -750,15 +750,6 @@ extern void language_info ();\n extern enum language set_language (enum language);\n \f\n \n-/* This page contains functions that return things that are\n-   specific to languages.  Each of these functions is based on\n-   the current setting of working_lang, which the user sets\n-   with the \"set language\" command.  */\n-\n-#define LA_PRINT_STRING(stream, elttype, string, length, encoding, force_ellipses, options) \\\n-  (current_language->printstr (stream, elttype, string, length, \\\n-\t\t\t       encoding, force_ellipses,options))\n-\n /* Test a character to decide whether it can be printed in literal form\n    or needs to be printed in another representation.  For example,\n    in C the literal form of the character with octal value 141 is 'a'"
    },
    {
      "sha": "d6ec64845f4be9bd3eb10664ac86cb623d5b3b42",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=660da3c14b3b1815d6b3f1849a7225a10d819042",
      "patch": "@@ -2767,10 +2767,9 @@ val_print_string (struct type *elttype, const char *encoding,\n      But if we fetch something and then get an error, print the string\n      and then the error message.  */\n   if (err == 0 || bytes_read > 0)\n-    {\n-      LA_PRINT_STRING (stream, elttype, buffer.get (), bytes_read / width,\n-\t\t       encoding, force_ellipsis, options);\n-    }\n+    current_language->printstr (stream, elttype, buffer.get (),\n+\t\t\t\tbytes_read / width,\n+\t\t\t\tencoding, force_ellipsis, options);\n \n   if (err != 0)\n     {"
    },
    {
      "sha": "5617131da2012192dcc3e3352dfacdd67ffeaf69",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/660da3c14b3b1815d6b3f1849a7225a10d819042/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=660da3c14b3b1815d6b3f1849a7225a10d819042",
      "patch": "@@ -2232,8 +2232,8 @@ varobj_value_get_print_value (struct value *value,\n \n   /* If the THEVALUE has contents, it is a regular string.  */\n   if (!thevalue.empty ())\n-    LA_PRINT_STRING (&stb, type, (gdb_byte *) thevalue.c_str (),\n-\t\t     len, encoding.get (), 0, &opts);\n+    current_language->printstr (&stb, type, (gdb_byte *) thevalue.c_str (),\n+\t\t\t\tlen, encoding.get (), 0, &opts);\n   else if (string_print)\n     /* Otherwise, if string_print is set, and it is not a regular\n        string, it is a lazy string.  */"
    }
  ]
}