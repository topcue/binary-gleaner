{
  "sha": "e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZThlNWMxNTg1ZGM5ZGYwYjIxZmZkZGQ3ZTZlOTA1M2I1NTEyYTcyNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T00:49:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-30T02:29:07Z"
    },
    "message": "Change is_valid_DW_AT_defaulted to a method on attribute\n\nThis changes is_valid_DW_AT_defaulted to be a method on struct attribute.\nNow it correctly respects the form of the attribute.\n\ngdb/ChangeLog\n2020-09-29  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (is_valid_DW_AT_defaulted): Move to attribute.c.\n\t(dwarf2_add_member_fn): Update.\n\t* dwarf2/attribute.h (struct attribute) <defaulted>: Declare.\n\t* dwarf2/attribute.c (attribute::defaulted): New method, from\n\tis_valid_DW_AT_defaulted.",
    "tree": {
      "sha": "2cd3086e7ad4975c66caa986552493a2f9debd4a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2cd3086e7ad4975c66caa986552493a2f9debd4a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d4df075e8b946da354dc11690a793cf5c17394aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4df075e8b946da354dc11690a793cf5c17394aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d4df075e8b946da354dc11690a793cf5c17394aa"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 40,
    "deletions": 21
  },
  "files": [
    {
      "sha": "dbbd0caa1467f2648b6c0719d22d4e5b1d86d64e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
      "patch": "@@ -1,3 +1,11 @@\n+2020-09-29  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (is_valid_DW_AT_defaulted): Move to attribute.c.\n+\t(dwarf2_add_member_fn): Update.\n+\t* dwarf2/attribute.h (struct attribute) <defaulted>: Declare.\n+\t* dwarf2/attribute.c (attribute::defaulted): New method, from\n+\tis_valid_DW_AT_defaulted.\n+\n 2020-09-29  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (dw2_get_file_names_reader)"
    },
    {
      "sha": "1e5613963c12da6507696963a2799430f35aaaa7",
      "filename": "gdb/dwarf2/attribute.c",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/attribute.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/attribute.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.c?ref=e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
      "patch": "@@ -199,3 +199,26 @@ attribute::form_requires_reprocessing () const\n \t  || form == DW_FORM_addrx\n \t  || form == DW_FORM_GNU_addr_index);\n }\n+\n+/* See attribute.h.  */\n+\n+dwarf_defaulted_attribute\n+attribute::defaulted () const\n+{\n+  LONGEST value = constant_value (-1);\n+\n+  switch (value)\n+    {\n+    case DW_DEFAULTED_no:\n+    case DW_DEFAULTED_in_class:\n+    case DW_DEFAULTED_out_of_class:\n+      return (dwarf_defaulted_attribute) value;\n+    }\n+\n+  /* If the form was not constant, we already complained in\n+     constant_value, so there's no need to complain again.  */\n+  if (form_is_constant ())\n+    complaint (_(\"unrecognized DW_AT_defaulted value (%s)\"),\n+\t       plongest (value));\n+  return DW_DEFAULTED_no;\n+}"
    },
    {
      "sha": "0e29f80d321852e5d924e6fd01b36d93af6e1fcb",
      "filename": "gdb/dwarf2/attribute.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/attribute.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/attribute.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/attribute.h?ref=e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
      "patch": "@@ -29,6 +29,7 @@\n \n #include \"dwarf2.h\"\n #include \"gdbtypes.h\"\n+#include \"gdbsupport/gdb_optional.h\"\n \n /* Blocks are a bunch of untyped bytes.  */\n struct dwarf_block\n@@ -250,6 +251,12 @@ struct attribute\n     return requires_reprocessing;\n   }\n \n+  /* Return the value as one of the recognized enum\n+     dwarf_defaulted_attribute constants according to DWARF5 spec,\n+     Table 7.24.  If the value is incorrect, or if this attribute has\n+     the wrong form, then a complaint is issued and DW_DEFAULTED_no is\n+     returned.  */\n+  dwarf_defaulted_attribute defaulted () const;\n \n   ENUM_BITFIELD(dwarf_attribute) name : 15;\n "
    },
    {
      "sha": "86a7918a4deff7209c7127467c90baa435501898",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 21,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8e5c1585dc9df0b21ffddd7e6e9053b5512a726/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=e8e5c1585dc9df0b21ffddd7e6e9053b5512a726",
      "patch": "@@ -15538,25 +15538,6 @@ dwarf2_is_constructor (struct die_info *die, struct dwarf2_cu *cu)\n \t  && (type_name[len] == '\\0' || type_name[len] == '<'));\n }\n \n-/* Check if the given VALUE is a recognized enum\n-   dwarf_defaulted_attribute constant according to DWARF5 spec,\n-   Table 7.24.  */\n-\n-static bool\n-is_valid_DW_AT_defaulted (ULONGEST value)\n-{\n-  switch (value)\n-    {\n-    case DW_DEFAULTED_no:\n-    case DW_DEFAULTED_in_class:\n-    case DW_DEFAULTED_out_of_class:\n-      return true;\n-    }\n-\n-  complaint (_(\"unrecognized DW_AT_defaulted value (%s)\"), pulongest (value));\n-  return false;\n-}\n-\n /* Add a member function to the proper fieldlist.  */\n \n static void\n@@ -15666,8 +15647,8 @@ dwarf2_add_member_fn (struct field_info *fip, struct die_info *die,\n \n   /* Check for defaulted methods.  */\n   attr = dwarf2_attr (die, DW_AT_defaulted, cu);\n-  if (attr != nullptr && is_valid_DW_AT_defaulted (DW_UNSND (attr)))\n-    fnp->defaulted = (enum dwarf_defaulted_attribute) DW_UNSND (attr);\n+  if (attr != nullptr)\n+    fnp->defaulted = attr->defaulted ();\n \n   /* Check for deleted methods.  */\n   attr = dwarf2_attr (die, DW_AT_deleted, cu);"
    }
  ]
}