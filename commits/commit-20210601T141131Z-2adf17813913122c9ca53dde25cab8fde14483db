{
  "sha": "2adf17813913122c9ca53dde25cab8fde14483db",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmFkZjE3ODEzOTEzMTIyYzljYTUzZGRlMjVjYWI4ZmRlMTQ0ODNkYg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-06-01T14:11:30Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-06-01T14:11:31Z"
    },
    "message": "Apply silent Makefile rules to gdb/testsuite\n\nThis applies the silent-rules.mk treatment to gdb/testsuite/Makefile.\n\ngdb/ChangeLog\n2021-06-01  Tom Tromey  <tromey@adacore.com>\n\n\t* silent-rules.mk (ECHO_CC): New variable.\n\ngdb/testsuite/ChangeLog\n2021-06-01  Tom Tromey  <tromey@adacore.com>\n\n\t* Makefile.in (all): Don't print anything.\n\t($(abs_builddir)/site.exp site.exp): Use $(ECHO_GEN).\n\t(expect-read1): Likewise.\n\t(read1.so): Use $(ECHO_CC).\n\tInclude silent-rules.mk.",
    "tree": {
      "sha": "f3a47e1b0d3b81f28f15bedb7ef3b7357dea4886",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f3a47e1b0d3b81f28f15bedb7ef3b7357dea4886"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2adf17813913122c9ca53dde25cab8fde14483db",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2adf17813913122c9ca53dde25cab8fde14483db",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2adf17813913122c9ca53dde25cab8fde14483db",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2adf17813913122c9ca53dde25cab8fde14483db/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bdbbcd577460964c28e7e89593ec3ebbf6e9208b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bdbbcd577460964c28e7e89593ec3ebbf6e9208b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bdbbcd577460964c28e7e89593ec3ebbf6e9208b"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 47,
    "deletions": 33
  },
  "files": [
    {
      "sha": "137919e4ffd120c18b716b09ec85363579273679",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2adf17813913122c9ca53dde25cab8fde14483db/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2adf17813913122c9ca53dde25cab8fde14483db/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=2adf17813913122c9ca53dde25cab8fde14483db",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* silent-rules.mk (ECHO_CC): New variable.\n+\n 2021-06-01  Tom Tromey  <tromey@adacore.com>\n \n \t* Makefile.in (SUBDIRS): Add testsuite."
    },
    {
      "sha": "772bd6728be3da99b2563575bbcffdd4922c3181",
      "filename": "gdb/silent-rules.mk",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2adf17813913122c9ca53dde25cab8fde14483db/gdb/silent-rules.mk",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2adf17813913122c9ca53dde25cab8fde14483db/gdb/silent-rules.mk",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/silent-rules.mk?ref=2adf17813913122c9ca53dde25cab8fde14483db",
      "patch": "@@ -2,6 +2,7 @@\n V ?= 0\n ifeq ($(V),0)\n ECHO_CXX =    @echo \"  CXX    $@\";\n+ECHO_CC  =    @echo \"  CC     $@\";\n ECHO_CXXLD =  @echo \"  CXXLD  $@\";\n ECHO_REGDAT = @echo \"  REGDAT $@\";\n ECHO_GEN =    @echo \"  GEN    $@\";"
    },
    {
      "sha": "016bb722037193301722b51c83e6e1ab132230f3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2adf17813913122c9ca53dde25cab8fde14483db/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2adf17813913122c9ca53dde25cab8fde14483db/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=2adf17813913122c9ca53dde25cab8fde14483db",
      "patch": "@@ -1,3 +1,11 @@\n+2021-06-01  Tom Tromey  <tromey@adacore.com>\n+\n+\t* Makefile.in (all): Don't print anything.\n+\t($(abs_builddir)/site.exp site.exp): Use $(ECHO_GEN).\n+\t(expect-read1): Likewise.\n+\t(read1.so): Use $(ECHO_CC).\n+\tInclude silent-rules.mk.\n+\n 2021-06-01  Tom Tromey  <tromey@adacore.com>\n \n \t* aclocal.m4, configure.ac, configure: Remove."
    },
    {
      "sha": "2c0482cef1b09a5aef6bf35604e17f9a5a994249",
      "filename": "gdb/testsuite/Makefile.in",
      "status": "modified",
      "additions": 34,
      "deletions": 33,
      "changes": 67,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2adf17813913122c9ca53dde25cab8fde14483db/gdb/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2adf17813913122c9ca53dde25cab8fde14483db/gdb/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/Makefile.in?ref=2adf17813913122c9ca53dde25cab8fde14483db",
      "patch": "@@ -96,7 +96,7 @@ TARGET_FLAGS_TO_PASS = \\\n         \"RUNTESTFLAGS=$(RUNTESTFLAGS)\"\n \n all:\n-\t@echo \"Nothing to be done for all...\"\n+\t@:\n \n .NOEXPORT:\n INFODIRS=doc\n@@ -117,26 +117,26 @@ uninstall: force\n # $(RUNTEST) is looking up `site.exp' only in the current directory.\n \n $(abs_builddir)/site.exp site.exp: Makefile\n-\t@echo \"Making a new config file...\"\n-\t-@rm -f ./tmp?\n-\t@touch site.exp\n-\t-@mv site.exp site.bak\n-\t@echo \"## these variables are automatically generated by make ##\" > ./tmp0\n-\t@echo \"# Do not edit here. If you wish to override these values\" >> ./tmp0\n-\t@echo \"# add them to the last section\" >> ./tmp0\n-\t@echo \"set host_triplet ${host_canonical}\" >> ./tmp0\n-\t@echo \"set target_alias $(target_alias)\" >> ./tmp0\n-\t@echo \"set target_triplet ${target_canonical}\" >> ./tmp0\n-\t@echo \"set build_triplet ${build_canonical}\" >> ./tmp0\n-\t@echo \"set srcdir ${abs_srcdir}\" >> ./tmp0\n-\t@echo \"set tool gdb\" >> ./tmp0\n-\t@echo \"set enable_libctf ${enable_libctf}\" >> ./tmp0\n-\t@echo 'source $${srcdir}/lib/append_gdb_boards_dir.exp' >> ./tmp0\n-\t@echo \"## All variables above are generated by configure. Do Not Edit ##\" >> ./tmp0\n-\t\t@cat ./tmp0 > site.exp\n-\t@cat site.bak | sed \\\n-\t\t\t-e '1,/^## All variables above are.*##/ d' >> site.exp\n-\t-@rm -f ./tmp?\n+\t$(ECHO_GEN) \\\n+\trm -f ./tmp?; \\\n+\ttouch site.exp; \\\n+\tmv site.exp site.bak; \\\n+\techo \"## these variables are automatically generated by make ##\" > ./tmp0; \\\n+\techo \"# Do not edit here. If you wish to override these values\" >> ./tmp0; \\\n+\techo \"# add them to the last section\" >> ./tmp0; \\\n+\techo \"set host_triplet ${host_canonical}\" >> ./tmp0; \\\n+\techo \"set target_alias $(target_alias)\" >> ./tmp0; \\\n+\techo \"set target_triplet ${target_canonical}\" >> ./tmp0; \\\n+\techo \"set build_triplet ${build_canonical}\" >> ./tmp0; \\\n+\techo \"set srcdir ${abs_srcdir}\" >> ./tmp0; \\\n+\techo \"set tool gdb\" >> ./tmp0; \\\n+\techo \"set enable_libctf ${enable_libctf}\" >> ./tmp0; \\\n+\techo 'source $${srcdir}/lib/append_gdb_boards_dir.exp' >> ./tmp0; \\\n+\techo \"## All variables above are generated by configure. Do Not Edit ##\" >> ./tmp0; \\\n+\tcat ./tmp0 > site.exp; \\\n+\tcat site.bak | sed \\\n+\t\t\t-e '1,/^## All variables above are.*##/ d' >> site.exp; \\\n+\trm -f ./tmp?\n \n installcheck:\n \n@@ -365,27 +365,28 @@ TAGS: force\n \n # Build the expect wrapper script that preloads the read1.so library.\n expect-read1:\n-\t@echo Making expect-read1\n-\t@rm -f expect-read1-tmp\n-\t@touch expect-read1-tmp\n-\t@echo \"# THIS FILE IS GENERATED -*- buffer-read-only: t -*- \\n\" >>expect-read1-tmp\n-\t@echo \"# vi:set ro: */\\n\\n\" >>expect-read1-tmp\n-\t@echo \"# To regenerate this file, run:\\n\" >>expect-read1-tmp\n-\t@echo \"#      make clean; make/\\n\" >>expect-read1-tmp\n-\t@echo \"export LD_PRELOAD=`pwd`/read1.so\" >>expect-read1-tmp\n-\t@echo 'exec expect \"$$@\"' >>expect-read1-tmp\n-\t@chmod +x expect-read1-tmp\n-\t@mv expect-read1-tmp expect-read1\n+\t$(ECHO_GEN) \\\n+\trm -f expect-read1-tmp; \\\n+\ttouch expect-read1-tmp; \\\n+\techo \"# THIS FILE IS GENERATED -*- buffer-read-only: t -*- \\n\" >>expect-read1-tmp; \\\n+\techo \"# vi:set ro: */\\n\\n\" >>expect-read1-tmp; \\\n+\techo \"# To regenerate this file, run:\\n\" >>expect-read1-tmp; \\\n+\techo \"#      make clean; make/\\n\" >>expect-read1-tmp; \\\n+\techo \"export LD_PRELOAD=`pwd`/read1.so\" >>expect-read1-tmp; \\\n+\techo 'exec expect \"$$@\"' >>expect-read1-tmp; \\\n+\tchmod +x expect-read1-tmp; \\\n+\tmv expect-read1-tmp expect-read1\n \n # Build the read1.so preload library.  This overrides the `read'\n # function, making it read one byte at a time.  Running the testsuite\n # with this catches racy tests.\n read1.so: lib/read1.c\n-\t$(CC) -o $@ ${srcdir}/lib/read1.c -Wall -g -shared -fPIC $(CFLAGS)\n+\t$(ECHO_CC) $(CC) -o $@ ${srcdir}/lib/read1.c -Wall -g -shared -fPIC $(CFLAGS)\n \n # Build the read1 machinery.\n .PHONY: read1\n read1: read1.so expect-read1\n \n # Disable implicit make rules.\n include $(srcdir)/../disable-implicit-rules.mk\n+include $(srcdir)/../silent-rules.mk"
    }
  ]
}