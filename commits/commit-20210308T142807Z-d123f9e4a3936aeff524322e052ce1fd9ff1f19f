{
  "sha": "d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDEyM2Y5ZTRhMzkzNmFlZmY1MjQzMjJlMDUyY2UxZmQ5ZmYxZjE5Zg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:07Z"
    },
    "message": "Split out eval_op_rust_ind\n\nThis splits UNOP_IND into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (eval_op_rust_ind): New function.\n\t(rust_evaluate_subexp): Use it.",
    "tree": {
      "sha": "2b2654bbb78263a46a1a7193c4f731fb9e7b5fdf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2b2654bbb78263a46a1a7193c4f731fb9e7b5fdf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d123f9e4a3936aeff524322e052ce1fd9ff1f19f/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "984af2cb260aec903280aa3f1dd47be6d5dc69de",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/984af2cb260aec903280aa3f1dd47be6d5dc69de",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/984af2cb260aec903280aa3f1dd47be6d5dc69de"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 21,
    "deletions": 6
  },
  "files": [
    {
      "sha": "22c017f0ef090329e808942abd715de01c044614",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d123f9e4a3936aeff524322e052ce1fd9ff1f19f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d123f9e4a3936aeff524322e052ce1fd9ff1f19f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (eval_op_rust_ind): New function.\n+\t(rust_evaluate_subexp): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* rust-lang.c (rust_subscript): Change parameters."
    },
    {
      "sha": "173b418e2f54796bb59287df23671eb122280d6d",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d123f9e4a3936aeff524322e052ce1fd9ff1f19f/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d123f9e4a3936aeff524322e052ce1fd9ff1f19f/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=d123f9e4a3936aeff524322e052ce1fd9ff1f19f",
      "patch": "@@ -1322,6 +1322,21 @@ rust_subscript (struct type *expect_type, struct expression *exp,\n   return result;\n }\n \n+/* A helper function for UNOP_IND.  */\n+\n+static struct value *\n+eval_op_rust_ind (struct type *expect_type, struct expression *exp,\n+\t\t  enum noside noside,\n+\t\t  struct value *value)\n+{\n+  gdb_assert (noside == EVAL_NORMAL);\n+  struct value *trait_ptr = rust_get_trait_object_pointer (value);\n+  if (trait_ptr != NULL)\n+    value = trait_ptr;\n+\n+  return value_ind (value);\n+}\n+\n /* evaluate_exp implementation for Rust.  */\n \n static struct value *\n@@ -1341,12 +1356,7 @@ rust_evaluate_subexp (struct type *expect_type, struct expression *exp,\n \t    ++*pos;\n \t    struct value *value = evaluate_subexp (expect_type, exp, pos,\n \t\t\t\t\t\t   noside);\n-\n-\t    struct value *trait_ptr = rust_get_trait_object_pointer (value);\n-\t    if (trait_ptr != NULL)\n-\t      value = trait_ptr;\n-\n-\t    result = value_ind (value);\n+\t    result = eval_op_rust_ind (expect_type, exp, noside, value);\n \t  }\n       }\n       break;"
    }
  ]
}