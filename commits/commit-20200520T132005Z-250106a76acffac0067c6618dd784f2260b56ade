{
  "sha": "250106a76acffac0067c6618dd784f2260b56ade",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjUwMTA2YTc2YWNmZmFjMDA2N2M2NjE4ZGQ3ODRmMjI2MGI1NmFkZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-05T12:57:04Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-05-20T13:20:05Z"
    },
    "message": "Remove bound_name static from ada-lang.c\n\nada-lang.c has a \"bound_name\" static that is used when finding fields\nin a structure in some cases.  This patch removes it in favor of\ncomputing the desired field name at runtime; this avoids an artificial\nlimit.\n\nI'm checking this in.  Tested on x86-64 Fedora 30, and also on the\ninternal AdaCore test suite.\n\ngdb/ChangeLog\n2020-05-20  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (bound_name, MAX_ADA_DIMENS): Remove.\n        (desc_one_bound, desc_index_type): Compute field name.",
    "tree": {
      "sha": "f2330572c40a74d0e46f712a17e31daf431c7b0f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f2330572c40a74d0e46f712a17e31daf431c7b0f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/250106a76acffac0067c6618dd784f2260b56ade",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/250106a76acffac0067c6618dd784f2260b56ade",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/250106a76acffac0067c6618dd784f2260b56ade",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/250106a76acffac0067c6618dd784f2260b56ade/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "11c0dd51e8675c923fe40f2d1ad09269bfe9978a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11c0dd51e8675c923fe40f2d1ad09269bfe9978a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/11c0dd51e8675c923fe40f2d1ad09269bfe9978a"
    }
  ],
  "stats": {
    "total": 28,
    "additions": 14,
    "deletions": 14
  },
  "files": [
    {
      "sha": "bef88d0df6a32fa4c3009e9bfbc2ff5a7c156bab",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/250106a76acffac0067c6618dd784f2260b56ade/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/250106a76acffac0067c6618dd784f2260b56ade/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=250106a76acffac0067c6618dd784f2260b56ade",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-20  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (bound_name, MAX_ADA_DIMENS): Remove.\n+        (desc_one_bound, desc_index_type): Compute field name.\n+\n 2020-05-20  Tom de Vries  <tdevries@suse.de>\n \n \tPR symtab/25833"
    },
    {
      "sha": "9f6485e04ab74069b5eff00968f694ab7a1ec794",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 14,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/250106a76acffac0067c6618dd784f2260b56ade/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/250106a76acffac0067c6618dd784f2260b56ade/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=250106a76acffac0067c6618dd784f2260b56ade",
      "patch": "@@ -1486,18 +1486,6 @@ ada_fixup_array_indexes_type (struct type *index_desc_type)\n    }\n }\n \n-/* Names of MAX_ADA_DIMENS bounds in P_BOUNDS fields of array descriptors.  */\n-\n-static const char *bound_name[] = {\n-  \"LB0\", \"UB0\", \"LB1\", \"UB1\", \"LB2\", \"UB2\", \"LB3\", \"UB3\",\n-  \"LB4\", \"UB4\", \"LB5\", \"UB5\", \"LB6\", \"UB6\", \"LB7\", \"UB7\"\n-};\n-\n-/* Maximum number of array dimensions we are prepared to handle.  */\n-\n-#define MAX_ADA_DIMENS (sizeof(bound_name) / (2*sizeof(char *)))\n-\n-\n /* The desc_* routines return primitive portions of array descriptors\n    (fat pointers).  */\n \n@@ -1760,7 +1748,10 @@ fat_pntr_data_bitsize (struct type *type)\n static struct value *\n desc_one_bound (struct value *bounds, int i, int which)\n {\n-  return value_struct_elt (&bounds, NULL, bound_name[2 * i + which - 2], NULL,\n+  char bound_name[20];\n+  xsnprintf (bound_name, sizeof (bound_name), \"%cB%d\",\n+\t     which ? 'U' : 'L', i - 1);\n+  return value_struct_elt (&bounds, NULL, bound_name, NULL,\n                            _(\"Bad GNAT array descriptor bounds\"));\n }\n \n@@ -1798,7 +1789,11 @@ desc_index_type (struct type *type, int i)\n   type = desc_base_type (type);\n \n   if (type->code () == TYPE_CODE_STRUCT)\n-    return lookup_struct_elt_type (type, bound_name[2 * i - 2], 1);\n+    {\n+      char bound_name[20];\n+      xsnprintf (bound_name, sizeof (bound_name), \"LB%d\", i - 1);\n+      return lookup_struct_elt_type (type, bound_name, 1);\n+    }\n   else\n     return NULL;\n }"
    }
  ]
}