{
  "sha": "0d64622696e02ad649d048f4af3a3f293481f89f",
  "node_id": "C_kwDOANOeidoAKDBkNjQ2MjI2OTZlMDJhZDY0OWQwNDhmNGFmM2EzZjI5MzQ4MWY4OWY",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-11T09:51:32Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-11-12T04:03:31Z"
    },
    "message": "Fix demangle style usage info\n\nExtract allowed styles from libiberty, so we don't have to worry about\nour help messages getting out of date.  The function probably belongs\nin libiberty/cplus-dem.c but it can be here for a while to iron out\nbugs.\n\n\tPR 28581\n\t* demanguse.c: New file.\n\t* demanguse.h: New file.\n\t* nm.c (usage): Break up output.  Use display_demangler_styles.\n\t* objdump.c (usage): Use display_demangler_styles.\n\t* readelf.c (usage): Likewise.\n\t* Makefile.am: Add demanguse.c and demanguse.h.\n\t* Makefile.in: Regenerate.\n\t* po/POTFILESin: Regenerate.",
    "tree": {
      "sha": "c25c5549ac2a3d6d9ad70a1a73cb12a1df6f2b13",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c25c5549ac2a3d6d9ad70a1a73cb12a1df6f2b13"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d64622696e02ad649d048f4af3a3f293481f89f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d64622696e02ad649d048f4af3a3f293481f89f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d64622696e02ad649d048f4af3a3f293481f89f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d64622696e02ad649d048f4af3a3f293481f89f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d31028e8ccfa9dbc76c3c7f5dc8fadbe8af11e6b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d31028e8ccfa9dbc76c3c7f5dc8fadbe8af11e6b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d31028e8ccfa9dbc76c3c7f5dc8fadbe8af11e6b"
    }
  ],
  "stats": {
    "total": 248,
    "additions": 188,
    "deletions": 60
  },
  "files": [
    {
      "sha": "7f4c24c213bc2e7994116d82180f1b810aa12042",
      "filename": "binutils/Makefile.am",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.am?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -122,7 +122,7 @@ AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) \\\n \n HFILES = \\\n \tarsup.h binemul.h bucomm.h budbg.h \\\n-\tcoffgrok.h debug.h dlltool.h dwarf.h elfcomm.h \\\n+\tcoffgrok.h debug.h demanguse.h dlltool.h dwarf.h elfcomm.h \\\n \tobjdump.h sysdep.h unwind-ia64.h windres.h winduni.h windint.h \\\n \twindmc.h\n \n@@ -132,7 +132,7 @@ BUILT_SOURCES = $(GENERATED_HFILES)\n CFILES = \\\n \taddr2line.c ar.c arsup.c bin2c.c binemul.c bucomm.c \\\n \tcoffdump.c coffgrok.c cxxfilt.c \\\n-\tdwarf.c debug.c dlltool.c dllwrap.c \\\n+\tdwarf.c debug.c demanguse.c dlltool.c dllwrap.c \\\n \telfcomm.c emul_aix.c emul_vanilla.c filemode.c \\\n \tis-ranlib.c is-strip.c maybe-ranlib.c maybe-strip.c \\\n \tnm.c not-ranlib.c not-strip.c \\\n@@ -252,17 +252,17 @@ objcopy_SOURCES = objcopy.c not-strip.c rename.c $(WRITE_DEBUG_SRCS) $(BULIBS)\n \n strings_SOURCES = strings.c $(BULIBS)\n \n-readelf_SOURCES = readelf.c version.c unwind-ia64.c dwarf.c $(ELFLIBS)\n+readelf_SOURCES = readelf.c version.c unwind-ia64.c dwarf.c demanguse.c $(ELFLIBS)\n readelf_LDADD   = $(LIBCTF_NOBFD) $(LIBINTL) $(LIBIBERTY) $(ZLIB) $(DEBUGINFOD_LIBS)\n \n elfedit_SOURCES = elfedit.c version.c $(ELFLIBS)\n elfedit_LDADD = $(LIBINTL) $(LIBIBERTY)\n \n strip_new_SOURCES = objcopy.c is-strip.c rename.c $(WRITE_DEBUG_SRCS) $(BULIBS)\n \n-nm_new_SOURCES = nm.c $(BULIBS)\n+nm_new_SOURCES = nm.c demanguse.c $(BULIBS)\n \n-objdump_SOURCES = objdump.c dwarf.c prdbg.c $(DEBUG_SRCS) $(BULIBS) $(ELFLIBS)\n+objdump_SOURCES = objdump.c dwarf.c prdbg.c demanguse.c $(DEBUG_SRCS) $(BULIBS) $(ELFLIBS)\n EXTRA_objdump_SOURCES = od-xcoff.c\n objdump_LDADD = $(OBJDUMP_PRIVATE_OFILES) $(OPCODES) $(LIBCTF) $(BFDLIB) $(LIBIBERTY) $(LIBINTL) $(DEBUGINFOD_LIBS)\n "
    },
    {
      "sha": "5252ef18b5c51a800eff78a90eaba6555ac46eff",
      "filename": "binutils/Makefile.in",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/Makefile.in?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -212,7 +212,7 @@ am__objects_2 = elfcomm.$(OBJEXT)\n am_elfedit_OBJECTS = elfedit.$(OBJEXT) version.$(OBJEXT) \\\n \t$(am__objects_2)\n elfedit_OBJECTS = $(am_elfedit_OBJECTS)\n-am_nm_new_OBJECTS = nm.$(OBJEXT) $(am__objects_1)\n+am_nm_new_OBJECTS = nm.$(OBJEXT) demanguse.$(OBJEXT) $(am__objects_1)\n nm_new_OBJECTS = $(am_nm_new_OBJECTS)\n nm_new_LDADD = $(LDADD)\n am__objects_3 = rddbg.$(OBJEXT) debug.$(OBJEXT) stabs.$(OBJEXT) \\\n@@ -223,15 +223,17 @@ am_objcopy_OBJECTS = objcopy.$(OBJEXT) not-strip.$(OBJEXT) \\\n objcopy_OBJECTS = $(am_objcopy_OBJECTS)\n objcopy_LDADD = $(LDADD)\n am_objdump_OBJECTS = objdump.$(OBJEXT) dwarf.$(OBJEXT) prdbg.$(OBJEXT) \\\n-\t$(am__objects_3) $(am__objects_1) $(am__objects_2)\n+\tdemanguse.$(OBJEXT) $(am__objects_3) $(am__objects_1) \\\n+\t$(am__objects_2)\n objdump_OBJECTS = $(am_objdump_OBJECTS)\n @ENABLE_LIBCTF_TRUE@am__DEPENDENCIES_2 = ../libctf/libctf.la\n am_ranlib_OBJECTS = ar.$(OBJEXT) is-ranlib.$(OBJEXT) arparse.$(OBJEXT) \\\n \tarlex.$(OBJEXT) arsup.$(OBJEXT) rename.$(OBJEXT) \\\n \tbinemul.$(OBJEXT) emul_$(EMULATION).$(OBJEXT) $(am__objects_1)\n ranlib_OBJECTS = $(am_ranlib_OBJECTS)\n am_readelf_OBJECTS = readelf.$(OBJEXT) version.$(OBJEXT) \\\n-\tunwind-ia64.$(OBJEXT) dwarf.$(OBJEXT) $(am__objects_2)\n+\tunwind-ia64.$(OBJEXT) dwarf.$(OBJEXT) demanguse.$(OBJEXT) \\\n+\t$(am__objects_2)\n readelf_OBJECTS = $(am_readelf_OBJECTS)\n @ENABLE_LIBCTF_TRUE@am__DEPENDENCIES_3 = ../libctf/libctf-nobfd.la\n am_size_OBJECTS = size.$(OBJEXT) $(am__objects_1)\n@@ -632,7 +634,7 @@ AM_CPPFLAGS = -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) \\\n \n HFILES = \\\n \tarsup.h binemul.h bucomm.h budbg.h \\\n-\tcoffgrok.h debug.h dlltool.h dwarf.h elfcomm.h \\\n+\tcoffgrok.h debug.h demanguse.h dlltool.h dwarf.h elfcomm.h \\\n \tobjdump.h sysdep.h unwind-ia64.h windres.h winduni.h windint.h \\\n \twindmc.h\n \n@@ -641,7 +643,7 @@ BUILT_SOURCES = $(GENERATED_HFILES)\n CFILES = \\\n \taddr2line.c ar.c arsup.c bin2c.c binemul.c bucomm.c \\\n \tcoffdump.c coffgrok.c cxxfilt.c \\\n-\tdwarf.c debug.c dlltool.c dllwrap.c \\\n+\tdwarf.c debug.c demanguse.c dlltool.c dllwrap.c \\\n \telfcomm.c emul_aix.c emul_vanilla.c filemode.c \\\n \tis-ranlib.c is-strip.c maybe-ranlib.c maybe-strip.c \\\n \tnm.c not-ranlib.c not-strip.c \\\n@@ -720,13 +722,13 @@ LDADD = $(BFDLIB) $(LIBIBERTY) $(LIBINTL)\n size_SOURCES = size.c $(BULIBS)\n objcopy_SOURCES = objcopy.c not-strip.c rename.c $(WRITE_DEBUG_SRCS) $(BULIBS)\n strings_SOURCES = strings.c $(BULIBS)\n-readelf_SOURCES = readelf.c version.c unwind-ia64.c dwarf.c $(ELFLIBS)\n+readelf_SOURCES = readelf.c version.c unwind-ia64.c dwarf.c demanguse.c $(ELFLIBS)\n readelf_LDADD = $(LIBCTF_NOBFD) $(LIBINTL) $(LIBIBERTY) $(ZLIB) $(DEBUGINFOD_LIBS)\n elfedit_SOURCES = elfedit.c version.c $(ELFLIBS)\n elfedit_LDADD = $(LIBINTL) $(LIBIBERTY)\n strip_new_SOURCES = objcopy.c is-strip.c rename.c $(WRITE_DEBUG_SRCS) $(BULIBS)\n-nm_new_SOURCES = nm.c $(BULIBS)\n-objdump_SOURCES = objdump.c dwarf.c prdbg.c $(DEBUG_SRCS) $(BULIBS) $(ELFLIBS)\n+nm_new_SOURCES = nm.c demanguse.c $(BULIBS)\n+objdump_SOURCES = objdump.c dwarf.c prdbg.c demanguse.c $(DEBUG_SRCS) $(BULIBS) $(ELFLIBS)\n EXTRA_objdump_SOURCES = od-xcoff.c\n objdump_LDADD = $(OBJDUMP_PRIVATE_OFILES) $(OPCODES) $(LIBCTF) $(BFDLIB) $(LIBIBERTY) $(LIBINTL) $(DEBUGINFOD_LIBS)\n cxxfilt_SOURCES = cxxfilt.c $(BULIBS)\n@@ -1049,6 +1051,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/deflex.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/defparse.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/demanguse.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlltool.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dllwrap.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarf.Po@am__quote@"
    },
    {
      "sha": "578a3ef56fec38a14fe0a65f8ac5271e0cc4c0dd",
      "filename": "binutils/demanguse.c",
      "status": "added",
      "additions": 54,
      "deletions": 0,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/demanguse.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/demanguse.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/demanguse.c?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -0,0 +1,54 @@\n+/* demanguse.c -- libiberty demangler usage\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GNU Binutils.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n+   02110-1301, USA.  */\n+\n+#include <stdio.h>\n+#include <string.h>\n+#include \"demangle.h\"\n+#include \"demanguse.h\"\n+\n+/* Print the list of demangling styles to STREAM.  A one line MSG is\n+   printed before the styles.  Output is limited to 80 columns, with\n+   continuation lines being indented by leading spaces in MSG.  */\n+\n+void\n+display_demangler_styles (FILE *stream, const char *msg)\n+{\n+  const struct demangler_engine *info = libiberty_demanglers;\n+  int col;\n+  int lead_spaces = 0;\n+  const char *cont = \"\";\n+\n+  while (msg[lead_spaces] == ' ')\n+    ++lead_spaces;\n+  col = fprintf (stream, \"%s\", msg);\n+  while (info->demangling_style_name)\n+    {\n+      if (col + strlen (info->demangling_style_name) >= 75)\n+\t{\n+\t  fprintf (stream, \"%.1s\\n\", cont);\n+\t  col = fprintf (stream, \"%.*s\", lead_spaces, msg);\n+\t  cont = \"\";\n+\t}\n+      col += fprintf (stream, \"%s\\\"%s\\\"\", cont, info->demangling_style_name);\n+      cont = \", \";\n+      ++info;\n+    }\n+  fprintf (stream, \"\\n\");\n+}"
    },
    {
      "sha": "965f116682d0b35bb23be64918f1a90ddc19f341",
      "filename": "binutils/demanguse.h",
      "status": "added",
      "additions": 34,
      "deletions": 0,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/demanguse.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/demanguse.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/demanguse.h?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -0,0 +1,34 @@\n+/* demanguse.h -- libiberty demangler usage\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+\n+   This file is part of GNU Binutils.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA\n+   02110-1301, USA.  */\n+\n+#ifndef DEMANGUSE_H\n+#define DEMANGUSE_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+void display_demangler_styles (FILE *, const char *);\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif /* DEMANGUSE_H */"
    },
    {
      "sha": "7adeaa1e904996c9b3efa043a16f3a6029209586",
      "filename": "binutils/nm.c",
      "status": "modified",
      "additions": 74,
      "deletions": 39,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/nm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/nm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/nm.c?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -36,6 +36,7 @@\n #include \"coff/internal.h\"\n #include \"libcoff.h\"\n #include \"bucomm.h\"\n+#include \"demanguse.h\"\n #include \"plugin-api.h\"\n #include \"plugin.h\"\n #include \"safe-ctype.h\"\n@@ -291,54 +292,88 @@ usage (FILE *stream, int status)\n {\n   fprintf (stream, _(\"Usage: %s [option(s)] [file(s)]\\n\"), program_name);\n   fprintf (stream, _(\" List symbols in [file(s)] (a.out by default).\\n\"));\n-  fprintf (stream, _(\" The options are:\\n\\\n-  -a, --debug-syms       Display debugger-only symbols\\n\\\n-  -A, --print-file-name  Print name of the input file before every symbol\\n\\\n-  -B                     Same as --format=bsd\\n\\\n-  -C, --demangle[=STYLE] Decode low-level symbol names into user-level names\\n\\\n-                          The STYLE, if specified, can be `auto' (the default),\\n\\\n-                          `gnu', `lucid', `arm', `hp', `edg', `gnu-v3', `java'\\n\\\n-                          or `gnat'\\n\\\n-      --no-demangle      Do not demangle low-level symbol names\\n\\\n-      --recurse-limit    Enable a demangling recursion limit.  This is the default.\\n\\\n-      --no-recurse-limit Disable a demangling recursion limit.\\n\\\n-  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\\\n-      --defined-only     Display only defined symbols\\n\\\n-  -e                     (ignored)\\n\\\n+  fprintf (stream, _(\" The options are:\\n\"));\n+  fprintf (stream, _(\"\\\n+  -a, --debug-syms       Display debugger-only symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+  -A, --print-file-name  Print name of the input file before every symbol\\n\"));\n+  fprintf (stream, _(\"\\\n+  -B                     Same as --format=bsd\\n\"));\n+  fprintf (stream, _(\"\\\n+  -C, --demangle[=STYLE] Decode mangled/processed symbol names\\n\"));\n+  display_demangler_styles (stream, _(\"\\\n+                           STYLE can be \"));\n+  fprintf (stream, _(\"\\\n+      --no-demangle      Do not demangle low-level symbol names\\n\"));\n+  fprintf (stream, _(\"\\\n+      --recurse-limit    Enable a demangling recursion limit.  (default)\\n\"));\n+  fprintf (stream, _(\"\\\n+      --no-recurse-limit Disable a demangling recursion limit.\\n\"));\n+  fprintf (stream, _(\"\\\n+  -D, --dynamic          Display dynamic symbols instead of normal symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+      --defined-only     Display only defined symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+  -e                     (ignored)\\n\"));\n+  fprintf (stream, _(\"\\\n   -f, --format=FORMAT    Use the output format FORMAT.  FORMAT can be `bsd',\\n\\\n-                           `sysv', `posix' or 'just-symbols'.  The default is `bsd'\\n\\\n-  -g, --extern-only      Display only external symbols\\n\\\n-    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\\\n-  -j, --just-symbols     Same as --format=just-symbols\\n\\\n+                           `sysv', `posix' or 'just-symbols'.\\n\\\n+                           The default is `bsd'\\n\"));\n+  fprintf (stream, _(\"\\\n+  -g, --extern-only      Display only external symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+    --ifunc-chars=CHARS  Characters to use when displaying ifunc symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+  -j, --just-symbols     Same as --format=just-symbols\\n\"));\n+  fprintf (stream, _(\"\\\n   -l, --line-numbers     Use debugging information to find a filename and\\n\\\n-                           line number for each symbol\\n\\\n-  -n, --numeric-sort     Sort symbols numerically by address\\n\\\n-  -o                     Same as -A\\n\\\n-  -p, --no-sort          Do not sort the symbols\\n\\\n-  -P, --portability      Same as --format=posix\\n\\\n+                           line number for each symbol\\n\"));\n+  fprintf (stream, _(\"\\\n+  -n, --numeric-sort     Sort symbols numerically by address\\n\"));\n+  fprintf (stream, _(\"\\\n+  -o                     Same as -A\\n\"));\n+  fprintf (stream, _(\"\\\n+  -p, --no-sort          Do not sort the symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+  -P, --portability      Same as --format=posix\\n\"));\n+  fprintf (stream, _(\"\\\n   -r, --reverse-sort     Reverse the sense of the sort\\n\"));\n #if BFD_SUPPORTS_PLUGINS\n   fprintf (stream, _(\"\\\n       --plugin NAME      Load the specified plugin\\n\"));\n #endif\n   fprintf (stream, _(\"\\\n-  -S, --print-size       Print size of defined symbols\\n\\\n-  -s, --print-armap      Include index for symbols from archive members\\n\\\n-      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\\\n-      --size-sort        Sort symbols by size\\n\\\n-      --special-syms     Include special symbols in the output\\n\\\n-      --synthetic        Display synthetic symbols as well\\n\\\n-  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\\\n-      --target=BFDNAME   Specify the target object format as BFDNAME\\n\\\n-  -u, --undefined-only   Display only undefined symbols\\n\\\n+  -S, --print-size       Print size of defined symbols\\n\"));\n+  fprintf (stream, _(\"\\\n+  -s, --print-armap      Include index for symbols from archive members\\n\"));\n+  fprintf (stream, _(\"\\\n+      --quiet            Suppress \\\"no symbols\\\" diagnostic\\n\"));\n+  fprintf (stream, _(\"\\\n+      --size-sort        Sort symbols by size\\n\"));\n+  fprintf (stream, _(\"\\\n+      --special-syms     Include special symbols in the output\\n\"));\n+  fprintf (stream, _(\"\\\n+      --synthetic        Display synthetic symbols as well\\n\"));\n+  fprintf (stream, _(\"\\\n+  -t, --radix=RADIX      Use RADIX for printing symbol values\\n\"));\n+  fprintf (stream, _(\"\\\n+      --target=BFDNAME   Specify the target object format as BFDNAME\\n\"));\n+  fprintf (stream, _(\"\\\n+  -u, --undefined-only   Display only undefined symbols\\n\"));\n+  fprintf (stream, _(\"\\\n   -U {d|s|i|x|e|h}       Specify how to treat UTF-8 encoded unicode characters\\n\\\n-      --unicode={default|show|invalid|hex|escape|highlight}\\n\\\n-      --with-symbol-versions  Display version strings after symbol names\\n\\\n-  -X 32_64               (ignored)\\n\\\n-  @FILE                  Read options from FILE\\n\\\n-  -h, --help             Display this information\\n\\\n-  -V, --version          Display this program's version number\\n\\\n-\\n\"));\n+      --unicode={default|show|invalid|hex|escape|highlight}\\n\"));\n+  fprintf (stream, _(\"\\\n+      --with-symbol-versions  Display version strings after symbol names\\n\"));\n+  fprintf (stream, _(\"\\\n+  -X 32_64               (ignored)\\n\"));\n+  fprintf (stream, _(\"\\\n+  @FILE                  Read options from FILE\\n\"));\n+  fprintf (stream, _(\"\\\n+  -h, --help             Display this information\\n\"));\n+  fprintf (stream, _(\"\\\n+  -V, --version          Display this program's version number\\n\"));\n+\n   list_supported_targets (program_name, stream);\n   if (REPORT_BUGS_TO[0] && status == 0)\n     fprintf (stream, _(\"Report bugs to %s.\\n\"), REPORT_BUGS_TO);"
    },
    {
      "sha": "1811e70df93e49b674ca804531f3c03fef6fd0f7",
      "filename": "binutils/objdump.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/objdump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/objdump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/objdump.c?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -55,6 +55,7 @@\n #include \"progress.h\"\n #include \"bucomm.h\"\n #include \"elfcomm.h\"\n+#include \"demanguse.h\"\n #include \"dwarf.h\"\n #include \"ctf-api.h\"\n #include \"getopt.h\"\n@@ -330,10 +331,9 @@ usage (FILE *stream, int status)\n       fprintf (stream, _(\"\\\n   -F, --file-offsets             Include file offsets when displaying information\\n\"));\n       fprintf (stream, _(\"\\\n-  -C, --demangle[=STYLE]         Decode mangled/processed symbol names\\n\\\n-                                  The STYLE, if specified, can be `auto', `gnu',\\n\\\n-                                  `lucid', `arm', `hp', `edg', `gnu-v3', `java'\\n\\\n-                                  or `gnat'\\n\"));\n+  -C, --demangle[=STYLE]         Decode mangled/processed symbol names\\n\"));\n+      display_demangler_styles (stream, _(\"\\\n+                                   STYLE can be \"));\n       fprintf (stream, _(\"\\\n       --recurse-limit            Enable a limit on recursion whilst demangling\\n\\\n                                   (default)\\n\"));"
    },
    {
      "sha": "376f1340c3f4ce37bad88dd4651a0ce24fa9ee98",
      "filename": "binutils/po/POTFILES.in",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/po/POTFILES.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/po/POTFILES.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/po/POTFILES.in?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -15,6 +15,8 @@ cxxfilt.c\n debug.c\n debug.c\n debug.h\n+demanguse.c\n+demanguse.h\n dlltool.c\n dlltool.h\n dllwrap.c"
    },
    {
      "sha": "19c64918c0696ee0d4c8c219d7138827ce054351",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d64622696e02ad649d048f4af3a3f293481f89f/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=0d64622696e02ad649d048f4af3a3f293481f89f",
      "patch": "@@ -57,6 +57,7 @@\n #include \"bfd.h\"\n #include \"bucomm.h\"\n #include \"elfcomm.h\"\n+#include \"demanguse.h\"\n #include \"dwarf.h\"\n #include \"ctf-api.h\"\n #include \"demangle.h\"\n@@ -4944,10 +4945,9 @@ usage (FILE * stream)\n                          Force base for symbol sizes.  The options are \\n\\\n                          mixed (the default), octal, decimal, hexadecimal.\\n\"));\n   fprintf (stream, _(\"\\\n-  -C --demangle[=STYLE]  Decode low-level symbol names into user-level names\\n\\\n-                          The STYLE, if specified, can be `auto' (the default),\\n\\\n-                          `gnu', `lucid', `arm', `hp', `edg', `gnu-v3', `java'\\n\\\n-                          or `gnat'\\n\"));\n+  -C --demangle[=STYLE]  Decode mangled/processed symbol names\\n\"));\n+  display_demangler_styles (stream, _(\"\\\n+                           STYLE can be \"));\n   fprintf (stream, _(\"\\\n      --no-demangle       Do not demangle low-level symbol names.  (default)\\n\"));\n   fprintf (stream, _(\"\\"
    }
  ]
}