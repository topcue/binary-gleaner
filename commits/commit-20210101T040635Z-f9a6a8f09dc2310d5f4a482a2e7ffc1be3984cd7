{
  "sha": "f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjlhNmE4ZjA5ZGMyMzEwZDVmNGE0ODJhMmU3ZmZjMWJlMzk4NGNkNw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-01T03:51:52Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-01-01T04:06:35Z"
    },
    "message": "PR27116, Spelling errors found by Debian style checker\n\n\tPR 27116\nbfd/\n\t* xcofflink.c: Correct spelling in comments.\nbinutils/\n\t* coffgrok.c (do_type): Correct spelling of auxiliary in errors.\n\t* doc/binutils.texi: Correct grammar.\n\t* readelf.c (process_version_sections): Correct spelling of auxiliary\n\tin warning.\n\t* testsuite/binutils-all/vax/objdump.exp: Comment grammar fix.\nconfig/\n\t* override.m4: Correct comment grammar.\ngas/\n\t* config/tc-i386.c: Correct comment spelling.\n\t* config/tc-riscv.c: Likewise.\n\t* config/tc-s390.c: Correct comment grammar.\n\t* doc/c-i386.texi: Correct spelling.\n\t* doc/c-s390.texi: Correct grammar.\ngold/\n\t* tilegx.cc: Correct comment spelling.\ngprof/\n\t* README: Correct grammar.\n\t* gprof.texi: Likewise.\ninclude/\n\t* coff/internal.h: Correct comment spelling.\n\t* coff/sym.h: Likewise.\n\t* opcode/aarch64.h: Likewise.\nld/\n\t* configure.tgt: Correct comment grammar.\n\t* emultempl/m68hc1xelf.em: Likewise.\n\t* ld.texi: Correct grammar.",
    "tree": {
      "sha": "30d8c1679c101f90677c695ce64e8473f13e95e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/30d8c1679c101f90677c695ce64e8473f13e95e7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "250d07de5cf6efc81ed934c25292beb63c7e3129",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/250d07de5cf6efc81ed934c25292beb63c7e3129",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/250d07de5cf6efc81ed934c25292beb63c7e3129"
    }
  ],
  "stats": {
    "total": 131,
    "additions": 88,
    "deletions": 43
  },
  "files": [
    {
      "sha": "d760a4a71b0d1acf79919a10ac0d5da63a7a9411",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* xcofflink.c: Correct spelling in comments.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "1f7f522e693d3a0d823bc442eb60aa6a8d01660d",
      "filename": "bfd/ChangeLog-2009",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2009",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2009",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2009?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -3868,15 +3868,15 @@\n \t* coffcode.h (coff_pointerize_aux_hook): Update CSECT_SYM_P to\n \tcheck whether a symbol has csect information.\n \t(coff_print_aux): Likewise.\n-\t* coff-rs6000.c (_bfd_xcoff_swap_aux_in): Handle auxillary csect\n+\t* coff-rs6000.c (_bfd_xcoff_swap_aux_in): Handle auxiliary csect\n \tinformation for C_AIX_WEAKEXT too.\n \t(_bfd_xcoff_swap_aux_out): Likewise.\n \t(xcoff_reloc_type_br): Handle defweak symbols too.\n-\t* coff64-rs6000.c (_bfd_xcoff64_swap_aux_in): Handle auxillary csect\n+\t* coff64-rs6000.c (_bfd_xcoff64_swap_aux_in): Handle auxiliary csect\n \tinformation for C_AIX_WEAKEXT too.\n \t(_bfd_xcoff64_swap_aux_out): Likewise.\n \t(xcoff64_reloc_type_br): Handle defweak symbols too.\n-\t* coffgen.c (coff_print_symbol): Handle auxillary function\n+\t* coffgen.c (coff_print_symbol): Handle auxiliary function\n \tinformation for C_AIX_WEAKEXT too.\n \t* xcofflink.c (_bfd_xcoff_canonicalize_dynamic_symtab): Set BSF_WEAK\n \tinstead of BSF_GLOBAL if the L_WEAK flag is set.\n@@ -3942,7 +3942,7 @@\n \tobjects in a dynamic link, rather than checking whether csectpp\n \tis null.  Always allocate debug_index for other objects,\n \tand always go through the loop.  Update the type of debug_index\n-\tafter the change above.  Read the auxillary csect information\n+\tafter the change above.  Read the auxiliary csect information\n \tand use xcoff_keep_symbol_p to decide whether a symbol should\n \tbe kept.  Set its debug_index to -2 if not.\n \t(xcoff_link_input_bfd): Update the type of debug_index after"
    },
    {
      "sha": "d35ff8cc1ef33f77cf1a641bfc5f8b0d5c2e53bc",
      "filename": "bfd/ChangeLog-2014",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2014",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2014",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2014?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -621,7 +621,7 @@\n \n \tPR binutils/17512\n \t* coffgen.c (coff_get_normalized_symtab): Check for an excessive\n-\tnumber of auxillary entries.\n+\tnumber of auxiliary entries.\n \t* ieee.c (next_byte): Convert to a function.  Return FALSE if the\n \tnext byte is beyond the end of the buffer.\n \t(parse_int): Test the return value of next_byte."
    },
    {
      "sha": "f07b7367fd9e37782516c4dea74594b4583526ee",
      "filename": "bfd/ChangeLog-2015",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2015",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/ChangeLog-2015",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2015?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -3076,7 +3076,7 @@\n \n \tPR binutils/17512\n \t* coffgen.c (coff_get_normalized_symtab): Fix test for out of\n-\trange auxillary sections.\n+\trange auxiliary sections.\n \n 2015-03-24  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n "
    },
    {
      "sha": "f0d6c8dfa23d02ec90c4cc40a6eb635fc63e66f8",
      "filename": "bfd/xcofflink.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/xcofflink.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/bfd/xcofflink.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/xcofflink.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -3408,7 +3408,7 @@ xcoff_post_gc_symbol (struct xcoff_link_hash_entry *h, void * p)\n }\n \n /* INPUT_BFD includes XCOFF symbol ISYM, which is associated with linker\n-   hash table entry H and csect CSECT.  AUX contains ISYM's auxillary\n+   hash table entry H and csect CSECT.  AUX contains ISYM's auxiliary\n    csect information, if any.  NAME is the function's name if the name\n    is stored in the .debug section, otherwise it is null.\n \n@@ -5145,7 +5145,7 @@ xcoff_find_tc0 (bfd *output_bfd, struct xcoff_final_link_info *flinfo)\n   irsym.n_numaux = 1;\n   bfd_coff_swap_sym_out (output_bfd, &irsym, flinfo->outsyms);\n \n-  /* Fill out the auxillary csect information.  */\n+  /* Fill out the auxiliary csect information.  */\n   memset (&iraux, 0, sizeof iraux);\n   iraux.x_csect.x_smtyp = XTY_SD;\n   iraux.x_csect.x_smclas = XMC_TC0;"
    },
    {
      "sha": "653d6b6f50c5a071ec39fa4c4c9726e034593a1d",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* coffgrok.c (do_type): Correct spelling of auxiliary in errors.\n+\t* doc/binutils.texi: Correct grammar.\n+\t* readelf.c (process_version_sections): Correct spelling of auxiliary\n+\tin warning.\n+\t* testsuite/binutils-all/vax/objdump.exp: Comment grammar fix.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "f73fd1ecefe8da8742797028c35ebc76f914fe25",
      "filename": "binutils/ChangeLog-2011",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog-2011",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog-2011",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog-2011?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -455,7 +455,7 @@\n \tin the file.\n \t(arm_process_unwind): Likewise.\n \t(ia64_process_unwind): Likewise.\n-\tSet the size of the unwind auxillary information to 0 if the data\n+\tSet the size of the unwind auxiliary information to 0 if the data\n \tcould not be read.\n \t(load_specific_debug_section): Handle a failure to read in the\n \tsection."
    },
    {
      "sha": "01a15e3bef16b692821a9a4839993e7129366a63",
      "filename": "binutils/ChangeLog-2017",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog-2017",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/ChangeLog-2017",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog-2017?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1126,7 +1126,7 @@\n \n \tPR binutils/21437\n \t* readelf.c (process_version_sections): Check for underflow when\n-\tcomputing the start address of the auxillary version data.\n+\tcomputing the start address of the auxiliary version data.\n \n 2017-04-28  Nick Clifton  <nickc@redhat.com>\n \n@@ -1762,7 +1762,7 @@\n 2017-02-13  Nick Clifton  <nickc@redhat.com>\n \n \tPR binutils/21148\n-\t* readelf.c (process_version_sections): Include size of auxillary\n+\t* readelf.c (process_version_sections): Include size of auxiliary\n \tversion information when checking for buffer overflow.\n \n 2017-02-13  Nick Clifton  <nickc@redhat.com>"
    },
    {
      "sha": "7b8dcf61b56bd3e7cd11af9265f0979e627246c7",
      "filename": "binutils/coffgrok.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/coffgrok.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/coffgrok.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/coffgrok.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -424,7 +424,7 @@ do_type (unsigned int i)\n       if (sym->n_numaux)\n \t{\n \t  if (aux == NULL)\n-\t    fatal (_(\"Aggregate definition needs auxillary information\"));\n+\t    fatal (_(\"Aggregate definition needs auxiliary information\"));\n \n \t  if (aux->x_sym.x_tagndx.p)\n \t    {\n@@ -474,7 +474,7 @@ do_type (unsigned int i)\n       break;\n     case T_ENUM:\n       if (aux == NULL)\n-\tfatal (_(\"Enum definition needs auxillary information\"));\n+\tfatal (_(\"Enum definition needs auxiliary information\"));\n       if (aux->x_sym.x_tagndx.p)\n \t{\n \t  unsigned int idx = INDEXOF (aux->x_sym.x_tagndx.p);\n@@ -517,7 +517,7 @@ do_type (unsigned int i)\n \t    int els;\n \n \t    if (aux == NULL)\n-\t      fatal (_(\"Array definition needs auxillary information\"));\n+\t      fatal (_(\"Array definition needs auxiliary information\"));\n \t    els = (dimind < DIMNUM\n \t\t   ? aux->x_sym.x_fcnary.x_ary.x_dimen[dimind]\n \t\t   : 0);"
    },
    {
      "sha": "526efe4940de1473a0d5057e57441efd5b243949",
      "filename": "binutils/doc/binutils.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/doc/binutils.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/doc/binutils.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/doc/binutils.texi?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -2471,7 +2471,7 @@ hexadecimal using @option{hex}.  By default, the short immediates are\n printed using the decimal representation, while the long immediate\n values are printed as hexadecimal.\n \n-@option{cpu=...} allows to enforce a particular ISA when disassembling\n+@option{cpu=...} allows one to enforce a particular ISA when disassembling\n instructions, overriding the @option{-m} value or whatever is in the ELF file.\n This might be useful to select ARC EM or HS ISA, because architecture is same\n for those and disassembler relies on private ELF header data to decide if code"
    },
    {
      "sha": "d6e7a7b38355a487a9b6eb0e623a2ef9340c9656",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -11451,7 +11451,7 @@ process_version_sections (Filedata * filedata)\n \t\t  }\n \n \t\tif (j < ent.vn_cnt)\n-\t\t  warn (_(\"Missing Version Needs auxillary information\\n\"));\n+\t\t  warn (_(\"Missing Version Needs auxiliary information\\n\"));\n \n \t\tif (ent.vn_next < sizeof (*entry)\n \t\t    && !(cnt == section->sh_info - 1 && ent.vn_next == 0))"
    },
    {
      "sha": "6a6c5c323a68cd42ab6b89d16406ced876b8e692",
      "filename": "binutils/testsuite/binutils-all/vax/objdump.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/testsuite/binutils-all/vax/objdump.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/binutils/testsuite/binutils-all/vax/objdump.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/vax/objdump.exp?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -19,7 +19,7 @@\n #\n # This file was written by Jan-Benedict Glaw <jbglaw@lug-owl.de>. It's goal\n # is to check the VAX-specific support of the -M entry:0xf00 switch, which\n-# allows to force function entry masks at given addresses.\n+# allows one to force function entry masks at given addresses.\n #\n \n if ![istarget vax*-*-*] then {"
    },
    {
      "sha": "faba901d9ec63c8df182755ecbf52d8f3c2081b2",
      "filename": "config/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/config/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/config/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* override.m4: Correct comment grammar.\n+\n 2020-09-08  Alan Modra  <amodra@gmail.com>\n \n \tSync from gcc"
    },
    {
      "sha": "5a1bffe60189cb01b6f235f0338ce92385c23b19",
      "filename": "config/override.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/config/override.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/config/override.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/override.m4?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -32,7 +32,7 @@ m4_ifndef([_GCC_AUTOCONF_VERSION],\n   [m4_define([_GCC_AUTOCONF_VERSION], [2.69])])\n \n dnl Test for the exact version when AC_INIT is expanded.\n-dnl This allows to update the tree in steps (for testing)\n+dnl This allows one to update the tree in steps (for testing)\n dnl by putting\n dnl   m4_define([_GCC_AUTOCONF_VERSION], [X.Y])\n dnl in configure.ac before AC_INIT,"
    },
    {
      "sha": "155ec7e3b16ecbe9883ac4eb95228a9bb7a5c553",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,11 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* config/tc-i386.c: Correct comment spelling.\n+\t* config/tc-riscv.c: Likewise.\n+\t* config/tc-s390.c: Correct comment grammar.\n+\t* doc/c-i386.texi: Correct spelling.\n+\t* doc/c-s390.texi: Correct grammar.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "369cfeef8b2708a040d890539b44acde1c3c3445",
      "filename": "gas/ChangeLog-2020",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog-2020",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog-2020",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog-2020?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -3436,7 +3436,7 @@ gas/ChangeLog:\n \tprefix into i.rex for SSE2AVX templates.\n \t(set_rex_vrex): New helper.\n \t(build_modrm_byte): Use it.\n-\t* testsuite/gas/i386/x86-64-sse2avx.s: Add cases with explict\n+\t* testsuite/gas/i386/x86-64-sse2avx.s: Add cases with explicit\n \tREX prefixes.\n \t* testsuite/gas/i386/x86-64-sse2avx.d: Adjust expectations.\n \n@@ -3462,7 +3462,7 @@ gas/ChangeLog:\n \n \t* config/tc-riscv.c (explicit_priv_attr): Rename explicit_csr to\n \texplicit_priv_attr.  It used to indicate CSR or priv instructions are\n-\texplictly used.\n+\texplicitly used.\n \t(riscv_is_priv_insn): Return True if it is a privileged instruction.\n \t(riscv_ip): Call riscv_is_priv_insn to check whether the instruction\n \tis privileged or not.  If it is, then set explicit_priv_attr to TRUE.\n@@ -3665,7 +3665,7 @@ gas/ChangeLog:\n 2020-06-05  Nelson Chu  <nelson.chu@sifive.com>\n \n \t* config/tc-riscv.c (explicit_csr): New static boolean.\n-\tUsed to indicate CSR are explictly used.\n+\tUsed to indicate CSR are explicitly used.\n \t(riscv_ip): Set explicit_csr to TRUE if any CSR is used.\n \t(riscv_write_out_attrs): If we already have set elf priv\n \tattributes, then generate them.  Otherwise, don't generate\n@@ -4324,7 +4324,7 @@ gas/ChangeLog:\n \t(md_parse_option): Change -mlfence-before-ret=[none|not|or] to\n \t-mlfence-before-ret=[none/not/or/shl/yes].\n \tEnable -mlfence-before-ret=shl when\n-\t-mlfence-beofre-indirect-branch=all and no explict -mlfence-before-ret option.\n+\t-mlfence-beofre-indirect-branch=all and no explicit -mlfence-before-ret option.\n \t(md_show_usage): Ditto.\n \t* doc/c-i386.texi: Ditto.\n \t* testsuite/gas/i386/i386.exp: Add new testcases."
    },
    {
      "sha": "2ea3bb382a91aa6a107a2febbeb2a9d73e199011",
      "filename": "gas/ChangeLog-9295",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog-9295",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/ChangeLog-9295",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog-9295?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1931,7 +1931,7 @@ Tue Aug  1 17:35:26 1995  Ian Lance Taylor  <ian@cygnus.com>\n Tue Aug  1 11:35:18 1995  steve chamberlain  <sac@slash.cygnus.com>\n \n \t* config/tc-sh.c (md_convert_frag): Make some error messages\n-\tmore explict.\n+\tmore explicit.\n \n Mon Jul 31 21:40:47 1995  Ken Raeburn  <raeburn@cygnus.com>\n "
    },
    {
      "sha": "9a2dfc92281127df460d3dc4d3f1bca8e1db30dd",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -7156,7 +7156,7 @@ process_suffix (void)\n       break;\n \n     case 0:\n-      /* Select word/dword/qword operation with explict data sizing prefix\n+      /* Select word/dword/qword operation with explicit data sizing prefix\n \t when there are no suitable register operands.  */\n       if (i.tm.opcode_modifier.w\n \t  && (i.prefix[DATA_PREFIX] || (i.prefix[REX_PREFIX] & REX_W))"
    },
    {
      "sha": "e938a8812d9b2136d988b3bc70510e6ac7c77538",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -401,10 +401,10 @@ const char FLT_CHARS[] = \"rRsSfFdDxXpP\";\n /* Indicate we are already assemble any instructions or not.  */\n static bfd_boolean start_assemble = FALSE;\n \n-/* Indicate ELF attributes are explictly set.  */\n+/* Indicate ELF attributes are explicitly set.  */\n static bfd_boolean explicit_attr = FALSE;\n \n-/* Indicate CSR or priv instructions are explictly used.  */\n+/* Indicate CSR or priv instructions are explicitly used.  */\n static bfd_boolean explicit_priv_attr = FALSE;\n \n /* Macros for encoding relaxation state for RVC branches and far jumps.  */"
    },
    {
      "sha": "c6daef99fde42c25ebf658e078125205d8b6560d",
      "filename": "gas/config/tc-s390.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-s390.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/config/tc-s390.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s390.c?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1900,7 +1900,7 @@ s390_literals (int ignore ATTRIBUTE_UNUSED)\n \n #define MAX_HISTORY 100\n \n-/* The .machine pseudo op allows to switch to a different CPU level in\n+/* The .machine pseudo op allows one to switch to a different CPU level in\n    the asm listing.  The current CPU setting can be stored on a stack\n    with .machine push and restored with .machine pop.  */\n \n@@ -1991,7 +1991,7 @@ s390_machine (int ignore ATTRIBUTE_UNUSED)\n   demand_empty_rest_of_line ();\n }\n \n-/* The .machinemode pseudo op allows to switch to a different\n+/* The .machinemode pseudo op allows one to switch to a different\n    architecture mode in the asm listing.  The current architecture\n    mode setting can be stored on a stack with .machinemode push and\n    restored with .machinemode pop.  */"
    },
    {
      "sha": "cb996c8a2a1c657680b488216e28c0f3c58e32dc",
      "filename": "gas/doc/c-i386.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/doc/c-i386.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/doc/c-i386.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-i386.texi?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -513,7 +513,7 @@ before indirect near branch instructions.\n before indirect near branch via register and issue a warning before\n indirect near branch via memory.\n It also implicitly sets @option{-mlfence-before-ret=@var{shl}} when\n-there's no explict @option{-mlfence-before-ret=}.\n+there's no explicit @option{-mlfence-before-ret=}.\n @option{-mlfence-before-indirect-branch=@var{register}} will generate\n lfence before indirect near branch via register.\n @option{-mlfence-before-indirect-branch=@var{memory}} will issue a"
    },
    {
      "sha": "c1b46a10c1eceb0b2e1f20ebd5f322f28242e443",
      "filename": "gas/doc/c-s390.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/doc/c-s390.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gas/doc/c-s390.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-s390.texi?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -905,7 +905,7 @@ except instructions from the HTM facility.\n \n @cindex @code{.machinemode} directive, s390\n @item .machinemode string\n-This directive allows to change the architecture mode for which code\n+This directive allows one to change the architecture mode for which code\n is being generated.  @code{string} may be @code{esa}, @code{zarch},\n @code{zarch_nohighgprs}, @code{push}, or @code{pop}.\n @code{.machinemode zarch_nohighgprs} can be used to prevent the"
    },
    {
      "sha": "4b7b481f3676de9173763e74bf88f514da089303",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* tilegx.cc: Correct comment spelling.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "be3ee27725701e05e4b2ab87a109e6da96247d5e",
      "filename": "gold/tilegx.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gold/tilegx.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gold/tilegx.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/tilegx.cc?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -4013,7 +4013,7 @@ Target_tilegx<size, big_endian>::Scan::global(Symbol_table* symtab,\n               // only expand to plt against __tls_get_addr in GD model\n               case elfcpp::R_TILEGX_TLS_GD_CALL:\n                 if (opt_t == tls::TLSOPT_NONE) {\n-                  // FIXME:  it's better '__tls_get_addr' referenced explictly\n+                  // FIXME:  it's better '__tls_get_addr' referenced explicitly\n                   if (!target->tls_get_addr_sym_defined_) {\n                     Symbol* sym = NULL;\n                     options::parse_set(NULL, \"__tls_get_addr\","
    },
    {
      "sha": "13a5b9659eb41b300b2cba6e1da66a0911cf64e0",
      "filename": "gprof/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* README: Correct grammar.\n+\t* gprof.texi: Likewise.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "0a479557e761c79c45d0e52e2107e01c5cb5f467",
      "filename": "gprof/README",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/README",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/README",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/README?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -358,7 +358,7 @@ Short Form:\tLong Form:\n ** File Format Changes\n \n The old BSD-derived format used for profile data does not contain a\n-magic cookie that allows to check whether a data file really is a\n+magic cookie that allows one to check whether a data file really is a\n gprof file.  Furthermore, it does not provide a version number, thus\n rendering changes to the file format almost impossible.  GNU gprof\n uses a new file format that provides these features.  For backward"
    },
    {
      "sha": "b2b204822d819e9cbc372c47d697fcfeb4f606e1",
      "filename": "gprof/gprof.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/gprof.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/gprof/gprof.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/gprof.texi?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1931,7 +1931,7 @@ load due to other users won't directly affect the output you get.\n @section Profiling Data File Format\n \n The old BSD-derived file format used for profile data does not contain a\n-magic cookie that allows to check whether a data file really is a\n+magic cookie that allows one to check whether a data file really is a\n @code{gprof} file.  Furthermore, it does not provide a version number, thus\n rendering changes to the file format almost impossible.  @sc{gnu} @code{gprof}\n uses a new file format that provides these features.  For backward"
    },
    {
      "sha": "048ba6113f95d63c315a3e2197fd1e3c5d275bce",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* coff/internal.h: Correct comment spelling.\n+\t* coff/sym.h: Likewise.\n+\t* opcode/aarch64.h: Likewise.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "8e21b4ef3bcb27654e64f88aa7649a7f92807e95",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -377,7 +377,7 @@ struct internal_aouthdr\n #define C_THUMBEXTFUNC  (C_THUMBEXT  + 20)\t/* 150 */\n #define C_THUMBSTATFUNC (C_THUMBSTAT + 20)\t/* 151 */\n \n-/* True if XCOFF symbols of class CLASS have auxillary csect information.  */\n+/* True if XCOFF symbols of class CLASS have auxiliary csect information.  */\n #define CSECT_SYM_P(CLASS) \\\n   ((CLASS) == C_EXT || (CLASS) == C_AIX_WEAKEXT || (CLASS) == C_HIDEXT)\n "
    },
    {
      "sha": "fd8b447eafa6ee0fca6cc63364e472f7c971245a",
      "filename": "include/coff/sym.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/coff/sym.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/coff/sym.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/sym.h?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -76,8 +76,8 @@ typedef struct {\n \tbfd_vma\tcbSymOffset;\t/* offset to start of local symbols*/\n \tlong\tioptMax;\t/* max index into optimization symbol entries */\n \tbfd_vma\tcbOptOffset;\t/* offset to optimization symbol entries */\n-\tlong\tiauxMax;\t/* number of auxillary symbol entries */\n-\tbfd_vma\tcbAuxOffset;\t/* offset to start of auxillary symbol entries*/\n+\tlong\tiauxMax;\t/* number of auxiliary symbol entries */\n+\tbfd_vma\tcbAuxOffset;\t/* offset to start of auxiliary symbol entries*/\n \tlong\tissMax;\t\t/* max index into local strings */\n \tbfd_vma\tcbSsOffset;\t/* offset to start of local strings */\n \tlong\tissExtMax;\t/* max index into external strings */"
    },
    {
      "sha": "ccc7a0613b90456005b79c56d1ce88c37c60389e",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1255,7 +1255,7 @@ struct aarch64_instr_sequence\n {\n   /* The instruction that caused this sequence to be opened.  */\n   aarch64_inst *instr;\n-  /* The number of instructions the above instruction allows to be kept in the\n+  /* The number of instructions the above instruction allows one to be kept in the\n      sequence before an automatic close is done.  */\n   int num_insns;\n   /* The instructions currently added to the sequence.  */"
    },
    {
      "sha": "ab0db961e1dd154b73fcc9115fcf12fc57cf4914",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-01  Nicolas Boulenguez  <nicolas@debian.org>\n+\n+\t* configure.tgt: Correct comment grammar.\n+\t* emultempl/m68hc1xelf.em: Likewise.\n+\t* ld.texi: Correct grammar.\n+\n 2021-01-01  Alan Modra  <amodra@gmail.com>\n \n \tUpdate year range in copyright notice of all files."
    },
    {
      "sha": "c04d0a1434b75bfa2a63bfb3d9130c0586840194",
      "filename": "ld/ChangeLog-9899",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ChangeLog-9899",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ChangeLog-9899",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog-9899?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1873,7 +1873,7 @@ Thu Mar 19 14:54:45 1998  Geoffrey Noer  <noer@cygnus.com>\n \tsection to avoid copying certain data on fork.  The linker used to\n \tinclude this between __data_start__ and __data_end__, but that\n \tbreaks building the cygwin32 dll.  The fix is to rename the\n-\tsection\t\".data_cygwin_nocopy\" and explictly include it after\n+\tsection\t\".data_cygwin_nocopy\" and explicitly include it after\n \t__data_end__.\n \n Wed Mar 18 09:42:24 1998  Nick Clifton  <nickc@cygnus.com>"
    },
    {
      "sha": "893d2daef940b0bd7615db9bc0d5b105f6fe0c09",
      "filename": "ld/configure.tgt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/configure.tgt",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/configure.tgt",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/configure.tgt?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1051,7 +1051,7 @@ sparc*-*-solaris2*)\n   ;;\n \n spu-*-elf*)\n-  # This allows to build a pair of PPU/SPU toolchains with common sysroot.\n+  # This allows one to build a pair of PPU/SPU toolchains with common sysroot.\n   NATIVE_LIB_DIRS='/lib'\n   ;;\n "
    },
    {
      "sha": "c4546c62777b798071decb63d340e15e75cec957",
      "filename": "ld/emultempl/m68hc1xelf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/emultempl/m68hc1xelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/emultempl/m68hc1xelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/m68hc1xelf.em?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -104,7 +104,7 @@ m68hc11_elf_${EMULATION_NAME}_before_allocation (void)\n      window (rx) : ORIGIN = 0x8000, LENGTH = 16K\n \n      But for 68HC11 this is board specific.  The definition of such\n-     memory region allows to control how this paged memory is accessed.  */\n+     memory region allows one to control how this paged memory is accessed.  */\n   region = lang_memory_region_lookup (bank_window_name, FALSE);\n \n   /* Check the length to see if it was defined in the script.  */"
    },
    {
      "sha": "7a602b9c6ab6f6cc352bf5dc7e0bdfb8b50e60a6",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -939,7 +939,7 @@ just copy in the newest one.\n @kindex --push-state\n @cindex push state governing input file handling\n @item --push-state\n-The @option{--push-state} allows to preserve the current state of the\n+The @option{--push-state} allows one to preserve the current state of the\n flags which govern the input file handling so that they can all be\n restored with one corresponding @option{--pop-state} option.\n "
    },
    {
      "sha": "abf836eef13f5afd02b8236eb33b2498e1b312f4",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -3296,7 +3296,7 @@\n \t(find_executable): Likewise.\n \t(win32_spawn): Cast alloca return to (char**).\n \tReplace malloc with XNEWVEC.\n-\tbcopy.c (bcopy): Add explict casts in assignments.\n+\tbcopy.c (bcopy): Add explicit casts in assignments.\n \n 2006-10-25  Ben Elliston  <bje@au.ibm.com>\n "
    },
    {
      "sha": "b482a7520aaf0e7db1c11293e38131959039f90e",
      "filename": "opcodes/ChangeLog-2016",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/opcodes/ChangeLog-2016",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7/opcodes/ChangeLog-2016",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog-2016?ref=f9a6a8f09dc2310d5f4a482a2e7ffc1be3984cd7",
      "patch": "@@ -1898,7 +1898,7 @@\n \t(create_map): Zero initialize instruction fields.\n \t(arcExtMap_instName): Remove.\n \t(arcExtMap_insn): New function.\n-\t(dump_ARC_extmap): More info while debuging.\n+\t(dump_ARC_extmap): More info while debugging.\n \t(arcExtMap_genOpcode): New function.\n \t* arc-dis.c (find_format): New function.\n \t(print_insn_arc): Use find_format."
    }
  ]
}