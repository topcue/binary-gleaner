{
  "sha": "4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGE4ZjE4MWQxOTZmODVjYTE1M2ZlNTFjYTZiYjQwOTQyZTBlMWVkNw==",
  "commit": {
    "author": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2020-09-15T00:57:39Z"
    },
    "committer": {
      "name": "Hans-Peter Nilsson",
      "email": "hp@bitrange.com",
      "date": "2020-09-15T00:57:39Z"
    },
    "message": "CRIS: fix PR ld/26589, a missing NULL check in fix for PR ld/22269\n\nNot sure why there wasn't a NULL check in the ld/22269 patch\n(e01c16a8) at the time, as there was one for the corresponding patch\nto elf32-m68k.c (5056ba1d).\n\nIncidentally, I had missed that in 2017, as a prerequisite for the\nld/22269 series, the check_relocs function finally were made \"safe\"!\n(I.e. the number of references and symbol types are final, garbage\ncollection done, so port-specific accounting can be made sanely.)\n\nCommitted.\n\nbfd:\n\tPR ld/26589\n\t* elf32-cris.c (cris_elf_check_relocs): Add missing NULL check\n\ton argument before calling UNDEFWEAK_NO_DYNAMIC_RELOC.\n\nld:\n\tPR ld/26589\n\t* testsuite/ld-elf/pr26589.d, testsuite/ld-elf/locref3.s: New test.",
    "tree": {
      "sha": "13880086e0071890f366e9c9fd9e4daab008025a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/13880086e0071890f366e9c9fd9e4daab008025a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "e1044e6adca7d48674d70a860b3a5939fe44323f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1044e6adca7d48674d70a860b3a5939fe44323f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e1044e6adca7d48674d70a860b3a5939fe44323f"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 42,
    "deletions": 1
  },
  "files": [
    {
      "sha": "4bb61e63244e129e27dc953194379b23854e0b4d",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
      "patch": "@@ -1,3 +1,9 @@\n+2020-09-15  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR ld/26589\n+\t* elf32-cris.c (cris_elf_check_relocs): Add missing NULL check\n+\ton argument before calling UNDEFWEAK_NO_DYNAMIC_RELOC.\n+\n 2020-09-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR ld/26391"
    },
    {
      "sha": "61f4b24fe0297f659a6c0d9633516b882dddc01f",
      "filename": "bfd/elf32-cris.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/bfd/elf32-cris.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/bfd/elf32-cris.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-cris.c?ref=4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
      "patch": "@@ -3359,7 +3359,7 @@ cris_elf_check_relocs (bfd *abfd,\n \n \t  /* No need to do anything if we're not creating a shared object.  */\n \t  if (! bfd_link_pic (info)\n-\t      || UNDEFWEAK_NO_DYNAMIC_RELOC (info, h))\n+\t      || (h != NULL && UNDEFWEAK_NO_DYNAMIC_RELOC (info, h)))\n \t    break;\n \n \t  /* We may need to create a reloc section in the dynobj and made room"
    },
    {
      "sha": "c65a18873607062f7885cf3fdd3739b2f79a795a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
      "patch": "@@ -1,3 +1,8 @@\n+2020-09-15  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tPR ld/26589\n+\t* testsuite/ld-elf/pr26589.d, testsuite/ld-elf/locref3.s: New test.\n+\n 2020-09-13  Alan Modra  <amodra@gmail.com>\n \n \tPR 26391"
    },
    {
      "sha": "7991097d99c67b3c06f802d7b582d5ee627eabdb",
      "filename": "ld/testsuite/ld-cris/locref3.s",
      "status": "added",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/testsuite/ld-cris/locref3.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/testsuite/ld-cris/locref3.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cris/locref3.s?ref=4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
      "patch": "@@ -0,0 +1,14 @@\n+; Test-case primarily from PR26589, which could have been locref3.d.\n+; A local (like \"static\") function, with all ELF decorations.\n+.text\n+ .type\talocalfunc,@function\n+ .p2align 1\n+alocalfunc:\n+\tnop\n+.Lfe1:\n+\t.size\talocalfunc,.Lfe1-alocalfunc\n+\n+; Random absolute reference to the address of alocalfunc, requiring a\n+; runtime relocation in code that needs to be PIC/PIE.\n+ .data\n+ .dword alocalfunc"
    },
    {
      "sha": "aee31434ca233e122ac5839b6b9db7b7fe9912fe",
      "filename": "ld/testsuite/ld-cris/pr26589.d",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/testsuite/ld-cris/pr26589.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a8f181d196f85ca153fe51ca6bb40942e0e1ed7/ld/testsuite/ld-cris/pr26589.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cris/pr26589.d?ref=4a8f181d196f85ca153fe51ca6bb40942e0e1ed7",
      "patch": "@@ -0,0 +1,16 @@\n+#source: dso-1.s\n+#source: locref3.s\n+#as: --pic --no-underscore --em=criself\n+#ld: --shared -m crislinux\n+#readelf: --dyn-syms -r\n+\n+# Besides typical DSO stuff (libdso-1.d), we here have a data section\n+# with an absolute reloc to a local symbol.  For the original\n+# test-case, this happened for a destructor (.dtors).\n+\n+Relocation section '\\.rela\\.dyn' at offset 0x[0-9a-f]+ contains 1 entry:\n+ Offset[ \t]+Info[ \t]+Type[ \t]+Sym\\.Value  Sym\\. Name \\+ Addend\n+[a-f0-9]+[ ]+0+c R_CRIS_RELATIVE[ ]+ [a-f0-9]+\n+\n+Symbol table '\\.dynsym' contains 3 entries:\n+#pass"
    }
  ]
}