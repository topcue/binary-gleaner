{
  "sha": "3c8ed65a5d9d754c79fa34741c51db187b56485c",
  "node_id": "C_kwDOANOeidoAKDNjOGVkNjVhNWQ5ZDc1NGM3OWZhMzQ3NDFjNTFkYjE4N2I1NjQ4NWM",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-30T08:12:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-10-31T00:27:52Z"
    },
    "message": "PR28518: signed integer overflow & free on unmalloced address\n\n\tPR 28518\n\t* vms-alpha.c (build_module_list): Don't lose malloc buffer address.\n\tUse unsigned variables.",
    "tree": {
      "sha": "027e5fe96877ec8533d52ee042ee0c83743424ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/027e5fe96877ec8533d52ee042ee0c83743424ca"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c8ed65a5d9d754c79fa34741c51db187b56485c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c8ed65a5d9d754c79fa34741c51db187b56485c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c8ed65a5d9d754c79fa34741c51db187b56485c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c8ed65a5d9d754c79fa34741c51db187b56485c/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fb9f44d410d955176b729a746cee22b0063068c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fb9f44d410d955176b729a746cee22b0063068c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fb9f44d410d955176b729a746cee22b0063068c2"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 10,
    "deletions": 10
  },
  "files": [
    {
      "sha": "10758d56e00b29ad8568535bac7284eab4fc3de9",
      "filename": "bfd/vms-alpha.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c8ed65a5d9d754c79fa34741c51db187b56485c/bfd/vms-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c8ed65a5d9d754c79fa34741c51db187b56485c/bfd/vms-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-alpha.c?ref=3c8ed65a5d9d754c79fa34741c51db187b56485c",
      "patch": "@@ -4794,26 +4794,26 @@ build_module_list (bfd *abfd)\n \t since we can compute the start address and the end address\n \t of every module from the section contents.  */\n       bfd_size_type size = bfd_section_size (dmt);\n-      unsigned char *ptr, *end;\n+      unsigned char *buf, *ptr, *end;\n \n-      if (! bfd_malloc_and_get_section (abfd, dmt, &ptr))\n+      if (! bfd_malloc_and_get_section (abfd, dmt, &buf))\n \treturn NULL;\n \n       vms_debug2 ((2, \"DMT\\n\"));\n \n+      ptr = buf;\n       end = ptr + size;\n-\n       while (end - ptr >= DBG_S_C_DMT_HEADER_SIZE)\n \t{\n \t  /* Each header declares a module with its start offset and size\n \t     of debug info in the DST section, as well as the count of\n \t     program sections (i.e. address spans) it contains.  */\n-\t  int modbeg = bfd_getl32 (ptr + DBG_S_L_DMT_MODBEG);\n-\t  int msize = bfd_getl32 (ptr + DBG_S_L_DST_SIZE);\n+\t  unsigned int modbeg = bfd_getl32 (ptr + DBG_S_L_DMT_MODBEG);\n+\t  unsigned int msize = bfd_getl32 (ptr + DBG_S_L_DST_SIZE);\n \t  int count = bfd_getl16 (ptr + DBG_S_W_DMT_PSECT_COUNT);\n \t  ptr += DBG_S_C_DMT_HEADER_SIZE;\n \n-\t  vms_debug2 ((3, \"module: modbeg = %d, size = %d, count = %d\\n\",\n+\t  vms_debug2 ((3, \"module: modbeg = %u, size = %u, count = %d\\n\",\n \t\t       modbeg, msize, count));\n \n \t  /* We create a 'module' structure for each program section since\n@@ -4823,8 +4823,8 @@ build_module_list (bfd *abfd)\n \t     cause problems in practice.  */\n \t  while (count-- > 0 && end - ptr >= DBG_S_C_DMT_PSECT_SIZE)\n \t    {\n-\t      int start = bfd_getl32 (ptr + DBG_S_L_DMT_PSECT_START);\n-\t      int length = bfd_getl32 (ptr + DBG_S_L_DMT_PSECT_LENGTH);\n+\t      unsigned int start = bfd_getl32 (ptr + DBG_S_L_DMT_PSECT_START);\n+\t      unsigned int length = bfd_getl32 (ptr + DBG_S_L_DMT_PSECT_LENGTH);\n \t      module = new_module (abfd);\n \t      module->modbeg = modbeg;\n \t      module->size = msize;\n@@ -4834,11 +4834,11 @@ build_module_list (bfd *abfd)\n \t      list = module;\n \t      ptr += DBG_S_C_DMT_PSECT_SIZE;\n \n-\t      vms_debug2 ((4, \"section: start = 0x%x, length = %d\\n\",\n+\t      vms_debug2 ((4, \"section: start = 0x%x, length = %u\\n\",\n \t\t\t   start, length));\n \t    }\n \t}\n-      free (ptr);\n+      free (buf);\n     }\n   else\n     {"
    }
  ]
}