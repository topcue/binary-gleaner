{
  "sha": "77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzdmZGIwZTAwYmQ0N2M1NjRjNGUzMjcyNmZjNjAyMGQ5NDQxZDRhNw==",
  "commit": {
    "author": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-01-16T13:34:50Z"
    },
    "committer": {
      "name": "John Darrington",
      "email": "john@darrington.wattle.id.au",
      "date": "2019-01-16T13:40:21Z"
    },
    "message": "S12Z: gas: Permit \"extend\" instructions which don't actually extend.\n\nOther assemblers permit \"extending\" a register into a register of a\nsmaller size or the same size.  It doesn't make much sense to do this\nbut would appear to be a valid instruction.  So change the error to a\nwarning.\n\ngas/\n\t* config/tc-s12z.c (tfr): Change as_bad to as_warn.\n\tAlso fix message typo and semantics.",
    "tree": {
      "sha": "f399a328c97f914c0223183504b2263c33638827",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f399a328c97f914c0223183504b2263c33638827"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77fdb0e00bd47c564c4e32726fc6020d9441d4a7/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "d5dcaf1b59e77047e10a1f246095d6b21f7d9772",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5dcaf1b59e77047e10a1f246095d6b21f7d9772",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d5dcaf1b59e77047e10a1f246095d6b21f7d9772"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 7,
    "deletions": 10
  },
  "files": [
    {
      "sha": "6b852c24030f467dd30179dce51834e6d14cabbf",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77fdb0e00bd47c564c4e32726fc6020d9441d4a7/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77fdb0e00bd47c564c4e32726fc6020d9441d4a7/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
      "patch": "@@ -1,5 +1,7 @@\n 2019-01-16  John Darrington <john@darrington.wattle.id.au>\n \n+        * config/tc-s12z.c (tfr): Change as_bad to as_warn.\n+\tAlso fix message typo and semantics.\n         * config/tc-s12z.c (emit_opr): Emit BFD_RELOC_S12Z_OPR instead of\n \tBFD_RELOC_24.\n \t* testsuite/gas/s12z/opr-indirect-expr.d: Expect R_S12Z_OPR instead"
    },
    {
      "sha": "f6c5889ed655c116bed9417a2f90f98acdb490e3",
      "filename": "gas/config/tc-s12z.c",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/77fdb0e00bd47c564c4e32726fc6020d9441d4a7/gas/config/tc-s12z.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/77fdb0e00bd47c564c4e32726fc6020d9441d4a7/gas/config/tc-s12z.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-s12z.c?ref=77fdb0e00bd47c564c4e32726fc6020d9441d4a7",
      "patch": "@@ -1316,16 +1316,11 @@ tfr (const struct instruction *insn)\n   if (!lex_reg_name (~0, &reg2))\n     goto fail;\n \n-  if ((0 == strcasecmp (\"sex\", insn->name))\n-      || (0 == strcasecmp (\"zex\", insn->name)))\n-    {\n-      if (registers[reg1].bytes >= registers[reg2].bytes)\n-\t{\n-\t  as_bad (_(\"Source register for %s must be smaller that the destination register\"),\n-\t\t  insn->name);\n-\t  goto fail;\n-\t}\n-    }\n+  if ( ((0 == strcasecmp (\"sex\", insn->name))\n+        || (0 == strcasecmp (\"zex\", insn->name)))\n+       && (registers[reg2].bytes <= registers[reg1].bytes))\n+      as_warn (_(\"Source register for %s is no larger than the destination register\"),\n+               insn->name);\n \n   char *f = s12z_new_insn (1 + insn->page);\n   if (insn->page == 2)"
    }
  ]
}