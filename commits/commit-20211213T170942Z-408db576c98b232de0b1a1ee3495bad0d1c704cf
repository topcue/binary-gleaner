{
  "sha": "408db576c98b232de0b1a1ee3495bad0d1c704cf",
  "node_id": "C_kwDOANOeidoAKDQwOGRiNTc2Yzk4YjIzMmRlMGIxYTFlZTM0OTViYWQwZDFjNzA0Y2Y",
  "commit": {
    "author": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-11-29T16:28:42Z"
    },
    "committer": {
      "name": "Carl Love",
      "email": "cel@us.ibm.com",
      "date": "2021-12-13T17:09:42Z"
    },
    "message": "gdb: Powerpc mark xfail in gdb.base/catch-syscall.exp\n\nPowerpc is not reporting the\n\n  Catchpoint 1 (returned from syscall execve),  ....\n\nas expected.  The issue appears to be with the kernel not returning the\nexpected result.  This patch marks the test failure as an xfail.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=28623",
    "tree": {
      "sha": "92d3cae3edf66607ef82dacefa8af6e70753a0c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92d3cae3edf66607ef82dacefa8af6e70753a0c2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/408db576c98b232de0b1a1ee3495bad0d1c704cf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408db576c98b232de0b1a1ee3495bad0d1c704cf",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/408db576c98b232de0b1a1ee3495bad0d1c704cf",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/408db576c98b232de0b1a1ee3495bad0d1c704cf/comments",
  "author": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "carlelove",
    "id": 86435705,
    "node_id": "MDQ6VXNlcjg2NDM1NzA1",
    "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/carlelove",
    "html_url": "https://github.com/carlelove",
    "followers_url": "https://api.github.com/users/carlelove/followers",
    "following_url": "https://api.github.com/users/carlelove/following{/other_user}",
    "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions",
    "organizations_url": "https://api.github.com/users/carlelove/orgs",
    "repos_url": "https://api.github.com/users/carlelove/repos",
    "events_url": "https://api.github.com/users/carlelove/events{/privacy}",
    "received_events_url": "https://api.github.com/users/carlelove/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e6582e1b3c194b01a2461f5c5326fcf358303607",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e6582e1b3c194b01a2461f5c5326fcf358303607",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e6582e1b3c194b01a2461f5c5326fcf358303607"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 31,
    "deletions": 6
  },
  "files": [
    {
      "sha": "b0d524c1a0314728387428b6bfa8d3e54ccb20fd",
      "filename": "gdb/testsuite/gdb.base/catch-syscall.exp",
      "status": "modified",
      "additions": 31,
      "deletions": 6,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/408db576c98b232de0b1a1ee3495bad0d1c704cf/gdb/testsuite/gdb.base/catch-syscall.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/408db576c98b232de0b1a1ee3495bad0d1c704cf/gdb/testsuite/gdb.base/catch-syscall.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/catch-syscall.exp?ref=408db576c98b232de0b1a1ee3495bad0d1c704cf",
      "patch": "@@ -127,7 +127,28 @@ proc check_return_from_syscall { syscall { pattern \"\" } } {\n     }\n \n     set thistest \"syscall $syscall has returned\"\n-    gdb_test \"continue\" \"Catchpoint $decimal \\\\(returned from syscall ${pattern}\\\\).*\" $thistest\n+    if { $pattern eq \"execve\" } {\n+\tgdb_test_multiple \"continue\" $thistest {\n+\t    -re -wrap \"Catchpoint $decimal \\\\(returned from syscall ${pattern}\\\\).*\" {\n+\t\tpass $thistest\n+\t\treturn 1\n+\t    }\n+\t    -re -wrap \".*Breakpoint $decimal, main .*\" {\n+\t\t# On Powerpc the kernel does not report the returned from\n+\t\t# syscall as expected by the test.  GDB bugzilla 28623.\n+\t\tif { [istarget \"powerpc64*-linux*\"] } {\n+\t\t    xfail $thistest\n+\t\t} else {\n+\t\t    fail $thistest\n+\t\t}\n+\t\treturn 0\n+\t    }\n+\t}\n+\n+    } else {\n+\tgdb_test \"continue\" \"Catchpoint $decimal \\\\(returned from syscall ${pattern}\\\\).*\" $thistest\n+\treturn 1\n+    }\n }\n \n # Internal procedure that performs two 'continue' commands and checks if\n@@ -142,7 +163,7 @@ proc check_continue { syscall { pattern \"\" } } {\n     # Testing if the inferior has called the syscall.\n     check_call_to_syscall $syscall $pattern\n     # And now, that the syscall has returned.\n-    check_return_from_syscall $syscall $pattern\n+    return [check_return_from_syscall $syscall $pattern]\n }\n \n # Inserts a syscall catchpoint with an argument.\n@@ -348,11 +369,15 @@ proc test_catch_syscall_execve {} {\n \t# Check for entry/return across the execve, making sure that the\n \t# syscall_state isn't lost when turning into a new process.\n \tinsert_catch_syscall_with_arg \"execve\"\n-\tcheck_continue \"execve\"\n+\tif [check_continue \"execve\"] {\n+\t    # The check_continue test generates an XFAIL on Powerpc.  In\n+\t    # that case, gdb is already at main so don't do the continue.\n+\n \n-\t# Continue to main so extended-remote can read files as needed.\n-\t# (Otherwise that \"Reading\" output confuses gdb_continue_to_end.)\n-\tgdb_continue \"main\"\n+\t    # Continue to main so extended-remote can read files as needed.\n+\t    # (Otherwise that \"Reading\" output confuses gdb_continue_to_end.)\n+\t    gdb_continue \"main\"\n+\t}\n \n \t# Now can we finish?\n \tcheck_for_program_end"
    }
  ]
}