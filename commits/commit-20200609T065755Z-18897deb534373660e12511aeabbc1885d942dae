{
  "sha": "18897deb534373660e12511aeabbc1885d942dae",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTg4OTdkZWI1MzQzNzM2NjBlMTI1MTFhZWFiYmMxODg1ZDk0MmRhZQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-06-09T06:57:55Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-06-09T06:57:55Z"
    },
    "message": "x86: fix {,V}MOV{L,H}PD disassembly\n\nNeither the legacy nor the VEX-encoded forms are permitted with register\noperands, just like is already the case for their store forms as well as\n{,V}MOV{L,H}PS.\n\nAt the same time, besides folding respective vex_len_table[] entries,\nadjust adjacent related legacy mod_table[] entries:\n- when the prefix was already decoded, PREFIX_OPCODE is pointless,\n- limit the amount of string literals by using X consistently on all\n  {,V}MOV{L,H}P{S,D} forms.",
    "tree": {
      "sha": "d6d1745f43de695b4b936c2a2e3cecfcd0fc253a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d6d1745f43de695b4b936c2a2e3cecfcd0fc253a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/18897deb534373660e12511aeabbc1885d942dae",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18897deb534373660e12511aeabbc1885d942dae",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/18897deb534373660e12511aeabbc1885d942dae",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18897deb534373660e12511aeabbc1885d942dae/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "97e6786a6e354de573a1ec8c5021addf0066417a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/97e6786a6e354de573a1ec8c5021addf0066417a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/97e6786a6e354de573a1ec8c5021addf0066417a"
    }
  ],
  "stats": {
    "total": 71,
    "additions": 48,
    "deletions": 23
  },
  "files": [
    {
      "sha": "c6f1d2691e6f1056aa3fa63e4ff58ef8b318814f",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18897deb534373660e12511aeabbc1885d942dae/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18897deb534373660e12511aeabbc1885d942dae/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=18897deb534373660e12511aeabbc1885d942dae",
      "patch": "@@ -1,3 +1,18 @@\n+2020-06-09  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (MOD_0F12_PREFIX_2, MOD_0F16_PREFIX_2,\n+\tMOD_VEX_0F12_PREFIX_2, MOD_VEX_0F16_PREFIX_2): New enumerators.\n+\t(VEX_LEN_0F12_P_2, VEX_LEN_0F16_P_2): Delete.\n+\t(VEX_LEN_0F12_P_2_M_0, VEX_LEN_0F16_P_2_M_0): Define.\n+\t(prefix_table): Decode MOD for cases 2 of opcodes 0F12, 0F16,\n+\tVEX_0F12, and VEX_0F16.\n+\t(vex_len_table): Use X for vmovlp* and vmovh*s. Drop\n+\tVEX_LEN_0F12_P_2 and VEX_LEN_0F16_P_2 entries.\n+\t(mod_table): Use X for movlpX and movhpX. Drop PREFIX_OPCODE\n+\tfrom movlps and movhlps. New MOD_0F12_PREFIX_2,\n+\tMOD_0F16_PREFIX_2, MOD_VEX_0F12_PREFIX_2, and\n+\tMOD_VEX_0F16_PREFIX_2 entries.\n+\n 2020-06-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (MOD_EVEX_0F12_PREFIX_2, MOD_EVEX_0F13,"
    },
    {
      "sha": "3861371ed4e2d567ccac5898cef5ac20937a6dbb",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 33,
      "deletions": 23,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18897deb534373660e12511aeabbc1885d942dae/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18897deb534373660e12511aeabbc1885d942dae/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=18897deb534373660e12511aeabbc1885d942dae",
      "patch": "@@ -778,8 +778,10 @@ enum\n   MOD_0F01_REG_5,\n   MOD_0F01_REG_7,\n   MOD_0F12_PREFIX_0,\n+  MOD_0F12_PREFIX_2,\n   MOD_0F13,\n   MOD_0F16_PREFIX_0,\n+  MOD_0F16_PREFIX_2,\n   MOD_0F17,\n   MOD_0F18_REG_0,\n   MOD_0F18_REG_1,\n@@ -842,8 +844,10 @@ enum\n   MOD_C4_32BIT,\n   MOD_C5_32BIT,\n   MOD_VEX_0F12_PREFIX_0,\n+  MOD_VEX_0F12_PREFIX_2,\n   MOD_VEX_0F13,\n   MOD_VEX_0F16_PREFIX_0,\n+  MOD_VEX_0F16_PREFIX_2,\n   MOD_VEX_0F17,\n   MOD_VEX_0F2B,\n   MOD_VEX_W_0_0F41_P_0_LEN_1,\n@@ -1799,11 +1803,11 @@ enum\n {\n   VEX_LEN_0F12_P_0_M_0 = 0,\n   VEX_LEN_0F12_P_0_M_1,\n-  VEX_LEN_0F12_P_2,\n+#define VEX_LEN_0F12_P_2_M_0 VEX_LEN_0F12_P_0_M_0\n   VEX_LEN_0F13_M_0,\n   VEX_LEN_0F16_P_0_M_0,\n   VEX_LEN_0F16_P_0_M_1,\n-  VEX_LEN_0F16_P_2,\n+#define VEX_LEN_0F16_P_2_M_0 VEX_LEN_0F16_P_0_M_0\n   VEX_LEN_0F17_M_0,\n   VEX_LEN_0F41_P_0,\n   VEX_LEN_0F41_P_2,\n@@ -3643,15 +3647,15 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { MOD_TABLE (MOD_0F12_PREFIX_0) },\n     { \"movsldup\", { XM, EXx }, PREFIX_OPCODE },\n-    { \"movlpd\",\t{ XM, EXq }, PREFIX_OPCODE },\n+    { MOD_TABLE (MOD_0F12_PREFIX_2) },\n     { \"movddup\", { XM, EXq }, PREFIX_OPCODE },\n   },\n \n   /* PREFIX_0F16 */\n   {\n     { MOD_TABLE (MOD_0F16_PREFIX_0) },\n     { \"movshdup\", { XM, EXx }, PREFIX_OPCODE },\n-    { \"movhpd\",\t{ XM, EXq }, PREFIX_OPCODE },\n+    { MOD_TABLE (MOD_0F16_PREFIX_2) },\n   },\n \n   /* PREFIX_0F1A */\n@@ -4648,15 +4652,15 @@ static const struct dis386 prefix_table[][4] = {\n   {\n     { MOD_TABLE (MOD_VEX_0F12_PREFIX_0) },\n     { \"vmovsldup\",\t{ XM, EXx }, 0 },\n-    { VEX_LEN_TABLE (VEX_LEN_0F12_P_2) },\n+    { MOD_TABLE (MOD_VEX_0F12_PREFIX_2) },\n     { \"vmovddup\",\t{ XM, EXymmq }, 0 },\n   },\n \n   /* PREFIX_VEX_0F16 */\n   {\n     { MOD_TABLE (MOD_VEX_0F16_PREFIX_0) },\n     { \"vmovshdup\",\t{ XM, EXx }, 0 },\n-    { VEX_LEN_TABLE (VEX_LEN_0F16_P_2) },\n+    { MOD_TABLE (MOD_VEX_0F16_PREFIX_2) },\n   },\n \n   /* PREFIX_VEX_0F2A */\n@@ -9279,41 +9283,31 @@ static const struct dis386 vex_table[][256] = {\n #include \"i386-dis-evex.h\"\n \n static const struct dis386 vex_len_table[][2] = {\n-  /* VEX_LEN_0F12_P_0_M_0 */\n+  /* VEX_LEN_0F12_P_0_M_0 / VEX_LEN_0F12_P_2_M_0 */\n   {\n-    { \"vmovlps\",\t{ XM, Vex128, EXq }, 0 },\n+    { \"vmovlpX\",\t{ XM, Vex128, EXq }, 0 },\n   },\n \n   /* VEX_LEN_0F12_P_0_M_1 */\n   {\n     { \"vmovhlps\",\t{ XM, Vex128, EXq }, 0 },\n   },\n \n-  /* VEX_LEN_0F12_P_2 */\n-  {\n-    { \"vmovlpd\",\t{ XM, Vex128, EXq }, 0 },\n-  },\n-\n   /* VEX_LEN_0F13_M_0 */\n   {\n     { \"vmovlpX\",\t{ EXq, XM }, PREFIX_OPCODE },\n   },\n \n-  /* VEX_LEN_0F16_P_0_M_0 */\n+  /* VEX_LEN_0F16_P_0_M_0 / VEX_LEN_0F16_P_2_M_0 */\n   {\n-    { \"vmovhps\",\t{ XM, Vex128, EXq }, 0 },\n+    { \"vmovhpX\",\t{ XM, Vex128, EXq }, 0 },\n   },\n \n   /* VEX_LEN_0F16_P_0_M_1 */\n   {\n     { \"vmovlhps\",\t{ XM, Vex128, EXq }, 0 },\n   },\n \n-  /* VEX_LEN_0F16_P_2 */\n-  {\n-    { \"vmovhpd\",\t{ XM, Vex128, EXq }, 0 },\n-  },\n-\n   /* VEX_LEN_0F17_M_0 */\n   {\n     { \"vmovhpX\",\t{ EXq, XM }, PREFIX_OPCODE },\n@@ -10225,18 +10219,26 @@ static const struct dis386 mod_table[][2] = {\n   },\n   {\n     /* MOD_0F12_PREFIX_0 */\n-    { \"movlps\",\t\t{ XM, EXq }, PREFIX_OPCODE },\n-    { \"movhlps\",\t{ XM, EXq }, PREFIX_OPCODE },\n+    { \"movlpX\",\t\t{ XM, EXq }, 0 },\n+    { \"movhlps\",\t{ XM, EXq }, 0 },\n+  },\n+  {\n+    /* MOD_0F12_PREFIX_2 */\n+    { \"movlpX\",\t{ XM, EXq }, 0 },\n   },\n   {\n     /* MOD_0F13 */\n     { \"movlpX\",\t\t{ EXq, XM }, PREFIX_OPCODE },\n   },\n   {\n     /* MOD_0F16_PREFIX_0 */\n-    { \"movhps\",\t\t{ XM, EXq }, 0 },\n+    { \"movhpX\",\t\t{ XM, EXq }, 0 },\n     { \"movlhps\",\t{ XM, EXq }, 0 },\n   },\n+  {\n+    /* MOD_0F16_PREFIX_2 */\n+    { \"movhpX\",\t{ XM, EXq }, 0 },\n+  },\n   {\n     /* MOD_0F17 */\n     { \"movhpX\",\t\t{ EXq, XM }, PREFIX_OPCODE },\n@@ -10518,6 +10520,10 @@ static const struct dis386 mod_table[][2] = {\n     { VEX_LEN_TABLE (VEX_LEN_0F12_P_0_M_0) },\n     { VEX_LEN_TABLE (VEX_LEN_0F12_P_0_M_1) },\n   },\n+  {\n+    /* MOD_VEX_0F12_PREFIX_2 */\n+    { VEX_LEN_TABLE (VEX_LEN_0F12_P_2_M_0) },\n+  },\n   {\n     /* MOD_VEX_0F13 */\n     { VEX_LEN_TABLE (VEX_LEN_0F13_M_0) },\n@@ -10527,6 +10533,10 @@ static const struct dis386 mod_table[][2] = {\n     { VEX_LEN_TABLE (VEX_LEN_0F16_P_0_M_0) },\n     { VEX_LEN_TABLE (VEX_LEN_0F16_P_0_M_1) },\n   },\n+  {\n+    /* MOD_VEX_0F16_PREFIX_2 */\n+    { VEX_LEN_TABLE (VEX_LEN_0F16_P_2_M_0) },\n+  },\n   {\n     /* MOD_VEX_0F17 */\n     { VEX_LEN_TABLE (VEX_LEN_0F17_M_0) },"
    }
  ]
}