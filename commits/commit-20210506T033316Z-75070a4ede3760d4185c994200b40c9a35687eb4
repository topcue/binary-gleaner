{
  "sha": "75070a4ede3760d4185c994200b40c9a35687eb4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzUwNzBhNGVkZTM3NjBkNDE4NWM5OTQyMDBiNDBjOWEzNTY4N2ViNA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-05T18:54:33Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-06T03:33:16Z"
    },
    "message": "sim: m32c/rl78/rx: fix command parsing\n\nUse buildargv to avoid writing to const memory and freeing invalid\npointers, and to avoid doing any string parsing ourselves.",
    "tree": {
      "sha": "c39fa3c90b5477908c863a51e7f3b5591e7420bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c39fa3c90b5477908c863a51e7f3b5591e7420bb"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/75070a4ede3760d4185c994200b40c9a35687eb4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75070a4ede3760d4185c994200b40c9a35687eb4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/75070a4ede3760d4185c994200b40c9a35687eb4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75070a4ede3760d4185c994200b40c9a35687eb4/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4467df35a93e4c8e5ff7549e8d23324c64f527bd",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4467df35a93e4c8e5ff7549e8d23324c64f527bd",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4467df35a93e4c8e5ff7549e8d23324c64f527bd"
    }
  ],
  "stats": {
    "total": 139,
    "additions": 59,
    "deletions": 80
  },
  "files": [
    {
      "sha": "b60faf5e707f53d20d4ca93723dd706d8713a574",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gdb-if.c: Include libiberty.h.\n+\t(sim_do_command): Rewrite to use buildargv.\n+\n 2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "c2aff064ff0f10057d8c231e8f0c237ae1d47201",
      "filename": "sim/m32c/gdb-if.c",
      "status": "modified",
      "additions": 14,
      "deletions": 25,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/m32c/gdb-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/m32c/gdb-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/gdb-if.c?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -27,6 +27,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include <ctype.h>\n \n #include \"ansidecl.h\"\n+#include \"libiberty.h\"\n #include \"gdb/callback.h\"\n #include \"gdb/remote-sim.h\"\n #include \"gdb/signals.h\"\n@@ -648,47 +649,35 @@ sim_stop_reason (SIM_DESC sd, enum sim_stop *reason_p, int *sigrc_p)\n void\n sim_do_command (SIM_DESC sd, const char *cmd)\n {\n-  const char *args;\n-  char *p = strdup (cmd);\n+  const char *arg;\n+  char **argv = buildargv (cmd);\n \n   check_desc (sd);\n \n-  /* Skip leading whitespace.  */\n-  while (isspace (*p))\n-    p++;\n-\n-  /* Find the extent of the command word.  */\n-  for (p = cmd; *p; p++)\n-    if (isspace (*p))\n-      break;\n-\n-  /* Null-terminate the command word, and record the start of any\n-     further arguments.  */\n-  if (*p)\n+  cmd = arg = \"\";\n+  if (argv != NULL)\n     {\n-      *p = '\\0';\n-      args = p + 1;\n-      while (isspace (*args))\n-\targs++;\n+      if (argv[0] != NULL)\n+\tcmd = argv[0];\n+      if (argv[1] != NULL)\n+\targ = argv[1];\n     }\n-  else\n-    args = p;\n \n   if (strcmp (cmd, \"trace\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \ttrace = 1;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \ttrace = 0;\n       else\n \tprintf (\"The 'sim trace' command expects 'on' or 'off' \"\n \t\t\"as an argument.\\n\");\n     }\n   else if (strcmp (cmd, \"verbose\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \tverbose = 1;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \tverbose = 0;\n       else\n \tprintf (\"The 'sim verbose' command expects 'on' or 'off'\"\n@@ -698,7 +687,7 @@ sim_do_command (SIM_DESC sd, const char *cmd)\n     printf (\"The 'sim' command expects either 'trace' or 'verbose'\"\n \t    \" as a subcommand.\\n\");\n \n-  free (p);\n+  freeargv (argv);\n }\n \n char **"
    },
    {
      "sha": "f26d4d7a3ef39c81141a9453525e77b69a25ddd8",
      "filename": "sim/rl78/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rl78/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rl78/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/ChangeLog?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gdb-if.c: Include libiberty.h.\n+\t(sim_do_command): Rewrite to use buildargv.\n+\n 2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* cpu.c (trace_register_init): Add missing (void)."
    },
    {
      "sha": "f4b6754f58733c97e29deb812cdcf2a23db74593",
      "filename": "sim/rl78/gdb-if.c",
      "status": "modified",
      "additions": 15,
      "deletions": 29,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rl78/gdb-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rl78/gdb-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rl78/gdb-if.c?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -27,6 +27,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include <stdlib.h>\n \n #include \"ansidecl.h\"\n+#include \"libiberty.h\"\n #include \"gdb/callback.h\"\n #include \"gdb/remote-sim.h\"\n #include \"gdb/signals.h\"\n@@ -533,52 +534,37 @@ sim_stop_reason (SIM_DESC sd, enum sim_stop *reason_p, int *sigrc_p)\n void\n sim_do_command (SIM_DESC sd, const char *cmd)\n {\n-  const char *args;\n-  char *p = strdup (cmd);\n+  const char *arg;\n+  char **argv = buildargv (cmd);\n \n   check_desc (sd);\n \n-  if (cmd == NULL)\n+  cmd = arg = \"\";\n+  if (argv != NULL)\n     {\n-      cmd = \"\";\n-      args = \"\";\n-    }\n-  else\n-    {\n-      /* Skip leading whitespace.  */\n-      while (isspace (*p))\n-\tp++;\n-\n-      /* Null-terminate the command word, and record the start of any\n-\t further arguments.  */\n-      if (*p)\n-\t{\n-\t  *p = '\\0';\n-\t  args = p + 1;\n-\t  while (isspace (*args))\n-\t    args++;\n-\t}\n-      else\n-\targs = p;\n+      if (argv[0] != NULL)\n+\tcmd = argv[0];\n+      if (argv[1] != NULL)\n+\targ = argv[1];\n     }\n \n   if (strcmp (cmd, \"trace\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \ttrace = 1;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \ttrace = 0;\n       else\n \tprintf (\"The 'sim trace' command expects 'on' or 'off' \"\n \t\t\"as an argument.\\n\");\n     }\n   else if (strcmp (cmd, \"verbose\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \tverbose = 1;\n-      else if (strcmp (args, \"noisy\") == 0)\n+      else if (strcmp (arg, \"noisy\") == 0)\n \tverbose = 2;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \tverbose = 0;\n       else\n \tprintf (\"The 'sim verbose' command expects 'on', 'noisy', or 'off'\"\n@@ -588,7 +574,7 @@ sim_do_command (SIM_DESC sd, const char *cmd)\n     printf (\"The 'sim' command expects either 'trace' or 'verbose'\"\n \t    \" as a subcommand.\\n\");\n \n-  free (p);\n+  freeargv (argv);\n }\n \n /* Stub for command completion.  */"
    },
    {
      "sha": "b941cafcd57d5b1a2db6fbb51db853197422b518",
      "filename": "sim/rx/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rx/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rx/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/ChangeLog?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* gdb-if.c: Include libiberty.h.\n+\t(sim_do_command): Rewrite to use buildargv.\n+\n 2021-05-04  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "ec419109588892aef3c73ef81d7d3ec2e5b0cf9d",
      "filename": "sim/rx/gdb-if.c",
      "status": "modified",
      "additions": 15,
      "deletions": 26,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rx/gdb-if.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/75070a4ede3760d4185c994200b40c9a35687eb4/sim/rx/gdb-if.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/rx/gdb-if.c?ref=75070a4ede3760d4185c994200b40c9a35687eb4",
      "patch": "@@ -27,6 +27,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include <stdlib.h>\n \n #include \"ansidecl.h\"\n+#include \"libiberty.h\"\n #include \"gdb/callback.h\"\n #include \"gdb/remote-sim.h\"\n #include \"gdb/signals.h\"\n@@ -794,49 +795,37 @@ sim_stop_reason (SIM_DESC sd, enum sim_stop *reason_p, int *sigrc_p)\n void\n sim_do_command (SIM_DESC sd, const char *cmd)\n {\n-  const char *args;\n-  char *p = strdup (cmd);\n+  const char *arg;\n+  char **argv = buildargv (cmd);\n \n   check_desc (sd);\n \n-  /* Skip leading whitespace.  */\n-  while (isspace (*p))\n-    p++;\n-\n-  /* Find the extent of the command word.  */\n-  for (; *p != '\\0'; p++)\n-    if (isspace (*p))\n-      break;\n-\n-  /* Null-terminate the command word, and record the start of any\n-     further arguments.  */\n-  if (*p != '\\0')\n+  cmd = arg = \"\";\n+  if (argv != NULL)\n     {\n-      *p = '\\0';\n-      args = p + 1;\n-      while (isspace (*args))\n-\targs++;\n+      if (argv[0] != NULL)\n+\tcmd = argv[0];\n+      if (argv[1] != NULL)\n+\targ = argv[1];\n     }\n-  else\n-    args = p;\n \n   if (strcmp (cmd, \"trace\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \ttrace = 1;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \ttrace = 0;\n       else\n \tprintf (\"The 'sim trace' command expects 'on' or 'off' \"\n \t\t\"as an argument.\\n\");\n     }\n   else if (strcmp (cmd, \"verbose\") == 0)\n     {\n-      if (strcmp (args, \"on\") == 0)\n+      if (strcmp (arg, \"on\") == 0)\n \tverbose = 1;\n-      else if (strcmp (args, \"noisy\") == 0)\n+      else if (strcmp (arg, \"noisy\") == 0)\n \tverbose = 2;\n-      else if (strcmp (args, \"off\") == 0)\n+      else if (strcmp (arg, \"off\") == 0)\n \tverbose = 0;\n       else\n \tprintf (\"The 'sim verbose' command expects 'on', 'noisy', or 'off'\"\n@@ -846,7 +835,7 @@ sim_do_command (SIM_DESC sd, const char *cmd)\n     printf (\"The 'sim' command expects either 'trace' or 'verbose'\"\n \t    \" as a subcommand.\\n\");\n \n-  free (p);\n+  freeargv (argv);\n }\n \n char **"
    }
  ]
}