{
  "sha": "db3b6ecc28a079768dc4661e459c4a68039e8483",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGIzYjZlY2MyOGEwNzk3NjhkYzQ2NjFlNDU5YzRhNjgwMzllODQ4Mw==",
  "commit": {
    "author": {
      "name": "Kito Cheng",
      "email": "kito.cheng@sifive.com",
      "date": "2019-08-20T09:47:58Z"
    },
    "committer": {
      "name": "Kito Cheng",
      "email": "kito.cheng@sifive.com",
      "date": "2019-08-26T02:16:43Z"
    },
    "message": "RISC-V: Improve li expansion for better code density.\n\nli is a pseudo instruction in RISC-V, it might expand to more than one\ninstructions if the immediate value can't fit addi or lui, but the\nassembler will always using 4-byte instructions during expansion.\n\nFor example:\n\n li a0, 0x12345001\n\nwill expand into\n\n 12345537 lui a0,0x12345\n 00150513 addi a0,a0,1\n\nbut addi could be compress into\n\n 0505 addi a0,a0,1\n\nIt because load_const use macro_build to emit instructions,\nand macro_build call append_insn, and expect it will compress\nit if possible, but the fact is append_insn never compress anything,\n\nSo this patch redirect the li expansion flow to normal instruction\nemission flow via md_assemble, added md_assemblef as an wrapper for\nthat for easier emit instruction with printf-style argument to build\ninstruction.\n\ngas/ChangeLog:\n\n\t* tc-riscv.c (md_assemblef): New.\n\t(load_const) Use md_assemblef instead of macro_build to emit\n\tinstructions.\n\t* testsuite/gas/riscv/li32.d: New.\n\t* testsuite/gas/riscv/li32.s: Ditto.\n\t* testsuite/gas/riscv/li64.d: Ditto.\n\t* testsuite/gas/riscv/li64.s: Ditto.",
    "tree": {
      "sha": "403570cbcf20a4fc6f0c25b53d5fc58b47102a46",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/403570cbcf20a4fc6f0c25b53d5fc58b47102a46"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db3b6ecc28a079768dc4661e459c4a68039e8483",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db3b6ecc28a079768dc4661e459c4a68039e8483",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db3b6ecc28a079768dc4661e459c4a68039e8483",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db3b6ecc28a079768dc4661e459c4a68039e8483/comments",
  "author": {
    "login": "kito-cheng",
    "id": 2723185,
    "node_id": "MDQ6VXNlcjI3MjMxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kito-cheng",
    "html_url": "https://github.com/kito-cheng",
    "followers_url": "https://api.github.com/users/kito-cheng/followers",
    "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}",
    "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions",
    "organizations_url": "https://api.github.com/users/kito-cheng/orgs",
    "repos_url": "https://api.github.com/users/kito-cheng/repos",
    "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kito-cheng/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kito-cheng",
    "id": 2723185,
    "node_id": "MDQ6VXNlcjI3MjMxODU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kito-cheng",
    "html_url": "https://github.com/kito-cheng",
    "followers_url": "https://api.github.com/users/kito-cheng/followers",
    "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}",
    "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions",
    "organizations_url": "https://api.github.com/users/kito-cheng/orgs",
    "repos_url": "https://api.github.com/users/kito-cheng/repos",
    "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kito-cheng/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "23c13d42999cdcf9d224f089891fd3f3c8bdc6aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/23c13d42999cdcf9d224f089891fd3f3c8bdc6aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/23c13d42999cdcf9d224f089891fd3f3c8bdc6aa"
    }
  ],
  "stats": {
    "total": 113,
    "additions": 108,
    "deletions": 5
  },
  "files": [
    {
      "sha": "12047d7210532869ca5ecb170c512027d0124f1c",
      "filename": "gas/config/tc-riscv.c",
      "status": "modified",
      "additions": 33,
      "deletions": 5,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/config/tc-riscv.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/config/tc-riscv.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-riscv.c?ref=db3b6ecc28a079768dc4661e459c4a68039e8483",
      "patch": "@@ -928,6 +928,29 @@ macro_build (expressionS *ep, const char *name, const char *fmt, ...)\n   append_insn (&insn, ep, r);\n }\n \n+/* Build an instruction created by a macro expansion.  Like md_assemble but\n+   accept a printf-style format string and arguments.  */\n+\n+static void\n+md_assemblef (const char *format, ...)\n+{\n+  char *buf = NULL;\n+  va_list ap;\n+  int r;\n+\n+  va_start (ap, format);\n+\n+  r = vasprintf (&buf, format, ap);\n+\n+  if (r < 0)\n+    as_fatal (_(\"internal error: vasprintf failed\"));\n+\n+  md_assemble (buf);\n+  free(buf);\n+\n+  va_end (ap);\n+}\n+\n /* Sign-extend 32-bit mode constants that have bit 31 set and all higher bits\n    unset.  */\n static void\n@@ -1013,6 +1036,7 @@ static void\n load_const (int reg, expressionS *ep)\n {\n   int shift = RISCV_IMM_BITS;\n+  bfd_vma upper_imm;\n   expressionS upper = *ep, lower = *ep;\n   lower.X_add_number = (int32_t) ep->X_add_number << (32-shift) >> (32-shift);\n   upper.X_add_number -= lower.X_add_number;\n@@ -1032,9 +1056,10 @@ load_const (int reg, expressionS *ep)\n       upper.X_add_number = (int64_t) upper.X_add_number >> shift;\n       load_const (reg, &upper);\n \n-      macro_build (NULL, \"slli\", \"d,s,>\", reg, reg, shift);\n+      md_assemblef (\"slli x%d, x%d, 0x%x\", reg, reg, shift);\n       if (lower.X_add_number != 0)\n-\tmacro_build (&lower, \"addi\", \"d,s,j\", reg, reg, BFD_RELOC_RISCV_LO12_I);\n+\tmd_assemblef (\"addi x%d, x%d, %\" BFD_VMA_FMT \"d\", reg, reg,\n+\t\t      lower.X_add_number);\n     }\n   else\n     {\n@@ -1043,13 +1068,16 @@ load_const (int reg, expressionS *ep)\n \n       if (upper.X_add_number != 0)\n \t{\n-\t  macro_build (ep, \"lui\", \"d,u\", reg, BFD_RELOC_RISCV_HI20);\n+\t  /* Discard low part and zero-extend upper immediate.  */\n+\t  upper_imm = ((uint32_t)upper.X_add_number >> shift);\n+\n+\t  md_assemblef (\"lui x%d, 0x%\" BFD_VMA_FMT \"x\", reg, upper_imm);\n \t  hi_reg = reg;\n \t}\n \n       if (lower.X_add_number != 0 || hi_reg == 0)\n-\tmacro_build (ep, ADD32_INSN, \"d,s,j\", reg, hi_reg,\n-\t\t     BFD_RELOC_RISCV_LO12_I);\n+\tmd_assemblef (\"%s x%d, x%d, %\" BFD_VMA_FMT \"d\", ADD32_INSN, reg, hi_reg,\n+\t\t      lower.X_add_number);\n     }\n }\n "
    },
    {
      "sha": "ff0827dde996b29b2d8feb9055e817d7f94de96e",
      "filename": "gas/testsuite/gas/riscv/li32.d",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li32.d?ref=db3b6ecc28a079768dc4661e459c4a68039e8483",
      "patch": "@@ -0,0 +1,17 @@\n+#as: -march=rv32ic -mabi=ilp32\n+#objdump: -dr\n+\n+.*:     file format elf32-littleriscv\n+\n+\n+Disassembly of section .text:\n+\n+0+000 <target>:\n+[^:]+:[ \t]+6521[ \t]+lui[ \t]+a0,0x8\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+6509[ \t]+lui[ \t]+a0,0x2\n+[^:]+:[ \t]+f0150513[ \t]+addi[ \t]+a0,a0,-255 # .*\n+[^:]+:[ \t]+12345537[ \t]+lui[ \t]+a0,0x12345\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+f2345537[ \t]+lui[ \t]+a0,0xf2345\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1"
    },
    {
      "sha": "1930cd813ff8acb2ee83a8578f2aac417e1eceae",
      "filename": "gas/testsuite/gas/riscv/li32.s",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li32.s?ref=db3b6ecc28a079768dc4661e459c4a68039e8483",
      "patch": "@@ -0,0 +1,5 @@\n+target:\n+        li  a0, 0x8001\n+        li  a0, 0x1f01\n+        li  a0, 0x12345001\n+        li  a0, 0xf2345001"
    },
    {
      "sha": "54213031cc51d230b3b4b7ea16ffcc5c25d67950",
      "filename": "gas/testsuite/gas/riscv/li64.d",
      "status": "added",
      "additions": 44,
      "deletions": 0,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li64.d?ref=db3b6ecc28a079768dc4661e459c4a68039e8483",
      "patch": "@@ -0,0 +1,44 @@\n+#as: -march=rv64ic -mabi=lp64\n+#objdump: -dr\n+\n+.*:     file format elf64-littleriscv\n+\n+\n+Disassembly of section .text:\n+\n+0000000000000000 <target>:\n+[^:]+:[ \t]+6521[ \t]+lui[ \t]+a0,0x8\n+[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1\n+[^:]+:[ \t]+6509[ \t]+lui[ \t]+a0,0x2\n+[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255\n+[^:]+:[ \t]+12345537[ \t]+lui[ \t]+a0,0x12345\n+[^:]+:[ \t]+2505[ \t]+addiw[ \t]+a0,a0,1\n+[^:]+:[ \t]+000f2537[ \t]+lui[ \t]+a0,0xf2\n+[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837\n+[^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+00f12537[ \t]+lui[ \t]+a0,0xf12\n+[^:]+:[ \t]+3455051b[ \t]+addiw[ \t]+a0,a0,837\n+[^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+ff010537[ \t]+lui[ \t]+a0,0xff010\n+[^:]+:[ \t]+f015051b[ \t]+addiw[ \t]+a0,a0,-255\n+[^:]+:[ \t]+054e[ \t]+slli[ \t]+a0,a0,0x13\n+[^:]+:[ \t]+80150513[ \t]+addi[ \t]+a0,a0,-2047 # .*\n+[^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n+[^:]+:[ \t]+f0150513[ \t]+addi[ \t]+a0,a0,-255\n+[^:]+:[ \t]+0010051b[ \t]+addiw[ \t]+a0,zero,1\n+[^:]+:[ \t]+151a[ \t]+slli[ \t]+a0,a0,0x26\n+[^:]+:[ \t]+1565[ \t]+addi[ \t]+a0,a0,-7\n+[^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n+[^:]+:[ \t]+34550513[ \t]+addi[ \t]+a0,a0,837\n+[^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1\n+[^:]+:[ \t]+01fc4537[ \t]+lui[ \t]+a0,0x1fc4\n+[^:]+:[ \t]+c915051b[ \t]+addiw[ \t]+a0,a0,-879\n+[^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n+[^:]+:[ \t]+1565[ \t]+addi[ \t]+a0,a0,-7\n+[^:]+:[ \t]+0536[ \t]+slli[ \t]+a0,a0,0xd\n+[^:]+:[ \t]+34550513[ \t]+addi[ \t]+a0,a0,837 # .*\n+[^:]+:[ \t]+0532[ \t]+slli[ \t]+a0,a0,0xc\n+[^:]+:[ \t]+0505[ \t]+addi[ \t]+a0,a0,1"
    },
    {
      "sha": "aab19eb257b3620c9f230a0c0e99a98de0ab8865",
      "filename": "gas/testsuite/gas/riscv/li64.s",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db3b6ecc28a079768dc4661e459c4a68039e8483/gas/testsuite/gas/riscv/li64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/riscv/li64.s?ref=db3b6ecc28a079768dc4661e459c4a68039e8483",
      "patch": "@@ -0,0 +1,9 @@\n+target:\n+        li  a0, 0x8001\n+        li  a0, 0x1f01\n+        li  a0, 0x12345001\n+        li  a0, 0xf2345001\n+        li  a0, 0xf12345001\n+        li  a0, 0xff00ff00ff001f01\n+        li  a0, 0x7ffffffff2345001\n+        li  a0, 0x7f0f243ff2345001"
    }
  ]
}