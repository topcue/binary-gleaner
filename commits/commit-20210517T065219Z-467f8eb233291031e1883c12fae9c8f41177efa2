{
  "sha": "467f8eb233291031e1883c12fae9c8f41177efa2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDY3ZjhlYjIzMzI5MTAzMWUxODgzYzEyZmFlOWM4ZjQxMTc3ZWZhMg==",
  "commit": {
    "author": {
      "name": "Bhuvanendra Kumar N",
      "email": "Bhuvanendra.KumarN@amd.com",
      "date": "2021-05-17T06:52:19Z"
    },
    "committer": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2021-05-17T06:52:19Z"
    },
    "message": "gdb/fortran: test case modified to suit the clang behavior.\n\nAs mentioned in the test case itself, depending on the fortran compiler\nused, class member names used in the print commands and also output of\nthese print commands varies. Existing print commands and its output are\nsuited for gfortran, hence they were failing with clang compiler and test\ncase was modified accordingly for clang compiler.\n\ngdb/testsuite/ChangeLog:\n        * gdb.base/class-allocatable-array.exp: Modified test for clang.",
    "tree": {
      "sha": "1f60eb95866035959d341cdb6c7679c5b6702a3e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1f60eb95866035959d341cdb6c7679c5b6702a3e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/467f8eb233291031e1883c12fae9c8f41177efa2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/467f8eb233291031e1883c12fae9c8f41177efa2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/467f8eb233291031e1883c12fae9c8f41177efa2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/467f8eb233291031e1883c12fae9c8f41177efa2/comments",
  "author": {
    "login": "bhuvanendrakumarn",
    "id": 64949312,
    "node_id": "MDQ6VXNlcjY0OTQ5MzEy",
    "avatar_url": "https://avatars.githubusercontent.com/u/64949312?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bhuvanendrakumarn",
    "html_url": "https://github.com/bhuvanendrakumarn",
    "followers_url": "https://api.github.com/users/bhuvanendrakumarn/followers",
    "following_url": "https://api.github.com/users/bhuvanendrakumarn/following{/other_user}",
    "gists_url": "https://api.github.com/users/bhuvanendrakumarn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bhuvanendrakumarn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bhuvanendrakumarn/subscriptions",
    "organizations_url": "https://api.github.com/users/bhuvanendrakumarn/orgs",
    "repos_url": "https://api.github.com/users/bhuvanendrakumarn/repos",
    "events_url": "https://api.github.com/users/bhuvanendrakumarn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bhuvanendrakumarn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f4fdd84587e80bc6e327b89b162504d306933609",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4fdd84587e80bc6e327b89b162504d306933609",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f4fdd84587e80bc6e327b89b162504d306933609"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 14,
    "deletions": 3
  },
  "files": [
    {
      "sha": "5a0159ffe6e7750f855858e3b1b41d3d14c0ed2d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/467f8eb233291031e1883c12fae9c8f41177efa2/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/467f8eb233291031e1883c12fae9c8f41177efa2/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=467f8eb233291031e1883c12fae9c8f41177efa2",
      "patch": "@@ -1,3 +1,7 @@\n+2021-05-17  Bhuvanendra Kumar N  <Bhuvanendra.KumarN@amd.com>\n+\n+\t* gdb.base/class-allocatable-array.exp: Modified test for clang.\n+\n 2021-05-16  Weimin Pan  <weimin.pan@oracle.com>\n \n \t* gdb.ctf/funcreturn.exp: New file."
    },
    {
      "sha": "b98cd4fa13028c2814cd90a727ba39f6fbe4de5c",
      "filename": "gdb/testsuite/gdb.fortran/class-allocatable-array.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/467f8eb233291031e1883c12fae9c8f41177efa2/gdb/testsuite/gdb.fortran/class-allocatable-array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/467f8eb233291031e1883c12fae9c8f41177efa2/gdb/testsuite/gdb.fortran/class-allocatable-array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/class-allocatable-array.exp?ref=467f8eb233291031e1883c12fae9c8f41177efa2",
      "patch": "@@ -38,6 +38,13 @@ gdb_continue_to_breakpoint \"Break Here\"\n # different names, or maybe a completely different approach, for\n # representing class like structures.  The following tests are\n # cetainly going to fail.\n-gdb_test \"print this\" \" = \\\\( _data = \\[^\\r\\n\\]+, _vptr = \\[^\\r\\n\\]+\\\\)\"\n-gdb_test \"print this%_data\" \" = \\\\(PTR TO -> \\\\( Type test_type \\\\)\\\\) \\[^\\r\\n\\]+\"\n-gdb_test \"print this%_data%b\" \" = \\\\(\\\\(1, 2, 3\\\\) \\\\(4, 5, 6\\\\)\\\\)\"\n+# Hence the test case is modified for clang.\n+if {[test_compiler_info {clang-*}]} {\n+    gdb_test \"print this\" \" = \\\\( a = 0, b = \\\\(\\\\(1, 2, 3\\\\) \\\\(4, 5, 6\\\\)\\\\) \\\\)\"\n+    gdb_test \"print this%a\" \" = 0\"\n+    gdb_test \"print this%b\" \" = \\\\(\\\\(1, 2, 3\\\\) \\\\(4, 5, 6\\\\)\\\\)\"\n+} else {\n+    gdb_test \"print this\" \" = \\\\( _data = \\[^\\r\\n\\]+, _vptr = \\[^\\r\\n\\]+\\\\)\"\n+    gdb_test \"print this%_data\" \" = \\\\(PTR TO -> \\\\( Type test_type \\\\)\\\\) \\[^\\r\\n\\]+\"\n+    gdb_test \"print this%_data%b\" \" = \\\\(\\\\(1, 2, 3\\\\) \\\\(4, 5, 6\\\\)\\\\)\"\n+}"
    }
  ]
}