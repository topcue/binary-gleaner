{
  "sha": "6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmI1NDY1YjkxN2VkMzdmN2NlNWU5YmMwYjkxZTA3ZTdhZGFmMTAxYQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-04T15:56:02Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2021-03-04T15:56:02Z"
    },
    "message": "bfd: prune COFF/PE section flags setting\n\nIt is my understanding that IMAGE_SCN_LNK_* are supposed to communicate\ninformation to the (static) linker, and become at best meaningless in PE\nimages. I wouldn't call loaders wrong which would refuse to process\nsections with any of these bits set. While there's no replacement for\nIMAGE_SCN_LNK_COMDAT, use IMAGE_SCN_MEM_DISCARDABLE in place of\nIMAGE_SCN_LNK_REMOVE in this case.",
    "tree": {
      "sha": "423f20bd44c045feca2d7dc4ee156225588e6f16",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/423f20bd44c045feca2d7dc4ee156225588e6f16"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6fa7408d72b3805536e3579ba46b48f07f2e780a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6fa7408d72b3805536e3579ba46b48f07f2e780a"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 17,
    "deletions": 3
  },
  "files": [
    {
      "sha": "7379e7b80b7e377d13c6e1ba9e8bfa65c3e4a6c9",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-04  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* coffcode.h (sec_to_styp_flags): Don't set IMAGE_SCN_LNK_* in\n+\tfinal PE images.\n+\n 2021-03-04  Alan Modra  <amodra@gmail.com>\n \n \t* rs6000-core.c (rs6000coff_core_p): Correct prototype."
    },
    {
      "sha": "814922ee11d00dfdcf05cbf0de8d828beafb77cf",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 12,
      "deletions": 3,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=6b5465b917ed37f7ce5e9bc0b91e07e7adaf101a",
      "patch": "@@ -672,22 +672,31 @@ sec_to_styp_flags (const char *sec_name, flagword sec_flags)\n   /* skip ROM */\n   /* skip constRUCTOR */\n   /* skip CONTENTS */\n+#ifndef COFF_IMAGE_WITH_PE\n+  /* I don't think any of the IMAGE_SCN_LNK_* flags set below should be set\n+     when the output is PE. Only object files should have them, for the linker\n+     to consume.  */\n   if ((sec_flags & SEC_IS_COMMON) != 0)\n     styp_flags |= IMAGE_SCN_LNK_COMDAT;\n+#endif\n   if ((sec_flags & SEC_DEBUGGING) != 0)\n     styp_flags |= IMAGE_SCN_MEM_DISCARDABLE;\n-  if ((sec_flags & SEC_EXCLUDE) != 0 && !is_dbg)\n-    styp_flags |= IMAGE_SCN_LNK_REMOVE;\n-  if ((sec_flags & SEC_NEVER_LOAD) != 0 && !is_dbg)\n+  if ((sec_flags & (SEC_EXCLUDE | SEC_NEVER_LOAD)) != 0 && !is_dbg)\n+#ifdef COFF_IMAGE_WITH_PE\n+    styp_flags |= IMAGE_SCN_MEM_DISCARDABLE;\n+#else\n     styp_flags |= IMAGE_SCN_LNK_REMOVE;\n+#endif\n   /* skip IN_MEMORY */\n   /* skip SORT */\n+#ifndef COFF_IMAGE_WITH_PE\n   if (sec_flags & SEC_LINK_ONCE)\n     styp_flags |= IMAGE_SCN_LNK_COMDAT;\n   if ((sec_flags\n        & (SEC_LINK_DUPLICATES_DISCARD | SEC_LINK_DUPLICATES_SAME_CONTENTS\n \t  | SEC_LINK_DUPLICATES_SAME_SIZE)) != 0)\n     styp_flags |= IMAGE_SCN_LNK_COMDAT;\n+#endif\n \n   /* skip LINKER_CREATED */\n "
    }
  ]
}