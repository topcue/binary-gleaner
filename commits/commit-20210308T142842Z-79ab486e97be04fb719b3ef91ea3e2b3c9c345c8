{
  "sha": "79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzlhYjQ4NmU5N2JlMDRmYjcxOWIzZWY5MWVhM2UyYjNjOWMzNDVjOA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:42Z"
    },
    "message": "Remove BINOP_END\n\nBINOP_END is used only as a \"meaningless\" value in various tables.\nThis patch changes these to use OP_NULL instead, and removes\nBINOP_END.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* std-operator.def (BINOP_END): Remove.\n\t* p-exp.y (tokentab3, tokentab2): Use OP_NULL, not BINOP_END.\n\t* go-exp.y (tokentab2): Use OP_NULL, not BINOP_END.\n\t* f-exp.y (dot_ops, f77_keywords): Use OP_NULL, not BINOP_END.\n\t* d-exp.y (tokentab2, ident_tokens): Use OP_NULL, not BINOP_END.\n\t* c-exp.y (tokentab3, tokentab2, ident_tokens): Use OP_NULL, not\n\tBINOP_END.",
    "tree": {
      "sha": "1b39de74730be6deff4867a32e2d077a832a4654",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1b39de74730be6deff4867a32e2d077a832a4654"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "48fa6f23ec1aaf2ad031673f4c98adb6d411f043",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48fa6f23ec1aaf2ad031673f4c98adb6d411f043",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/48fa6f23ec1aaf2ad031673f4c98adb6d411f043"
    }
  ],
  "stats": {
    "total": 207,
    "additions": 107,
    "deletions": 100
  },
  "files": [
    {
      "sha": "97f029f402c89014a7e6853b1e145cd8f823b7d6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -1,3 +1,13 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* std-operator.def (BINOP_END): Remove.\n+\t* p-exp.y (tokentab3, tokentab2): Use OP_NULL, not BINOP_END.\n+\t* go-exp.y (tokentab2): Use OP_NULL, not BINOP_END.\n+\t* f-exp.y (dot_ops, f77_keywords): Use OP_NULL, not BINOP_END.\n+\t* d-exp.y (tokentab2, ident_tokens): Use OP_NULL, not BINOP_END.\n+\t* c-exp.y (tokentab3, tokentab2, ident_tokens): Use OP_NULL, not\n+\tBINOP_END.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expression.h (enum exp_opcode) <OP_UNUSED_LAST>: Remove."
    },
    {
      "sha": "8bc7a97e0ac10f1a111caf6865278adc616863b4",
      "filename": "gdb/c-exp.y",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/c-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/c-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-exp.y?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -2479,8 +2479,8 @@ static const struct token tokentab3[] =\n   {\n     {\">>=\", ASSIGN_MODIFY, BINOP_RSH, 0},\n     {\"<<=\", ASSIGN_MODIFY, BINOP_LSH, 0},\n-    {\"->*\", ARROW_STAR, BINOP_END, FLAG_CXX},\n-    {\"...\", DOTDOTDOT, BINOP_END, 0}\n+    {\"->*\", ARROW_STAR, OP_NULL, FLAG_CXX},\n+    {\"...\", DOTDOTDOT, OP_NULL, 0}\n   };\n \n static const struct token tokentab2[] =\n@@ -2493,21 +2493,21 @@ static const struct token tokentab2[] =\n     {\"|=\", ASSIGN_MODIFY, BINOP_BITWISE_IOR, 0},\n     {\"&=\", ASSIGN_MODIFY, BINOP_BITWISE_AND, 0},\n     {\"^=\", ASSIGN_MODIFY, BINOP_BITWISE_XOR, 0},\n-    {\"++\", INCREMENT, BINOP_END, 0},\n-    {\"--\", DECREMENT, BINOP_END, 0},\n-    {\"->\", ARROW, BINOP_END, 0},\n-    {\"&&\", ANDAND, BINOP_END, 0},\n-    {\"||\", OROR, BINOP_END, 0},\n+    {\"++\", INCREMENT, OP_NULL, 0},\n+    {\"--\", DECREMENT, OP_NULL, 0},\n+    {\"->\", ARROW, OP_NULL, 0},\n+    {\"&&\", ANDAND, OP_NULL, 0},\n+    {\"||\", OROR, OP_NULL, 0},\n     /* \"::\" is *not* only C++: gdb overrides its meaning in several\n        different ways, e.g., 'filename'::func, function::variable.  */\n-    {\"::\", COLONCOLON, BINOP_END, 0},\n-    {\"<<\", LSH, BINOP_END, 0},\n-    {\">>\", RSH, BINOP_END, 0},\n-    {\"==\", EQUAL, BINOP_END, 0},\n-    {\"!=\", NOTEQUAL, BINOP_END, 0},\n-    {\"<=\", LEQ, BINOP_END, 0},\n-    {\">=\", GEQ, BINOP_END, 0},\n-    {\".*\", DOT_STAR, BINOP_END, FLAG_CXX}\n+    {\"::\", COLONCOLON, OP_NULL, 0},\n+    {\"<<\", LSH, OP_NULL, 0},\n+    {\">>\", RSH, OP_NULL, 0},\n+    {\"==\", EQUAL, OP_NULL, 0},\n+    {\"!=\", NOTEQUAL, OP_NULL, 0},\n+    {\"<=\", LEQ, OP_NULL, 0},\n+    {\">=\", GEQ, OP_NULL, 0},\n+    {\".*\", DOT_STAR, OP_NULL, FLAG_CXX}\n   };\n \n /* Identifier-like tokens.  Only type-specifiers than can appear in\n@@ -2546,14 +2546,14 @@ static const struct token ident_tokens[] =\n     {\"delete\", DELETE, OP_NULL, FLAG_CXX},\n     {\"operator\", OPERATOR, OP_NULL, FLAG_CXX},\n \n-    {\"and\", ANDAND, BINOP_END, FLAG_CXX},\n+    {\"and\", ANDAND, OP_NULL, FLAG_CXX},\n     {\"and_eq\", ASSIGN_MODIFY, BINOP_BITWISE_AND, FLAG_CXX},\n     {\"bitand\", '&', OP_NULL, FLAG_CXX},\n     {\"bitor\", '|', OP_NULL, FLAG_CXX},\n     {\"compl\", '~', OP_NULL, FLAG_CXX},\n     {\"not\", '!', OP_NULL, FLAG_CXX},\n-    {\"not_eq\", NOTEQUAL, BINOP_END, FLAG_CXX},\n-    {\"or\", OROR, BINOP_END, FLAG_CXX},\n+    {\"not_eq\", NOTEQUAL, OP_NULL, FLAG_CXX},\n+    {\"or\", OROR, OP_NULL, FLAG_CXX},\n     {\"or_eq\", ASSIGN_MODIFY, BINOP_BITWISE_IOR, FLAG_CXX},\n     {\"xor\", '^', OP_NULL, FLAG_CXX},\n     {\"xor_eq\", ASSIGN_MODIFY, BINOP_BITWISE_XOR, FLAG_CXX},"
    },
    {
      "sha": "d74fb8711a069d4e481ad3c0a57d59e1b5b129a8",
      "filename": "gdb/d-exp.y",
      "status": "modified",
      "additions": 14,
      "deletions": 14,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/d-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/d-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-exp.y?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -965,25 +965,25 @@ static const struct token tokentab2[] =\n     {\"|=\", ASSIGN_MODIFY, BINOP_BITWISE_IOR},\n     {\"&=\", ASSIGN_MODIFY, BINOP_BITWISE_AND},\n     {\"^=\", ASSIGN_MODIFY, BINOP_BITWISE_XOR},\n-    {\"++\", INCREMENT, BINOP_END},\n-    {\"--\", DECREMENT, BINOP_END},\n-    {\"&&\", ANDAND, BINOP_END},\n-    {\"||\", OROR, BINOP_END},\n-    {\"^^\", HATHAT, BINOP_END},\n-    {\"<<\", LSH, BINOP_END},\n-    {\">>\", RSH, BINOP_END},\n-    {\"==\", EQUAL, BINOP_END},\n-    {\"!=\", NOTEQUAL, BINOP_END},\n-    {\"<=\", LEQ, BINOP_END},\n-    {\">=\", GEQ, BINOP_END},\n-    {\"..\", DOTDOT, BINOP_END},\n+    {\"++\", INCREMENT, OP_NULL},\n+    {\"--\", DECREMENT, OP_NULL},\n+    {\"&&\", ANDAND, OP_NULL},\n+    {\"||\", OROR, OP_NULL},\n+    {\"^^\", HATHAT, OP_NULL},\n+    {\"<<\", LSH, OP_NULL},\n+    {\">>\", RSH, OP_NULL},\n+    {\"==\", EQUAL, OP_NULL},\n+    {\"!=\", NOTEQUAL, OP_NULL},\n+    {\"<=\", LEQ, OP_NULL},\n+    {\">=\", GEQ, OP_NULL},\n+    {\"..\", DOTDOT, OP_NULL},\n   };\n \n /* Identifier-like tokens.  */\n static const struct token ident_tokens[] =\n   {\n-    {\"is\", IDENTITY, BINOP_END},\n-    {\"!is\", NOTIDENTITY, BINOP_END},\n+    {\"is\", IDENTITY, OP_NULL},\n+    {\"!is\", NOTIDENTITY, OP_NULL},\n \n     {\"cast\", CAST_KEYWORD, OP_NULL},\n     {\"const\", CONST_KEYWORD, OP_NULL},"
    },
    {
      "sha": "c33b507915835b75582f67b2341fb9d86c43ba92",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 37,
      "deletions": 37,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -1066,24 +1066,24 @@ struct token\n \n static const struct token fortran_operators[] =\n {\n-  { \".and.\", BOOL_AND, BINOP_END, false },\n-  { \".or.\", BOOL_OR, BINOP_END, false },\n-  { \".not.\", BOOL_NOT, BINOP_END, false },\n-  { \".eq.\", EQUAL, BINOP_END, false },\n-  { \".eqv.\", EQUAL, BINOP_END, false },\n-  { \".neqv.\", NOTEQUAL, BINOP_END, false },\n-  { \".xor.\", NOTEQUAL, BINOP_END, false },\n-  { \"==\", EQUAL, BINOP_END, false },\n-  { \".ne.\", NOTEQUAL, BINOP_END, false },\n-  { \"/=\", NOTEQUAL, BINOP_END, false },\n-  { \".le.\", LEQ, BINOP_END, false },\n-  { \"<=\", LEQ, BINOP_END, false },\n-  { \".ge.\", GEQ, BINOP_END, false },\n-  { \">=\", GEQ, BINOP_END, false },\n-  { \".gt.\", GREATERTHAN, BINOP_END, false },\n-  { \">\", GREATERTHAN, BINOP_END, false },\n-  { \".lt.\", LESSTHAN, BINOP_END, false },\n-  { \"<\", LESSTHAN, BINOP_END, false },\n+  { \".and.\", BOOL_AND, OP_NULL, false },\n+  { \".or.\", BOOL_OR, OP_NULL, false },\n+  { \".not.\", BOOL_NOT, OP_NULL, false },\n+  { \".eq.\", EQUAL, OP_NULL, false },\n+  { \".eqv.\", EQUAL, OP_NULL, false },\n+  { \".neqv.\", NOTEQUAL, OP_NULL, false },\n+  { \".xor.\", NOTEQUAL, OP_NULL, false },\n+  { \"==\", EQUAL, OP_NULL, false },\n+  { \".ne.\", NOTEQUAL, OP_NULL, false },\n+  { \"/=\", NOTEQUAL, OP_NULL, false },\n+  { \".le.\", LEQ, OP_NULL, false },\n+  { \"<=\", LEQ, OP_NULL, false },\n+  { \".ge.\", GEQ, OP_NULL, false },\n+  { \">=\", GEQ, OP_NULL, false },\n+  { \".gt.\", GREATERTHAN, OP_NULL, false },\n+  { \">\", GREATERTHAN, OP_NULL, false },\n+  { \".lt.\", LESSTHAN, OP_NULL, false },\n+  { \"<\", LESSTHAN, OP_NULL, false },\n   { \"**\", STARSTAR, BINOP_EXP, false },\n };\n \n@@ -1108,27 +1108,27 @@ static const struct f77_boolean_val boolean_values[]  =\n static const struct token f77_keywords[] =\n {\n   /* Historically these have always been lowercase only in GDB.  */\n-  { \"complex_16\", COMPLEX_S16_KEYWORD, BINOP_END, true },\n-  { \"complex_32\", COMPLEX_S32_KEYWORD, BINOP_END, true },\n-  { \"character\", CHARACTER, BINOP_END, true },\n-  { \"integer_2\", INT_S2_KEYWORD, BINOP_END, true },\n-  { \"logical_1\", LOGICAL_S1_KEYWORD, BINOP_END, true },\n-  { \"logical_2\", LOGICAL_S2_KEYWORD, BINOP_END, true },\n-  { \"logical_8\", LOGICAL_S8_KEYWORD, BINOP_END, true },\n-  { \"complex_8\", COMPLEX_S8_KEYWORD, BINOP_END, true },\n-  { \"integer\", INT_KEYWORD, BINOP_END, true },\n-  { \"logical\", LOGICAL_KEYWORD, BINOP_END, true },\n-  { \"real_16\", REAL_S16_KEYWORD, BINOP_END, true },\n-  { \"complex\", COMPLEX_KEYWORD, BINOP_END, true },\n-  { \"sizeof\", SIZEOF, BINOP_END, true },\n-  { \"real_8\", REAL_S8_KEYWORD, BINOP_END, true },\n-  { \"real\", REAL_KEYWORD, BINOP_END, true },\n-  { \"single\", SINGLE, BINOP_END, true },\n-  { \"double\", DOUBLE, BINOP_END, true },\n-  { \"precision\", PRECISION, BINOP_END, true },\n+  { \"complex_16\", COMPLEX_S16_KEYWORD, OP_NULL, true },\n+  { \"complex_32\", COMPLEX_S32_KEYWORD, OP_NULL, true },\n+  { \"character\", CHARACTER, OP_NULL, true },\n+  { \"integer_2\", INT_S2_KEYWORD, OP_NULL, true },\n+  { \"logical_1\", LOGICAL_S1_KEYWORD, OP_NULL, true },\n+  { \"logical_2\", LOGICAL_S2_KEYWORD, OP_NULL, true },\n+  { \"logical_8\", LOGICAL_S8_KEYWORD, OP_NULL, true },\n+  { \"complex_8\", COMPLEX_S8_KEYWORD, OP_NULL, true },\n+  { \"integer\", INT_KEYWORD, OP_NULL, true },\n+  { \"logical\", LOGICAL_KEYWORD, OP_NULL, true },\n+  { \"real_16\", REAL_S16_KEYWORD, OP_NULL, true },\n+  { \"complex\", COMPLEX_KEYWORD, OP_NULL, true },\n+  { \"sizeof\", SIZEOF, OP_NULL, true },\n+  { \"real_8\", REAL_S8_KEYWORD, OP_NULL, true },\n+  { \"real\", REAL_KEYWORD, OP_NULL, true },\n+  { \"single\", SINGLE, OP_NULL, true },\n+  { \"double\", DOUBLE, OP_NULL, true },\n+  { \"precision\", PRECISION, OP_NULL, true },\n   /* The following correspond to actual functions in Fortran and are case\n      insensitive.  */\n-  { \"kind\", KIND, BINOP_END, false },\n+  { \"kind\", KIND, OP_NULL, false },\n   { \"abs\", UNOP_INTRINSIC, UNOP_ABS, false },\n   { \"mod\", BINOP_INTRINSIC, BINOP_MOD, false },\n   { \"floor\", UNOP_INTRINSIC, UNOP_FORTRAN_FLOOR, false },"
    },
    {
      "sha": "d096cc8b7c91c2de42624389ea31e058e20ffcdd",
      "filename": "gdb/go-exp.y",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/go-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/go-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-exp.y?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -966,19 +966,19 @@ static const struct token tokentab2[] =\n     {\"|=\", ASSIGN_MODIFY, BINOP_BITWISE_IOR},\n     {\"&=\", ASSIGN_MODIFY, BINOP_BITWISE_AND},\n     {\"^=\", ASSIGN_MODIFY, BINOP_BITWISE_XOR},\n-    {\"++\", INCREMENT, BINOP_END},\n-    {\"--\", DECREMENT, BINOP_END},\n-    /*{\"->\", RIGHT_ARROW, BINOP_END}, Doesn't exist in Go.  */\n-    {\"<-\", LEFT_ARROW, BINOP_END},\n-    {\"&&\", ANDAND, BINOP_END},\n-    {\"||\", OROR, BINOP_END},\n-    {\"<<\", LSH, BINOP_END},\n-    {\">>\", RSH, BINOP_END},\n-    {\"==\", EQUAL, BINOP_END},\n-    {\"!=\", NOTEQUAL, BINOP_END},\n-    {\"<=\", LEQ, BINOP_END},\n-    {\">=\", GEQ, BINOP_END},\n-    /*{\"&^\", ANDNOT, BINOP_END}, TODO */\n+    {\"++\", INCREMENT, OP_NULL},\n+    {\"--\", DECREMENT, OP_NULL},\n+    /*{\"->\", RIGHT_ARROW, OP_NULL}, Doesn't exist in Go.  */\n+    {\"<-\", LEFT_ARROW, OP_NULL},\n+    {\"&&\", ANDAND, OP_NULL},\n+    {\"||\", OROR, OP_NULL},\n+    {\"<<\", LSH, OP_NULL},\n+    {\">>\", RSH, OP_NULL},\n+    {\"==\", EQUAL, OP_NULL},\n+    {\"!=\", NOTEQUAL, OP_NULL},\n+    {\"<=\", LEQ, OP_NULL},\n+    {\">=\", GEQ, OP_NULL},\n+    /*{\"&^\", ANDNOT, OP_NULL}, TODO */\n   };\n \n /* Identifier-like tokens.  */"
    },
    {
      "sha": "963e8989bf10bd75e7dcd315f498abbf762c3e8d",
      "filename": "gdb/p-exp.y",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/p-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/p-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-exp.y?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -1048,25 +1048,25 @@ struct token\n \n static const struct token tokentab3[] =\n   {\n-    {\"shr\", RSH, BINOP_END},\n-    {\"shl\", LSH, BINOP_END},\n-    {\"and\", ANDAND, BINOP_END},\n-    {\"div\", DIV, BINOP_END},\n-    {\"not\", NOT, BINOP_END},\n-    {\"mod\", MOD, BINOP_END},\n-    {\"inc\", INCREMENT, BINOP_END},\n-    {\"dec\", DECREMENT, BINOP_END},\n-    {\"xor\", XOR, BINOP_END}\n+    {\"shr\", RSH, OP_NULL},\n+    {\"shl\", LSH, OP_NULL},\n+    {\"and\", ANDAND, OP_NULL},\n+    {\"div\", DIV, OP_NULL},\n+    {\"not\", NOT, OP_NULL},\n+    {\"mod\", MOD, OP_NULL},\n+    {\"inc\", INCREMENT, OP_NULL},\n+    {\"dec\", DECREMENT, OP_NULL},\n+    {\"xor\", XOR, OP_NULL}\n   };\n \n static const struct token tokentab2[] =\n   {\n-    {\"or\", OR, BINOP_END},\n-    {\"<>\", NOTEQUAL, BINOP_END},\n-    {\"<=\", LEQ, BINOP_END},\n-    {\">=\", GEQ, BINOP_END},\n-    {\":=\", ASSIGN, BINOP_END},\n-    {\"::\", COLONCOLON, BINOP_END} };\n+    {\"or\", OR, OP_NULL},\n+    {\"<>\", NOTEQUAL, OP_NULL},\n+    {\"<=\", LEQ, OP_NULL},\n+    {\">=\", GEQ, OP_NULL},\n+    {\":=\", ASSIGN, OP_NULL},\n+    {\"::\", COLONCOLON, OP_NULL} };\n \n /* Allocate uppercased var: */\n /* make an uppercased copy of tokstart.  */"
    },
    {
      "sha": "b0c6beb4628e7bbdfcf54e1371b7c16586471e6d",
      "filename": "gdb/std-operator.def",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/std-operator.def",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/79ab486e97be04fb719b3ef91ea3e2b3c9c345c8/gdb/std-operator.def",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/std-operator.def?ref=79ab486e97be04fb719b3ef91ea3e2b3c9c345c8",
      "patch": "@@ -87,9 +87,6 @@ OP (BINOP_VAL)\n    the second operand with itself that many times.  */\n OP (BINOP_CONCAT)\n \n-/* This must be the highest BINOP_ value, for expprint.c.  */\n-OP (BINOP_END)\n-\n /* Operates on three values computed by following subexpressions.  */\n OP (TERNOP_COND)\t\t/* ?: */\n "
    }
  ]
}