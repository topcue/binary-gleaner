{
  "sha": "272044897e178835f596c96740c5a1800ec6f9fb",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjcyMDQ0ODk3ZTE3ODgzNWY1OTZjOTY3NDBjNWExODAwZWM2ZjlmYg==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-13T19:48:05Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-22T22:44:58Z"
    },
    "message": "Make GDB compile with Python 3 on MinGW\n\nPyFile_FromString and PyFile_AsFile have been removed in Python 3.\nThere is no obvious replacement that works here, and we can't just\npass our FILE* to a DLL in Windows because it may use a different\nC runtime.\n\nSo we just call a Python function which reads and executes file\ncontents. Care must be taken to execute it in the context of\n__main__.\n\nTested by inverting the ifdef and running the testsuite on Debian\nLinux (even without the patch, I failed at running the testsuite\non Windows). I did test with both Python 2 and 3.\n\ngdb/ChangeLog:\n\n2019-08-22  Christian Biesinger  <cbiesinger@google.com>\n\n\t* python/lib/gdb/__init__.py (_execute_file): New function.\n\t* python/python.c (python_run_simple_file): Call gdb._execute_file\n\ton Windows.",
    "tree": {
      "sha": "bd40b72b2b650526a3f3dbbc53e96ccd2ca67bac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bd40b72b2b650526a3f3dbbc53e96ccd2ca67bac"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/272044897e178835f596c96740c5a1800ec6f9fb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272044897e178835f596c96740c5a1800ec6f9fb",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/272044897e178835f596c96740c5a1800ec6f9fb",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272044897e178835f596c96740c5a1800ec6f9fb/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "395fad095c9cbc5a8b10557443da981cc3f61885",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/395fad095c9cbc5a8b10557443da981cc3f61885",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/395fad095c9cbc5a8b10557443da981cc3f61885"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 46,
    "deletions": 9
  },
  "files": [
    {
      "sha": "ac84245c340e695014a354939df310109ee8f133",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272044897e178835f596c96740c5a1800ec6f9fb/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272044897e178835f596c96740c5a1800ec6f9fb/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=272044897e178835f596c96740c5a1800ec6f9fb",
      "patch": "@@ -1,3 +1,9 @@\n+2019-08-22  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* python/lib/gdb/__init__.py (_execute_file): New function.\n+\t* python/python.c (python_run_simple_file): Call gdb._execute_file\n+\ton Windows.\n+\n 2019-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* f-exp.y (yylex): Remove is_a_field_of_this local variable, and"
    },
    {
      "sha": "9c23970f39a341e3a45a785721de2bb07210d9ca",
      "filename": "gdb/python/lib/gdb/__init__.py",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272044897e178835f596c96740c5a1800ec6f9fb/gdb/python/lib/gdb/__init__.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272044897e178835f596c96740c5a1800ec6f9fb/gdb/python/lib/gdb/__init__.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/lib/gdb/__init__.py?ref=272044897e178835f596c96740c5a1800ec6f9fb",
      "patch": "@@ -106,6 +106,32 @@ def _execute_unwinders(pending_frame):\n \n     return None\n \n+def _execute_file(filepath):\n+    \"\"\"This function is used to replace Python 2's PyRun_SimpleFile.\n+\n+    Loads and executes the given file.\n+\n+    We could use the runpy module, but its documentation says:\n+    \"Furthermore, any functions and classes defined by the executed code are\n+    not guaranteed to work correctly after a runpy function has returned.\"\n+    \"\"\"\n+    globals = sys.modules['__main__'].__dict__\n+    set_file = False\n+    # Set file (if not set) so that the imported file can use it (e.g. to\n+    # access file-relative paths). This matches what PyRun_SimpleFile does.\n+    if not hasattr(globals, '__file__'):\n+        globals['__file__'] = filepath\n+        set_file = True\n+    try:\n+        with open(filepath, 'rb') as file:\n+            # We pass globals also as locals to match what Python does\n+            # in PyRun_SimpleFile.\n+            compiled = compile(file.read(), filepath, 'exec')\n+            exec(compiled, globals, globals)\n+    finally:\n+        if set_file:\n+            del globals['__file__']\n+\n \n # Convenience variable to GDB's python directory\n PYTHONDIR = os.path.dirname(os.path.dirname(__file__))"
    },
    {
      "sha": "cca7c4cd6bf8ce71e646fe15c50504c65328b49a",
      "filename": "gdb/python/python.c",
      "status": "modified",
      "additions": 14,
      "deletions": 9,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/272044897e178835f596c96740c5a1800ec6f9fb/gdb/python/python.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/272044897e178835f596c96740c5a1800ec6f9fb/gdb/python/python.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/python.c?ref=272044897e178835f596c96740c5a1800ec6f9fb",
      "patch": "@@ -323,9 +323,8 @@ python_interactive_command (const char *arg, int from_tty)\n    A FILE * from one runtime does not necessarily operate correctly in\n    the other runtime.\n \n-   To work around this potential issue, we create on Windows hosts the\n-   FILE object using Python routines, thus making sure that it is\n-   compatible with the Python library.  */\n+   To work around this potential issue, we run code in Python to load\n+   the script.  */\n \n static void\n python_run_simple_file (FILE *file, const char *filename)\n@@ -339,15 +338,21 @@ python_run_simple_file (FILE *file, const char *filename)\n   /* Because we have a string for a filename, and are using Python to\n      open the file, we need to expand any tilde in the path first.  */\n   gdb::unique_xmalloc_ptr<char> full_path (tilde_expand (filename));\n-  gdbpy_ref<> python_file (PyFile_FromString (full_path.get (), (char *) \"r\"));\n-  if (python_file == NULL)\n+\n+  if (gdb_python_module == nullptr\n+      || ! PyObject_HasAttrString (gdb_python_module, \"_execute_file\"))\n+    error (_(\"Installation error: gdb._execute_file function is missing\"));\n+\n+  gdbpy_ref<> return_value\n+    (PyObject_CallMethod (gdb_python_module, \"_execute_file\", \"s\",\n+\t\t\t  full_path.get ()));\n+  if (return_value == nullptr)\n     {\n-      gdbpy_print_stack ();\n-      error (_(\"Error while opening file: %s\"), full_path.get ());\n+      /* Use PyErr_PrintEx instead of gdbpy_print_stack to better match the\n+         behavior of the non-Windows codepath.  */\n+      PyErr_PrintEx(0);\n     }\n \n-  PyRun_SimpleFile (PyFile_AsFile (python_file.get ()), filename);\n-\n #endif /* _WIN32 */\n }\n "
    }
  ]
}