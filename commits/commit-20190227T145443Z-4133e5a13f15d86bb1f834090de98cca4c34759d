{
  "sha": "4133e5a13f15d86bb1f834090de98cca4c34759d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDEzM2U1YTEzZjE1ZDg2YmIxZjgzNDA5MGRlOThjY2E0YzM0NzU5ZA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2018-12-19T22:18:28Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-02-27T14:54:43Z"
    },
    "message": "gdb/csky: Use default gdbarch methods where possible\n\nMake use of the default gdbarch methods for gdbarch_dummy_id,\ngdbarch_unwind_pc, and gdbarch_unwind_sp where possible.\n\nI have not tested this change but, by inspecting the code, I believe\nthe default methods are equivalent to the code being deleted.\n\ngdb/ChangeLog:\n\n\t* gdb/csky-tdep.c (csky_dummy_id): Delete.\n\t(csky_unwind_pc): Delete.\n\t(csky_unwind_sp): Delete.\n\t(csky_gdbarch_init): Don't register deleted functions with\n\tgdbarch.",
    "tree": {
      "sha": "e2926516aff36006f25abb52efb7e9ed16d2520f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e2926516aff36006f25abb52efb7e9ed16d2520f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4133e5a13f15d86bb1f834090de98cca4c34759d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4133e5a13f15d86bb1f834090de98cca4c34759d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4133e5a13f15d86bb1f834090de98cca4c34759d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4133e5a13f15d86bb1f834090de98cca4c34759d/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8010f576414759bf5bdcfeaa64226bf03586b763",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8010f576414759bf5bdcfeaa64226bf03586b763",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8010f576414759bf5bdcfeaa64226bf03586b763"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 8,
    "deletions": 34
  },
  "files": [
    {
      "sha": "977a1382d7ee680cea29ddd1424a7b23445794ea",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4133e5a13f15d86bb1f834090de98cca4c34759d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4133e5a13f15d86bb1f834090de98cca4c34759d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4133e5a13f15d86bb1f834090de98cca4c34759d",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb/csky-tdep.c (csky_dummy_id): Delete.\n+\t(csky_unwind_pc): Delete.\n+\t(csky_unwind_sp): Delete.\n+\t(csky_gdbarch_init): Don't register deleted functions with\n+\tgdbarch.\n+\n 2019-02-27  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb/cris-tdep.c (cris_dummy_id): Delete."
    },
    {
      "sha": "cd7d8c5a0b116e48fa8a66f3ef181f35c3005f80",
      "filename": "gdb/csky-tdep.c",
      "status": "modified",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4133e5a13f15d86bb1f834090de98cca4c34759d/gdb/csky-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4133e5a13f15d86bb1f834090de98cca4c34759d/gdb/csky-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/csky-tdep.c?ref=4133e5a13f15d86bb1f834090de98cca4c34759d",
      "patch": "@@ -160,14 +160,6 @@ csky_write_pc (regcache *regcache, CORE_ADDR val)\n   regcache_cooked_write_unsigned (regcache, CSKY_PC_REGNUM, val);\n }\n \n-/* Implement the unwind_sp gdbarch method.  */\n-\n-static CORE_ADDR\n-csky_unwind_sp (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, CSKY_SP_REGNUM);\n-}\n-\n /* C-Sky ABI register names.  */\n \n static const char *csky_register_names[] =\n@@ -1883,14 +1875,6 @@ csky_frame_unwind_cache (struct frame_info *this_frame)\n   return cache;\n }\n \n-/* Implement the unwind_pc gdbarch method.  */\n-\n-static CORE_ADDR\n-csky_unwind_pc (struct gdbarch *gdbarch, struct frame_info *next_frame)\n-{\n-  return frame_unwind_register_unsigned (next_frame, CSKY_PC_REGNUM);\n-}\n-\n /* Implement the this_id function for the normal unwinder.  */\n \n static void\n@@ -2045,19 +2029,6 @@ static const struct frame_base csky_frame_base = {\n   csky_frame_base_address\n };\n \n-/* Implement the dummy_id gdbarch method.  The frame ID's base\n-   needs to match the TOS value saved by save_dummy_frame_tos,\n-   and the PC should match the dummy frame's breakpoint.  */\n-\n-static struct frame_id\n-csky_dummy_id (struct gdbarch *gdbarch, struct frame_info *this_frame)\n-{\n-  unsigned int sp_regnum = CSKY_SP_REGNUM;\n-\n-  CORE_ADDR sp = get_frame_register_unsigned (this_frame, sp_regnum);\n-  return frame_id_build (sp, get_frame_pc (this_frame));\n-}\n-\n /* Initialize register access method.  */\n \n static void\n@@ -2245,13 +2216,8 @@ csky_gdbarch_init (struct gdbarch_info info, struct gdbarch_list *arches)\n   set_gdbarch_frame_align (gdbarch, csky_frame_align);\n   set_gdbarch_stack_frame_destroyed_p (gdbarch, csky_stack_frame_destroyed_p);\n \n-  /* Functions to access frame data.  */\n-  set_gdbarch_unwind_pc (gdbarch, csky_unwind_pc);\n-  set_gdbarch_unwind_sp (gdbarch, csky_unwind_sp);\n-\n   /* Functions handling dummy frames.  */\n   set_gdbarch_push_dummy_call (gdbarch, csky_push_dummy_call);\n-  set_gdbarch_dummy_id (gdbarch, csky_dummy_id);\n \n   /* Frame unwinders.  Use DWARF debug info if available,\n      otherwise use our own unwinder.  */"
    }
  ]
}