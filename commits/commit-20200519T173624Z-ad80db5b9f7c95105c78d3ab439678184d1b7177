{
  "sha": "ad80db5b9f7c95105c78d3ab439678184d1b7177",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWQ4MGRiNWI5ZjdjOTUxMDVjNzhkM2FiNDM5Njc4MTg0ZDFiNzE3Nw==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-19T17:36:24Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-05-19T17:36:24Z"
    },
    "message": "Default gdb_bfd_open's fd parameter to -1\n\nA following patch will add one more defaulted parameter.\n\ngdb/ChangeLog:\n2020-05-19  Pedro Alves  <palves@redhat.com>\n\n\t* gdb_bfd.h: (gdb_bfd_open): Default to 'fd' parameter to -1.\n\tAdjust all callers.",
    "tree": {
      "sha": "8cd4ce853e52de8f158a615ec3439b7d3a693029",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8cd4ce853e52de8f158a615ec3439b7d3a693029"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ad80db5b9f7c95105c78d3ab439678184d1b7177",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad80db5b9f7c95105c78d3ab439678184d1b7177",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ad80db5b9f7c95105c78d3ab439678184d1b7177",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad80db5b9f7c95105c78d3ab439678184d1b7177/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1d6ce4d31257e1ea49b3a1b257055bf8f7ff16af"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 19,
    "deletions": 13
  },
  "files": [
    {
      "sha": "a03be4339748a10e37bed57621ac3fb456631893",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-19  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb_bfd.h: (gdb_bfd_open): Default to 'fd' parameter to -1.\n+\tAdjust all callers.\n+\n 2020-05-19  Yoshinori Sato  <ysato@users.sourceforge.jp>\n \n \t* h8300-tdep.c (h8300_is_argument_spill): Change how we check"
    },
    {
      "sha": "2f1afbd8e18a8810ac986ea2d75739fa9d9329eb",
      "filename": "gdb/build-id.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/build-id.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/build-id.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/build-id.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -94,7 +94,7 @@ build_id_to_debug_bfd_1 (const std::string &link, size_t build_id_len,\n     }\n \n   /* We expect to be silent on the non-existing files.  */\n-  gdb_bfd_ref_ptr debug_bfd = gdb_bfd_open (filename.get (), gnutarget, -1);\n+  gdb_bfd_ref_ptr debug_bfd = gdb_bfd_open (filename.get (), gnutarget);\n \n   if (debug_bfd == NULL)\n     {"
    },
    {
      "sha": "76a9418dac0e6b5c99e69383105770f6a0025488",
      "filename": "gdb/compile/compile-object-load.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/compile/compile-object-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/compile/compile-object-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-load.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -604,7 +604,7 @@ compile_object_load (const compile_file_names &file_names,\n   gdb::unique_xmalloc_ptr<char> filename\n     (tilde_expand (file_names.object_file ()));\n \n-  gdb_bfd_ref_ptr abfd (gdb_bfd_open (filename.get (), gnutarget, -1));\n+  gdb_bfd_ref_ptr abfd (gdb_bfd_open (filename.get (), gnutarget));\n   if (abfd == NULL)\n     error (_(\"\\\"%s\\\": could not open as compiled module: %s\"),\n           filename.get (), bfd_errmsg (bfd_get_error ()));"
    },
    {
      "sha": "0c6182bbf3b92fe4ce396d073d800c966d35d61a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -2115,7 +2115,7 @@ dwarf2_get_dwz_file (struct dwarf2_per_objfile *dwarf2_per_objfile)\n \n   /* First try the file name given in the section.  If that doesn't\n      work, try to use the build-id instead.  */\n-  gdb_bfd_ref_ptr dwz_bfd (gdb_bfd_open (filename, gnutarget, -1));\n+  gdb_bfd_ref_ptr dwz_bfd (gdb_bfd_open (filename, gnutarget));\n   if (dwz_bfd != NULL)\n     {\n       if (!build_id_verify (dwz_bfd.get (), buildid_len, buildid))\n@@ -2138,7 +2138,7 @@ dwarf2_get_dwz_file (struct dwarf2_per_objfile *dwarf2_per_objfile)\n       if (fd.get () >= 0)\n \t{\n \t  /* File successfully retrieved from server.  */\n-\t  dwz_bfd = gdb_bfd_open (alt_filename.get (), gnutarget, -1);\n+\t  dwz_bfd = gdb_bfd_open (alt_filename.get (), gnutarget);\n \n \t  if (dwz_bfd == nullptr)\n \t    warning (_(\"File \\\"%s\\\" from debuginfod cannot be opened as bfd\"),"
    },
    {
      "sha": "532520e0f7d29624cf3838c1d7a2a57e1fa431bf",
      "filename": "gdb/gdb_bfd.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/gdb_bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/gdb_bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdb_bfd.h?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -80,7 +80,8 @@ typedef gdb::ref_ptr<struct bfd, gdb_bfd_ref_policy> gdb_bfd_ref_ptr;\n    bfd_get_filename will not be exactly NAME but rather NAME with\n    TARGET_SYSROOT_PREFIX stripped.  */\n \n-gdb_bfd_ref_ptr gdb_bfd_open (const char *name, const char *target, int fd);\n+gdb_bfd_ref_ptr gdb_bfd_open (const char *name, const char *target,\n+\t\t\t      int fd = -1);\n \n /* Mark the CHILD BFD as being a member of PARENT.  Also, increment\n    the reference count of CHILD.  Calling this function ensures that"
    },
    {
      "sha": "fb4e205088a447d48f69485f22e349b63d3914bf",
      "filename": "gdb/machoread.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/machoread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/machoread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/machoread.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -639,7 +639,7 @@ macho_symfile_read_all_oso (std::vector<oso_el> *oso_vector_ptr,\n \n \t  /* Open the archive and check the format.  */\n \t  gdb_bfd_ref_ptr archive_bfd (gdb_bfd_open (archive_name.c_str (),\n-\t\t\t\t\t\t     gnutarget, -1));\n+\t\t\t\t\t\t     gnutarget));\n \t  if (archive_bfd == NULL)\n \t    {\n \t      warning (_(\"Could not open OSO archive file \\\"%s\\\"\"),\n@@ -705,7 +705,7 @@ macho_symfile_read_all_oso (std::vector<oso_el> *oso_vector_ptr,\n \t}\n       else\n \t{\n-\t  gdb_bfd_ref_ptr abfd (gdb_bfd_open (oso->name, gnutarget, -1));\n+\t  gdb_bfd_ref_ptr abfd (gdb_bfd_open (oso->name, gnutarget));\n \t  if (abfd == NULL)\n             warning (_(\"`%s': can't open to read symbols: %s.\"), oso->name,\n                      bfd_errmsg (bfd_get_error ()));"
    },
    {
      "sha": "e740a41fa4f6d0d67a5bfe81af66ce8a037cd439",
      "filename": "gdb/solib-darwin.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/solib-darwin.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/solib-darwin.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-darwin.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -436,7 +436,7 @@ darwin_get_dyld_bfd ()\n     return NULL;\n \n   /* Create a bfd for the interpreter.  */\n-  gdb_bfd_ref_ptr dyld_bfd (gdb_bfd_open (interp_name, gnutarget, -1));\n+  gdb_bfd_ref_ptr dyld_bfd (gdb_bfd_open (interp_name, gnutarget));\n   if (dyld_bfd != NULL)\n     {\n       gdb_bfd_ref_ptr sub"
    },
    {
      "sha": "01e0726e1eb409cf812827b297502099ddd8dc71",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -1275,7 +1275,7 @@ separate_debug_file_exists (const std::string &name, unsigned long crc,\n       gdb_flush (gdb_stdout);\n     }\n \n-  gdb_bfd_ref_ptr abfd (gdb_bfd_open (name.c_str (), gnutarget, -1));\n+  gdb_bfd_ref_ptr abfd (gdb_bfd_open (name.c_str (), gnutarget));\n \n   if (abfd == NULL)\n     {\n@@ -2039,7 +2039,7 @@ generic_load (const char *args, int from_tty)\n     }\n \n   /* Open the file for loading.  */\n-  gdb_bfd_ref_ptr loadfile_bfd (gdb_bfd_open (filename.get (), gnutarget, -1));\n+  gdb_bfd_ref_ptr loadfile_bfd (gdb_bfd_open (filename.get (), gnutarget));\n   if (loadfile_bfd == NULL)\n     perror_with_name (filename.get ());\n \n@@ -2524,7 +2524,7 @@ reread_symbols (void)\n \t    obfd_filename = bfd_get_filename (objfile->obfd);\n \t    /* Open the new BFD before freeing the old one, so that\n \t       the filename remains live.  */\n-\t    gdb_bfd_ref_ptr temp (gdb_bfd_open (obfd_filename, gnutarget, -1));\n+\t    gdb_bfd_ref_ptr temp (gdb_bfd_open (obfd_filename, gnutarget));\n \t    objfile->obfd = temp.release ();\n \t    if (objfile->obfd == NULL)\n \t      error (_(\"Can't open %s to read symbols.\"), obfd_filename);"
    },
    {
      "sha": "3452f6c827f45bc40361bbf72d97d911eac4823c",
      "filename": "gdb/windows-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/windows-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/windows-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-nat.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -834,7 +834,7 @@ windows_make_so (const char *name, LPVOID load_addr)\n     {\n       asection *text = NULL;\n \n-      gdb_bfd_ref_ptr abfd (gdb_bfd_open (so->so_name, \"pei-i386\", -1));\n+      gdb_bfd_ref_ptr abfd (gdb_bfd_open (so->so_name, \"pei-i386\"));\n \n       if (abfd == NULL)\n \treturn so;"
    },
    {
      "sha": "20a18e6b68398163daebcf4cb8b425a25abe3d9d",
      "filename": "gdb/windows-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad80db5b9f7c95105c78d3ab439678184d1b7177/gdb/windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/windows-tdep.c?ref=ad80db5b9f7c95105c78d3ab439678184d1b7177",
      "patch": "@@ -537,7 +537,7 @@ windows_xfer_shared_library (const char* so_name, CORE_ADDR load_addr,\n \n   if (!text_offset)\n     {\n-      gdb_bfd_ref_ptr dll (gdb_bfd_open (so_name, gnutarget, -1));\n+      gdb_bfd_ref_ptr dll (gdb_bfd_open (so_name, gnutarget));\n       /* The following calls are OK even if dll is NULL.\n \t The default value 0x1000 is returned by pe_text_section_offset\n \t in that case.  */"
    }
  ]
}