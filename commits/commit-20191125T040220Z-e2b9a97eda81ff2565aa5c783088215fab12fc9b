{
  "sha": "e2b9a97eda81ff2565aa5c783088215fab12fc9b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTJiOWE5N2VkYTgxZmYyNTY1YWE1Yzc4MzA4ODIxNWZhYjEyZmM5Yg==",
  "commit": {
    "author": {
      "name": "Christian Eggers",
      "email": "ceggers@gmx.de",
      "date": "2019-11-21T21:17:24Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-11-25T04:02:20Z"
    },
    "message": "Reverts patches providing octet support in dwarf\n\nReverts \"dwarf2: Align relocation within .debug_line section\"\n\tcommit 204f543cae7a5dc908264b49d558191d0ceb989c,\nReverts \"dwarf2: Pad size of .debug_line section.\"\n\tcommit 145c4477d239fef4e31a457ff8a1ba7153e9a448,\nReverts \"dwarf2: Use octets for .debug_line prologue\"\n\tcommit 38c24f42c97af59ad83505ed735e689c63d3ca45,\nMostly reverts \"dwarf2: Use octets for dwarf2 headers\"\n\tcommit 7235427998571b6d8267e7ac72a52d7b082f4c2b,\nMostly reverts \"Symbols with octets value\"\n\tcommit d18d199917337537713f9fc4b7ae4d6568f740cf.\n\n\t* dwarf2dbg.c (out_set_addr): Revert 2019-03-13 change.\n\t(out_debug_line, out_debug_aranges, out_debug_info): Likewise.\n\t* symbols.h (symbol_set_value_now_octets, symbol_octets_p): Remove.\n\t* symbols.c (struct symbol_flags): Remove member sy_octets.\n\t(symbol_temp_new_now_octets): Don't set symbol_flags::sy_octets.\n\t(resolve_symbol_value): Revert: Return octets instead of bytes if\n\tsy_octets is set.\n\t(symbol_set_value_now_octets): Remove.\n\t(symbol_octets_p): Remove.",
    "tree": {
      "sha": "fa10a22f4f7d7c1f0b4d31ab31150acbfd8a3be3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fa10a22f4f7d7c1f0b4d31ab31150acbfd8a3be3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e2b9a97eda81ff2565aa5c783088215fab12fc9b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2b9a97eda81ff2565aa5c783088215fab12fc9b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e2b9a97eda81ff2565aa5c783088215fab12fc9b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e2b9a97eda81ff2565aa5c783088215fab12fc9b/comments",
  "author": null,
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b5470a3c4a81ad60bc1a18683ac6a01f64b60854",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b5470a3c4a81ad60bc1a18683ac6a01f64b60854",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b5470a3c4a81ad60bc1a18683ac6a01f64b60854"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 22,
    "deletions": 63
  },
  "files": [
    {
      "sha": "1751b00101b4851c9b2ec408e3416e54fbb4d105",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=e2b9a97eda81ff2565aa5c783088215fab12fc9b",
      "patch": "@@ -1,3 +1,15 @@\n+2019-11-25  Christian Eggers  <ceggers@gmx.de>\n+\n+\t* dwarf2dbg.c (out_set_addr): Revert 2019-03-13 change.\n+\t(out_debug_line, out_debug_aranges, out_debug_info): Likewise.\n+\t* symbols.h (symbol_set_value_now_octets, symbol_octets_p): Remove.\n+\t* symbols.c (struct symbol_flags): Remove member sy_octets.\n+\t(symbol_temp_new_now_octets): Don't set symbol_flags::sy_octets.\n+\t(resolve_symbol_value): Revert: Return octets instead of bytes if\n+\tsy_octets is set.\n+\t(symbol_set_value_now_octets): Remove.\n+\t(symbol_octets_p): Remove.\n+\n 2019-11-22  Mihail Ionescu  <mihail.ionescu@arm.com>\n \n \t* config/tc-arm.c (arm_ext_crc): New."
    },
    {
      "sha": "dce96033df7f74378d07a3ca0cb310c72f5ef869",
      "filename": "gas/dwarf2dbg.c",
      "status": "modified",
      "additions": 8,
      "deletions": 31,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/dwarf2dbg.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/dwarf2dbg.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/dwarf2dbg.c?ref=e2b9a97eda81ff2565aa5c783088215fab12fc9b",
      "patch": "@@ -1136,28 +1136,16 @@ get_frag_fix (fragS *frag, segT seg)\n \n /* Set an absolute address (may result in a relocation entry).  */\n \n-static void\n-out_inc_line_addr (int line_delta, addressT addr_delta);\n-\n static void\n out_set_addr (symbolS *sym)\n {\n   expressionS exp;\n-  addressT expr_addr, expr_addr_aligned;\n \n   memset (&exp, 0, sizeof exp);\n+  out_opcode (DW_LNS_extended_op);\n+  out_uleb128 (sizeof_address + 1);\n \n-  /* The expression at the bottom must be aligned to OCTETS_PER_BYTE.  The\n-     statements after the for loop will contribute 3 more octets.  */\n-  expr_addr = frag_now_fix_octets () + 3;\n-  expr_addr_aligned = (expr_addr + OCTETS_PER_BYTE - 1) & -OCTETS_PER_BYTE;\n-  for ( ; expr_addr != expr_addr_aligned; expr_addr++)\n-    out_inc_line_addr (0, 0);  /* NOP */\n-\n-  out_opcode (DW_LNS_extended_op);   /* 1 octet */\n-  out_uleb128 (sizeof_address + 1);  /* 1 octet */\n-\n-  out_opcode (DW_LNE_set_address);   /* 1 octet */\n+  out_opcode (DW_LNE_set_address);\n   exp.X_op = O_symbol;\n   exp.X_add_symbol = sym;\n   exp.X_add_number = 0;\n@@ -1827,7 +1815,6 @@ out_debug_line (segT line_seg)\n   symbolS *line_end;\n   struct line_seg *s;\n   int sizeof_offset;\n-  addressT section_end, section_end_aligned;\n \n   memset (&exp, 0, sizeof exp);\n   sizeof_offset = out_header (line_seg, &exp);\n@@ -1844,7 +1831,7 @@ out_debug_line (segT line_seg)\n   exp.X_op_symbol = prologue_start;\n   exp.X_add_number = 0;\n   emit_expr (&exp, sizeof_offset);\n-  symbol_set_value_now_octets (prologue_start);\n+  symbol_set_value_now (prologue_start);\n \n   /* Parameters of the state machine.  */\n   out_byte (DWARF2_LINE_MIN_INSN_LENGTH);\n@@ -1869,7 +1856,7 @@ out_debug_line (segT line_seg)\n \n   out_file_list ();\n \n-  symbol_set_value_now_octets (prologue_end);\n+  symbol_set_value_now (prologue_end);\n \n   /* For each section, emit a statement program.  */\n   for (s = all_segs; s; s = s->next)\n@@ -1889,17 +1876,7 @@ out_debug_line (segT line_seg)\n        in the DWARF Line Number header.  */\n     subseg_set (subseg_get (\".debug_line_end\", FALSE), 0);\n \n-  /* Pad size of .debug_line section to a multiple of OCTETS_PER_BYTE.\n-     Simply sizing the section in md_section_align() is not sufficient,\n-     also the size field in the .debug_line header must be a multiple\n-     of OCTETS_PER_BYTE.  Not doing so will introduce gaps within the\n-     .debug_line sections after linking.  */\n-  section_end = frag_now_fix_octets ();\n-  section_end_aligned = (section_end + OCTETS_PER_BYTE - 1) & -OCTETS_PER_BYTE;\n-  for ( ; section_end != section_end_aligned; section_end++)\n-    out_inc_line_addr (0, 0);  /* NOP */\n-\n-  symbol_set_value_now_octets (line_end);\n+  symbol_set_value_now (line_end);\n }\n \n static void\n@@ -2018,7 +1995,7 @@ out_debug_aranges (segT aranges_seg, segT info_seg)\n   md_number_to_chars (p, 0, addr_size);\n   md_number_to_chars (p + addr_size, 0, addr_size);\n \n-  symbol_set_value_now_octets (aranges_end);\n+  symbol_set_value_now (aranges_end);\n }\n \n /* Emit data for .debug_abbrev.  Note that this must be kept in\n@@ -2133,7 +2110,7 @@ out_debug_info (segT info_seg, segT abbrev_seg, segT line_seg, segT ranges_seg,\n      dwarf2 draft has no standard code for assembler.  */\n   out_two (DW_LANG_Mips_Assembler);\n \n-  symbol_set_value_now_octets (info_end);\n+  symbol_set_value_now (info_end);\n }\n \n /* Emit the three debug strings needed in .debug_str and setup symbols"
    },
    {
      "sha": "cff24059e6c7b9b125c0ffb21e7525b510b43d0f",
      "filename": "gas/symbols.c",
      "status": "modified",
      "additions": 2,
      "deletions": 30,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/symbols.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/symbols.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.c?ref=e2b9a97eda81ff2565aa5c783088215fab12fc9b",
      "patch": "@@ -73,10 +73,6 @@ struct symbol_flags\n      before.  It is cleared as soon as any direct reference to the\n      symbol is present.  */\n   unsigned int sy_weakrefd : 1;\n-\n-  /* This if set if the unit of the symbol value is \"octets\" instead\n-     of \"bytes\".  */\n-  unsigned int sy_octets : 1;\n };\n \n /* The information we keep for a symbol.  Note that the symbol table\n@@ -850,9 +846,7 @@ symbol_temp_new_now (void)\n symbolS *\n symbol_temp_new_now_octets (void)\n {\n-  symbolS * symb = symbol_temp_new (now_seg, frag_now_fix_octets (), frag_now);\n-  symb->sy_flags.sy_octets = 1;\n-  return symb;\n+  return symbol_temp_new (now_seg, frag_now_fix_octets (), frag_now);\n }\n \n symbolS *\n@@ -1336,10 +1330,7 @@ resolve_symbol_value (symbolS *symp)\n \t  /* Fall through.  */\n \n \tcase O_constant:\n-\t  if (symp->sy_flags.sy_octets)\n-\t    final_val += symp->sy_frag->fr_address;\n-\t  else\n-\t    final_val += symp->sy_frag->fr_address / OCTETS_PER_BYTE;\n+\t  final_val += symp->sy_frag->fr_address / OCTETS_PER_BYTE;\n \t  if (final_seg == expr_section)\n \t    final_seg = absolute_section;\n \t  /* Fall through.  */\n@@ -2651,18 +2642,6 @@ symbol_set_value_now (symbolS *sym)\n   symbol_set_frag (sym, frag_now);\n }\n \n-/* Set the value of SYM to the current position in the current segment,\n-   in octets.  */\n-\n-void\n-symbol_set_value_now_octets (symbolS *sym)\n-{\n-  S_SET_SEGMENT (sym, now_seg);\n-  S_SET_VALUE (sym, frag_now_fix_octets ());\n-  symbol_set_frag (sym, frag_now);\n-  sym->sy_flags.sy_octets = 1;\n-}\n-\n /* Set the frag of a symbol.  */\n \n void\n@@ -2934,13 +2913,6 @@ symbol_set_bfdsym (symbolS *s, asymbol *bsym)\n   /* else XXX - What do we do now ?  */\n }\n \n-/* Return whether symbol unit is \"octets\" (instead of \"bytes\").  */\n-\n-int symbol_octets_p (symbolS *s)\n-{\n-  return s->sy_flags.sy_octets;\n-}\n-\n #ifdef OBJ_SYMFIELD_TYPE\n \n /* Get a pointer to the object format information for a symbol.  */"
    },
    {
      "sha": "cffa8219ae840f219a8ef148e15dd65cd391f4d4",
      "filename": "gas/symbols.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/symbols.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e2b9a97eda81ff2565aa5c783088215fab12fc9b/gas/symbols.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/symbols.h?ref=e2b9a97eda81ff2565aa5c783088215fab12fc9b",
      "patch": "@@ -182,7 +182,6 @@ extern expressionS *symbol_get_value_expression (symbolS *);\n extern void symbol_set_value_expression (symbolS *, const expressionS *);\n extern offsetT *symbol_X_add_number (symbolS *);\n extern void symbol_set_value_now (symbolS *);\n-extern void symbol_set_value_now_octets (symbolS *);\n extern void symbol_set_frag (symbolS *, fragS *);\n extern fragS *symbol_get_frag (symbolS *);\n extern void symbol_mark_used (symbolS *);\n@@ -208,7 +207,6 @@ extern symbolS *symbol_symbolS (symbolS *);\n extern asymbol *symbol_get_bfdsym (symbolS *);\n extern void symbol_set_bfdsym (symbolS *, asymbol *);\n extern int symbol_same_p (symbolS *, symbolS *);\n-extern int symbol_octets_p (symbolS *);\n \n #ifdef OBJ_SYMFIELD_TYPE\n OBJ_SYMFIELD_TYPE *symbol_get_obj (symbolS *);"
    }
  ]
}