{
  "sha": "8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGYzNGI3NDY4NmM2YjliZjgzZDFjNDZlOTNiNWFlY2NhMmUwZWQwZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-08-03T14:59:20Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-08-03T14:59:20Z"
    },
    "message": "[gdb/symtab] Ignore DW_LNE_lo_user/DW_LNE_hi_user range\n\nWhen reading an exec with a .debug_line section containing a vendor-specific\nextended opcode, we get:\n...\n$ gdb -batch -iex \"set complaints 10\" dw2-vendor-extended-opcode\nDuring symbol reading: mangled .debug_line section\n...\nand reading of the .debug_line section is abandoned.\n\nThe vendor-specific extended opcode should be ignored, as specified in the\nDWARF standard (7.1 Vendor Extensibility).  [ FWIW, vendor-specific\nstandard opcodes are already ignored. ]\n\nFix this by ignoring all vendor-specific extended opcodes.\n\nBuild and tested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-08-03  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26333\n\t* dwarf2/read.c (dwarf_decode_lines_1): Ignore\n\tDW_LNE_lo_user/DW_LNE_hi_user range.\n\ngdb/testsuite/ChangeLog:\n\n2020-08-03  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26333\n\t* lib/dwarf.exp (DW_LNE_user): New proc.\n\t* gdb.dwarf2/dw2-vendor-extended-opcode.c: New test.\n\t* gdb.dwarf2/dw2-vendor-extended-opcode.exp: New file.",
    "tree": {
      "sha": "605f17455a9ec80a06eb74b7bd4e790bc16d6b67",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/605f17455a9ec80a06eb74b7bd4e790bc16d6b67"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e44a1d7b9ad8d73f6cea1f20fe353fc12f9b8e66",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e44a1d7b9ad8d73f6cea1f20fe353fc12f9b8e66",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e44a1d7b9ad8d73f6cea1f20fe353fc12f9b8e66"
    }
  ],
  "stats": {
    "total": 149,
    "additions": 149,
    "deletions": 0
  },
  "files": [
    {
      "sha": "276fa64df17498555d6405fbf9848d9c9709b265",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -1,3 +1,9 @@\n+2020-08-03  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26333\n+\t* dwarf2/read.c (dwarf_decode_lines_1): Ignore\n+\tDW_LNE_lo_user/DW_LNE_hi_user range.\n+\n 2020-07-30  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \tPR ada/26318"
    },
    {
      "sha": "bcbffbf0e8b7c7a13a33d933dbffe83b6e93e6dd",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -20591,6 +20591,13 @@ dwarf_decode_lines_1 (struct line_header *lh, struct dwarf2_cu *cu,\n \t      extended_end = line_ptr + extended_len;\n \t      extended_op = read_1_byte (abfd, line_ptr);\n \t      line_ptr += 1;\n+\t      if (DW_LNE_lo_user <= extended_op\n+\t\t  && extended_op <= DW_LNE_hi_user)\n+\t\t{\n+\t\t  /* Vendor extension, ignore.  */\n+\t\t  line_ptr = extended_end;\n+\t\t  break;\n+\t\t}\n \t      switch (extended_op)\n \t\t{\n \t\tcase DW_LNE_end_sequence:"
    },
    {
      "sha": "1e1b702ec6d531cb723278bf65defc1e4bfc6e26",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -1,3 +1,10 @@\n+2020-08-03  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26333\n+\t* lib/dwarf.exp (DW_LNE_user): New proc.\n+\t* gdb.dwarf2/dw2-vendor-extended-opcode.c: New test.\n+\t* gdb.dwarf2/dw2-vendor-extended-opcode.exp: New file.\n+\n 2020-07-31  Kevin Buettner  <kevinb@redhat.com>\n \n \t* gdb.base/coremaker2.c: Change all uses of 'unsigned long long'"
    },
    {
      "sha": "97e019bcb03af067e05f7d48bd48d1581fdce4ba",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.c",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.c?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -0,0 +1,32 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+void\n+foo (void)\n+{\n+\n+}\n+\n+int\n+main()\n+{\n+  asm (\"main_label: .globl main_label\");\n+  foo ();\n+\n+  asm (\"main_label_2: .globl main_label_2\");\n+  return 0;\n+}"
    },
    {
      "sha": "92db7eaa51487dc4ce0c318266118ce057131a15",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.exp",
      "status": "added",
      "additions": 81,
      "deletions": 0,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-vendor-extended-opcode.exp?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -0,0 +1,81 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    verbose \"Skipping dw2-vendor-extended-opcode test.\"\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    verbose \"Skipping dw2-vendor-extended-opcode test.\"\n+    return 0\n+}\n+\n+standard_testfile dw2-vendor-extended-opcode.c dw2-vendor-extended-opcode-dw.S\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    declare_labels Llines\n+    global srcdir subdir srcfile\n+\n+    set DW_LNE_lo_usr 0x80\n+    set DW_LNE_hi_usr 0xff\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C}\n+\t    {name dw2-vendor-extended-opcode.c}\n+\t    {stmt_list $Llines DW_FORM_sec_offset}\n+\t} {\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{MACRO_AT_func {main}}\n+\t    }\n+\t}\n+    }\n+\n+    lines {version 2} Llines {\n+\tinclude_dir \"${srcdir}/${subdir}\"\n+\tfile_name \"$srcfile\" 1\n+\n+\tprogram {\n+\t    {DW_LNE_set_address main_label}\n+\t    {line 27}\n+\t    {DW_LNE_user 1 $DW_LNE_lo_usr}\n+\t    {DW_LNE_user 2 $DW_LNE_hi_usr}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address main_label_2}\n+\t    {DW_LNE_end_sequence}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto_main] {\n+    return -1\n+}\n+\n+gdb_breakpoint \"$srcfile:27\" message"
    },
    {
      "sha": "5c8406310523c8915e23397ad4c95565766fb731",
      "filename": "gdb/testsuite/lib/dwarf.exp",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/lib/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e/gdb/testsuite/lib/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/dwarf.exp?ref=8f34b74686c6b9bf83d1c46e93b5aecca2e0ed0e",
      "patch": "@@ -1449,6 +1449,22 @@ namespace eval Dwarf {\n \t\tset _line 1\n \t    }\n \n+\t    proc DW_LNE_user { len opcode } {\n+\t\tset DW_LNE_lo_usr 0x80\n+\t\tset DW_LNE_hi_usr 0xff\n+\t\tif { $DW_LNE_lo_usr <= $opcode\n+\t\t     && $opcode <= $DW_LNE_hi_usr } {\n+\t\t    _op .byte 0\n+\t\t    _op .uleb128 $len\n+\t\t    _op .byte $opcode\n+\t\t    for {set i 1} {$i < $len} {incr i} {\n+\t\t\t_op .byte 0\n+\t\t    }\n+\t\t} else {\n+\t\t    error \"unknown vendor specific extended opcode: $opcode\"\n+\t\t}\n+\t    }\n+\n \t    proc DW_LNS_copy {} {\n \t\t_op .byte 1\n \t    }"
    }
  ]
}