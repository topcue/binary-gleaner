{
  "sha": "11106495078658246feda85cb7566c1a6aacb1e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTExMDY0OTUwNzg2NTgyNDZmZWRhODVjYjc1NjZjMWE2YWFjYjFlMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:36Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-12-11T16:33:40Z"
    },
    "message": "Change varobj_item::value to a value_ref_ptr\n\nThis changes varobj_item::value to be a value_ref_ptr, removing some\nmanual management.\n\ngdb/ChangeLog\n2020-12-11  Tom Tromey  <tom@tromey.com>\n\n\t* varobj.c (install_dynamic_child, varobj_clear_saved_item)\n\t(update_dynamic_varobj_children, create_child)\n\t(create_child_with_value): Update.\n\t* varobj-iter.h (struct varobj_item) <value>: Now a\n\tvalue_ref_ptr.\n\t* python/py-varobj.c (py_varobj_iter::next): Call release_value.",
    "tree": {
      "sha": "9afbd6350466dd4011e8e40e11cf80c150552bae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9afbd6350466dd4011e8e40e11cf80c150552bae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/11106495078658246feda85cb7566c1a6aacb1e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11106495078658246feda85cb7566c1a6aacb1e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/11106495078658246feda85cb7566c1a6aacb1e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/11106495078658246feda85cb7566c1a6aacb1e1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "24fd95b4cd40f0108299c02f31f2d2a129f83769",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24fd95b4cd40f0108299c02f31f2d2a129f83769",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/24fd95b4cd40f0108299c02f31f2d2a129f83769"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 19,
    "deletions": 18
  },
  "files": [
    {
      "sha": "3b6569a308717e4c33dacfa854838d10a7d84630",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11106495078658246feda85cb7566c1a6aacb1e1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11106495078658246feda85cb7566c1a6aacb1e1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=11106495078658246feda85cb7566c1a6aacb1e1",
      "patch": "@@ -1,3 +1,12 @@\n+2020-12-11  Tom Tromey  <tom@tromey.com>\n+\n+\t* varobj.c (install_dynamic_child, varobj_clear_saved_item)\n+\t(update_dynamic_varobj_children, create_child)\n+\t(create_child_with_value): Update.\n+\t* varobj-iter.h (struct varobj_item) <value>: Now a\n+\tvalue_ref_ptr.\n+\t* python/py-varobj.c (py_varobj_iter::next): Call release_value.\n+\n 2020-12-11  Tom Tromey  <tom@tromey.com>\n \n \t* varobj.c (struct varobj_dynamic) <child_iter>: Now unique_ptr."
    },
    {
      "sha": "e550c7bf7850c31b2ffb24f845a901668d01f2c1",
      "filename": "gdb/python/py-varobj.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11106495078658246feda85cb7566c1a6aacb1e1/gdb/python/py-varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11106495078658246feda85cb7566c1a6aacb1e1/gdb/python/py-varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-varobj.c?ref=11106495078658246feda85cb7566c1a6aacb1e1",
      "patch": "@@ -111,7 +111,7 @@ py_varobj_iter::next ()\n     }\n \n   vitem = new varobj_item ();\n-  vitem->value = convert_value_from_python (py_v);\n+  vitem->value = release_value (convert_value_from_python (py_v));\n   if (vitem->value == NULL)\n     gdbpy_print_stack ();\n   vitem->name = name;"
    },
    {
      "sha": "fea14d6c1c628e3f647cd078513c37b976c6aa56",
      "filename": "gdb/varobj-iter.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11106495078658246feda85cb7566c1a6aacb1e1/gdb/varobj-iter.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11106495078658246feda85cb7566c1a6aacb1e1/gdb/varobj-iter.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj-iter.h?ref=11106495078658246feda85cb7566c1a6aacb1e1",
      "patch": "@@ -25,7 +25,7 @@ struct varobj_item\n   std::string name;\n \n   /* Value of this item.  */\n-  struct value *value;\n+  value_ref_ptr value;\n };\n \n /* A dynamic varobj iterator \"class\".  */"
    },
    {
      "sha": "4cbf00784595c304e207a74b2fd94ffdd23e0059",
      "filename": "gdb/varobj.c",
      "status": "modified",
      "additions": 8,
      "deletions": 16,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/11106495078658246feda85cb7566c1a6aacb1e1/gdb/varobj.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/11106495078658246feda85cb7566c1a6aacb1e1/gdb/varobj.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/varobj.c?ref=11106495078658246feda85cb7566c1a6aacb1e1",
      "patch": "@@ -625,14 +625,15 @@ install_dynamic_child (struct varobj *var,\n   else\n     {\n       varobj *existing = var->children[index];\n-      bool type_updated = update_type_if_necessary (existing, item->value);\n+      bool type_updated = update_type_if_necessary (existing,\n+\t\t\t\t\t\t    item->value.get ());\n \n       if (type_updated)\n \t{\n \t  if (type_changed != NULL)\n \t    type_changed->push_back (existing);\n \t}\n-      if (install_new_value (existing, item->value, 0))\n+      if (install_new_value (existing, item->value.get (), 0))\n \t{\n \t  if (!type_updated && changed != NULL)\n \t    changed->push_back (existing);\n@@ -678,10 +679,7 @@ static void\n varobj_clear_saved_item (struct varobj_dynamic *var)\n {\n   if (var->saved_item != NULL)\n-    {\n-      value_decref (var->saved_item->value);\n-      var->saved_item.reset (nullptr);\n-    }\n+    var->saved_item.reset (nullptr);\n }\n \n static bool\n@@ -723,13 +721,7 @@ update_dynamic_varobj_children (struct varobj *var,\n       if (var->dynamic->saved_item != NULL)\n \titem = std::move (var->dynamic->saved_item);\n       else\n-\t{\n-\t  item = var->dynamic->child_iter->next ();\n-\t  /* Release vitem->value so its lifetime is not bound to the\n-\t     execution of a command.  */\n-\t  if (item != NULL && item->value != NULL)\n-\t    item->value = release_value (item->value).release ();\n-\t}\n+\titem = var->dynamic->child_iter->next ();\n \n       if (item == NULL)\n \t{\n@@ -1804,7 +1796,7 @@ create_child (struct varobj *parent, int index, std::string &name)\n   struct varobj_item item;\n \n   std::swap (item.name, name);\n-  item.value = value_of_child (parent, index);\n+  item.value = release_value (value_of_child (parent, index));\n \n   return create_child_with_value (parent, index, &item);\n }\n@@ -1835,12 +1827,12 @@ create_child_with_value (struct varobj *parent, int index,\n   if (item->value != NULL)\n     /* If the child had no evaluation errors, var->value\n        will be non-NULL and contain a valid type.  */\n-    child->type = value_actual_type (item->value, 0, NULL);\n+    child->type = value_actual_type (item->value.get (), 0, NULL);\n   else\n     /* Otherwise, we must compute the type.  */\n     child->type = (*child->root->lang_ops->type_of_child) (child->parent,\n \t\t\t\t\t\t\t   child->index);\n-  install_new_value (child, item->value, 1);\n+  install_new_value (child, item->value.get (), 1);\n \n   return child;\n }"
    }
  ]
}