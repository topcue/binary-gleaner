{
  "sha": "0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
  "node_id": "C_kwDOANOeidoAKDBkOWFjYjQ1MzFjZmUzMzZiMmIzMzVmYmFhMWYyZWY4NzhhNmU0ZDk",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2021-11-20T03:15:30Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2022-02-06T20:48:18Z"
    },
    "message": "gdb: remove COMPUNIT_DIRNAME macro, add getter/setter\n\nAdd a getter and a setter for a compunit_symtab's dirname.  Remove the\ncorresponding macro and adjust all callers.\n\nChange-Id: If2f39b295fd26822586485e04a8b8b5aa5cc9b2e",
    "tree": {
      "sha": "1e26fd55ddf025d4587b6f89178a07c3baff0e83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1e26fd55ddf025d4587b6f89178a07c3baff0e83"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ab5f850eed6aba84050d075e8c8a2cb16a876b15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ab5f850eed6aba84050d075e8c8a2cb16a876b15",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ab5f850eed6aba84050d075e8c8a2cb16a876b15"
    }
  ],
  "stats": {
    "total": 35,
    "additions": 21,
    "deletions": 14
  },
  "files": [
    {
      "sha": "7659f53cbe097a26135369675f9c17717fb6da0f",
      "filename": "gdb/buildsym-legacy.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/buildsym-legacy.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/buildsym-legacy.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym-legacy.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -303,7 +303,7 @@ restart_symtab (struct compunit_symtab *cust,\n   buildsym_compunit\n     = new struct buildsym_compunit (cust->objfile (),\n \t\t\t\t    name,\n-\t\t\t\t    COMPUNIT_DIRNAME (cust),\n+\t\t\t\t    cust->dirname (),\n \t\t\t\t    compunit_language (cust),\n \t\t\t\t    start_addr,\n \t\t\t\t    cust);"
    },
    {
      "sha": "b96d154331a3dac5687850c09136ce33dfc28220",
      "filename": "gdb/buildsym.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/buildsym.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/buildsym.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/buildsym.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -1005,8 +1005,8 @@ buildsym_compunit::end_symtab_with_blockvector (struct block *static_block,\n     {\n       /* Reallocate the dirname on the symbol obstack.  */\n       const char *comp_dir = m_comp_dir.get ();\n-      COMPUNIT_DIRNAME (cu) = obstack_strdup (&m_objfile->objfile_obstack,\n-\t\t\t\t\t      comp_dir);\n+      cu->set_dirname (obstack_strdup (&m_objfile->objfile_obstack,\n+\t\t\t\t       comp_dir));\n     }\n \n   /* Save the debug format string (if any) in the symtab.  */"
    },
    {
      "sha": "cd3e6afbe87f2e84d3baf2867144debac3eee4ba",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -10723,7 +10723,7 @@ dwarf2_cu::setup_type_unit_groups (struct die_info *die)\n \t  struct compunit_symtab *cust = tug_unshare->compunit_symtab;\n \t  m_builder.reset (new struct buildsym_compunit\n \t\t\t   (cust->objfile (), \"\",\n-\t\t\t    COMPUNIT_DIRNAME (cust),\n+\t\t\t    cust->dirname (),\n \t\t\t    compunit_language (cust),\n \t\t\t    0, cust));\n \t  list_in_scope = get_builder ()->get_file_symbols ();\n@@ -10775,7 +10775,7 @@ dwarf2_cu::setup_type_unit_groups (struct die_info *die)\n       struct compunit_symtab *cust = tug_unshare->compunit_symtab;\n       m_builder.reset (new struct buildsym_compunit\n \t\t       (cust->objfile (), \"\",\n-\t\t\tCOMPUNIT_DIRNAME (cust),\n+\t\t\tcust->dirname (),\n \t\t\tcompunit_language (cust),\n \t\t\t0, cust));\n       list_in_scope = get_builder ()->get_file_symbols ();"
    },
    {
      "sha": "eda96b0003f1fb1f7fdefc036362e74a4120e863",
      "filename": "gdb/jit.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/jit.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/jit.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/jit.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -513,7 +513,7 @@ finalize_symtab (struct gdb_symtab *stab, struct objfile *objfile)\n   add_compunit_symtab_to_objfile (cust);\n \n   /* JIT compilers compile in memory.  */\n-  COMPUNIT_DIRNAME (cust) = NULL;\n+  cust->set_dirname (nullptr);\n \n   /* Copy over the linetable entry if one was provided.  */\n   if (stab->linetable)"
    },
    {
      "sha": "7ca3f312d3303bb7e7179e3f33534c92fc612a15",
      "filename": "gdb/macrotab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/macrotab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/macrotab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/macrotab.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -1066,7 +1066,7 @@ macro_source_fullname (struct macro_source_file *file)\n   const char *comp_dir = NULL;\n \n   if (file->table->compunit_symtab != NULL)\n-    comp_dir = COMPUNIT_DIRNAME (file->table->compunit_symtab);\n+    comp_dir = file->table->compunit_symtab->dirname ();\n \n   if (comp_dir == NULL || IS_ABSOLUTE_PATH (file->filename))\n     return file->filename;"
    },
    {
      "sha": "9c882a468b278b486aab5a212ab472f2b0fc3b9e",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -782,9 +782,8 @@ maintenance_info_symtabs (const char *regexp, int from_tty)\n \t\t\t\t\t (cust->producer () != nullptr\n \t\t\t\t\t  ? cust->producer () : \"(null)\"));\n \t\t\tprintf_filtered (\"    dirname %s\\n\",\n-\t\t\t\t\t COMPUNIT_DIRNAME (cust) != NULL\n-\t\t\t\t\t ? COMPUNIT_DIRNAME (cust)\n-\t\t\t\t\t : \"(null)\");\n+\t\t\t\t\t (cust->dirname () != NULL\n+\t\t\t\t\t  ? cust->dirname () : \"(null)\"));\n \t\t\tprintf_filtered (\"    blockvector\"\n \t\t\t\t\t \" ((struct blockvector *) %s)\\n\",\n \t\t\t\t\t host_address_to_string"
    },
    {
      "sha": "b72abab2ab5a3c05fbd2cedbc0d7490271b858b7",
      "filename": "gdb/symtab.h",
      "status": "modified",
      "additions": 12,
      "deletions": 4,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/symtab.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9/gdb/symtab.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.h?ref=0d9acb4531cfe336b2b335fbaa1f2ef878a6e4d9",
      "patch": "@@ -1413,8 +1413,7 @@ using symtab_range = next_range<symtab>;\n #define SYMTAB_OBJFILE(symtab) \\\n   (SYMTAB_COMPUNIT (symtab)->objfile ())\n #define SYMTAB_PSPACE(symtab) (SYMTAB_OBJFILE (symtab)->pspace)\n-#define SYMTAB_DIRNAME(symtab) \\\n-  COMPUNIT_DIRNAME (SYMTAB_COMPUNIT (symtab))\n+#define SYMTAB_DIRNAME(symtab) (SYMTAB_COMPUNIT (symtab)->dirname ())\n \n /* Compunit symtabs contain the actual \"symbol table\", aka blockvector, as well\n    as the list of all source files (what gdb has historically associated with\n@@ -1502,6 +1501,16 @@ struct compunit_symtab\n     m_producer = producer;\n   }\n \n+  const char *dirname () const\n+  {\n+    return m_dirname;\n+  }\n+\n+  void set_dirname (const char *dirname)\n+  {\n+    m_dirname = dirname;\n+  }\n+\n   /* Make PRIMARY_FILETAB the primary filetab of this compunit symtab.\n \n      PRIMARY_FILETAB must already be a filetab of this compunit symtab.  */\n@@ -1551,7 +1560,7 @@ struct compunit_symtab\n   const char *m_producer;\n \n   /* Directory in which it was compiled, or NULL if we don't know.  */\n-  const char *dirname;\n+  const char *m_dirname;\n \n   /* List of all symbol scope blocks for this symtab.  It is shared among\n      all symtabs in a given compilation unit.  */\n@@ -1597,7 +1606,6 @@ struct compunit_symtab\n \n using compunit_symtab_range = next_range<compunit_symtab>;\n \n-#define COMPUNIT_DIRNAME(cust) ((cust)->dirname)\n #define COMPUNIT_BLOCKVECTOR(cust) ((cust)->blockvector)\n #define COMPUNIT_BLOCK_LINE_SECTION(cust) ((cust)->block_line_section)\n #define COMPUNIT_LOCATIONS_VALID(cust) ((cust)->locations_valid)"
    }
  ]
}