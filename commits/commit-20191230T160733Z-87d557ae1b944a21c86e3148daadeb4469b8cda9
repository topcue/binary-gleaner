{
  "sha": "87d557ae1b944a21c86e3148daadeb4469b8cda9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODdkNTU3YWUxYjk0NGEyMWM4NmUzMTQ4ZGFhZGViNDQ2OWI4Y2RhOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-30T16:07:33Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-30T16:07:33Z"
    },
    "message": "Use \"bool\" in more spots in TUI\n\nThis changes a few spots in the TUI to use \"bool\" rather than \"int\".\nTested on x86-64 Fedora 28.\n\ngdb/ChangeLog\n2019-12-30  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-interp.c (tui_start_enabled): Now bool.\n\t(_initialize_tui_interp): Update.\n\t* tui/tui-hooks.c (tui_refreshing_registers): Now bool.\n\t(tui_register_changed)\n\t(tui_refresh_frame_and_register_information): Update.\n\t* tui/tui-win.c (tui_update_variables): Return bool.\n\t* tui/tui-win.h (tui_update_variables): Return bool.\n\t* tui/tui.c (tui_get_command_dimension): Return bool.\n\t* tui/tui.h (tui_get_command_dimension): Return bool.\n\nChange-Id: I55b7f2d62d2ef88da3587dc914ada9f463ad8d2b",
    "tree": {
      "sha": "7826816491a02cdcd44992e18a0c279d9355d8c9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7826816491a02cdcd44992e18a0c279d9355d8c9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/87d557ae1b944a21c86e3148daadeb4469b8cda9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87d557ae1b944a21c86e3148daadeb4469b8cda9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/87d557ae1b944a21c86e3148daadeb4469b8cda9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/87d557ae1b944a21c86e3148daadeb4469b8cda9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7ac9aa525de25d3bc6e7bfd37615092a4f94055",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7ac9aa525de25d3bc6e7bfd37615092a4f94055"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 33,
    "deletions": 23
  },
  "files": [
    {
      "sha": "4ccf45eb21f4653f66509233cb7f8e4118c37bef",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -1,3 +1,15 @@\n+2019-12-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-interp.c (tui_start_enabled): Now bool.\n+\t(_initialize_tui_interp): Update.\n+\t* tui/tui-hooks.c (tui_refreshing_registers): Now bool.\n+\t(tui_register_changed)\n+\t(tui_refresh_frame_and_register_information): Update.\n+\t* tui/tui-win.c (tui_update_variables): Return bool.\n+\t* tui/tui-win.h (tui_update_variables): Return bool.\n+\t* tui/tui.c (tui_get_command_dimension): Return bool.\n+\t* tui/tui.h (tui_get_command_dimension): Return bool.\n+\n 2019-12-29  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* buildsym.c (buildsym_compunit::record_line): Do no longer ignore"
    },
    {
      "sha": "b92abb9e031cba99643e971c072ceb5184b6665a",
      "filename": "gdb/tui/tui-hooks.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-hooks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-hooks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-hooks.c?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -57,7 +57,7 @@ tui_new_objfile_hook (struct objfile* objfile)\n }\n \n /* Prevent recursion of deprecated_register_changed_hook().  */\n-static int tui_refreshing_registers = 0;\n+static bool tui_refreshing_registers = false;\n \n /* Observer for the register_changed notification.  */\n \n@@ -75,11 +75,11 @@ tui_register_changed (struct frame_info *frame, int regno)\n      up in the other.  So we always use the selected frame here, and ignore\n      FRAME.  */\n   fi = get_selected_frame (NULL);\n-  if (tui_refreshing_registers == 0)\n+  if (!tui_refreshing_registers)\n     {\n-      tui_refreshing_registers = 1;\n+      tui_refreshing_registers = true;\n       TUI_DATA_WIN->check_register_values (fi);\n-      tui_refreshing_registers = 0;\n+      tui_refreshing_registers = false;\n     }\n }\n \n@@ -139,9 +139,9 @@ tui_refresh_frame_and_register_information ()\n       if (tui_is_window_visible (DATA_WIN)\n \t  && (frame_info_changed_p || from_stack))\n \t{\n-\t  tui_refreshing_registers = 1;\n+\t  tui_refreshing_registers = true;\n \t  TUI_DATA_WIN->check_register_values (fi);\n-\t  tui_refreshing_registers = 0;\n+\t  tui_refreshing_registers = false;\n \t}\n     }\n   else if (!from_stack)"
    },
    {
      "sha": "01edbd0e48aeb3e7c30eb6a56925bf204a7d2c59",
      "filename": "gdb/tui/tui-interp.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-interp.c?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -35,9 +35,9 @@\n #include \"inferior.h\"\n #include \"main.h\"\n \n-/* Set to 1 when the TUI mode must be activated when we first start\n+/* Set to true when the TUI mode must be activated when we first start\n    gdb.  */\n-static int tui_start_enabled = 0;\n+static bool tui_start_enabled = false;\n \n class tui_interp final : public cli_interp_base\n {\n@@ -312,7 +312,7 @@ _initialize_tui_interp (void)\n   interp_factory_register (INTERP_TUI, tui_interp_factory);\n \n   if (interpreter_p && strcmp (interpreter_p, INTERP_TUI) == 0)\n-    tui_start_enabled = 1;\n+    tui_start_enabled = true;\n \n   if (interpreter_p && strcmp (interpreter_p, INTERP_CONSOLE) == 0)\n     {"
    },
    {
      "sha": "959b0cdd76fac2ff8dca3fb6afc4c89e24c1c8f7",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -254,23 +254,23 @@ translate (const char *name, struct tui_translate *table)\n /* Update the tui internal configuration according to gdb settings.\n    Returns 1 if the configuration has changed and the screen should\n    be redrawn.  */\n-int\n-tui_update_variables (void)\n+bool\n+tui_update_variables ()\n {\n-  int need_redraw = 0;\n+  bool need_redraw = false;\n   struct tui_translate *entry;\n \n   entry = translate (tui_border_mode, tui_border_mode_translate);\n   if (tui_border_attrs != entry->value)\n     {\n       tui_border_attrs = entry->value;\n-      need_redraw = 1;\n+      need_redraw = true;\n     }\n   entry = translate (tui_active_border_mode, tui_border_mode_translate);\n   if (tui_active_border_attrs != entry->value)\n     {\n       tui_active_border_attrs = entry->value;\n-      need_redraw = 1;\n+      need_redraw = true;\n     }\n \n   /* If one corner changes, all characters are changed.\n@@ -280,7 +280,7 @@ tui_update_variables (void)\n   if (tui_border_lrcorner != (chtype) entry->value)\n     {\n       tui_border_lrcorner = (entry->value < 0) ? ACS_LRCORNER : entry->value;\n-      need_redraw = 1;\n+      need_redraw = true;\n     }\n   entry = translate (tui_border_kind, tui_border_kind_translate_llcorner);\n   tui_border_llcorner = (entry->value < 0) ? ACS_LLCORNER : entry->value;"
    },
    {
      "sha": "789a3e8324074bc6397fb3aec3c70b0a4882abb7",
      "filename": "gdb/tui/tui-win.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-win.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui-win.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.h?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -44,7 +44,7 @@ extern chtype tui_border_hline;\n extern int tui_border_attrs;\n extern int tui_active_border_attrs;\n \n-extern int tui_update_variables (void);\n+extern bool tui_update_variables ();\n \n extern void tui_initialize_win (void);\n "
    },
    {
      "sha": "f73ef7d58bf7c6356953abb8505612bc71ebd3ee",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -591,18 +591,16 @@ tui_is_window_visible (enum tui_win_type type)\n   return tui_win_list[type]->is_visible ();\n }\n \n-int\n+bool\n tui_get_command_dimension (unsigned int *width, \n \t\t\t   unsigned int *height)\n {\n   if (!tui_active || (TUI_CMD_WIN == NULL))\n-    {\n-      return 0;\n-    }\n+    return false;\n   \n   *width = TUI_CMD_WIN->width;\n   *height = TUI_CMD_WIN->height;\n-  return 1;\n+  return true;\n }\n \n void"
    },
    {
      "sha": "75574e527c9b60fe271569b6a4daf0896ac32a9c",
      "filename": "gdb/tui/tui.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/87d557ae1b944a21c86e3148daadeb4469b8cda9/gdb/tui/tui.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.h?ref=87d557ae1b944a21c86e3148daadeb4469b8cda9",
      "patch": "@@ -49,8 +49,8 @@ extern CORE_ADDR tui_get_low_disassembly_address (struct gdbarch *,\n \t\t\t\t\t\t  CORE_ADDR, CORE_ADDR);\n extern void tui_show_assembly (struct gdbarch *gdbarch, CORE_ADDR addr);\n extern bool tui_is_window_visible (enum tui_win_type type);\n-extern int tui_get_command_dimension (unsigned int *width,\n-\t\t\t\t      unsigned int *height);\n+extern bool tui_get_command_dimension (unsigned int *width,\n+\t\t\t\t       unsigned int *height);\n \n /* Initialize readline and configure the keymap for the switching\n    key shortcut.  */"
    }
  ]
}