{
  "sha": "3e9373fcaf5184dcf690ff98751f63cca79eaa02",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2U5MzczZmNhZjUxODRkY2Y2OTBmZjk4NzUxZjYzY2NhNzllYWEwMg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-28T18:44:28Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-12-28T18:44:28Z"
    },
    "message": "binutils: Use the newly built assembler and linker\n\nUse the newly built assembler and linker in test_gnu_debuglink by passing\n$gcc_gas_flag to target_compile.\n\n\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Pass\n\t$gcc_gas_flag to target_compile.",
    "tree": {
      "sha": "9e6eb185c7b493a6d48444a90681657868b73092",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9e6eb185c7b493a6d48444a90681657868b73092"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3e9373fcaf5184dcf690ff98751f63cca79eaa02",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e9373fcaf5184dcf690ff98751f63cca79eaa02",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3e9373fcaf5184dcf690ff98751f63cca79eaa02",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3e9373fcaf5184dcf690ff98751f63cca79eaa02/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "adf6c633a38c998acf4ac8a094ad991bc9e2e6c2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/adf6c633a38c998acf4ac8a094ad991bc9e2e6c2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/adf6c633a38c998acf4ac8a094ad991bc9e2e6c2"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "bd087e5ec971d9f93ba63f2ea6f2fd9c1856e921",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3e9373fcaf5184dcf690ff98751f63cca79eaa02/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3e9373fcaf5184dcf690ff98751f63cca79eaa02/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=3e9373fcaf5184dcf690ff98751f63cca79eaa02",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Pass\n+\t$gcc_gas_flag to target_compile.\n+\n 2020-12-24  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (INT64_MIN): Define if not already defined."
    },
    {
      "sha": "a1dd8d32b82a2227676e3a5bf9f237e2a65df3e7",
      "filename": "binutils/testsuite/binutils-all/compress.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3e9373fcaf5184dcf690ff98751f63cca79eaa02/binutils/testsuite/binutils-all/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3e9373fcaf5184dcf690ff98751f63cca79eaa02/binutils/testsuite/binutils-all/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/compress.exp?ref=3e9373fcaf5184dcf690ff98751f63cca79eaa02",
      "patch": "@@ -680,10 +680,19 @@ proc test_gnu_debuglink {} {\n     global STRIP\n     global OBJCOPY\n     global OBJDUMP\n+    global gcc_gas_flag\n \n     set test \"gnu-debuglink\"\n \n-    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog executable debug] != \"\" } {\n+    # Use the newly built assembler and linker.\n+    set flags debug\n+    if { [istarget *-*-linux*]\n+\t || [istarget *-*-gnu*] } {\n+\tforeach i $gcc_gas_flag {\n+\t    set flags \"additional_flags=$i $flags\"\n+\t}\n+    }\n+    if { [target_compile $srcdir/$subdir/testprog.c tmpdir/testprog executable $flags] != \"\" } {\n \tunsupported \"$test (build)\"\n \treturn\n     }"
    }
  ]
}