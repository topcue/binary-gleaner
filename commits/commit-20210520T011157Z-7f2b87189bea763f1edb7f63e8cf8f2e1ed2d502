{
  "sha": "7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2YyYjg3MTg5YmVhNzYzZjFlZGI3ZjYzZThjZjhmMmUxZWQyZDUwMg==",
  "commit": {
    "author": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-05-20T01:11:57Z"
    },
    "committer": {
      "name": "Will Schmidt",
      "email": "will_schmidt@vnet.ibm.com",
      "date": "2021-05-20T01:11:57Z"
    },
    "message": "[PATCH]rs6000,testsuite Add a powerpc64-prologue testcase.\n\nAdd a powerpc64-prologue testcase, this is based on the existing\npowerpc-prologue test, but updated for the powerpc64 (le) target.\n\nYYYY-MM-DD  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\ngcc/testsuite/ChangeLog\n\t* gdb.arch/powerpc64-prologue.c: New test to exercise prologues\n\tfor the powerpc64 LE target.\n\t* gdb.arch/powerpc-prologue.exp: Test Harness.",
    "tree": {
      "sha": "204558607224feb6afd380b061be7303125c338b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/204558607224feb6afd380b061be7303125c338b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/comments",
  "author": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "willschm",
    "id": 44359,
    "node_id": "MDQ6VXNlcjQ0MzU5",
    "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/willschm",
    "html_url": "https://github.com/willschm",
    "followers_url": "https://api.github.com/users/willschm/followers",
    "following_url": "https://api.github.com/users/willschm/following{/other_user}",
    "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/willschm/subscriptions",
    "organizations_url": "https://api.github.com/users/willschm/orgs",
    "repos_url": "https://api.github.com/users/willschm/repos",
    "events_url": "https://api.github.com/users/willschm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/willschm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d556135f02ae050fb1fad841e427e420d98dcfd5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d556135f02ae050fb1fad841e427e420d98dcfd5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d556135f02ae050fb1fad841e427e420d98dcfd5"
    }
  ],
  "stats": {
    "total": 180,
    "additions": 180,
    "deletions": 0
  },
  "files": [
    {
      "sha": "705afbaf40d9f5656c52d5830ada3c093fe05c5f",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
      "patch": "@@ -1,3 +1,9 @@\n+2021-05-19  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gdb.arch/powerpc64-prologue.c: New test to exercise prologues\n+\tfor the powerpc64 LE target.\n+\t* gdb.arch/powerpc-prologue.exp: Test Harness.\n+\n 2021-05-19  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.guile/scm-pretty-print.exp: Add test names to resolve"
    },
    {
      "sha": "acb995744387cb2766ea984a2353a3a302c6ef16",
      "filename": "gdb/testsuite/gdb.arch/powerpc64-prologue.c",
      "status": "added",
      "additions": 92,
      "deletions": 0,
      "changes": 92,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/gdb.arch/powerpc64-prologue.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/gdb.arch/powerpc64-prologue.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/powerpc64-prologue.c?ref=7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
      "patch": "@@ -0,0 +1,92 @@\n+/* Unwinder test program.\n+\n+   Copyright 2006-2021 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifdef SYMBOL_PREFIX\n+#define SYMBOL(str)\tSYMBOL_PREFIX #str\n+#else\n+#define SYMBOL(str)\t#str\n+#endif\n+\n+void gdb2029 (void);\n+void optimized_1 (void);\n+\n+int\n+main (void)\n+{\n+  gdb2029 ();\n+  optimized_1 ();\n+  return 0;\n+}\n+\n+void\n+optimized_1_marker (void)\n+{\n+}\n+\n+void\n+gdb2029_marker (void)\n+{\n+}\n+\n+/* A typical PIC prologue from GCC.  */\n+/* This is a ppc64(le) variation of the code as seen\n+   in powerpc-prologue.c.  */\n+\n+asm(\".text\\n\"\n+    \"\t.p2align 3\\n\"\n+    SYMBOL (gdb2029) \":\\n\"\n+    \"\tmflr\t%r0\\n\"\n+    \"\tstd\t%r0,16(%r1)\\n\"\n+    \"\tstd\t%r31,-8(%r1)\\n\"\n+    \"\tstdu\t%r1,-128(%r1)\\n\"\n+    \"\tmr\t%r31,%r1\\n\"\n+    \"\tmr\t%r9,%r3\\n\"\n+    \"\tstw\t%r9,176(%r31)\\n\"\n+    \"\tlwz\t%r9,176(%r31)\\n\"\n+    \"\tbl\tgdb2029_marker\\n\"\n+    \"\tnop\\n\"\n+    \"\tmr\t%r9,%r3\\n\"\n+    \"\tmr\t%r3,%r9\\n\"\n+    \"\taddi\t%r1,%r31,128\\n\"\n+    \"\tld\t%r0,16(%r1)\\n\"\n+    \"\tmtlr\t%r0\\n\"\n+    \"\tld\t%r31,-8(%r1)\\n\"\n+    \"\tblr\");\n+\n+/* A heavily scheduled prologue.  */\n+asm(\".text\\n\"\n+    \"\t.p2align 3\\n\"\n+    SYMBOL (optimized_1) \":\\n\"\n+    \"\tstdu\t%r1,-32(%r1)\\n\"\n+    \"\tlis\t%r9,-16342\\n\"\n+    \"\tlis\t%r11,-16342\\n\"\n+    \"\tmflr\t%r0\\n\"\n+    \"\taddi\t%r11,%r11,3776\\n\"\n+    \"\tstd\t%r30,12(%r1)\\n\"\n+    \"\taddi\t%r31,%r9,3152\\n\"\n+    \"\tcmplw\t%cr7,%r31,%r11\\n\"\n+    \"\tstd\t%r0,36(%r1)\\n\"\n+    \"\tmr\t%r30,%r3\\n\"\n+    \"\tbl\toptimized_1_marker\\n\"\n+    \"\tnop\t\\n\"\n+    \"\tld\t%r0,36(%r1)\\n\"\n+    \"\tmtlr\t%r0\\n\"\n+    \"\tld\t%r30,12(%r1)\\n\"\n+    \"\taddi\t%r1,%r1,32\\n\"\n+    \"\tblr\");"
    },
    {
      "sha": "4b01dec9ac6e27fe7194a8a1f8fa9501043b80fe",
      "filename": "gdb/testsuite/gdb.arch/powerpc64-prologue.exp",
      "status": "added",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/gdb.arch/powerpc64-prologue.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502/gdb/testsuite/gdb.arch/powerpc64-prologue.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.arch/powerpc64-prologue.exp?ref=7f2b87189bea763f1edb7f63e8cf8f2e1ed2d502",
      "patch": "@@ -0,0 +1,82 @@\n+# Copyright 2006-2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test PowerPC(64le) prologue analyzer.\n+\n+# Do not run on AIX (where we won't be able to build the tests without\n+# some surgery) or on PowerPC64 (ditto, dot symbols).\n+if {[istarget *-*-aix*] || ![istarget \"powerpc*-*-*\"]} then {\n+    verbose \"Skipping PowerPC prologue tests.\"\n+    return\n+}\n+\n+standard_testfile .c\n+\n+# Don't use \"debug\", so that we don't have line information for the assembly\n+# fragments.\n+if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" executable {}] != \"\" } {\n+    untested \"PowerPC prologue tests\"\n+    return -1\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" $testfile \"$srcfile\" \\\n+      {}] } {\n+    return -1\n+}\n+\n+# Run to `main' where we begin our tests.\n+if ![runto_main] then {\n+    fail \"can't run to main\"\n+    return 0\n+}\n+\n+# Testcase for PIC prologue.\n+gdb_breakpoint \"gdb2029_marker\"\n+gdb_test \"continue\" \"Breakpoint $decimal, $hex in gdb2029_marker \\\\(\\\\).*\" \\\n+\t\"continue to PIC\"\n+\n+gdb_test \"backtrace 10\" \\\n+\t\"#0\\[ \\t\\]*$hex in gdb2029_marker.*\\r\\n#1\\[ \\t\\]*$hex in gdb2029.*\\r\\n#2\\[ \\t\\]*$hex in main.*\" \\\n+\t\"backtrace in PIC marker\"\n+\n+gdb_test \"finish\" \".*$hex in gdb2029 .*\" \"finish from PIC\"\n+\n+gdb_test \"backtrace 10\" \\\n+\t\"#0\\[ \\t\\]*$hex in gdb2029 .*\\r\\n#1\\[ \\t\\]*$hex in main.*\" \\\n+\t\"backtrace in PIC\"\n+\n+gdb_test \"info frame\" \\\n+\t\".*Saved registers:.*r31 at.*pc at.*lr at.*\" \\\n+\t\"saved registers in PIC\"\n+\n+# Testcase for scheduled prologue.\n+gdb_breakpoint \"optimized_1_marker\"\n+gdb_test \"continue\" \"Breakpoint $decimal, $hex in optimized_1_marker \\\\(\\\\).*\" \\\n+\t\"continue to optimized\"\n+\n+gdb_test \"backtrace 10\" \\\n+\t\"#0\\[ \\t\\]*$hex in optimized_1_marker.*\\r\\n#1\\[ \\t\\]*$hex in optimized_1.*\\r\\n#2\\[ \\t\\]*$hex in main.*\" \\\n+\t\"backtrace in optimized marker\"\n+\n+gdb_test \"finish\" \".*$hex in optimized_1 .*\" \"finish from optimized\"\n+\n+gdb_test \"backtrace 10\" \\\n+\t\"#0\\[ \\t\\]*$hex in optimized_1 .*\\r\\n#1\\[ \\t\\]*$hex in main.*\" \\\n+\t\"backtrace in optimized\"\n+\n+gdb_test \"info frame\" \\\n+\t\".*Saved registers:.*r30 at.*pc at.*lr at.*\" \\\n+\t\"saved registers in optimized\"\n+"
    }
  ]
}