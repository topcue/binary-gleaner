{
  "sha": "3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2MzY2QzZDRkN2M3ZTA1YWE0OGI4N2M0YWIxMWJhYzEyYTJjYWY3Yw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:14:03Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:57Z"
    },
    "message": "Add dwarf2_per_objfile parameter to allocate_piece_closure\n\nThis allows removing a dwarf2_per_cu_data::dwarf2_per_objfile reference.\n\ngdb/ChangeLog:\n\n\t* dwarf2/loc.c (allocate_piece_closure): Add dwarf2_per_objfile\n\tparameter.\n\t(dwarf2_evaluate_loc_desc_full): Update.\n\nChange-Id: Ic4a694a3fc763360a131ee4e3aaf5a5b4735c813",
    "tree": {
      "sha": "bde11c5e1086ed8ee33f665112940082a6d21c22",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/bde11c5e1086ed8ee33f665112940082a6d21c22"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "82ca3f5189e9f8199dc21baeabe2a31a342db163",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/82ca3f5189e9f8199dc21baeabe2a31a342db163",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/82ca3f5189e9f8199dc21baeabe2a31a342db163"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 11,
    "deletions": 3
  },
  "files": [
    {
      "sha": "fc965a4aa89f0fc41bf689326448d92ab8d645c6",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
      "patch": "@@ -1,3 +1,9 @@\n+2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* dwarf2/loc.c (allocate_piece_closure): Add dwarf2_per_objfile\n+\tparameter.\n+\t(dwarf2_evaluate_loc_desc_full): Update.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.h (dwarf2_read_addr_index): Add dwarf2_per_objfile"
    },
    {
      "sha": "99a3a53e11a600432d7d9a2bb4f794a5c68bb592",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=3c3cd3d4d7c7e05aa48b87c4ab11bac12a2caf7c",
      "patch": "@@ -1576,15 +1576,16 @@ struct piece_closure\n    PIECES.  */\n \n static struct piece_closure *\n-allocate_piece_closure (struct dwarf2_per_cu_data *per_cu,\n+allocate_piece_closure (dwarf2_per_cu_data *per_cu,\n+\t\t\tdwarf2_per_objfile *per_objfile,\n \t\t\tstd::vector<dwarf_expr_piece> &&pieces,\n \t\t\tstruct frame_info *frame)\n {\n   struct piece_closure *c = new piece_closure;\n \n   c->refc = 1;\n   /* We must capture this here due to sharing of DWARF state.  */\n-  c->per_objfile = per_cu->dwarf2_per_objfile;\n+  c->per_objfile = per_objfile;\n   c->per_cu = per_cu;\n   c->pieces = std::move (pieces);\n   if (frame == NULL)\n@@ -2245,7 +2246,8 @@ dwarf2_evaluate_loc_desc_full (struct type *type, struct frame_info *frame,\n       if (bit_size > 8 * TYPE_LENGTH (type))\n \tinvalid_synthetic_pointer ();\n \n-      c = allocate_piece_closure (per_cu, std::move (ctx.pieces), frame);\n+      c = allocate_piece_closure (per_cu, per_objfile, std::move (ctx.pieces),\n+\t\t\t\t  frame);\n       /* We must clean up the value chain after creating the piece\n \t closure but before allocating the result.  */\n       free_values.free_to_mark ();"
    }
  ]
}