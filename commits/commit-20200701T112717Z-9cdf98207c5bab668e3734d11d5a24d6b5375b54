{
  "sha": "9cdf98207c5bab668e3734d11d5a24d6b5375b54",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWNkZjk4MjA3YzViYWI2NjhlMzczNGQxMWQ1YTI0ZDZiNTM3NWI1NA==",
  "commit": {
    "author": {
      "name": "Alok Kumar Sharma",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2020-07-01T06:23:09Z"
    },
    "committer": {
      "name": "alosharm",
      "email": "AlokKumar.Sharma@amd.com",
      "date": "2020-07-01T11:27:17Z"
    },
    "message": "Allow reference form for DW_AT_associated and DW_AT_allocated attributes\n\nCurrently, GDB rejects the (die) reference form while it accepts exprloc\nform. It is allowed in DWARF standard. \"Table 7.5: Attribute encodings\"\nin DWARF5 standard. Flang compiler assigns (die) reference to\nDW_AT_associated and DW_AT_allocated for some cases.\n\ngdb/ChangeLog\n\n\t* dwarf2/read.c (set_die_type): Removed conditions to restrict\n\tforms for DW_AT_associated and DW_AT_allocated attributes,\n\twhich is already checked in function attr_to_dynamic_prop.",
    "tree": {
      "sha": "64cb7a8e7c5d5011a3926de90b50e9368de5f811",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/64cb7a8e7c5d5011a3926de90b50e9368de5f811"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9cdf98207c5bab668e3734d11d5a24d6b5375b54",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cdf98207c5bab668e3734d11d5a24d6b5375b54",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9cdf98207c5bab668e3734d11d5a24d6b5375b54",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cdf98207c5bab668e3734d11d5a24d6b5375b54/comments",
  "author": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "alokkrsharma",
    "id": 60725621,
    "node_id": "MDQ6VXNlcjYwNzI1NjIx",
    "avatar_url": "https://avatars.githubusercontent.com/u/60725621?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/alokkrsharma",
    "html_url": "https://github.com/alokkrsharma",
    "followers_url": "https://api.github.com/users/alokkrsharma/followers",
    "following_url": "https://api.github.com/users/alokkrsharma/following{/other_user}",
    "gists_url": "https://api.github.com/users/alokkrsharma/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/alokkrsharma/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/alokkrsharma/subscriptions",
    "organizations_url": "https://api.github.com/users/alokkrsharma/orgs",
    "repos_url": "https://api.github.com/users/alokkrsharma/repos",
    "events_url": "https://api.github.com/users/alokkrsharma/events{/privacy}",
    "received_events_url": "https://api.github.com/users/alokkrsharma/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc574a35a22ed984fb2d459669d1bac9f843f920",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cc574a35a22ed984fb2d459669d1bac9f843f920",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/cc574a35a22ed984fb2d459669d1bac9f843f920"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 8,
    "deletions": 14
  },
  "files": [
    {
      "sha": "404ee40667895438752ba2ac74295a4928c6b175",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cdf98207c5bab668e3734d11d5a24d6b5375b54/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cdf98207c5bab668e3734d11d5a24d6b5375b54/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9cdf98207c5bab668e3734d11d5a24d6b5375b54",
      "patch": "@@ -1,3 +1,9 @@\n+2020-07-01  Alok Kumar Sharma  <AlokKumar.Sharma@amd.com>\n+\n+\t* dwarf2/read.c (set_die_type): Removed conditions to restrict\n+\tforms for DW_AT_associated and DW_AT_allocated attributes,\n+\twhich is already checked in function attr_to_dynamic_prop.\n+\n 2020-06-30  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (quirk_rust_enum): Correctly call"
    },
    {
      "sha": "4622d14a05c6819b482c9c97c14a14755876aa72",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 14,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9cdf98207c5bab668e3734d11d5a24d6b5375b54/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9cdf98207c5bab668e3734d11d5a24d6b5375b54/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=9cdf98207c5bab668e3734d11d5a24d6b5375b54",
      "patch": "@@ -23859,33 +23859,21 @@ set_die_type (struct die_info *die, struct type *type, struct dwarf2_cu *cu)\n \n   /* Read DW_AT_allocated and set in type.  */\n   attr = dwarf2_attr (die, DW_AT_allocated, cu);\n-  if (attr != NULL && attr->form_is_block ())\n+  if (attr != NULL)\n     {\n       struct type *prop_type = cu->addr_sized_int_type (false);\n       if (attr_to_dynamic_prop (attr, die, cu, &prop, prop_type))\n         type->add_dyn_prop (DYN_PROP_ALLOCATED, prop);\n     }\n-  else if (attr != NULL)\n-    {\n-      complaint (_(\"DW_AT_allocated has the wrong form (%s) at DIE %s\"),\n-\t\t (attr != NULL ? dwarf_form_name (attr->form) : \"n/a\"),\n-\t\t sect_offset_str (die->sect_off));\n-    }\n \n   /* Read DW_AT_associated and set in type.  */\n   attr = dwarf2_attr (die, DW_AT_associated, cu);\n-  if (attr != NULL && attr->form_is_block ())\n+  if (attr != NULL)\n     {\n       struct type *prop_type = cu->addr_sized_int_type (false);\n       if (attr_to_dynamic_prop (attr, die, cu, &prop, prop_type))\n         type->add_dyn_prop (DYN_PROP_ASSOCIATED, prop);\n     }\n-  else if (attr != NULL)\n-    {\n-      complaint (_(\"DW_AT_associated has the wrong form (%s) at DIE %s\"),\n-\t\t (attr != NULL ? dwarf_form_name (attr->form) : \"n/a\"),\n-\t\t sect_offset_str (die->sect_off));\n-    }\n \n   /* Read DW_AT_data_location and set in type.  */\n   attr = dwarf2_attr (die, DW_AT_data_location, cu);"
    }
  ]
}