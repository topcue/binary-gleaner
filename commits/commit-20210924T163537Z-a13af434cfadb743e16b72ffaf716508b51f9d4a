{
  "sha": "a13af434cfadb743e16b72ffaf716508b51f9d4a",
  "node_id": "C_kwDOANOeidoAKGExM2FmNDM0Y2ZhZGI3NDNlMTZiNzJmZmFmNzE2NTA4YjUxZjlkNGE",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-06-21T21:50:18Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "pedro@palves.net",
      "date": "2021-09-24T16:35:37Z"
    },
    "message": "Fix 'FAIL: gdb.perf/disassemble.exp: python Disassemble().run()'\n\nWe currently have one FAIL while running \"make check-perf\":\n\n  PerfTest::assemble, run ...\n  python Disassemble().run()\n  Traceback (most recent call last):\n    File \"<string>\", line 1, in <module>\n    File \"/home/pedro/rocm/gdb/src/gdb/testsuite/gdb.perf/lib/perftest/perftest.py\", line 64, in run\n      self.warm_up()\n    File \"<string>\", line 25, in warm_up\n  gdb.error: No symbol \"ada_evaluate_subexp\" in current context.\n  Error while executing Python code.\n  (gdb) FAIL: gdb.perf/disassemble.exp: python Disassemble().run()\n  ...\n\nThe gdb.perf/disassemble.exp testcase debugs GDB with itself, runs to\nmain, and then disassembles a few GDB functions.  The problem is that\nmost(!) functions it is trying to disassemble are now gone...\n\nThis commit fixes the issue by simply picking some other functions to\ndisassemble.\n\nIt would perhaps be better to come up with some test program to\ndisassemble, one that would stay the same throughout the years,\ninstead of disassembling GDB itself.  I don't know why that wasn't\ndone to begin with.  I'll have to leave that for another rainy day,\nthough.\n\ngdb/testsuite/\nyyyy-mm-dd  Pedro Alves  <pedro@palves.net>\n\n\t* gdb.perf/disassemble.py (Disassemble::warm_up): Disassemble\n\tevaluate_subexp_do_call instead of ada_evaluate_subexp.\n\t(Disassemble::warm_up): Disassemble \"captured_main\",\n\t\"run_inferior_call\" and \"update_global_location_list\" instead of\n\t\"evaluate_subexp_standard\" and \"c_parse_internal\".\n\nChange-Id: I89d1cca89ce2e495dea5096e439685739cc0d3df",
    "tree": {
      "sha": "813e47155b9d9661fd6e2d7678aab6b1883326b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/813e47155b9d9661fd6e2d7678aab6b1883326b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a13af434cfadb743e16b72ffaf716508b51f9d4a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a13af434cfadb743e16b72ffaf716508b51f9d4a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a13af434cfadb743e16b72ffaf716508b51f9d4a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a13af434cfadb743e16b72ffaf716508b51f9d4a/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fbfdbdab95001d4a543598a3caa0e0f01e05b83f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbfdbdab95001d4a543598a3caa0e0f01e05b83f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fbfdbdab95001d4a543598a3caa0e0f01e05b83f"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 4,
    "deletions": 3
  },
  "files": [
    {
      "sha": "bbb2a16fda138bf2a3006128f83d781aa3eeb461",
      "filename": "gdb/testsuite/gdb.perf/disassemble.py",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a13af434cfadb743e16b72ffaf716508b51f9d4a/gdb/testsuite/gdb.perf/disassemble.py",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a13af434cfadb743e16b72ffaf716508b51f9d4a/gdb/testsuite/gdb.perf/disassemble.py",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.perf/disassemble.py?ref=a13af434cfadb743e16b72ffaf716508b51f9d4a",
      "patch": "@@ -21,14 +21,15 @@ def __init__(self):\n         super(Disassemble, self).__init__(\"disassemble\")\n \n     def warm_up(self):\n-        do_test_command = \"disassemble ada_evaluate_subexp\"\n+        do_test_command = \"disassemble evaluate_subexp_do_call\"\n         gdb.execute(do_test_command, False, True)\n \n     def _do_test(self, c):\n         for func in [\n-            \"evaluate_subexp_standard\",\n+            \"captured_main\",\n             \"handle_inferior_event\",\n-            \"c_parse_internal\",\n+            \"run_inferior_call\",\n+            \"update_global_location_list\",\n         ]:\n             do_test_command = \"disassemble %s\" % func\n             for _ in range(c + 1):"
    }
  ]
}