{
  "sha": "959d6a673ea5f5d3f057165318cee8cea07fd5fc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTU5ZDZhNjczZWE1ZjVkM2YwNTcxNjUzMThjZWU4Y2VhMDdmZDVmYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-07T14:02:46Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-01-07T14:06:26Z"
    },
    "message": "Fix regression in Ada do_full_match\n\nAn earlier patch to ada-lang.c:do_full_match introduced a subtle\nchange to the semantics.  The previous code did:\n\n    -  if (strncmp (sym_name, search_name, search_name_len) == 0\n    -      && is_name_suffix (sym_name + search_name_len))\n    -    return true;\n    -\n    -  if (startswith (sym_name, \"_ada_\")\n\nwhereas the new code unconditionally skips a leading \"_ada_\".\n\nThe difference occurs if the lookup name itself starts with \"_ada_\".\nIn this case, the symbol won't match.\n\nNormally this doesn't seem to be a problem.  However, it caused a\nregression on one particular (internal) test case on one particular\nplatform.\n\nThis patch changes the code to handle this case.  I don't know how to\nwrite a reliable test case for this, so no test is included.\n\n2021-01-07  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (do_full_match): Conditionally skip \"_ada_\" prefix.",
    "tree": {
      "sha": "2bd7911a42eb5b6cb530d76979894bed5be2f57b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2bd7911a42eb5b6cb530d76979894bed5be2f57b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/959d6a673ea5f5d3f057165318cee8cea07fd5fc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/959d6a673ea5f5d3f057165318cee8cea07fd5fc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/959d6a673ea5f5d3f057165318cee8cea07fd5fc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/959d6a673ea5f5d3f057165318cee8cea07fd5fc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dc20061339031e391f974ccccb71137b51730494",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc20061339031e391f974ccccb71137b51730494",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dc20061339031e391f974ccccb71137b51730494"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 12,
    "deletions": 2
  },
  "files": [
    {
      "sha": "f3357d5e659a3674ebafb691fb0bd6da76c7e402",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/959d6a673ea5f5d3f057165318cee8cea07fd5fc/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/959d6a673ea5f5d3f057165318cee8cea07fd5fc/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=959d6a673ea5f5d3f057165318cee8cea07fd5fc",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-07  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (do_full_match): Conditionally skip \"_ada_\" prefix.\n+\n 2021-01-07  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (add_component_interval): Start loop using vector's"
    },
    {
      "sha": "c898ccb683cfceb85dab0dc09e09b3fa53eddfe1",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/959d6a673ea5f5d3f057165318cee8cea07fd5fc/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/959d6a673ea5f5d3f057165318cee8cea07fd5fc/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=959d6a673ea5f5d3f057165318cee8cea07fd5fc",
      "patch": "@@ -13572,10 +13572,16 @@ do_full_match (const char *symbol_search_name,\n \t       const lookup_name_info &lookup_name,\n \t       completion_match_result *comp_match_res)\n {\n-  if (startswith (symbol_search_name, \"_ada_\"))\n+  const char *lname = lookup_name.ada ().lookup_name ().c_str ();\n+\n+  /* If both symbols start with \"_ada_\", just let the loop below\n+     handle the comparison.  However, if only the symbol name starts\n+     with \"_ada_\", skip the prefix and let the match proceed as\n+     usual.  */\n+  if (startswith (symbol_search_name, \"_ada_\")\n+      && !startswith (lname, \"_ada\"))\n     symbol_search_name += 5;\n \n-  const char *lname = lookup_name.ada ().lookup_name ().c_str ();\n   int uscore_count = 0;\n   while (*lname != '\\0')\n     {"
    }
  ]
}