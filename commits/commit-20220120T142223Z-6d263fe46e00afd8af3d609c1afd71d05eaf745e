{
  "sha": "6d263fe46e00afd8af3d609c1afd71d05eaf745e",
  "node_id": "C_kwDOANOeidoAKDZkMjYzZmU0NmUwMGFmZDhhZjNkNjA5YzFhZmQ3MWQwNWVhZjc0NWU",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-13T16:48:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-20T14:22:23Z"
    },
    "message": "Avoid bad breakpoints with --gc-sections\n\nWe found a case where --gc-sections can cause gdb to set an invalid\nbreakpoint.  In the included test case, gdb will set a breakpoint with\ntwo locations, one of which is 0x0.\n\nThe code in lnp_state_machine::check_line_address is intended to\nfilter out this sort of problem, but in this case, the entire CU is\nempty, causing unrelocated_lowpc==0x0 -- which circumvents the check.\n\nIt seems to me that if a CU is empty like this, then it is ok to\nsimply ignore the line table, as there won't be any locations anyway.",
    "tree": {
      "sha": "d671b8e628da5ec3db2c8641dcf18ae6c3843961",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d671b8e628da5ec3db2c8641dcf18ae6c3843961"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d263fe46e00afd8af3d609c1afd71d05eaf745e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d263fe46e00afd8af3d609c1afd71d05eaf745e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d263fe46e00afd8af3d609c1afd71d05eaf745e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d263fe46e00afd8af3d609c1afd71d05eaf745e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dd8a5a84a746df2c9db53f5ac331d2c9b34422b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dd8a5a84a746df2c9db53f5ac331d2c9b34422b2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dd8a5a84a746df2c9db53f5ac331d2c9b34422b2"
    }
  ],
  "stats": {
    "total": 111,
    "additions": 109,
    "deletions": 2
  },
  "files": [
    {
      "sha": "f7cb95b40cba39e1d3632ec2a1e4ed05c3359aa9",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=6d263fe46e00afd8af3d609c1afd71d05eaf745e",
      "patch": "@@ -10630,8 +10630,13 @@ read_file_scope (struct die_info *die, struct dwarf2_cu *cu)\n \n   /* Decode line number information if present.  We do this before\n      processing child DIEs, so that the line header table is available\n-     for DW_AT_decl_file.  */\n-  handle_DW_AT_stmt_list (die, cu, fnd, lowpc);\n+     for DW_AT_decl_file.  The PC check is here because, if LOWPC and\n+     HIGHPC are both 0x0, then there won't be any interesting code in\n+     the CU, but a check later on (in\n+     lnp_state_machine::check_line_address) will fail to properly\n+     exclude an entry that was removed via --gc-sections.  */\n+  if (lowpc != highpc)\n+    handle_DW_AT_stmt_list (die, cu, fnd, lowpc);\n \n   /* Process all dies in compilation unit.  */\n   if (die->child != NULL)"
    },
    {
      "sha": "1f6ef667a87f55c4aa77f25a2fb6d7c1e0b4d17b",
      "filename": "gdb/testsuite/gdb.ada/inline-section-gc.exp",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/inline-section-gc.exp?ref=6d263fe46e00afd8af3d609c1afd71d05eaf745e",
      "patch": "@@ -0,0 +1,41 @@\n+# Copyright 2022 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile caller\n+\n+set options {\n+    debug\n+    optimize=-O2\n+    additional_flags=-ffunction-sections\n+    additional_flags=-largs\n+    additional_flags=-Wl,--gc-sections\n+    additional_flags=-margs\n+    additional_flags=-gnatn\n+}\n+if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable $options] != \"\"} {\n+    return -1\n+}\n+\n+clean_restart ${testfile}\n+\n+set bp_location [gdb_get_line_number \"BREAK\" ${testdir}/callee.adb]\n+# The bug here was that gdb would set a breakpoint with two locations,\n+# one of them at 0x0.\n+gdb_test \"break callee.adb:$bp_location\" \\\n+    \"Breakpoint $decimal at $hex: file .*callee.adb, line $bp_location.\""
    },
    {
      "sha": "9ece3cdc20a3eff6e07404a4400c3e5b487b8cfa",
      "filename": "gdb/testsuite/gdb.ada/inline-section-gc/callee.adb",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/callee.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/callee.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/inline-section-gc/callee.adb?ref=6d263fe46e00afd8af3d609c1afd71d05eaf745e",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2022 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+\n+procedure Callee is\n+   Data : Integer;\n+   for Data'Address use System'To_Address (16#4000_0000#);\n+begin\n+   Data := 0; --  BREAK\n+end Callee;"
    },
    {
      "sha": "e13168d5fb5b0225dfdd749b6935f00f1c52e652",
      "filename": "gdb/testsuite/gdb.ada/inline-section-gc/callee.ads",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/callee.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/callee.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/inline-section-gc/callee.ads?ref=6d263fe46e00afd8af3d609c1afd71d05eaf745e",
      "patch": "@@ -0,0 +1,17 @@\n+--  Copyright 2022 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+procedure Callee;\n+pragma Inline (Callee);"
    },
    {
      "sha": "170227258c4f9b14960723bf54334885af04aaac",
      "filename": "gdb/testsuite/gdb.ada/inline-section-gc/caller.adb",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/caller.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d263fe46e00afd8af3d609c1afd71d05eaf745e/gdb/testsuite/gdb.ada/inline-section-gc/caller.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/inline-section-gc/caller.adb?ref=6d263fe46e00afd8af3d609c1afd71d05eaf745e",
      "patch": "@@ -0,0 +1,21 @@\n+--  Copyright 2022 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Callee;\n+\n+procedure Caller is\n+begin\n+   Callee;\n+end Caller;"
    }
  ]
}