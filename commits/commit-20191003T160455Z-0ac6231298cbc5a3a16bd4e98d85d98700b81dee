{
  "sha": "0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGFjNjIzMTI5OGNiYzVhM2ExNmJkNGU5OGQ4NWQ5ODcwMGI4MWRlZQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-07-13T19:00:07Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2019-10-03T16:04:55Z"
    },
    "message": "libctf: Add iteration over non-root types\n\nThe existing function ctf_type_iter lets you iterate over root-visible\ntypes (types you can look up by name).  There is no way to iterate over\nnon-root-visible types, which is troublesome because both the linker\nand dumper want to do that.\n\nSo add a new function that can do it: the callback it takes accepts\nan extra parameter which indicates whether the type is root-visible\nor not.\n\ninclude/\n\t* ctf-api.h (ctf_type_all_f): New.\n\t(ctf_type_iter_all): New.\n\nlibctf/\n\t* ctf_types.c (ctf_type_iter_all): New.",
    "tree": {
      "sha": "89040caa55c0d64d462235ef2ba45cc50b84b74d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/89040caa55c0d64d462235ef2ba45cc50b84b74d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6b88d7d70c50fc320cd693fb3ddba6e28da839aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6b88d7d70c50fc320cd693fb3ddba6e28da839aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6b88d7d70c50fc320cd693fb3ddba6e28da839aa"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 32,
    "deletions": 0
  },
  "files": [
    {
      "sha": "1fe3df4562136fab74e178b1641f55836b0a8813",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
      "patch": "@@ -1,3 +1,8 @@\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.h (ctf_type_all_f): New.\n+\t(ctf_type_iter_all): New.\n+\n 2019-07-11  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf.h: Add object index and function index sections.  Describe"
    },
    {
      "sha": "fa747888e04f60aee80934504c5a39b936e7ec81",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
      "patch": "@@ -211,6 +211,7 @@ typedef int ctf_member_f (const char *name, ctf_id_t membtype,\n typedef int ctf_enum_f (const char *name, int val, void *arg);\n typedef int ctf_variable_f (const char *name, ctf_id_t type, void *arg);\n typedef int ctf_type_f (ctf_id_t type, void *arg);\n+typedef int ctf_type_all_f (ctf_id_t type, int flag, void *arg);\n typedef int ctf_label_f (const char *name, const ctf_lblinfo_t *info,\n \t\t\t void *arg);\n typedef int ctf_archive_member_f (ctf_file_t *fp, const char *name, void *arg);\n@@ -317,6 +318,7 @@ extern int ctf_label_info (ctf_file_t *, const char *, ctf_lblinfo_t *);\n extern int ctf_member_iter (ctf_file_t *, ctf_id_t, ctf_member_f *, void *);\n extern int ctf_enum_iter (ctf_file_t *, ctf_id_t, ctf_enum_f *, void *);\n extern int ctf_type_iter (ctf_file_t *, ctf_type_f *, void *);\n+extern int ctf_type_iter_all (ctf_file_t *, ctf_type_all_f *, void *);\n extern int ctf_label_iter (ctf_file_t *, ctf_label_f *, void *);\n extern int ctf_variable_iter (ctf_file_t *, ctf_variable_f *, void *);\n extern int ctf_archive_iter (const ctf_archive_t *, ctf_archive_member_f *,"
    },
    {
      "sha": "df52650b16dce893d2d8b3b3af5015c93fa67728",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
      "patch": "@@ -1,3 +1,7 @@\n+2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf_types.c (ctf_type_iter_all): New.\n+\n 2019-07-13  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-open.c (init_symtab): Check for overflow against the right"
    },
    {
      "sha": "95c9c9aca189eeccf5c53ba47102e21fbfe68ca9",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0ac6231298cbc5a3a16bd4e98d85d98700b81dee/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=0ac6231298cbc5a3a16bd4e98d85d98700b81dee",
      "patch": "@@ -144,6 +144,27 @@ ctf_type_iter (ctf_file_t *fp, ctf_type_f *func, void *arg)\n   return 0;\n }\n \n+/* Iterate over every type in the given CTF container, user-visible or not.\n+   We pass the type ID of each type to the specified callback function.  */\n+\n+int\n+ctf_type_iter_all (ctf_file_t *fp, ctf_type_all_f *func, void *arg)\n+{\n+  ctf_id_t id, max = fp->ctf_typemax;\n+  int rc, child = (fp->ctf_flags & LCTF_CHILD);\n+\n+  for (id = 1; id <= max; id++)\n+    {\n+      const ctf_type_t *tp = LCTF_INDEX_TO_TYPEPTR (fp, id);\n+      if ((rc = func (LCTF_INDEX_TO_TYPE (fp, id, child),\n+\t\t      LCTF_INFO_ISROOT(fp, tp->ctt_info)\n+\t\t      ? CTF_ADD_ROOT : CTF_ADD_NONROOT, arg) != 0))\n+\treturn rc;\n+    }\n+\n+  return 0;\n+}\n+\n /* Iterate over every variable in the given CTF container, in arbitrary order.\n    We pass the name of each variable to the specified callback function.  */\n "
    }
  ]
}