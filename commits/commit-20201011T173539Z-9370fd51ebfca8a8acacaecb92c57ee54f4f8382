{
  "sha": "9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTM3MGZkNTFlYmZjYThhOGFjYWNhZWNiOTJjNTdlZTU0ZjRmODM4Mg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-08T11:28:19Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-10-11T17:35:39Z"
    },
    "message": "gdb: detect main function even when there's no matching msymbol\n\nCurrently, GDB will only stop the backtrace at the main function if\nthere is a minimal symbol with the matching name.  In Fortran programs\ncompiled with gfortran this is not the case.  The main function is\npresent in the DWARF, and as marked as DW_AT_main_subprogram, but\nthere's no minimal symbol.\n\nThis commit extends `inside_main_func` to check the full symbols if no\nmatching minimal symbol is found.\n\nThere's an updated test case that covers this change.\n\ngdb/ChangeLog:\n\n\t* frame.c (inside_main_func): Check full symbols as well as\n\tminimal symbols.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/mixed-lang-stack.exp (run_tests): Update expected\n\toutput of backtrace.",
    "tree": {
      "sha": "d36933bddea27597c50b9fa5680dfc7136f369a6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d36933bddea27597c50b9fa5680dfc7136f369a6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f7c1edaa78ed5ef18ba1e290effd76ecc49884d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f7c1edaa78ed5ef18ba1e290effd76ecc49884d2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f7c1edaa78ed5ef18ba1e290effd76ecc49884d2"
    }
  ],
  "stats": {
    "total": 43,
    "additions": 33,
    "deletions": 10
  },
  "files": [
    {
      "sha": "26623c6067c8ce14d23b4a653fba67c4a537c1c1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* frame.c (inside_main_func): Check full symbols as well as\n+\tminimal symbols.\n+\n 2020-10-09  Joel Brobecker  <brobecker@adacore.com>\n \n \t* ada-lang.c (advance_wild_match): Rewrite the function's"
    },
    {
      "sha": "b4af734c2eeac11d172828db48d6a1033deaebe4",
      "filename": "gdb/frame.c",
      "status": "modified",
      "additions": 22,
      "deletions": 8,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/frame.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/frame.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/frame.c?ref=9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
      "patch": "@@ -2295,19 +2295,33 @@ inside_main_func (frame_info *this_frame)\n   if (symfile_objfile == nullptr)\n     return false;\n \n+  CORE_ADDR sym_addr;\n+  const char *name = main_name ();\n   bound_minimal_symbol msymbol\n-    = lookup_minimal_symbol (main_name (), NULL, symfile_objfile);\n+    = lookup_minimal_symbol (name, NULL, symfile_objfile);\n   if (msymbol.minsym == nullptr)\n-    return false;\n+    {\n+      /* In some language (for example Fortran) there will be no minimal\n+\t symbol with the name of the main function.  In this case we should\n+\t search the full symbols to see if we can find a match.  */\n+      struct block_symbol bs = lookup_symbol (name, NULL, VAR_DOMAIN, 0);\n+      if (bs.symbol == nullptr)\n+\treturn false;\n+\n+      const struct block *block = SYMBOL_BLOCK_VALUE (bs.symbol);\n+      gdb_assert (block != nullptr);\n+      sym_addr = BLOCK_START (block);\n+    }\n+  else\n+    sym_addr = BMSYMBOL_VALUE_ADDRESS (msymbol);\n \n-  /* Make certain that the code, and not descriptor, address is\n-     returned.  */\n-  CORE_ADDR maddr\n+  /* Convert any function descriptor addresses into the actual function\n+     code address.  */\n+  sym_addr\n     = gdbarch_convert_from_func_ptr_addr (get_frame_arch (this_frame),\n-\t\t\t\t\t  BMSYMBOL_VALUE_ADDRESS (msymbol),\n-\t\t\t\t\t  current_top_target ());\n+\t\t\t\t\t  sym_addr, current_top_target ());\n \n-  return maddr == get_frame_func (this_frame);\n+  return sym_addr == get_frame_func (this_frame);\n }\n \n /* Test whether THIS_FRAME is inside the process entry point function.  */"
    },
    {
      "sha": "2e8efd9374683eb45a0bda328aae8b68fca47490",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
      "patch": "@@ -1,3 +1,8 @@\n+2020-10-11  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/mixed-lang-stack.exp (run_tests): Update expected\n+\toutput of backtrace.\n+\n 2020-10-09  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/scalar_storage/storage.adb (Another_Range): New type."
    },
    {
      "sha": "8d1f2bc0123b190039123cc51501eaf1c0cebb16",
      "filename": "gdb/testsuite/gdb.fortran/mixed-lang-stack.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/testsuite/gdb.fortran/mixed-lang-stack.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9370fd51ebfca8a8acacaecb92c57ee54f4f8382/gdb/testsuite/gdb.fortran/mixed-lang-stack.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/mixed-lang-stack.exp?ref=9370fd51ebfca8a8acacaecb92c57ee54f4f8382",
      "patch": "@@ -73,8 +73,7 @@ proc run_tests { lang } {\n \t\t \"#6\\\\s+$hex in mixed_func_1c \\\\(\\[^\\r\\n\\]+\\\\) at \\[^\\r\\n\\]+\" \\\n \t\t \"#7\\\\s+$hex in mixed_func_1b \\\\($1b_args\\\\) at \\[^\\r\\n\\]+\" \\\n \t\t \"#8\\\\s+$hex in mixed_func_1a \\\\(\\\\) at \\[^\\r\\n\\]+\" \\\n-\t\t \"#9\\\\s+$hex in mixed_stack_main \\\\(\\\\) at \\[^\\r\\n\\]+\" \\\n-\t\t \"#10\\\\s+$hex in main \\\\(\\[^\\r\\n\\]+\\\\) at .*\" ]\n+\t\t \"#9\\\\s+$hex in mixed_stack_main \\\\(\\\\) at \\[^\\r\\n\\]+\" ]\n \tgdb_test \"bt -frame-arguments all\" $bt_stack\n \n \t# Check the language for frame #0."
    }
  ]
}