{
  "sha": "5b6ea500d554b173e63e1f8f0344d568ad347463",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWI2ZWE1MDBkNTU0YjE3M2U2M2UxZjhmMDM0NGQ1NjhhZDM0NzQ2Mw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-05T09:57:21Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-02-15T20:53:42Z"
    },
    "message": "Exception safety in ravenscar-thread.c\n\nThis changes some code in ravenscar-thread.c to use scoped_restore.  I\nam not sure if it matters in practice, but this makes these methods\nexception-safe in case the methods lower in the target stack can\nthrow.\n\ngdb/ChangeLog\n2019-02-15  Tom Tromey  <tromey@adacore.com>\n\n\t* ravenscar-thread.c (ravenscar_thread_target::stopped_by_sw_breakpoint)\n\t(ravenscar_thread_target::stopped_by_hw_breakpoint)\n\t(ravenscar_thread_target::stopped_by_watchpoint)\n\t(ravenscar_thread_target::stopped_data_address)\n\t(ravenscar_thread_target::core_of_thread): Use scoped_restore.",
    "tree": {
      "sha": "a45c5aa5d4d73cef9093a37468ab37957c5f5615",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a45c5aa5d4d73cef9093a37468ab37957c5f5615"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5b6ea500d554b173e63e1f8f0344d568ad347463",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b6ea500d554b173e63e1f8f0344d568ad347463",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5b6ea500d554b173e63e1f8f0344d568ad347463",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5b6ea500d554b173e63e1f8f0344d568ad347463/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e397fd39c62c70900306fa206ebcae1a4853db8b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e397fd39c62c70900306fa206ebcae1a4853db8b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e397fd39c62c70900306fa206ebcae1a4853db8b"
    }
  ],
  "stats": {
    "total": 58,
    "additions": 23,
    "deletions": 35
  },
  "files": [
    {
      "sha": "ce4eab41656a870ed715f43ccc1d7cdd404189ed",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b6ea500d554b173e63e1f8f0344d568ad347463/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b6ea500d554b173e63e1f8f0344d568ad347463/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5b6ea500d554b173e63e1f8f0344d568ad347463",
      "patch": "@@ -1,3 +1,11 @@\n+2019-02-15  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ravenscar-thread.c (ravenscar_thread_target::stopped_by_sw_breakpoint)\n+\t(ravenscar_thread_target::stopped_by_hw_breakpoint)\n+\t(ravenscar_thread_target::stopped_by_watchpoint)\n+\t(ravenscar_thread_target::stopped_data_address)\n+\t(ravenscar_thread_target::core_of_thread): Use scoped_restore.\n+\n 2019-02-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ravenscar-thread.c: Fix some typos."
    },
    {
      "sha": "9d708fd8581bdcf9884014949f46a447c999b0dc",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 15,
      "deletions": 35,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5b6ea500d554b173e63e1f8f0344d568ad347463/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5b6ea500d554b173e63e1f8f0344d568ad347463/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=5b6ea500d554b173e63e1f8f0344d568ad347463",
      "patch": "@@ -464,55 +464,39 @@ ravenscar_thread_target::prepare_to_store (struct regcache *regcache)\n bool\n ravenscar_thread_target::stopped_by_sw_breakpoint ()\n {\n-  ptid_t saved_ptid = inferior_ptid;\n-  bool result;\n-\n-  inferior_ptid = get_base_thread_from_ravenscar_task (saved_ptid);\n-  result = beneath ()->stopped_by_sw_breakpoint ();\n-  inferior_ptid = saved_ptid;\n-  return result;\n+  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n+  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  return beneath ()->stopped_by_sw_breakpoint ();\n }\n \n /* Implement the to_stopped_by_hw_breakpoint target_ops \"method\".  */\n \n bool\n ravenscar_thread_target::stopped_by_hw_breakpoint ()\n {\n-  ptid_t saved_ptid = inferior_ptid;\n-  bool result;\n-\n-  inferior_ptid = get_base_thread_from_ravenscar_task (saved_ptid);\n-  result = beneath ()->stopped_by_hw_breakpoint ();\n-  inferior_ptid = saved_ptid;\n-  return result;\n+  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n+  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  return beneath ()->stopped_by_hw_breakpoint ();\n }\n \n /* Implement the to_stopped_by_watchpoint target_ops \"method\".  */\n \n bool\n ravenscar_thread_target::stopped_by_watchpoint ()\n {\n-  ptid_t saved_ptid = inferior_ptid;\n-  bool result;\n-\n-  inferior_ptid = get_base_thread_from_ravenscar_task (saved_ptid);\n-  result = beneath ()->stopped_by_watchpoint ();\n-  inferior_ptid = saved_ptid;\n-  return result;\n+  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n+  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  return beneath ()->stopped_by_watchpoint ();\n }\n \n /* Implement the to_stopped_data_address target_ops \"method\".  */\n \n bool\n ravenscar_thread_target::stopped_data_address (CORE_ADDR *addr_p)\n {\n-  ptid_t saved_ptid = inferior_ptid;\n-  bool result;\n-\n-  inferior_ptid = get_base_thread_from_ravenscar_task (saved_ptid);\n-  result = beneath ()->stopped_data_address (addr_p);\n-  inferior_ptid = saved_ptid;\n-  return result;\n+  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n+  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  return beneath ()->stopped_data_address (addr_p);\n }\n \n void\n@@ -528,13 +512,9 @@ ravenscar_thread_target::mourn_inferior ()\n int\n ravenscar_thread_target::core_of_thread (ptid_t ptid)\n {\n-  ptid_t saved_ptid = inferior_ptid;\n-  int result;\n-\n-  inferior_ptid = get_base_thread_from_ravenscar_task (saved_ptid);\n-  result = beneath ()->core_of_thread (inferior_ptid);\n-  inferior_ptid = saved_ptid;\n-  return result;\n+  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n+  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  return beneath ()->core_of_thread (inferior_ptid);\n }\n \n /* Observer on inferior_created: push ravenscar thread stratum if needed.  */"
    }
  ]
}