{
  "sha": "7523da63ca33a37b54c2cde18b7752d0f0f11c26",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzUyM2RhNjNjYTMzYTM3YjU0YzJjZGUxOGI3NzUyZDBmMGYxMWMyNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-01T23:29:49Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-10-09T22:50:35Z"
    },
    "message": "Make TUI window handle a unique_ptr\n\nThis changes tui_gen_win_info::handle to be a specialization of\nunique_ptr.  This is perhaps mildly uglier in some spots, due to the\nproliferation of \"get\"; but on the other hand it cleans up some manual\nmanagement and it allows for the removal of tui_delete_win.\n\ngdb/ChangeLog\n2019-10-09  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-wingeneral.h (tui_delete_win): Don't declare.\n\t* tui/tui-stack.c (tui_locator_window::rerender): Update.\n\t* tui/tui-command.c (tui_cmd_window::resize)\n\t(tui_refresh_cmd_win): Update.\n\t* tui/tui-win.c (tui_resize_all, tui_set_focus_command): Update.\n\t* tui/tui.c (tui_rl_other_window, tui_enable): Update.\n\t* tui/tui-data.c (~tui_gen_win_info): Remove.\n\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n\t* tui/tui-io.c (update_cmdwin_start_line, tui_putc, tui_puts)\n\t(tui_redisplay_readline, tui_mld_flush)\n\t(tui_mld_erase_entire_line, tui_mld_getc, tui_getc): Update.\n\t* tui/tui-regs.c (tui_data_window::delete_data_content_windows)\n\t(tui_data_window::erase_data_content)\n\t(tui_data_item_window::rerender)\n\t(tui_data_item_window::refresh_window): Update.\n\t* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window)\n\t(box_win, tui_gen_win_info::make_window)\n\t(tui_gen_win_info::make_visible): Update.\n\t(tui_delete_win): Remove.\n\t* tui/tui-winsource.c\n\t(tui_source_window_base::do_erase_source_content): Update.\n\t(tui_show_source_line, tui_source_window_base::update_tab_width)\n\t(tui_source_window_base::update_exec_info): Update.\n\t* tui/tui-data.h (struct curses_deleter): New.\n\t(struct tui_gen_win_info) <handle>: Now a unique_ptr.\n\t(struct tui_gen_win_info) <~tui_gen_win_info>: Define.",
    "tree": {
      "sha": "9c89a33c5d2848fa4613e5b558136a6cd000fb24",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9c89a33c5d2848fa4613e5b558136a6cd000fb24"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7523da63ca33a37b54c2cde18b7752d0f0f11c26",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7523da63ca33a37b54c2cde18b7752d0f0f11c26",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7523da63ca33a37b54c2cde18b7752d0f0f11c26",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7523da63ca33a37b54c2cde18b7752d0f0f11c26/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a7798e7f7dd1c4226376d455af957e369aa2a192",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a7798e7f7dd1c4226376d455af957e369aa2a192",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a7798e7f7dd1c4226376d455af957e369aa2a192"
    }
  ],
  "stats": {
    "total": 189,
    "additions": 102,
    "deletions": 87
  },
  "files": [
    {
      "sha": "bca7b7b4ffc3249fee4259e3692c184d811d2a62",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -1,3 +1,32 @@\n+2019-10-09  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-wingeneral.h (tui_delete_win): Don't declare.\n+\t* tui/tui-stack.c (tui_locator_window::rerender): Update.\n+\t* tui/tui-command.c (tui_cmd_window::resize)\n+\t(tui_refresh_cmd_win): Update.\n+\t* tui/tui-win.c (tui_resize_all, tui_set_focus_command): Update.\n+\t* tui/tui.c (tui_rl_other_window, tui_enable): Update.\n+\t* tui/tui-data.c (~tui_gen_win_info): Remove.\n+\t* tui/tui-layout.c (tui_gen_win_info::resize): Update.\n+\t* tui/tui-io.c (update_cmdwin_start_line, tui_putc, tui_puts)\n+\t(tui_redisplay_readline, tui_mld_flush)\n+\t(tui_mld_erase_entire_line, tui_mld_getc, tui_getc): Update.\n+\t* tui/tui-regs.c (tui_data_window::delete_data_content_windows)\n+\t(tui_data_window::erase_data_content)\n+\t(tui_data_item_window::rerender)\n+\t(tui_data_item_window::refresh_window): Update.\n+\t* tui/tui-wingeneral.c (tui_gen_win_info::refresh_window)\n+\t(box_win, tui_gen_win_info::make_window)\n+\t(tui_gen_win_info::make_visible): Update.\n+\t(tui_delete_win): Remove.\n+\t* tui/tui-winsource.c\n+\t(tui_source_window_base::do_erase_source_content): Update.\n+\t(tui_show_source_line, tui_source_window_base::update_tab_width)\n+\t(tui_source_window_base::update_exec_info): Update.\n+\t* tui/tui-data.h (struct curses_deleter): New.\n+\t(struct tui_gen_win_info) <handle>: Now a unique_ptr.\n+\t(struct tui_gen_win_info) <~tui_gen_win_info>: Define.\n+\n 2019-10-09  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.h (struct tui_gen_win_info): Don't declare."
    },
    {
      "sha": "9a43297133904327e51ab8217f9e9c1afe1845dd",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -64,10 +64,10 @@ tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n \t it.  However we can at least move it and keep the old size if\n \t wresize isn't available.  */\n #ifdef HAVE_WRESIZE\n-      wresize (handle, height, width);\n+      wresize (handle.get (), height, width);\n #endif\n-      mvwin (handle, origin.y, origin.x);\n-      wmove (handle, 0, 0);\n+      mvwin (handle.get (), origin.y, origin.x);\n+      wmove (handle.get (), 0, 0);\n     }\n }\n \n@@ -76,7 +76,7 @@ tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n void\n tui_refresh_cmd_win (void)\n {\n-  WINDOW *w = TUI_CMD_WIN->handle;\n+  WINDOW *w = TUI_CMD_WIN->handle.get ();\n \n   wrefresh (w);\n "
    },
    {
      "sha": "522bb9acebd173f4d35769e77f9f95440b07350b",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -205,11 +205,6 @@ tui_win_info::tui_win_info (enum tui_win_type type)\n {\n }\n \n-tui_gen_win_info::~tui_gen_win_info ()\n-{\n-  tui_delete_win (handle);\n-}\n-\n void\n tui_win_info::rerender ()\n {"
    },
    {
      "sha": "4710c760211cca82bc90eb1e07ad6857f9147dd7",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -36,6 +36,15 @@ struct tui_point\n   int x, y;\n };\n \n+/* A deleter that calls delwin.  */\n+struct curses_deleter\n+{\n+  void operator() (WINDOW *win) const\n+  {\n+    delwin (win);\n+  }\n+};\n+\n /* Generic window information.  */\n struct tui_gen_win_info\n {\n@@ -57,7 +66,9 @@ struct tui_gen_win_info\n public:\n   tui_gen_win_info (tui_gen_win_info &&) = default;\n \n-  virtual ~tui_gen_win_info ();\n+  virtual ~tui_gen_win_info ()\n+  {\n+  }\n \n   /* Call to refresh this window.  */\n   virtual void refresh_window ();\n@@ -83,7 +94,7 @@ struct tui_gen_win_info\n   }\n \n   /* Window handle.  */\n-  WINDOW *handle = nullptr;\n+  std::unique_ptr<WINDOW, curses_deleter> handle;\n   /* Type of window.  */\n   enum tui_win_type type;\n   /* Window width.  */"
    },
    {
      "sha": "6bb495beaa9370e7cc885e6577abd44f9a9ceeb7",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 10,
      "deletions": 13,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -179,8 +179,7 @@ do_tui_putc (WINDOW *w, char c)\n static void\n update_cmdwin_start_line ()\n {\n-  TUI_CMD_WIN->start_line\n-    = getcury (TUI_CMD_WIN->handle);\n+  TUI_CMD_WIN->start_line = getcury (TUI_CMD_WIN->handle.get ());\n }\n \n /* Print a character in the curses command window.  The output is\n@@ -190,9 +189,7 @@ update_cmdwin_start_line ()\n static void\n tui_putc (char c)\n {\n-  WINDOW *w = TUI_CMD_WIN->handle;\n-\n-  do_tui_putc (w, c);\n+  do_tui_putc (TUI_CMD_WIN->handle.get (), c);\n   update_cmdwin_start_line ();\n }\n \n@@ -495,7 +492,7 @@ tui_puts_internal (WINDOW *w, const char *string, int *height)\n \t    }\n \t}\n     }\n-  if (TUI_CMD_WIN != nullptr && w == TUI_CMD_WIN->handle)\n+  if (TUI_CMD_WIN != nullptr && w == TUI_CMD_WIN->handle.get ())\n     update_cmdwin_start_line ();\n   if (saw_nl)\n     wrefresh (w);\n@@ -509,7 +506,7 @@ void\n tui_puts (const char *string, WINDOW *w)\n {\n   if (w == nullptr)\n-    w = TUI_CMD_WIN->handle;\n+    w = TUI_CMD_WIN->handle.get ();\n   tui_puts_internal (w, string, nullptr);\n }\n \n@@ -545,13 +542,13 @@ tui_redisplay_readline (void)\n   \n   c_pos = -1;\n   c_line = -1;\n-  w = TUI_CMD_WIN->handle;\n+  w = TUI_CMD_WIN->handle.get ();\n   start_line = TUI_CMD_WIN->start_line;\n   wmove (w, start_line, 0);\n   prev_col = 0;\n   height = 1;\n   if (prompt != nullptr)\n-    tui_puts_internal (TUI_CMD_WIN->handle, prompt, &height);\n+    tui_puts_internal (w, prompt, &height);\n \n   prev_col = getcurx (w);\n   for (in = 0; in <= rl_end; in++)\n@@ -670,15 +667,15 @@ tui_mld_puts (const struct match_list_displayer *displayer, const char *s)\n static void\n tui_mld_flush (const struct match_list_displayer *displayer)\n {\n-  wrefresh (TUI_CMD_WIN->handle);\n+  wrefresh (TUI_CMD_WIN->handle.get ());\n }\n \n /* TUI version of displayer.erase_entire_line.  */\n \n static void\n tui_mld_erase_entire_line (const struct match_list_displayer *displayer)\n {\n-  WINDOW *w = TUI_CMD_WIN->handle;\n+  WINDOW *w = TUI_CMD_WIN->handle.get ();\n   int cur_y = getcury (w);\n \n   wmove (w, cur_y, 0);\n@@ -716,7 +713,7 @@ gdb_wgetch (WINDOW *win)\n static int\n tui_mld_getc (FILE *fp)\n {\n-  WINDOW *w = TUI_CMD_WIN->handle;\n+  WINDOW *w = TUI_CMD_WIN->handle.get ();\n   int c = gdb_wgetch (w);\n \n   return c;\n@@ -970,7 +967,7 @@ tui_getc (FILE *fp)\n   int ch;\n   WINDOW *w;\n \n-  w = TUI_CMD_WIN->handle;\n+  w = TUI_CMD_WIN->handle.get ();\n \n #ifdef TUI_USE_PIPE_FOR_READLINE\n   /* Flush readline output.  */"
    },
    {
      "sha": "3a510f436d2b90590c5514e18ed0616f7613418e",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -511,12 +511,11 @@ tui_gen_win_info::resize (int height_, int width_,\n   if (handle != nullptr)\n     {\n #ifdef HAVE_WRESIZE\n-      wresize (handle, height, width);\n-      mvwin (handle, origin.y, origin.x);\n-      wmove (handle, 0, 0);\n+      wresize (handle.get (), height, width);\n+      mvwin (handle.get (), origin.y, origin.x);\n+      wmove (handle.get (), 0, 0);\n #else\n-      tui_delete_win (handle);\n-      handle = NULL;\n+      handle.reset (nullptr);\n #endif\n     }\n "
    },
    {
      "sha": "474b62e20476bd19317929ac56e051f7b2d75304",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 13,
      "deletions": 16,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -361,17 +361,14 @@ void\n tui_data_window::delete_data_content_windows ()\n {\n   for (auto &&win : m_regs_content)\n-    {\n-      tui_delete_win (win.handle);\n-      win.handle = NULL;\n-    }\n+    win.handle.reset (nullptr);\n }\n \n \n void\n tui_data_window::erase_data_content (const char *prompt)\n {\n-  werase (handle);\n+  werase (handle.get ());\n   check_and_display_highlight_if_needed ();\n   if (prompt != NULL)\n     {\n@@ -382,9 +379,9 @@ tui_data_window::erase_data_content (const char *prompt)\n \tx_pos = 1;\n       else\n \tx_pos = half_width - strlen (prompt);\n-      mvwaddstr (handle, (height / 2), x_pos, (char *) prompt);\n+      mvwaddstr (handle.get (), (height / 2), x_pos, (char *) prompt);\n     }\n-  wrefresh (handle);\n+  wrefresh (handle.get ());\n }\n \n /* See tui-regs.h.  */\n@@ -470,29 +467,29 @@ tui_data_item_window::rerender ()\n {\n   int i;\n \n-  scrollok (handle, FALSE);\n+  scrollok (handle.get (), FALSE);\n   if (highlight)\n     /* We ignore the return value, casting it to void in order to avoid\n        a compiler warning.  The warning itself was introduced by a patch\n        to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n        to code that causes the compiler to generate an unused-value\n        warning.  */\n-    (void) wstandout (handle);\n+    (void) wstandout (handle.get ());\n       \n-  wmove (handle, 0, 0);\n+  wmove (handle.get (), 0, 0);\n   for (i = 1; i < width; i++)\n-    waddch (handle, ' ');\n-  wmove (handle, 0, 0);\n+    waddch (handle.get (), ' ');\n+  wmove (handle.get (), 0, 0);\n   if (content)\n-    waddstr (handle, content.get ());\n+    waddstr (handle.get (), content.get ());\n \n   if (highlight)\n     /* We ignore the return value, casting it to void in order to avoid\n        a compiler warning.  The warning itself was introduced by a patch\n        to ncurses 5.7 dated 2009-08-29, changing this macro to expand\n        to code that causes the compiler to generate an unused-value\n        warning.  */\n-    (void) wstandend (handle);\n+    (void) wstandend (handle.get ());\n   refresh_window ();\n }\n \n@@ -504,8 +501,8 @@ tui_data_item_window::refresh_window ()\n       /* This seems to be needed because the data items are nested\n \t windows, which according to the ncurses man pages aren't well\n \t supported.  */\n-      touchwin (handle);\n-      wrefresh (handle);\n+      touchwin (handle.get ());\n+      wrefresh (handle.get ());\n     }\n }\n "
    },
    {
      "sha": "078f81992aba7ab46b7afe5247dd706f6e17c450",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -229,19 +229,19 @@ tui_locator_window::rerender ()\n   if (handle != NULL)\n     {\n       std::string string = make_status_line ();\n-      scrollok (handle, FALSE);\n-      wmove (handle, 0, 0);\n+      scrollok (handle.get (), FALSE);\n+      wmove (handle.get (), 0, 0);\n       /* We ignore the return value from wstandout and wstandend, casting\n \t them to void in order to avoid a compiler warning.  The warning\n \t itself was introduced by a patch to ncurses 5.7 dated 2009-08-29,\n \t changing these macro to expand to code that causes the compiler\n \t to generate an unused-value warning.  */\n-      (void) wstandout (handle);\n-      waddstr (handle, string.c_str ());\n-      wclrtoeol (handle);\n-      (void) wstandend (handle);\n+      (void) wstandout (handle.get ());\n+      waddstr (handle.get (), string.c_str ());\n+      wclrtoeol (handle.get ());\n+      (void) wstandend (handle.get ());\n       refresh_window ();\n-      wmove (handle, 0, 0);\n+      wmove (handle.get (), 0, 0);\n     }\n }\n "
    },
    {
      "sha": "41c61f12b21fa5db6e4899699b83c633b2c20199",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -529,7 +529,7 @@ tui_resize_all (void)\n #endif      \n       /* Turn keypad off while we resize.  */\n       if (win_with_focus != TUI_CMD_WIN)\n-\tkeypad (TUI_CMD_WIN->handle, FALSE);\n+\tkeypad (TUI_CMD_WIN->handle.get (), FALSE);\n       tui_update_gdb_sizes ();\n       tui_set_term_height_to (screenheight);\n       tui_set_term_width_to (screenwidth);\n@@ -639,7 +639,7 @@ tui_resize_all (void)\n       /* Turn keypad back on, unless focus is in the command\n \t window.  */\n       if (win_with_focus != TUI_CMD_WIN)\n-\tkeypad (TUI_CMD_WIN->handle, TRUE);\n+\tkeypad (TUI_CMD_WIN->handle.get (), TRUE);\n     }\n }\n \n@@ -791,7 +791,7 @@ tui_set_focus_command (const char *arg, int from_tty)\n \terror (_(\"Window \\\"%s\\\" is not visible\"), arg);\n \n       tui_set_win_focus_to (win_info);\n-      keypad (TUI_CMD_WIN->handle, (win_info != TUI_CMD_WIN));\n+      keypad (TUI_CMD_WIN->handle.get (), win_info != TUI_CMD_WIN);\n       printf_filtered (_(\"Focus set to %s window.\\n\"),\n \t\t       tui_win_with_focus ()->name ());\n     }"
    },
    {
      "sha": "b6dd3f9b26a47899cabc61bfc978b2755bef7f9d",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 5,
      "deletions": 17,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -34,18 +34,9 @@ void\n tui_gen_win_info::refresh_window ()\n {\n   if (handle != NULL)\n-    wrefresh (handle);\n+    wrefresh (handle.get ());\n }\n \n-/* Function to delete the curses window, checking for NULL.  */\n-void\n-tui_delete_win (WINDOW *window)\n-{\n-  if (window != NULL)\n-    delwin (window);\n-}\n-\n-\n /* Draw a border arround the window.  */\n static void\n box_win (struct tui_win_info *win_info, \n@@ -54,7 +45,7 @@ box_win (struct tui_win_info *win_info,\n   WINDOW *win;\n   int attrs;\n \n-  win = win_info->handle;\n+  win = win_info->handle.get ();\n   if (highlight_flag)\n     attrs = tui_active_border_attrs;\n   else\n@@ -132,9 +123,9 @@ tui_win_info::check_and_display_highlight_if_needed ()\n void\n tui_gen_win_info::make_window ()\n {\n-  handle = newwin (height, width, origin.y, origin.x);\n+  handle.reset (newwin (height, width, origin.y, origin.x));\n   if (handle != NULL)\n-    scrollok (handle, TRUE);\n+    scrollok (handle.get (), TRUE);\n }\n \n void\n@@ -157,10 +148,7 @@ tui_gen_win_info::make_visible (bool visible)\n   if (visible)\n     make_window ();\n   else\n-    {\n-      tui_delete_win (handle);\n-      handle = NULL;\n-    }\n+    handle.reset (nullptr);\n }\n \n /* See tui-wingeneral.h.  */"
    },
    {
      "sha": "9995250ce9a4e3791f7fbc0cac33fa0b14bf30ea",
      "filename": "gdb/tui/tui-wingeneral.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-wingeneral.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-wingeneral.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.h?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -32,6 +32,5 @@ extern void tui_make_all_invisible (void);\n extern void tui_unhighlight_win (struct tui_win_info *);\n extern void tui_highlight_win (struct tui_win_info *);\n extern void tui_refresh_all ();\n-extern void tui_delete_win (WINDOW *window);\n \n #endif /* TUI_TUI_WINGENERAL_H */"
    },
    {
      "sha": "f1c9f958a99ec805dae096499020004a41eb2cc1",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -193,14 +193,14 @@ tui_source_window_base::do_erase_source_content (const char *str)\n   content.clear ();\n   if (handle != NULL)\n     {\n-      werase (handle);\n+      werase (handle.get ());\n       check_and_display_highlight_if_needed ();\n \n       if (strlen (str) >= half_width)\n \tx_pos = 1;\n       else\n \tx_pos = half_width - strlen (str);\n-      mvwaddstr (handle,\n+      mvwaddstr (handle.get (),\n \t\t (height / 2),\n \t\t x_pos,\n \t\t (char *) str);\n@@ -219,19 +219,19 @@ tui_show_source_line (struct tui_source_window_base *win_info, int lineno)\n \n   line = &win_info->content[lineno - 1];\n   if (line->is_exec_point)\n-    tui_set_reverse_mode (win_info->handle, true);\n+    tui_set_reverse_mode (win_info->handle.get (), true);\n \n-  wmove (win_info->handle, lineno, TUI_EXECINFO_SIZE);\n-  tui_puts (line->line.get (), win_info->handle);\n+  wmove (win_info->handle.get (), lineno, TUI_EXECINFO_SIZE);\n+  tui_puts (line->line.get (), win_info->handle.get ());\n   if (line->is_exec_point)\n-    tui_set_reverse_mode (win_info->handle, false);\n+    tui_set_reverse_mode (win_info->handle.get (), false);\n \n   /* Clear to end of line but stop before the border.  */\n-  x = getcurx (win_info->handle);\n+  x = getcurx (win_info->handle.get ());\n   while (x + 1 < win_info->width)\n     {\n-      waddch (win_info->handle, ' ');\n-      x = getcurx (win_info->handle);\n+      waddch (win_info->handle.get (), ' ');\n+      x = getcurx (win_info->handle.get ());\n     }\n }\n \n@@ -261,7 +261,7 @@ tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n void\n tui_source_window_base::update_tab_width ()\n {\n-  werase (handle);\n+  werase (handle.get ());\n   rerender ();\n }\n \n@@ -479,7 +479,7 @@ tui_source_window_base::update_exec_info ()\n       if (src_element->is_exec_point)\n \telement[TUI_EXEC_POS] = '>';\n \n-      mvwaddstr (handle, i + 1, 1, element);\n+      mvwaddstr (handle.get (), i + 1, 1, element);\n     }\n   refresh_window ();\n }"
    },
    {
      "sha": "e765d58f97d9ebc7c871f186c0e578f6d7643ec9",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7523da63ca33a37b54c2cde18b7752d0f0f11c26/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=7523da63ca33a37b54c2cde18b7752d0f0f11c26",
      "patch": "@@ -237,7 +237,7 @@ tui_rl_other_window (int count, int key)\n   if (win_info)\n     {\n       tui_set_win_focus_to (win_info);\n-      keypad (TUI_CMD_WIN->handle, (win_info != TUI_CMD_WIN));\n+      keypad (TUI_CMD_WIN->handle.get (), win_info != TUI_CMD_WIN);\n     }\n   return 0;\n }\n@@ -478,8 +478,8 @@ tui_enable (void)\n       tui_show_frame_info (0);\n       tui_set_layout (SRC_COMMAND);\n       tui_set_win_focus_to (TUI_SRC_WIN);\n-      keypad (TUI_CMD_WIN->handle, TRUE);\n-      wrefresh (TUI_CMD_WIN->handle);\n+      keypad (TUI_CMD_WIN->handle.get (), TRUE);\n+      wrefresh (TUI_CMD_WIN->handle.get ());\n       tui_finish_init = 0;\n     }\n   else"
    }
  ]
}