{
  "sha": "db502012fc46b4dd068461aaeafeaa421489c562",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGI1MDIwMTJmYzQ2YjRkZDA2ODQ2MWFhZWFmZWFhNDIxNDg5YzU2Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-09T21:35:17Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-15T18:29:28Z"
    },
    "message": "TUI window resize should not need invisibility\n\nWhen resizing a window, the TUI currently first makes it invisible,\nthen changes the size, and then restores its visibility.\n\nI think this is done because curses doesn't truly support resizing a\nwindow -- there is a \"wresize\" extension, but the man page says it\nisn't available in all versions of curses.\n\nFirst, this is probably not a major problem any more.  I imagine most\nof those old systems are gone now.\n\nSecond, I think it's a better API to have this detail hidden inside of\nthe resize method.\n\nThis patch changes the code to follow this idea, and changes the\nordinary resize method to use wresize when it is available.  The\nspecial case for the command window is also moved to methods on the\ncommand window.\n\ngdb/ChangeLog\n2019-08-15  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-layout.c (show_layout, show_source_disasm_command)\n\t(show_data): Don't change window visibility.\n\t(tui_gen_win_info::resize): Remove special case for command\n\twindow.  Use wresize, when available.\n\t(show_source_or_disasm_and_command): Don't change window\n\tvisibility.\n\t* tui/tui-command.h (struct tui_cmd_window) <resize>: Declare.\n\t<make_visible>: New method.\n\t* tui/tui-command.c (tui_cmd_window::resize): New method.",
    "tree": {
      "sha": "90e36ac3f6252a2d262ba78ad04efe1d23eaa96e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/90e36ac3f6252a2d262ba78ad04efe1d23eaa96e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/db502012fc46b4dd068461aaeafeaa421489c562",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db502012fc46b4dd068461aaeafeaa421489c562",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/db502012fc46b4dd068461aaeafeaa421489c562",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/db502012fc46b4dd068461aaeafeaa421489c562/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3891b65efe614fe2e2f7e75e7f5ec8964f7fd96b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3891b65efe614fe2e2f7e75e7f5ec8964f7fd96b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3891b65efe614fe2e2f7e75e7f5ec8964f7fd96b"
    }
  ],
  "stats": {
    "total": 98,
    "additions": 75,
    "deletions": 23
  },
  "files": [
    {
      "sha": "57ecdac8176f117196a67749938284b97414440f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db502012fc46b4dd068461aaeafeaa421489c562/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db502012fc46b4dd068461aaeafeaa421489c562/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=db502012fc46b4dd068461aaeafeaa421489c562",
      "patch": "@@ -1,3 +1,15 @@\n+2019-08-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-layout.c (show_layout, show_source_disasm_command)\n+\t(show_data): Don't change window visibility.\n+\t(tui_gen_win_info::resize): Remove special case for command\n+\twindow.  Use wresize, when available.\n+\t(show_source_or_disasm_and_command): Don't change window\n+\tvisibility.\n+\t* tui/tui-command.h (struct tui_cmd_window) <resize>: Declare.\n+\t<make_visible>: New method.\n+\t* tui/tui-command.c (tui_cmd_window::resize): New method.\n+\n 2019-08-15  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-winsource.h (struct tui_source_window_iterator): New."
    },
    {
      "sha": "ddbd8bccea5aab8f2f295e596468f6bd1f2c2547",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 35,
      "deletions": 0,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=db502012fc46b4dd068461aaeafeaa421489c562",
      "patch": "@@ -25,6 +25,7 @@\n #include \"tui/tui-win.h\"\n #include \"tui/tui-io.h\"\n #include \"tui/tui-command.h\"\n+#include \"tui/tui-wingeneral.h\"\n \n #include \"gdb_curses.h\"\n \n@@ -48,6 +49,40 @@ tui_cmd_window::max_height () const\n   return tui_term_height () - 4;\n }\n \n+void\n+tui_cmd_window::resize (int height_, int width_, int origin_x, int origin_y)\n+{\n+  width = width_;\n+  height = height_;\n+  if (height > 1)\n+    {\n+      /* Note this differs from the base class implementation, because\n+\t this window can't be boxed.  */\n+      viewport_height = height - 1;\n+    }\n+  else\n+    viewport_height = 1;\n+  origin.x = origin_x;\n+  origin.y = origin_y;\n+\n+  if (handle == nullptr)\n+    tui_make_window (this);\n+  else\n+    {\n+      /* Another reason we don't call the base class method here is\n+\t that for the command window in particular, we want to avoid\n+\t destroying the underlying handle.  We don't currently track\n+\t the contents of this window, and so have no way to re-render\n+\t it.  However we can at least move it and keep the old size if\n+\t wresize isn't available.  */\n+#ifdef HAVE_WRESIZE\n+      wresize (handle, height, width);\n+#endif\n+      mvwin (handle, origin.y, origin.x);\n+      wmove (handle, 0, 0);\n+    }\n+}\n+\n /* See tui-command.h.  */\n \n void"
    },
    {
      "sha": "1fce0a18126fb6584af1b16bb9214bf90188e25f",
      "filename": "gdb/tui/tui-command.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.h?ref=db502012fc46b4dd068461aaeafeaa421489c562",
      "patch": "@@ -56,6 +56,13 @@ struct tui_cmd_window : public tui_win_info\n     return false;\n   }\n \n+  void resize (int height, int width, int origin_x, int origin_y) override;\n+\n+  void make_visible (bool visible) override\n+  {\n+    /* The command window can't be made invisible.  */\n+  }\n+\n   int start_line = 0;\n \n protected:"
    },
    {
      "sha": "e0e804bac2abe4524f282a2b7b2d4138b362d921",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 21,
      "deletions": 23,
      "changes": 44,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/db502012fc46b4dd068461aaeafeaa421489c562/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=db502012fc46b4dd068461aaeafeaa421489c562",
      "patch": "@@ -76,9 +76,7 @@ show_layout (enum tui_layout_type layout)\n \n   if (layout != cur_layout)\n     {\n-      /* First make the current layout be invisible.  */\n       tui_make_all_invisible ();\n-      tui_locator_win_info_ptr ()->make_visible (false);\n       switch (layout)\n \t{\n \tcase SRC_DATA_COMMAND:\n@@ -506,7 +504,6 @@ show_source_disasm_command (void)\n \t\t       tui_term_width (),\n \t\t       0,\n \t\t       0);\n-  TUI_SRC_WIN->make_visible (true);\n   TUI_SRC_WIN->m_has_locator = false;\n \n   struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n@@ -519,14 +516,12 @@ show_source_disasm_command (void)\n \t\t\t  tui_term_width (),\n \t\t\t  0,\n \t\t\t  src_height - 1);\n-  TUI_DISASM_WIN->make_visible (true);\n   locator->resize (2 /* 1 */ ,\n \t\t   tui_term_width (),\n \t\t   0,\n \t\t   (src_height + asm_height) - 1);\n   TUI_SRC_WIN->m_has_locator = false;\n   TUI_DISASM_WIN->m_has_locator = true;\n-  locator->make_visible (true);\n   tui_show_locator_content ();\n   TUI_DISASM_WIN->show_source_content ();\n \n@@ -536,7 +531,6 @@ show_source_disasm_command (void)\n \t\t       tui_term_width (),\n \t\t       0,\n \t\t       tui_term_height () - cmd_height);\n-  TUI_CMD_WIN->make_visible (true);\n   current_layout = SRC_DISASSEM_COMMAND;\n }\n \n@@ -558,7 +552,6 @@ show_data (enum tui_layout_type new_layout)\n   if (tui_win_list[DATA_WIN] == nullptr)\n     tui_win_list[DATA_WIN] = new tui_data_window ();\n   tui_win_list[DATA_WIN]->resize (data_height, tui_term_width (), 0, 0);\n-  tui_win_list[DATA_WIN]->make_visible (true);\n \n   if (new_layout == SRC_DATA_COMMAND)\n     win_type = SRC_WIN;\n@@ -583,32 +576,41 @@ show_data (enum tui_layout_type new_layout)\n \t\t   tui_term_width (),\n \t\t   0,\n \t\t   total_height - 1);\n-  base->make_visible (true);\n+  TUI_CMD_WIN->resize (TUI_CMD_WIN->height, tui_term_width (),\n+\t\t       0, total_height);\n+\n   base->m_has_locator = true;\n-  locator->make_visible (true);\n   tui_show_locator_content ();\n-  TUI_CMD_WIN->make_visible (true);\n   current_layout = new_layout;\n }\n \n void\n tui_gen_win_info::resize (int height_, int width_,\n \t\t\t  int origin_x_, int origin_y_)\n {\n-  int h = height_;\n-\n   width = width_;\n-  height = h;\n-  if (h > 1)\n-    {\n-      viewport_height = h - 1;\n-      if (type != CMD_WIN)\n-\tviewport_height--;\n-    }\n+  height = height_;\n+  if (height > 1)\n+    viewport_height = height - 2;\n   else\n     viewport_height = 1;\n   origin.x = origin_x_;\n   origin.y = origin_y_;\n+\n+  if (handle != nullptr)\n+    {\n+#ifdef HAVE_WRESIZE\n+      wresize (handle, height, width);\n+      mvwin (handle, origin.y, origin.x);\n+      wmove (handle, 0, 0);\n+#else\n+      tui_delete_win (handle);\n+      handle = NULL;\n+#endif\n+    }\n+\n+  if (handle == nullptr)\n+    tui_make_window (this);\n }\n \n /* Show the Source/Command or the Disassem layout.  */\n@@ -647,11 +649,8 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t\t    tui_term_width (),\n \t\t    0,\n \t\t    0);\n-  win_info->make_visible (true);\n-\n \n   win_info->m_has_locator = true;\n-  locator->make_visible (true);\n   tui_show_locator_content ();\n   win_info->show_source_content ();\n \n@@ -661,6 +660,5 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t\t       tui_term_width (),\n \t\t       0,\n \t\t       src_height);\n-  TUI_CMD_WIN->make_visible (true);\n   current_layout = layout_type;\n }"
    }
  ]
}