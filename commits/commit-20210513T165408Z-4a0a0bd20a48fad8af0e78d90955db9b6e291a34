{
  "sha": "4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGEwYTBiZDIwYTQ4ZmFkOGFmMGU3OGQ5MDk1NWRiOWI2ZTI5MWEzNA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-13T16:04:35Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-13T16:54:08Z"
    },
    "message": "gdb/testsuite: resolve remaining duplicate tests in gdb.guile/\n\nThe remaining duplicates are resolved by adding a with_test_prefix and\nreindenting a proc.  I also added a couple of additional test names to\nsome of the tests.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.guile/scm-pretty-print.exp (run_lang_tests): Give some tests\n\tunique names, also wrap proc body in with_test_prefix.",
    "tree": {
      "sha": "b5c2861d18bcecee86f0fcfd46dd78059b0e4055",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b5c2861d18bcecee86f0fcfd46dd78059b0e4055"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4a0a0bd20a48fad8af0e78d90955db9b6e291a34/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "62f2f198cdf2e006f27f61dfa6210d276d7a8e37",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62f2f198cdf2e006f27f61dfa6210d276d7a8e37",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/62f2f198cdf2e006f27f61dfa6210d276d7a8e37"
    }
  ],
  "stats": {
    "total": 162,
    "additions": 86,
    "deletions": 76
  },
  "files": [
    {
      "sha": "c6821c1b950a769a92d874fe638841f75e5517fc",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a0a0bd20a48fad8af0e78d90955db9b6e291a34/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a0a0bd20a48fad8af0e78d90955db9b6e291a34/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
      "patch": "@@ -1,3 +1,8 @@\n+2021-05-10  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.guile/scm-pretty-print.exp (run_lang_tests): Give some tests\n+\tunique names, also wrap proc body in with_test_prefix.\n+\n 2021-05-10  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.guile/scm-frame-args.exp: Add with_test_prefix to resolve"
    },
    {
      "sha": "f1ed7141680d4cba6be3cae67b1d787e8e067da2",
      "filename": "gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "status": "modified",
      "additions": 81,
      "deletions": 76,
      "changes": 157,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4a0a0bd20a48fad8af0e78d90955db9b6e291a34/gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4a0a0bd20a48fad8af0e78d90955db9b6e291a34/gdb/testsuite/gdb.guile/scm-pretty-print.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-pretty-print.exp?ref=4a0a0bd20a48fad8af0e78d90955db9b6e291a34",
      "patch": "@@ -28,83 +28,88 @@ gdb_start\n if { [skip_guile_tests] } { continue }\n \n proc run_lang_tests {exefile lang} {\n-    global srcdir subdir srcfile testfile hex\n-    if { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${exefile}\" executable \"debug $lang\"] != \"\" } {\n-\tuntested \"failed to compile in $lang mode\"\n-\treturn\n+    with_test_prefix \"lang=$lang\" {\n+\tglobal srcdir subdir srcfile testfile hex\n+\tif { [gdb_compile \"${srcdir}/${subdir}/${srcfile}\" \"${exefile}\" executable \"debug $lang\"] != \"\" } {\n+\t    untested \"failed to compile in $lang mode\"\n+\t    return\n+\t}\n+\n+\tset nl \"\\[\\r\\n\\]+\"\n+\n+\t# Start with a fresh gdb.\n+\tgdb_exit\n+\tgdb_start\n+\tgdb_reinitialize_dir $srcdir/$subdir\n+\tgdb_load ${exefile}\n+\n+\tif ![gdb_guile_runto_main] {\n+\t    return\n+\t}\n+\n+\tgdb_test_no_output \"set print pretty on\"\n+\n+\tgdb_test \"b [gdb_get_line_number {break to inspect} ${testfile}.c ]\" \\\n+\t    \".*Breakpoint.*\"\n+\tgdb_test \"continue\" \".*Breakpoint.*\"\n+\n+\tset remote_scheme_file [gdb_remote_download host \\\n+\t\t\t\t    ${srcdir}/${subdir}/${testfile}.scm]\n+\n+\tgdb_scm_load_file ${remote_scheme_file}\n+\n+\tgdb_test \"print ss\" \" = a=<a=<1> b=<$hex>> b=<a=<2> b=<$hex>>\"\n+\tgdb_test \"print ssa\\[1\\]\" \" = a=<a=<5> b=<$hex>> b=<a=<6> b=<$hex>>\"\n+\tgdb_test \"print ssa\" \" = {a=<a=<3> b=<$hex>> b=<a=<4> b=<$hex>>, a=<a=<5> b=<$hex>> b=<a=<6> b=<$hex>>}\"\n+\n+\tgdb_test \"print arraystruct\" \" = {$nl *y = 7, *$nl *x = {a=<23> b=<$hex>, a=<24> b=<$hex>} *$nl *}\"\n+\n+\tif {$lang == \"c++\"} {\n+\t    gdb_test \"print cps\" \"= a=<8> b=<$hex>\"\n+\t    gdb_test \"print cpss\" \" = {$nl *zss = 9, *$nl *s = a=<10> b=<$hex>$nl}\"\n+\t    gdb_test \"print cpssa\\[0\\]\" \" = {$nl *zss = 11, *$nl *s = a=<12> b=<$hex>$nl}\"\n+\t    gdb_test \"print cpssa\\[1\\]\" \" = {$nl *zss = 13, *$nl *s = a=<14> b=<$hex>$nl}\"\n+\t    gdb_test \"print cpssa\" \" = {{$nl *zss = 11, *$nl *s = a=<12> b=<$hex>$nl *}, {$nl *zss = 13, *$nl *s = a=<14> b=<$hex>$nl *}}\"\n+\t    gdb_test \"print sss\" \"= a=<15> b=<a=<8> b=<$hex>>\"\n+\t    gdb_test \"print ref\" \"= a=<15> b=<a=<8> b=<$hex>>\"\n+\t    gdb_test \"print derived\" \\\n+\t\t\" = \\{.*<Vbase1> = pp class name: Vbase1.*<Vbase2> = \\{.*<VirtualTest> = pp value variable is: 1,.*members of Vbase2:.*_vptr.Vbase2 = $hex.*<Vbase3> = \\{.*members of Vbase3.*members of Derived:.*value = 2.*\"\n+\t    gdb_test \"print ns \" \"\\\"embedded\\\\\\\\000null\\\\\\\\000string\\\"\" \\\n+\t\t\"print ns with 200 elements\"\n+\t    gdb_test_no_output \"set print elements 3\" \"\"\n+\t    gdb_test \"print ns\" \"emb\\.\\.\\..\" \\\n+\t\t\"print ns with 3 elements\"\n+\t    gdb_test_no_output \"set print elements 10\" \"\"\n+\t    gdb_test \"print ns\" \"embedded\\\\\\\\000n\\.\\.\\..\" \\\n+\t\t\"print ns with 10 elements\"\n+\t    gdb_test_no_output \"set print elements 200\" \"\"\n+\t}\n+\n+\tif { ![is_address_zero_readable] } {\n+\t    gdb_test \"print ns2\" \"<error reading variable: ERROR: Cannot access memory at address 0x0>\"\n+\t}\n+\n+\tgdb_test \"print x\" \" = \\\"this is x\\\"\"\n+\tgdb_test \"print cstring\" \" = \\\"const string\\\"\"\n+\n+\tgdb_test \"print estring\" \" = \\\"embedded x\\\\\\\\201\\\\\\\\202\\\\\\\\203\\\\\\\\204\\\"\"\n+\n+\tgdb_test_no_output \"guile (set! *pp-ls-encoding* \\\"UTF-8\\\")\"\n+\tgdb_test \"print estring2\" \"\\\"embedded \\\", <incomplete sequence \\\\\\\\302>\"\n+\n+\tgdb_test_no_output \"set guile print-stack full\"\n+\tgdb_test \"print hint_error\" \"ERROR: Invalid display hint: 42\\r\\nhint_error_val\"\n+\n+\tgdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = {$nl *.0. = 23,$nl *.1. = 72$nl}\"\n+\n+\tgdb_test \"print nstype\" \" = {$nl *.0. = 7,$nl *.1. = 42$nl}\"\n+\n+\tgdb_test_no_output \"set print pretty off\"\n+\tgdb_test \"print nstype\" \" = {.0. = 7, .1. = 42}\" \\\n+\t    \"print nstype on one line\"\n+\n+\tgdb_continue_to_end\n     }\n-\n-    set nl \"\\[\\r\\n\\]+\"\n-\n-    # Start with a fresh gdb.\n-    gdb_exit\n-    gdb_start\n-    gdb_reinitialize_dir $srcdir/$subdir\n-    gdb_load ${exefile}\n-\n-    if ![gdb_guile_runto_main] {\n-\treturn\n-    }\n-\n-    gdb_test_no_output \"set print pretty on\"\n-\n-    gdb_test \"b [gdb_get_line_number {break to inspect} ${testfile}.c ]\" \\\n-\t\".*Breakpoint.*\"\n-    gdb_test \"continue\" \".*Breakpoint.*\"\n-\n-    set remote_scheme_file [gdb_remote_download host \\\n-\t\t\t\t${srcdir}/${subdir}/${testfile}.scm]\n-\n-    gdb_scm_load_file ${remote_scheme_file}\n-\n-    gdb_test \"print ss\" \" = a=<a=<1> b=<$hex>> b=<a=<2> b=<$hex>>\"\n-    gdb_test \"print ssa\\[1\\]\" \" = a=<a=<5> b=<$hex>> b=<a=<6> b=<$hex>>\"\n-    gdb_test \"print ssa\" \" = {a=<a=<3> b=<$hex>> b=<a=<4> b=<$hex>>, a=<a=<5> b=<$hex>> b=<a=<6> b=<$hex>>}\"\n-\n-    gdb_test \"print arraystruct\" \" = {$nl *y = 7, *$nl *x = {a=<23> b=<$hex>, a=<24> b=<$hex>} *$nl *}\"\n-\n-    if {$lang == \"c++\"} {\n-\tgdb_test \"print cps\" \"= a=<8> b=<$hex>\"\n-\tgdb_test \"print cpss\" \" = {$nl *zss = 9, *$nl *s = a=<10> b=<$hex>$nl}\"\n-\tgdb_test \"print cpssa\\[0\\]\" \" = {$nl *zss = 11, *$nl *s = a=<12> b=<$hex>$nl}\"\n-\tgdb_test \"print cpssa\\[1\\]\" \" = {$nl *zss = 13, *$nl *s = a=<14> b=<$hex>$nl}\"\n-\tgdb_test \"print cpssa\" \" = {{$nl *zss = 11, *$nl *s = a=<12> b=<$hex>$nl *}, {$nl *zss = 13, *$nl *s = a=<14> b=<$hex>$nl *}}\"\n-\tgdb_test \"print sss\" \"= a=<15> b=<a=<8> b=<$hex>>\"\n-\tgdb_test \"print ref\" \"= a=<15> b=<a=<8> b=<$hex>>\"\n-\tgdb_test \"print derived\" \\\n-\t    \" = \\{.*<Vbase1> = pp class name: Vbase1.*<Vbase2> = \\{.*<VirtualTest> = pp value variable is: 1,.*members of Vbase2:.*_vptr.Vbase2 = $hex.*<Vbase3> = \\{.*members of Vbase3.*members of Derived:.*value = 2.*\"\n-\tgdb_test \"print ns \" \"\\\"embedded\\\\\\\\000null\\\\\\\\000string\\\"\"\n-\tgdb_scm_test_silent_cmd \"set print elements 3\" \"\" 1\n-\tgdb_test \"print ns\" \"emb\\.\\.\\..\"\n-\tgdb_scm_test_silent_cmd \"set print elements 10\" \"\" 1\n-\tgdb_test \"print ns\" \"embedded\\\\\\\\000n\\.\\.\\..\"\n-\tgdb_scm_test_silent_cmd \"set print elements 200\" \"\" 1\n-    }\n-\n-    if { ![is_address_zero_readable] } {\n-\tgdb_test \"print ns2\" \"<error reading variable: ERROR: Cannot access memory at address 0x0>\"\n-    }\n-\n-    gdb_test \"print x\" \" = \\\"this is x\\\"\"\n-    gdb_test \"print cstring\" \" = \\\"const string\\\"\"\n-\n-    gdb_test \"print estring\" \" = \\\"embedded x\\\\\\\\201\\\\\\\\202\\\\\\\\203\\\\\\\\204\\\"\"\n-\n-    gdb_test_no_output \"guile (set! *pp-ls-encoding* \\\"UTF-8\\\")\"\n-    gdb_test \"print estring2\" \"\\\"embedded \\\", <incomplete sequence \\\\\\\\302>\"\n-\n-    gdb_test_no_output \"set guile print-stack full\"\n-    gdb_test \"print hint_error\" \"ERROR: Invalid display hint: 42\\r\\nhint_error_val\"\n-\n-    gdb_test \"print c\" \" = container \\\"container\\\" with 2 elements = {$nl *.0. = 23,$nl *.1. = 72$nl}\"\n-\n-    gdb_test \"print nstype\" \" = {$nl *.0. = 7,$nl *.1. = 42$nl}\"\n-\n-    gdb_test_no_output \"set print pretty off\"\n-    gdb_test \"print nstype\" \" = {.0. = 7, .1. = 42}\" \\\n-\t\"print nstype on one line\"\n-\n-    gdb_continue_to_end\n }\n \n run_lang_tests \"${binfile}\" \"c\""
    }
  ]
}