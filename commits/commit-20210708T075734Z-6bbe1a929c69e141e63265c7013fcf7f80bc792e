{
  "sha": "6bbe1a929c69e141e63265c7013fcf7f80bc792e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmJiZTFhOTI5YzY5ZTE0MWU2MzI2NWM3MDEzZmNmN2Y4MGJjNzkyZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-08T07:57:34Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-07-08T07:57:34Z"
    },
    "message": "[gdb/testsuite] Fix gdb.guile/scm-breakpoint.exp with guile 3.0\n\nWhen running test-case gdb.guile/scm-breakpoint.exp on openSUSE Tumbleweed\nwith guile 3.0, I run into:\n...\n(gdb) guile (define cp (make-breakpoint \"syscall\" #:type BP_CATCHPOINT))^M\nERROR: In procedure make-breakpoint:^M\nIn procedure gdbscm_make_breakpoint: unsupported breakpoint type in \\\n  position 3: \"BP_CATCHPOINT\"^M\nError while executing Scheme code.^M\n(gdb) FAIL: gdb.guile/scm-breakpoint.exp: test_catchpoints: \\\n  create a catchpoint via the api\n...\n\nThe same test passes on openSUSE Leap 15.2 with guile 2.0, where the second\nline of the error message starts with the same prefix as the first:\n...\nERROR: In procedure gdbscm_make_breakpoint: unsupported breakpoint type in \\\n  position 3: \"BP_CATCHPOINT\"^M\n...\n\nI observe the same difference in many other tests, f.i.:\n...\n(gdb) gu (print (value-add i '()))^M\nERROR: In procedure value-add:^M\nIn procedure gdbscm_value_add: Wrong type argument in position 2: ()^M\nError while executing Scheme code.^M\n(gdb) PASS: gdb.guile/scm-math.exp: catch error in guile type conversion\n...\nbut it doesn't cause FAILs anywhere else.\n\nFix this by updating the regexp to make the \"ERROR: \" prefix optional.\n\nTested on x86_64-linux, with both guile 2.0 and 3.0.\n\ngdb/testsuite/ChangeLog:\n\n2021-07-07  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.guile/scm-breakpoint.exp: Make additional \"ERROR: \" prefix in\n\texception printing optional.",
    "tree": {
      "sha": "99593064eb6934ce0c09ab4c20a802c6623eb30b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/99593064eb6934ce0c09ab4c20a802c6623eb30b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6bbe1a929c69e141e63265c7013fcf7f80bc792e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bbe1a929c69e141e63265c7013fcf7f80bc792e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6bbe1a929c69e141e63265c7013fcf7f80bc792e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bbe1a929c69e141e63265c7013fcf7f80bc792e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c8d4ff8a3a38038942299acea0d6b2d4ba1bc9b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c8d4ff8a3a38038942299acea0d6b2d4ba1bc9b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c8d4ff8a3a38038942299acea0d6b2d4ba1bc9b9"
    }
  ],
  "stats": {
    "total": 6,
    "additions": 3,
    "deletions": 3
  },
  "files": [
    {
      "sha": "be898cacaa7916a5920b575c5e5443c0cf951478",
      "filename": "gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bbe1a929c69e141e63265c7013fcf7f80bc792e/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bbe1a929c69e141e63265c7013fcf7f80bc792e/gdb/testsuite/gdb.guile/scm-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-breakpoint.exp?ref=6bbe1a929c69e141e63265c7013fcf7f80bc792e",
      "patch": "@@ -260,10 +260,10 @@ proc_with_prefix test_watchpoints { } {\n \t\"test watchpoint write\"\n \n     gdb_test \"guile (define wp2 (make-breakpoint \\\"result\\\" #:wp-class WP_WRITE #:type 999))\" \\\n-\t\"ERROR: In procedure gdbscm_make_breakpoint: Out of range: invalid breakpoint type in position 5: 999\\r\\n.*\" \\\n+\t\"(ERROR: )?In procedure gdbscm_make_breakpoint: Out of range: invalid breakpoint type in position 5: 999\\r\\n.*\" \\\n \t\"create a breakpoint with an invalid type number\"\n     gdb_test \"guile (define wp2 (make-breakpoint \\\"result\\\" #:wp-class WP_WRITE #:type BP_NONE))\" \\\n-\t\"ERROR: In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 5: \\\"BP_NONE\\\"\\r\\n.*\" \\\n+\t\"(ERROR: )?In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 5: \\\"BP_NONE\\\"\\r\\n.*\" \\\n \t\"create a breakpoint with an unsupported type\"\n }\n \n@@ -533,7 +533,7 @@ proc_with_prefix test_catchpoints {} {\n     # Try to create a catchpoint, currently this isn't supported via\n     # the guile api.\n     gdb_test \"guile (define cp (make-breakpoint \\\"syscall\\\" #:type BP_CATCHPOINT))\" \\\n-\t\"ERROR: In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 3: \\\"BP_CATCHPOINT\\\"\\r\\n.*\" \\\n+\t\"(ERROR: )?In procedure gdbscm_make_breakpoint: unsupported breakpoint type in position 3: \\\"BP_CATCHPOINT\\\"\\r\\n.*\" \\\n \t\"create a catchpoint via the api\"\n \n     # Setup a catchpoint."
    }
  ]
}