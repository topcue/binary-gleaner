{
  "sha": "6d520e36de0229eefe2f1671438cc8333a90b5e6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmQ1MjBlMzZkZTAyMjllZWZlMmYxNjcxNDM4Y2M4MzMzYTkwYjVlNg==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:08:31Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:08:48Z"
    },
    "message": "gold: x86-64: Fix TLSDESC -> LE relaxation\n\nX86-64 TLSDESC sequences can be:\n\n4c 8d 0d 00 00 00 00\tleaq\tfoo@TLSDESC(%rip), %r9\n4c 89 c8\t\tmovq\t%r9, %rax\nff 10\t\t\tcall\t*foo@TLSCALL(%rax)\n\nTLSDESC -> LE relaxation can turn them into:\n\n49 c7 c1 fc ff ff ff \tmov    $0xfffffffffffffffc,%r9\n4c 89 c8             \tmov    %r9,%rax\n66 90                \txchg   %ax,%ax\n\nWe need to check and update the REX byte in this case.\n\n\tPR gold/25473\n\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n\tProperly check r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly\n\trelax r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n\t* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.\n\t(check_DATA): Add x86_64_gd_to_le.stdout.\n\t(MOSTLYCLEANFILES): Add x86_64_gd_to_le.\n\t(x86_64_gd_to_le.o): New target.\n\t(x86_64_gd_to_le): Likewise.\n\t(x86_64_gd_to_le.stdout): Likewise.\n\t* testsuite/Makefile.in: Regenerated.\n\t* testsuite/x86_64_gd_to_le.s: New file.\n\t* testsuite/x86_64_gd_to_le.sh: Likewise.",
    "tree": {
      "sha": "715843d140e793d17d2f3ef1728987bcf30704cc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/715843d140e793d17d2f3ef1728987bcf30704cc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6d520e36de0229eefe2f1671438cc8333a90b5e6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d520e36de0229eefe2f1671438cc8333a90b5e6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6d520e36de0229eefe2f1671438cc8333a90b5e6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6d520e36de0229eefe2f1671438cc8333a90b5e6/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e10cfd063328872efa721b4a08b9d52486fb5878",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e10cfd063328872efa721b4a08b9d52486fb5878",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e10cfd063328872efa721b4a08b9d52486fb5878"
    }
  ],
  "stats": {
    "total": 106,
    "additions": 103,
    "deletions": 3
  },
  "files": [
    {
      "sha": "0b7cb07fddf9eec920f916e2212f10726ec6b49f",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -1,3 +1,20 @@\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gold/25473\n+\t* x86_64.cc (Target_x86_64<size>::Relocate::tls_desc_gd_to_ie):\n+\tProperly check r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n+\t(Target_x86_64<size>::Relocate::tls_desc_gd_to_le): Properly\n+\trelax r8 - r15 in \"lea foo@TLSDESC(%rip), %reg\".\n+\t* testsuite/Makefile.am (check_SCRIPTS): Add x86_64_gd_to_le.sh.\n+\t(check_DATA): Add x86_64_gd_to_le.stdout.\n+\t(MOSTLYCLEANFILES): Add x86_64_gd_to_le.\n+\t(x86_64_gd_to_le.o): New target.\n+\t(x86_64_gd_to_le): Likewise.\n+\t(x86_64_gd_to_le.stdout): Likewise.\n+\t* testsuite/Makefile.in: Regenerated.\n+\t* testsuite/x86_64_gd_to_le.s: New file.\n+\t* testsuite/x86_64_gd_to_le.sh: Likewise.\n+\n 2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/odr_violation2.cc (Ordering::operator()): Make"
    },
    {
      "sha": "6187554c3251a1cb2543469be6cb513cb92000b3",
      "filename": "gold/testsuite/Makefile.am",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.am?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -1202,6 +1202,17 @@ x86_64_indirect_jump_to_direct1: x86_64_indirect_jump_to_direct1.o gcctestdir/ld\n x86_64_indirect_jump_to_direct1.stdout: x86_64_indirect_jump_to_direct1\n \t$(TEST_OBJDUMP) -dw $< > $@\n \n+check_SCRIPTS += x86_64_gd_to_le.sh\n+check_DATA += x86_64_gd_to_le.stdout\n+MOSTLYCLEANFILES += x86_64_gd_to_le\n+\n+x86_64_gd_to_le.o: x86_64_gd_to_le.s\n+\t$(TEST_AS) --64 -o $@ $<\n+x86_64_gd_to_le: x86_64_gd_to_le.o gcctestdir/ld\n+\tgcctestdir/ld -o $@ $<\n+x86_64_gd_to_le.stdout: x86_64_gd_to_le\n+\t$(TEST_OBJDUMP) -dw $< > $@\n+\n check_SCRIPTS += x86_64_overflow_pc32.sh\n check_DATA += x86_64_overflow_pc32.err\n MOSTLYCLEANFILES += x86_64_overflow_pc32.err"
    },
    {
      "sha": "8d2f142a6f70aac39ce8b08d33b31c20fce75044",
      "filename": "gold/testsuite/Makefile.in",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/Makefile.in?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -291,6 +291,7 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @FN_PTRS_IN_SO_WITHOUT_PIC_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@@TLS_TRUE@am__append_28 = tls_shared_nonpic_test\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@am__append_29 = x86_64_mov_to_lea.sh \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_call_to_direct.sh \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_gd_to_le.sh \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_overflow_pc32.sh \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx32_overflow_pc32.sh \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tpr23016_1.sh \\\n@@ -311,6 +312,7 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea14.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_call_to_direct1.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_jump_to_direct1.stdout \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_gd_to_le.stdout \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_overflow_pc32.err \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx32_overflow_pc32.err \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tpr23016_1.stdout \\\n@@ -332,6 +334,7 @@ check_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_mov_to_lea14 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_call_to_direct1 \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_indirect_jump_to_direct1 \\\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_gd_to_le \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx86_64_overflow_pc32.err \\\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tx32_overflow_pc32.err\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@am__append_32 = pr17704a_test\n@@ -5667,6 +5670,13 @@ x86_64_indirect_call_to_direct.sh.log: x86_64_indirect_call_to_direct.sh\n \t--log-file $$b.log --trs-file $$b.trs \\\n \t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n \t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n+x86_64_gd_to_le.sh.log: x86_64_gd_to_le.sh\n+\t@p='x86_64_gd_to_le.sh'; \\\n+\tb='x86_64_gd_to_le.sh'; \\\n+\t$(am__check_pre) $(LOG_DRIVER) --test-name \"$$f\" \\\n+\t--log-file $$b.log --trs-file $$b.trs \\\n+\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n+\t\"$$tst\" $(AM_TESTS_FD_REDIRECT)\n x86_64_overflow_pc32.sh.log: x86_64_overflow_pc32.sh\n \t@p='x86_64_overflow_pc32.sh'; \\\n \tb='x86_64_overflow_pc32.sh'; \\\n@@ -8364,6 +8374,13 @@ uninstall-am:\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tgcctestdir/ld -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_indirect_jump_to_direct1.stdout: x86_64_indirect_jump_to_direct1\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n+\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_gd_to_le.o: x86_64_gd_to_le.s\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) --64 -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_gd_to_le: x86_64_gd_to_le.o gcctestdir/ld\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\tgcctestdir/ld -o $@ $<\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_gd_to_le.stdout: x86_64_gd_to_le\n+@DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_OBJDUMP) -dw $< > $@\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_overflow_pc32.o: x86_64_overflow_pc32.s\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@\t$(TEST_AS) -o $@ $<\n @DEFAULT_TARGET_X86_64_TRUE@@GCC_TRUE@@NATIVE_LINKER_TRUE@x86_64_overflow_pc32.err: x86_64_overflow_pc32.o gcctestdir/ld"
    },
    {
      "sha": "dcdd303184d325022831ab8e7ac551c3a7e9bbd9",
      "filename": "gold/testsuite/x86_64_gd_to_le.s",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/x86_64_gd_to_le.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/x86_64_gd_to_le.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/x86_64_gd_to_le.s?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -0,0 +1,24 @@\n+\t.text\n+\t.p2align 4\n+\t.globl\t_start\n+\t.type\t_start, @function\n+_start:\n+\t.cfi_startproc\n+\tsubq\t$8, %rsp\n+\t.cfi_def_cfa_offset 16\n+\tleaq\tfoo@TLSDESC(%rip), %r9\n+\tmovq\t%r9, %rax\n+\tcall\t*foo@TLSCALL(%rax)\n+\taddq\t%fs:0, %rax\n+\taddq\t$8, %rsp\n+\t.cfi_def_cfa_offset 8\n+\tret\n+\t.cfi_endproc\n+\t.size\t_start, .-_start\n+\t.section\t.tdata,\"awT\",@progbits\n+\t.align 4\n+\t.type\tfoo, @object\n+\t.size\tfoo, 4\n+foo:\n+\t.long\t30\n+\t.section\t.note.GNU-stack,\"\",@progbits"
    },
    {
      "sha": "7ecc6ea5a23b6ae7e069b3f4e114ab841ff38c21",
      "filename": "gold/testsuite/x86_64_gd_to_le.sh",
      "status": "added",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/x86_64_gd_to_le.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/testsuite/x86_64_gd_to_le.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/x86_64_gd_to_le.sh?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -0,0 +1,26 @@\n+#!/bin/sh\n+\n+# x86_64_gd_to_ie.sh -- a test for GDesc -> IE conversion.\n+\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This file is part of gold.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,\n+# MA 02110-1301, USA.\n+\n+set -e\n+\n+grep -q \"mov[ \\t]\\+\\$0x[a-f0-9]\\+,%r9\" x86_64_gd_to_le.stdout"
    },
    {
      "sha": "d4f1d6b2324e44e3e1a355adc1ca3c85d6a32812",
      "filename": "gold/x86_64.cc",
      "status": "modified",
      "additions": 8,
      "deletions": 3,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/x86_64.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6d520e36de0229eefe2f1671438cc8333a90b5e6/gold/x86_64.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/x86_64.cc?ref=6d520e36de0229eefe2f1671438cc8333a90b5e6",
      "patch": "@@ -5477,7 +5477,9 @@ Target_x86_64<size>::Relocate::tls_desc_gd_to_ie(\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, -3);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 4);\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     view[-3] == 0x48 && view[-2] == 0x8d && view[-1] == 0x05);\n+\t\t     ((view[-3] & 0xfb) == 0x48\n+\t\t      && view[-2] == 0x8d\n+\t\t      && (view[-1] & 0xc7) == 0x05));\n       view[-2] = 0x8b;\n       const elfcpp::Elf_Xword addend = rela.get_r_addend();\n       Relocate_functions<size, false>::pcrela32(view, value, addend, address);\n@@ -5516,9 +5518,12 @@ Target_x86_64<size>::Relocate::tls_desc_gd_to_le(\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, -3);\n       tls::check_range(relinfo, relnum, rela.get_r_offset(), view_size, 4);\n       tls::check_tls(relinfo, relnum, rela.get_r_offset(),\n-\t\t     view[-3] == 0x48 && view[-2] == 0x8d && view[-1] == 0x05);\n+\t\t     ((view[-3] & 0xfb) == 0x48\n+\t\t      && view[-2] == 0x8d\n+\t\t      && (view[-1] & 0xc7) == 0x05));\n+      view[-3] = 0x48 | ((view[-3] >> 2) & 1);\n       view[-2] = 0xc7;\n-      view[-1] = 0xc0;\n+      view[-1] = 0xc0 | ((view[-1] >> 3) & 7);\n       value -= tls_segment->memsz();\n       Relocate_functions<size, false>::rela32(view, value, 0);\n     }"
    }
  ]
}