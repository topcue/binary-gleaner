{
  "sha": "01d9317436cd824306b9856861408a40bf8da36a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDFkOTMxNzQzNmNkODI0MzA2Yjk4NTY4NjE0MDhhNDBiZjhkYTM2YQ==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-02T20:06:18Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T16:57:36Z"
    },
    "message": "libctf: add ctf_type_name_raw\n\nWe already have a function ctf_type_aname_raw, which returns the raw\nname of a type with no decoration for structures or arrays or anything\nlike that: just the underlying name of whatever it is that's being\nultimately pointed at.\n\nBut this can be inconvenient to use, becauswe it always allocates new\nstorage for the string and copies it in, so it can potentially fail.\nAdd ctf_type_name_raw, which just returns the string directly out of\nlibctf's guts: it will live until the ctf_file_t is closed (if we later\ngain the ability to remove types from writable dicts, it will live as\nlong as the type lives).\n\nReimplement ctf_type_aname_raw in terms of it.\n\ninclude/\n\t* ctf-api.c (ctf_type_name_raw): New.\n\nlibctf/\n\t* ctf-types.c (ctf_type_name_raw): New.\n\t(ctf_type_aname_raw): Reimplement accordingly.",
    "tree": {
      "sha": "c47b60aa0e7a9a0c42c1df872683cad7182fbed0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c47b60aa0e7a9a0c42c1df872683cad7182fbed0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/01d9317436cd824306b9856861408a40bf8da36a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01d9317436cd824306b9856861408a40bf8da36a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/01d9317436cd824306b9856861408a40bf8da36a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/01d9317436cd824306b9856861408a40bf8da36a/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5ec7465fec8bceb477732d6757112fe162116eb8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5ec7465fec8bceb477732d6757112fe162116eb8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5ec7465fec8bceb477732d6757112fe162116eb8"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 28,
    "deletions": 6
  },
  "files": [
    {
      "sha": "2acc42a0149dd2f7cb1abaf78b674ab9e80004c0",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01d9317436cd824306b9856861408a40bf8da36a/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01d9317436cd824306b9856861408a40bf8da36a/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=01d9317436cd824306b9856861408a40bf8da36a",
      "patch": "@@ -1,3 +1,7 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-api.c (ctf_type_name_raw): New.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-api.h (ECTF_*): Improve comments."
    },
    {
      "sha": "363b5c258ca654c83f592673c50f0bc74e07a041",
      "filename": "include/ctf-api.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01d9317436cd824306b9856861408a40bf8da36a/include/ctf-api.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01d9317436cd824306b9856861408a40bf8da36a/include/ctf-api.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ctf-api.h?ref=01d9317436cd824306b9856861408a40bf8da36a",
      "patch": "@@ -324,6 +324,7 @@ extern char *ctf_type_aname (ctf_file_t *, ctf_id_t);\n extern char *ctf_type_aname_raw (ctf_file_t *, ctf_id_t);\n extern ssize_t ctf_type_lname (ctf_file_t *, ctf_id_t, char *, size_t);\n extern char *ctf_type_name (ctf_file_t *, ctf_id_t, char *, size_t);\n+extern const char *ctf_type_name_raw (ctf_file_t *, ctf_id_t);\n extern ssize_t ctf_type_size (ctf_file_t *, ctf_id_t);\n extern ssize_t ctf_type_align (ctf_file_t *, ctf_id_t);\n extern int ctf_type_kind (ctf_file_t *, ctf_id_t);"
    },
    {
      "sha": "1754baf83db289d7ed384f8277bf1e9ea8fe2843",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01d9317436cd824306b9856861408a40bf8da36a/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01d9317436cd824306b9856861408a40bf8da36a/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=01d9317436cd824306b9856861408a40bf8da36a",
      "patch": "@@ -1,3 +1,8 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-types.c (ctf_type_name_raw): New.\n+\t(ctf_type_aname_raw): Reimplement accordingly.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-subr.c (ctf_dprintf): _libctf_debug is unlikely to be set."
    },
    {
      "sha": "ce3890c33a68f7e7be10ad1a462072911dafbc22",
      "filename": "libctf/ctf-types.c",
      "status": "modified",
      "additions": 17,
      "deletions": 6,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01d9317436cd824306b9856861408a40bf8da36a/libctf/ctf-types.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01d9317436cd824306b9856861408a40bf8da36a/libctf/ctf-types.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-types.c?ref=01d9317436cd824306b9856861408a40bf8da36a",
      "patch": "@@ -472,19 +472,30 @@ ctf_type_name (ctf_file_t *fp, ctf_id_t type, char *buf, size_t len)\n   return (rv >= 0 && (size_t) rv < len ? buf : NULL);\n }\n \n-/* Lookup the given type ID and return its raw, unadorned, undecorated name as a\n-   new dynamcally-allocated string.  */\n+/* Lookup the given type ID and return its raw, unadorned, undecorated name.\n+   The name will live as long as its ctf_file_t does.  */\n \n-char *\n-ctf_type_aname_raw (ctf_file_t *fp, ctf_id_t type)\n+const char *\n+ctf_type_name_raw (ctf_file_t *fp, ctf_id_t type)\n {\n   const ctf_type_t *tp;\n \n   if ((tp = ctf_lookup_by_id (&fp, type)) == NULL)\n     return NULL;\t\t/* errno is set for us.  */\n \n-  if (ctf_strraw (fp, tp->ctt_name) != NULL)\n-    return strdup (ctf_strraw (fp, tp->ctt_name));\n+  return ctf_strraw (fp, tp->ctt_name);\n+}\n+\n+/* Lookup the given type ID and return its raw, unadorned, undecorated name as a\n+   new dynamically-allocated string.  */\n+\n+char *\n+ctf_type_aname_raw (ctf_file_t *fp, ctf_id_t type)\n+{\n+  const char *name = ctf_type_name_raw (fp, type);\n+\n+  if (name != NULL)\n+    return strdup (name);\n \n   return NULL;\n }"
    },
    {
      "sha": "30a0b087bd657b13e5512f9b8c216a40835271b3",
      "filename": "libctf/libctf.ver",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/01d9317436cd824306b9856861408a40bf8da36a/libctf/libctf.ver",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/01d9317436cd824306b9856861408a40bf8da36a/libctf/libctf.ver",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/libctf.ver?ref=01d9317436cd824306b9856861408a40bf8da36a",
      "patch": "@@ -57,6 +57,7 @@ LIBCTF_1.0 {\n \tctf_type_resolve;\n \tctf_type_lname;\n \tctf_type_name;\n+\tctf_type_name_raw;\n \tctf_type_aname;\n \tctf_type_aname_raw;\n \tctf_type_size;"
    }
  ]
}