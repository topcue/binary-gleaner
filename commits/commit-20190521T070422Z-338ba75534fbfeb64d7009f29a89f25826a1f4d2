{
  "sha": "338ba75534fbfeb64d7009f29a89f25826a1f4d2",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzM4YmE3NTUzNGZiZmViNjRkNzAwOWYyOWE4OWYyNTgyNmExZjRkMg==",
  "commit": {
    "author": {
      "name": "Senthil Kumar Selvaraj",
      "email": "senthilkumar.selvaraj@microchip.com",
      "date": "2019-05-16T11:46:36Z"
    },
    "committer": {
      "name": "Senthil Kumar Selvaraj",
      "email": "senthilkumar.selvaraj@microchip.com",
      "date": "2019-05-21T07:04:22Z"
    },
    "message": "Fix PR 24564 - link fails for some rcalls/rjmps with wraparound\n\nThe current code to compute relative distance in the wrap around case does not\nhandle the edge case of the target (after adjusting for implicit PC increment)\nbeing exactly half of the wrap around distance. This patch fixes that and adds a\ntestcase.\n\nThe range for a forward relative jump call is 4096 bytes ((2 * 2047) + (2 bytes\nfor the implicit PC increment)). If the target of the jump is at a distance of\n4098 bytes, it is out of range for a forward jump - however, a backward jump can\nstill reach that address if pmem-wrap-around is 8192.\n\nAssume address 0 has rjmp to address 4098. With a wrap around of 8192 and\n*without* adjusting for the implicit PC increment of 2 bytes, rjmp .-4096 will\njump to address 4096 (wrap around at 8192 and decreasing addresses from then\non). Adjusting 2 bytes for the implicit PC increment, the actual target is 4098.\n\navr_relative_distance_considering_wrap_around though, does the wrap around only\nif the passed in distance is less than half of the wrap around distance. In this\ncase, it is exactly equal to half (original distance 4098, adjusted distance of\n4096 and wraparound of 8192), and the bypassed wrap around causes the reloc\noverflow error.\n\nFix by wrapping around even if adjusted distance is equal to half of wrap around\ndistance.",
    "tree": {
      "sha": "49680dd9ed1d62be18a568a14643e7fffeb4c204",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/49680dd9ed1d62be18a568a14643e7fffeb4c204"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/338ba75534fbfeb64d7009f29a89f25826a1f4d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/338ba75534fbfeb64d7009f29a89f25826a1f4d2",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/338ba75534fbfeb64d7009f29a89f25826a1f4d2",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/338ba75534fbfeb64d7009f29a89f25826a1f4d2/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "da0523c66604dc11b8787d3e0123ea80a2503f14",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/da0523c66604dc11b8787d3e0123ea80a2503f14",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/da0523c66604dc11b8787d3e0123ea80a2503f14"
    }
  ],
  "stats": {
    "total": 37,
    "additions": 36,
    "deletions": 1
  },
  "files": [
    {
      "sha": "0d7eda4f7089aefdb7d85046c46fd05337599518",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/338ba75534fbfeb64d7009f29a89f25826a1f4d2/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/338ba75534fbfeb64d7009f29a89f25826a1f4d2/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=338ba75534fbfeb64d7009f29a89f25826a1f4d2",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>\n+\n+\tPR ld/24564\n+\t* bfd/elf32-avr.c (avr_relative_distance_considering_wrap_around):\n+\tWrap around even if distance equals avr_pc_wrap_around.\n+\n 2019-05-20  Nick Clifton  <nickc@redhat.com>\n \n \t* po/fr.po: Updated French translation."
    },
    {
      "sha": "f8a843e16c8c5a55a49233db88cf2cb4ff038c96",
      "filename": "bfd/elf32-avr.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/338ba75534fbfeb64d7009f29a89f25826a1f4d2/bfd/elf32-avr.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/338ba75534fbfeb64d7009f29a89f25826a1f4d2/bfd/elf32-avr.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-avr.c?ref=338ba75534fbfeb64d7009f29a89f25826a1f4d2",
      "patch": "@@ -910,7 +910,7 @@ avr_relative_distance_considering_wrap_around (unsigned int distance)\n   unsigned int wrap_around_mask = avr_pc_wrap_around - 1;\n   int dist_with_wrap_around = distance & wrap_around_mask;\n \n-  if (dist_with_wrap_around > ((int) (avr_pc_wrap_around >> 1)))\n+  if (dist_with_wrap_around >= ((int) (avr_pc_wrap_around >> 1)))\n     dist_with_wrap_around -= avr_pc_wrap_around;\n \n   return dist_with_wrap_around;"
    },
    {
      "sha": "20be135c6e03e4406739c73e33172392729730a9",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=338ba75534fbfeb64d7009f29a89f25826a1f4d2",
      "patch": "@@ -1,3 +1,9 @@\n+2019-05-21  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>\n+\n+\tPR ld/24564\n+\t* testsuite/ld-avr/wraparound-range-boundary.d: New test.\n+\t* testsuite/ld-avr/wraparound-range-boundary.s: New test.\n+\n 2019-05-20  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n \n \tPR 14798"
    },
    {
      "sha": "83c12f5e6ffe3289acff21d797f8b43473468059",
      "filename": "ld/testsuite/ld-avr/wraparound-range-boundary.d",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/testsuite/ld-avr/wraparound-range-boundary.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/testsuite/ld-avr/wraparound-range-boundary.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-avr/wraparound-range-boundary.d?ref=338ba75534fbfeb64d7009f29a89f25826a1f4d2",
      "patch": "@@ -0,0 +1,17 @@\n+#name: Wraparound works for jump target at pc-relative range boundary\n+#as: -m avr51\n+#ld: --pmem-wrap-around=8k -m avr51\n+#source: wraparound-range-boundary.s\n+#objdump: -d\n+#target: avr-*-*\n+\n+#...\n+Disassembly of section .text:\n+\n+00000000 <__ctors_end>:\n+       0:\t00 c8       \trjmp\t.\\-4096   \t; 0xfffff002 <__eeprom_end\\+0xff7ef002>\n+\t...\n+\n+00001002 <target>:\n+\t...\n+"
    },
    {
      "sha": "fbea0e1b07489c30ca352014f2250798787ba7e3",
      "filename": "ld/testsuite/ld-avr/wraparound-range-boundary.s",
      "status": "added",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/testsuite/ld-avr/wraparound-range-boundary.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/338ba75534fbfeb64d7009f29a89f25826a1f4d2/ld/testsuite/ld-avr/wraparound-range-boundary.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-avr/wraparound-range-boundary.s?ref=338ba75534fbfeb64d7009f29a89f25826a1f4d2",
      "patch": "@@ -0,0 +1,6 @@\n+.global main\n+main:\n+\trjmp target\n+\t.ds.b 4096\n+target:\n+\tnop"
    }
  ]
}