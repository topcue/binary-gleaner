{
  "sha": "4ddfec930ca5bd57800ebc71daef66f685a6de4d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGRkZmVjOTMwY2E1YmQ1NzgwMGViYzcxZGFlZjY2ZjY4NWE2ZGU0ZA==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-17T16:39:42Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-04-17T22:19:53Z"
    },
    "message": "Fix gdb.base/attach-twice.c build on NetBSD\n\nAdd a fallback definition of PTRACE_ATTACH that is an alias of\nPT_ATTACH. Change the 4th argument of ptrace(2) to 0 as it is\ncompatible with void * (Linux) and int (NetBSD) arguments.\n\nInclude <sys/types.h> for <sys/ptrace.h>.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/attach-twice.c: Include \"sys/types.h\".\n\t(PTRACE_ATTACH): Add fallback definition.\n\t(main): Pass `0' to the 4th argument of `ptrace'.",
    "tree": {
      "sha": "88bc920e27833a742aa686482d0cb80828286140",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/88bc920e27833a742aa686482d0cb80828286140"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ddfec930ca5bd57800ebc71daef66f685a6de4d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ddfec930ca5bd57800ebc71daef66f685a6de4d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ddfec930ca5bd57800ebc71daef66f685a6de4d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ddfec930ca5bd57800ebc71daef66f685a6de4d/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2bed205e44ad853f10416e970de2534554f8cf18",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2bed205e44ad853f10416e970de2534554f8cf18",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2bed205e44ad853f10416e970de2534554f8cf18"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 14,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b24efc772b27d97eb47d355deca35f6b0f510681",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ddfec930ca5bd57800ebc71daef66f685a6de4d/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ddfec930ca5bd57800ebc71daef66f685a6de4d/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4ddfec930ca5bd57800ebc71daef66f685a6de4d",
      "patch": "@@ -1,3 +1,9 @@\n+2020-04-17  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* gdb.base/attach-twice.c: Include \"sys/types.h\".\n+\t(PTRACE_ATTACH): Add fallback definition.\n+\t(main): Pass `0' to the 4th argument of `ptrace'.\n+\n 2020-04-17  Kamil Rytarowski  <n54@gmx.com>\n \n \t* gdb.base/fork-running-state.c: Include \"signal.h\"."
    },
    {
      "sha": "31cd087453fd8dab3eaf333d2fcded504800829e",
      "filename": "gdb/testsuite/gdb.base/attach-twice.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ddfec930ca5bd57800ebc71daef66f685a6de4d/gdb/testsuite/gdb.base/attach-twice.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ddfec930ca5bd57800ebc71daef66f685a6de4d/gdb/testsuite/gdb.base/attach-twice.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/attach-twice.c?ref=4ddfec930ca5bd57800ebc71daef66f685a6de4d",
      "patch": "@@ -18,9 +18,14 @@\n #include <stdio.h>\n #include <stdlib.h>\n #include <unistd.h>\n+#include <sys/types.h>\n #include <sys/ptrace.h>\n #include <errno.h>\n \n+#ifndef PTRACE_ATTACH\n+#define PTRACE_ATTACH PT_ATTACH\n+#endif\n+\n int\n main (void)\n {\n@@ -33,7 +38,9 @@ main (void)\n       exit (1);\n     case 0:\n       errno = 0;\n-      ptrace (PTRACE_ATTACH, getppid (), NULL, NULL);\n+      /* The 4th argument to ptrace () is 0 on purpose, as it is compatible\n+\t between kernels that accept void* (like Linux) and int (NetBSD).  */\n+      ptrace (PTRACE_ATTACH, getppid (), NULL, 0);\n       if (errno != 0)\n \tperror (\"PTRACE_ATTACH\");\n       break;"
    }
  ]
}