{
  "sha": "b9ad36868f46d5270347ef50fd62fde94d68328b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjlhZDM2ODY4ZjQ2ZDUyNzAzNDdlZjUwZmQ2MmZkZTk0ZDY4MzI4Yg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T22:01:34Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:45:50Z"
    },
    "message": "Change tui_data_item_window::content to be a unique_xmalloc_ptr\n\nThis changes tui_data_item_window::content to be a unique_xmalloc_ptr\nand fixes up the fallout.  It also removes a parameter from\ntui_expand_tabs, as it was only ever given one value.\n\nThis also removes some tab-handling code from\ntui_data_window::display_registers_from.  Because the content can only\nbe set by tui_register_format, and because that calls tui_expand_tabs,\nit's not possible to see a tab here.\n\ngdb/ChangeLog\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_item_window)\n\t<~tui_data_item_window>: Remove.\n\t<content>: Now a unique_xmalloc_ptr.\n\t* tui/tui-regs.c (tui_register_format): Return a\n\tunique_xmalloc_ptr.\n\t(tui_get_register): Update.\n\t(~tui_data_item_window): Remove.\n\t(tui_data_window::display_registers_from, tui_display_register):\n\tUpdate.\n\t* tui/tui-io.h (tui_expand_tabs): Update.\n\t* tui/tui-io.c (tui_expand_tabs): Return a unique_xmalloc_ptr.\n\tRemove \"col\" parameter.",
    "tree": {
      "sha": "6962281859638702bcfe090465937a2b6ab51134",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6962281859638702bcfe090465937a2b6ab51134"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b9ad36868f46d5270347ef50fd62fde94d68328b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9ad36868f46d5270347ef50fd62fde94d68328b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b9ad36868f46d5270347ef50fd62fde94d68328b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b9ad36868f46d5270347ef50fd62fde94d68328b/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e114aab8bdab9a988dfc0afbb3fecc17e2d45b6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e114aab8bdab9a988dfc0afbb3fecc17e2d45b6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8e114aab8bdab9a988dfc0afbb3fecc17e2d45b6"
    }
  ],
  "stats": {
    "total": 69,
    "additions": 33,
    "deletions": 36
  },
  "files": [
    {
      "sha": "fd3c8489a8ae7901e33a35e050466f6082c4e179",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=b9ad36868f46d5270347ef50fd62fde94d68328b",
      "patch": "@@ -1,3 +1,18 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_item_window)\n+\t<~tui_data_item_window>: Remove.\n+\t<content>: Now a unique_xmalloc_ptr.\n+\t* tui/tui-regs.c (tui_register_format): Return a\n+\tunique_xmalloc_ptr.\n+\t(tui_get_register): Update.\n+\t(~tui_data_item_window): Remove.\n+\t(tui_data_window::display_registers_from, tui_display_register):\n+\tUpdate.\n+\t* tui/tui-io.h (tui_expand_tabs): Update.\n+\t* tui/tui-io.c (tui_expand_tabs): Return a unique_xmalloc_ptr.\n+\tRemove \"col\" parameter.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_item_window) <value>: Remove"
    },
    {
      "sha": "ac7f09827558801c8d125083adbf131efe5845da",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 6,
      "deletions": 8,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=b9ad36868f46d5270347ef50fd62fde94d68328b",
      "patch": "@@ -1050,19 +1050,17 @@ tui_getc (FILE *fp)\n   return ch;\n }\n \n-/* Utility function to expand TABs in a STRING into spaces.  STRING\n-   will be displayed starting at column COL, and is assumed to include\n-   no newlines.  The returned expanded string is malloc'ed.  */\n+/* See tui-io.h.  */\n \n-char *\n-tui_expand_tabs (const char *string, int col)\n+gdb::unique_xmalloc_ptr<char>\n+tui_expand_tabs (const char *string)\n {\n   int n_adjust, ncol;\n   const char *s;\n   char *ret, *q;\n \n   /* 1. How many additional characters do we need?  */\n-  for (ncol = col, n_adjust = 0, s = string; s; )\n+  for (ncol = 0, n_adjust = 0, s = string; s; )\n     {\n       s = strpbrk (s, \"\\t\");\n       if (s)\n@@ -1079,7 +1077,7 @@ tui_expand_tabs (const char *string, int col)\n   ret = q = (char *) xmalloc (strlen (string) + n_adjust + 1);\n \n   /* 2. Copy the original string while replacing TABs with spaces.  */\n-  for (ncol = col, s = string; s; )\n+  for (ncol = 0, s = string; s; )\n     {\n       const char *s1 = strpbrk (s, \"\\t\");\n       if (s1)\n@@ -1101,5 +1099,5 @@ tui_expand_tabs (const char *string, int col)\n       s = s1;\n     }\n \n-  return ret;\n+  return gdb::unique_xmalloc_ptr<char> (ret);\n }"
    },
    {
      "sha": "ec2378759a2020d714b52ad2ec0b4e9248ee8ff5",
      "filename": "gdb/tui/tui-io.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-io.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-io.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.h?ref=b9ad36868f46d5270347ef50fd62fde94d68328b",
      "patch": "@@ -46,7 +46,7 @@ extern void tui_initialize_io (void);\n extern void tui_redisplay_readline (void);\n \n /* Expand TABs into spaces.  */\n-extern char *tui_expand_tabs (const char *, int);\n+extern gdb::unique_xmalloc_ptr<char> tui_expand_tabs (const char *);\n \n /* Enter/leave reverse video mode.  */\n extern void tui_set_reverse_mode (WINDOW *w, bool reverse);"
    },
    {
      "sha": "a899b1df694b9a181ff8ce93696d17ad4a708e22",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 10,
      "deletions": 24,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=b9ad36868f46d5270347ef50fd62fde94d68328b",
      "patch": "@@ -52,7 +52,7 @@ static void tui_show_register_group (tui_data_window *win_info,\n /* Get the register from the frame and return a printable\n    representation of it.  */\n \n-static char *\n+static gdb::unique_xmalloc_ptr<char>\n tui_register_format (struct frame_info *frame, int regnum)\n {\n   struct gdbarch *gdbarch = get_frame_arch (frame);\n@@ -72,7 +72,7 @@ tui_register_format (struct frame_info *frame, int regnum)\n     str.resize (str.size () - 1);\n \n   /* Expand tabs into spaces, since ncurses on MS-Windows doesn't.  */\n-  return tui_expand_tabs (str.c_str (), 0);\n+  return tui_expand_tabs (str.c_str ());\n }\n \n /* Get the register value from the given frame and format it for the\n@@ -87,27 +87,19 @@ tui_get_register (struct frame_info *frame,\n     *changedp = false;\n   if (target_has_registers)\n     {\n-      char *prev_content = data->content;\n-\n-      data->content = tui_register_format (frame, regnum);\n+      gdb::unique_xmalloc_ptr<char> new_content\n+\t= tui_register_format (frame, regnum);\n \n       if (changedp != NULL\n-\t  && strcmp (prev_content, data->content) != 0)\n+\t  && strcmp (data->content.get (), new_content.get ()) != 0)\n \t*changedp = true;\n \n-      xfree (prev_content);\n+      data->content = std::move (new_content);\n     }\n }\n \n /* See tui-regs.h.  */\n \n-tui_data_item_window::~tui_data_item_window ()\n-{\n-  xfree (content);\n-}\n-\n-/* See tui-regs.h.  */\n-\n int\n tui_data_window::last_regs_line_no () const\n {\n@@ -309,19 +301,13 @@ tui_data_window::display_registers_from (int start_element_no)\n       int max_len = 0;\n       for (auto &&data_item_win : regs_content)\n         {\n-          char *p;\n+          const char *p;\n           int len;\n \n           len = 0;\n-          p = data_item_win->content;\n+          p = data_item_win->content.get ();\n           if (p != 0)\n-            while (*p)\n-              {\n-                if (*p++ == '\\t')\n-                  len = 8 * ((len / 8) + 1);\n-                else\n-                  len++;\n-              }\n+\t    len = strlen (p);\n \n           if (len > max_len)\n             max_len = len;\n@@ -641,7 +627,7 @@ tui_display_register (struct tui_data_item_window *data)\n         waddch (data->handle, ' ');\n       wmove (data->handle, 0, 0);\n       if (data->content)\n-        waddstr (data->handle, data->content);\n+        waddstr (data->handle, data->content.get ());\n \n       if (data->highlight)\n \t/* We ignore the return value, casting it to void in order to avoid"
    },
    {
      "sha": "b70d8df3620e078f4182a82cc8fb8215320c3e2f",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 1,
      "deletions": 3,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b9ad36868f46d5270347ef50fd62fde94d68328b/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=b9ad36868f46d5270347ef50fd62fde94d68328b",
      "patch": "@@ -33,13 +33,11 @@ struct tui_data_item_window : public tui_gen_win_info\n   {\n   }\n \n-  ~tui_data_item_window () override;\n-\n   const char *name = nullptr;\n   /* The register number, or data display number.  */\n   int item_no = -1;\n   bool highlight = false;\n-  char *content = nullptr;\n+  gdb::unique_xmalloc_ptr<char> content;\n };\n \n /* The TUI registers window.  */"
    }
  ]
}