{
  "sha": "8c190ce03837391885bbba9055bea04d36077f9c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGMxOTBjZTAzODM3MzkxODg1YmJiYTkwNTViZWEwNGQzNjA3N2Y5Yw==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-29T13:28:31Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-06-29T13:28:46Z"
    },
    "message": "x86: Support VEX base opcode length > 1\n\nIntel AMX instructions with 8-bit immediate opcode extension without\noperands:\n\ntilerelease, 0, 0x49c0, None, 2, CpuAMX_TILE|Cpu64, Vex|VexOpcode=1|No_bSuf|No_wSuf|No_lSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }\n\nUpdate build_vex_prefix to support VEX base opcode length > 1.\n\n\t* tc-i386.c (build_vex_prefix): Support VEX base opcode length > 1.\n\t(md_assemble): Don't process ImmExt without operands.",
    "tree": {
      "sha": "9c235d4c1c749d7a75ab69135df39698dc985787",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9c235d4c1c749d7a75ab69135df39698dc985787"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8c190ce03837391885bbba9055bea04d36077f9c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c190ce03837391885bbba9055bea04d36077f9c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8c190ce03837391885bbba9055bea04d36077f9c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8c190ce03837391885bbba9055bea04d36077f9c/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a57f74bb7cc15f1116f72c6d70dcc3f31c303ad4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a57f74bb7cc15f1116f72c6d70dcc3f31c303ad4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a57f74bb7cc15f1116f72c6d70dcc3f31c303ad4"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 7,
    "deletions": 6
  },
  "files": [
    {
      "sha": "e3e1c4749f905ae1ae630d9610af945aa83087f1",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c190ce03837391885bbba9055bea04d36077f9c/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c190ce03837391885bbba9055bea04d36077f9c/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=8c190ce03837391885bbba9055bea04d36077f9c",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* tc-i386.c (build_vex_prefix): Support VEX base opcode length > 1.\n+\t(md_assemble): Don't process ImmExt without operands.\n+\n 2020-06-29  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \tPR gas/25331"
    },
    {
      "sha": "be894782a457a6e7902d86b5ed9142102c944e77",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8c190ce03837391885bbba9055bea04d36077f9c/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8c190ce03837391885bbba9055bea04d36077f9c/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=8c190ce03837391885bbba9055bea04d36077f9c",
      "patch": "@@ -3664,7 +3664,7 @@ build_vex_prefix (const insn_template *t)\n \t  }\n     }\n \n-  switch ((i.tm.base_opcode >> 8) & 0xff)\n+  switch ((i.tm.base_opcode >> (i.tm.opcode_length << 3)) & 0xff)\n     {\n     case 0:\n       implied_prefix = 0;\n@@ -4873,12 +4873,8 @@ md_assemble (char *line)\n       if (!process_operands ())\n \treturn;\n     }\n-  else\n+  else if (!quiet_warnings && i.tm.opcode_modifier.ugh)\n     {\n-      if (i.tm.opcode_modifier.immext)\n-\tprocess_immext ();\n-\n-      if (!quiet_warnings && i.tm.opcode_modifier.ugh)\n       /* UnixWare fsub no args is alias for fsubp, fadd -> faddp, etc.  */\n       as_warn (_(\"translating to `%sp'\"), i.tm.name);\n     }"
    }
  ]
}