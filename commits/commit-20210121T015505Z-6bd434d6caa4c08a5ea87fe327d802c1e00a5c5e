{
  "sha": "6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmJkNDM0ZDZjYWE0YzA4YTVlYTg3ZmUzMjdkODAyYzFlMDBhNWM1ZQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T01:55:05Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2021-01-21T01:55:05Z"
    },
    "message": "gdb: make some variables static\n\nI'm trying to enable clang's -Wmissing-variable-declarations warning.\nThis patch fixes all the obvious spots where we can simply add \"static\"\n(at least, found when building on x86-64 Linux).\n\ngdb/ChangeLog:\n\n\t* aarch64-linux-tdep.c (aarch64_linux_record_tdep): Make static.\n\t* aarch64-tdep.c (tdesc_aarch64_list, aarch64_prologue_unwind,\n\taarch64_stub_unwind, aarch64_normal_base, ): Make static.\n\t* arm-linux-tdep.c (arm_prologue_unwind): Make static.\n\t* arm-tdep.c (struct frame_unwind): Make static.\n\t* auto-load.c (auto_load_safe_path_vec): Make static.\n\t* csky-tdep.c (csky_stub_unwind): Make static.\n\t* gdbarch.c (gdbarch_data_registry): Make static.\n\t* gnu-v2-abi.c (gnu_v2_abi_ops): Make static.\n\t* i386-netbsd-tdep.c (i386nbsd_mc_reg_offset): Make static.\n\t* i386-tdep.c (i386_frame_setup_skip_insns,\n\ti386_tramp_chain_in_reg_insns, i386_tramp_chain_on_stack_insns):\n\tMake static.\n\t* infrun.c (observer_mode): Make static.\n\t* linux-nat.c (sigchld_action): Make static.\n\t* linux-thread-db.c (thread_db_list): Make static.\n\t* maint-test-options.c (maintenance_test_options_list):\n\t* mep-tdep.c (mep_csr_registers): Make static.\n\t* mi/mi-cmds.c (struct mi_cmd_stats): Remove struct type name.\n\t(stats): Make static.\n\t* nat/linux-osdata.c (struct osdata_type): Make static.\n\t* ppc-netbsd-tdep.c (ppcnbsd_reg_offsets): Make static.\n\t* progspace.c (last_program_space_num): Make static.\n\t* python/py-param.c (struct parm_constant): Remove struct type\n\tname.\n\t(parm_constants): Make static.\n\t* python/py-record-btrace.c (btpy_list_methods): Make static.\n\t* python/py-record.c (recpy_gap_type): Make static.\n\t* record.c (record_goto_cmdlist): Make static.\n\t* regcache.c (regcache_descr_handle): Make static.\n\t* registry.h (DEFINE_REGISTRY): Make definition static.\n\t* symmisc.c (std_in, std_out, std_err): Make static.\n\t* top.c (previous_saved_command_line): Make static.\n\t* tracepoint.c (trace_user, trace_notes, trace_stop_notes): Make\n\tstatic.\n\t* unittests/command-def-selftests.c (nr_duplicates,\n\tnr_invalid_prefixcmd, lists): Make static.\n\t* unittests/observable-selftests.c (test_notification): Make\n\tstatic.\n\t* unittests/optional/assignment/1.cc (counter): Make static.\n\t* unittests/optional/assignment/2.cc (counter): Make static.\n\t* unittests/optional/assignment/3.cc (counter): Make static.\n\t* unittests/optional/assignment/4.cc (counter): Make static.\n\t* unittests/optional/assignment/5.cc (counter): Make static.\n\t* unittests/optional/assignment/6.cc (counter): Make static.\n\ngdbserver/ChangeLog:\n\n\t* ax.cc (bytecode_address_table): Make static.\n\t* debug.cc (debug_file): Make static.\n\t* linux-low.cc (stopping_threads): Make static.\n\t(step_over_bkpt): Make static.\n\t* linux-x86-low.cc (amd64_emit_ops, i386_emit_ops): Make static.\n\t* tracepoint.cc (stop_tracing_bkpt, flush_trace_buffer_bkpt,\n\talloced_trace_state_variables, trace_buffer_ctrl,\n\ttracing_start_time, tracing_stop_time, tracing_user_name,\n\ttracing_notes, tracing_stop_note): Make static.\n\nChange-Id: Ic1d8034723b7802502bda23770893be2338ab020",
    "tree": {
      "sha": "a4594767b41b738b1003388904f1e9593d0d7c3d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a4594767b41b738b1003388904f1e9593d0d7c3d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a6c11cbb14cea4900a97f8cb20762fefec6fda54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a6c11cbb14cea4900a97f8cb20762fefec6fda54",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a6c11cbb14cea4900a97f8cb20762fefec6fda54"
    }
  ],
  "stats": {
    "total": 192,
    "additions": 124,
    "deletions": 68
  },
  "files": [
    {
      "sha": "a2759ef32b3dd6c127724c2e01240993b478027e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1,3 +1,51 @@\n+2021-01-20  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* aarch64-linux-tdep.c (aarch64_linux_record_tdep): Make static.\n+\t* aarch64-tdep.c (tdesc_aarch64_list, aarch64_prologue_unwind,\n+\taarch64_stub_unwind, aarch64_normal_base, ): Make static.\n+\t* arm-linux-tdep.c (arm_prologue_unwind): Make static.\n+\t* arm-tdep.c (struct frame_unwind): Make static.\n+\t* auto-load.c (auto_load_safe_path_vec): Make static.\n+\t* csky-tdep.c (csky_stub_unwind): Make static.\n+\t* gdbarch.c (gdbarch_data_registry): Make static.\n+\t* gnu-v2-abi.c (gnu_v2_abi_ops): Make static.\n+\t* i386-netbsd-tdep.c (i386nbsd_mc_reg_offset): Make static.\n+\t* i386-tdep.c (i386_frame_setup_skip_insns,\n+\ti386_tramp_chain_in_reg_insns, i386_tramp_chain_on_stack_insns):\n+\tMake static.\n+\t* infrun.c (observer_mode): Make static.\n+\t* linux-nat.c (sigchld_action): Make static.\n+\t* linux-thread-db.c (thread_db_list): Make static.\n+\t* maint-test-options.c (maintenance_test_options_list):\n+\t* mep-tdep.c (mep_csr_registers): Make static.\n+\t* mi/mi-cmds.c (struct mi_cmd_stats): Remove struct type name.\n+\t(stats): Make static.\n+\t* nat/linux-osdata.c (struct osdata_type): Make static.\n+\t* ppc-netbsd-tdep.c (ppcnbsd_reg_offsets): Make static.\n+\t* progspace.c (last_program_space_num): Make static.\n+\t* python/py-param.c (struct parm_constant): Remove struct type\n+\tname.\n+\t(parm_constants): Make static.\n+\t* python/py-record-btrace.c (btpy_list_methods): Make static.\n+\t* python/py-record.c (recpy_gap_type): Make static.\n+\t* record.c (record_goto_cmdlist): Make static.\n+\t* regcache.c (regcache_descr_handle): Make static.\n+\t* registry.h (DEFINE_REGISTRY): Make definition static.\n+\t* symmisc.c (std_in, std_out, std_err): Make static.\n+\t* top.c (previous_saved_command_line): Make static.\n+\t* tracepoint.c (trace_user, trace_notes, trace_stop_notes): Make\n+\tstatic.\n+\t* unittests/command-def-selftests.c (nr_duplicates,\n+\tnr_invalid_prefixcmd, lists): Make static.\n+\t* unittests/observable-selftests.c (test_notification): Make\n+\tstatic.\n+\t* unittests/optional/assignment/1.cc (counter): Make static.\n+\t* unittests/optional/assignment/2.cc (counter): Make static.\n+\t* unittests/optional/assignment/3.cc (counter): Make static.\n+\t* unittests/optional/assignment/4.cc (counter): Make static.\n+\t* unittests/optional/assignment/5.cc (counter): Make static.\n+\t* unittests/optional/assignment/6.cc (counter): Make static.\n+\n 2021-01-20  Joel Sherrill  <joel@rtems.org>\n \n \tPR gdb/27219"
    },
    {
      "sha": "b1bbd55e5c328642b3bd4c369280c11c0b3b8681",
      "filename": "gdb/aarch64-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/aarch64-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/aarch64-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-linux-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -849,7 +849,7 @@ aarch64_stap_parse_special_token (struct gdbarch *gdbarch,\n \n /* AArch64 process record-replay constructs: syscall, signal etc.  */\n \n-struct linux_record_tdep aarch64_linux_record_tdep;\n+static linux_record_tdep aarch64_linux_record_tdep;\n \n /* Enum that defines the AArch64 linux specific syscall identifiers used for\n    process record/replay.  */"
    },
    {
      "sha": "d1e15497a46ca250d606f4da77ad653fecc41e1c",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -58,7 +58,7 @@\n #define HA_MAX_NUM_FLDS\t\t4\n \n /* All possible aarch64 target descriptors.  */\n-struct target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n+static target_desc *tdesc_aarch64_list[AARCH64_MAX_SVE_VQ + 1][2/*pauth*/];\n \n /* The standard register names, and all the valid aliases for them.  */\n static const struct\n@@ -1109,7 +1109,7 @@ aarch64_prologue_prev_register (struct frame_info *this_frame,\n }\n \n /* AArch64 prologue unwinder.  */\n-struct frame_unwind aarch64_prologue_unwind =\n+static frame_unwind aarch64_prologue_unwind =\n {\n   NORMAL_FRAME,\n   aarch64_prologue_frame_unwind_stop_reason,\n@@ -1203,7 +1203,7 @@ aarch64_stub_unwind_sniffer (const struct frame_unwind *self,\n }\n \n /* AArch64 stub unwinder.  */\n-struct frame_unwind aarch64_stub_unwind =\n+static frame_unwind aarch64_stub_unwind =\n {\n   NORMAL_FRAME,\n   aarch64_stub_frame_unwind_stop_reason,\n@@ -1225,7 +1225,7 @@ aarch64_normal_frame_base (struct frame_info *this_frame, void **this_cache)\n }\n \n /* AArch64 default frame base information.  */\n-struct frame_base aarch64_normal_base =\n+static frame_base aarch64_normal_base =\n {\n   &aarch64_prologue_unwind,\n   aarch64_normal_frame_base,"
    },
    {
      "sha": "20cae5bdc91872452f54c8b3f50eb3f09eae22d2",
      "filename": "gdb/arm-linux-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/arm-linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/arm-linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-linux-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1248,7 +1248,7 @@ arm_stap_parse_special_token (struct gdbarch *gdbarch,\n \n /* ARM process record-replay constructs: syscall, signal etc.  */\n \n-struct linux_record_tdep arm_linux_record_tdep;\n+static linux_record_tdep arm_linux_record_tdep;\n \n /* arm_canonicalize_syscall maps from the native arm Linux set\n    of syscall ids into a canonical set of syscall ids used by"
    },
    {
      "sha": "7916c974ac016040a9d41d04ada1562c41e87929",
      "filename": "gdb/arm-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/arm-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/arm-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arm-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -2024,7 +2024,7 @@ arm_prologue_prev_register (struct frame_info *this_frame,\n \t\t\t\t       prev_regnum);\n }\n \n-struct frame_unwind arm_prologue_unwind = {\n+static frame_unwind arm_prologue_unwind = {\n   NORMAL_FRAME,\n   arm_prologue_unwind_stop_reason,\n   arm_prologue_this_id,"
    },
    {
      "sha": "522f43b704cb32027c8246b37354290b6ba78b48",
      "filename": "gdb/auto-load.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/auto-load.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/auto-load.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/auto-load.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -170,7 +170,7 @@ static char *auto_load_safe_path;\n /* Vector of directory elements of AUTO_LOAD_SAFE_PATH with each one normalized\n    by tilde_expand and possibly each entries has added its gdb_realpath\n    counterpart.  */\n-std::vector<gdb::unique_xmalloc_ptr<char>> auto_load_safe_path_vec;\n+static std::vector<gdb::unique_xmalloc_ptr<char>> auto_load_safe_path_vec;\n \n /* Expand $datadir and $debugdir in STRING according to the rules of\n    substitute_path_component.  */"
    },
    {
      "sha": "609b684265f7434e6cc8bdcb912285b5b27ffeb1",
      "filename": "gdb/csky-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/csky-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/csky-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/csky-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1998,7 +1998,7 @@ csky_stub_prev_register (struct frame_info *this_frame,\n \t\t\t\t       prev_regnum);\n }\n \n-struct frame_unwind csky_stub_unwind = {\n+static frame_unwind csky_stub_unwind = {\n   NORMAL_FRAME,\n   default_frame_unwind_stop_reason,\n   csky_stub_this_id,"
    },
    {
      "sha": "43d1c154a7f1e3ba1c56ee02725316436ada3790",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -5314,7 +5314,7 @@ struct gdbarch_data_registry\n   struct gdbarch_data_registration *registrations;\n };\n \n-struct gdbarch_data_registry gdbarch_data_registry =\n+static struct gdbarch_data_registry gdbarch_data_registry =\n {\n   0, NULL,\n };"
    },
    {
      "sha": "466ae6c080279869c45ee19ac16bc9e2c39f2dbf",
      "filename": "gdb/gnu-v2-abi.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/gnu-v2-abi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/gnu-v2-abi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gnu-v2-abi.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -29,7 +29,7 @@\n #include \"cp-support.h\"\n #include <ctype.h>\n \n-struct cp_abi_ops gnu_v2_abi_ops;\n+static cp_abi_ops gnu_v2_abi_ops;\n \n static int vb_match (struct type *, int, struct type *);\n "
    },
    {
      "sha": "76dcc4db1501e42e206a8ca36d1936949974505e",
      "filename": "gdb/i386-netbsd-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/i386-netbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/i386-netbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-netbsd-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -76,7 +76,7 @@ static int i386nbsd_sc_reg_offset[] =\n };\n \n /* From <machine/mcontext.h>.  */\n-int i386nbsd_mc_reg_offset[] =\n+static int i386nbsd_mc_reg_offset[] =\n {\n   11 * 4,\t\t\t/* %eax */\n   10 * 4,\t\t\t/* %ecx */"
    },
    {
      "sha": "6386716c3b85269ab318d35d2261b0602ae3dcb6",
      "filename": "gdb/i386-tdep.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/i386-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/i386-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/i386-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1467,7 +1467,7 @@ i386_match_insn_block (CORE_ADDR pc, struct i386_insn *insn_patterns)\n    yet, and only the scratch registers %eax, %ecx and %edx can be\n    touched.  */\n \n-struct i386_insn i386_frame_setup_skip_insns[] =\n+static i386_insn i386_frame_setup_skip_insns[] =\n {\n   /* Check for `movb imm8, r' and `movl imm32, r'.\n     \n@@ -2333,7 +2333,7 @@ static const struct frame_unwind i386_epilogue_frame_unwind =\n \n /* Static chain passed in register.  */\n \n-struct i386_insn i386_tramp_chain_in_reg_insns[] =\n+static i386_insn i386_tramp_chain_in_reg_insns[] =\n {\n   /* `movl imm32, %eax' and `movl imm32, %ecx' */\n   { 5, { 0xb8 }, { 0xfe } },\n@@ -2346,7 +2346,7 @@ struct i386_insn i386_tramp_chain_in_reg_insns[] =\n \n /* Static chain passed on stack (when regparm=3).  */\n \n-struct i386_insn i386_tramp_chain_on_stack_insns[] =\n+static i386_insn i386_tramp_chain_on_stack_insns[] =\n {\n   /* `push imm32' */\n   { 5, { 0x68 }, { 0xff } },"
    },
    {
      "sha": "3f143971707a7a8f8e1d6b93c6509e89d7b7f0cb",
      "filename": "gdb/infrun.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/infrun.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/infrun.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/infrun.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -221,7 +221,7 @@ show_non_stop (struct ui_file *file, int from_tty,\n    non-stop, in which all GDB operations that might affect the\n    target's execution have been disabled.  */\n \n-bool observer_mode = false;\n+static bool observer_mode = false;\n static bool observer_mode_1 = false;\n \n static void"
    },
    {
      "sha": "3c7117bff6e616376201988ee77a591244329ebc",
      "filename": "gdb/linux-nat.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/linux-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/linux-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-nat.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -757,7 +757,7 @@ static sigset_t suspend_mask;\n static sigset_t blocked_mask;\n \n /* SIGCHLD action.  */\n-struct sigaction sigchld_action;\n+static struct sigaction sigchld_action;\n \n /* Block child signals (SIGCHLD and linux threads signals), and store\n    the previous mask in PREV_MASK.  */"
    },
    {
      "sha": "0a32e40f4d5f17443ee9934ab8393989fdaf6830",
      "filename": "gdb/linux-thread-db.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/linux-thread-db.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/linux-thread-db.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-thread-db.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -209,7 +209,7 @@ struct thread_db_info\n \n /* List of known processes using thread_db, and the required\n    bookkeeping.  */\n-struct thread_db_info *thread_db_list;\n+static thread_db_info *thread_db_list;\n \n static void thread_db_find_new_threads_1 (thread_info *stopped);\n static void thread_db_find_new_threads_2 (thread_info *stopped,"
    },
    {
      "sha": "16ecd1dd7e58b711810dcc65c285295af7269298",
      "filename": "gdb/maint-test-options.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/maint-test-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/maint-test-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint-test-options.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -409,7 +409,7 @@ maintenance_test_options_unknown_is_operand_command_completer\n }\n \n /* Command list for maint test-options.  */\n-struct cmd_list_element *maintenance_test_options_list;\n+static cmd_list_element *maintenance_test_options_list;\n \n \f\n void _initialize_maint_test_options ();"
    },
    {
      "sha": "0dcfa48d67c118a068077e51dba386259ac45401",
      "filename": "gdb/mep-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/mep-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/mep-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mep-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -661,7 +661,7 @@ struct mep_csr_register\n    We just list the register numbers here explicitly to help catch\n    typos.  */\n #define CSR(name) MEP_RAW_ ## name ## _REGNUM, MEP_ ## name ## _REGNUM\n-struct mep_csr_register mep_csr_registers[] = {\n+static mep_csr_register mep_csr_registers[] = {\n   { CSR(PC),    0xffffffff },   /* manual says r/o, but we can write it */\n   { CSR(LP),    0xffffffff },\n   { CSR(SAR),   0x0000003f },"
    },
    {
      "sha": "df4290ae5dcc05ac04763edb253b93df75e7fd5a",
      "filename": "gdb/mi/mi-cmds.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/mi/mi-cmds.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/mi/mi-cmds.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmds.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -220,13 +220,12 @@ mi_lookup (const char *command)\n \n /* Used for collecting hash hit/miss statistics.  */\n \n-struct mi_cmd_stats\n+static struct\n {\n   int hit;\n   int miss;\n   int rehash;\n-};\n-struct mi_cmd_stats stats;\n+} stats;\n \n /* Look up a command.  */\n "
    },
    {
      "sha": "7034dd8237626502e7908ac6cdb55229213de6f4",
      "filename": "gdb/nat/linux-osdata.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/nat/linux-osdata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/nat/linux-osdata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/linux-osdata.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1284,7 +1284,7 @@ linux_xfer_osdata_modules (struct buffer *buffer)\n \n static void linux_xfer_osdata_info_os_types (struct buffer *buffer);\n \n-struct osdata_type {\n+static struct osdata_type {\n   const char *type;\n   const char *title;\n   const char *description;"
    },
    {
      "sha": "31f11993889444f5ae39c3ae47c9a893b88f2cf3",
      "filename": "gdb/ppc-netbsd-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/ppc-netbsd-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/ppc-netbsd-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-netbsd-tdep.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -33,7 +33,7 @@\n #include \"solib-svr4.h\"\n \n /* Register offsets from <machine/reg.h>.  */\n-struct ppc_reg_offsets ppcnbsd_reg_offsets;\n+static ppc_reg_offsets ppcnbsd_reg_offsets;\n \f\n \n /* Core file support.  */"
    },
    {
      "sha": "ebbc784dcfbb5fb8f57aa80f1882d98ff063db82",
      "filename": "gdb/progspace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/progspace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/progspace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/progspace.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -29,7 +29,7 @@\n #include <algorithm>\n \n /* The last program space number assigned.  */\n-int last_program_space_num = 0;\n+static int last_program_space_num = 0;\n \n /* The head of the program spaces list.  */\n std::vector<struct program_space *> program_spaces;"
    },
    {
      "sha": "49819ce4f109202b599a8b71949bafb988272da3",
      "filename": "gdb/python/py-param.c",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-param.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-param.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-param.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -29,13 +29,10 @@\n #include \"arch-utils.h\"\n \n /* Parameter constants and their values.  */\n-struct parm_constant\n-{\n+static struct {\n   const char *name;\n   int value;\n-};\n-\n-struct parm_constant parm_constants[] =\n+} parm_constants[] =\n {\n   { \"PARAM_BOOLEAN\", var_boolean }, /* ARI: var_boolean */\n   { \"PARAM_AUTO_BOOLEAN\", var_auto_boolean },"
    },
    {
      "sha": "1c10a0598dafcc3111ceb80c82c3f85385938b4b",
      "filename": "gdb/python/py-record-btrace.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-record-btrace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-record-btrace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-record-btrace.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -808,7 +808,7 @@ recpy_bt_goto (PyObject *self, PyObject *args)\n \n /* BtraceList methods.  */\n \n-struct PyMethodDef btpy_list_methods[] =\n+static PyMethodDef btpy_list_methods[] =\n {\n   { \"count\", btpy_list_count, METH_O, \"count number of occurrences\"},\n   { \"index\", btpy_list_index, METH_O, \"index of entry\"},"
    },
    {
      "sha": "1747f74d7e668f37f94c5ccc962bd4258299f5f7",
      "filename": "gdb/python/py-record.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/python/py-record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-record.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -45,7 +45,7 @@ PyTypeObject recpy_func_type = {\n \n /* Python RecordGap type.  */\n \n-PyTypeObject recpy_gap_type = {\n+static PyTypeObject recpy_gap_type = {\n   PyVarObject_HEAD_INIT (NULL, 0)\n };\n "
    },
    {
      "sha": "cd541b56f43879bf5407eabc56047407be60306f",
      "filename": "gdb/record.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/record.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/record.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/record.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -48,7 +48,7 @@ static unsigned int record_call_history_size = 10;\n static unsigned int record_call_history_size_setshow_var;\n \n struct cmd_list_element *record_cmdlist = NULL;\n-struct cmd_list_element *record_goto_cmdlist = NULL;\n+static struct cmd_list_element *record_goto_cmdlist = NULL;\n struct cmd_list_element *set_record_cmdlist = NULL;\n struct cmd_list_element *show_record_cmdlist = NULL;\n struct cmd_list_element *info_record_cmdlist = NULL;"
    },
    {
      "sha": "27c0ae5ae2398bd4b1bbf85a5214c80baee271aa",
      "filename": "gdb/regcache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/regcache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/regcache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/regcache.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -41,7 +41,7 @@\n /* Per-architecture object describing the layout of a register cache.\n    Computed once when the architecture is created.  */\n \n-struct gdbarch_data *regcache_descr_handle;\n+static struct gdbarch_data *regcache_descr_handle;\n \n struct regcache_descr\n {"
    },
    {
      "sha": "7b0b284c7ae6c028b79a14899e78c4ac54218d10",
      "filename": "gdb/registry.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/registry.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/registry.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/registry.h?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -154,7 +154,7 @@ void *registry_data (struct registry_fields *fields,\n /* Define a new registry implementation.  */\n \n #define DEFINE_REGISTRY(TAG, ACCESS)\t\t\t\t\t\\\n-struct registry_data_registry TAG ## _data_registry = { NULL, 0 };\t\\\n+static struct registry_data_registry TAG ## _data_registry = { NULL, 0 }; \\\n \t\t\t\t\t\t\t\t\t\\\n const struct TAG ## _data *\t\t\t\t\t\t\\\n register_ ## TAG ## _data_with_cleanup (void (*save) (struct TAG *, void *), \\"
    },
    {
      "sha": "a8f8856f721891e2a8c96f71a206fe23151a114b",
      "filename": "gdb/symmisc.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/symmisc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/symmisc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symmisc.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -47,9 +47,9 @@\n    debugging GDB with itself.  Because stdin et al need not be constants,\n    we initialize them in the _initialize_symmisc function at the bottom\n    of the file.  */\n-FILE *std_in;\n-FILE *std_out;\n-FILE *std_err;\n+static FILE *std_in;\n+static FILE *std_out;\n+static FILE *std_err;\n \n /* Prototypes for local functions */\n "
    },
    {
      "sha": "4b0defd58fcf8b2db82be2962e717426385e5530",
      "filename": "gdb/top.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/top.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/top.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/top.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -161,7 +161,7 @@ static const char *repeat_arguments;\n    command.  We need this as when a command is running, saved_command_line\n    already contains the line of the currently executing command.  */\n \n-char *previous_saved_command_line;\n+static char *previous_saved_command_line;\n \n /* If not NULL, the arguments that should be passed if the\n    previous_saved_command_line is repeated.  */"
    },
    {
      "sha": "0cbd2c68224997be66c2b215d593967846f87ec1",
      "filename": "gdb/tracepoint.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/tracepoint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/tracepoint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tracepoint.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -145,15 +145,15 @@ static int trace_buffer_size = -1;\n \n /* Textual notes applying to the current and/or future trace runs.  */\n \n-char *trace_user = NULL;\n+static char *trace_user = NULL;\n \n /* Textual notes applying to the current and/or future trace runs.  */\n \n-char *trace_notes = NULL;\n+static char *trace_notes = NULL;\n \n /* Textual notes applying to the stopping of a trace.  */\n \n-char *trace_stop_notes = NULL;\n+static char *trace_stop_notes = NULL;\n \n /* support routines */\n "
    },
    {
      "sha": "e6aadf3124fabcd34b29ccc412e907987e765fea",
      "filename": "gdb/unittests/command-def-selftests.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/command-def-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/command-def-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/command-def-selftests.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -107,13 +107,13 @@ help_doc_invariants_tests ()\n namespace command_structure_tests {\n \n /* Nr of commands in which a duplicated list is found.  */\n-unsigned int nr_duplicates = 0;\n+static unsigned int nr_duplicates = 0;\n /* Nr of commands in a list having no valid prefix cmd.  */\n-unsigned int nr_invalid_prefixcmd = 0;\n+static unsigned int nr_invalid_prefixcmd = 0;\n \n /* A map associating a list with the prefix leading to it.  */\n \n-std::map<cmd_list_element **, const char *> lists;\n+static std::map<cmd_list_element **, const char *> lists;\n \n /* Store each command list in lists, associated with the prefix to reach it.  A\n    list must only be found once."
    },
    {
      "sha": "e19eaf810249b43dd030f596ee1ba921a23800a0",
      "filename": "gdb/unittests/observable-selftests.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/observable-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/observable-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/observable-selftests.c?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -24,7 +24,7 @@\n namespace selftests {\n namespace observers {\n \n-gdb::observers::observable<int> test_notification (\"test_notification\");\n+static gdb::observers::observable<int> test_notification (\"test_notification\");\n \n static int test_first_observer = 0;\n static int test_second_observer = 0;"
    },
    {
      "sha": "80eaa24a2abdf32205d9ec17bbe452093676fb38",
      "filename": "gdb/unittests/optional/assignment/1.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/1.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/1.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/1.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -19,7 +19,7 @@ namespace assign_1 {\n \n struct exception {};\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "85c41c555130f39fcca973ae63a8fb383eb9c438",
      "filename": "gdb/unittests/optional/assignment/2.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/2.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/2.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/2.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -19,7 +19,7 @@ namespace assign_2 {\n \n struct exception {};\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "03f6018c2183a71b8e0390e9a47f5aee52adffe1",
      "filename": "gdb/unittests/optional/assignment/3.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/3.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/3.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/3.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -19,7 +19,7 @@ namespace assign_3 {\n \n struct exception {};\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "aa04292f97589ba720dbac372d38d8146f0f54d0",
      "filename": "gdb/unittests/optional/assignment/4.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/4.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/4.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/4.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -19,7 +19,7 @@ namespace assign_4 {\n \n struct exception {};\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "8c27e7b6f2226183bc830d62be376290f158a549",
      "filename": "gdb/unittests/optional/assignment/5.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/5.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/5.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/5.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -17,7 +17,7 @@\n \n namespace assign_5 {\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "da01fd5d924ba640930a6acb4037ea71f64e258f",
      "filename": "gdb/unittests/optional/assignment/6.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/6.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdb/unittests/optional/assignment/6.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/optional/assignment/6.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -17,7 +17,7 @@\n \n namespace assign_6 {\n \n-int counter = 0;\n+static int counter = 0;\n \n struct mixin_counter\n {"
    },
    {
      "sha": "2f883e05b5cd4ea3ad7e416539e48eb1e05a7a8a",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -1,3 +1,15 @@\n+2021-01-20  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* ax.cc (bytecode_address_table): Make static.\n+\t* debug.cc (debug_file): Make static.\n+\t* linux-low.cc (stopping_threads): Make static.\n+\t(step_over_bkpt): Make static.\n+\t* linux-x86-low.cc (amd64_emit_ops, i386_emit_ops): Make static.\n+\t* tracepoint.cc (stop_tracing_bkpt, flush_trace_buffer_bkpt,\n+\talloced_trace_state_variables, trace_buffer_ctrl,\n+\ttracing_start_time, tracing_stop_time, tracing_user_name,\n+\ttracing_notes, tracing_stop_note): Make static.\n+\n 2021-01-20  Tom de Vries  <tdevries@suse.de>\n \n \t* linux-x86-low.cc (collect_register_i386): New function."
    },
    {
      "sha": "a217a3d3dadd9b9858fc84fb2985784f07ceab98",
      "filename": "gdbserver/ax.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/ax.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/ax.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ax.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -146,7 +146,7 @@ CORE_ADDR current_insn_ptr;\n \n int emit_error;\n \n-struct bytecode_address\n+static struct bytecode_address\n {\n   int pc;\n   CORE_ADDR address;"
    },
    {
      "sha": "12f6db0316f3f071048c06b38a2cac86318bfeed",
      "filename": "gdbserver/debug.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/debug.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/debug.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/debug.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -24,7 +24,7 @@ int remote_debug = 0;\n #endif\n \n /* Output file for debugging.  Default to standard error.  */\n-FILE *debug_file = stderr;\n+static FILE *debug_file = stderr;\n \n /* See debug.h.  */\n int debug_threads;"
    },
    {
      "sha": "d167914d63eefae8b2f83293e80f8405b540ba0c",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -253,7 +253,7 @@ enum stopping_threads_kind\n   };\n \n /* This is set while stop_all_lwps is in effect.  */\n-enum stopping_threads_kind stopping_threads = NOT_STOPPING_THREADS;\n+static stopping_threads_kind stopping_threads = NOT_STOPPING_THREADS;\n \n /* FIXME make into a target method?  */\n int using_threads = 1;\n@@ -272,7 +272,7 @@ static int check_ptrace_stopped_lwp_gone (struct lwp_info *lp);\n \n /* When the event-loop is doing a step-over, this points at the thread\n    being stepped.  */\n-ptid_t step_over_bkpt;\n+static ptid_t step_over_bkpt;\n \n bool\n linux_process_target::low_supports_breakpoints ()"
    },
    {
      "sha": "58ca4bab2958824682ecded01934ed111a5a5b0a",
      "filename": "gdbserver/linux-x86-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/linux-x86-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/linux-x86-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-x86-low.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -2219,7 +2219,7 @@ amd64_emit_ge_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-struct emit_ops amd64_emit_ops =\n+static emit_ops amd64_emit_ops =\n   {\n     amd64_emit_prologue,\n     amd64_emit_epilogue,\n@@ -2888,7 +2888,7 @@ i386_emit_ge_goto (int *offset_p, int *size_p)\n     *size_p = 4;\n }\n \n-struct emit_ops i386_emit_ops =\n+static emit_ops i386_emit_ops =\n   {\n     i386_emit_prologue,\n     i386_emit_epilogue,"
    },
    {
      "sha": "bc8fb267e90b8f9a675db6a25199cc9dae7b7636",
      "filename": "gdbserver/tracepoint.cc",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/tracepoint.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e/gdbserver/tracepoint.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/tracepoint.cc?ref=6bd434d6caa4c08a5ea87fe327d802c1e00a5c5e",
      "patch": "@@ -402,11 +402,11 @@ tracepoint_handler (CORE_ADDR address)\n }\n \n /* Breakpoint at \"stop_tracing\" in the inferior lib.  */\n-struct breakpoint *stop_tracing_bkpt;\n+static struct breakpoint *stop_tracing_bkpt;\n static int stop_tracing_handler (CORE_ADDR);\n \n /* Breakpoint at \"flush_trace_buffer\" in the inferior lib.  */\n-struct breakpoint *flush_trace_buffer_bkpt;\n+static struct breakpoint *flush_trace_buffer_bkpt;\n static int flush_trace_buffer_handler (CORE_ADDR);\n \n static void download_trace_state_variables (void);\n@@ -912,7 +912,7 @@ struct trace_state_variable\n /* Linked list of all trace state variables.  */\n \n #ifdef IN_PROCESS_AGENT\n-struct trace_state_variable *alloced_trace_state_variables;\n+static struct trace_state_variable *alloced_trace_state_variables;\n #endif\n \n IP_AGENT_EXPORT_VAR struct trace_state_variable *trace_state_variables;\n@@ -1170,7 +1170,7 @@ IP_AGENT_EXPORT_VAR unsigned int trace_buffer_ctrl_curr;\n    it doesn't need to sync with itself.  Define it as array anyway so\n    that the rest of the code base doesn't need to care for the\n    difference.  */\n-struct trace_buffer_control trace_buffer_ctrl[1];\n+static trace_buffer_control trace_buffer_ctrl[1];\n # define TRACE_BUFFER_CTRL_CURR 0\n #endif\n \n@@ -1264,23 +1264,23 @@ static int tracing_stop_tpnum;\n /* 64-bit timestamps for the trace run's start and finish, expressed\n    in microseconds from the Unix epoch.  */\n \n-LONGEST tracing_start_time;\n-LONGEST tracing_stop_time;\n+static LONGEST tracing_start_time;\n+static LONGEST tracing_stop_time;\n \n /* The (optional) user-supplied name of the user that started the run.\n    This is an arbitrary string, and may be NULL.  */\n \n-char *tracing_user_name;\n+static char *tracing_user_name;\n \n /* Optional user-supplied text describing the run.  This is\n    an arbitrary string, and may be NULL.  */\n \n-char *tracing_notes;\n+static char *tracing_notes;\n \n /* Optional user-supplied text explaining a tstop command.  This is an\n    arbitrary string, and may be NULL.  */\n \n-char *tracing_stop_note;\n+static char *tracing_stop_note;\n \n #endif\n "
    }
  ]
}