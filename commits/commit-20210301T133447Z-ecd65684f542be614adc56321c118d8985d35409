{
  "sha": "ecd65684f542be614adc56321c118d8985d35409",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWNkNjU2ODRmNTQyYmU2MTRhZGM1NjMyMWMxMThkODk4NWQzNTQwOQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-01T13:34:34Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2021-03-01T13:34:47Z"
    },
    "message": "Warn for missing separate debug files only if needed\n\nWe shouldn't warn missing separate debug files when debug info isn't\nneeded.\n\n\tPR binutils/27486\n\t* dwarf.c (load_separate_debug_info): Issue warning only if\n\tdo_debug_links is set.\n\t* testsuite/binutils-all/compress.exp: Run objdump and readelf\n\twith missing debug file.",
    "tree": {
      "sha": "f1dbd3ff9c0df14b52d30372dc3cc54f0a07b186",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f1dbd3ff9c0df14b52d30372dc3cc54f0a07b186"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ecd65684f542be614adc56321c118d8985d35409",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecd65684f542be614adc56321c118d8985d35409",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ecd65684f542be614adc56321c118d8985d35409",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ecd65684f542be614adc56321c118d8985d35409/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ee10e86093150c70360d9e26b29e6d9b6398f33",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ee10e86093150c70360d9e26b29e6d9b6398f33"
    }
  ],
  "stats": {
    "total": 77,
    "additions": 54,
    "deletions": 23
  },
  "files": [
    {
      "sha": "3aec667d16af27f848421c377b78c438bb07e12b",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecd65684f542be614adc56321c118d8985d35409/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecd65684f542be614adc56321c118d8985d35409/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=ecd65684f542be614adc56321c118d8985d35409",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/27486\n+\t* dwarf.c (load_separate_debug_info): Issue warning only if\n+\tdo_debug_links is set.\n+\t* testsuite/binutils-all/compress.exp: Run objdump and readelf\n+\twith missing debug file.\n+\n 2021-03-01  Alan Modra  <amodra@gmail.com>\n \n \tPR 27128"
    },
    {
      "sha": "f50b7eeaeb18f15cd32bd00b3b05646ffd8fa2f8",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 31,
      "deletions": 23,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecd65684f542be614adc56321c118d8985d35409/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecd65684f542be614adc56321c118d8985d35409/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=ecd65684f542be614adc56321c118d8985d35409",
      "patch": "@@ -11210,44 +11210,52 @@ load_separate_debug_info (const char *            main_filename,\n   }\n #endif\n \n-  /* Failed to find the file.  */\n-  warn (_(\"could not find separate debug file '%s'\\n\"), separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+  if (do_debug_links)\n+    {\n+      /* Failed to find the file.  */\n+      warn (_(\"could not find separate debug file '%s'\\n\"),\n+\t    separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n #ifdef EXTRA_DEBUG_ROOT2\n-  sprintf (debug_filename, \"%s/%s\", EXTRA_DEBUG_ROOT2, separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s/%s\", EXTRA_DEBUG_ROOT2,\n+\t       separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n #endif\n \n #ifdef EXTRA_DEBUG_ROOT1\n-  sprintf (debug_filename, \"%s/%s/%s\", EXTRA_DEBUG_ROOT1, canon_dir, separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s/%s/%s\", EXTRA_DEBUG_ROOT1,\n+\t       canon_dir, separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n-  sprintf (debug_filename, \"%s/%s\", EXTRA_DEBUG_ROOT1, separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s/%s\", EXTRA_DEBUG_ROOT1,\n+\t       separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n #endif\n \n-  sprintf (debug_filename, \"%s.debug/%s\", canon_dir, separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s.debug/%s\", canon_dir,\n+\t       separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n-  sprintf (debug_filename, \"%s%s\", canon_dir, separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s%s\", canon_dir, separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n-  sprintf (debug_filename, \".debug/%s\", separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \".debug/%s\", separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n-  sprintf (debug_filename, \"%s\", separate_filename);\n-  warn (_(\"tried: %s\\n\"), debug_filename);\n+      sprintf (debug_filename, \"%s\", separate_filename);\n+      warn (_(\"tried: %s\\n\"), debug_filename);\n \n #if HAVE_LIBDEBUGINFOD\n-  {\n-    char *urls = getenv (DEBUGINFOD_URLS_ENV_VAR);\n-    if (urls == NULL)\n-      urls = \"\";\n+      {\n+\tchar *urls = getenv (DEBUGINFOD_URLS_ENV_VAR);\n+\tif (urls == NULL)\n+\t  urls = \"\";\n \n-    warn (_(\"tried: DEBUGINFOD_URLS=%s\\n\"), urls);\n-  }\n+\twarn (_(\"tried: DEBUGINFOD_URLS=%s\\n\"), urls);\n+      }\n #endif\n+    }\n \n   free (canon_dir);\n   free (debug_filename);"
    },
    {
      "sha": "88fef269905e812d2918575b623cb77ff9039601",
      "filename": "binutils/testsuite/binutils-all/compress.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ecd65684f542be614adc56321c118d8985d35409/binutils/testsuite/binutils-all/compress.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ecd65684f542be614adc56321c118d8985d35409/binutils/testsuite/binutils-all/compress.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/compress.exp?ref=ecd65684f542be614adc56321c118d8985d35409",
      "patch": "@@ -676,6 +676,7 @@ proc test_gnu_debuglink {} {\n     global STRIP\n     global OBJCOPY\n     global OBJDUMP\n+    global READELF\n     global gcc_gas_flag\n \n     set test \"gnu-debuglink\"\n@@ -757,6 +758,20 @@ proc test_gnu_debuglink {} {\n     } else {\n \tpass \"$test (objdump 2)\"\n     }\n+\n+    remote_file host delete tmpdir/testprog.compress\n+    set got [remote_exec host [concat sh -c [list \"$OBJDUMP --syms tmpdir/testprog > /dev/null\"]]]\n+    if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n+\tfail \"$test (objdump with missing link)\"\n+    } else {\n+\tpass \"$test (objdump with missing link)\"\n+    }\n+    set got [remote_exec host [concat sh -c [list \"$READELF -S tmpdir/testprog > /dev/null\"]]]\n+    if { [lindex $got 0] != 0 || ![string match \"\" [lindex $got 1]] } then {\n+\tfail \"$test (readelf with missing link)\"\n+    } else {\n+\tpass \"$test (readelf with missing link)\"\n+    }\n }\n \n if {[is_elf_format]} then {"
    }
  ]
}