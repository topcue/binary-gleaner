{
  "sha": "211bcd013331fcaefa9bb31b6145ae0df13a3363",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjExYmNkMDEzMzMxZmNhZWZhOWJiMzFiNjE0NWFlMGRmMTNhMzM2Mw==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-02T15:10:05Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-03-02T15:10:10Z"
    },
    "message": "bfd, ld, libctf: skip zero-refcount strings in CTF string reporting\n\nThis is a tricky one.  BFD, on the linker's behalf, reports symbols to\nlibctf via the ctf_new_symbol and ctf_new_dynsym callbacks, which\nultimately call ctf_link_add_linker_symbol.  But while this happens\nafter strtab offsets are finalized, it happens before the .dynstr is\nactually laid out, so we can't iterate over it at this stage and\nit is not clear what the reported symbols are actually called.  So\na second callback, examine_strtab, is called after the .dynstr is\nfinalized, which calls ctf_link_add_strtab and ultimately leads\nto ldelf_ctf_strtab_iter_cb being called back repeatedly until the\noffsets of every string in the .dynstr is passed to libctf.\n\nlibctf can then use this to get symbol names out of the input (which\nusually stores symbol types in the form of a name -> type mapping at\nthis stage) and extract the types of those symbols, feeding them back\ninto their final form as a 1:1 association with the real symtab's\nSTT_OBJ and STT_FUNC symbols (with a few skipped, see\nctf_symtab_skippable).\n\nThis representation is compact, but has one problem: if libctf somehow\ngets confused about the st_type of a symbol, it'll stick an entry into\nthe function symtypetab when it should put it into the object\nsymtypetab, or vice versa, and *every symbol from that one on* will have\nthe wrong CTF type because it's actually looking up the type for a\ndifferent symbol.\n\nAnd we have just such a bug.  ctf_link_add_strtab was not taking the\nrefcounts of strings into consideration, so even strings that had been\neliminated from the strtab by virtue of being in objects eliminated via\n--as-needed etc were being reported.  This is harmful because it can\nlead to multiple strings with the same apparent offset, and if the last\nduplicate to be reported relates to an eliminated symbol, we look up the\nwrong symbol from the input and gets its type wrong: if it's unlucky and\nthe eliminated symbol is also of the wrong st_type, we will end up with\na corrupted symtypetab.\n\nThankfully the wrong-st_type case is already diagnosed by a\nthis-can-never-happen paranoid warning:\n\n  CTF warning: Symbol 61a added to CTF as a function but is of type 1\n\nor the converse\n\n * CTF warning: Symbol a3 added to CTF as a data object but is of type 2\n\nso at least we can tell when the corruption has spread to more than one\nsymbol's type.\n\nSkipping zero-refcounted strings is easy: teach _bfd_elf_strtab_str to\nskip them, and ldelf_ctf_strtab_iter_cb to loop over skipped strings\nuntil it falls off the end or finds one that isn't skipped.\n\nbfd/ChangeLog\n2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* elf-strtab.c (_bfd_elf_strtab_str): Skip strings with zero refcount.\n\nld/ChangeLog\n2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ldelfgen.c (ldelf_ctf_strtab_iter_cb): Skip zero-refcount strings.\n\nlibctf/ChangeLog\n2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-create.c (symtypetab_density): Report the symbol name as\n\twell as index in the name != object error; note the likely\n\tconsequences.\n\t* ctf-link.c (ctf_link_shuffle_syms): Report the symbol index\n\tas well as name.",
    "tree": {
      "sha": "fe0ede7f5dcdee9bd7b6fae3e6d9c632ee5b9957",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fe0ede7f5dcdee9bd7b6fae3e6d9c632ee5b9957"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/211bcd013331fcaefa9bb31b6145ae0df13a3363",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/211bcd013331fcaefa9bb31b6145ae0df13a3363",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/211bcd013331fcaefa9bb31b6145ae0df13a3363",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/211bcd013331fcaefa9bb31b6145ae0df13a3363/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8e7e446446b2de0c44e453a298718a0411f47205",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e7e446446b2de0c44e453a298718a0411f47205",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8e7e446446b2de0c44e453a298718a0411f47205"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 42,
    "deletions": 12
  },
  "files": [
    {
      "sha": "c56cfc493839e999f8d55a6906be2258212a340f",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* elf-strtab.c (_bfd_elf_strtab_str): Skip strings with zero refcount.\n+\n 2021-03-02  Alan Modra  <amodra@gmail.com>\n \n \tPR 27451"
    },
    {
      "sha": "a3cb4ef7b4a3df03f1fafe16d3ff995ea020df26",
      "filename": "bfd/elf-strtab.c",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/bfd/elf-strtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/bfd/elf-strtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-strtab.c?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -299,9 +299,11 @@ _bfd_elf_strtab_str (struct elf_strtab_hash *tab, size_t idx,\n \t\t     bfd_size_type *offset)\n {\n   if (idx == 0)\n-    return 0;\n+    return NULL;\n   BFD_ASSERT (idx < tab->size);\n   BFD_ASSERT (tab->sec_size);\n+  if (tab->array[idx]->refcount == 0)\n+    return NULL;\n   if (offset)\n     *offset = tab->array[idx]->u.index;\n   return tab->array[idx]->root.string;"
    },
    {
      "sha": "9116ee01170f18c0ab6335f584b42fcd49ef850a",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -1,3 +1,7 @@\n+2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ldelfgen.c (ldelf_ctf_strtab_iter_cb): Skip zero-refcount strings.\n+\n 2021-03-02  Alan Modra  <amodra@gmail.com>\n \n \t* testsuite/ld-powerpc/startstop.d,"
    },
    {
      "sha": "c49b85494ee1679b75cccbd32946cc536c353774",
      "filename": "ld/ldelfgen.c",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/ld/ldelfgen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/ld/ldelfgen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelfgen.c?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -375,13 +375,20 @@ ldelf_ctf_strtab_iter_cb (uint32_t *offset, void *arg_)\n   if (arg->next_i == 0)\n     arg->next_i = 1;\n \n-  if (arg->next_i >= _bfd_elf_strtab_len (arg->strtab))\n+  /* Hunt through strings until we fall off the end or find one with\n+     a nonzero refcount.  */\n+  do\n     {\n-      arg->next_i = 0;\n-      return NULL;\n+      if (arg->next_i >= _bfd_elf_strtab_len (arg->strtab))\n+\t{\n+\t  arg->next_i = 0;\n+\t  return NULL;\n+\t}\n+\n+      ret = _bfd_elf_strtab_str (arg->strtab, arg->next_i++, &off);\n     }\n+  while (ret == NULL);\n \n-  ret = _bfd_elf_strtab_str (arg->strtab, arg->next_i++, &off);\n   *offset = off;\n \n   /* If we've overflowed, we cannot share any further strings: the CTF"
    },
    {
      "sha": "f095c3e1e30ace882fec5942052d7128d9030075",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -1,3 +1,11 @@\n+2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-create.c (symtypetab_density): Report the symbol name as\n+\twell as index in the name != object error; note the likely\n+\tconsequences.\n+\t* ctf-link.c (ctf_link_shuffle_syms): Report the symbol index\n+\tas well as name.\n+\n 2021-03-02  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-link.c (ctf_link_shuffle_syms): Free ctf_dynsyms properly."
    },
    {
      "sha": "3f2c5dacb03da89ef1ca059b4985eca3699d3875",
      "filename": "libctf/ctf-create.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ctf-create.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ctf-create.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-create.c?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -318,18 +318,22 @@ symtypetab_density (ctf_dict_t *fp, ctf_dict_t *symfp, ctf_dynhash_t *symhash,\n \t  if ((flags & CTF_SYMTYPETAB_EMIT_FUNCTION)\n \t      && sym->st_type != STT_FUNC)\n \t    {\n-\t      ctf_err_warn (fp, 1, 0, _(\"Symbol %x added to CTF as a function \"\n-\t\t\t\t\t\"but is of type %x\\n\"),\n-\t\t\t    sym->st_symidx, sym->st_type);\n+\t      ctf_err_warn (fp, 1, 0, _(\"symbol %s (%x) added to CTF as a \"\n+\t\t\t\t\t\"function but is of type %x.  \"\n+\t\t\t\t\t\"The symbol type lookup tables \"\n+\t\t\t\t\t\"are probably corrupted\"),\n+\t\t\t    sym->st_name, sym->st_symidx, sym->st_type);\n \t      ctf_dynhash_remove (symhash, name);\n \t      continue;\n \t    }\n \t  else if (!(flags & CTF_SYMTYPETAB_EMIT_FUNCTION)\n \t\t   && sym->st_type != STT_OBJECT)\n \t    {\n-\t      ctf_err_warn (fp, 1, 0, _(\"Symbol %x added to CTF as a data \"\n-\t\t\t\t\t\"object but is of type %x\\n\"),\n-\t\t\t    sym->st_symidx, sym->st_type);\n+\t      ctf_err_warn (fp, 1, 0, _(\"symbol %s (%x) added to CTF as a \"\n+\t\t\t\t\t\"data object but is of type %x.  \"\n+\t\t\t\t\t\"The symbol type lookup tables \"\n+\t\t\t\t\t\"are probably corrupted\"),\n+\t\t\t    sym->st_name, sym->st_symidx, sym->st_type);\n \t      ctf_dynhash_remove (symhash, name);\n \t      continue;\n \t    }"
    },
    {
      "sha": "5471fccd0f7eb814b834562ad6dd9649e0964cc6",
      "filename": "libctf/ctf-link.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ctf-link.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/211bcd013331fcaefa9bb31b6145ae0df13a3363/libctf/ctf-link.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-link.c?ref=211bcd013331fcaefa9bb31b6145ae0df13a3363",
      "patch": "@@ -1552,7 +1552,8 @@ ctf_link_shuffle_syms (ctf_dict_t *fp)\n \t for skippability here.  */\n       if (!ctf_symtab_skippable (&did->cid_sym))\n \t{\n-\t  ctf_dprintf (\"symbol name from linker: %s\\n\", did->cid_sym.st_name);\n+\t  ctf_dprintf (\"symbol from linker: %s (%x)\\n\", did->cid_sym.st_name,\n+\t\t       did->cid_sym.st_symidx);\n \n \t  if ((new_sym = malloc (sizeof (ctf_link_sym_t))) == NULL)\n \t    goto local_oom;"
    }
  ]
}