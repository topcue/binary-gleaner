{
  "sha": "dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGFlNjY2Yzk2OGFjOWYwNTNkYzVkZmUxYTZjZWFmMzMzYThjYTk0ZA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-15T04:00:29Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-06-16T04:50:56Z"
    },
    "message": "sim: mips: fix format warnings when setting up memory\n\nThe majority of these inputs are not long's, so don't use %lx.\nThis fixes compiler warnings about type mismatches.",
    "tree": {
      "sha": "caedac8ec573a4d72d4888a07808c715bd8481d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/caedac8ec573a4d72d4888a07808c715bd8481d4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "52d37d2c916865ff81da4ff923ae5cfcdc16c2c3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52d37d2c916865ff81da4ff923ae5cfcdc16c2c3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/52d37d2c916865ff81da4ff923ae5cfcdc16c2c3"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 22,
    "deletions": 18
  },
  "files": [
    {
      "sha": "f89981cb66bd361f2a67dbbc4b2fbdeaa0fc45ac",
      "filename": "sim/mips/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d/sim/mips/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d/sim/mips/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/ChangeLog?ref=dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
      "patch": "@@ -1,3 +1,7 @@\n+2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* interp.c (sim_open): Change %lx to %x and PRIx macros.\n+\n 2021-06-16  Mike Frysinger  <vapier@gentoo.org>\n \n \t* configure: Regenerate."
    },
    {
      "sha": "38338fbfa7f9508c87da8be649978d7e1084d14e",
      "filename": "sim/mips/interp.c",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d/sim/mips/interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d/sim/mips/interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/interp.c?ref=dae666c968ac9f053dc5dfe1a6ceaf333a8ca94d",
      "patch": "@@ -427,7 +427,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \t      mem_size = (match->modulo != 0\n \t\t\t  ? match->modulo : match->nr_bytes);\n \t      /* Delete old region. */\n-\t      sim_do_commandf (sd, \"memory delete %d:0x%lx@%d\",\n+\t      sim_do_commandf (sd, \"memory delete %d:0x%\" PRIxTW \"@%d\",\n \t\t\t       match->space, match->addr, match->level);\n \t    }\t      \n \t  else if (mem_size == 0)\n@@ -436,7 +436,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \t  if (mem_size > K1SIZE)\n \t    mem_size = K1SIZE;\n \t  /* memory alias K1BASE@1,K1SIZE%MEMSIZE,K0BASE */\n-\t  sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx%%0x%lx,0x%0x\",\n+\t  sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x%%0x%lx,0x%0x\",\n \t\t\t   K1BASE, K1SIZE, (long)mem_size, K0BASE);\n \t  if (WITH_TARGET_WORD_BITSIZE == 64)\n \t    sim_do_commandf (sd, \"memory alias 0x%x,0x%\" PRIxTW \",0x%\" PRIxTA,\n@@ -453,13 +453,13 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       STATE_ENVIRONMENT (sd) = OPERATING_ENVIRONMENT;\n \n       /* ROM: 0x9FC0_0000 - 0x9FFF_FFFF and 0xBFC0_0000 - 0xBFFF_FFFF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t       0x9FC00000, \n \t\t       4 * 1024 * 1024, /* 4 MB */\n \t\t       0xBFC00000);\n \n       /* SRAM: 0x8000_0000 - 0x803F_FFFF and 0xA000_0000 - 0xA03F_FFFF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t       0x80000000, \n \t\t       4 * 1024 * 1024, /* 4 MB */\n \t\t       0xA0000000);\n@@ -468,7 +468,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       for (i=0; i<8; i++) /* 32 MB total */\n \t{\n \t  unsigned size = 4 * 1024 * 1024;  /* 4 MB */\n-\t  sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+\t  sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t\t   0x88000000 + (i * size), \n \t\t\t   size, \n \t\t\t   0xA8000000 + (i * size));\n@@ -499,13 +499,13 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       /* --- memory --- */\n \n       /* ROM: 0x9FC0_0000 - 0x9FFF_FFFF and 0xBFC0_0000 - 0xBFFF_FFFF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t       0x9FC00000, \n \t\t       4 * 1024 * 1024, /* 4 MB */\n \t\t       0xBFC00000);\n \n       /* SRAM: 0x8000_0000 - 0x803F_FFFF and 0xA000_0000 - 0xA03F_FFFF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t       0x80000000, \n \t\t       4 * 1024 * 1024, /* 4 MB */\n \t\t       0xA0000000);\n@@ -514,23 +514,23 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n       for (i=0; i<8; i++) /* 32 MB total */\n \t{\n \t  unsigned size = 4 * 1024 * 1024;  /* 4 MB */\n-\t  sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx,0x%0x\",\n+\t  sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x,0x%0x\",\n \t\t\t   0x88000000 + (i * size), \n \t\t\t   size, \n \t\t\t   0xA8000000 + (i * size));\n \t}\n \n       /* Dummy memory regions for unsimulated devices - sorted by address */\n \n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xB1000000, 0x400); /* ISA I/O */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xB2100000, 0x004); /* ISA ctl */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xB2500000, 0x004); /* LED/switch */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xB2700000, 0x004); /* RTC */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xB3C00000, 0x004); /* RTC */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xFFFF8000, 0x900); /* DRAMC */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xFFFF9000, 0x200); /* EBIF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xFFFFE000, 0x01c); /* EBIF */\n-      sim_do_commandf (sd, \"memory alias 0x%lx@1,0x%lx\", 0xFFFFF500, 0x300); /* PIO */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xB1000000, 0x400); /* ISA I/O */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xB2100000, 0x004); /* ISA ctl */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xB2500000, 0x004); /* LED/switch */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xB2700000, 0x004); /* RTC */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xB3C00000, 0x004); /* RTC */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xFFFF8000, 0x900); /* DRAMC */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xFFFF9000, 0x200); /* EBIF */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xFFFFE000, 0x01c); /* EBIF */\n+      sim_do_commandf (sd, \"memory alias 0x%x@1,0x%x\", 0xFFFFF500, 0x300); /* PIO */\n \n \n       /* --- simulated devices --- */\n@@ -711,7 +711,7 @@ sim_open (SIM_OPEN_KIND kind, host_callback *cb,\n \t\t\t idt_monitor_base, idt_monitor_size,\n \t\t\t EXTENDED (idt_monitor_base));\n       else\n-\tsim_do_commandf (sd, \"memory region 0x%x,0x%x\",\n+\tsim_do_commandf (sd, \"memory region 0x%x,0x%\" PRIxTA,\n \t\t\t idt_monitor_base, idt_monitor_size);\n \n       /* Entry into the IDT monitor is via fixed address vectors, and"
    }
  ]
}