{
  "sha": "c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzdkYTEyYzcyYzJlZWI0ZjYyZTc3MmRmNWNiYjFmNTBmMzVhODRlZQ==",
  "commit": {
    "author": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-19T14:01:27Z"
    },
    "committer": {
      "name": "Kamil Rytarowski",
      "email": "n54@gmx.com",
      "date": "2020-03-20T12:35:03Z"
    },
    "message": "Add support for NetBSD threads in ppc-nbsd-nat.c\n\nNetBSD ptrace(2) accepts thread id (LWP) as the 4th argument for threads.\n\ngdb/ChangeLog:\n\n\t* ppc-nbsd-nat.c (fetch_registers): New variable lwp and pass\n        it to the ptrace call.\n        * (store_registers): Likewise.",
    "tree": {
      "sha": "e99abf8181ce769b35f242888ee58e2822397ecf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e99abf8181ce769b35f242888ee58e2822397ecf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee/comments",
  "author": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "krytarowski",
    "id": 6665730,
    "node_id": "MDQ6VXNlcjY2NjU3MzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6665730?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/krytarowski",
    "html_url": "https://github.com/krytarowski",
    "followers_url": "https://api.github.com/users/krytarowski/followers",
    "following_url": "https://api.github.com/users/krytarowski/following{/other_user}",
    "gists_url": "https://api.github.com/users/krytarowski/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/krytarowski/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/krytarowski/subscriptions",
    "organizations_url": "https://api.github.com/users/krytarowski/orgs",
    "repos_url": "https://api.github.com/users/krytarowski/repos",
    "events_url": "https://api.github.com/users/krytarowski/events{/privacy}",
    "received_events_url": "https://api.github.com/users/krytarowski/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5844b4657aa2b9eb52aecc5a6338324032fb6eae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5844b4657aa2b9eb52aecc5a6338324032fb6eae",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/5844b4657aa2b9eb52aecc5a6338324032fb6eae"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 14,
    "deletions": 6
  },
  "files": [
    {
      "sha": "f9076325fa059bcf2e75fd23707caead53c683ae",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-12  Kamil Rytarowski  <n54@gmx.com>\n+\n+\t* ppc-nbsd-nat.c (fetch_registers): New variable lwp and pass\n+\tit to the ptrace call.\n+\t* (store_registers): Likewise.\n+\n 2020-03-19  Luis Machado  <luis.machado@linaro.org>\n \n \t* nat/aarch64-sve-linux-ptrace.c (aarch64_sve_set_vq): If vg is not"
    },
    {
      "sha": "67c03790ed728b518efd3eaab5f2a9acac68c25b",
      "filename": "gdb/ppc-nbsd-nat.c",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee/gdb/ppc-nbsd-nat.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee/gdb/ppc-nbsd-nat.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ppc-nbsd-nat.c?ref=c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
      "patch": "@@ -91,12 +91,13 @@ ppc_nbsd_nat_target::fetch_registers (struct regcache *regcache, int regnum)\n {\n   struct gdbarch *gdbarch = regcache->arch ();\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regnum == -1 || getregs_supplies (gdbarch, regnum))\n     {\n       struct reg regs;\n \n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n         perror_with_name (_(\"Couldn't get registers\"));\n \n       ppc_supply_gregset (&ppcnbsd_gregset, regcache,\n@@ -107,7 +108,7 @@ ppc_nbsd_nat_target::fetch_registers (struct regcache *regcache, int regnum)\n     {\n       struct fpreg fpregs;\n \n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get FP registers\"));\n \n       ppc_supply_fpregset (&ppcnbsd_fpregset, regcache,\n@@ -120,32 +121,33 @@ ppc_nbsd_nat_target::store_registers (struct regcache *regcache, int regnum)\n {\n   struct gdbarch *gdbarch = regcache->arch ();\n   pid_t pid = regcache->ptid ().pid ();\n+  int lwp = regcache->ptid ().lwp ();\n \n   if (regnum == -1 || getregs_supplies (gdbarch, regnum))\n     {\n       struct reg regs;\n \n-      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_GETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get registers\"));\n \n       ppc_collect_gregset (&ppcnbsd_gregset, regcache,\n \t\t\t   regnum, &regs, sizeof regs);\n \n-      if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, 0) == -1)\n+      if (ptrace (PT_SETREGS, pid, (PTRACE_TYPE_ARG3) &regs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't write registers\"));\n     }\n \n   if (regnum == -1 || getfpregs_supplies (gdbarch, regnum))\n     {\n       struct fpreg fpregs;\n \n-      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_GETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't get FP registers\"));\n \n       ppc_collect_fpregset (&ppcnbsd_fpregset, regcache,\n \t\t\t    regnum, &fpregs, sizeof fpregs);\n \n-      if (ptrace (PT_SETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)\n+      if (ptrace (PT_SETFPREGS, pid, (PTRACE_TYPE_ARG3) &fpregs, lwp) == -1)\n \tperror_with_name (_(\"Couldn't set FP registers\"));\n     }\n }"
    }
  ]
}