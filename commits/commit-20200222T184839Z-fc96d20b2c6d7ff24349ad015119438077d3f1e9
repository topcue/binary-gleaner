{
  "sha": "fc96d20b2c6d7ff24349ad015119438077d3f1e9",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmM5NmQyMGIyYzZkN2ZmMjQzNDlhZDAxNTExOTQzODA3N2QzZjFlOQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:39Z"
    },
    "message": "Remove the TUI annotation hack\n\ndo_tui_putc has some code to remove annotations from gdb output.  This\nwas added in 2001, see commit a198b876bbcb.\n\nHowever, I think this code is not needed.  It seems very unlikely to\nenable both annotations and the TUI, and in any case I think this is\nsomething that should not be supported.\n\nSo, this patch removes this code.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-io.c (do_tui_putc): Don't omit annotations.\n\nChange-Id: I05728110365a362d37c9821df9c8779316100bb8",
    "tree": {
      "sha": "c25c214eb42ca663a832d18e8ecc3a35f9809ebc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c25c214eb42ca663a832d18e8ecc3a35f9809ebc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fc96d20b2c6d7ff24349ad015119438077d3f1e9",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc96d20b2c6d7ff24349ad015119438077d3f1e9",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fc96d20b2c6d7ff24349ad015119438077d3f1e9",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fc96d20b2c6d7ff24349ad015119438077d3f1e9/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "935c78c0468215e2f034f39b8285fa8bb17729b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/935c78c0468215e2f034f39b8285fa8bb17729b8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/935c78c0468215e2f034f39b8285fa8bb17729b8"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 15,
    "deletions": 25
  },
  "files": [
    {
      "sha": "718e500507b664b8d0b5f76ecbcae1e14d288d14",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc96d20b2c6d7ff24349ad015119438077d3f1e9/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc96d20b2c6d7ff24349ad015119438077d3f1e9/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fc96d20b2c6d7ff24349ad015119438077d3f1e9",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-io.c (do_tui_putc): Don't omit annotations.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-win.c (tui_set_win_focus_to): Move to tui-data.c."
    },
    {
      "sha": "b5ee2a2b6b6d788b2fe336051fb663cfcc670d1a",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 11,
      "deletions": 25,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fc96d20b2c6d7ff24349ad015119438077d3f1e9/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fc96d20b2c6d7ff24349ad015119438077d3f1e9/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=fc96d20b2c6d7ff24349ad015119438077d3f1e9",
      "patch": "@@ -138,35 +138,21 @@ static int tui_readline_pipe[2];\n static void\n do_tui_putc (WINDOW *w, char c)\n {\n-  static int tui_skip_line = -1;\n-\n-  /* Catch annotation and discard them.  We need two \\032 and discard\n-     until a \\n is seen.  */\n-  if (c == '\\032')\n-    {\n-      tui_skip_line++;\n-    }\n-  else if (tui_skip_line != 1)\n+  /* Expand TABs, since ncurses on MS-Windows doesn't.  */\n+  if (c == '\\t')\n     {\n-      tui_skip_line = -1;\n-      /* Expand TABs, since ncurses on MS-Windows doesn't.  */\n-      if (c == '\\t')\n-\t{\n-\t  int col;\n+      int col;\n \n-\t  col = getcurx (w);\n-\t  do\n-\t    {\n-\t      waddch (w, ' ');\n-\t      col++;\n-\t    }\n-\t  while ((col % 8) != 0);\n+      col = getcurx (w);\n+      do\n+\t{\n+\t  waddch (w, ' ');\n+\t  col++;\n \t}\n-      else\n-\twaddch (w, c);\n+      while ((col % 8) != 0);\n     }\n-  else if (c == '\\n')\n-    tui_skip_line = -1;\n+  else\n+    waddch (w, c);\n }\n \n /* Update the cached value of the command window's start line based on"
    }
  ]
}