{
  "sha": "590003dc0ea7653ead62899d850fba0a5c4a595e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTkwMDAzZGMwZWE3NjUzZWFkNjI4OTlkODUwZmJhMGE1YzRhNTk1ZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-02T13:47:27Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-03-02T13:47:27Z"
    },
    "message": "[gdb/testsuite] Add -lbl option in gdb_test_multiple\n\nAdd gdb_test_multiple option -lbl, that adds a regexp after the user code that\nreads one line, and discards it:\n...\n           -re \"\\r\\n\\[^\\r\\n\\]*(?=\\r\\n)\" {\n               exp_continue\n           }\n...\n\nIn order to be able to write:\n...\ngdb_test_multiple \"command\" \"testname\" -lbl {\n  ...\n}\n...\nrewrite the promp_regexp argument usage into the similar:\n...\ngdb_test_multiple \"command\" \"testname\" -prompt $prompt_regexp {\n  ...\n}\n...\n\nBuild and reg-tested on x86_64-linux.\n\nTested gdb.base/corefile-buildid.exp with both make targets check and\ncheck-read1.\n\ngdb/testsuite/ChangeLog:\n\n2020-03-02  Pedro Alves  <palves@redhat.com>\n\t      Tom de Vries  <tdevries@suse.de>\n\n\t* lib/gdb.exp (gdb_test_multiple): Handle prompt_regexp option using\n\t-prompt prefix, before user_code argument.  Add -lbl option likewise.\n\t(skip_python_tests_prompt, skip_libstdcxx_probe_tests_prompt)\n\t(gdb_is_target_1): Add -prompt prefix and move to before user_code\n\targument.\n\t* gdb.base/corefile-buildid.exp: Use -lbl option.  Rewrite regexps to\n\thave \"\\r\\n\" at start-of-line, instead of at end-of-line.",
    "tree": {
      "sha": "01399ff3fd88ebdf7161a43e61d37551b7fa915a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/01399ff3fd88ebdf7161a43e61d37551b7fa915a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/590003dc0ea7653ead62899d850fba0a5c4a595e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/590003dc0ea7653ead62899d850fba0a5c4a595e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/590003dc0ea7653ead62899d850fba0a5c4a595e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/590003dc0ea7653ead62899d850fba0a5c4a595e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "40b35c78b62eec2ab41219906a7ea0c0be323499",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/40b35c78b62eec2ab41219906a7ea0c0be323499",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/40b35c78b62eec2ab41219906a7ea0c0be323499"
    }
  ],
  "stats": {
    "total": 136,
    "additions": 83,
    "deletions": 53
  },
  "files": [
    {
      "sha": "e5ea91dde8b6cf540ff16f416e32e1ca2dda8145",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=590003dc0ea7653ead62899d850fba0a5c4a595e",
      "patch": "@@ -1,3 +1,14 @@\n+2020-03-02  Pedro Alves  <palves@redhat.com>\n+\t      Tom de Vries  <tdevries@suse.de>\n+\n+\t* lib/gdb.exp (gdb_test_multiple): Handle prompt_regexp option using\n+\t-prompt prefix, before user_code argument.  Add -lbl option likewise.\n+\t(skip_python_tests_prompt, skip_libstdcxx_probe_tests_prompt)\n+\t(gdb_is_target_1): Add -prompt prefix and move to before user_code\n+\targument.\n+\t* gdb.base/corefile-buildid.exp: Use -lbl option.  Rewrite regexps to\n+\thave \"\\r\\n\" at start-of-line, instead of at end-of-line.\n+\n 2020-02-28  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* lib/trace-support.exp (get_in_proc_agent): Adjust path to"
    },
    {
      "sha": "e24562dedb92cbbe2c2eee1f2fa8e3369585ac55",
      "filename": "gdb/testsuite/gdb.base/corefile-buildid.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 21,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/gdb.base/corefile-buildid.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/gdb.base/corefile-buildid.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/corefile-buildid.exp?ref=590003dc0ea7653ead62899d850fba0a5c4a595e",
      "patch": "@@ -113,17 +113,11 @@ proc check_exec_file {file} {\n \n     # Get line with \"Local exec file:\".\n     set ok 0\n-    gdb_test_multiple \"info files\" \"\" {\n-\t-re \"^Local exec file:\\r\\n\" {\n+    gdb_test_multiple \"info files\" \"\" -lbl {\n+\t-re \"\\r\\nLocal exec file:\" {\n \t    set test_name $gdb_test_name\n \t    set ok 1\n \t}\n-\t-re \"^$gdb_prompt $\" {\n-\t    fail $gdb_test_name\n-\t}\n-\t-re \"^\\[^\\r\\n\\]*\\r\\n\" {\n-\t    exp_continue\n-\t}\n     }\n \n     if { $ok == 0 } {\n@@ -132,30 +126,21 @@ proc check_exec_file {file} {\n \n     # Get subsequent line with $file.\n     set ok 0\n-    gdb_test_multiple \"\" $test_name {\n-\t-re \"^\\[\\t\\ \\]+`[string_to_regexp $file]'\\[^\\r\\n\\]*\\r\\n\" {\n+    gdb_test_multiple \"\" $test_name -lbl {\n+\t-re \"\\r\\n\\[\\t\\ \\]+`[string_to_regexp $file]'\\[^\\r\\n\\]*\" {\n \t    set ok 1\n \t}\n-\t-re \"^$gdb_prompt $\" {\n-\t    fail $gdb_test_name\n-\t}\n-\t-re \"^\\[^\\r\\n\\]*\\r\\n\" {\n-\t    exp_continue\n-\t}\n     }\n \n     if { $ok == 0 } {\n \treturn\n     }\n \n     # Skip till prompt.\n-    gdb_test_multiple \"\" $test_name {\n-\t-re \"^$gdb_prompt $\" {\n+    gdb_test_multiple \"\" $test_name -lbl {\n+\t-re \"\\r\\n$gdb_prompt $\" {\n \t    pass $gdb_test_name\n \t}\n-\t-re \"^\\[^\\r\\n\\]*\\r\\n\" {\n-\t    exp_continue\n-\t}\n     }\n }\n "
    },
    {
      "sha": "ab22f24436098a14a03c83af4570f172c3e3e8f7",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 66,
      "deletions": 32,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/590003dc0ea7653ead62899d850fba0a5c4a595e/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=590003dc0ea7653ead62899d850fba0a5c4a595e",
      "patch": "@@ -698,20 +698,22 @@ proc gdb_internal_error_resync {} {\n }\n \n \n-# gdb_test_multiple COMMAND MESSAGE EXPECT_ARGUMENTS PROMPT_REGEXP\n+# gdb_test_multiple COMMAND MESSAGE [ -promp PROMPT_REGEXP] [ -lbl ]\n+#                   EXPECT_ARGUMENTS\n # Send a command to gdb; test the result.\n #\n # COMMAND is the command to execute, send to GDB with send_gdb.  If\n #   this is the null string no command is sent.\n # MESSAGE is a message to be printed with the built-in failure patterns\n #   if one of them matches.  If MESSAGE is empty COMMAND will be used.\n+# -prompt PROMPT_REGEXP specifies a regexp matching the expected prompt\n+#   after the command output.  If empty, defaults to \"$gdb_prompt $\".\n+# -lbl specifies that line-by-line matching will be used.\n # EXPECT_ARGUMENTS will be fed to expect in addition to the standard\n #   patterns.  Pattern elements will be evaluated in the caller's\n #   context; action elements will be executed in the caller's context.\n #   Unlike patterns for gdb_test, these patterns should generally include\n #   the final newline and prompt.\n-# PROMPT_REGEXP is a regexp matching the expected prompt after the command\n-#   output.  If empty, defaults to \"$gdb_prompt $\"\n #\n # Returns:\n #    1 if the test failed, according to a built-in failure pattern\n@@ -791,7 +793,7 @@ proc gdb_internal_error_resync {} {\n #\t}\n #    }\n #\n-proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n+proc gdb_test_multiple { command message args } {\n     global verbose use_gdb_stub\n     global gdb_prompt pagination_prompt\n     global GDB\n@@ -801,6 +803,26 @@ proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n     upvar expect_out expect_out\n     global any_spawn_id\n \n+    set line_by_line 0\n+    set prompt_regexp \"\"\n+    for {set i 0} {$i < [llength $args]} {incr i} {\n+\tset arg [lindex $args $i]\n+\tif { $arg  == \"-prompt\" } {\n+\t    incr i\n+\t    set prompt_regexp [lindex $args $i]\n+\t} elseif { $arg == \"-lbl\" } {\n+\t    set line_by_line 1\n+\t} else {\n+\t    set user_code $arg\n+\t    break\n+\t}\n+    }\n+    if { [expr $i + 1] < [llength $args] } {\n+\terror \"Too many arguments to gdb_test_multiple\"\n+    } elseif { ![info exists user_code] } {\n+\terror \"Too few arguments to gdb_test_multiple\"\n+    }\n+\n     if { \"$prompt_regexp\" == \"\" } {\n \tset prompt_regexp \"$gdb_prompt $\"\n     }\n@@ -1069,6 +1091,14 @@ proc gdb_test_multiple { command message user_code { prompt_regexp \"\" } } {\n \t}\n     }\n \n+    if {$line_by_line} {\n+       append code {\n+           -re \"\\r\\n\\[^\\r\\n\\]*(?=\\r\\n)\" {\n+               exp_continue\n+           }\n+       }\n+    }\n+\n     # Now patterns that apply to any spawn id specified.\n     append code {\n \t-i $any_spawn_id\n@@ -1996,22 +2026,24 @@ proc skip_rust_tests {} {\n proc skip_python_tests_prompt { prompt_regexp } {\n     global gdb_py_is_py3k\n \n-    gdb_test_multiple \"python print ('test')\" \"verify python support\" {\n-\t-re \"not supported.*$prompt_regexp\" {\n-\t    unsupported \"Python support is disabled.\"\n-\t    return 1\n+    gdb_test_multiple \"python print ('test')\" \"verify python support\" \\\n+\t-prompt \"$prompt_regexp\" {\n+\t    -re \"not supported.*$prompt_regexp\" {\n+\t\tunsupported \"Python support is disabled.\"\n+\t\treturn 1\n+\t    }\n+\t    -re \"$prompt_regexp\" {}\n \t}\n-\t-re \"$prompt_regexp\" {}\n-    } \"$prompt_regexp\"\n \n-    gdb_test_multiple \"python print (sys.version_info\\[0\\])\" \"check if python 3\" {\n-\t-re \"3.*$prompt_regexp\" {\n-            set gdb_py_is_py3k 1\n-        }\n-\t-re \".*$prompt_regexp\" {\n-            set gdb_py_is_py3k 0\n-        }\n-    } \"$prompt_regexp\"\n+    gdb_test_multiple \"python print (sys.version_info\\[0\\])\" \"check if python 3\" \\\n+\t-prompt \"$prompt_regexp\" {\n+\t    -re \"3.*$prompt_regexp\" {\n+\t\tset gdb_py_is_py3k 1\n+\t    }\n+\t    -re \".*$prompt_regexp\" {\n+\t\tset gdb_py_is_py3k 0\n+\t    }\n+\t}\n \n     return 0\n }\n@@ -3265,13 +3297,14 @@ proc skip_unwinder_tests {} {\n \n proc skip_libstdcxx_probe_tests_prompt { prompt_regexp } {\n     set supported 0\n-    gdb_test_multiple \"info probe\" \"check for stap probe in libstdc++\" {\n-\t-re \".*libstdcxx.*catch.*\\r\\n$prompt_regexp\" {\n-\t    set supported 1\n-\t}\n-\t-re \"\\r\\n$prompt_regexp\" {\n+    gdb_test_multiple \"info probe\" \"check for stap probe in libstdc++\" \\\n+\t-prompt \"$prompt_regexp\" {\n+\t    -re \".*libstdcxx.*catch.*\\r\\n$prompt_regexp\" {\n+\t\tset supported 1\n+\t    }\n+\t    -re \"\\r\\n$prompt_regexp\" {\n+\t    }\n \t}\n-    } \"$prompt_regexp\"\n     set skip [expr !$supported]\n     return $skip\n }\n@@ -3311,15 +3344,16 @@ proc skip_compile_feature_tests {} {\n \n proc gdb_is_target_1 { target_name target_stack_regexp prompt_regexp } {\n     set test \"probe for target ${target_name}\"\n-    gdb_test_multiple \"maint print target-stack\" $test {\n-\t-re \"${target_stack_regexp}${prompt_regexp}\" {\n-\t    pass $test\n-\t    return 1\n-\t}\n-\t-re \"$prompt_regexp\" {\n-\t    pass $test\n+    gdb_test_multiple \"maint print target-stack\" $test \\\n+\t-prompt \"$prompt_regexp\" {\n+\t    -re \"${target_stack_regexp}${prompt_regexp}\" {\n+\t\tpass $test\n+\t\treturn 1\n+\t    }\n+\t    -re \"$prompt_regexp\" {\n+\t\tpass $test\n+\t    }\n \t}\n-    } \"$prompt_regexp\"\n     return 0\n }\n "
    }
  ]
}