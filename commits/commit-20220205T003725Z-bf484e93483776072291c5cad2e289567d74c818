{
  "sha": "bf484e93483776072291c5cad2e289567d74c818",
  "node_id": "C_kwDOANOeidoAKGJmNDg0ZTkzNDgzNzc2MDcyMjkxYzVjYWQyZTI4OTU2N2Q3NGM4MTg",
  "commit": {
    "author": {
      "name": "Faraz Shahbazker",
      "email": "fshahbazker@wavecomp.com",
      "date": "2022-02-02T10:17:22Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2022-02-05T00:37:25Z"
    },
    "message": "sim: Allow toggling of quiet NaN-bit semantics\n\nIEEE754-1985 specifies the top bit of the mantissa as an indicator\nof signalling vs. quiet NaN, but does not define the precise semantics.\nMost architectures treat this bit as indicating quiet NaN, but legacy\n(pre-R6) MIPS goes the other way and treats it as signalling NaN.\n\nThis used to be controlled by a macro that was only defined for MIPS.\nThis patch replaces the macro with a variable to track the current\nsemantics of the NaN bit and allows differentiation between older\n(pre-R6) and and newer MIPS cores.\n\n2022-02-01  Faraz Shahbazker  <fshahbazker@wavecomp.com>\n\nsim/common/ChangeLog:\n\t* sim-fpu.c (_sim_fpu): New.\n\t(pack_fpu, unpack_fpu): Allow reversal of quiet NaN semantics.\n\t* sim-fpu.h (sim_fpu_state): New struct.\n\t(_sim_fpu): New extern.\n\t(sim_fpu_quiet_nan_inverted): New define.\n\nsim/mips/ChangeLog:\n\t* cp1.h (fcsr_NAN2008_mask, fcsr_NAN2008_shift): New.\n\t* mips.igen (check_fpu): Select default quiet NaN mode\n\tfor legacy MIPS.\n\t* sim-main.h (SIM_QUIET_NAN_NEGATED): Remove.",
    "tree": {
      "sha": "c835425923f43be579228b97ca2b5b0688887e54",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c835425923f43be579228b97ca2b5b0688887e54"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bf484e93483776072291c5cad2e289567d74c818",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf484e93483776072291c5cad2e289567d74c818",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bf484e93483776072291c5cad2e289567d74c818",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bf484e93483776072291c5cad2e289567d74c818/comments",
  "author": {
    "login": "farazs-github",
    "id": 57776434,
    "node_id": "MDQ6VXNlcjU3Nzc2NDM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/57776434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/farazs-github",
    "html_url": "https://github.com/farazs-github",
    "followers_url": "https://api.github.com/users/farazs-github/followers",
    "following_url": "https://api.github.com/users/farazs-github/following{/other_user}",
    "gists_url": "https://api.github.com/users/farazs-github/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/farazs-github/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/farazs-github/subscriptions",
    "organizations_url": "https://api.github.com/users/farazs-github/orgs",
    "repos_url": "https://api.github.com/users/farazs-github/repos",
    "events_url": "https://api.github.com/users/farazs-github/events{/privacy}",
    "received_events_url": "https://api.github.com/users/farazs-github/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eb06e60a982e3903161252edf8fb8ae0c018c467",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb06e60a982e3903161252edf8fb8ae0c018c467",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eb06e60a982e3903161252edf8fb8ae0c018c467"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 48,
    "deletions": 18
  },
  "files": [
    {
      "sha": "276ad234174dc7319a405c3b305ef986dd1e1f50",
      "filename": "sim/common/sim-fpu.c",
      "status": "modified",
      "additions": 16,
      "deletions": 15,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf484e93483776072291c5cad2e289567d74c818/sim/common/sim-fpu.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf484e93483776072291c5cad2e289567d74c818/sim/common/sim-fpu.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-fpu.c?ref=bf484e93483776072291c5cad2e289567d74c818",
      "patch": "@@ -198,23 +198,21 @@ pack_fpu (const sim_fpu *src,\n       /* Force fraction to correct class.  */\n       fraction = src->fraction;\n       fraction >>= NR_GUARDS;\n-#ifdef SIM_QUIET_NAN_NEGATED\n-      fraction |= QUIET_NAN - 1;\n-#else\n-      fraction |= QUIET_NAN;\n-#endif\n+      if (sim_fpu_quiet_nan_inverted)\n+\tfraction |= QUIET_NAN - 1;\n+      else\n+\tfraction |= QUIET_NAN;\n       break;\n     case sim_fpu_class_snan:\n       sign = src->sign;\n       exp = EXPMAX;\n       /* Force fraction to correct class.  */\n       fraction = src->fraction;\n       fraction >>= NR_GUARDS;\n-#ifdef SIM_QUIET_NAN_NEGATED\n-      fraction |= QUIET_NAN;\n-#else\n-      fraction &= ~QUIET_NAN;\n-#endif\n+      if (sim_fpu_quiet_nan_inverted)\n+        fraction |= QUIET_NAN;\n+      else\n+\tfraction &= ~QUIET_NAN;\n       break;\n     case sim_fpu_class_infinity:\n       sign = src->sign;\n@@ -372,11 +370,10 @@ unpack_fpu (sim_fpu *dst, uint64_t packed, int is_double)\n \t  /* Non zero fraction, means NaN.  */\n \t  dst->sign = sign;\n \t  dst->fraction = (fraction << NR_GUARDS);\n-#ifdef SIM_QUIET_NAN_NEGATED\n-\t  qnan = (fraction & QUIET_NAN) == 0;\n-#else\n-\t  qnan = fraction >= QUIET_NAN;\n-#endif\n+\t  if (sim_fpu_quiet_nan_inverted)\n+\t    qnan = (fraction & QUIET_NAN) == 0;\n+\t  else\n+\t    qnan = fraction >= QUIET_NAN;\n \t  if (qnan)\n \t    dst->class = sim_fpu_class_qnan;\n \t  else\n@@ -2512,6 +2509,10 @@ sim_fpu_gt (int *is,\n /* A number of useful constants */\n \n #if EXTERN_SIM_FPU_P\n+sim_fpu_state _sim_fpu = {\n+  .quiet_nan_inverted = false,\n+};\n+\n const sim_fpu sim_fpu_zero = {\n   sim_fpu_class_zero, 0, 0, 0\n };"
    },
    {
      "sha": "b0b318cb2838939c71c1466ecf257deba0174212",
      "filename": "sim/common/sim-fpu.h",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf484e93483776072291c5cad2e289567d74c818/sim/common/sim-fpu.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf484e93483776072291c5cad2e289567d74c818/sim/common/sim-fpu.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-fpu.h?ref=bf484e93483776072291c5cad2e289567d74c818",
      "patch": "@@ -25,6 +25,8 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #define SIM_FPU_H\n \n \n+#include <stdbool.h>\n+\n \n /* The FPU intermediate type - this object, passed by reference,\n    should be treated as opaque.\n@@ -157,6 +159,17 @@ typedef enum\n \n \n \n+/* State used by the FPU.\n+\n+   FIXME: This state is global, but should be moved to SIM_CPU.  */\n+\n+typedef struct _sim_fpu_state {\n+  bool quiet_nan_inverted; /* Toggle quiet NaN semantics.  */\n+} sim_fpu_state;\n+\n+\n+\n+\n /* Directly map between a 32/64 bit register and the sim_fpu internal\n    type.\n \n@@ -375,7 +388,19 @@ enum {\n INLINE_SIM_FPU (int) sim_fpu_is (const sim_fpu *l);\n INLINE_SIM_FPU (int) sim_fpu_cmp (const sim_fpu *l, const sim_fpu *r);\n \n+/* Global FPU state.  */\n+\n+extern sim_fpu_state _sim_fpu;\n+\n+\n+/* IEEE 754-1985 specifies the top bit of the mantissa as an indicator\n+   of signalling vs. quiet NaN, but does not specify the semantics.\n+   Most architectures treat this bit as quiet NaN, but legacy (pre-R6)\n+   MIPS goes the other way and treats it as signalling.  This variable\n+   tracks the current semantics of the NaN bit and allows differentiation\n+   between pre-R6 and R6 MIPS cores.  */\n \n+#define sim_fpu_quiet_nan_inverted _sim_fpu.quiet_nan_inverted\n \n /* A number of useful constants.  */\n "
    },
    {
      "sha": "d6d8a8874fd23e010ef20354547f5a15fea6bac3",
      "filename": "sim/mips/cp1.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf484e93483776072291c5cad2e289567d74c818/sim/mips/cp1.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf484e93483776072291c5cad2e289567d74c818/sim/mips/cp1.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/cp1.h?ref=bf484e93483776072291c5cad2e289567d74c818",
      "patch": "@@ -40,6 +40,10 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #define fcsr_RM_mask       (0x00000003)\n #define fcsr_RM_shift      (0)\n \n+/* FCSR bits for IEEE754-2008 compliance.  */\n+#define fcsr_NAN2008_mask       (0x00040000)\n+#define fcsr_NAN2008_shift      (18)\n+\n #define fenr_FS            (0x00000004)\n \n /* Macros to update and retrieve the FCSR condition-code bits.  This"
    },
    {
      "sha": "b0c5e5995af2da50b7187cd420073d8e0a0d5fe8",
      "filename": "sim/mips/mips.igen",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf484e93483776072291c5cad2e289567d74c818/sim/mips/mips.igen",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf484e93483776072291c5cad2e289567d74c818/sim/mips/mips.igen",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/mips.igen?ref=bf484e93483776072291c5cad2e289567d74c818",
      "patch": "@@ -5050,6 +5050,9 @@\n {\n   if (! COP_Usable (1))\n     SignalExceptionCoProcessorUnusable (1);\n+\n+  FCSR &= ~fcsr_NAN2008_mask;\n+  sim_fpu_quiet_nan_inverted = true;\n }\n \n "
    },
    {
      "sha": "8e3e85f258559fb9a62c0f0c8d32c400c34f01b3",
      "filename": "sim/mips/sim-main.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bf484e93483776072291c5cad2e289567d74c818/sim/mips/sim-main.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bf484e93483776072291c5cad2e289567d74c818/sim/mips/sim-main.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/mips/sim-main.h?ref=bf484e93483776072291c5cad2e289567d74c818",
      "patch": "@@ -20,9 +20,6 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #ifndef SIM_MAIN_H\n #define SIM_MAIN_H\n \n-/* MIPS uses an unusual format for floating point quiet NaNs.  */\n-#define SIM_QUIET_NAN_NEGATED\n-\n #define SIM_CORE_SIGNAL(SD,CPU,CIA,MAP,NR_BYTES,ADDR,TRANSFER,ERROR) \\\n mips_core_signal ((SD), (CPU), (CIA), (MAP), (NR_BYTES), (ADDR), (TRANSFER), (ERROR))\n "
    }
  ]
}