{
  "sha": "b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjU3MGI5NTRiYzVjMWQ2YTZlZGIzNjNjN2JkYmE4MTRiYzFmZDE3NA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-25T02:18:43Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-02-26T00:07:13Z"
    },
    "message": "Limit bogus archive parsed_size\n\nArchive element size is given by data in the archive, and thus is\nsubject to attack by fuzzers.  The only harm this allows is allocation\nof huge amounts of memory, but some systems don't handle that well.\nSo limit archive element size to archive file size.\n\n\t* bfdio.c (bfd_get_file_size): Ignore bogus archive element sizes.",
    "tree": {
      "sha": "a7afa03ea8b4b9383264005d4f29413931a7468d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a7afa03ea8b4b9383264005d4f29413931a7468d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b570b954bc5c1d6a6edb363c7bdba814bc1fd174/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "24a15046c0ccc7fb7b95da1bb72fa66ad6bf6382",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/24a15046c0ccc7fb7b95da1bb72fa66ad6bf6382",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/24a15046c0ccc7fb7b95da1bb72fa66ad6bf6382"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 20,
    "deletions": 2
  },
  "files": [
    {
      "sha": "5855df7c6b32bda879bf85553ef5a88f11ef760b",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b570b954bc5c1d6a6edb363c7bdba814bc1fd174/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b570b954bc5c1d6a6edb363c7bdba814bc1fd174/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
      "patch": "@@ -1,3 +1,7 @@\n+2020-02-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfdio.c (bfd_get_file_size): Ignore bogus archive element sizes.\n+\n 2020-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR binutils/25584"
    },
    {
      "sha": "71ac17ec51515e157214769d8efb5fc45971d3df",
      "filename": "bfd/bfdio.c",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b570b954bc5c1d6a6edb363c7bdba814bc1fd174/bfd/bfdio.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b570b954bc5c1d6a6edb363c7bdba814bc1fd174/bfd/bfdio.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/bfdio.c?ref=b570b954bc5c1d6a6edb363c7bdba814bc1fd174",
      "patch": "@@ -25,6 +25,7 @@\n #include <limits.h>\n #include \"bfd.h\"\n #include \"libbfd.h\"\n+#include \"aout/ar.h\"\n \n #ifndef S_IXUSR\n #define S_IXUSR 0100    /* Execute by owner.  */\n@@ -460,11 +461,24 @@ DESCRIPTION\n ufile_ptr\n bfd_get_file_size (bfd *abfd)\n {\n+  ufile_ptr file_size, archive_size = (ufile_ptr) -1;\n+\n   if (abfd->my_archive != NULL\n       && !bfd_is_thin_archive (abfd->my_archive))\n-    return arelt_size (abfd);\n+    {\n+      struct areltdata *adata = (struct areltdata *) abfd->arelt_data;\n+      archive_size = adata->parsed_size;\n+      /* If the archive is compressed we can't compare against file size.  */\n+      if (memcmp (((struct ar_hdr *) adata->arch_header)->ar_fmag,\n+\t\t  \"Z\\012\", 2) == 0)\n+\treturn archive_size;\n+      abfd = abfd->my_archive;\n+    }\n \n-  return bfd_get_size (abfd);\n+  file_size = bfd_get_size (abfd);\n+  if (archive_size < file_size)\n+    return archive_size;\n+  return file_size;\n }\n \n /*"
    }
  ]
}