{
  "sha": "7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2ZmNWI5MzcwZjRmN2MwYzc1ZDczNGFhMTliOGYwMjA0MjlkNGJiNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-11-04T15:49:19Z"
    },
    "message": "Use bit stride when taking slice of array\n\nTesting with -fgnat-encodings=minimal showed that the Ada code failed\nto use the bit stride of an array when taking a slice.  This patch\nfixes the oversight.\n\ngdb/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (ada_value_slice_from_ptr): Use bit size.\n\ngdb/testsuite/ChangeLog\n2020-11-04  Tom Tromey  <tromey@adacore.com>\n\n\t* gdb.ada/array_of_variant.exp: New file.\n\t* gdb.ada/array_of_variant/p.adb: New file.\n\t* gdb.ada/array_of_variant/pck.ads: New file.\n\t* gdb.ada/array_of_variant/pck.adb: New file.",
    "tree": {
      "sha": "477e1f023488cb143b18423a4aa49e6e5d5e5a7c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/477e1f023488cb143b18423a4aa49e6e5d5e5a7c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10f6a3add6b4bdd1c83494cad9e9497271fe0922",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10f6a3add6b4bdd1c83494cad9e9497271fe0922"
    }
  ],
  "stats": {
    "total": 156,
    "additions": 153,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d4ea435ff5c3f5007cfadaff5f2f74a1887dbe28",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -1,3 +1,7 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (ada_value_slice_from_ptr): Use bit size.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2/read.c (read_array_type): Only apply stride to innermost"
    },
    {
      "sha": "fe3ea7009a622a17518eb9ac546a1c1508f0ee2c",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -2828,9 +2828,11 @@ ada_value_slice_from_ptr (struct value *array_ptr, struct type *type,\n       base_low_pos = base_low;\n     }\n \n-  base = value_as_address (array_ptr)\n-    + ((low_pos - base_low_pos)\n-       * TYPE_LENGTH (TYPE_TARGET_TYPE (type0)));\n+  ULONGEST stride = TYPE_FIELD_BITSIZE (slice_type, 0) / 8;\n+  if (stride == 0)\n+    stride = TYPE_LENGTH (TYPE_TARGET_TYPE (type0));\n+\n+  base = value_as_address (array_ptr) + (low_pos - base_low_pos) * stride;\n   return value_at_lazy (slice_type, base);\n }\n "
    },
    {
      "sha": "fe97b070cd45aa12736fba446ede2b05ac13129e",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -1,3 +1,10 @@\n+2020-11-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* gdb.ada/array_of_variant.exp: New file.\n+\t* gdb.ada/array_of_variant/p.adb: New file.\n+\t* gdb.ada/array_of_variant/pck.ads: New file.\n+\t* gdb.ada/array_of_variant/pck.adb: New file.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/enum_idx_packed.exp: Add test."
    },
    {
      "sha": "f2c343fdab0f8567eea4104148c61e90240e9b4a",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant.exp",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant.exp?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -0,0 +1,52 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+load_lib \"ada.exp\"\n+\n+if { [skip_ada_tests] } { return -1 }\n+\n+standard_ada_testfile p\n+\n+foreach_with_prefix scenario {all minimal} {\n+    set flags [list debug additional_flags=-fgnat-encodings=$scenario]\n+\n+    if {[gdb_compile_ada \"${srcfile}\" \"${binfile}\" executable $flags] != \"\"} {\n+\treturn -1\n+    }\n+\n+    clean_restart ${testfile}\n+\n+    set bp_location [gdb_get_line_number \"START\" ${testdir}/p.adb]\n+    runto \"p.adb:$bp_location\"\n+\n+    set v1 \"(tag => object, values => (2, 2, 2, 2, 2))\"\n+    set v2 \"(tag => unused)\"\n+\n+    gdb_test \"print objects\" \\\n+\t[string_to_regexp \" = ($v1, $v2)\"] \\\n+\t\"print entire array\"\n+    gdb_test \"print objects(1)\" \\\n+\t[string_to_regexp \" = $v1\"] \\\n+\t\"print first array element\"\n+    gdb_test \"print objects(1 .. 1)\" \\\n+\t[string_to_regexp \" = ($v1)\"] \\\n+\t\"print first array slice\"\n+    gdb_test \"print objects(2)\" \\\n+\t[string_to_regexp \" = $v2\"] \\\n+\t\"print second array element\"\n+    gdb_test \"print objects(2 .. 2)\" \\\n+\t[string_to_regexp \" = (2 => $v2)\"] \\\n+\t\"print second array slice\"\n+}"
    },
    {
      "sha": "d9974ef43bfda284e667e20f94a39f8411cff0e0",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/p.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant/p.adb?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -0,0 +1,39 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with Pck; use Pck;\n+\n+procedure P is\n+\n+   type Tag_T is (Unused, Object);\n+\n+   type Array_T is array (1 .. Five) of Integer;\n+\n+   type Payload_T (Tag : Tag_T := Unused) is\n+      record\n+         case Tag is\n+            when Object =>\n+               Values : Array_T := (others => 1);\n+            when Unused =>\n+               null;\n+         end case;\n+      end record;\n+\n+   Objects : array (1 .. 2) of Payload_T;\n+\n+begin\n+   Objects (1) := (Tag => Object, Values => (others => 2));\n+   Do_Nothing (Objects'Address);  --  START\n+end P;"
    },
    {
      "sha": "af4fe6d6aa74e2139b3d9b8541a1896c58f12d52",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant/pck.adb",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/pck.adb",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/pck.adb",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant/pck.adb?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+package body Pck is\n+\n+   procedure Do_Nothing (A : System.Address) is\n+   begin\n+      null;\n+   end Do_Nothing;\n+\n+end Pck;"
    },
    {
      "sha": "f2a676ca205b711fe6630011e16f19db7e01606f",
      "filename": "gdb/testsuite/gdb.ada/array_of_variant/pck.ads",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/pck.ads",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5/gdb/testsuite/gdb.ada/array_of_variant/pck.ads",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.ada/array_of_variant/pck.ads?ref=7ff5b9370f4f7c0c75d734aa19b8f020429d4bb5",
      "patch": "@@ -0,0 +1,23 @@\n+--  Copyright 2020 Free Software Foundation, Inc.\n+--\n+--  This program is free software; you can redistribute it and/or modify\n+--  it under the terms of the GNU General Public License as published by\n+--  the Free Software Foundation; either version 3 of the License, or\n+--  (at your option) any later version.\n+--\n+--  This program is distributed in the hope that it will be useful,\n+--  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+--  GNU General Public License for more details.\n+--\n+--  You should have received a copy of the GNU General Public License\n+--  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+with System;\n+\n+package Pck is\n+   Five : Integer := 5;\n+\n+   procedure Do_Nothing (A : System.Address);\n+\n+end Pck;"
    }
  ]
}