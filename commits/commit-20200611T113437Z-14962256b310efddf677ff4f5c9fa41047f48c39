{
  "sha": "14962256b310efddf677ff4f5c9fa41047f48c39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTQ5NjIyNTZiMzEwZWZkZGY2NzdmZjRmNWM5ZmE0MTA0N2Y0OGMzOQ==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-06-11T11:34:37Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-06-11T11:34:37Z"
    },
    "message": "[PATCH]: aarch64: Refactor representation of system registers\n\nPrior to this patch, the information describing the AArch64 system\nregisters was separate from the information describing which system\nregisters are available depending on the CPU feature set. Indeed, the\nlatter was implemented as a separate function from the main table with\nthe system register information.\n\nThis patch remedies this situation and puts the feature information into\nthe system register table itself.\n\nThis has several advantages:\n\n * Having all the information described in one place is easier to\n   maintain.\n * The logic to check whether a system register is supported now becomes\n   trivial (and much more efficient).\n\nSince this patch ended up touching every line of the system register\ntable, I took the opportunity to make the formatting more consistent and\nremove some redundant comments.\n\nNote that there is still more refactoring that could be done along the\nsame lines here (e.g. with the TLB instructions) but this seemed like a\nreasonable first pass.\n\nTesting:\n\n * Regression tested an x64 -> aarch64-none-elf cross binutils.\n * Built aarch64-none-elf cross toolchain, checked newlib startup\n   code still works.\n * Bootstrapped binutils on aarch64-linux-gnu, regression tested.\n * Built aarch64 kernel using new binutils with allyesconfig.\n\nOK for master? If so, I'll need a maintainer to commit on my behalf\nsince I don't have write access.\n\nThanks,\nAlex\n\n---\n\ninclude/ChangeLog:\n\n2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n\n\t* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct\n\tdescribing system registers.\n\nopcodes/ChangeLog:\n\n2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n\n\t* aarch64-opc.c (SYSREG): New macro for describing system registers.\n\t(SR_CORE): Likewise.\n\t(SR_FEAT): Likewise.\n\t(SR_RNG): Likewise.\n\t(SR_V8_1): Likewise.\n\t(SR_V8_2): Likewise.\n\t(SR_V8_3): Likewise.\n\t(SR_V8_4): Likewise.\n\t(SR_PAN): Likewise.\n\t(SR_RAS): Likewise.\n\t(SR_SSBS): Likewise.\n\t(SR_SVE): Likewise.\n\t(SR_ID_PFR2): Likewise.\n\t(SR_PROFILE): Likewise.\n\t(SR_MEMTAG): Likewise.\n\t(SR_SCXTNUM): Likewise.\n\t(aarch64_sys_regs): Refactor to store feature information in the table.\n\t(aarch64_sys_reg_supported_p): Collapse logic for system registers\n\tthat now describe their own features.\n\t(aarch64_pstatefield_supported_p): Likewise.",
    "tree": {
      "sha": "13916edc5aaa56b7b143192e57fb3a1e93cb151e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/13916edc5aaa56b7b143192e57fb3a1e93cb151e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/14962256b310efddf677ff4f5c9fa41047f48c39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14962256b310efddf677ff4f5c9fa41047f48c39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/14962256b310efddf677ff4f5c9fa41047f48c39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/14962256b310efddf677ff4f5c9fa41047f48c39/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "382264181de4bd6fedd09fe4a846b333b7ed04a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/382264181de4bd6fedd09fe4a846b333b7ed04a2",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/382264181de4bd6fedd09fe4a846b333b7ed04a2"
    }
  ],
  "stats": {
    "total": 1103,
    "additions": 480,
    "deletions": 623
  },
  "files": [
    {
      "sha": "06426ce9b948e40607071ecd66f9a46f730ca05b",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14962256b310efddf677ff4f5c9fa41047f48c39/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14962256b310efddf677ff4f5c9fa41047f48c39/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=14962256b310efddf677ff4f5c9fa41047f48c39",
      "patch": "@@ -1,3 +1,8 @@\n+2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_sys_reg): Add required features to struct\n+\tdescribing system registers.\n+\n 2020-06-11  Alan Modra  <amodra@gmail.com>\n \n \t* elf/mips.h (Elf32_RegInfo): Use fixed width integer types."
    },
    {
      "sha": "9a7448def7f0f273c366e316d3ef9d505da4e85b",
      "filename": "include/opcode/aarch64.h",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14962256b310efddf677ff4f5c9fa41047f48c39/include/opcode/aarch64.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14962256b310efddf677ff4f5c9fa41047f48c39/include/opcode/aarch64.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/opcode/aarch64.h?ref=14962256b310efddf677ff4f5c9fa41047f48c39",
      "patch": "@@ -965,6 +965,10 @@ typedef struct\n   const char *  name;\n   aarch64_insn\tvalue;\n   uint32_t\tflags;\n+\n+  /* A set of features, all of which are required for this system register to be\n+     available.  */\n+  aarch64_feature_set features;\n } aarch64_sys_reg;\n \n extern const aarch64_sys_reg aarch64_sys_regs [];"
    },
    {
      "sha": "c4c0ab516c36bad3d8727b7a93b7b17b732afd5d",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14962256b310efddf677ff4f5c9fa41047f48c39/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14962256b310efddf677ff4f5c9fa41047f48c39/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=14962256b310efddf677ff4f5c9fa41047f48c39",
      "patch": "@@ -1,3 +1,26 @@\n+2020-06-11  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* aarch64-opc.c (SYSREG): New macro for describing system registers.\n+\t(SR_CORE): Likewise.\n+\t(SR_FEAT): Likewise.\n+\t(SR_RNG): Likewise.\n+\t(SR_V8_1): Likewise.\n+\t(SR_V8_2): Likewise.\n+\t(SR_V8_3): Likewise.\n+\t(SR_V8_4): Likewise.\n+\t(SR_PAN): Likewise.\n+\t(SR_RAS): Likewise.\n+\t(SR_SSBS): Likewise.\n+\t(SR_SVE): Likewise.\n+\t(SR_ID_PFR2): Likewise.\n+\t(SR_PROFILE): Likewise.\n+\t(SR_MEMTAG): Likewise.\n+\t(SR_SCXTNUM): Likewise.\n+\t(aarch64_sys_regs): Refactor to store feature information in the table.\n+\t(aarch64_sys_reg_supported_p): Collapse logic for system registers\n+\tthat now describe their own features.\n+\t(aarch64_pstatefield_supported_p): Likewise.\n+\n 2020-06-09  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* i386-dis.c (prefix_table): Fix a typo in comments."
    },
    {
      "sha": "148ffb7bde6d23589b7d575a7d187c45ae68c7a4",
      "filename": "opcodes/aarch64-opc.c",
      "status": "modified",
      "additions": 448,
      "deletions": 623,
      "changes": 1071,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/14962256b310efddf677ff4f5c9fa41047f48c39/opcodes/aarch64-opc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/14962256b310efddf677ff4f5c9fa41047f48c39/opcodes/aarch64-opc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/aarch64-opc.c?ref=14962256b310efddf677ff4f5c9fa41047f48c39",
      "patch": "@@ -3802,417 +3802,446 @@ aarch64_print_operand (char *buf, size_t size, bfd_vma pc,\n #define C14 14\n #define C15 15\n \n+#define SYSREG(name, encoding, flags, features) \\\n+  { name, encoding, flags, features }\n+\n+#define SR_CORE(n,e,f) SYSREG (n,e,f,0)\n+\n+#define SR_FEAT(n,e,f,feat) \\\n+  SYSREG ((n), (e), (f) | F_ARCHEXT, AARCH64_FEATURE_##feat)\n+\n+#define SR_RNG(n,e,f) \\\n+  SYSREG ((n), (e), (f) | F_ARCHEXT, AARCH64_FEATURE_RNG | AARCH64_FEATURE_V8_5)\n+\n+#define SR_V8_1(n,e,f)\t  SR_FEAT (n,e,f,V8_1)\n+#define SR_V8_2(n,e,f)\t  SR_FEAT (n,e,f,V8_2)\n+#define SR_V8_3(n,e,f)\t  SR_FEAT (n,e,f,V8_3)\n+#define SR_V8_4(n,e,f)\t  SR_FEAT (n,e,f,V8_4)\n+#define SR_V8_4(n,e,f)\t  SR_FEAT (n,e,f,V8_4)\n+#define SR_PAN(n,e,f)\t  SR_FEAT (n,e,f,PAN)\n+#define SR_RAS(n,e,f)\t  SR_FEAT (n,e,f,RAS)\n+#define SR_SSBS(n,e,f)\t  SR_FEAT (n,e,f,SSBS)\n+#define SR_SVE(n,e,f)\t  SR_FEAT (n,e,f,SVE)\n+#define SR_ID_PFR2(n,e,f) SR_FEAT (n,e,f,ID_PFR2)\n+#define SR_PROFILE(n,e,f) SR_FEAT (n,e,f,PROFILE)\n+#define SR_MEMTAG(n,e,f)  SR_FEAT (n,e,f,MEMTAG)\n+#define SR_SCXTNUM(n,e,f) SR_FEAT (n,e,f,SCXTNUM)\n+\n /* TODO there is one more issues need to be resolved\n-   1. handle cpu-implementation-defined system registers.  */\n+   1. handle cpu-implementation-defined system registers.\n+\n+   Note that the F_REG_{READ,WRITE} flags mean read-only and write-only\n+   respectively.  If neither of these are set then the register is read-write.  */\n const aarch64_sys_reg aarch64_sys_regs [] =\n {\n-  { \"spsr_el1\",         CPEN_(0,C0,0),\t0 }, /* = spsr_svc */\n-  { \"spsr_el12\",\tCPEN_ (5, C0, 0), F_ARCHEXT },\n-  { \"elr_el1\",          CPEN_(0,C0,1),\t0 },\n-  { \"elr_el12\",\tCPEN_ (5, C0, 1), F_ARCHEXT },\n-  { \"sp_el0\",           CPEN_(0,C1,0),\t0 },\n-  { \"spsel\",            CPEN_(0,C2,0),\t0 },\n-  { \"daif\",             CPEN_(3,C2,1),\t0 },\n-  { \"currentel\",        CPEN_(0,C2,2),\tF_REG_READ }, /* RO */\n-  { \"pan\",\t\tCPEN_(0,C2,3),\tF_ARCHEXT },\n-  { \"uao\",\t\tCPEN_ (0, C2, 4), F_ARCHEXT },\n-  { \"nzcv\",             CPEN_(3,C2,0),\t0 },\n-  { \"ssbs\",\t\tCPEN_(3,C2,6),  F_ARCHEXT },\n-  { \"fpcr\",             CPEN_(3,C4,0),\t0 },\n-  { \"fpsr\",             CPEN_(3,C4,1),\t0 },\n-  { \"dspsr_el0\",        CPEN_(3,C5,0),\t0 },\n-  { \"dlr_el0\",          CPEN_(3,C5,1),\t0 },\n-  { \"spsr_el2\",         CPEN_(4,C0,0),\t0 }, /* = spsr_hyp */\n-  { \"elr_el2\",          CPEN_(4,C0,1),\t0 },\n-  { \"sp_el1\",           CPEN_(4,C1,0),\t0 },\n-  { \"spsr_irq\",         CPEN_(4,C3,0),\t0 },\n-  { \"spsr_abt\",         CPEN_(4,C3,1),\t0 },\n-  { \"spsr_und\",         CPEN_(4,C3,2),\t0 },\n-  { \"spsr_fiq\",         CPEN_(4,C3,3),\t0 },\n-  { \"spsr_el3\",         CPEN_(6,C0,0),\t0 },\n-  { \"elr_el3\",          CPEN_(6,C0,1),\t0 },\n-  { \"sp_el2\",           CPEN_(6,C1,0),\t0 },\n-  { \"spsr_svc\",         CPEN_(0,C0,0),\tF_DEPRECATED }, /* = spsr_el1 */\n-  { \"spsr_hyp\",         CPEN_(4,C0,0),\tF_DEPRECATED }, /* = spsr_el2 */\n-  { \"midr_el1\",         CPENC(3,0,C0,C0,0),\tF_REG_READ }, /* RO */\n-  { \"ctr_el0\",          CPENC(3,3,C0,C0,1),\tF_REG_READ }, /* RO */\n-  { \"mpidr_el1\",        CPENC(3,0,C0,C0,5),\tF_REG_READ }, /* RO */\n-  { \"revidr_el1\",       CPENC(3,0,C0,C0,6),\tF_REG_READ }, /* RO */\n-  { \"aidr_el1\",         CPENC(3,1,C0,C0,7),\tF_REG_READ }, /* RO */\n-  { \"dczid_el0\",        CPENC(3,3,C0,C0,7),\tF_REG_READ }, /* RO */\n-  { \"id_dfr0_el1\",      CPENC(3,0,C0,C1,2),\tF_REG_READ }, /* RO */\n-  { \"id_pfr0_el1\",      CPENC(3,0,C0,C1,0),\tF_REG_READ }, /* RO */\n-  { \"id_pfr1_el1\",      CPENC(3,0,C0,C1,1),\tF_REG_READ }, /* RO */\n-  { \"id_pfr2_el1\",      CPENC(3,0,C0,C3,4),\tF_ARCHEXT | F_REG_READ}, /* RO */\n-  { \"id_afr0_el1\",      CPENC(3,0,C0,C1,3),\tF_REG_READ }, /* RO */\n-  { \"id_mmfr0_el1\",     CPENC(3,0,C0,C1,4),\tF_REG_READ }, /* RO */\n-  { \"id_mmfr1_el1\",     CPENC(3,0,C0,C1,5),\tF_REG_READ }, /* RO */\n-  { \"id_mmfr2_el1\",     CPENC(3,0,C0,C1,6),\tF_REG_READ }, /* RO */\n-  { \"id_mmfr3_el1\",     CPENC(3,0,C0,C1,7),\tF_REG_READ }, /* RO */\n-  { \"id_mmfr4_el1\",     CPENC(3,0,C0,C2,6),\tF_REG_READ }, /* RO */\n-  { \"id_isar0_el1\",     CPENC(3,0,C0,C2,0),\tF_REG_READ }, /* RO */\n-  { \"id_isar1_el1\",     CPENC(3,0,C0,C2,1),\tF_REG_READ }, /* RO */\n-  { \"id_isar2_el1\",     CPENC(3,0,C0,C2,2),\tF_REG_READ }, /* RO */\n-  { \"id_isar3_el1\",     CPENC(3,0,C0,C2,3),\tF_REG_READ }, /* RO */\n-  { \"id_isar4_el1\",     CPENC(3,0,C0,C2,4),\tF_REG_READ }, /* RO */\n-  { \"id_isar5_el1\",     CPENC(3,0,C0,C2,5),\tF_REG_READ }, /* RO */\n-  { \"mvfr0_el1\",        CPENC(3,0,C0,C3,0),\tF_REG_READ }, /* RO */\n-  { \"mvfr1_el1\",        CPENC(3,0,C0,C3,1),\tF_REG_READ }, /* RO */\n-  { \"mvfr2_el1\",        CPENC(3,0,C0,C3,2),\tF_REG_READ }, /* RO */\n-  { \"ccsidr_el1\",       CPENC(3,1,C0,C0,0),\tF_REG_READ }, /* RO */\n-  { \"id_aa64pfr0_el1\",  CPENC(3,0,C0,C4,0),\tF_REG_READ }, /* RO */\n-  { \"id_aa64pfr1_el1\",  CPENC(3,0,C0,C4,1),\tF_REG_READ }, /* RO */\n-  { \"id_aa64dfr0_el1\",  CPENC(3,0,C0,C5,0),\tF_REG_READ }, /* RO */\n-  { \"id_aa64dfr1_el1\",  CPENC(3,0,C0,C5,1),\tF_REG_READ }, /* RO */\n-  { \"id_aa64isar0_el1\", CPENC(3,0,C0,C6,0),\tF_REG_READ }, /* RO */\n-  { \"id_aa64isar1_el1\", CPENC(3,0,C0,C6,1),\tF_REG_READ }, /* RO */\n-  { \"id_aa64mmfr0_el1\", CPENC(3,0,C0,C7,0),\tF_REG_READ }, /* RO */\n-  { \"id_aa64mmfr1_el1\", CPENC(3,0,C0,C7,1),\tF_REG_READ }, /* RO */\n-  { \"id_aa64mmfr2_el1\", CPENC (3, 0, C0, C7, 2), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"id_aa64afr0_el1\",  CPENC(3,0,C0,C5,4),\tF_REG_READ }, /* RO */\n-  { \"id_aa64afr1_el1\",  CPENC(3,0,C0,C5,5),\tF_REG_READ }, /* RO */\n-  { \"id_aa64zfr0_el1\",  CPENC (3, 0, C0, C4, 4), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"clidr_el1\",        CPENC(3,1,C0,C0,1),\tF_REG_READ }, /* RO */\n-  { \"csselr_el1\",       CPENC(3,2,C0,C0,0),\t0 },\n-  { \"vpidr_el2\",        CPENC(3,4,C0,C0,0),\t0 },\n-  { \"vmpidr_el2\",       CPENC(3,4,C0,C0,5),\t0 },\n-  { \"sctlr_el1\",        CPENC(3,0,C1,C0,0),\t0 },\n-  { \"sctlr_el2\",        CPENC(3,4,C1,C0,0),\t0 },\n-  { \"sctlr_el3\",        CPENC(3,6,C1,C0,0),\t0 },\n-  { \"sctlr_el12\",\tCPENC (3, 5, C1, C0, 0), F_ARCHEXT },\n-  { \"actlr_el1\",        CPENC(3,0,C1,C0,1),\t0 },\n-  { \"actlr_el2\",        CPENC(3,4,C1,C0,1),\t0 },\n-  { \"actlr_el3\",        CPENC(3,6,C1,C0,1),\t0 },\n-  { \"cpacr_el1\",        CPENC(3,0,C1,C0,2),\t0 },\n-  { \"cpacr_el12\",\tCPENC (3, 5, C1, C0, 2), F_ARCHEXT },\n-  { \"cptr_el2\",         CPENC(3,4,C1,C1,2),\t0 },\n-  { \"cptr_el3\",         CPENC(3,6,C1,C1,2),\t0 },\n-  { \"scr_el3\",          CPENC(3,6,C1,C1,0),\t0 },\n-  { \"hcr_el2\",          CPENC(3,4,C1,C1,0),\t0 },\n-  { \"mdcr_el2\",         CPENC(3,4,C1,C1,1),\t0 },\n-  { \"mdcr_el3\",         CPENC(3,6,C1,C3,1),\t0 },\n-  { \"hstr_el2\",         CPENC(3,4,C1,C1,3),\t0 },\n-  { \"hacr_el2\",         CPENC(3,4,C1,C1,7),\t0 },\n-  { \"zcr_el1\",          CPENC (3, 0, C1, C2, 0), F_ARCHEXT },\n-  { \"zcr_el12\",         CPENC (3, 5, C1, C2, 0), F_ARCHEXT },\n-  { \"zcr_el2\",          CPENC (3, 4, C1, C2, 0), F_ARCHEXT },\n-  { \"zcr_el3\",          CPENC (3, 6, C1, C2, 0), F_ARCHEXT },\n-  { \"zidr_el1\",         CPENC (3, 0, C0, C0, 7), F_ARCHEXT },\n-  { \"ttbr0_el1\",        CPENC(3,0,C2,C0,0),\t0 },\n-  { \"ttbr1_el1\",        CPENC(3,0,C2,C0,1),\t0 },\n-  { \"ttbr0_el2\",        CPENC(3,4,C2,C0,0),\t0 },\n-  { \"ttbr1_el2\",\tCPENC (3, 4, C2, C0, 1), F_ARCHEXT },\n-  { \"ttbr0_el3\",        CPENC(3,6,C2,C0,0),\t0 },\n-  { \"ttbr0_el12\",\tCPENC (3, 5, C2, C0, 0), F_ARCHEXT },\n-  { \"ttbr1_el12\",\tCPENC (3, 5, C2, C0, 1), F_ARCHEXT },\n-  { \"vttbr_el2\",        CPENC(3,4,C2,C1,0),\t0 },\n-  { \"tcr_el1\",          CPENC(3,0,C2,C0,2),\t0 },\n-  { \"tcr_el2\",          CPENC(3,4,C2,C0,2),\t0 },\n-  { \"tcr_el3\",          CPENC(3,6,C2,C0,2),\t0 },\n-  { \"tcr_el12\",\t\tCPENC (3, 5, C2, C0, 2), F_ARCHEXT },\n-  { \"vtcr_el2\",         CPENC(3,4,C2,C1,2),\t0 },\n-  { \"apiakeylo_el1\",\tCPENC (3, 0, C2, C1, 0), F_ARCHEXT },\n-  { \"apiakeyhi_el1\",\tCPENC (3, 0, C2, C1, 1), F_ARCHEXT },\n-  { \"apibkeylo_el1\",\tCPENC (3, 0, C2, C1, 2), F_ARCHEXT },\n-  { \"apibkeyhi_el1\",\tCPENC (3, 0, C2, C1, 3), F_ARCHEXT },\n-  { \"apdakeylo_el1\",\tCPENC (3, 0, C2, C2, 0), F_ARCHEXT },\n-  { \"apdakeyhi_el1\",\tCPENC (3, 0, C2, C2, 1), F_ARCHEXT },\n-  { \"apdbkeylo_el1\",\tCPENC (3, 0, C2, C2, 2), F_ARCHEXT },\n-  { \"apdbkeyhi_el1\",\tCPENC (3, 0, C2, C2, 3), F_ARCHEXT },\n-  { \"apgakeylo_el1\",\tCPENC (3, 0, C2, C3, 0), F_ARCHEXT },\n-  { \"apgakeyhi_el1\",\tCPENC (3, 0, C2, C3, 1), F_ARCHEXT },\n-  { \"afsr0_el1\",        CPENC(3,0,C5,C1,0),\t0 },\n-  { \"afsr1_el1\",        CPENC(3,0,C5,C1,1),\t0 },\n-  { \"afsr0_el2\",        CPENC(3,4,C5,C1,0),\t0 },\n-  { \"afsr1_el2\",        CPENC(3,4,C5,C1,1),\t0 },\n-  { \"afsr0_el3\",        CPENC(3,6,C5,C1,0),\t0 },\n-  { \"afsr0_el12\",\tCPENC (3, 5, C5, C1, 0), F_ARCHEXT },\n-  { \"afsr1_el3\",        CPENC(3,6,C5,C1,1),\t0 },\n-  { \"afsr1_el12\",\tCPENC (3, 5, C5, C1, 1), F_ARCHEXT },\n-  { \"esr_el1\",          CPENC(3,0,C5,C2,0),\t0 },\n-  { \"esr_el2\",          CPENC(3,4,C5,C2,0),\t0 },\n-  { \"esr_el3\",          CPENC(3,6,C5,C2,0),\t0 },\n-  { \"esr_el12\",\t\tCPENC (3, 5, C5, C2, 0), F_ARCHEXT },\n-  { \"vsesr_el2\",\tCPENC (3, 4, C5, C2, 3), F_ARCHEXT },\n-  { \"fpexc32_el2\",      CPENC(3,4,C5,C3,0),\t0 },\n-  { \"erridr_el1\",\tCPENC (3, 0, C5, C3, 0), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"errselr_el1\",\tCPENC (3, 0, C5, C3, 1), F_ARCHEXT },\n-  { \"erxfr_el1\",\tCPENC (3, 0, C5, C4, 0), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"erxctlr_el1\",\tCPENC (3, 0, C5, C4, 1), F_ARCHEXT },\n-  { \"erxstatus_el1\",\tCPENC (3, 0, C5, C4, 2), F_ARCHEXT },\n-  { \"erxaddr_el1\",\tCPENC (3, 0, C5, C4, 3), F_ARCHEXT },\n-  { \"erxmisc0_el1\",\tCPENC (3, 0, C5, C5, 0), F_ARCHEXT },\n-  { \"erxmisc1_el1\",\tCPENC (3, 0, C5, C5, 1), F_ARCHEXT },\n-  { \"far_el1\",          CPENC(3,0,C6,C0,0),\t0 },\n-  { \"far_el2\",          CPENC(3,4,C6,C0,0),\t0 },\n-  { \"far_el3\",          CPENC(3,6,C6,C0,0),\t0 },\n-  { \"far_el12\",\t\tCPENC (3, 5, C6, C0, 0), F_ARCHEXT },\n-  { \"hpfar_el2\",        CPENC(3,4,C6,C0,4),\t0 },\n-  { \"par_el1\",          CPENC(3,0,C7,C4,0),\t0 },\n-  { \"mair_el1\",         CPENC(3,0,C10,C2,0),\t0 },\n-  { \"mair_el2\",         CPENC(3,4,C10,C2,0),\t0 },\n-  { \"mair_el3\",         CPENC(3,6,C10,C2,0),\t0 },\n-  { \"mair_el12\",\tCPENC (3, 5, C10, C2, 0), F_ARCHEXT },\n-  { \"amair_el1\",        CPENC(3,0,C10,C3,0),\t0 },\n-  { \"amair_el2\",        CPENC(3,4,C10,C3,0),\t0 },\n-  { \"amair_el3\",        CPENC(3,6,C10,C3,0),\t0 },\n-  { \"amair_el12\",\tCPENC (3, 5, C10, C3, 0), F_ARCHEXT },\n-  { \"vbar_el1\",         CPENC(3,0,C12,C0,0),\t0 },\n-  { \"vbar_el2\",         CPENC(3,4,C12,C0,0),\t0 },\n-  { \"vbar_el3\",         CPENC(3,6,C12,C0,0),\t0 },\n-  { \"vbar_el12\",\tCPENC (3, 5, C12, C0, 0), F_ARCHEXT },\n-  { \"rvbar_el1\",        CPENC(3,0,C12,C0,1),\tF_REG_READ }, /* RO */\n-  { \"rvbar_el2\",        CPENC(3,4,C12,C0,1),\tF_REG_READ }, /* RO */\n-  { \"rvbar_el3\",        CPENC(3,6,C12,C0,1),\tF_REG_READ }, /* RO */\n-  { \"rmr_el1\",          CPENC(3,0,C12,C0,2),\t0 },\n-  { \"rmr_el2\",          CPENC(3,4,C12,C0,2),\t0 },\n-  { \"rmr_el3\",          CPENC(3,6,C12,C0,2),\t0 },\n-  { \"isr_el1\",          CPENC(3,0,C12,C1,0),\tF_REG_READ }, /* RO */\n-  { \"disr_el1\",\t\tCPENC (3, 0, C12, C1, 1), F_ARCHEXT },\n-  { \"vdisr_el2\",\tCPENC (3, 4, C12, C1, 1), F_ARCHEXT },\n-  { \"contextidr_el1\",   CPENC(3,0,C13,C0,1),\t0 },\n-  { \"contextidr_el2\",\tCPENC (3, 4, C13, C0, 1), F_ARCHEXT },\n-  { \"contextidr_el12\",\tCPENC (3, 5, C13, C0, 1), F_ARCHEXT },\n-  { \"rndr\",\t\tCPENC(3,3,C2,C4,0), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"rndrrs\",\t\tCPENC(3,3,C2,C4,1), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"tco\",\t\tCPENC(3,3,C4,C2,7), F_ARCHEXT },\n-  { \"tfsre0_el1\",\tCPENC(3,0,C5,C6,1), F_ARCHEXT },\n-  { \"tfsr_el1\",\t\tCPENC(3,0,C5,C6,0), F_ARCHEXT },\n-  { \"tfsr_el2\",\t\tCPENC(3,4,C5,C6,0), F_ARCHEXT },\n-  { \"tfsr_el3\",\t\tCPENC(3,6,C5,C6,0), F_ARCHEXT },\n-  { \"tfsr_el12\",\tCPENC(3,5,C5,C6,0), F_ARCHEXT },\n-  { \"rgsr_el1\",\t\tCPENC(3,0,C1,C0,5), F_ARCHEXT },\n-  { \"gcr_el1\",\t\tCPENC(3,0,C1,C0,6), F_ARCHEXT },\n-  { \"gmid_el1\",\t\tCPENC(3,1,C0,C0,4), F_ARCHEXT | F_REG_READ }, /* RO */\n-  { \"tpidr_el0\",        CPENC(3,3,C13,C0,2),\t0 },\n-  { \"tpidrro_el0\",      CPENC(3,3,C13,C0,3),\t0 }, /* RW */\n-  { \"tpidr_el1\",        CPENC(3,0,C13,C0,4),\t0 },\n-  { \"tpidr_el2\",        CPENC(3,4,C13,C0,2),\t0 },\n-  { \"tpidr_el3\",        CPENC(3,6,C13,C0,2),\t0 },\n-  { \"scxtnum_el0\",      CPENC(3,3,C13,C0,7), F_ARCHEXT },\n-  { \"scxtnum_el1\",      CPENC(3,0,C13,C0,7), F_ARCHEXT },\n-  { \"scxtnum_el2\",      CPENC(3,4,C13,C0,7), F_ARCHEXT },\n-  { \"scxtnum_el12\",     CPENC(3,5,C13,C0,7), F_ARCHEXT },\n-  { \"scxtnum_el3\",      CPENC(3,6,C13,C0,7), F_ARCHEXT },\n-  { \"teecr32_el1\",      CPENC(2,2,C0, C0,0),\t0 }, /* See section 3.9.7.1 */\n-  { \"cntfrq_el0\",       CPENC(3,3,C14,C0,0),\t0 }, /* RW */\n-  { \"cntpct_el0\",       CPENC(3,3,C14,C0,1),\tF_REG_READ }, /* RO */\n-  { \"cntvct_el0\",       CPENC(3,3,C14,C0,2),\tF_REG_READ }, /* RO */\n-  { \"cntvoff_el2\",      CPENC(3,4,C14,C0,3),\t0 },\n-  { \"cntkctl_el1\",      CPENC(3,0,C14,C1,0),\t0 },\n-  { \"cntkctl_el12\",\tCPENC (3, 5, C14, C1, 0), F_ARCHEXT },\n-  { \"cnthctl_el2\",      CPENC(3,4,C14,C1,0),\t0 },\n-  { \"cntp_tval_el0\",    CPENC(3,3,C14,C2,0),\t0 },\n-  { \"cntp_tval_el02\",\tCPENC (3, 5, C14, C2, 0), F_ARCHEXT },\n-  { \"cntp_ctl_el0\",     CPENC(3,3,C14,C2,1),\t0 },\n-  { \"cntp_ctl_el02\",\tCPENC (3, 5, C14, C2, 1), F_ARCHEXT },\n-  { \"cntp_cval_el0\",    CPENC(3,3,C14,C2,2),\t0 },\n-  { \"cntp_cval_el02\",\tCPENC (3, 5, C14, C2, 2), F_ARCHEXT },\n-  { \"cntv_tval_el0\",    CPENC(3,3,C14,C3,0),\t0 },\n-  { \"cntv_tval_el02\",\tCPENC (3, 5, C14, C3, 0), F_ARCHEXT },\n-  { \"cntv_ctl_el0\",     CPENC(3,3,C14,C3,1),\t0 },\n-  { \"cntv_ctl_el02\",\tCPENC (3, 5, C14, C3, 1), F_ARCHEXT },\n-  { \"cntv_cval_el0\",    CPENC(3,3,C14,C3,2),\t0 },\n-  { \"cntv_cval_el02\",\tCPENC (3, 5, C14, C3, 2), F_ARCHEXT },\n-  { \"cnthp_tval_el2\",   CPENC(3,4,C14,C2,0),\t0 },\n-  { \"cnthp_ctl_el2\",    CPENC(3,4,C14,C2,1),\t0 },\n-  { \"cnthp_cval_el2\",   CPENC(3,4,C14,C2,2),\t0 },\n-  { \"cntps_tval_el1\",   CPENC(3,7,C14,C2,0),\t0 },\n-  { \"cntps_ctl_el1\",    CPENC(3,7,C14,C2,1),\t0 },\n-  { \"cntps_cval_el1\",   CPENC(3,7,C14,C2,2),\t0 },\n-  { \"cnthv_tval_el2\",\tCPENC (3, 4, C14, C3, 0), F_ARCHEXT },\n-  { \"cnthv_ctl_el2\",\tCPENC (3, 4, C14, C3, 1), F_ARCHEXT },\n-  { \"cnthv_cval_el2\",\tCPENC (3, 4, C14, C3, 2), F_ARCHEXT },\n-  { \"dacr32_el2\",       CPENC(3,4,C3,C0,0),\t0 },\n-  { \"ifsr32_el2\",       CPENC(3,4,C5,C0,1),\t0 },\n-  { \"teehbr32_el1\",     CPENC(2,2,C1,C0,0),\t0 },\n-  { \"sder32_el3\",       CPENC(3,6,C1,C1,1),\t0 },\n-  { \"mdscr_el1\",         CPENC(2,0,C0, C2, 2),\t0 },\n-  { \"mdccsr_el0\",        CPENC(2,3,C0, C1, 0),\tF_REG_READ  },  /* r */\n-  { \"mdccint_el1\",       CPENC(2,0,C0, C2, 0),\t0 },\n-  { \"dbgdtr_el0\",        CPENC(2,3,C0, C4, 0),\t0 },\n-  { \"dbgdtrrx_el0\",      CPENC(2,3,C0, C5, 0),\tF_REG_READ  },  /* r */\n-  { \"dbgdtrtx_el0\",      CPENC(2,3,C0, C5, 0),\tF_REG_WRITE },  /* w */\n-  { \"osdtrrx_el1\",       CPENC(2,0,C0, C0, 2),\t0 },\n-  { \"osdtrtx_el1\",       CPENC(2,0,C0, C3, 2),\t0 },\n-  { \"oseccr_el1\",        CPENC(2,0,C0, C6, 2),\t0 },\n-  { \"dbgvcr32_el2\",      CPENC(2,4,C0, C7, 0),\t0 },\n-  { \"dbgbvr0_el1\",       CPENC(2,0,C0, C0, 4),\t0 },\n-  { \"dbgbvr1_el1\",       CPENC(2,0,C0, C1, 4),\t0 },\n-  { \"dbgbvr2_el1\",       CPENC(2,0,C0, C2, 4),\t0 },\n-  { \"dbgbvr3_el1\",       CPENC(2,0,C0, C3, 4),\t0 },\n-  { \"dbgbvr4_el1\",       CPENC(2,0,C0, C4, 4),\t0 },\n-  { \"dbgbvr5_el1\",       CPENC(2,0,C0, C5, 4),\t0 },\n-  { \"dbgbvr6_el1\",       CPENC(2,0,C0, C6, 4),\t0 },\n-  { \"dbgbvr7_el1\",       CPENC(2,0,C0, C7, 4),\t0 },\n-  { \"dbgbvr8_el1\",       CPENC(2,0,C0, C8, 4),\t0 },\n-  { \"dbgbvr9_el1\",       CPENC(2,0,C0, C9, 4),\t0 },\n-  { \"dbgbvr10_el1\",      CPENC(2,0,C0, C10,4),\t0 },\n-  { \"dbgbvr11_el1\",      CPENC(2,0,C0, C11,4),\t0 },\n-  { \"dbgbvr12_el1\",      CPENC(2,0,C0, C12,4),\t0 },\n-  { \"dbgbvr13_el1\",      CPENC(2,0,C0, C13,4),\t0 },\n-  { \"dbgbvr14_el1\",      CPENC(2,0,C0, C14,4),\t0 },\n-  { \"dbgbvr15_el1\",      CPENC(2,0,C0, C15,4),\t0 },\n-  { \"dbgbcr0_el1\",       CPENC(2,0,C0, C0, 5),\t0 },\n-  { \"dbgbcr1_el1\",       CPENC(2,0,C0, C1, 5),\t0 },\n-  { \"dbgbcr2_el1\",       CPENC(2,0,C0, C2, 5),\t0 },\n-  { \"dbgbcr3_el1\",       CPENC(2,0,C0, C3, 5),\t0 },\n-  { \"dbgbcr4_el1\",       CPENC(2,0,C0, C4, 5),\t0 },\n-  { \"dbgbcr5_el1\",       CPENC(2,0,C0, C5, 5),\t0 },\n-  { \"dbgbcr6_el1\",       CPENC(2,0,C0, C6, 5),\t0 },\n-  { \"dbgbcr7_el1\",       CPENC(2,0,C0, C7, 5),\t0 },\n-  { \"dbgbcr8_el1\",       CPENC(2,0,C0, C8, 5),\t0 },\n-  { \"dbgbcr9_el1\",       CPENC(2,0,C0, C9, 5),\t0 },\n-  { \"dbgbcr10_el1\",      CPENC(2,0,C0, C10,5),\t0 },\n-  { \"dbgbcr11_el1\",      CPENC(2,0,C0, C11,5),\t0 },\n-  { \"dbgbcr12_el1\",      CPENC(2,0,C0, C12,5),\t0 },\n-  { \"dbgbcr13_el1\",      CPENC(2,0,C0, C13,5),\t0 },\n-  { \"dbgbcr14_el1\",      CPENC(2,0,C0, C14,5),\t0 },\n-  { \"dbgbcr15_el1\",      CPENC(2,0,C0, C15,5),\t0 },\n-  { \"dbgwvr0_el1\",       CPENC(2,0,C0, C0, 6),\t0 },\n-  { \"dbgwvr1_el1\",       CPENC(2,0,C0, C1, 6),\t0 },\n-  { \"dbgwvr2_el1\",       CPENC(2,0,C0, C2, 6),\t0 },\n-  { \"dbgwvr3_el1\",       CPENC(2,0,C0, C3, 6),\t0 },\n-  { \"dbgwvr4_el1\",       CPENC(2,0,C0, C4, 6),\t0 },\n-  { \"dbgwvr5_el1\",       CPENC(2,0,C0, C5, 6),\t0 },\n-  { \"dbgwvr6_el1\",       CPENC(2,0,C0, C6, 6),\t0 },\n-  { \"dbgwvr7_el1\",       CPENC(2,0,C0, C7, 6),\t0 },\n-  { \"dbgwvr8_el1\",       CPENC(2,0,C0, C8, 6),\t0 },\n-  { \"dbgwvr9_el1\",       CPENC(2,0,C0, C9, 6),\t0 },\n-  { \"dbgwvr10_el1\",      CPENC(2,0,C0, C10,6),\t0 },\n-  { \"dbgwvr11_el1\",      CPENC(2,0,C0, C11,6),\t0 },\n-  { \"dbgwvr12_el1\",      CPENC(2,0,C0, C12,6),\t0 },\n-  { \"dbgwvr13_el1\",      CPENC(2,0,C0, C13,6),\t0 },\n-  { \"dbgwvr14_el1\",      CPENC(2,0,C0, C14,6),\t0 },\n-  { \"dbgwvr15_el1\",      CPENC(2,0,C0, C15,6),\t0 },\n-  { \"dbgwcr0_el1\",       CPENC(2,0,C0, C0, 7),\t0 },\n-  { \"dbgwcr1_el1\",       CPENC(2,0,C0, C1, 7),\t0 },\n-  { \"dbgwcr2_el1\",       CPENC(2,0,C0, C2, 7),\t0 },\n-  { \"dbgwcr3_el1\",       CPENC(2,0,C0, C3, 7),\t0 },\n-  { \"dbgwcr4_el1\",       CPENC(2,0,C0, C4, 7),\t0 },\n-  { \"dbgwcr5_el1\",       CPENC(2,0,C0, C5, 7),\t0 },\n-  { \"dbgwcr6_el1\",       CPENC(2,0,C0, C6, 7),\t0 },\n-  { \"dbgwcr7_el1\",       CPENC(2,0,C0, C7, 7),\t0 },\n-  { \"dbgwcr8_el1\",       CPENC(2,0,C0, C8, 7),\t0 },\n-  { \"dbgwcr9_el1\",       CPENC(2,0,C0, C9, 7),\t0 },\n-  { \"dbgwcr10_el1\",      CPENC(2,0,C0, C10,7),\t0 },\n-  { \"dbgwcr11_el1\",      CPENC(2,0,C0, C11,7),\t0 },\n-  { \"dbgwcr12_el1\",      CPENC(2,0,C0, C12,7),\t0 },\n-  { \"dbgwcr13_el1\",      CPENC(2,0,C0, C13,7),\t0 },\n-  { \"dbgwcr14_el1\",      CPENC(2,0,C0, C14,7),\t0 },\n-  { \"dbgwcr15_el1\",      CPENC(2,0,C0, C15,7),\t0 },\n-  { \"mdrar_el1\",         CPENC(2,0,C1, C0, 0),\tF_REG_READ  },  /* r */\n-  { \"oslar_el1\",         CPENC(2,0,C1, C0, 4),\tF_REG_WRITE },  /* w */\n-  { \"oslsr_el1\",         CPENC(2,0,C1, C1, 4),\tF_REG_READ  },  /* r */\n-  { \"osdlr_el1\",         CPENC(2,0,C1, C3, 4),\t0 },\n-  { \"dbgprcr_el1\",       CPENC(2,0,C1, C4, 4),\t0 },\n-  { \"dbgclaimset_el1\",   CPENC(2,0,C7, C8, 6),\t0 },\n-  { \"dbgclaimclr_el1\",   CPENC(2,0,C7, C9, 6),\t0 },\n-  { \"dbgauthstatus_el1\", CPENC(2,0,C7, C14,6),\tF_REG_READ  },  /* r */\n-  { \"pmblimitr_el1\",\t CPENC (3, 0, C9, C10, 0), F_ARCHEXT },  /* rw */\n-  { \"pmbptr_el1\",\t CPENC (3, 0, C9, C10, 1), F_ARCHEXT },  /* rw */\n-  { \"pmbsr_el1\",\t CPENC (3, 0, C9, C10, 3), F_ARCHEXT },  /* rw */\n-  { \"pmbidr_el1\",\t CPENC (3, 0, C9, C10, 7), F_ARCHEXT | F_REG_READ },  /* ro */\n-  { \"pmscr_el1\",\t CPENC (3, 0, C9, C9, 0),  F_ARCHEXT },  /* rw */\n-  { \"pmsicr_el1\",\t CPENC (3, 0, C9, C9, 2),  F_ARCHEXT },  /* rw */\n-  { \"pmsirr_el1\",\t CPENC (3, 0, C9, C9, 3),  F_ARCHEXT },  /* rw */\n-  { \"pmsfcr_el1\",\t CPENC (3, 0, C9, C9, 4),  F_ARCHEXT },  /* rw */\n-  { \"pmsevfr_el1\",\t CPENC (3, 0, C9, C9, 5),  F_ARCHEXT },  /* rw */\n-  { \"pmslatfr_el1\",\t CPENC (3, 0, C9, C9, 6),  F_ARCHEXT },  /* rw */\n-  { \"pmsidr_el1\",\t CPENC (3, 0, C9, C9, 7),  F_ARCHEXT },  /* rw */\n-  { \"pmscr_el2\",\t CPENC (3, 4, C9, C9, 0),  F_ARCHEXT },  /* rw */\n-  { \"pmscr_el12\",\t CPENC (3, 5, C9, C9, 0),  F_ARCHEXT },  /* rw */\n-  { \"pmcr_el0\",          CPENC(3,3,C9,C12, 0),\t0 },\n-  { \"pmcntenset_el0\",    CPENC(3,3,C9,C12, 1),\t0 },\n-  { \"pmcntenclr_el0\",    CPENC(3,3,C9,C12, 2),\t0 },\n-  { \"pmovsclr_el0\",      CPENC(3,3,C9,C12, 3),\t0 },\n-  { \"pmswinc_el0\",       CPENC(3,3,C9,C12, 4),\tF_REG_WRITE },  /* w */\n-  { \"pmselr_el0\",        CPENC(3,3,C9,C12, 5),\t0 },\n-  { \"pmceid0_el0\",       CPENC(3,3,C9,C12, 6),\tF_REG_READ  },  /* r */\n-  { \"pmceid1_el0\",       CPENC(3,3,C9,C12, 7),\tF_REG_READ  },  /* r */\n-  { \"pmccntr_el0\",       CPENC(3,3,C9,C13, 0),\t0 },\n-  { \"pmxevtyper_el0\",    CPENC(3,3,C9,C13, 1),\t0 },\n-  { \"pmxevcntr_el0\",     CPENC(3,3,C9,C13, 2),\t0 },\n-  { \"pmuserenr_el0\",     CPENC(3,3,C9,C14, 0),\t0 },\n-  { \"pmintenset_el1\",    CPENC(3,0,C9,C14, 1),\t0 },\n-  { \"pmintenclr_el1\",    CPENC(3,0,C9,C14, 2),\t0 },\n-  { \"pmovsset_el0\",      CPENC(3,3,C9,C14, 3),\t0 },\n-  { \"pmevcntr0_el0\",     CPENC(3,3,C14,C8, 0),\t0 },\n-  { \"pmevcntr1_el0\",     CPENC(3,3,C14,C8, 1),\t0 },\n-  { \"pmevcntr2_el0\",     CPENC(3,3,C14,C8, 2),\t0 },\n-  { \"pmevcntr3_el0\",     CPENC(3,3,C14,C8, 3),\t0 },\n-  { \"pmevcntr4_el0\",     CPENC(3,3,C14,C8, 4),\t0 },\n-  { \"pmevcntr5_el0\",     CPENC(3,3,C14,C8, 5),\t0 },\n-  { \"pmevcntr6_el0\",     CPENC(3,3,C14,C8, 6),\t0 },\n-  { \"pmevcntr7_el0\",     CPENC(3,3,C14,C8, 7),\t0 },\n-  { \"pmevcntr8_el0\",     CPENC(3,3,C14,C9, 0),\t0 },\n-  { \"pmevcntr9_el0\",     CPENC(3,3,C14,C9, 1),\t0 },\n-  { \"pmevcntr10_el0\",    CPENC(3,3,C14,C9, 2),\t0 },\n-  { \"pmevcntr11_el0\",    CPENC(3,3,C14,C9, 3),\t0 },\n-  { \"pmevcntr12_el0\",    CPENC(3,3,C14,C9, 4),\t0 },\n-  { \"pmevcntr13_el0\",    CPENC(3,3,C14,C9, 5),\t0 },\n-  { \"pmevcntr14_el0\",    CPENC(3,3,C14,C9, 6),\t0 },\n-  { \"pmevcntr15_el0\",    CPENC(3,3,C14,C9, 7),\t0 },\n-  { \"pmevcntr16_el0\",    CPENC(3,3,C14,C10,0),\t0 },\n-  { \"pmevcntr17_el0\",    CPENC(3,3,C14,C10,1),\t0 },\n-  { \"pmevcntr18_el0\",    CPENC(3,3,C14,C10,2),\t0 },\n-  { \"pmevcntr19_el0\",    CPENC(3,3,C14,C10,3),\t0 },\n-  { \"pmevcntr20_el0\",    CPENC(3,3,C14,C10,4),\t0 },\n-  { \"pmevcntr21_el0\",    CPENC(3,3,C14,C10,5),\t0 },\n-  { \"pmevcntr22_el0\",    CPENC(3,3,C14,C10,6),\t0 },\n-  { \"pmevcntr23_el0\",    CPENC(3,3,C14,C10,7),\t0 },\n-  { \"pmevcntr24_el0\",    CPENC(3,3,C14,C11,0),\t0 },\n-  { \"pmevcntr25_el0\",    CPENC(3,3,C14,C11,1),\t0 },\n-  { \"pmevcntr26_el0\",    CPENC(3,3,C14,C11,2),\t0 },\n-  { \"pmevcntr27_el0\",    CPENC(3,3,C14,C11,3),\t0 },\n-  { \"pmevcntr28_el0\",    CPENC(3,3,C14,C11,4),\t0 },\n-  { \"pmevcntr29_el0\",    CPENC(3,3,C14,C11,5),\t0 },\n-  { \"pmevcntr30_el0\",    CPENC(3,3,C14,C11,6),\t0 },\n-  { \"pmevtyper0_el0\",    CPENC(3,3,C14,C12,0),\t0 },\n-  { \"pmevtyper1_el0\",    CPENC(3,3,C14,C12,1),\t0 },\n-  { \"pmevtyper2_el0\",    CPENC(3,3,C14,C12,2),\t0 },\n-  { \"pmevtyper3_el0\",    CPENC(3,3,C14,C12,3),\t0 },\n-  { \"pmevtyper4_el0\",    CPENC(3,3,C14,C12,4),\t0 },\n-  { \"pmevtyper5_el0\",    CPENC(3,3,C14,C12,5),\t0 },\n-  { \"pmevtyper6_el0\",    CPENC(3,3,C14,C12,6),\t0 },\n-  { \"pmevtyper7_el0\",    CPENC(3,3,C14,C12,7),\t0 },\n-  { \"pmevtyper8_el0\",    CPENC(3,3,C14,C13,0),\t0 },\n-  { \"pmevtyper9_el0\",    CPENC(3,3,C14,C13,1),\t0 },\n-  { \"pmevtyper10_el0\",   CPENC(3,3,C14,C13,2),\t0 },\n-  { \"pmevtyper11_el0\",   CPENC(3,3,C14,C13,3),\t0 },\n-  { \"pmevtyper12_el0\",   CPENC(3,3,C14,C13,4),\t0 },\n-  { \"pmevtyper13_el0\",   CPENC(3,3,C14,C13,5),\t0 },\n-  { \"pmevtyper14_el0\",   CPENC(3,3,C14,C13,6),\t0 },\n-  { \"pmevtyper15_el0\",   CPENC(3,3,C14,C13,7),\t0 },\n-  { \"pmevtyper16_el0\",   CPENC(3,3,C14,C14,0),\t0 },\n-  { \"pmevtyper17_el0\",   CPENC(3,3,C14,C14,1),\t0 },\n-  { \"pmevtyper18_el0\",   CPENC(3,3,C14,C14,2),\t0 },\n-  { \"pmevtyper19_el0\",   CPENC(3,3,C14,C14,3),\t0 },\n-  { \"pmevtyper20_el0\",   CPENC(3,3,C14,C14,4),\t0 },\n-  { \"pmevtyper21_el0\",   CPENC(3,3,C14,C14,5),\t0 },\n-  { \"pmevtyper22_el0\",   CPENC(3,3,C14,C14,6),\t0 },\n-  { \"pmevtyper23_el0\",   CPENC(3,3,C14,C14,7),\t0 },\n-  { \"pmevtyper24_el0\",   CPENC(3,3,C14,C15,0),\t0 },\n-  { \"pmevtyper25_el0\",   CPENC(3,3,C14,C15,1),\t0 },\n-  { \"pmevtyper26_el0\",   CPENC(3,3,C14,C15,2),\t0 },\n-  { \"pmevtyper27_el0\",   CPENC(3,3,C14,C15,3),\t0 },\n-  { \"pmevtyper28_el0\",   CPENC(3,3,C14,C15,4),\t0 },\n-  { \"pmevtyper29_el0\",   CPENC(3,3,C14,C15,5),\t0 },\n-  { \"pmevtyper30_el0\",   CPENC(3,3,C14,C15,6),\t0 },\n-  { \"pmccfiltr_el0\",     CPENC(3,3,C14,C15,7),\t0 },\n-\n-  { \"dit\",\t\t CPEN_ (3, C2, 5), F_ARCHEXT },\n-  { \"vstcr_el2\",\t CPENC(3, 4, C2, C6, 2), F_ARCHEXT },\n-  { \"vsttbr_el2\",\t CPENC(3, 4, C2, C6, 0), F_ARCHEXT },\n-  { \"cnthvs_tval_el2\",\t CPENC(3, 4, C14, C4, 0), F_ARCHEXT },\n-  { \"cnthvs_cval_el2\",\t CPENC(3, 4, C14, C4, 2), F_ARCHEXT },\n-  { \"cnthvs_ctl_el2\",\t CPENC(3, 4, C14, C4, 1), F_ARCHEXT },\n-  { \"cnthps_tval_el2\",\t CPENC(3, 4, C14, C5, 0), F_ARCHEXT },\n-  { \"cnthps_cval_el2\",\t CPENC(3, 4, C14, C5, 2), F_ARCHEXT },\n-  { \"cnthps_ctl_el2\",\t CPENC(3, 4, C14, C5, 1), F_ARCHEXT },\n-  { \"sder32_el2\",\t CPENC(3, 4, C1, C3, 1), F_ARCHEXT },\n-  { \"vncr_el2\",\t\t CPENC(3, 4, C2, C2, 0), F_ARCHEXT },\n-  { 0,          CPENC(0,0,0,0,0),\t0 },\n+  SR_CORE (\"spsr_el1\",\t\tCPEN_ (0,C0,0),\t\t0), /* = spsr_svc.  */\n+  SR_V8_1 (\"spsr_el12\",\t\tCPEN_ (5,C0,0),\t\t0),\n+  SR_CORE (\"elr_el1\",\t\tCPEN_ (0,C0,1),\t\t0),\n+  SR_V8_1 (\"elr_el12\",\t\tCPEN_ (5,C0,1),\t\t0),\n+  SR_CORE (\"sp_el0\",\t\tCPEN_ (0,C1,0),\t\t0),\n+  SR_CORE (\"spsel\",\t\tCPEN_ (0,C2,0),\t\t0),\n+  SR_CORE (\"daif\",\t\tCPEN_ (3,C2,1),\t\t0),\n+  SR_CORE (\"currentel\",\t\tCPEN_ (0,C2,2),\t\tF_REG_READ),\n+  SR_PAN  (\"pan\",\t\tCPEN_ (0,C2,3),\t\t0),\n+  SR_V8_2 (\"uao\",\t\tCPEN_ (0,C2,4),\t\t0),\n+  SR_CORE (\"nzcv\",\t\tCPEN_ (3,C2,0),\t\t0),\n+  SR_SSBS (\"ssbs\",\t\tCPEN_ (3,C2,6),\t\t0),\n+  SR_CORE (\"fpcr\",\t\tCPEN_ (3,C4,0),\t\t0),\n+  SR_CORE (\"fpsr\",\t\tCPEN_ (3,C4,1),\t\t0),\n+  SR_CORE (\"dspsr_el0\",\t\tCPEN_ (3,C5,0),\t\t0),\n+  SR_CORE (\"dlr_el0\",\t\tCPEN_ (3,C5,1),\t\t0),\n+  SR_CORE (\"spsr_el2\",\t\tCPEN_ (4,C0,0),\t\t0), /* = spsr_hyp.  */\n+  SR_CORE (\"elr_el2\",\t\tCPEN_ (4,C0,1),\t\t0),\n+  SR_CORE (\"sp_el1\",\t\tCPEN_ (4,C1,0),\t\t0),\n+  SR_CORE (\"spsr_irq\",\t\tCPEN_ (4,C3,0),\t\t0),\n+  SR_CORE (\"spsr_abt\",\t\tCPEN_ (4,C3,1),\t\t0),\n+  SR_CORE (\"spsr_und\",\t\tCPEN_ (4,C3,2),\t\t0),\n+  SR_CORE (\"spsr_fiq\",\t\tCPEN_ (4,C3,3),\t\t0),\n+  SR_CORE (\"spsr_el3\",\t\tCPEN_ (6,C0,0),\t\t0),\n+  SR_CORE (\"elr_el3\",\t\tCPEN_ (6,C0,1),\t\t0),\n+  SR_CORE (\"sp_el2\",\t\tCPEN_ (6,C1,0),\t\t0),\n+  SR_CORE (\"spsr_svc\",\t\tCPEN_ (0,C0,0),\t\tF_DEPRECATED), /* = spsr_el1.  */\n+  SR_CORE (\"spsr_hyp\",\t\tCPEN_ (4,C0,0),\t\tF_DEPRECATED), /* = spsr_el2.  */\n+  SR_CORE (\"midr_el1\",\t\tCPENC (3,0,C0,C0,0),\tF_REG_READ),\n+  SR_CORE (\"ctr_el0\",\t\tCPENC (3,3,C0,C0,1),\tF_REG_READ),\n+  SR_CORE (\"mpidr_el1\",\t\tCPENC (3,0,C0,C0,5),\tF_REG_READ),\n+  SR_CORE (\"revidr_el1\",\tCPENC (3,0,C0,C0,6),\tF_REG_READ),\n+  SR_CORE (\"aidr_el1\",\t\tCPENC (3,1,C0,C0,7),\tF_REG_READ),\n+  SR_CORE (\"dczid_el0\",\t\tCPENC (3,3,C0,C0,7),\tF_REG_READ),\n+  SR_CORE (\"id_dfr0_el1\",\tCPENC (3,0,C0,C1,2),\tF_REG_READ),\n+  SR_CORE (\"id_pfr0_el1\",\tCPENC (3,0,C0,C1,0),\tF_REG_READ),\n+  SR_CORE (\"id_pfr1_el1\",\tCPENC (3,0,C0,C1,1),\tF_REG_READ),\n+  SR_ID_PFR2 (\"id_pfr2_el1\",\tCPENC (3,0,C0,C3,4),\tF_REG_READ),\n+  SR_CORE (\"id_afr0_el1\",\tCPENC (3,0,C0,C1,3),\tF_REG_READ),\n+  SR_CORE (\"id_mmfr0_el1\",\tCPENC (3,0,C0,C1,4),\tF_REG_READ),\n+  SR_CORE (\"id_mmfr1_el1\",\tCPENC (3,0,C0,C1,5),\tF_REG_READ),\n+  SR_CORE (\"id_mmfr2_el1\",\tCPENC (3,0,C0,C1,6),\tF_REG_READ),\n+  SR_CORE (\"id_mmfr3_el1\",\tCPENC (3,0,C0,C1,7),\tF_REG_READ),\n+  SR_CORE (\"id_mmfr4_el1\",\tCPENC (3,0,C0,C2,6),\tF_REG_READ),\n+  SR_CORE (\"id_isar0_el1\",\tCPENC (3,0,C0,C2,0),\tF_REG_READ),\n+  SR_CORE (\"id_isar1_el1\",\tCPENC (3,0,C0,C2,1),\tF_REG_READ),\n+  SR_CORE (\"id_isar2_el1\",\tCPENC (3,0,C0,C2,2),\tF_REG_READ),\n+  SR_CORE (\"id_isar3_el1\",\tCPENC (3,0,C0,C2,3),\tF_REG_READ),\n+  SR_CORE (\"id_isar4_el1\",\tCPENC (3,0,C0,C2,4),\tF_REG_READ),\n+  SR_CORE (\"id_isar5_el1\",\tCPENC (3,0,C0,C2,5),\tF_REG_READ),\n+  SR_CORE (\"mvfr0_el1\",\t\tCPENC (3,0,C0,C3,0),\tF_REG_READ),\n+  SR_CORE (\"mvfr1_el1\",\t\tCPENC (3,0,C0,C3,1),\tF_REG_READ),\n+  SR_CORE (\"mvfr2_el1\",\t\tCPENC (3,0,C0,C3,2),\tF_REG_READ),\n+  SR_CORE (\"ccsidr_el1\",\tCPENC (3,1,C0,C0,0),\tF_REG_READ),\n+  SR_CORE (\"id_aa64pfr0_el1\",\tCPENC (3,0,C0,C4,0),\tF_REG_READ),\n+  SR_CORE (\"id_aa64pfr1_el1\",\tCPENC (3,0,C0,C4,1),\tF_REG_READ),\n+  SR_CORE (\"id_aa64dfr0_el1\",\tCPENC (3,0,C0,C5,0),\tF_REG_READ),\n+  SR_CORE (\"id_aa64dfr1_el1\",\tCPENC (3,0,C0,C5,1),\tF_REG_READ),\n+  SR_CORE (\"id_aa64isar0_el1\",\tCPENC (3,0,C0,C6,0),\tF_REG_READ),\n+  SR_CORE (\"id_aa64isar1_el1\",\tCPENC (3,0,C0,C6,1),\tF_REG_READ),\n+  SR_CORE (\"id_aa64mmfr0_el1\",\tCPENC (3,0,C0,C7,0),\tF_REG_READ),\n+  SR_CORE (\"id_aa64mmfr1_el1\",\tCPENC (3,0,C0,C7,1),\tF_REG_READ),\n+  SR_V8_2 (\"id_aa64mmfr2_el1\",\tCPENC (3,0,C0,C7,2),\tF_REG_READ),\n+  SR_CORE (\"id_aa64afr0_el1\",\tCPENC (3,0,C0,C5,4),\tF_REG_READ),\n+  SR_CORE (\"id_aa64afr1_el1\",\tCPENC (3,0,C0,C5,5),\tF_REG_READ),\n+  SR_SVE  (\"id_aa64zfr0_el1\",\tCPENC (3,0,C0,C4,4),\tF_REG_READ),\n+  SR_CORE (\"clidr_el1\",\t\tCPENC (3,1,C0,C0,1),\tF_REG_READ),\n+  SR_CORE (\"csselr_el1\",\tCPENC (3,2,C0,C0,0),\t0),\n+  SR_CORE (\"vpidr_el2\",\t\tCPENC (3,4,C0,C0,0),\t0),\n+  SR_CORE (\"vmpidr_el2\",\tCPENC (3,4,C0,C0,5),\t0),\n+  SR_CORE (\"sctlr_el1\",\t\tCPENC (3,0,C1,C0,0),\t0),\n+  SR_CORE (\"sctlr_el2\",\t\tCPENC (3,4,C1,C0,0),\t0),\n+  SR_CORE (\"sctlr_el3\",\t\tCPENC (3,6,C1,C0,0),\t0),\n+  SR_V8_1 (\"sctlr_el12\",\tCPENC (3,5,C1,C0,0),\t0),\n+  SR_CORE (\"actlr_el1\",\t\tCPENC (3,0,C1,C0,1),\t0),\n+  SR_CORE (\"actlr_el2\",\t\tCPENC (3,4,C1,C0,1),\t0),\n+  SR_CORE (\"actlr_el3\",\t\tCPENC (3,6,C1,C0,1),\t0),\n+  SR_CORE (\"cpacr_el1\",\t\tCPENC (3,0,C1,C0,2),\t0),\n+  SR_V8_1 (\"cpacr_el12\",\tCPENC (3,5,C1,C0,2),\t0),\n+  SR_CORE (\"cptr_el2\",\t\tCPENC (3,4,C1,C1,2),\t0),\n+  SR_CORE (\"cptr_el3\",\t\tCPENC (3,6,C1,C1,2),\t0),\n+  SR_CORE (\"scr_el3\",\t\tCPENC (3,6,C1,C1,0),\t0),\n+  SR_CORE (\"hcr_el2\",\t\tCPENC (3,4,C1,C1,0),\t0),\n+  SR_CORE (\"mdcr_el2\",\t\tCPENC (3,4,C1,C1,1),\t0),\n+  SR_CORE (\"mdcr_el3\",\t\tCPENC (3,6,C1,C3,1),\t0),\n+  SR_CORE (\"hstr_el2\",\t\tCPENC (3,4,C1,C1,3),\t0),\n+  SR_CORE (\"hacr_el2\",\t\tCPENC (3,4,C1,C1,7),\t0),\n+  SR_SVE  (\"zcr_el1\",\t\tCPENC (3,0,C1,C2,0),\t0),\n+  SR_SVE  (\"zcr_el12\",\t\tCPENC (3,5,C1,C2,0),\t0),\n+  SR_SVE  (\"zcr_el2\",\t\tCPENC (3,4,C1,C2,0),\t0),\n+  SR_SVE  (\"zcr_el3\",\t\tCPENC (3,6,C1,C2,0),\t0),\n+  SR_SVE  (\"zidr_el1\",\t\tCPENC (3,0,C0,C0,7),\t0),\n+  SR_CORE (\"ttbr0_el1\",\t\tCPENC (3,0,C2,C0,0),\t0),\n+  SR_CORE (\"ttbr1_el1\",\t\tCPENC (3,0,C2,C0,1),\t0),\n+  SR_CORE (\"ttbr0_el2\",\t\tCPENC (3,4,C2,C0,0),\t0),\n+  SR_V8_1 (\"ttbr1_el2\",\t\tCPENC (3,4,C2,C0,1),\t0),\n+  SR_CORE (\"ttbr0_el3\",\t\tCPENC (3,6,C2,C0,0),\t0),\n+  SR_V8_1 (\"ttbr0_el12\",\tCPENC (3,5,C2,C0,0),\t0),\n+  SR_V8_1 (\"ttbr1_el12\",\tCPENC (3,5,C2,C0,1),\t0),\n+  SR_CORE (\"vttbr_el2\",\t\tCPENC (3,4,C2,C1,0),\t0),\n+  SR_CORE (\"tcr_el1\",\t\tCPENC (3,0,C2,C0,2),\t0),\n+  SR_CORE (\"tcr_el2\",\t\tCPENC (3,4,C2,C0,2),\t0),\n+  SR_CORE (\"tcr_el3\",\t\tCPENC (3,6,C2,C0,2),\t0),\n+  SR_V8_1 (\"tcr_el12\",\t\tCPENC (3,5,C2,C0,2),\t0),\n+  SR_CORE (\"vtcr_el2\",\t\tCPENC (3,4,C2,C1,2),\t0),\n+  SR_V8_3 (\"apiakeylo_el1\",\tCPENC (3,0,C2,C1,0),\t0),\n+  SR_V8_3 (\"apiakeyhi_el1\",\tCPENC (3,0,C2,C1,1),\t0),\n+  SR_V8_3 (\"apibkeylo_el1\",\tCPENC (3,0,C2,C1,2),\t0),\n+  SR_V8_3 (\"apibkeyhi_el1\",\tCPENC (3,0,C2,C1,3),\t0),\n+  SR_V8_3 (\"apdakeylo_el1\",\tCPENC (3,0,C2,C2,0),\t0),\n+  SR_V8_3 (\"apdakeyhi_el1\",\tCPENC (3,0,C2,C2,1),\t0),\n+  SR_V8_3 (\"apdbkeylo_el1\",\tCPENC (3,0,C2,C2,2),\t0),\n+  SR_V8_3 (\"apdbkeyhi_el1\",\tCPENC (3,0,C2,C2,3),\t0),\n+  SR_V8_3 (\"apgakeylo_el1\",\tCPENC (3,0,C2,C3,0),\t0),\n+  SR_V8_3 (\"apgakeyhi_el1\",\tCPENC (3,0,C2,C3,1),\t0),\n+  SR_CORE (\"afsr0_el1\",\t\tCPENC (3,0,C5,C1,0),\t0),\n+  SR_CORE (\"afsr1_el1\",\t\tCPENC (3,0,C5,C1,1),\t0),\n+  SR_CORE (\"afsr0_el2\",\t\tCPENC (3,4,C5,C1,0),\t0),\n+  SR_CORE (\"afsr1_el2\",\t\tCPENC (3,4,C5,C1,1),\t0),\n+  SR_CORE (\"afsr0_el3\",\t\tCPENC (3,6,C5,C1,0),\t0),\n+  SR_V8_1 (\"afsr0_el12\",\tCPENC (3,5,C5,C1,0),\t0),\n+  SR_CORE (\"afsr1_el3\",\t\tCPENC (3,6,C5,C1,1),\t0),\n+  SR_V8_1 (\"afsr1_el12\",\tCPENC (3,5,C5,C1,1),\t0),\n+  SR_CORE (\"esr_el1\",\t\tCPENC (3,0,C5,C2,0),\t0),\n+  SR_CORE (\"esr_el2\",\t\tCPENC (3,4,C5,C2,0),\t0),\n+  SR_CORE (\"esr_el3\",\t\tCPENC (3,6,C5,C2,0),\t0),\n+  SR_V8_1 (\"esr_el12\",\t\tCPENC (3,5,C5,C2,0),\t0),\n+  SR_RAS  (\"vsesr_el2\",\t\tCPENC (3,4,C5,C2,3),\t0),\n+  SR_CORE (\"fpexc32_el2\",\tCPENC (3,4,C5,C3,0),\t0),\n+  SR_RAS  (\"erridr_el1\",\tCPENC (3,0,C5,C3,0),\tF_REG_READ),\n+  SR_RAS  (\"errselr_el1\",\tCPENC (3,0,C5,C3,1),\t0),\n+  SR_RAS  (\"erxfr_el1\",\t\tCPENC (3,0,C5,C4,0),\tF_REG_READ),\n+  SR_RAS  (\"erxctlr_el1\",\tCPENC (3,0,C5,C4,1),\t0),\n+  SR_RAS  (\"erxstatus_el1\",\tCPENC (3,0,C5,C4,2),\t0),\n+  SR_RAS  (\"erxaddr_el1\",\tCPENC (3,0,C5,C4,3),\t0),\n+  SR_RAS  (\"erxmisc0_el1\",\tCPENC (3,0,C5,C5,0),\t0),\n+  SR_RAS  (\"erxmisc1_el1\",\tCPENC (3,0,C5,C5,1),\t0),\n+  SR_CORE (\"far_el1\",\t\tCPENC (3,0,C6,C0,0),\t0),\n+  SR_CORE (\"far_el2\",\t\tCPENC (3,4,C6,C0,0),\t0),\n+  SR_CORE (\"far_el3\",\t\tCPENC (3,6,C6,C0,0),\t0),\n+  SR_V8_1 (\"far_el12\",\t\tCPENC (3,5,C6,C0,0),\t0),\n+  SR_CORE (\"hpfar_el2\",\t\tCPENC (3,4,C6,C0,4),\t0),\n+  SR_CORE (\"par_el1\",\t\tCPENC (3,0,C7,C4,0),\t0),\n+  SR_CORE (\"mair_el1\",\t\tCPENC (3,0,C10,C2,0),\t0),\n+  SR_CORE (\"mair_el2\",\t\tCPENC (3,4,C10,C2,0),\t0),\n+  SR_CORE (\"mair_el3\",\t\tCPENC (3,6,C10,C2,0),\t0),\n+  SR_V8_1 (\"mair_el12\",\t\tCPENC (3,5,C10,C2,0),\t0),\n+  SR_CORE (\"amair_el1\",\t\tCPENC (3,0,C10,C3,0),\t0),\n+  SR_CORE (\"amair_el2\",\t\tCPENC (3,4,C10,C3,0),\t0),\n+  SR_CORE (\"amair_el3\",\t\tCPENC (3,6,C10,C3,0),\t0),\n+  SR_V8_1 (\"amair_el12\",\tCPENC (3,5,C10,C3,0),\t0),\n+  SR_CORE (\"vbar_el1\",\t\tCPENC (3,0,C12,C0,0),\t0),\n+  SR_CORE (\"vbar_el2\",\t\tCPENC (3,4,C12,C0,0),\t0),\n+  SR_CORE (\"vbar_el3\",\t\tCPENC (3,6,C12,C0,0),\t0),\n+  SR_V8_1 (\"vbar_el12\",\t\tCPENC (3,5,C12,C0,0),\t0),\n+  SR_CORE (\"rvbar_el1\",\t\tCPENC (3,0,C12,C0,1),\tF_REG_READ),\n+  SR_CORE (\"rvbar_el2\",\t\tCPENC (3,4,C12,C0,1),\tF_REG_READ),\n+  SR_CORE (\"rvbar_el3\",\t\tCPENC (3,6,C12,C0,1),\tF_REG_READ),\n+  SR_CORE (\"rmr_el1\",\t\tCPENC (3,0,C12,C0,2),\t0),\n+  SR_CORE (\"rmr_el2\",\t\tCPENC (3,4,C12,C0,2),\t0),\n+  SR_CORE (\"rmr_el3\",\t\tCPENC (3,6,C12,C0,2),\t0),\n+  SR_CORE (\"isr_el1\",\t\tCPENC (3,0,C12,C1,0),\tF_REG_READ),\n+  SR_RAS  (\"disr_el1\",\t\tCPENC (3,0,C12,C1,1),\t0),\n+  SR_RAS  (\"vdisr_el2\",\t\tCPENC (3,4,C12,C1,1),\t0),\n+  SR_CORE (\"contextidr_el1\",\tCPENC (3,0,C13,C0,1),\t0),\n+  SR_V8_1 (\"contextidr_el2\",\tCPENC (3,4,C13,C0,1),\t0),\n+  SR_V8_1 (\"contextidr_el12\",\tCPENC (3,5,C13,C0,1),\t0),\n+  SR_RNG  (\"rndr\",\t\tCPENC (3,3,C2,C4,0),\tF_REG_READ),\n+  SR_RNG  (\"rndrrs\",\t\tCPENC (3,3,C2,C4,1),\tF_REG_READ),\n+  SR_MEMTAG (\"tco\",\t\tCPENC (3,3,C4,C2,7),\t0),\n+  SR_MEMTAG (\"tfsre0_el1\",\tCPENC (3,0,C5,C6,1),\t0),\n+  SR_MEMTAG (\"tfsr_el1\",\tCPENC (3,0,C5,C6,0),\t0),\n+  SR_MEMTAG (\"tfsr_el2\",\tCPENC (3,4,C5,C6,0),\t0),\n+  SR_MEMTAG (\"tfsr_el3\",\tCPENC (3,6,C5,C6,0),\t0),\n+  SR_MEMTAG (\"tfsr_el12\",\tCPENC (3,5,C5,C6,0),\t0),\n+  SR_MEMTAG (\"rgsr_el1\",\tCPENC (3,0,C1,C0,5),\t0),\n+  SR_MEMTAG (\"gcr_el1\",\t\tCPENC (3,0,C1,C0,6),\t0),\n+  SR_MEMTAG (\"gmid_el1\",\tCPENC (3,1,C0,C0,4),\tF_REG_READ),\n+  SR_CORE (\"tpidr_el0\",\t\tCPENC (3,3,C13,C0,2),\t0),\n+  SR_CORE (\"tpidrro_el0\",       CPENC (3,3,C13,C0,3),\t0),\n+  SR_CORE (\"tpidr_el1\",\t\tCPENC (3,0,C13,C0,4),\t0),\n+  SR_CORE (\"tpidr_el2\",\t\tCPENC (3,4,C13,C0,2),\t0),\n+  SR_CORE (\"tpidr_el3\",\t\tCPENC (3,6,C13,C0,2),\t0),\n+  SR_SCXTNUM (\"scxtnum_el0\",\tCPENC (3,3,C13,C0,7),\t0),\n+  SR_SCXTNUM (\"scxtnum_el1\",\tCPENC (3,0,C13,C0,7),\t0),\n+  SR_SCXTNUM (\"scxtnum_el2\",\tCPENC (3,4,C13,C0,7),\t0),\n+  SR_SCXTNUM (\"scxtnum_el12\",   CPENC (3,5,C13,C0,7),\t0),\n+  SR_SCXTNUM (\"scxtnum_el3\",    CPENC (3,6,C13,C0,7),\t0),\n+  SR_CORE (\"teecr32_el1\",       CPENC (2,2,C0, C0,0),\t0), /* See section 3.9.7.1.  */\n+  SR_CORE (\"cntfrq_el0\",\tCPENC (3,3,C14,C0,0),\t0),\n+  SR_CORE (\"cntpct_el0\",\tCPENC (3,3,C14,C0,1),\tF_REG_READ),\n+  SR_CORE (\"cntvct_el0\",\tCPENC (3,3,C14,C0,2),\tF_REG_READ),\n+  SR_CORE (\"cntvoff_el2\",       CPENC (3,4,C14,C0,3),\t0),\n+  SR_CORE (\"cntkctl_el1\",       CPENC (3,0,C14,C1,0),\t0),\n+  SR_V8_1 (\"cntkctl_el12\",\tCPENC (3,5,C14,C1,0),\t0),\n+  SR_CORE (\"cnthctl_el2\",\tCPENC (3,4,C14,C1,0),\t0),\n+  SR_CORE (\"cntp_tval_el0\",\tCPENC (3,3,C14,C2,0),\t0),\n+  SR_V8_1 (\"cntp_tval_el02\",\tCPENC (3,5,C14,C2,0),\t0),\n+  SR_CORE (\"cntp_ctl_el0\",      CPENC (3,3,C14,C2,1),\t0),\n+  SR_V8_1 (\"cntp_ctl_el02\",\tCPENC (3,5,C14,C2,1),\t0),\n+  SR_CORE (\"cntp_cval_el0\",     CPENC (3,3,C14,C2,2),\t0),\n+  SR_V8_1 (\"cntp_cval_el02\",\tCPENC (3,5,C14,C2,2),\t0),\n+  SR_CORE (\"cntv_tval_el0\",     CPENC (3,3,C14,C3,0),\t0),\n+  SR_V8_1 (\"cntv_tval_el02\",\tCPENC (3,5,C14,C3,0),\t0),\n+  SR_CORE (\"cntv_ctl_el0\",      CPENC (3,3,C14,C3,1),\t0),\n+  SR_V8_1 (\"cntv_ctl_el02\",\tCPENC (3,5,C14,C3,1),\t0),\n+  SR_CORE (\"cntv_cval_el0\",     CPENC (3,3,C14,C3,2),\t0),\n+  SR_V8_1 (\"cntv_cval_el02\",\tCPENC (3,5,C14,C3,2),\t0),\n+  SR_CORE (\"cnthp_tval_el2\",\tCPENC (3,4,C14,C2,0),\t0),\n+  SR_CORE (\"cnthp_ctl_el2\",\tCPENC (3,4,C14,C2,1),\t0),\n+  SR_CORE (\"cnthp_cval_el2\",\tCPENC (3,4,C14,C2,2),\t0),\n+  SR_CORE (\"cntps_tval_el1\",\tCPENC (3,7,C14,C2,0),\t0),\n+  SR_CORE (\"cntps_ctl_el1\",\tCPENC (3,7,C14,C2,1),\t0),\n+  SR_CORE (\"cntps_cval_el1\",\tCPENC (3,7,C14,C2,2),\t0),\n+  SR_V8_1 (\"cnthv_tval_el2\",\tCPENC (3,4,C14,C3,0),\t0),\n+  SR_V8_1 (\"cnthv_ctl_el2\",\tCPENC (3,4,C14,C3,1),\t0),\n+  SR_V8_1 (\"cnthv_cval_el2\",\tCPENC (3,4,C14,C3,2),\t0),\n+  SR_CORE (\"dacr32_el2\",\tCPENC (3,4,C3,C0,0),\t0),\n+  SR_CORE (\"ifsr32_el2\",\tCPENC (3,4,C5,C0,1),\t0),\n+  SR_CORE (\"teehbr32_el1\",\tCPENC (2,2,C1,C0,0),\t0),\n+  SR_CORE (\"sder32_el3\",\tCPENC (3,6,C1,C1,1),\t0),\n+  SR_CORE (\"mdscr_el1\",\t\tCPENC (2,0,C0,C2,2),\t0),\n+  SR_CORE (\"mdccsr_el0\",\tCPENC (2,3,C0,C1,0),\tF_REG_READ),\n+  SR_CORE (\"mdccint_el1\",       CPENC (2,0,C0,C2,0),\t0),\n+  SR_CORE (\"dbgdtr_el0\",\tCPENC (2,3,C0,C4,0),\t0),\n+  SR_CORE (\"dbgdtrrx_el0\",\tCPENC (2,3,C0,C5,0),\tF_REG_READ),\n+  SR_CORE (\"dbgdtrtx_el0\",\tCPENC (2,3,C0,C5,0),\tF_REG_WRITE),\n+  SR_CORE (\"osdtrrx_el1\",\tCPENC (2,0,C0,C0,2),\t0),\n+  SR_CORE (\"osdtrtx_el1\",\tCPENC (2,0,C0,C3,2),\t0),\n+  SR_CORE (\"oseccr_el1\",\tCPENC (2,0,C0,C6,2),\t0),\n+  SR_CORE (\"dbgvcr32_el2\",      CPENC (2,4,C0,C7,0),\t0),\n+  SR_CORE (\"dbgbvr0_el1\",       CPENC (2,0,C0,C0,4),\t0),\n+  SR_CORE (\"dbgbvr1_el1\",       CPENC (2,0,C0,C1,4),\t0),\n+  SR_CORE (\"dbgbvr2_el1\",       CPENC (2,0,C0,C2,4),\t0),\n+  SR_CORE (\"dbgbvr3_el1\",       CPENC (2,0,C0,C3,4),\t0),\n+  SR_CORE (\"dbgbvr4_el1\",       CPENC (2,0,C0,C4,4),\t0),\n+  SR_CORE (\"dbgbvr5_el1\",       CPENC (2,0,C0,C5,4),\t0),\n+  SR_CORE (\"dbgbvr6_el1\",       CPENC (2,0,C0,C6,4),\t0),\n+  SR_CORE (\"dbgbvr7_el1\",       CPENC (2,0,C0,C7,4),\t0),\n+  SR_CORE (\"dbgbvr8_el1\",       CPENC (2,0,C0,C8,4),\t0),\n+  SR_CORE (\"dbgbvr9_el1\",       CPENC (2,0,C0,C9,4),\t0),\n+  SR_CORE (\"dbgbvr10_el1\",      CPENC (2,0,C0,C10,4),\t0),\n+  SR_CORE (\"dbgbvr11_el1\",      CPENC (2,0,C0,C11,4),\t0),\n+  SR_CORE (\"dbgbvr12_el1\",      CPENC (2,0,C0,C12,4),\t0),\n+  SR_CORE (\"dbgbvr13_el1\",      CPENC (2,0,C0,C13,4),\t0),\n+  SR_CORE (\"dbgbvr14_el1\",      CPENC (2,0,C0,C14,4),\t0),\n+  SR_CORE (\"dbgbvr15_el1\",      CPENC (2,0,C0,C15,4),\t0),\n+  SR_CORE (\"dbgbcr0_el1\",       CPENC (2,0,C0,C0,5),\t0),\n+  SR_CORE (\"dbgbcr1_el1\",       CPENC (2,0,C0,C1,5),\t0),\n+  SR_CORE (\"dbgbcr2_el1\",       CPENC (2,0,C0,C2,5),\t0),\n+  SR_CORE (\"dbgbcr3_el1\",       CPENC (2,0,C0,C3,5),\t0),\n+  SR_CORE (\"dbgbcr4_el1\",       CPENC (2,0,C0,C4,5),\t0),\n+  SR_CORE (\"dbgbcr5_el1\",       CPENC (2,0,C0,C5,5),\t0),\n+  SR_CORE (\"dbgbcr6_el1\",       CPENC (2,0,C0,C6,5),\t0),\n+  SR_CORE (\"dbgbcr7_el1\",       CPENC (2,0,C0,C7,5),\t0),\n+  SR_CORE (\"dbgbcr8_el1\",       CPENC (2,0,C0,C8,5),\t0),\n+  SR_CORE (\"dbgbcr9_el1\",       CPENC (2,0,C0,C9,5),\t0),\n+  SR_CORE (\"dbgbcr10_el1\",      CPENC (2,0,C0,C10,5),\t0),\n+  SR_CORE (\"dbgbcr11_el1\",      CPENC (2,0,C0,C11,5),\t0),\n+  SR_CORE (\"dbgbcr12_el1\",      CPENC (2,0,C0,C12,5),\t0),\n+  SR_CORE (\"dbgbcr13_el1\",      CPENC (2,0,C0,C13,5),\t0),\n+  SR_CORE (\"dbgbcr14_el1\",      CPENC (2,0,C0,C14,5),\t0),\n+  SR_CORE (\"dbgbcr15_el1\",      CPENC (2,0,C0,C15,5),\t0),\n+  SR_CORE (\"dbgwvr0_el1\",       CPENC (2,0,C0,C0,6),\t0),\n+  SR_CORE (\"dbgwvr1_el1\",       CPENC (2,0,C0,C1,6),\t0),\n+  SR_CORE (\"dbgwvr2_el1\",       CPENC (2,0,C0,C2,6),\t0),\n+  SR_CORE (\"dbgwvr3_el1\",       CPENC (2,0,C0,C3,6),\t0),\n+  SR_CORE (\"dbgwvr4_el1\",       CPENC (2,0,C0,C4,6),\t0),\n+  SR_CORE (\"dbgwvr5_el1\",       CPENC (2,0,C0,C5,6),\t0),\n+  SR_CORE (\"dbgwvr6_el1\",       CPENC (2,0,C0,C6,6),\t0),\n+  SR_CORE (\"dbgwvr7_el1\",       CPENC (2,0,C0,C7,6),\t0),\n+  SR_CORE (\"dbgwvr8_el1\",       CPENC (2,0,C0,C8,6),\t0),\n+  SR_CORE (\"dbgwvr9_el1\",       CPENC (2,0,C0,C9,6),\t0),\n+  SR_CORE (\"dbgwvr10_el1\",      CPENC (2,0,C0,C10,6),\t0),\n+  SR_CORE (\"dbgwvr11_el1\",      CPENC (2,0,C0,C11,6),\t0),\n+  SR_CORE (\"dbgwvr12_el1\",      CPENC (2,0,C0,C12,6),\t0),\n+  SR_CORE (\"dbgwvr13_el1\",      CPENC (2,0,C0,C13,6),\t0),\n+  SR_CORE (\"dbgwvr14_el1\",      CPENC (2,0,C0,C14,6),\t0),\n+  SR_CORE (\"dbgwvr15_el1\",      CPENC (2,0,C0,C15,6),\t0),\n+  SR_CORE (\"dbgwcr0_el1\",       CPENC (2,0,C0,C0,7),\t0),\n+  SR_CORE (\"dbgwcr1_el1\",       CPENC (2,0,C0,C1,7),\t0),\n+  SR_CORE (\"dbgwcr2_el1\",       CPENC (2,0,C0,C2,7),\t0),\n+  SR_CORE (\"dbgwcr3_el1\",       CPENC (2,0,C0,C3,7),\t0),\n+  SR_CORE (\"dbgwcr4_el1\",       CPENC (2,0,C0,C4,7),\t0),\n+  SR_CORE (\"dbgwcr5_el1\",       CPENC (2,0,C0,C5,7),\t0),\n+  SR_CORE (\"dbgwcr6_el1\",       CPENC (2,0,C0,C6,7),\t0),\n+  SR_CORE (\"dbgwcr7_el1\",       CPENC (2,0,C0,C7,7),\t0),\n+  SR_CORE (\"dbgwcr8_el1\",       CPENC (2,0,C0,C8,7),\t0),\n+  SR_CORE (\"dbgwcr9_el1\",       CPENC (2,0,C0,C9,7),\t0),\n+  SR_CORE (\"dbgwcr10_el1\",      CPENC (2,0,C0,C10,7),\t0),\n+  SR_CORE (\"dbgwcr11_el1\",      CPENC (2,0,C0,C11,7),\t0),\n+  SR_CORE (\"dbgwcr12_el1\",      CPENC (2,0,C0,C12,7),\t0),\n+  SR_CORE (\"dbgwcr13_el1\",      CPENC (2,0,C0,C13,7),\t0),\n+  SR_CORE (\"dbgwcr14_el1\",      CPENC (2,0,C0,C14,7),\t0),\n+  SR_CORE (\"dbgwcr15_el1\",      CPENC (2,0,C0,C15,7),\t0),\n+  SR_CORE (\"mdrar_el1\",\t\tCPENC (2,0,C1,C0,0),\tF_REG_READ),\n+  SR_CORE (\"oslar_el1\",\t\tCPENC (2,0,C1,C0,4),\tF_REG_WRITE),\n+  SR_CORE (\"oslsr_el1\",\t\tCPENC (2,0,C1,C1,4),\tF_REG_READ),\n+  SR_CORE (\"osdlr_el1\",\t\tCPENC (2,0,C1,C3,4),\t0),\n+  SR_CORE (\"dbgprcr_el1\",       CPENC (2,0,C1,C4,4),\t0),\n+  SR_CORE (\"dbgclaimset_el1\",   CPENC (2,0,C7,C8,6),\t0),\n+  SR_CORE (\"dbgclaimclr_el1\",   CPENC (2,0,C7,C9,6),\t0),\n+  SR_CORE (\"dbgauthstatus_el1\", CPENC (2,0,C7,C14,6),\tF_REG_READ),\n+  SR_PROFILE (\"pmblimitr_el1\",\tCPENC (3,0,C9,C10,0),\t0),\n+  SR_PROFILE (\"pmbptr_el1\",\tCPENC (3,0,C9,C10,1),\t0),\n+  SR_PROFILE (\"pmbsr_el1\",\tCPENC (3,0,C9,C10,3),\t0),\n+  SR_PROFILE (\"pmbidr_el1\",\tCPENC (3,0,C9,C10,7),\tF_REG_READ),\n+  SR_PROFILE (\"pmscr_el1\",\tCPENC (3,0,C9,C9,0),\t0),\n+  SR_PROFILE (\"pmsicr_el1\",\tCPENC (3,0,C9,C9,2),\t0),\n+  SR_PROFILE (\"pmsirr_el1\",\tCPENC (3,0,C9,C9,3),\t0),\n+  SR_PROFILE (\"pmsfcr_el1\",\tCPENC (3,0,C9,C9,4),\t0),\n+  SR_PROFILE (\"pmsevfr_el1\",\tCPENC (3,0,C9,C9,5),\t0),\n+  SR_PROFILE (\"pmslatfr_el1\",\tCPENC (3,0,C9,C9,6),\t0),\n+  SR_PROFILE (\"pmsidr_el1\",\tCPENC (3,0,C9,C9,7),\t0),\n+  SR_PROFILE (\"pmscr_el2\",\tCPENC (3,4,C9,C9,0),\t0),\n+  SR_PROFILE (\"pmscr_el12\",\tCPENC (3,5,C9,C9,0),\t0),\n+  SR_CORE (\"pmcr_el0\",\t\tCPENC (3,3,C9,C12,0),\t0),\n+  SR_CORE (\"pmcntenset_el0\",    CPENC (3,3,C9,C12,1),\t0),\n+  SR_CORE (\"pmcntenclr_el0\",    CPENC (3,3,C9,C12,2),\t0),\n+  SR_CORE (\"pmovsclr_el0\",      CPENC (3,3,C9,C12,3),\t0),\n+  SR_CORE (\"pmswinc_el0\",       CPENC (3,3,C9,C12,4),\tF_REG_WRITE),\n+  SR_CORE (\"pmselr_el0\",\tCPENC (3,3,C9,C12,5),\t0),\n+  SR_CORE (\"pmceid0_el0\",       CPENC (3,3,C9,C12,6),\tF_REG_READ),\n+  SR_CORE (\"pmceid1_el0\",       CPENC (3,3,C9,C12,7),\tF_REG_READ),\n+  SR_CORE (\"pmccntr_el0\",       CPENC (3,3,C9,C13,0),\t0),\n+  SR_CORE (\"pmxevtyper_el0\",    CPENC (3,3,C9,C13,1),\t0),\n+  SR_CORE (\"pmxevcntr_el0\",     CPENC (3,3,C9,C13,2),\t0),\n+  SR_CORE (\"pmuserenr_el0\",     CPENC (3,3,C9,C14,0),\t0),\n+  SR_CORE (\"pmintenset_el1\",    CPENC (3,0,C9,C14,1),\t0),\n+  SR_CORE (\"pmintenclr_el1\",    CPENC (3,0,C9,C14,2),\t0),\n+  SR_CORE (\"pmovsset_el0\",      CPENC (3,3,C9,C14,3),\t0),\n+  SR_CORE (\"pmevcntr0_el0\",     CPENC (3,3,C14,C8,0),\t0),\n+  SR_CORE (\"pmevcntr1_el0\",     CPENC (3,3,C14,C8,1),\t0),\n+  SR_CORE (\"pmevcntr2_el0\",     CPENC (3,3,C14,C8,2),\t0),\n+  SR_CORE (\"pmevcntr3_el0\",     CPENC (3,3,C14,C8,3),\t0),\n+  SR_CORE (\"pmevcntr4_el0\",     CPENC (3,3,C14,C8,4),\t0),\n+  SR_CORE (\"pmevcntr5_el0\",     CPENC (3,3,C14,C8,5),\t0),\n+  SR_CORE (\"pmevcntr6_el0\",     CPENC (3,3,C14,C8,6),\t0),\n+  SR_CORE (\"pmevcntr7_el0\",     CPENC (3,3,C14,C8,7),\t0),\n+  SR_CORE (\"pmevcntr8_el0\",     CPENC (3,3,C14,C9,0),\t0),\n+  SR_CORE (\"pmevcntr9_el0\",     CPENC (3,3,C14,C9,1),\t0),\n+  SR_CORE (\"pmevcntr10_el0\",    CPENC (3,3,C14,C9,2),\t0),\n+  SR_CORE (\"pmevcntr11_el0\",    CPENC (3,3,C14,C9,3),\t0),\n+  SR_CORE (\"pmevcntr12_el0\",    CPENC (3,3,C14,C9,4),\t0),\n+  SR_CORE (\"pmevcntr13_el0\",    CPENC (3,3,C14,C9,5),\t0),\n+  SR_CORE (\"pmevcntr14_el0\",    CPENC (3,3,C14,C9,6),\t0),\n+  SR_CORE (\"pmevcntr15_el0\",    CPENC (3,3,C14,C9,7),\t0),\n+  SR_CORE (\"pmevcntr16_el0\",    CPENC (3,3,C14,C10,0),\t0),\n+  SR_CORE (\"pmevcntr17_el0\",    CPENC (3,3,C14,C10,1),\t0),\n+  SR_CORE (\"pmevcntr18_el0\",    CPENC (3,3,C14,C10,2),\t0),\n+  SR_CORE (\"pmevcntr19_el0\",    CPENC (3,3,C14,C10,3),\t0),\n+  SR_CORE (\"pmevcntr20_el0\",    CPENC (3,3,C14,C10,4),\t0),\n+  SR_CORE (\"pmevcntr21_el0\",    CPENC (3,3,C14,C10,5),\t0),\n+  SR_CORE (\"pmevcntr22_el0\",    CPENC (3,3,C14,C10,6),\t0),\n+  SR_CORE (\"pmevcntr23_el0\",    CPENC (3,3,C14,C10,7),\t0),\n+  SR_CORE (\"pmevcntr24_el0\",    CPENC (3,3,C14,C11,0),\t0),\n+  SR_CORE (\"pmevcntr25_el0\",    CPENC (3,3,C14,C11,1),\t0),\n+  SR_CORE (\"pmevcntr26_el0\",    CPENC (3,3,C14,C11,2),\t0),\n+  SR_CORE (\"pmevcntr27_el0\",    CPENC (3,3,C14,C11,3),\t0),\n+  SR_CORE (\"pmevcntr28_el0\",    CPENC (3,3,C14,C11,4),\t0),\n+  SR_CORE (\"pmevcntr29_el0\",    CPENC (3,3,C14,C11,5),\t0),\n+  SR_CORE (\"pmevcntr30_el0\",    CPENC (3,3,C14,C11,6),\t0),\n+  SR_CORE (\"pmevtyper0_el0\",    CPENC (3,3,C14,C12,0),\t0),\n+  SR_CORE (\"pmevtyper1_el0\",    CPENC (3,3,C14,C12,1),\t0),\n+  SR_CORE (\"pmevtyper2_el0\",    CPENC (3,3,C14,C12,2),\t0),\n+  SR_CORE (\"pmevtyper3_el0\",    CPENC (3,3,C14,C12,3),\t0),\n+  SR_CORE (\"pmevtyper4_el0\",    CPENC (3,3,C14,C12,4),\t0),\n+  SR_CORE (\"pmevtyper5_el0\",    CPENC (3,3,C14,C12,5),\t0),\n+  SR_CORE (\"pmevtyper6_el0\",    CPENC (3,3,C14,C12,6),\t0),\n+  SR_CORE (\"pmevtyper7_el0\",    CPENC (3,3,C14,C12,7),\t0),\n+  SR_CORE (\"pmevtyper8_el0\",    CPENC (3,3,C14,C13,0),\t0),\n+  SR_CORE (\"pmevtyper9_el0\",    CPENC (3,3,C14,C13,1),\t0),\n+  SR_CORE (\"pmevtyper10_el0\",   CPENC (3,3,C14,C13,2),\t0),\n+  SR_CORE (\"pmevtyper11_el0\",   CPENC (3,3,C14,C13,3),\t0),\n+  SR_CORE (\"pmevtyper12_el0\",   CPENC (3,3,C14,C13,4),\t0),\n+  SR_CORE (\"pmevtyper13_el0\",   CPENC (3,3,C14,C13,5),\t0),\n+  SR_CORE (\"pmevtyper14_el0\",   CPENC (3,3,C14,C13,6),\t0),\n+  SR_CORE (\"pmevtyper15_el0\",   CPENC (3,3,C14,C13,7),\t0),\n+  SR_CORE (\"pmevtyper16_el0\",   CPENC (3,3,C14,C14,0),\t0),\n+  SR_CORE (\"pmevtyper17_el0\",   CPENC (3,3,C14,C14,1),\t0),\n+  SR_CORE (\"pmevtyper18_el0\",   CPENC (3,3,C14,C14,2),\t0),\n+  SR_CORE (\"pmevtyper19_el0\",   CPENC (3,3,C14,C14,3),\t0),\n+  SR_CORE (\"pmevtyper20_el0\",   CPENC (3,3,C14,C14,4),\t0),\n+  SR_CORE (\"pmevtyper21_el0\",   CPENC (3,3,C14,C14,5),\t0),\n+  SR_CORE (\"pmevtyper22_el0\",   CPENC (3,3,C14,C14,6),\t0),\n+  SR_CORE (\"pmevtyper23_el0\",   CPENC (3,3,C14,C14,7),\t0),\n+  SR_CORE (\"pmevtyper24_el0\",   CPENC (3,3,C14,C15,0),\t0),\n+  SR_CORE (\"pmevtyper25_el0\",   CPENC (3,3,C14,C15,1),\t0),\n+  SR_CORE (\"pmevtyper26_el0\",   CPENC (3,3,C14,C15,2),\t0),\n+  SR_CORE (\"pmevtyper27_el0\",   CPENC (3,3,C14,C15,3),\t0),\n+  SR_CORE (\"pmevtyper28_el0\",   CPENC (3,3,C14,C15,4),\t0),\n+  SR_CORE (\"pmevtyper29_el0\",   CPENC (3,3,C14,C15,5),\t0),\n+  SR_CORE (\"pmevtyper30_el0\",   CPENC (3,3,C14,C15,6),\t0),\n+  SR_CORE (\"pmccfiltr_el0\",     CPENC (3,3,C14,C15,7),\t0),\n+\n+  SR_V8_4 (\"dit\",\t\tCPEN_ (3,C2,5),\t\t0),\n+  SR_V8_4 (\"vstcr_el2\",\t\tCPENC (3,4,C2,C6,2),\t0),\n+  SR_V8_4 (\"vsttbr_el2\",\tCPENC (3,4,C2,C6,0),\t0),\n+  SR_V8_4 (\"cnthvs_tval_el2\",\tCPENC (3,4,C14,C4,0),\t0),\n+  SR_V8_4 (\"cnthvs_cval_el2\",\tCPENC (3,4,C14,C4,2),\t0),\n+  SR_V8_4 (\"cnthvs_ctl_el2\",\tCPENC (3,4,C14,C4,1),\t0),\n+  SR_V8_4 (\"cnthps_tval_el2\",\tCPENC (3,4,C14,C5,0),\t0),\n+  SR_V8_4 (\"cnthps_cval_el2\",\tCPENC (3,4,C14,C5,2),\t0),\n+  SR_V8_4 (\"cnthps_ctl_el2\",\tCPENC (3,4,C14,C5,1),\t0),\n+  SR_V8_4 (\"sder32_el2\",\tCPENC (3,4,C1,C3,1),\t0),\n+  SR_V8_4 (\"vncr_el2\",\t\tCPENC (3,4,C2,C2,0),\t0),\n+\n+  { 0, CPENC (0,0,0,0,0), 0, 0 }\n };\n \n bfd_boolean\n@@ -4228,165 +4257,7 @@ aarch64_sys_reg_supported_p (const aarch64_feature_set features,\n   if (!(reg->flags & F_ARCHEXT))\n     return TRUE;\n \n-  /* PAN.  Values are from aarch64_sys_regs.  */\n-  if (reg->value == CPEN_(0,C2,3)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_PAN))\n-    return FALSE;\n-\n-  /* SCXTNUM_ELx registers.  */\n-  if ((reg->value == CPENC (3, 3, C13, C0, 7)\n-       || reg->value == CPENC (3, 0, C13, C0, 7)\n-       || reg->value == CPENC (3, 4, C13, C0, 7)\n-       || reg->value == CPENC (3, 6, C13, C0, 7)\n-       || reg->value == CPENC (3, 5, C13, C0, 7))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_SCXTNUM))\n-      return FALSE;\n-\n-  /* ID_PFR2_EL1 register.  */\n-  if (reg->value == CPENC(3, 0, C0, C3, 4)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_ID_PFR2))\n-    return FALSE;\n-\n-  /* SSBS.  Values are from aarch64_sys_regs.  */\n-  if (reg->value == CPEN_(3,C2,6)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_SSBS))\n-    return FALSE;\n-\n-  /* Virtualization host extensions: system registers.  */\n-  if ((reg->value == CPENC (3, 4, C2, C0, 1)\n-       || reg->value == CPENC (3, 4, C13, C0, 1)\n-       || reg->value == CPENC (3, 4, C14, C3, 0)\n-       || reg->value == CPENC (3, 4, C14, C3, 1)\n-       || reg->value == CPENC (3, 4, C14, C3, 2))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_1))\n-      return FALSE;\n-\n-  /* Virtualization host extensions: *_el12 names of *_el1 registers.  */\n-  if ((reg->value == CPEN_ (5, C0, 0)\n-       || reg->value == CPEN_ (5, C0, 1)\n-       || reg->value == CPENC (3, 5, C1, C0, 0)\n-       || reg->value == CPENC (3, 5, C1, C0, 2)\n-       || reg->value == CPENC (3, 5, C2, C0, 0)\n-       || reg->value == CPENC (3, 5, C2, C0, 1)\n-       || reg->value == CPENC (3, 5, C2, C0, 2)\n-       || reg->value == CPENC (3, 5, C5, C1, 0)\n-       || reg->value == CPENC (3, 5, C5, C1, 1)\n-       || reg->value == CPENC (3, 5, C5, C2, 0)\n-       || reg->value == CPENC (3, 5, C6, C0, 0)\n-       || reg->value == CPENC (3, 5, C10, C2, 0)\n-       || reg->value == CPENC (3, 5, C10, C3, 0)\n-       || reg->value == CPENC (3, 5, C12, C0, 0)\n-       || reg->value == CPENC (3, 5, C13, C0, 1)\n-       || reg->value == CPENC (3, 5, C14, C1, 0))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_1))\n-    return FALSE;\n-\n-  /* Virtualization host extensions: *_el02 names of *_el0 registers.  */\n-  if ((reg->value == CPENC (3, 5, C14, C2, 0)\n-       || reg->value == CPENC (3, 5, C14, C2, 1)\n-       || reg->value == CPENC (3, 5, C14, C2, 2)\n-       || reg->value == CPENC (3, 5, C14, C3, 0)\n-       || reg->value == CPENC (3, 5, C14, C3, 1)\n-       || reg->value == CPENC (3, 5, C14, C3, 2))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_1))\n-    return FALSE;\n-\n-  /* ARMv8.2 features.  */\n-\n-  /* ID_AA64MMFR2_EL1.  */\n-  if (reg->value == CPENC (3, 0, C0, C7, 2)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_2))\n-    return FALSE;\n-\n-  /* PSTATE.UAO.  */\n-  if (reg->value == CPEN_ (0, C2, 4)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_2))\n-    return FALSE;\n-\n-  /* RAS extension.  */\n-\n-  /* ERRIDR_EL1, ERRSELR_EL1, ERXFR_EL1, ERXCTLR_EL1, ERXSTATUS_EL, ERXADDR_EL1,\n-     ERXMISC0_EL1 AND ERXMISC1_EL1.  */\n-  if ((reg->value == CPENC (3, 0, C5, C3, 0)\n-       || reg->value == CPENC (3, 0, C5, C3, 1)\n-       || reg->value == CPENC (3, 0, C5, C3, 2)\n-       || reg->value == CPENC (3, 0, C5, C3, 3)\n-       || reg->value == CPENC (3, 0, C5, C4, 0)\n-       || reg->value == CPENC (3, 0, C5, C4, 1)\n-       || reg->value == CPENC (3, 0, C5, C4, 2)\n-       || reg->value == CPENC (3, 0, C5, C4, 3)\n-       || reg->value == CPENC (3, 0, C5, C5, 0)\n-       || reg->value == CPENC (3, 0, C5, C5, 1))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_RAS))\n-    return FALSE;\n-\n-  /* VSESR_EL2, DISR_EL1 and VDISR_EL2.  */\n-  if ((reg->value == CPENC (3, 4, C5, C2, 3)\n-       || reg->value == CPENC (3, 0, C12, C1, 1)\n-       || reg->value == CPENC (3, 4, C12, C1, 1))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_RAS))\n-    return FALSE;\n-\n-  /* Statistical Profiling extension.  */\n-  if ((reg->value == CPENC (3, 0, C9, C10, 0)\n-       || reg->value == CPENC (3, 0, C9, C10, 1)\n-       || reg->value == CPENC (3, 0, C9, C10, 3)\n-       || reg->value == CPENC (3, 0, C9, C10, 7)\n-       || reg->value == CPENC (3, 0, C9, C9, 0)\n-       || reg->value == CPENC (3, 0, C9, C9, 2)\n-       || reg->value == CPENC (3, 0, C9, C9, 3)\n-       || reg->value == CPENC (3, 0, C9, C9, 4)\n-       || reg->value == CPENC (3, 0, C9, C9, 5)\n-       || reg->value == CPENC (3, 0, C9, C9, 6)\n-       || reg->value == CPENC (3, 0, C9, C9, 7)\n-       || reg->value == CPENC (3, 4, C9, C9, 0)\n-       || reg->value == CPENC (3, 5, C9, C9, 0))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_PROFILE))\n-    return FALSE;\n-\n-  /* ARMv8.3 Pointer authentication keys.  */\n-  if ((reg->value == CPENC (3, 0, C2, C1, 0)\n-       || reg->value == CPENC (3, 0, C2, C1, 1)\n-       || reg->value == CPENC (3, 0, C2, C1, 2)\n-       || reg->value == CPENC (3, 0, C2, C1, 3)\n-       || reg->value == CPENC (3, 0, C2, C2, 0)\n-       || reg->value == CPENC (3, 0, C2, C2, 1)\n-       || reg->value == CPENC (3, 0, C2, C2, 2)\n-       || reg->value == CPENC (3, 0, C2, C2, 3)\n-       || reg->value == CPENC (3, 0, C2, C3, 0)\n-       || reg->value == CPENC (3, 0, C2, C3, 1))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_3))\n-    return FALSE;\n-\n-  /* SVE.  */\n-  if ((reg->value == CPENC (3, 0, C0, C4, 4)\n-       || reg->value == CPENC (3, 0, C1, C2, 0)\n-       || reg->value == CPENC (3, 4, C1, C2, 0)\n-       || reg->value == CPENC (3, 6, C1, C2, 0)\n-       || reg->value == CPENC (3, 5, C1, C2, 0)\n-       || reg->value == CPENC (3, 0, C0, C0, 7))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_SVE))\n-    return FALSE;\n-\n-  /* ARMv8.4 features.  */\n-\n-  /* PSTATE.DIT.  */\n-  if (reg->value == CPEN_ (3, C2, 5)\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_4))\n-    return FALSE;\n-\n-  /* Virtualization extensions.  */\n-  if ((reg->value == CPENC(3, 4, C2, C6, 2)\n-       || reg->value == CPENC(3, 4, C2, C6, 0)\n-       || reg->value == CPENC(3, 4, C14, C4, 0)\n-       || reg->value == CPENC(3, 4, C14, C4, 2)\n-       || reg->value == CPENC(3, 4, C14, C4, 1)\n-       || reg->value == CPENC(3, 4, C14, C5, 0)\n-       || reg->value == CPENC(3, 4, C14, C5, 2)\n-       || reg->value == CPENC(3, 4, C14, C5, 1)\n-       || reg->value == CPENC(3, 4, C1, C3, 1)\n-       || reg->value == CPENC(3, 4, C2, C2, 0))\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_4))\n+  if (!AARCH64_CPU_HAS_ALL_FEATURES (features, reg->features))\n     return FALSE;\n \n   /* ARMv8.4 TLB instructions.  */\n@@ -4439,27 +4310,6 @@ aarch64_sys_reg_supported_p (const aarch64_feature_set features,\n       && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_4))\n     return FALSE;\n \n-  /* Random Number Instructions.  For now they are available\n-     (and optional) only with ARMv8.5-A.  */\n-  if ((reg->value == CPENC (3, 3, C2, C4, 0)\n-       || reg->value == CPENC (3, 3, C2, C4, 1))\n-      && !(AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_RNG)\n-\t   && AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_5)))\n-    return FALSE;\n-\n-  /* System Registers in ARMv8.5-A with AARCH64_FEATURE_MEMTAG.  */\n-  if ((reg->value == CPENC (3, 3, C4, C2, 7)\n-       || reg->value == CPENC (3, 0, C5, C6, 1)\n-       || reg->value == CPENC (3, 0, C5, C6, 0)\n-       || reg->value == CPENC (3, 4, C5, C6, 0)\n-       || reg->value == CPENC (3, 6, C5, C6, 0)\n-       || reg->value == CPENC (3, 5, C5, C6, 0)\n-       || reg->value == CPENC (3, 0, C1, C0, 5)\n-       || reg->value == CPENC (3, 0, C1, C0, 6)\n-       || reg->value == CPENC (3, 1, C0, C0, 4))\n-      && !(AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_MEMTAG)))\n-    return FALSE;\n-\n   return TRUE;\n }\n \n@@ -4472,15 +4322,15 @@ aarch64_sys_reg_supported_p (const aarch64_feature_set features,\n    0b011010 (0x1a).  */\n const aarch64_sys_reg aarch64_pstatefields [] =\n {\n-  { \"spsel\",            0x05,\t0 },\n-  { \"daifset\",          0x1e,\t0 },\n-  { \"daifclr\",          0x1f,\t0 },\n-  { \"pan\",\t\t0x04,\tF_ARCHEXT },\n-  { \"uao\",\t\t0x03,\tF_ARCHEXT },\n-  { \"ssbs\",\t\t0x19,   F_ARCHEXT },\n-  { \"dit\",\t\t0x1a,\tF_ARCHEXT },\n-  { \"tco\",\t\t0x1c,\tF_ARCHEXT },\n-  { 0,          CPENC(0,0,0,0,0), 0 },\n+  SR_CORE (\"spsel\",\t  0x05,\t0),\n+  SR_CORE (\"daifset\",\t  0x1e,\t0),\n+  SR_CORE (\"daifclr\",\t  0x1f,\t0),\n+  SR_PAN  (\"pan\",\t  0x04, 0),\n+  SR_V8_2 (\"uao\",\t  0x03, 0),\n+  SR_SSBS (\"ssbs\",\t  0x19, 0),\n+  SR_V8_4 (\"dit\",\t  0x1a,\t0),\n+  SR_MEMTAG (\"tco\",\t  0x1c,\t0),\n+  { 0,\t  CPENC (0,0,0,0,0), 0, 0 },\n };\n \n bfd_boolean\n@@ -4490,32 +4340,7 @@ aarch64_pstatefield_supported_p (const aarch64_feature_set features,\n   if (!(reg->flags & F_ARCHEXT))\n     return TRUE;\n \n-  /* PAN.  Values are from aarch64_pstatefields.  */\n-  if (reg->value == 0x04\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_PAN))\n-    return FALSE;\n-\n-  /* UAO.  Values are from aarch64_pstatefields.  */\n-  if (reg->value == 0x03\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_2))\n-    return FALSE;\n-\n-  /* SSBS.  Values are from aarch64_pstatefields.  */\n-  if (reg->value == 0x19\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_SSBS))\n-    return FALSE;\n-\n-  /* DIT.  Values are from aarch64_pstatefields.  */\n-  if (reg->value == 0x1a\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_V8_4))\n-    return FALSE;\n-\n-  /* TCO.  Values are from aarch64_pstatefields.  */\n-  if (reg->value == 0x1c\n-      && !AARCH64_CPU_HAS_FEATURE (features, AARCH64_FEATURE_MEMTAG))\n-    return FALSE;\n-\n-  return TRUE;\n+  return AARCH64_CPU_HAS_ALL_FEATURES (features, reg->features);\n }\n \n const aarch64_sys_ins_reg aarch64_sys_regs_ic[] ="
    }
  ]
}