{
  "sha": "c1a5d03a89a455d79f025c66dce83342de4d26ce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzFhNWQwM2E4OWE0NTVkNzlmMDI1YzY2ZGNlODMzNDJkZTRkMjZjZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-26T21:42:25Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-08-19T16:17:11Z"
    },
    "message": "Add --with-static-standard-libraries to the top level\n\ngdb should normally not be linked with -static-libstdc++.  Currently\nthis has not caused problems, but it's incompatible with catching an\nexception thrown from a shared library -- and a subsequent patch\nchanges gdb to do just this.\n\nThis patch adds a new --with-static-standard-libraries flag to the\ntop-level configure.  It defaults to \"auto\", which means enabled if\ngcc is being built, and disabled otherwise.\n\nChangeLog\n2019-08-19  Tom Tromey  <tom@tromey.com>\n\n\t* configure: Rebuild.\n\t* configure.ac: Add --with-static-standard-libraries.",
    "tree": {
      "sha": "4be2231cd60db205fb4cf6485809d84bedae3e25",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4be2231cd60db205fb4cf6485809d84bedae3e25"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c1a5d03a89a455d79f025c66dce83342de4d26ce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1a5d03a89a455d79f025c66dce83342de4d26ce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c1a5d03a89a455d79f025c66dce83342de4d26ce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c1a5d03a89a455d79f025c66dce83342de4d26ce/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3eb185c97d8170b3f3a2b5edab4fbbd56f53f6f7"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 43,
    "deletions": 2
  },
  "files": [
    {
      "sha": "76c121f680314ca406d8b85bbcbeb8fcb13ca3e9",
      "filename": "ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a5d03a89a455d79f025c66dce83342de4d26ce/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a5d03a89a455d79f025c66dce83342de4d26ce/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ChangeLog?ref=c1a5d03a89a455d79f025c66dce83342de4d26ce",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-19  Tom Tromey  <tom@tromey.com>\n+\n+\t* configure: Rebuild.\n+\t* configure.ac: Add --with-static-standard-libraries.\n+\n 2019-08-09  Nick Clifton  <nickc@redhat.com>\n \n \t* libiberty: Sync with gcc.  Bring in:"
    },
    {
      "sha": "6a9719f60911b43a61f13bb2a267cf21941ebd84",
      "filename": "configure",
      "status": "modified",
      "additions": 23,
      "deletions": 1,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a5d03a89a455d79f025c66dce83342de4d26ce/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a5d03a89a455d79f025c66dce83342de4d26ce/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/configure?ref=c1a5d03a89a455d79f025c66dce83342de4d26ce",
      "patch": "@@ -802,6 +802,7 @@ with_gmp\n with_gmp_include\n with_gmp_lib\n with_stage1_libs\n+with_static_standard_libraries\n with_stage1_ldflags\n with_boot_libs\n with_boot_ldflags\n@@ -1572,6 +1573,9 @@ Optional Packages:\n   --with-gmp-include=PATH specify directory for installed GMP include files\n   --with-gmp-lib=PATH     specify directory for the installed GMP library\n   --with-stage1-libs=LIBS libraries for stage1\n+  --with-static-standard-libraries\n+                          use -static-libstdc++ and -static-libgcc\n+                          (default=auto)\n   --with-stage1-ldflags=FLAGS\n                           linker flags for stage1\n   --with-boot-libs=LIBS   libraries for stage2 and later\n@@ -5824,6 +5828,23 @@ fi\n \n \n \n+# Whether or not to use -static-libstdc++ and -static-libgcc.  The\n+# default is yes if gcc is being built; no otherwise.  The reason for\n+# this default is that gdb is sometimes linked against GNU Source\n+# Highlight, which is a shared library that uses C++ exceptions.  In\n+# this case, -static-libstdc++ will cause crashes.\n+\n+# Check whether --with-static-standard-libraries was given.\n+if test \"${with_static_standard_libraries+set}\" = set; then :\n+  withval=$with_static_standard_libraries;\n+else\n+  with_static_standard_libraries=auto\n+fi\n+\n+if test \"$with_static_standard_libraries\" = auto; then\n+  with_static_standard_libraries=$have_compiler\n+fi\n+\n # Linker flags to use for stage1 or when not bootstrapping.\n \n # Check whether --with-stage1-ldflags was given.\n@@ -5838,7 +5859,8 @@ else\n  # In stage 1, default to linking libstdc++ and libgcc statically with GCC\n  # if supported.  But if the user explicitly specified the libraries to use,\n  # trust that they are doing what they want.\n- if test \"$stage1_libs\" = \"\" -a \"$have_static_libs\" = yes; then\n+ if test \"$with_static_standard_libraries\" = yes -a \"$stage1_libs\" = \"\" \\\n+     -a \"$have_static_libs\" = yes; then\n    stage1_ldflags=\"-static-libstdc++ -static-libgcc\"\n  fi\n fi"
    },
    {
      "sha": "7433badc217f06710d5aa4ebaf580a0b2d00e5ce",
      "filename": "configure.ac",
      "status": "modified",
      "additions": 15,
      "deletions": 1,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c1a5d03a89a455d79f025c66dce83342de4d26ce/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c1a5d03a89a455d79f025c66dce83342de4d26ce/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/configure.ac?ref=c1a5d03a89a455d79f025c66dce83342de4d26ce",
      "patch": "@@ -1602,6 +1602,19 @@ AC_ARG_WITH(stage1-libs,\n [stage1_libs=])\n AC_SUBST(stage1_libs)\n \n+# Whether or not to use -static-libstdc++ and -static-libgcc.  The\n+# default is yes if gcc is being built; no otherwise.  The reason for\n+# this default is that gdb is sometimes linked against GNU Source\n+# Highlight, which is a shared library that uses C++ exceptions.  In\n+# this case, -static-libstdc++ will cause crashes.\n+AC_ARG_WITH(static-standard-libraries,\n+[AS_HELP_STRING([--with-static-standard-libraries],\n+                [use -static-libstdc++ and -static-libgcc (default=auto)])],\n+[], [with_static_standard_libraries=auto])\n+if test \"$with_static_standard_libraries\" = auto; then\n+  with_static_standard_libraries=$have_compiler\n+fi\n+\n # Linker flags to use for stage1 or when not bootstrapping.\n AC_ARG_WITH(stage1-ldflags,\n [AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],\n@@ -1614,7 +1627,8 @@ AC_ARG_WITH(stage1-ldflags,\n  # In stage 1, default to linking libstdc++ and libgcc statically with GCC\n  # if supported.  But if the user explicitly specified the libraries to use,\n  # trust that they are doing what they want.\n- if test \"$stage1_libs\" = \"\" -a \"$have_static_libs\" = yes; then\n+ if test \"$with_static_standard_libraries\" = yes -a \"$stage1_libs\" = \"\" \\\n+     -a \"$have_static_libs\" = yes; then\n    stage1_ldflags=\"-static-libstdc++ -static-libgcc\"\n  fi])\n AC_SUBST(stage1_ldflags)"
    }
  ]
}