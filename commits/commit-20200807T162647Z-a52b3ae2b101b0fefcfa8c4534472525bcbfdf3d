{
  "sha": "a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTUyYjNhZTJiMTAxYjBmZWZjZmE4YzQ1MzQ0NzI1MjViY2JmZGYzZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:45Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-08-07T16:26:47Z"
    },
    "message": "Fix remaining Ravenscar regressions\n\nTesting showed a few more Ravenscar regressions arising from upstream.\nIn particular, gdb now uses the current thread in some places where\ninferior_ptid was previously used.  This patch fixes the problem by\narranging to save and restore the thread now.\n\ngdb/ChangeLog\n2020-08-07  Tom Tromey  <tromey@adacore.com>\n\n\t* ravenscar-thread.c\n\t(ravenscar_thread_target::set_base_thread_from_ravenscar_task):\n\tNew method.\n\t(ravenscar_thread_target::wait): Check\n\truntime_initialized.\n\t(ravenscar_thread_target::prepare_to_store)\n\t(ravenscar_thread_target::stopped_by_sw_breakpoint)\n\t(ravenscar_thread_target::stopped_by_hw_breakpoint)\n\t(ravenscar_thread_target::stopped_by_watchpoint)\n\t(ravenscar_thread_target::stopped_data_address)\n\t(ravenscar_thread_target::core_of_thread): Use\n\tscoped_restore_current_thread and\n\tset_base_thread_from_ravenscar_task.",
    "tree": {
      "sha": "f13defcaaee96ec566acc3721af5e9a266f091d4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f13defcaaee96ec566acc3721af5e9a266f091d4"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0e29517d97e94bfceb3abce77aea3b249f6cdaf3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0e29517d97e94bfceb3abce77aea3b249f6cdaf3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0e29517d97e94bfceb3abce77aea3b249f6cdaf3"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 35,
    "deletions": 10
  },
  "files": [
    {
      "sha": "c3dcd680795d13fc005fb4c57865e39f483b0050",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
      "patch": "@@ -1,3 +1,19 @@\n+2020-08-07  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ravenscar-thread.c\n+\t(ravenscar_thread_target::set_base_thread_from_ravenscar_task):\n+\tNew method.\n+\t(ravenscar_thread_target::wait): Check\n+\truntime_initialized.\n+\t(ravenscar_thread_target::prepare_to_store)\n+\t(ravenscar_thread_target::stopped_by_sw_breakpoint)\n+\t(ravenscar_thread_target::stopped_by_hw_breakpoint)\n+\t(ravenscar_thread_target::stopped_by_watchpoint)\n+\t(ravenscar_thread_target::stopped_data_address)\n+\t(ravenscar_thread_target::core_of_thread): Use\n+\tscoped_restore_current_thread and\n+\tset_base_thread_from_ravenscar_task.\n+\n 2020-08-07  Tom Tromey  <tromey@adacore.com>\n \n \t* ravenscar-thread.c (update_thread_list): Set inferior_ptid."
    },
    {
      "sha": "387ebcb32e929bc70df9d42a4dba2a88a3f637a1",
      "filename": "gdb/ravenscar-thread.c",
      "status": "modified",
      "additions": 19,
      "deletions": 10,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d/gdb/ravenscar-thread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d/gdb/ravenscar-thread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ravenscar-thread.c?ref=a52b3ae2b101b0fefcfa8c4534472525bcbfdf3d",
      "patch": "@@ -151,6 +151,15 @@ struct ravenscar_thread_target final : public target_ops\n   ptid_t get_base_thread_from_ravenscar_task (ptid_t ptid);\n   void add_thread (struct ada_task_info *task);\n \n+  /* Like switch_to_thread, but uses the base ptid for the thread.  */\n+  void set_base_thread_from_ravenscar_task (ptid_t ptid)\n+  {\n+    process_stratum_target *proc_target\n+      = as_process_stratum_target (this->beneath ());\n+    ptid_t underlying = get_base_thread_from_ravenscar_task (ptid);\n+    switch_to_thread (find_thread_ptid (proc_target, underlying));\n+  }\n+\n   /* This maps a TID to the CPU on which it was running.  This is\n      needed because sometimes the runtime will report an active task\n      that hasn't yet been put on the list of tasks that is read by\n@@ -571,8 +580,8 @@ ravenscar_thread_target::prepare_to_store (struct regcache *regcache)\n bool\n ravenscar_thread_target::stopped_by_sw_breakpoint ()\n {\n-  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  scoped_restore_current_thread saver;\n+  set_base_thread_from_ravenscar_task (inferior_ptid);\n   return beneath ()->stopped_by_sw_breakpoint ();\n }\n \n@@ -581,8 +590,8 @@ ravenscar_thread_target::stopped_by_sw_breakpoint ()\n bool\n ravenscar_thread_target::stopped_by_hw_breakpoint ()\n {\n-  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  scoped_restore_current_thread saver;\n+  set_base_thread_from_ravenscar_task (inferior_ptid);\n   return beneath ()->stopped_by_hw_breakpoint ();\n }\n \n@@ -591,8 +600,8 @@ ravenscar_thread_target::stopped_by_hw_breakpoint ()\n bool\n ravenscar_thread_target::stopped_by_watchpoint ()\n {\n-  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  scoped_restore_current_thread saver;\n+  set_base_thread_from_ravenscar_task (inferior_ptid);\n   return beneath ()->stopped_by_watchpoint ();\n }\n \n@@ -601,8 +610,8 @@ ravenscar_thread_target::stopped_by_watchpoint ()\n bool\n ravenscar_thread_target::stopped_data_address (CORE_ADDR *addr_p)\n {\n-  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  scoped_restore_current_thread saver;\n+  set_base_thread_from_ravenscar_task (inferior_ptid);\n   return beneath ()->stopped_data_address (addr_p);\n }\n \n@@ -620,8 +629,8 @@ ravenscar_thread_target::mourn_inferior ()\n int\n ravenscar_thread_target::core_of_thread (ptid_t ptid)\n {\n-  scoped_restore save_ptid = make_scoped_restore (&inferior_ptid);\n-  inferior_ptid = get_base_thread_from_ravenscar_task (inferior_ptid);\n+  scoped_restore_current_thread saver;\n+  set_base_thread_from_ravenscar_task (inferior_ptid);\n   return beneath ()->core_of_thread (inferior_ptid);\n }\n "
    }
  ]
}