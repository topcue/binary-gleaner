{
  "sha": "9698f7141065f5eaea44a17331b3f29ae712a79e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTY5OGY3MTQxMDY1ZjVlYWVhNDRhMTczMzFiM2YyOWFlNzEyYTc5ZQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-08T17:45:55Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-08-02T16:48:29Z"
    },
    "message": "Remove uses of fprintf_symbol_filtered\n\nI believe that many calls to fprintf_symbol_filtered are incorrect.\nIn particular, there are some that pass a symbol's print name, like:\n\n  fprintf_symbol_filtered (gdb_stdout, sym->print_name (),\n\t\t\t   current_language->la_language, DMGL_ANSI);\n\nfprintf_symbol_filtered uses the \"demangle\" global to decide whether\nor not to demangle -- but print_name does this as well.  This can lead\nto double-demangling.  Normally this could be innocuous, except I also\nplan to change Ada demangling in a way that causes this to fail.",
    "tree": {
      "sha": "1682e3ac88d8901feaab0815899c56f7b3e312dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1682e3ac88d8901feaab0815899c56f7b3e312dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9698f7141065f5eaea44a17331b3f29ae712a79e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9698f7141065f5eaea44a17331b3f29ae712a79e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9698f7141065f5eaea44a17331b3f29ae712a79e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9698f7141065f5eaea44a17331b3f29ae712a79e/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ba8694b650b60c29126fd958575ffa1ca4f6c415",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba8694b650b60c29126fd958575ffa1ca4f6c415",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ba8694b650b60c29126fd958575ffa1ca4f6c415"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 7,
    "deletions": 17
  },
  "files": [
    {
      "sha": "2fe3f4b0cc5d623dc58dd2ad2684c3bc71867eae",
      "filename": "gdb/printcmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/printcmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/printcmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/printcmd.c?ref=9698f7141065f5eaea44a17331b3f29ae712a79e",
      "patch": "@@ -1683,8 +1683,7 @@ info_address_command (const char *exp, int from_tty)\n     }\n \n   printf_filtered (\"Symbol \\\"\");\n-  fprintf_symbol_filtered (gdb_stdout, sym->print_name (),\n-\t\t\t   current_language->la_language, DMGL_ANSI);\n+  fputs_filtered (sym->print_name (), gdb_stdout);\n   printf_filtered (\"\\\" is \");\n   val = SYMBOL_VALUE (sym);\n   if (SYMBOL_OBJFILE_OWNED (sym))"
    },
    {
      "sha": "fd0b7f9e1f20766bea8ff04842ca1ae84baf74c8",
      "filename": "gdb/python/py-framefilter.c",
      "status": "modified",
      "additions": 2,
      "deletions": 6,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/python/py-framefilter.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/python/py-framefilter.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-framefilter.c?ref=9698f7141065f5eaea44a17331b3f29ae712a79e",
      "patch": "@@ -348,16 +348,12 @@ py_print_single_arg (struct ui_out *out,\n     {\n       string_file stb;\n \n-      fprintf_symbol_filtered (&stb, fa->sym->print_name (),\n-\t\t\t       fa->sym->language (),\n-\t\t\t       DMGL_PARAMS | DMGL_ANSI);\n+      fputs_filtered (fa->sym->print_name (), &stb);\n       if (fa->entry_kind == print_entry_values_compact)\n \t{\n \t  stb.puts (\"=\");\n \n-\t  fprintf_symbol_filtered (&stb, fa->sym->print_name (),\n-\t\t\t\t   fa->sym->language (),\n-\t\t\t\t   DMGL_PARAMS | DMGL_ANSI);\n+\t  fputs_filtered (fa->sym->print_name (), &stb);\n \t}\n       if (fa->entry_kind == print_entry_values_only\n \t  || fa->entry_kind == print_entry_values_compact)"
    },
    {
      "sha": "516e4d45696f4b7c85ab679e29d03b3c9de331b7",
      "filename": "gdb/stack.c",
      "status": "modified",
      "additions": 4,
      "deletions": 9,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9698f7141065f5eaea44a17331b3f29ae712a79e/gdb/stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stack.c?ref=9698f7141065f5eaea44a17331b3f29ae712a79e",
      "patch": "@@ -427,17 +427,14 @@ print_frame_arg (const frame_print_options &fp_opts,\n \n   annotate_arg_emitter arg_emitter;\n   ui_out_emit_tuple tuple_emitter (uiout, NULL);\n-  fprintf_symbol_filtered (&stb, arg->sym->print_name (),\n-\t\t\t   arg->sym->language (), DMGL_PARAMS | DMGL_ANSI);\n+  fputs_filtered (arg->sym->print_name (), &stb);\n   if (arg->entry_kind == print_entry_values_compact)\n     {\n       /* It is OK to provide invalid MI-like stream as with\n \t PRINT_ENTRY_VALUE_COMPACT we never use MI.  */\n       stb.puts (\"=\");\n \n-      fprintf_symbol_filtered (&stb, arg->sym->print_name (),\n-\t\t\t       arg->sym->language (),\n-\t\t\t       DMGL_PARAMS | DMGL_ANSI);\n+      fputs_filtered (arg->sym->print_name (), &stb);\n     }\n   if (arg->entry_kind == print_entry_values_only\n       || arg->entry_kind == print_entry_values_compact)\n@@ -1368,8 +1365,7 @@ print_frame (const frame_print_options &fp_opts,\n     annotate_frame_function_name ();\n \n     string_file stb;\n-    fprintf_symbol_filtered (&stb, funname ? funname.get () : \"??\",\n-\t\t\t     funlang, DMGL_ANSI);\n+    fputs_filtered (funname ? funname.get () : \"??\", &stb);\n     uiout->field_stream (\"func\", stb, function_name_style.style ());\n     uiout->wrap_hint (\"   \");\n     annotate_frame_args ();\n@@ -1564,8 +1560,7 @@ info_frame_command_core (struct frame_info *fi, bool selected_frame_p)\n   if (funname)\n     {\n       printf_filtered (\" in \");\n-      fprintf_symbol_filtered (gdb_stdout, funname, funlang,\n-\t\t\t       DMGL_ANSI | DMGL_PARAMS);\n+      fputs_filtered (funname, gdb_stdout);\n     }\n   wrap_here (\"   \");\n   if (sal.symtab)"
    }
  ]
}