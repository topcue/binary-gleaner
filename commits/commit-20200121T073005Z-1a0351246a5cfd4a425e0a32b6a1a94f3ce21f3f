{
  "sha": "1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWEwMzUxMjQ2YTVjZmQ0YTQyNWUwYTMyYjZhMWE5NGYzY2UyMWYzZg==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-21T07:30:05Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-01-21T07:30:05Z"
    },
    "message": "x86: replace adhoc ambiguous operand checking for CRC32\n\nThere's no need (anymore?) to heavily special case this - just make\ngeneric logic consider only its first operand, and deal with the case\nof an 'l' suffix not being allowed in a pattern.",
    "tree": {
      "sha": "6f8c3cea4b7b05131f8845364be3eb1c9ca51e74",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6f8c3cea4b7b05131f8845364be3eb1c9ca51e74"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c006a730e9a35489cc8d081f422a7ea1b62ada56",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c006a730e9a35489cc8d081f422a7ea1b62ada56",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c006a730e9a35489cc8d081f422a7ea1b62ada56"
    }
  ],
  "stats": {
    "total": 110,
    "additions": 60,
    "deletions": 50
  },
  "files": [
    {
      "sha": "37d73faba082fea93033baf99188a578e9a33e52",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -1,3 +1,17 @@\n+2020-01-21  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* config/tc-i386.c (process_suffix): Merge CRC32 handling into\n+\tgeneric code path. Deal with No_lSuf being set in a template.\n+\t* testsuite/gas/i386/inval-crc32.l,\n+\ttestsuite/gas/i386/x86-64-inval-crc32.l: Expect warning(s)\n+\tinstead of error(s) when operand size is ambiguous.\n+\t* testsuite/gas/i386/noreg16.s, testsuite/gas/i386/noreg32.s,\n+\ttestsuite/gas/i386/noreg64.s: Add CRC32 tests.\n+\t* testsuite/gas/i386/noreg16.d, testsuite/gas/i386/noreg16.l,\n+\ttestsuite/gas/i386/noreg32.d, testsuite/gas/i386/noreg32.l,\n+\ttestsuite/gas/i386/noreg64.d, testsuite/gas/i386/noreg64.l:\n+\tAdjust expectations.\n+\n 2020-01-21  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/tc-i386.c (process_suffix): Drop SYSRET special case"
    },
    {
      "sha": "3a2a1b743536db577589e7235d453cb6fb073036",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 22,
      "deletions": 44,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -6301,50 +6301,26 @@ process_suffix (void)\n \t     Destination register type is more significant than source\n \t     register type.  crc32 in SSE4.2 prefers source register\n \t     type. */\n-\t  if (i.tm.base_opcode == 0xf20f38f0\n-\t      && i.types[0].bitfield.class == Reg)\n-\t    {\n-\t      if (i.types[0].bitfield.byte)\n-\t\ti.suffix = BYTE_MNEM_SUFFIX;\n-\t      else if (i.types[0].bitfield.word)\n-\t\ti.suffix = WORD_MNEM_SUFFIX;\n-\t      else if (i.types[0].bitfield.dword)\n-\t\ti.suffix = LONG_MNEM_SUFFIX;\n-\t      else if (i.types[0].bitfield.qword)\n-\t\ti.suffix = QWORD_MNEM_SUFFIX;\n-\t    }\n-\n-\t  if (!i.suffix)\n-\t    {\n-\t      int op;\n+\t  unsigned int op = i.tm.base_opcode != 0xf20f38f0 ? i.operands : 1;\n \n-\t      if (i.tm.base_opcode == 0xf20f38f0)\n-\t\t{\n-\t\t  /* We have to know the operand size for crc32.  */\n-\t\t  as_bad (_(\"ambiguous memory operand size for `%s`\"),\n-\t\t\t  i.tm.name);\n-\t\t  return 0;\n-\t\t}\n-\n-\t      for (op = i.operands; --op >= 0;)\n-\t\tif (i.tm.operand_types[op].bitfield.instance == InstanceNone\n-\t\t    || i.tm.operand_types[op].bitfield.instance == Accum)\n-\t\t  {\n-\t\t    if (i.types[op].bitfield.class != Reg)\n-\t\t      continue;\n-\t\t    if (i.types[op].bitfield.byte)\n-\t\t      i.suffix = BYTE_MNEM_SUFFIX;\n-\t\t    else if (i.types[op].bitfield.word)\n-\t\t      i.suffix = WORD_MNEM_SUFFIX;\n-\t\t    else if (i.types[op].bitfield.dword)\n-\t\t      i.suffix = LONG_MNEM_SUFFIX;\n-\t\t    else if (i.types[op].bitfield.qword)\n-\t\t      i.suffix = QWORD_MNEM_SUFFIX;\n-\t\t    else\n-\t\t      continue;\n-\t\t    break;\n-\t\t  }\n-\t    }\n+\t  while (op--)\n+\t    if (i.tm.operand_types[op].bitfield.instance == InstanceNone\n+\t\t|| i.tm.operand_types[op].bitfield.instance == Accum)\n+\t      {\n+\t\tif (i.types[op].bitfield.class != Reg)\n+\t\t  continue;\n+\t\tif (i.types[op].bitfield.byte)\n+\t\t  i.suffix = BYTE_MNEM_SUFFIX;\n+\t\telse if (i.types[op].bitfield.word)\n+\t\t  i.suffix = WORD_MNEM_SUFFIX;\n+\t\telse if (i.types[op].bitfield.dword)\n+\t\t  i.suffix = LONG_MNEM_SUFFIX;\n+\t\telse if (i.types[op].bitfield.qword)\n+\t\t  i.suffix = QWORD_MNEM_SUFFIX;\n+\t\telse\n+\t\t  continue;\n+\t\tbreak;\n+\t      }\n \t}\n       else if (i.suffix == BYTE_MNEM_SUFFIX)\n \t{\n@@ -6484,8 +6460,10 @@ process_suffix (void)\n \t    i.suffix = SHORT_MNEM_SUFFIX;\n \t  else if (flag_code == CODE_16BIT)\n \t    i.suffix = WORD_MNEM_SUFFIX;\n-\t  else\n+\t  else if (!i.tm.opcode_modifier.no_lsuf)\n \t    i.suffix = LONG_MNEM_SUFFIX;\n+\t  else\n+\t    i.suffix = QWORD_MNEM_SUFFIX;\n \t}\n     }\n "
    },
    {
      "sha": "5afc35c8a52b1651319de823927ce8be6e49ac7e",
      "filename": "gas/testsuite/gas/i386/inval-crc32.l",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/inval-crc32.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/inval-crc32.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/inval-crc32.l?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -3,7 +3,7 @@\n .*:7: Error: .*\n .*:8: Error: .*\n .*:9: Error: .*\n-.*:10: Error: .*\n+.*:10: Warning: .*\n .*:11: Error: .*\n .*:12: Error: .*\n .*:13: Error: .*\n@@ -27,7 +27,9 @@ GAS LISTING .*\n [ \t]*7[ \t]+crc32w \\(%esi\\), %ax\n [ \t]*8[ \t]+crc32 \\(%esi\\), %al\n [ \t]*9[ \t]+crc32 \\(%esi\\), %ax\n-[ \t]*10[ \t]+crc32 \\(%esi\\), %eax\n+[ \t]*10[ \t]+\\?\\?\\?\\? F20F38F1[ \t]+crc32 \\(%esi\\), %eax\n+\\*\\*\\*\\*  Warning: .* `crc32'\n+[ \t]*10[ \t]+06\n [ \t]*11[ \t]+crc32  %al, %al\n [ \t]*12[ \t]+crc32b  %al, %al\n [ \t]*13[ \t]+crc32  %ax, %ax"
    },
    {
      "sha": "8a6252eea628b4b6ce50a8090635d63101516003",
      "filename": "gas/testsuite/gas/i386/noreg16.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg16.d?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -26,6 +26,7 @@ Disassembly of section .text:\n  *[a-f0-9]+:\t81 3f 34 12          \tcmpw   \\$0x1234,\\(%bx\\)\n  *[a-f0-9]+:\ta7                   \tcmpsw  %es:\\(%di\\),%ds:\\(%si\\)\n  *[a-f0-9]+:\t67 a7                \tcmpsw  %es:\\(%edi\\),%ds:\\(%esi\\)\n+ *[a-f0-9]+:\tf2 0f 38 f1 07       \tcrc32w \\(%bx\\),%eax\n  *[a-f0-9]+:\tf2 0f 2a 07          \tcvtsi2sdl \\(%bx\\),%xmm0\n  *[a-f0-9]+:\tf3 0f 2a 07          \tcvtsi2ssl \\(%bx\\),%xmm0\n  *[a-f0-9]+:\tff 0f                \tdecw   \\(%bx\\)"
    },
    {
      "sha": "1b3f9bc9f07426cbe5c83f32c036d00d73a3b6d3",
      "filename": "gas/testsuite/gas/i386/noreg16.l",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg16.l?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -17,6 +17,7 @@\n .*:[1-9][0-9]*: Warning: .* `cmp'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n+.*:[1-9][0-9]*: Warning: .* `crc32'\n .*:[1-9][0-9]*: Warning: .* `dec'\n .*:[1-9][0-9]*: Warning: .* `div'\n .*:[1-9][0-9]*: Warning: .* `fadd'"
    },
    {
      "sha": "743e5faeb6ac851c90bc7e5d73104cbb38384dac",
      "filename": "gas/testsuite/gas/i386/noreg16.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg16.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg16.s?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -20,6 +20,7 @@ noreg:\n \tcmp\t$0x1234, (%bx)\n \tcmps\n \tcmps\t%es:(%edi), (%esi)\n+\tcrc32\t(%bx), %eax\n \tcvtsi2sd (%bx), %xmm0\n \tcvtsi2ss (%bx), %xmm0\n \tdec\t(%bx)"
    },
    {
      "sha": "1e03f98335c83a93d46ff5ad7ca95e4eb98815bd",
      "filename": "gas/testsuite/gas/i386/noreg32.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg32.d?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -30,6 +30,7 @@ Disassembly of section .text:\n  *[a-f0-9]+:\t81 38 78 56 34 12    \tcmpl   \\$0x12345678,\\(%eax\\)\n  *[a-f0-9]+:\ta7                   \tcmpsl  %es:\\(%edi\\),%ds:\\(%esi\\)\n  *[a-f0-9]+:\ta7                   \tcmpsl  %es:\\(%edi\\),%ds:\\(%esi\\)\n+ *[a-f0-9]+:\tf2 0f 38 f1 00       \tcrc32l \\(%eax\\),%eax\n  *[a-f0-9]+:\tf2 0f 2a 00          \tcvtsi2sdl \\(%eax\\),%xmm0\n  *[a-f0-9]+:\tf3 0f 2a 00          \tcvtsi2ssl \\(%eax\\),%xmm0\n  *[a-f0-9]+:\tff 08                \tdecl   \\(%eax\\)"
    },
    {
      "sha": "1fab0f4cbbe0be41a1ac50aa782da9b437f5ce04",
      "filename": "gas/testsuite/gas/i386/noreg32.l",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg32.l?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -21,6 +21,7 @@\n .*:[1-9][0-9]*: Warning: .* `cmp'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n+.*:[1-9][0-9]*: Warning: .* `crc32'\n .*:[1-9][0-9]*: Warning: .* `dec'\n .*:[1-9][0-9]*: Warning: .* `div'\n .*:[1-9][0-9]*: Warning: .* `fadd'"
    },
    {
      "sha": "1d1cf6d797135b59b445c49d7b1bf2ce80320a1c",
      "filename": "gas/testsuite/gas/i386/noreg32.s",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg32.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg32.s?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -23,6 +23,7 @@ noreg:\n \tcmp\t$0x12345678, (%eax)\n \tcmps\n \tcmps\t%es:(%edi), (%esi)\n+\tcrc32\t(%eax), %eax\n \tcvtsi2sd (%eax), %xmm0\n \tcvtsi2ss (%eax), %xmm0\n \tdec\t(%eax)"
    },
    {
      "sha": "8b56ddcd9a43f06068f39bfcaac24f6f642a10ed",
      "filename": "gas/testsuite/gas/i386/noreg64.d",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg64.d?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -30,6 +30,8 @@ Disassembly of section .text:\n  *[a-f0-9]+:\t81 38 78 56 34 12    \tcmpl   \\$0x12345678,\\(%rax\\)\n  *[a-f0-9]+:\ta7                   \tcmpsl  %es:\\(%rdi\\),%ds:\\(%rsi\\)\n  *[a-f0-9]+:\ta7                   \tcmpsl  %es:\\(%rdi\\),%ds:\\(%rsi\\)\n+ *[a-f0-9]+:\tf2 0f 38 f1 00       \tcrc32l \\(%rax\\),%eax\n+ *[a-f0-9]+:\tf2 48 0f 38 f1 00    \tcrc32q \\(%rax\\),%rax\n  *[a-f0-9]+:\tf2 0f 2a 00          \tcvtsi2sdl \\(%rax\\),%xmm0\n  *[a-f0-9]+:\tf3 0f 2a 00          \tcvtsi2ssl \\(%rax\\),%xmm0\n  *[a-f0-9]+:\tff 08                \tdecl   \\(%rax\\)"
    },
    {
      "sha": "a4d3179e4ce5db6954b9a70c72ccf96ebc9a04cb",
      "filename": "gas/testsuite/gas/i386/noreg64.l",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg64.l?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -21,6 +21,8 @@\n .*:[1-9][0-9]*: Warning: .* `cmp'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n .*:[1-9][0-9]*: Warning: .* `cmps'\n+.*:[1-9][0-9]*: Warning: .* `crc32'\n+.*:[1-9][0-9]*: Warning: .* `crc32'\n .*:[1-9][0-9]*: Warning: .* `cvtsi2sd'\n .*:[1-9][0-9]*: Warning: .* `cvtsi2ss'\n .*:[1-9][0-9]*: Warning: .* `dec'"
    },
    {
      "sha": "119b44e7245d95e1ee6a8d49f6fdba4a640ca684",
      "filename": "gas/testsuite/gas/i386/noreg64.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/noreg64.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/noreg64.s?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -23,6 +23,8 @@ noreg:\n \tcmp\t$0x12345678, (%rax)\n \tcmps\n \tcmps\t%es:(%rdi), (%rsi)\n+\tcrc32\t(%rax), %eax\n+\tcrc32\t(%rax), %rax\n \tcvtsi2sd (%rax), %xmm0\n \tcvtsi2ss (%rax), %xmm0\n \tdec\t(%rax)"
    },
    {
      "sha": "e30e82f7ead744265d00027ceb498710356958f3",
      "filename": "gas/testsuite/gas/i386/x86-64-inval-crc32.l",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/x86-64-inval-crc32.l",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f/gas/testsuite/gas/i386/x86-64-inval-crc32.l",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-inval-crc32.l?ref=1a0351246a5cfd4a425e0a32b6a1a94f3ce21f3f",
      "patch": "@@ -3,8 +3,8 @@\n .*:7: Error: .*\n .*:8: Error: .*\n .*:9: Error: .*\n-.*:10: Error: .*\n-.*:11: Error: .*\n+.*:10: Warning: .*\n+.*:11: Warning: .*\n .*:12: Error: .*\n .*:13: Error: .*\n .*:14: Error: .*\n@@ -38,8 +38,12 @@ GAS LISTING .*\n [ \t]*7[ \t]+crc32w \\(%rsi\\), %ax\n [ \t]*8[ \t]+crc32 \\(%rsi\\), %al\n [ \t]*9[ \t]+crc32 \\(%rsi\\), %ax\n-[ \t]*10[ \t]+crc32 \\(%rsi\\), %eax\n-[ \t]*11[ \t]+crc32 \\(%rsi\\), %rax\n+[ \t]*10[ \t]+\\?\\?\\?\\? F20F38F1[ \t]+crc32 \\(%rsi\\), %eax\n+\\*\\*\\*\\*  Warning: .* `crc32'\n+[ \t]*10[ \t]+06\n+[ \t]*11[ \t]+\\?\\?\\?\\? F2480F38[ \t]+crc32 \\(%rsi\\), %rax\n+\\*\\*\\*\\*  Warning: .* `crc32'\n+[ \t]*11[ \t]+F106\n [ \t]*12[ \t]+crc32  %al, %al\n [ \t]*13[ \t]+crc32b  %al, %al\n [ \t]*14[ \t]+crc32  %ax, %ax"
    }
  ]
}