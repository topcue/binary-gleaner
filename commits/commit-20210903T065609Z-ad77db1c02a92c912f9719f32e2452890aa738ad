{
  "sha": "ad77db1c02a92c912f9719f32e2452890aa738ad",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWQ3N2RiMWMwMmE5MmM5MTJmOTcxOWYzMmUyNDUyODkwYWE3MzhhZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-03T06:56:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-03T06:56:09Z"
    },
    "message": "CC_FOR_TARGET et al\n\nThe top level Makefile, the ld Makefile and others, define\nCC_FOR_TARGET to be a compiler for the binutils target machine.  This\nis the compiler that should be used for almost all tests with C\nsource.  There are _FOR_TARGET versions of CFLAGS, CXX, and CXXFLAGS\ntoo.  This was all supposed to work with the testsuite .exp files\nusing CC for the target compiler, and CC_FOR_HOST for the host\ncompiler, with the makefiles passing CC=$CC_FOR_TARGET and\nCC_FOR_HOST=$CC to the runtest invocation.\n\nOne exception to the rule of using CC_FOR_TARGET is the native-only ld\nbootstrap test, which uses the newly built ld to link a copy of\nitself.  Since the files being linked were created with the host\ncompiler, the boostrap test should use CC and CFLAGS, in case some\nhost compiler option provides needed libraries automatically.\nHowever, bootstrap.exp used CC where it should have used CC_FOR_HOST.\nI set about fixing that problem, then decided that playing games in\nthe makefiles with CC was a bad idea.  Not only is it confusing, but\nother dejagnu code knows about CC_FOR_TARGET.  See dejagnu/target.exp.\n\nSo this patch gets rid of the makefile variable renaming and changes\nall the .exp files to use the correct _FOR_TARGET variables.\nCC_FOR_HOST and CFLAGS_FOR_HOST disappear.  A followup patch will\ncorrect bootstrap.exp to use CFLAGS, and a number of other things I\nnoticed.\n\nbinutils/\n\t* testsuite/lib/binutils-common.exp (run_dump_test): Use\n\tCC_FOR_TARGET and CFLAGS_FOR_TARGET rather than CC and CFLAGS.\nld/\n\t* Makefile.am (check-DEJAGNU): Don't set CC to CC_FOR_TARGET\n\tand similar.  Pass variables with unchanged names.  Don't set\n\tCC_FOR_HOST or CFLAGS_FOR_HOST.\n\t* Makefile.in: Regenerate.\n\t* testsuite/config/default.exp: Update default CC and similar.\n\t(compiler_supports, plug_opt): Use CC_FOR_TARGET.\n\t* testsuite/ld-cdtest/cdtest.exp: Replace all uses of CC with\n\tCC_FOR_TARGET, and similarly for CFLAGS, CXX and CXXFLAGS.\n\t* testsuite/ld-auto-import/auto-import.exp: Likewise.\n\t* testsuite/ld-cygwin/exe-export.exp: Likewise.\n\t* testsuite/ld-elf/dwarf.exp: Likewise.\n\t* testsuite/ld-elf/indirect.exp: Likewise.\n\t* testsuite/ld-elf/shared.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-ifunc/ifunc.exp: Likewise.\n\t* testsuite/ld-mn10300/mn10300.exp: Likewise.\n\t* testsuite/ld-pe/pe-compile.exp: Likewise.\n\t* testsuite/ld-pe/pe-run.exp: Likewise.\n\t* testsuite/ld-pe/pe-run2.exp: Likewise.\n\t* testsuite/ld-pie/pie.exp: Likewise.\n\t* testsuite/ld-plugin/lto.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-scripts/crossref.exp: Likewise.\n\t* testsuite/ld-selective/selective.exp: Likewise.\n\t* testsuite/ld-sh/sh.exp: Likewise.\n\t* testsuite/ld-shared/shared.exp: Likewise.\n\t* testsuite/ld-srec/srec.exp: Likewise.\n\t* testsuite/ld-undefined/undefined.exp: Likewise.\n\t* testsuite/ld-unique/unique.exp: Likewise.\n\t* testsuite/ld-x86-64/tls.exp: Likewise.\n\t* testsuite/lib/ld-lib.exp: Likewise.\nlibctf/\n\t* Makefile.am (check-DEJAGNU): Don't set CC to CC_FOR_TARGET.\n\tPass CC and CC_FOR_TARGET.  Don't set CC_FOR_HOST.\n\t* Makefile.in: Regenerate.\n\t* testsuite/config/default.exp: Update default CC and similar.\n\t* testsuite/lib/ctf-lib.exp (run_native_host_cmd): Use CC rather\n\tthan CC_FOR_HOST.\n\t(run_lookup_test): Use CC_FOR_TARGET and CFLAGS_FOR_TARGET.",
    "tree": {
      "sha": "9ef22e47b0711ae8e490471b38c548fab649e9ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9ef22e47b0711ae8e490471b38c548fab649e9ff"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ad77db1c02a92c912f9719f32e2452890aa738ad",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad77db1c02a92c912f9719f32e2452890aa738ad",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ad77db1c02a92c912f9719f32e2452890aa738ad",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad77db1c02a92c912f9719f32e2452890aa738ad/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2ea9d33a127c09d9c4df0337981e48fb4b7a236f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2ea9d33a127c09d9c4df0337981e48fb4b7a236f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2ea9d33a127c09d9c4df0337981e48fb4b7a236f"
    }
  ],
  "stats": {
    "total": 693,
    "additions": 353,
    "deletions": 340
  },
  "files": [
    {
      "sha": "759f7c798c0ad3a93b3b76d6a02047a7e3921182",
      "filename": "binutils/testsuite/lib/binutils-common.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/binutils/testsuite/lib/binutils-common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/binutils/testsuite/lib/binutils-common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/lib/binutils-common.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -851,9 +851,9 @@ if ![string length [info proc prune_warnings]] {\n # regexps in FILE.d.\n #\n proc run_dump_test { name {extra_options {}} } {\n-    global ADDR2LINE ADDR2LINEFLAGS AS ASFLAGS CC CFLAGS ELFEDIT ELFEDITFLAGS\n-    global LD LDFLAGS NM NMFLAGS OBJCOPY OBJCOPYFLAGS OBJDUMP OBJDUMPFLAGS\n-    global READELF READELFFLAGS STRIP STRIPFLAGS\n+    global ADDR2LINE ADDR2LINEFLAGS AS ASFLAGS CC_FOR_TARGET CFLAGS_FOR_TARGET\n+    global ELFEDIT ELFEDITFLAGS LD LDFLAGS NM NMFLAGS OBJCOPY OBJCOPYFLAGS\n+    global OBJDUMP OBJDUMPFLAGS READELF READELFFLAGS STRIP STRIPFLAGS\n     global copyfile env runtests srcdir subdir verbose\n \n     if [string match \"*/*\" $name] {\n@@ -1159,7 +1159,7 @@ proc run_dump_test { name {extra_options {}} } {\n \t    # ofile is never absolute, so this always works to protect sfile\n \t    # from later absolutization.\n \t    set sfile \"./[file rootname $ofile].s\"\n-\t    set cmd \"$CC $CFLAGS -S $opts(cc) -o $sfile $cfile\"\n+\t    set cmd \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -S $opts(cc) -o $sfile $cfile\"\n \t    send_log \"$cmd\\n\"\n \t    set cmdret [remote_exec host [concat sh -c [list \"$cmd 2>&1\"]] \"\" \"/dev/null\" \"dump.tmp\"]\n \t    remote_upload host \"dump.tmp\""
    },
    {
      "sha": "0345f846ca0aadc44d4ee4247bad313924515801",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -980,9 +980,12 @@ check-DEJAGNU: site.exp\n \truntest=$(RUNTEST); \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n-\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS_FOR_TARGET)\" \\\n-\t\tCXX=\"$(CXX_FOR_TARGET)\" CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" CFLAGS_FOR_HOST=\"$(CFLAGS)\" \\\n+\t\tCC=\"$(CC)\" CFLAGS=\"$(CFLAGS)\" \\\n+\t\tCXX=\"$(CXX)\" CXXFLAGS=\"$(CXXFLAGS)\" \\\n+\t\tCC_FOR_TARGET=\"$(CC_FOR_TARGET)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXX_FOR_TARGET=\"$(CXX_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tOFILES=\"$(OFILES)\" BFDLIB=\"$(TESTBFDLIB)\" CTFLIB=\"$(TESTCTFLIB) $(ZLIB)\" \\\n \t\tLIBIBERTY=\"$(LIBIBERTY) $(LIBINTL)\" LIBS=\"$(LIBS)\" \\\n \t\tDO_COMPARE=\"`echo '$(do_compare)' | sed -e 's,\\\\$$,,g'`\" \\"
    },
    {
      "sha": "366d03489dfda9df1f77587b2df36b65bbb681f8",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -2625,9 +2625,12 @@ check-DEJAGNU: site.exp\n \truntest=$(RUNTEST); \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n-\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS_FOR_TARGET)\" \\\n-\t\tCXX=\"$(CXX_FOR_TARGET)\" CXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" CFLAGS_FOR_HOST=\"$(CFLAGS)\" \\\n+\t\tCC=\"$(CC)\" CFLAGS=\"$(CFLAGS)\" \\\n+\t\tCXX=\"$(CXX)\" CXXFLAGS=\"$(CXXFLAGS)\" \\\n+\t\tCC_FOR_TARGET=\"$(CC_FOR_TARGET)\" \\\n+\t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n+\t\tCXX_FOR_TARGET=\"$(CXX_FOR_TARGET)\" \\\n+\t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tOFILES=\"$(OFILES)\" BFDLIB=\"$(TESTBFDLIB)\" CTFLIB=\"$(TESTCTFLIB) $(ZLIB)\" \\\n \t\tLIBIBERTY=\"$(LIBIBERTY) $(LIBINTL)\" LIBS=\"$(LIBS)\" \\\n \t\tDO_COMPARE=\"`echo '$(do_compare)' | sed -e 's,\\\\$$,,g'`\" \\"
    },
    {
      "sha": "8507a1f0208f35d1d62af26bfb233a0452c5577d",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 15,
      "deletions": 12,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -76,20 +76,23 @@ if {[file exists tmpdir/libpath.exp]} {\n     }\n }\n \n-# The \"make check\" target in the Makefile passes in\n-# \"CC=$(CC_FOR_TARGET)\".  But, if the user invokes runtest directly\n-# (as when testing an installed linker), these flags may not be set.  \n if {![info exists CC]} {\n-    set CC [find_gcc]\n+    set CC gcc\n }\n if {![info exists CFLAGS]} {\n     set CFLAGS \"-g -O2\"\n }\n-if {![info exists CXX]} {\n-    set CXX [find_g++]\n+if {![info exists CC_FOR_TARGET]} {\n+    set CC_FOR_TARGET [find_gcc]\n }\n-if {![info exists CXXFLAGS]} {\n-    set CXXFLAGS \"\"\n+if {![info exists CFLAGS_FOR_TARGET]} {\n+    set CFLAGS_FOR_TARGET \"-g -O2\"\n+}\n+if {![info exists CXX_FOR_TARGET]} {\n+    set CXX_FOR_TARGET [find_g++]\n+}\n+if {![info exists CXXFLAGS_FOR_TARGET]} {\n+    set CXXFLAGS_FOR_TARGET \"\"\n }\n \n # This allows us to run the linker testsuite with clang as the compilation\n@@ -324,7 +327,7 @@ if { ![info exists LD_CLASS] } then {\n # Compiler tests\n proc compiler_supports { flag args } {\n     if { [check_compiler_available] } {\n-\tglobal CC\n+\tglobal CC_FOR_TARGET\n \tset flags \"\"\n \tif [board_info [target_info name] exists cflags] {\n \t    append flags \" [board_info [target_info name] cflags]\"\n@@ -341,7 +344,7 @@ proc compiler_supports { flag args } {\n \t}\n \tclose $f\n \tset rfn [remote_download host $fn]\n-\tset avail [run_host_cmd_yesno \"$CC\" \"$flags $flag $rfn -o /dev/null\"]\n+\tset avail [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $flag $rfn -o /dev/null\"]\n \tremote_file host delete $rfn\n \tfile delete $fn\n \treturn $avail\n@@ -442,9 +445,9 @@ if { [check_compiler_available] } {\n \tcyglto_plugin-0.dll\n     }\n     foreach plug $plugin_names {\n-\tset plug_so [run_host_cmd $CC \"--print-prog-name $plug\"]\n+\tset plug_so [run_host_cmd $CC_FOR_TARGET \"--print-prog-name $plug\"]\n \tif { $plug_so eq $plug } then {\n-\t    set plug_so [run_host_cmd $CC \"--print-file-name $plug\"]\n+\t    set plug_so [run_host_cmd $CC_FOR_TARGET \"--print-file-name $plug\"]\n \t}\n \tif { $plug_so ne $plug } then {\n \t    set plug_opt \"--plugin $plug_so\""
    },
    {
      "sha": "74e8db293ae507208946fd36d42665e30133e6e4",
      "filename": "ld/testsuite/ld-auto-import/auto-import.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-auto-import/auto-import.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-auto-import/auto-import.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-auto-import/auto-import.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -118,7 +118,7 @@ if [istarget *-pc-cygwin] {\n     set MYLIBS \"-L/usr/lib -lcygwin -L/usr/lib/w32api -lkernel32\"\n     \n     # Compile the dll.\n-    if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/dll.c $tmpdir/dll.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/dll.c $tmpdir/dll.o] {\n \tfail \"compiling shared lib\"\n     }\n     if ![ld_special_link \"$ld -shared --enable-auto-import -e __cygwin_dll_entry@12 --out-implib=$tmpdir/libstandard.dll.a\" $tmpdir/dll.dll \"$tmpdir/dll.o $MYLIBS\"] {\n@@ -129,7 +129,7 @@ if [istarget *-pc-cygwin] {\n     catch \"exec ln -fs dll.dll $tmpdir/libsymlinked_dll.dll.a\" ln_catch\n \n     # Compile and link the client program.\n-    if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/client.c $tmpdir/client.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/client.c $tmpdir/client.o] {\n         fail \"compiling client\"\n     }\n "
    },
    {
      "sha": "50f6ff1e40b1f29a3f638b0000bf7449223cc3e0",
      "filename": "ld/testsuite/ld-cdtest/cdtest.exp",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-cdtest/cdtest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-cdtest/cdtest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cdtest/cdtest.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -32,23 +32,23 @@ if ![isnative] {\n     return\n }\n \n-if { [which $CXX] == 0 } {\n+if { [which $CXX_FOR_TARGET] == 0 } {\n     untested $test1\n     untested $test2\n     return\n }\n \n-if {   ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-foo.cc tmpdir/cdtest-foo.o]\n-    || ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-bar.cc tmpdir/cdtest-bar.o]\n-    || ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/cdtest-main.cc tmpdir/cdtest-main.o] } {\n+if {   ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/cdtest-foo.cc tmpdir/cdtest-foo.o]\n+    || ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/cdtest-bar.cc tmpdir/cdtest-bar.o]\n+    || ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/cdtest-main.cc tmpdir/cdtest-main.o] } {\n     unsupported $test1\n     unsupported $test2\n     return\n }\n \n set expected_output \"$srcdir/$subdir/cdtest.dat\"\n \n-if ![ld_link $CC tmpdir/cdtest {tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o}] {\n+if ![ld_link $CC_FOR_TARGET tmpdir/cdtest {tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o}] {\n     fail $test1\n } else {\n     send_log   \"tmpdir/cdtest >tmpdir/cdtest.out\\n\"\n@@ -100,7 +100,7 @@ if [is_pecoff_format] {\n if ![ld_relocate $ld tmpdir/cdtest.o {-Ur tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o}] {\n     fail $test2\n } else {\n-    if ![ld_link $CC tmpdir/cdtest tmpdir/cdtest.o] {\n+    if ![ld_link $CC_FOR_TARGET tmpdir/cdtest tmpdir/cdtest.o] {\n \tfail $test2\n     } else {\n \tsend_log   \"tmpdir/cdtest >tmpdir/cdtest.out\\n\""
    },
    {
      "sha": "1e5b93c51ceec744f38a628bb82f415bb3465b84",
      "filename": "ld/testsuite/ld-cygwin/exe-export.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-cygwin/exe-export.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-cygwin/exe-export.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cygwin/exe-export.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -113,23 +113,23 @@ if ![run_dlltool $tmpdir/testdll.lib $srcdir/$subdir/testdll.def] {\n } \r\n \r\n # Compile the executable.\r\n-if ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/testexe.c $tmpdir/testexe.o] {\r\n+if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/testexe.c $tmpdir/testexe.o] {\r\n     fail \"compiling executable\"\r\n     return\r\n }\r\n \r\n-if ![ld_special_link \"$CC $LDFLAGS $MYLDFLAGS -e _testexe_main@16\" $tmpdir/testexe.exe \"$tmpdir/testexe.o $srcdir/$subdir/testexe.def $tmpdir/testdll.lib -lkernel32\"] {\r\n+if ![ld_special_link \"$CC_FOR_TARGET $LDFLAGS $MYLDFLAGS -e _testexe_main@16\" $tmpdir/testexe.exe \"$tmpdir/testexe.o $srcdir/$subdir/testexe.def $tmpdir/testdll.lib -lkernel32\"] {\r\n     fail \"linking executable\"\r\n     return\r\n } \r\n \r\n # Compile the dll.\r\n-if ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/testdll.c $tmpdir/testdll.o] {\r\n+if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/testdll.c $tmpdir/testdll.o] {\r\n     fail \"compiling shared lib\"\r\n     return\r\n }\r\n \r\n-if ![ld_special_link \"$CC $LDFLAGS -nostartfiles -nostdlib -e _testdll_main@12\" $tmpdir/testdll.dll \"$tmpdir/testdll.o $srcdir/$subdir/testdll.def $tmpdir/testexe.lib\"] {\r\n+if ![ld_special_link \"$CC_FOR_TARGET $LDFLAGS -nostartfiles -nostdlib -e _testdll_main@12\" $tmpdir/testdll.dll \"$tmpdir/testdll.o $srcdir/$subdir/testdll.def $tmpdir/testexe.lib\"] {\r\n     fail \"linking shared lib\"\r\n     return\r\n } \r"
    },
    {
      "sha": "61973ac82f7d102356f8c2a6d76faed4e888ef4b",
      "filename": "ld/testsuite/ld-elf/dwarf.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/dwarf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/dwarf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/dwarf.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -41,7 +41,7 @@ if { ![check_compiler_available] } {\n }\n \n # Skip if -feliminate-dwarf2-dups isn't supported.\n-if ![ld_compile \"$CC -g -feliminate-dwarf2-dups\" $srcdir/$subdir/dummy.c tmpdir/dummy.o] {\n+if ![ld_compile \"$CC_FOR_TARGET -g -feliminate-dwarf2-dups\" $srcdir/$subdir/dummy.c tmpdir/dummy.o] {\n     return\n }\n \n@@ -69,11 +69,11 @@ set run_tests {\n }\n \n # Disable all sanitizers.\n-set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANITIZE_CFLAGS\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $NOSANITIZE_CFLAGS\"\n run_cc_link_tests $build_tests\n run_ld_link_exec_tests $run_tests\n-set CFLAGS \"$old_CFLAGS\"\n+set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n \n proc strip_test {} {\n     global ld"
    },
    {
      "sha": "c1bf23a575b28979659d1cc8c641d9ca1ce28e23",
      "filename": "ld/testsuite/ld-elf/indirect.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/indirect.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/indirect.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/indirect.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -38,7 +38,7 @@ if { ![check_compiler_available] } {\n }\n \n # Some bare-metal targets don't support shared libs or PIC.\n-if { ![run_host_cmd_yesno $CC \"-shared -fPIC $srcdir/$subdir/dummy.c -o tmpdir/t.so\"] } {\n+if { ![run_host_cmd_yesno $CC_FOR_TARGET \"-shared -fPIC $srcdir/$subdir/dummy.c -o tmpdir/t.so\"] } {\n     return\n }\n \n@@ -59,7 +59,7 @@ proc check_link_message { cmd string testname } {\n }\n \n # Disable LTO for these tests.\n-set cc_cmd \"$CC\"\n+set cc_cmd \"$CC_FOR_TARGET\"\n if {[check_lto_available]} {\n    append cc_cmd \" -fno-lto\"\n }\n@@ -226,8 +226,8 @@ foreach t [list indirect5a indirect5b indirect6a indirect6b] {\n     }\n }\n \n-send_log \"$CC -fPIE -pie $srcdir/$subdir/main.c -o tmpdir/pie\"\n-catch \"exec $CC -fPIE -pie $srcdir/$subdir/main.c -o tmpdir/pie\" exec_output\n+send_log \"$CC_FOR_TARGET -fPIE -pie $srcdir/$subdir/main.c -o tmpdir/pie\"\n+catch \"exec $CC_FOR_TARGET -fPIE -pie $srcdir/$subdir/main.c -o tmpdir/pie\" exec_output\n send_log \"$exec_output\"\n if { ! [string match \"\" $exec_output] } {\n     return"
    },
    {
      "sha": "9224782d234d14dbfab553c232cf5ae9bea864b9",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -1180,44 +1180,44 @@ if [check_libdl_available] {\n   # XFAIL on NetBSD ELF systems as they do not currently support the .*_array\n   # sections.\n   # Disable all sanitizers.\n-  set old_CFLAGS \"$CFLAGS\"\n-  append CFLAGS \" $NOSANITIZE_CFLAGS\"\n+  set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+  append CFLAGS_FOR_TARGET \" $NOSANITIZE_CFLAGS\"\n   run_ld_link_exec_tests $dlopen_run_tests \"*-*-netbsd*\"\n-  set CFLAGS \"$old_CFLAGS\"\n+  set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n }\n \n # Check --no-add-needed and --no-copy-dt-needed-entries\n set testname \"--no-add-needed\"\n-set exec_output [run_host_cmd \"$CC\" \"tmpdir/libneeded1c.o -Wl,--no-add-needed,-rpath-link=tmpdir -Ltmpdir -lneeded1a\"]\n+set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"tmpdir/libneeded1c.o -Wl,--no-add-needed,-rpath-link=tmpdir -Ltmpdir -lneeded1a\"]\n if { [ regexp \"tmpdir/libneeded1b.so: .*: DSO missing\" $exec_output ] } {\n     pass $testname\n } {\n     fail $testname\n }\n set testname \"--no-copy-dt-needed-entries\"\n-set exec_output [run_host_cmd \"$CC\" \"tmpdir/libneeded1c.o -Wl,--no-copy-dt-needed-entries,-rpath-link=tmpdir -Ltmpdir -lneeded1a\"]\n+set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"tmpdir/libneeded1c.o -Wl,--no-copy-dt-needed-entries,-rpath-link=tmpdir -Ltmpdir -lneeded1a\"]\n if { [ regexp \"tmpdir/libneeded1b.so: .*: DSO missing\" $exec_output ] } {\n     pass $testname\n } {\n     fail $testname\n }\n set testname \"--no-add-needed -shared\"\n-set exec_output [run_host_cmd \"$CC\" \"-shared tmpdir/libneeded1pic.o -Wl,--no-add-needed,-z,defs -Ltmpdir -lneeded1a\"]\n+set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-shared tmpdir/libneeded1pic.o -Wl,--no-add-needed,-z,defs -Ltmpdir -lneeded1a\"]\n if { [ regexp \"undefined reference to `\\.?bar'\" $exec_output ] } {\n     pass $testname\n } {\n     fail $testname\n }\n set testname \"--no-copy-dt-needed-entries -shared\"\n-set exec_output [run_host_cmd \"$CC\" \"-shared tmpdir/libneeded1pic.o -Wl,--no-copy-dt-needed-entries,-z,defs -Ltmpdir -lneeded1a\"]\n+set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-shared tmpdir/libneeded1pic.o -Wl,--no-copy-dt-needed-entries,-z,defs -Ltmpdir -lneeded1a\"]\n if { [ regexp \"undefined reference to `\\.?bar'\" $exec_output ] } {\n     pass $testname\n } {\n     fail $testname\n }\n \n # Check to see if the C++ compiler works\n-if { [which $CXX] == 0 } {\n+if { [which $CXX_FOR_TARGET] == 0 } {\n     return\n }\n "
    },
    {
      "sha": "b74910440aea9f04db092797d737ad05467fcc5b",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -164,14 +164,14 @@ proc stt_common_test { options testname } {\n }\n \n if [istarget nios2*-*-*] {\n-    set CFLAGS \"$CFLAGS -G0\"\n+    append CFLAGS_FOR_TARGET \" -G0\"\n }\n \n # Explicitly use \"-fcommon\" so that even if $CFLAGS includes\n # \"-fno-common\", these tests are compiled as expected.\n-if {   ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n-    || ![ld_compile \"$CC $CFLAGS -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n-    || ![ld_compile \"$CC $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n+if {   ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n+    || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n+    || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n     unsupported $test1\n     return\n }"
    },
    {
      "sha": "b97da8014e9a90764ac9976f77d08cfcfb7a3712",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -73,9 +73,9 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n     # Unfortunately, the gcc argument is -fpic and the cc argument is\n     # -KPIC.  We have to try both.\n     set picflag \"-fpic\"\n-    send_log \"$CC $picflag\\n\"\n-    verbose \"$CC $picflag\"\n-    catch \"exec $CC $picflag\" exec_output\n+    send_log \"$CC_FOR_TARGET $picflag\\n\"\n+    verbose \"$CC_FOR_TARGET $picflag\"\n+    catch \"exec $CC_FOR_TARGET $picflag\" exec_output\n     send_log \"$exec_output\\n\"\n     verbose \"--\" \"$exec_output\"\n     if { [string match \"*illegal option*\" $exec_output]\n@@ -486,13 +486,13 @@ proc build_binary { shared pic test source libname other mapfile verexp versymex\n     global as\n     global as_options\n     global objdump\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global script\n     global NOSANITIZE_CFLAGS\n     global NOLTO_CFLAGS\n \n-    if ![ld_compile \"$CC -S $pic $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $pic $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -578,8 +578,8 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n     global as\n     global as_options\n     global objdump\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global script\n \n     if [string match \"\" $other] then {\n@@ -588,7 +588,7 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n \tset other_lib $tmpdir/$other\n     }\n \n-    if ![ld_compile \"$CC -S $flag $CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $flag $CFLAGS_FOR_TARGET\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -606,7 +606,7 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n \tset script_arg \"-Wl,$script $srcdir/$subdir/$mapfile\"\n     }\n \n-    if {![ld_link $CC $tmpdir/$execname \"$tmpdir/$execname.o $other_lib $script_arg\"]}     {\n+    if {![ld_link $CC_FOR_TARGET $tmpdir/$execname \"$tmpdir/$execname.o $other_lib $script_arg\"]}     {\n \tpass \"$test\"\n \treturn\n     }\n@@ -618,11 +618,11 @@ proc test_asfail { test flag source execname whyfail } {\n     global subdir\n     global tmpdir\n     global as\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global NOLTO_CFLAGS\n \n-    if ![ld_compile \"$CC -S $flag $CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $flag $CFLAGS_FOR_TARGET $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -688,16 +688,16 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     global as\n     global as_options\n     global objdump\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global NOSANITIZE_CFLAGS\n     global NOLTO_CFLAGS\n \n     set shared \"--shared --no-undefined-version\"\n     set script --version-script\n \n     # Disable LTO for these tests.\n-    set cc_cmd \"$CC -S $CFLAGS\"\n+    set cc_cmd \"$CC_FOR_TARGET -S $CFLAGS_FOR_TARGET\"\n     if {[check_lto_available]} {\n \tappend cc_cmd \" -fno-lto\"\n     }\n@@ -721,7 +721,7 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n \tset solibname_lib $tmpdir/$solibname\n     }\n \n-    if {![ld_link $CC $tmpdir/$execname \"$flags $tmpdir/$execname.o $solibname_lib\"]}     {\n+    if {![ld_link $CC_FOR_TARGET $tmpdir/$execname \"$flags $tmpdir/$execname.o $solibname_lib\"]}     {\n \tfail \"$test\"\n \treturn\n     }"
    },
    {
      "sha": "3c0826161cb222528ec211c6486ccf1cd3239596",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -76,7 +76,7 @@ if [istarget arm*-*-linux*] {\n \tset file [open $tmpdir/movw-detect.c w]\n \tputs $file \"void foo(void) { __asm (\\\"movw r0, #0\\\"); }\"\n \tclose $file\n-\tif [run_host_cmd_yesno \"$CC\" \"$CFLAGS -c $tmpdir/movw-detect.c -o $tmpdir/movw-detect.o\"] {\n+\tif [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$CFLAGS_FOR_TARGET -c $tmpdir/movw-detect.c -o $tmpdir/movw-detect.o\"] {\n \t    set shared_needs_pic \"yes\"\n \t}\n     }\n@@ -87,16 +87,16 @@ set support_protected \"no\"\n if { [istarget *-*-linux*]\n      || [istarget *-*-nacl*]\n      || [istarget *-*-gnu*] } {\n-    if [ld_compile \"$CC -g $CFLAGS -DPROTECTED_CHECK\" $srcdir/$subdir/main.c $tmpdir/main.o] {\n-      if [ld_link $CC $tmpdir/main \"$tmpdir/main.o\"] {\n+    if [ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET -DPROTECTED_CHECK\" $srcdir/$subdir/main.c $tmpdir/main.o] {\n+      if [ld_link $CC_FOR_TARGET $tmpdir/main \"$tmpdir/main.o\"] {\n \tcatch \"exec $tmpdir/main\" support_protected\n       }\n     }\n }\n \n # The test procedure.\n proc visibility_test { visibility progname testname main sh1 sh2 dat args } {\n-    global CC\n+    global CC_FOR_TARGET\n     global srcdir\n     global subdir\n     global exec_output\n@@ -111,7 +111,7 @@ proc visibility_test { visibility progname testname main sh1 sh2 dat args } {\n     if { [is_elf_format] && [check_shared_lib_support] } {\n \tappend shared \" -Wl,-z,notext\"\n     }\n-    if {![ld_link $CC $tmpdir/$progname.so \"$shared $shldflags $tmpdir/$sh1 $tmpdir/$sh2\"]} {\n+    if {![ld_link $CC_FOR_TARGET $tmpdir/$progname.so \"$shared $shldflags $tmpdir/$sh1 $tmpdir/$sh2\"]} {\n \tif { [ string match $visibility \"hidden_undef\" ]\n \t     && [regexp \"undefined reference to \\`\\.?visibility\\'\" $link_output]\n \t     && [regexp \"undefined reference to \\`visibility_var\\'\" $link_output] } {\n@@ -129,7 +129,7 @@ proc visibility_test { visibility progname testname main sh1 sh2 dat args } {\n     # Link against the shared library.  Use -rpath so that the\n     # dynamic linker can locate the shared library at runtime.\n     set rpath $tmpdir\n-    if ![ld_link $CC $tmpdir/$progname \"-Wl,-rpath,$rpath $tmpdir/$main $tmpdir/$progname.so\"] {\n+    if ![ld_link $CC_FOR_TARGET $tmpdir/$progname \"-Wl,-rpath,$rpath $tmpdir/$main $tmpdir/$progname.so\"] {\n \tif { [ string match $visibility \"hidden\" ]\n \t     && [regexp \"undefined reference to \\`\\.?visibility\\'\" $link_output]\n \t     && [regexp \"undefined reference to \\`visibility_var\\'\" $link_output] } {\n@@ -184,8 +184,8 @@ proc visibility_test { visibility progname testname main sh1 sh2 dat args } {\n }\n \n proc visibility_run {visibility} {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global SHCFLAG\n     global srcdir\n     global subdir\n@@ -237,7 +237,7 @@ proc visibility_run {visibility} {\n     } else {\n     # Compile the main program.  Make sure that PLT is used since PLT\n     # is expected.\n-    if ![ld_compile \"$CC -g $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET -g $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n \tunsupported \"visibility ($visibility) (non PIC)\"\n \tunsupported \"visibility ($visibility)\"\n     } else {\n@@ -247,8 +247,8 @@ proc visibility_run {visibility} {\n \t# will need to do more relocation work.  However, note that not\n \t# using -fpic will cause some of the tests to return different\n \t# results.  Make sure that PLT is used since PLT is expected.\n-\tif { ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n-\t     || ![ld_compile \"$CC -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n+\tif { ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n+\t     || ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n \t    unsupported \"visibility ($visibility) (non PIC)\"\n \t} else {\n \t    # SunOS non PIC shared libraries don't permit some cases of\n@@ -336,8 +336,8 @@ proc visibility_run {visibility} {\n \n \t# Now compile the code using -fpic.\n \n-\tif { ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n-\t    || ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n+\tif { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n+\t    || ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n \t    unsupported \"visibility ($visibility)\"\n \t} else {\n \t    if { [ string match $visibility \"protected\" ]\n@@ -354,7 +354,7 @@ proc visibility_run {visibility} {\n \t# Don't bother.\n     } else {\n     # Now do the same tests again, but this time compile main.c PIC.\n-    if ![ld_compile \"$CC -g $CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n \tunsupported \"visibility ($visibility) (PIC main, non PIC so)\"\n \tunsupported \"visibility ($visibility) (PIC main)\"\n     } else {\n@@ -421,9 +421,9 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n     # Unfortunately, the gcc argument is -fpic and the cc argument is\n     # -KPIC.  We have to try both.\n     set picflag \"-fpic\"\n-    send_log \"$CC $picflag\\n\"\n-    verbose \"$CC $picflag\"\n-    catch \"exec $CC $picflag\" exec_output\n+    send_log \"$CC_FOR_TARGET $picflag\\n\"\n+    verbose \"$CC_FOR_TARGET $picflag\"\n+    catch \"exec $CC_FOR_TARGET $picflag\" exec_output\n     send_log \"$exec_output\\n\"\n     verbose \"--\" \"$exec_output\"\n     if { [string match \"*illegal option*\" $exec_output] \\\n@@ -446,7 +446,7 @@ visibility_run protected_undef_def\n visibility_run protected_weak\n visibility_run normal\n \n-if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n     unsupported \"common hidden symbol\"\n } else {\n     if ![ld_link $ld tmpdir/common \"tmpdir/common.o\"] {\n@@ -456,10 +456,10 @@ if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$sub\n     }\n }\n \n-if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n     unsupported \"weak hidden symbol\"\n } else {\n-   if { ![ld_compile \"$CC -g $CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n+   if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n \tunsupported \"weak hidden symbol\"\n     } else {\n \tif ![ld_link $ld tmpdir/sh3.so \"-shared tmpdir/sh3.o\"] {"
    },
    {
      "sha": "762b214ab686dbb68ca418c58ccf1f4d66471264",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 28,
      "deletions": 28,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -261,7 +261,7 @@ proc objdump_dynsymstuff { objdump object expectfile } {\n }\n \n proc build_lib {test libname objs dynsymexp} {\n-    global CC\n+    global CC_FOR_TARGET\n     global objdump\n     global tmpdir\n     global shared\n@@ -275,7 +275,7 @@ proc build_lib {test libname objs dynsymexp} {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $tmpdir/$libname.so \"$shared $files\"]} {\n+    if {![ld_link \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $tmpdir/$libname.so \"$shared $files\"]} {\n \tfail $test\n \treturn\n     }\n@@ -289,7 +289,7 @@ proc build_lib {test libname objs dynsymexp} {\n }\n \n proc build_exec { test execname objs flags dat dynsymexp symexp} {\n-    global CC\n+    global CC_FOR_TARGET\n     global objdump\n     global tmpdir\n     global srcdir\n@@ -303,7 +303,7 @@ proc build_exec { test execname objs flags dat dynsymexp symexp} {\n       set files \"$files $tmpdir/$obj\"\n     }\n \n-    if {![ld_link $CC $tmpdir/$execname \"$flags $NOSANITIZE_CFLAGS $NOLTO_CFLAGS $files\"]} {\n+    if {![ld_link $CC_FOR_TARGET $tmpdir/$execname \"$flags $NOSANITIZE_CFLAGS $NOLTO_CFLAGS $files\"]} {\n \tfail \"$test\"\n \treturn\n     }\n@@ -353,14 +353,14 @@ proc build_exec { test execname objs flags dat dynsymexp symexp} {\n }\n \n # Disable LTO for these tests.\n-set cc_cmd \"$CC\"\n+set cc_cmd \"$CC_FOR_TARGET\"\n if {[check_lto_available]} {\n    append cc_cmd \" -fno-lto\"\n }\n \n # Disable all sanitizers and LTO.\n-set saved_CFLAGS \"$CFLAGS\"\n-set CFLAGS \"$CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+set saved_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n \n # Old version of GCC for MIPS default to enabling -fpic\n # and get confused if it is used on the command line.\n@@ -370,9 +370,9 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n     # Unfortunately, the gcc argument is -fpic and the cc argument is\n     # -KPIC.  We have to try both.\n     set picflag \"-fpic\"\n-    send_log \"$CC $picflag\\n\"\n-    verbose \"$CC $picflag\"\n-    catch \"exec $CC $picflag\" exec_output\n+    send_log \"$CC_FOR_TARGET $picflag\\n\"\n+    verbose \"$CC_FOR_TARGET $picflag\"\n+    catch \"exec $CC_FOR_TARGET $picflag\" exec_output\n     send_log \"$exec_output\\n\"\n     verbose \"--\" \"$exec_output\"\n     if { [string match \"*illegal option*\" $exec_output]\n@@ -384,16 +384,16 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n }\n verbose \"Using $picflag to compile PIC code\"\n \n-if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/main.c $tmpdir/main.o]\n+if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/main.c $tmpdir/main.o]\n     || ![ld_link $cc_cmd $tmpdir/libbar.so \"$shared $tmpdir/bar.o\"]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n     unsupported \"ELF weak\"\n } elseif {![ld_link $cc_cmd $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n \t  || ![ld_link $cc_cmd $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n@@ -424,10 +424,10 @@ if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n     build_exec \"ELF weak data last DSO common\" foo \"libfoo1b.so main1.o libbar1a.so\" \"-Wl,--no-as-needed,-rpath,.,-rpath-link,.\" weakdata weakdata.dsym \"\"\n }\n \n-if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n+if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n     unsupported \"ELF weak (size)\"\n } else {\n     build_lib \"ELF DSO small bar (size)\" libsize_bar_s \"size_bar_s.o\" \"\"\n@@ -439,14 +439,14 @@ if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/s\n verbose \"size2\"\n run_dump_test $srcdir/$subdir/size2\n \n-if {![ld_compile \"$cc_cmd $CFLAGS $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n+if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n     || ![ld_link $cc_cmd $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n-    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n+    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n     unsupported \"ELF weak (alias)\"\n } else {\n     build_exec \"ELF weak (alias)\" alias \"aliasmain.o weakref1.o weakref2.o alias.so\" \"-Wl,-rpath=.,--no-as-needed\" alias \"\" \"\"\n }\n \n-set CFLAGS \"$saved_CFLAGS\"\n+set CFLAGS_FOR_TARGET \"$saved_CFLAGS\""
    },
    {
      "sha": "60491fe0f8082b1a38ecdca64c3cdd8911a7c949",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -37,7 +37,7 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] } {\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC -c $CFLAGS $cflags\" $srcdir/$subdir/gc.c $objfile\n+    ld_compile \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/gc.c $objfile\n }\n \n proc test_gc { testname filename linker ldflags} {\n@@ -144,9 +144,9 @@ if { [check_compiler_available] } {\n     if { [istarget \"*-*-linux*\"]\n \t || [istarget \"*-*-nacl*\"]\n \t || [istarget \"*-*-gnu*\"] } {\n-\tld_compile \"$CC -fPIC $CFLAGS $cflags\" $srcdir/$subdir/pr11218-1.c tmpdir/pr11218-1.o\n+\tld_compile \"$CC_FOR_TARGET -fPIC $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr11218-1.c tmpdir/pr11218-1.o\n \tld_link $ld tmpdir/pr11218-1.so \"-shared tmpdir/pr11218-1.o\"\n- \tld_compile \"$CC -c $CFLAGS $cflags\" $srcdir/$subdir/pr11218-2.c tmpdir/pr11218-2.o\n+\tld_compile \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr11218-2.c tmpdir/pr11218-2.o\n \trun_dump_test \"pr11218\"\n     }\n }\n@@ -157,18 +157,18 @@ if [is_pecoff_format] {\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC $CFLAGS $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n+    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n     run_dump_test \"pr13683\" $symdefs\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC $CFLAGS $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n+    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n     run_dump_test \"pr14265\" $symdefs\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n-    ld_compile \"$CC $CFLAGS $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n+    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n+    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n     if [istarget hppa*-*-linux*] {\n \tset symdefs {{ld {--defsym '\\$\\$dyncall=0'}}}\n     }"
    },
    {
      "sha": "e559884fd0e2e6f87315207d498cd1b95776bca0",
      "filename": "ld/testsuite/ld-ifunc/ifunc.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-ifunc/ifunc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-ifunc/ifunc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-ifunc/ifunc.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -182,7 +182,7 @@ proc contains_ifunc_reloc { binary_file } {\n set fails 0\n \n # Disable LTO for these tests.\n-set cc_cmd \"$CC\"\n+set cc_cmd \"$CC_FOR_TARGET\"\n if {[check_lto_available]} {\n    append cc_cmd \" -fno-lto\"\n }\n@@ -238,16 +238,16 @@ if { $fails != 0 } {\n     return\n }\n \n-if ![ld_link $CC \"tmpdir/dynamic_prog\" \"-Wl,--no-as-needed,-rpath=./tmpdir,-Bdynamic -Ltmpdir tmpdir/shared_prog.o -lshared_ifunc\"] {\n+if ![ld_link $CC_FOR_TARGET \"tmpdir/dynamic_prog\" \"-Wl,--no-as-needed,-rpath=./tmpdir,-Bdynamic -Ltmpdir tmpdir/shared_prog.o -lshared_ifunc\"] {\n     fail \"Could not link a dynamic executable\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_link $CC \"tmpdir/local_prog\" \"$NOPIE_LDFLAGS -Wl,--no-as-needed,-rpath=./tmpdir -Ltmpdir tmpdir/static_prog.o -lifunc\"] {\n+if ![ld_link $CC_FOR_TARGET \"tmpdir/local_prog\" \"$NOPIE_LDFLAGS -Wl,--no-as-needed,-rpath=./tmpdir -Ltmpdir tmpdir/static_prog.o -lifunc\"] {\n     fail \"Could not link a dynamic executable using local ifunc\"\n     set fails [expr $fails + 1]\n }\n if ![string match \"\" $STATIC_LDFLAGS] {\n-    if ![ld_link $CC \"tmpdir/static_prog\" \"-static -Ltmpdir tmpdir/static_prog.o -lifunc\"] {\n+    if ![ld_link $CC_FOR_TARGET \"tmpdir/static_prog\" \"-static -Ltmpdir tmpdir/static_prog.o -lifunc\"] {\n \tfail \"Could not link a static executable\"\n \tset fails [expr $fails + 1]\n     }\n@@ -256,7 +256,7 @@ if ![ld_link $ld \"tmpdir/static_nonifunc_prog\" \"-static tmpdir/empty.o\"] {\n     fail \"Could not link a non-ifunc using static executable\"\n     set fails [expr $fails + 1]\n }\n-if ![ld_link $CC \"tmpdir/test-1\" \"-Wl,--no-as-needed,-rpath=./tmpdir tmpdir/test-1.o tmpdir/libshared_ifunc.so\"] {\n+if ![ld_link $CC_FOR_TARGET \"tmpdir/test-1\" \"-Wl,--no-as-needed,-rpath=./tmpdir tmpdir/test-1.o tmpdir/libshared_ifunc.so\"] {\n     fail \"Could not link test-1\"\n     set fails [expr $fails + 1]\n }"
    },
    {
      "sha": "97f3fc7de9ef27cbb9be99183484710537022e0a",
      "filename": "ld/testsuite/ld-mn10300/mn10300.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-mn10300/mn10300.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-mn10300/mn10300.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-mn10300/mn10300.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -126,7 +126,7 @@ set am33_tests {\n run_ld_link_tests $am33_tests\n \n proc i126256-test { } {\n-    global CC\n+    global CC_FOR_TARGET\n     global ld\n     global srcdir\n     global subdir\n@@ -138,12 +138,12 @@ proc i126256-test { } {\n \treturn\n     }\n \n-    if { ![ld_compile \"$CC -mrelax -fPIC\" $srcdir/$subdir/i126256-1.c $tmpdir/i126256-1.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET -mrelax -fPIC\" $srcdir/$subdir/i126256-1.c $tmpdir/i126256-1.o] } {\n \tunsupported $testname\n \treturn\n     }\n \n-    if { ![ld_compile \"$CC -mrelax -fPIC\" $srcdir/$subdir/i126256-2.c $tmpdir/i126256-2.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET -mrelax -fPIC\" $srcdir/$subdir/i126256-2.c $tmpdir/i126256-2.o] } {\n \tunsupported $testname\n \treturn\n     }"
    },
    {
      "sha": "5282cfdb0a1075fbebd1604f9c8d2372ea84dd26",
      "filename": "ld/testsuite/ld-pe/pe-compile.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-compile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-compile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-compile.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -34,13 +34,13 @@ if { ![check_compiler_available] } {\n }\n \n proc build_basefile1_o {} {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n \n     # Compile the object file.\n-    if ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/basefile1.s tmpdir/basefile1.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/basefile1.s tmpdir/basefile1.o] {\n \tfail \"compiling basefile1 object\"\n     }\n }\n@@ -75,24 +75,24 @@ proc run_basefile_test { testname } {\n }\n \n proc build_vers_script_dll_o {} {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n \n     # Compile the object file.\n-    if ![ld_compile \"$CC $CFLAGS -shared\" $srcdir/$subdir/vers-script-dll.c tmpdir/vers-script-dll.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -shared\" $srcdir/$subdir/vers-script-dll.c tmpdir/vers-script-dll.o] {\n \tfail \"compiling shared lib object\"\n     }\n }\n \n proc run_ver_script_test { testname } {\n-    global CC\n+    global CC_FOR_TARGET\n     global srcdir\n     global subdir\n     global verbose\n \n-    if ![ld_link \"$CC -shared \\\n+    if ![ld_link \"$CC_FOR_TARGET -shared \\\n \t    -Wl,--version-script,$srcdir/$subdir/$testname.ver \\\n \t    -Wl,--output-def,tmpdir/$testname.def\" tmpdir/$testname.dll \\\n \t    \"tmpdir/vers-script-dll.o\"] {"
    },
    {
      "sha": "a26644cc367ff3e0382551d4c93ad5728666f786",
      "filename": "ld/testsuite/ld-pe/pe-run.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-run.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-run.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -62,27 +62,27 @@ if { ![check_compiler_available] } {\n set tmpdir tmpdir\n \n proc test_direct_link_dll {} {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n     global tmpdir\n \n     # Compile the dll.\n-    if ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/direct_dll.c $tmpdir/direct_dll.o ] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct_dll.c $tmpdir/direct_dll.o ] {\n \tfail \"compiling shared lib\"\n-    } elseif ![ld_link \"$CC -shared\" $tmpdir/direct_dll.dll \"$tmpdir/direct_dll.o\" ] {\n+    } elseif ![ld_link \"$CC_FOR_TARGET -shared\" $tmpdir/direct_dll.dll \"$tmpdir/direct_dll.o\" ] {\n \tfail \"linking shared lib (.dll)\"\n-    } elseif ![ld_link \"$CC -shared\" $tmpdir/direct_dll.sl \"$tmpdir/direct_dll.o\" ] {\n+    } elseif ![ld_link \"$CC_FOR_TARGET -shared\" $tmpdir/direct_dll.sl \"$tmpdir/direct_dll.o\" ] {\n \tfail \"linking shared lib (.sl)\"\n     } else {\n \t# Compile and link the client program.\n-\tif ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/direct_client.c $tmpdir/direct_client.o ] {\n+\tif ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct_client.c $tmpdir/direct_client.o ] {\n \t    fail \"compiling client\"\n \t} else {\n \t    # Check linking directly to direct_dll.dll.\n \t    set msg \"linking client (.dll)\"\n-\t    if [ld_link \"$CC -Wl,--enable-auto-import\" $tmpdir/direct_client_dll.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET -Wl,--enable-auto-import\" $tmpdir/direct_client_dll.exe \\\n \t      \"$tmpdir/direct_client.o $tmpdir/direct_dll.dll\" ] {\n \t\tpass $msg\n \t    } else {\n@@ -91,7 +91,7 @@ proc test_direct_link_dll {} {\n \n \t    # Check linking directly to direct_dll.sl.\n \t    set msg \"linking client (.sl)\"\n-\t    if [ld_link \"$CC -Wl,--enable-auto-import\" $tmpdir/direct_client_sl.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET -Wl,--enable-auto-import\" $tmpdir/direct_client_sl.exe \\\n \t      \"$tmpdir/direct_client.o $tmpdir/direct_dll.sl\" ] {\n \t\tpass $msg\n \t    } else {\n@@ -102,7 +102,7 @@ proc test_direct_link_dll {} {\n \t    # Create symbolic link.\n \t    catch \"exec ln -fs direct_dll.dll $tmpdir/libdirect_dll.dll.a\" ln_catch\n \t    set msg \"linking client (symlink -> .dll)\"\n-\t    if [ld_link \"$CC -Wl,--enable-auto-import\" $tmpdir/direct_client_symlink_dll.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET -Wl,--enable-auto-import\" $tmpdir/direct_client_symlink_dll.exe \\\n \t      \"$tmpdir/direct_client.o $tmpdir/libdirect_dll.dll.a\" ] {\n \t        pass $msg\n \t    } else {\n@@ -113,7 +113,7 @@ proc test_direct_link_dll {} {\n \t    # Create symbolic link.\n \t    catch \"exec ln -fs direct_dll.sl $tmpdir/libdirect_sl.dll.a\" ln_catch\n \t    set msg \"linking client (symlink -> .sl)\"\n-\t    if [ld_link \"$CC -Wl,--enable-auto-import\" $tmpdir/direct_client_symlink_sl.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET -Wl,--enable-auto-import\" $tmpdir/direct_client_symlink_sl.exe \\\n \t      \"$tmpdir/direct_client.o $tmpdir/libdirect_sl.dll.a\" ] {\n \t\tpass $msg\n \t    } else {"
    },
    {
      "sha": "b4b4e785bb8d2aed5ddb88de7c0f0500ecb757fc",
      "filename": "ld/testsuite/ld-pe/pe-run2.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-run2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pe/pe-run2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run2.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -64,27 +64,27 @@ if { ![check_compiler_available] } {\n set tmpdir tmpdir\n \n proc test_direct2_link_dll {} {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n     global tmpdir\n \n     # Compile the dll.\n-    if ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/direct2_dll.c $tmpdir/direct2_dll.o ] {\n+    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct2_dll.c $tmpdir/direct2_dll.o ] {\n \tfail \"compiling shared lib fastcall/stdcall\"\n-    } elseif ![ld_link \"$CC -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.dll \"$tmpdir/direct2_dll.o\" ] {\n+    } elseif ![ld_link \"$CC_FOR_TARGET -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.dll \"$tmpdir/direct2_dll.o\" ] {\n \tfail \"linking shared lib (.dll) fastcall/stdcall\"\n-    } elseif ![ld_link \"$CC -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.sl \"$tmpdir/direct2_dll.o\" ] {\n+    } elseif ![ld_link \"$CC_FOR_TARGET -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.sl \"$tmpdir/direct2_dll.o\" ] {\n \tfail \"linking shared lib (.sl) fastcall/stdcall\"\n     } else {\n \t# Compile and link the client program.\n-\tif ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/direct2_client.c $tmpdir/direct2_client.o ] {\n+\tif ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct2_client.c $tmpdir/direct2_client.o ] {\n \t    fail \"compiling client fastcall/stdcall\"\n \t} else {\n \t    # Check linking directly to direct2_dll.dll.\n \t    set msg \"linking client (.dll) fastcall/stdcall\"\n-\t    if [ld_link \"$CC $CFLAGS -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_dll.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_dll.exe \\\n \t      \"$tmpdir/direct2_client.o $tmpdir/direct2_dll.dll\" ] {\n \t\tpass $msg\n \t    } else {\n@@ -93,7 +93,7 @@ proc test_direct2_link_dll {} {\n \n \t    # Check linking directly to direct2_dll.sl.\n \t    set msg \"linking client (.sl) fastcall/stdcall\"\n-\t    if [ld_link \"$CC $CFLAGS -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_sl.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_sl.exe \\\n \t      \"$tmpdir/direct2_client.o $tmpdir/direct2_dll.sl\" ] {\n \t\tpass $msg\n \t    } else {\n@@ -104,7 +104,7 @@ proc test_direct2_link_dll {} {\n \t    # Create symbolic link.\n \t    catch \"exec ln -fs direct2_dll.dll $tmpdir/libdirect2_dll.dll.a\" ln_catch\n \t    set msg \"linking client (symlink -> .dll) fastcall/stdcall\"\n-\t    if [ld_link \"$CC $CFLAGS -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_symlink_dll.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_symlink_dll.exe \\\n \t      \"$tmpdir/direct2_client.o $tmpdir/libdirect2_dll.dll.a\" ] {\n \t        pass $msg\n \t    } else {\n@@ -115,7 +115,7 @@ proc test_direct2_link_dll {} {\n \t    # Create symbolic link.\n \t    catch \"exec ln -fs direct2_dll.sl $tmpdir/libdirect2_sl.dll.a\" ln_catch\n \t    set msg \"linking client (symlink -> .sl) fastcall/stdcall\"\n-\t    if [ld_link \"$CC $CFLAGS -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_symlink_sl.exe \\\n+\t    if [ld_link \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -Wl,--enable-stdcall-fixup -Wl,--enable-auto-import\" $tmpdir/direct2_client_symlink_sl.exe \\\n \t      \"$tmpdir/direct2_client.o $tmpdir/libdirect2_sl.dll.a\" ] {\n \t\tpass $msg\n \t    } else {"
    },
    {
      "sha": "282742cca5b392a56c0e0609bbd0376f5852948d",
      "filename": "ld/testsuite/ld-pie/pie.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pie/pie.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-pie/pie.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pie/pie.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -31,8 +31,8 @@ if { ![check_compiler_available] } {\n }\n \n # Check if -pie is supported or not.\n-send_log \"$CC -fpie -pie $srcdir/$subdir/pie.c -o tmpdir/pie\"\n-catch \"exec $CC -fpie -pie $srcdir/$subdir/pie.c -o tmpdir/pie\" exec_output\n+send_log \"$CC_FOR_TARGET -fpie -pie $srcdir/$subdir/pie.c -o tmpdir/pie\"\n+catch \"exec $CC_FOR_TARGET -fpie -pie $srcdir/$subdir/pie.c -o tmpdir/pie\" exec_output\n send_log \"$exec_output\\n\"\n if { ![string match \"\" $exec_output] } {\n     return"
    },
    {
      "sha": "51e01046a12e4778fcfe0f06d48d17ae97c1c069",
      "filename": "ld/testsuite/ld-plugin/lto.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 15,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-plugin/lto.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-plugin/lto.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/lto.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -19,7 +19,7 @@\n # MA 02110-1301, USA.\n \n # Check to see if the C and C++ compilers work\n-if { ![check_compiler_available] || [which $CXX] == 0 } {\n+if { ![check_compiler_available] || [which $CXX_FOR_TARGET] == 0 } {\n     return\n }\n \n@@ -29,16 +29,18 @@ if { ![check_plugin_api_available]\n     return\n }\n \n-set saved_CFLAGS \"$CFLAGS\"\n-set saved_CXXFLAGS \"$CXXFLAGS\"\n-regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CFLAGS \"\" CFLAGS\n-regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CXXFLAGS \"\" CXXFLAGS\n+set saved_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+set saved_CXXFLAGS \"$CXXFLAGS_FOR_TARGET\"\n+regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CFLAGS_FOR_TARGET \"\" CFLAGS_FOR_TARGET\n+regsub -all \"(\\\\-Wp,)?-D_FORTIFY_SOURCE=\\[0-9\\]+\" $CXXFLAGS_FOR_TARGET \"\" CXXFLAGS_FOR_TARGET\n \n proc restore_notify { } {\n   global saved_CFLAGS\n   global saved_CXXFLAGS\n-  set CFLAGS \"$saved_CFLAGS\"\n-  set CXXFLAGS \"$saved_CXXFLAGS\"\n+  global CFLAGS_FOR_TARGET\n+  global CXXFLAGS_FOR_TARGET\n+  set CFLAGS_FOR_TARGET \"$saved_CFLAGS\"\n+  set CXXFLAGS_FOR_TARGET \"$saved_CXXFLAGS\"\n }\n \n set lto_fat \"\"\n@@ -674,21 +676,21 @@ run_cc_link_tests $lto_compile_elf_tests\n if { [is_elf_format] && [check_lto_shared_available] } {\n     run_cc_link_tests $lto_link_elf_tests\n     set testname \"PR ld/15146 (2)\"\n-    set exec_output [run_host_cmd \"$CC\" \"-O2 -flto -fuse-linker-plugin -Wl,-rpath-link,. -Wl,--no-copy-dt-needed-entries -Wl,--no-as-needed tmpdir/pr15146d.o tmpdir/pr15146c.so\"]\n+    set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-O2 -flto -fuse-linker-plugin -Wl,-rpath-link,. -Wl,--no-copy-dt-needed-entries -Wl,--no-as-needed tmpdir/pr15146d.o tmpdir/pr15146c.so\"]\n     if { [ regexp \"undefined reference to symbol '\\\\.?xxx'\" $exec_output ] } {\n \tpass $testname\n     } {\n \tfail $testname\n     }\n     set testname \"PR ld/16746 (3)\"\n-    set exec_output [run_host_cmd \"$CC\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr16746b.o tmpdir/pr16746d.o\"]\n+    set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr16746b.o tmpdir/pr16746d.o\"]\n     if { [ regexp \"warning: \\\\.?foobar\" $exec_output ] && ![ regexp \"symbol from plugin\" $exec_output ] } {\n \tpass $testname\n     } {\n \tfail $testname\n     }\n     set testname \"PR ld/16746 (4)\"\n-    set exec_output [run_host_cmd \"$CC\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr16746d.o tmpdir/pr16746b.o\"]\n+    set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr16746d.o tmpdir/pr16746b.o\"]\n     if { [ regexp \"warning: \\\\.?foobar\" $exec_output ] && ![ regexp \"symbol from plugin\" $exec_output ] } {\n \tpass $testname\n     } {\n@@ -712,7 +714,7 @@ run_cc_link_tests [list \\\n \n set exec_output [run_host_cmd \"sh\" \\\n \t\t\t      \"-c \\\"ulimit -n 20; \\\n-\t\t\t      $CC -Btmpdir/ld -o tmpdir/pr28138 \\\n+\t\t\t      $CC_FOR_TARGET -Btmpdir/ld -o tmpdir/pr28138 \\\n \t\t\t      tmpdir/pr28138.o tmpdir/pr28138.a\\\"\"]\n set exec_output [prune_warnings $exec_output]\n if [string match \"\" $exec_output] then {\n@@ -749,7 +751,7 @@ if { [at_least_gcc_version 4 7] } {\n \t   || [istarget \"x86_64-*-linux*\"]\n \t   || [istarget \"amd64-*-linux*\"]) } {\n \tset testname \"PR ld/12365\"\n-\tset exec_output [run_host_cmd \"$CC\" \"-O2 -flto -flto-partition=none -fuse-linker-plugin -o tmpdir/pr12365 tmpdir/pr12365a.o tmpdir/pr12365b.o tmpdir/pr12365c.o\"]\n+\tset exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"-O2 -flto -flto-partition=none -fuse-linker-plugin -o tmpdir/pr12365 tmpdir/pr12365a.o tmpdir/pr12365b.o tmpdir/pr12365c.o\"]\n \tset exec_output [prune_warnings $exec_output]\n \tif { [ regexp \"undefined reference to `my_bcopy'\" $exec_output ] } {\n \t    # Linker should catch the reference to undefined `my_bcopy'\n@@ -797,7 +799,7 @@ if { [at_least_gcc_version 4 7] } {\n \t]\n     }\n     set testname \"PR ld/12942 (3)\"\n-    set exec_output [run_host_cmd \"$CXX\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr12942b.o tmpdir/pr12942a.o\"]\n+    set exec_output [run_host_cmd \"$CXX_FOR_TARGET\" \"-O2 -flto -fuse-linker-plugin tmpdir/pr12942b.o tmpdir/pr12942a.o\"]\n     if { [ regexp \"undefined reference to `\\\\.?link_error\\\\(\\\\)'\" $exec_output ] } {\n         pass $testname\n     } {\n@@ -889,10 +891,10 @@ if { [is_elf_format] && [check_lto_shared_available] } {\n }\n \n proc pr20103 {cflags libs} {\n-    global CC\n+    global CC_FOR_TARGET\n \n     set testname \"PR ld/20103 ($cflags $libs)\"\n-    set exec_output [run_host_cmd \"$CC\" \"$cflags $libs\"]\n+    set exec_output [run_host_cmd \"$CC_FOR_TARGET\" \"$cflags $libs\"]\n     if { [ regexp \"undefined reference to `\\\\.?dead'\" $exec_output ] } {\n         pass \"$testname (1)\"\n     } {"
    },
    {
      "sha": "2652a8d3ed152fe0f8b3b90f3ff33b156d986fa4",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -77,10 +77,6 @@ set regas \"-plugin-opt registerallsymbolsread\"\n set regassilent \"-plugin-opt registerallsymbolsreadsilent\"\n set regcln \"-plugin-opt registercleanup\"\n \n-if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] } {\n-    # otherwise get FAILS due to _.frame\n-    set CFLAGS \"$CFLAGS -fomit-frame-pointer\"\n-}\n # In order to define symbols in plugin options in the list of tests below,\n # we need to know if the platform prepends an underscore to C symbols,\n # which we find out by compiling the test objects now.  If there is any\n@@ -91,16 +87,20 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] }\n set failed_compile 0\n set _ \"\"\n set plugin_nm_output \"\"\n-set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] } {\n+    # otherwise get FAILS due to _.frame\n+    append CFLAGS_FOR_TARGET \" -fomit-frame-pointer\"\n+}\n \n if { $can_compile && \\\n-\t(![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/main.c tmpdir/main.o] \\\n-\t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func.c tmpdir/func.o] \\\n-\t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/text.c tmpdir/text.o] \\\n-\t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/pr20070a.c tmpdir/pr20070a.o] \\\n-\t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/dummy.s tmpdir/dummy.o] \\\n-\t|| ![ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/pr17973.s tmpdir/pr17973.o]) } {\n+\t(![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/main.c tmpdir/main.o] \\\n+\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func.c tmpdir/func.o] \\\n+\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/text.c tmpdir/text.o] \\\n+\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/pr20070a.c tmpdir/pr20070a.o] \\\n+\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/dummy.s tmpdir/dummy.o] \\\n+\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/pr17973.s tmpdir/pr17973.o]) } {\n     # Defer fail until we have list of tests set.\n     set failed_compile 1\n }\n@@ -291,16 +291,16 @@ if { !$can_compile || $failed_compile } {\n \t    unsupported [lindex $testitem 0]\n \t}\n     }\n-    set CFLAGS \"$old_CFLAGS\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n     return\n }\n \n run_ld_link_tests $plugin_tests\n \n if { [is_elf_format] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n-     && [ld_compile \"$CC $CFLAGS\" $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n+     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n+     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n+     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n     run_ld_link_tests $plugin_extra_elf_tests\n }\n \n@@ -394,4 +394,4 @@ if [ar_simple_create $ar \"--plugin $plugin4_path\" \"tmpdir/libpr20070.a\" \\\n     unsupported \"PR ld/20070\"\n }\n \n-set CFLAGS \"$old_CFLAGS\"\n+set CFLAGS_FOR_TARGET \"$old_CFLAGS\""
    },
    {
      "sha": "42ce87ffababe8124c8fc02cd0e194bc368ecb14",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -38,37 +38,37 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-set old_CFLAGS \"$CFLAGS\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n \n # Pass -fplt to CC since -fno-plt doesn't work with NOCROSSREFS tests.\n # Also add $NOPIE_CFLAGS since PIE doesn't work NOCROSSREFS tests.\n-set old_CC \"$CC\"\n-set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS\"\n+set old_CC \"$CC_FOR_TARGET\"\n+append CC_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS\"\n \n # Xtensa targets currently default to putting literal values in a separate\n # section and that requires linker script support, so put literals in text.\n if [istarget xtensa*-*-*] {\n-    set CFLAGS \"$CFLAGS -mtext-section-literals\"\n+    append CFLAGS_FOR_TARGET \" -mtext-section-literals\"\n }\n \n # Prevent the use of the MeP's small data area which references a symbol\n # called __sdabase which will not be defined by our test linker scripts.\n if [istarget mep*-*-elf] {\n-    set CFLAGS \"-mtiny=0\"\n+    append CFLAGS_FOR_TARGET \" -mtiny=0\"\n }\n \n # The .dsbt section and __c6xabi_DSBT_BASE are not defined in our test\n # linker scripts.\n if [istarget tic6x*-*-*] {\n-    set CFLAGS \"-mno-dsbt -msdata=none\"\n+    append CFLAGS_FOR_TARGET \" -mno-dsbt -msdata=none\"\n }\n \n-if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n-     || ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross1.c\" tmpdir/cross1.o] \\\n+     || ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross2.c\" tmpdir/cross2.o] } {\n     unsupported $test1\n     unsupported $test2\n-    set CFLAGS \"$old_CFLAGS\"\n-    set CC \"$old_CC\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -102,10 +102,10 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references within a single object.\n \n-if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n     unsupported $test2\n-    set CFLAGS \"$old_CFLAGS\"\n-    set CC \"$old_CC\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -127,17 +127,17 @@ if [string match \"\" $exec_output] then {\n \n # Check cross references for ld -r\n \n-if { ![ld_compile \"$CC $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n     unsupported $test3\n-    set CFLAGS \"$old_CFLAGS\"\n-    set CC \"$old_CC\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n if ![ld_relocate $ld tmpdir/cross3-partial.o \"tmpdir/cross1.o tmpdir/cross4.o\"] {\n     fail $test3\n-    set CFLAGS \"$old_CFLAGS\"\n-    set CC \"$old_CC\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -210,5 +210,5 @@ if [string match \"\" $exec_output] then {\n     }\n }\n \n-set CFLAGS \"$old_CFLAGS\"\n-set CC \"$old_CC\"\n+set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n+set CC_FOR_TARGET \"$old_CC\""
    },
    {
      "sha": "1c42bbc8ad55939206ecbd315e30bb4142960c25",
      "filename": "ld/testsuite/ld-selective/selective.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-selective/selective.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-selective/selective.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-selective/selective.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -64,7 +64,7 @@ if [istarget avr-*-*] {\n }\n \n # If we don't have g++ for the target, mark all tests as untested.\n-if { ![is_remote host] && [which $CXX] == 0 } {\n+if { ![is_remote host] && [which $CXX_FOR_TARGET] == 0 } {\n     foreach testitem $seltests {\n \tuntested \"[lindex $testitem 0]\"\n     }\n@@ -90,10 +90,10 @@ foreach testitem $seltests {\n \n     # It's either C or C++ at the moment.\n     if { $testtype == \"C++\" } {\n-\tset compiler \"$CXX\"\n+\tset compiler \"$CXX_FOR_TARGET\"\n \t# Starting with 3.4.0, -fvtable-gc is no longer supported and thus\n \t# the functionality we try to test for cannot be expected to work.\n-\tset version [remote_exec host \"$CXX -dumpversion\"]\n+\tset version [remote_exec host \"$CXX_FOR_TARGET -dumpversion\"]\n \tset version [lindex $version 1]\n \tif { [regexp \"^(\\[1-9\\]\\[0-9\\]+|\\[4-9\\]|3.(\\[1-9\\]\\[0-9\\]+))\\\\.\" $version] \\\n \t     || [regexp \"^(\\[1-9\\]\\[0-9\\]+|\\[4-9\\])\" $version] } {\n@@ -104,7 +104,7 @@ foreach testitem $seltests {\n \t}\n     } else {\n \tset testflags \"$cflags\"\n-\tset compiler \"$CC\"\n+\tset compiler \"$CC_FOR_TARGET\"\n     }\n \n     # Note that we do not actually *use* CXX; we just add cxxflags for C++"
    },
    {
      "sha": "2611fb809b8f6bedf19119931eba638ae954fe17",
      "filename": "ld/testsuite/ld-sh/sh.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-sh/sh.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-sh/sh.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-sh/sh.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -144,7 +144,7 @@ if [istarget sh*-*linux*] {\n }\n \n if {![ld_assemble $as \"-relax tmpdir/start.s\" tmpdir/start.o] \\\n-    || ![ld_compile $CC \"-O -mrelax -foptimize-sibling-calls $srcdir/$subdir/sh2.c\" tmpdir/sh2.o]} {\n+    || ![ld_compile $CC_FOR_TARGET \"-O -mrelax -foptimize-sibling-calls $srcdir/$subdir/sh2.c\" tmpdir/sh2.o]} {\n     unsupported $testlink\n     unsupported $testjsr\n     unsupported $testrun"
    },
    {
      "sha": "d191e316e4690058f3407ab9e846eeddd6d3577f",
      "filename": "ld/testsuite/ld-shared/shared.exp",
      "status": "modified",
      "additions": 20,
      "deletions": 20,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-shared/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-shared/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-shared/shared.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -66,8 +66,8 @@ set SHCFLAG \"\"\n set shared_needs_pic \"no\"\n \n # Disable all sanitizers.\n-set old_CFLAGS \"$CFLAGS\"\n-append CFLAGS \" $NOSANITIZE_CFLAGS\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $NOSANITIZE_CFLAGS\"\n \n if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \n@@ -114,15 +114,15 @@ if [istarget arm*-*-linux*] {\n \tset file [open $tmpdir/movw-detect.c w]\n \tputs $file \"void foo(void) { __asm (\\\"movw r0, #0\\\"); }\"\n \tclose $file\n-\tif [run_host_cmd_yesno \"$CC\" \"$CFLAGS -c $tmpdir/movw-detect.c -o $tmpdir/movw-detect.o\"] {\n+\tif [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$CFLAGS_FOR_TARGET -c $tmpdir/movw-detect.c -o $tmpdir/movw-detect.o\"] {\n \t    set shared_needs_pic \"yes\"\n \t}\n     }\n }\n \n # The test procedure.\n proc shared_test { progname testname main sh1 sh2 dat args } {\n-    global CC\n+    global CC_FOR_TARGET\n     global srcdir\n     global subdir\n     global exec_output\n@@ -140,7 +140,7 @@ proc shared_test { progname testname main sh1 sh2 dat args } {\n     if { [is_elf_format] && [check_shared_lib_support] } {\n \tappend shared \" -Wl,-z,notext\"\n     }\n-    if {![ld_link $CC $tmpdir/$progname.so \"$shared $shldflags $tmpdir/$sh1 $tmpdir/$sh2\"]} {\n+    if {![ld_link $CC_FOR_TARGET $tmpdir/$progname.so \"$shared $shldflags $tmpdir/$sh1 $tmpdir/$sh2\"]} {\n         fail \"$testname\"\n     \treturn\n     }\n@@ -153,7 +153,7 @@ proc shared_test { progname testname main sh1 sh2 dat args } {\n     if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \tset rpath /lib:$tmpdir\n     }\n-    if ![ld_link $CC $tmpdir/$progname \"-Wl,-rpath,$rpath $tmpdir/$main $tmpdir/$progname.so\"] {\n+    if ![ld_link $CC_FOR_TARGET $tmpdir/$progname \"-Wl,-rpath,$rpath $tmpdir/$main $tmpdir/$progname.so\"] {\n     \tfail \"$testname\"\n     \treturn\n     }\n@@ -197,9 +197,9 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n     # Unfortunately, the gcc argument is -fpic and the cc argument is\n     # -KPIC.  We have to try both.\n     set picflag \"-fpic\"\n-    send_log \"$CC $picflag\\n\"\n-    verbose \"$CC $picflag\"\n-    catch \"exec $CC $picflag\" exec_output\n+    send_log \"$CC_FOR_TARGET $picflag\\n\"\n+    verbose \"$CC_FOR_TARGET $picflag\"\n+    catch \"exec $CC_FOR_TARGET $picflag\" exec_output\n     send_log \"$exec_output\\n\"\n     verbose \"--\" \"$exec_output\"\n     if { [string match \"*illegal option*\" $exec_output] \\\n@@ -212,7 +212,7 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n verbose \"Using $picflag to compile PIC code\"\n \n # Compile the main program.\n-if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n+if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n     unsupported \"shared (non PIC)\"\n     unsupported \"shared\"\n } else {\n@@ -223,8 +223,8 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o]\n     # using -fpic will cause some of the tests to return different\n     # results.  Make sure that PLT is used since PLT is expected.\n     global PLT_CFLAGS NOPIE_CFLAGS\n-    if { ![ld_compile \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $CFLAGS $SHCFLAG\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n-\t || ![ld_compile \"$CC $PLT_CFLAGS $CFLAGS $SHCFLAG\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $NOPIE_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n+\t || ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n \tunsupported \"shared (non PIC)\"\n     } else { if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \tshared_test shnp \"shared (nonPIC)\" mainnp.o sh1np.o sh2np.o xcoff\n@@ -284,25 +284,25 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o]\n \n     # Now compile the code using -fpic.\n \n-    if { ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n-\t || ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n+\t || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n \tunsupported \"shared\"\n     } else {\n \tif { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \t    shared_test shp \"shared\" mainnp.o sh1p.o sh2p.o xcoff\n \t} else {\n \t    shared_test shp \"shared\" mainnp.o sh1p.o sh2p.o shared\n-\t    ld_compile \"$CC $CFLAGS -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n-\t    ld_compile \"$CC $CFLAGS -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n+\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n+\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n \t    shared_test shp \"shared -Bsymbolic\" mainnp.o sh1p.o sh2p.o symbolic \"-Bsymbolic\"\n-\t    ld_compile \"$CC $CFLAGS $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n-\t    ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n+\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n+\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n \t}\n     }\n }\n \n # Now do the same tests again, but this time compile main.c PIC.\n-if ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n+if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n     unsupported \"shared (PIC main, non PIC so)\"\n     unsupported \"shared (PIC main)\"\n } else {\n@@ -347,7 +347,7 @@ if ![ld_compile \"$CC $CFLAGS $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/m\n     }\n }\n \n-set CFLAGS \"$old_CFLAGS\"\n+set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n \n if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n     # Remove the temporary directory."
    },
    {
      "sha": "20472afcfc7340b8b1ac3b28b668f3c7d1b423a8",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 23,
      "deletions": 23,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -355,26 +355,26 @@ if { ![check_compiler_available] } {\n # tests. Also add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if PIE doesn't work\n # with S-records.  Also add $NOCF_PROTECTION_CFLAGS for S-records.\n # Also add $NOSANITIZE_CFLAGS for S-records.\n-set old_CC \"$CC\"\n-set CC \"$CC $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n-set old_CXX \"$CXX\"\n-set old_CXXFLAGS \"$CXXFLAGS\"\n-set CXXFLAGS \"$CXXFLAGS $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+set old_CC \"$CC_FOR_TARGET\"\n+append CC_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+set old_CXX \"$CXX_FOR_TARGET\"\n+set old_CXXFLAGS \"$CXXFLAGS_FOR_TARGET\"\n+append CXXFLAGS_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n \n # S-records can't handle .note.gnu.property sections.\n if { [is_elf_format] \\\n      && ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"]) } {\n-    set CC \"$CC -Wa,-mx86-used-note=no\"\n-    set CXX \"$CXX -Wa,-mx86-used-note=no\"\n+    append CC_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n+    append CXX_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n }\n \n-if { ![ld_compile $CC $srcdir/$subdir/sr1.c tmpdir/sr1.o] \\\n-     || ![ld_compile $CC $srcdir/$subdir/sr2.c tmpdir/sr2.o] } {\n+if { ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/sr1.c tmpdir/sr1.o] \\\n+     || ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/sr2.c tmpdir/sr2.o] } {\n     unsupported $test1\n     unsupported $test2\n-    set CC \"$old_CC\"\n-    set CXX \"$old_CXX\"\n-    set CXXFLAGS \"$old_CXXFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n+    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n \n@@ -444,19 +444,19 @@ run_srec_test $test1 \"tmpdir/sr1.o tmpdir/sr2.o\"\n # destructors.  Note that since we are not linking against any\n # libraries, this program won't actually work or anything.\n \n-if { ![is_remote host] && [which $CXX] == 0 } {\n+if { ![is_remote host] && [which $CXX_FOR_TARGET] == 0 } {\n     untested $test2\n-    set CC \"$old_CC\"\n-    set CXX \"$old_CXX\"\n-    set CXXFLAGS \"$old_CXXFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n+    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n \n-if ![ld_compile \"$CXX $CXXFLAGS -fno-exceptions\" $srcdir/$subdir/sr3.cc tmpdir/sr3.o] {\n+if ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/sr3.cc tmpdir/sr3.o] {\n     unsupported $test2\n-    set CC \"$old_CC\"\n-    set CXX \"$old_CXX\"\n-    set CXXFLAGS \"$old_CXXFLAGS\"\n+    set CC_FOR_TARGET \"$old_CC\"\n+    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n \n@@ -482,6 +482,6 @@ setup_xfail \"bpf-*-*\"\n \n run_srec_test $test2 \"tmpdir/sr3.o\"\n \n-set CC \"$old_CC\"\n-set CXX \"$old_CXX\"\n-set CXXFLAGS \"$old_CXXFLAGS\"\n+set CC_FOR_TARGET \"$old_CC\"\n+set CXX_FOR_TARGET \"$old_CXX\"\n+set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\""
    },
    {
      "sha": "017d72dc61067535237834a419ef45fe56badcf4",
      "filename": "ld/testsuite/ld-undefined/undefined.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-undefined/undefined.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-undefined/undefined.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-undefined/undefined.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -29,7 +29,7 @@ if { ![check_compiler_available] } {\n     untested $testund\n     untested $testfn\n     untested $testline\n-} elseif { ![ld_compile \"$CC -g $NOLTO_CFLAGS\" $srcdir/$subdir/undefined.c tmpdir/undefined.o] } {\n+} elseif { ![ld_compile \"$CC_FOR_TARGET -g $NOLTO_CFLAGS\" $srcdir/$subdir/undefined.c tmpdir/undefined.o] } {\n     verbose \"Unable to compile test file!\" 1\n     unsupported $testund\n     unsupported $testfn"
    },
    {
      "sha": "88a6a2ff3d6296b2ce46ba94fa5d5870b35ac377",
      "filename": "ld/testsuite/ld-unique/unique.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-unique/unique.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-unique/unique.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-unique/unique.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -102,13 +102,13 @@ proc contains_unique_symbol { binary_file } {\n set fails 0\n \n # Create object file containing unique symbol.\n-if ![ld_compile \"$CC -c\" \"$srcdir/$subdir/unique.s\" \"tmpdir/unique.o\"] {\n+if ![ld_compile \"$CC_FOR_TARGET -c\" \"$srcdir/$subdir/unique.s\" \"tmpdir/unique.o\"] {\n     fail \"Could not create a unique object\"\n     set fails [expr $fails + 1]\n }\n \n # Create object file NOT containing unique symbol.\n-if ![ld_compile \"$CC -c\" \"$srcdir/$subdir/unique_empty.s\" \"tmpdir/unique_empty.o\"] {\n+if ![ld_compile \"$CC_FOR_TARGET -c\" \"$srcdir/$subdir/unique_empty.s\" \"tmpdir/unique_empty.o\"] {\n     fail \"Could not create a non-unique object\"\n     set fails [expr $fails + 1]\n }\n@@ -123,7 +123,7 @@ if [board_info [target_info name] exists cflags] {\n }\n \n # Create executable containing unique symbol.\n-if ![ld_link \"$CC $NOPIE_LDFLAGS $board_cflags\" \"tmpdir/unique_prog\" \"tmpdir/unique.o\"] {\n+if ![ld_link \"$CC_FOR_TARGET $NOPIE_LDFLAGS $board_cflags\" \"tmpdir/unique_prog\" \"tmpdir/unique.o\"] {\n     fail \"Could not link a unique executable\"\n     set fails [expr $fails + 1]\n }\n@@ -190,7 +190,7 @@ if { ![check_shared_lib_support] } {\n }\n \n # Create pic object file containing unique symbol.\n-if {![ld_compile \"$CC -c -fPIC\" \"$srcdir/$subdir/unique_shared.s\" \"tmpdir/unique_shared.o\"] } {\n+if {![ld_compile \"$CC_FOR_TARGET -c -fPIC\" \"$srcdir/$subdir/unique_shared.s\" \"tmpdir/unique_shared.o\"] } {\n     fail \"Could not create a pic unique object\"\n     set fails [expr $fails + 1]\n }\n@@ -202,7 +202,7 @@ if {![ld_link $ld \"tmpdir/libunique_shared.so\" \"-shared tmpdir/unique_shared.o\"]\n }\n \n # Create executable NOT containing unique symbol linked against library.\n-if {![ld_link \"$CC $NOPIE_LDFLAGS $board_cflags\" \"tmpdir/unique_shared_prog\" \"-Ltmpdir tmpdir/unique_empty.o -Wl,-Bdynamic,-rpath=./tmpdir -lunique_shared\"] } {\n+if {![ld_link \"$CC_FOR_TARGET $NOPIE_LDFLAGS $board_cflags\" \"tmpdir/unique_shared_prog\" \"-Ltmpdir tmpdir/unique_empty.o -Wl,-Bdynamic,-rpath=./tmpdir -lunique_shared\"] } {\n     fail \"Could not link a dynamic executable\"\n     set fails [expr $fails + 1]\n }"
    },
    {
      "sha": "9947b51e296e9384f6e3fd39abd9b49a782e1a49",
      "filename": "ld/testsuite/ld-x86-64/tls.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-x86-64/tls.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/ld-x86-64/tls.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-x86-64/tls.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -178,7 +178,7 @@ run_ld_link_exec_tests [list \\\n ]\n \n # Skip if -mtls-dialect=gnu2 doesn't work.\n-if { ![run_host_cmd_yesno $CC \"-c -O2 -fPIC $GNU2_CFLAGS $srcdir/$subdir/tlsdesc1b.c -o tmpdir/tlsdesc1b.o\"] } {\n+if { ![run_host_cmd_yesno $CC_FOR_TARGET \"-c -O2 -fPIC $GNU2_CFLAGS $srcdir/$subdir/tlsdesc1b.c -o tmpdir/tlsdesc1b.o\"] } {\n     return\n }\n "
    },
    {
      "sha": "a42e433d6d3d2f16a8188e96bf84320fc7edf94f",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 54,
      "deletions": 54,
      "changes": 108,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -24,16 +24,16 @@ load_file $srcdir/../../binutils/testsuite/lib/binutils-common.exp\n # Returns 0 otherwise.\n #\n proc at_least_gcc_version { major minor } {\n-    global CC\n+    global CC_FOR_TARGET\n \n-    if {![info exists CC]} {\n-\tset CC [find_gcc]\n+    if {![info exists CC_FOR_TARGET]} {\n+\tset CC_FOR_TARGET [find_gcc]\n     }\n-    if { $CC == \"\" } {\n+    if { $CC_FOR_TARGET == \"\" } {\n \treturn 0\n     }\n     # Filter out -Wl, options.\n-    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC \"\" cc_cmd\n+    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC_FOR_TARGET \"\" cc_cmd\n     set state [remote_exec host $cc_cmd --version]\n     if { [lindex $state 0] != 0 } {\n \treturn 0;\n@@ -216,8 +216,8 @@ proc default_ld_link { ld target objects } {\n # Compile an object using cc.\n #\n proc default_ld_compile { cc source object } {\n-    global CFLAGS\n-    global CXXFLAGS\n+    global CFLAGS_FOR_TARGET\n+    global CXXFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n     global host_triplet\n@@ -252,9 +252,9 @@ proc default_ld_compile { cc source object } {\n \n     set ccexe [string replace $ccexe 0 [string last \"/\" $ccexe] \"\"]\n     if {[string match \"*++*\" $ccexe]} {\n-\tappend flags \" $CXXFLAGS\"\n+\tappend flags \" $CXXFLAGS_FOR_TARGET\"\n     } else {\n-\tappend flags \" $CFLAGS\"\n+\tappend flags \" $CFLAGS_FOR_TARGET\"\n     }\n \n     if [board_info [target_info name] exists cflags] {\n@@ -466,8 +466,8 @@ proc run_ld_link_tests { ldtests args } {\n     global srcdir\n     global subdir\n     global env\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n     global runtests\n     global exec_output\n \n@@ -534,7 +534,7 @@ proc run_ld_link_tests { ldtests args } {\n \t\tset objfile \"tmpdir/$fileroot.o\"\n \t\tif { [file extension $src_file] == \".c\" } {\n \t\t    set as_file \"tmpdir/$fileroot.s\"\n-\t\t    if ![ld_compile \"$CC -S $CFLAGS $cflags\" $srcdir/$subdir/$src_file $as_file] {\n+\t\t    if ![ld_compile \"$CC_FOR_TARGET -S $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/$src_file $as_file] {\n \t\t\tset is_unsupported 1\n \t\t\tbreak\n \t\t    }\n@@ -683,10 +683,10 @@ proc run_ld_link_exec_tests { ldtests args } {\n     global srcdir\n     global subdir\n     global env\n-    global CC\n-    global CXX\n-    global CFLAGS\n-    global CXXFLAGS\n+    global CC_FOR_TARGET\n+    global CXX_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n+    global CXXFLAGS_FOR_TARGET\n     global errcnt\n     global exec_output\n     global board_cflags\n@@ -746,9 +746,9 @@ proc run_ld_link_exec_tests { ldtests args } {\n \t    lappend objfiles $objfile\n \n \t    if { [ string match \"c++\" $lang ] } {\n-\t\tset cmd \"$CXX -c $CXXFLAGS $cflags\"\n+\t\tset cmd \"$CXX_FOR_TARGET -c $CXXFLAGS_FOR_TARGET $cflags\"\n \t    } else {\n-\t\tset cmd \"$CC -c $CFLAGS $cflags\"\n+\t\tset cmd \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\"\n \t    }\n \t    if ![ld_compile $cmd $srcdir/$subdir/$src_file $objfile] {\n \t\tset failed 1\n@@ -765,10 +765,10 @@ proc run_ld_link_exec_tests { ldtests args } {\n \t    set link_cmd $ld\n \t} elseif { [ string match \"c++\" $lang ] } {\n \t    set link_proc ld_link\n-\t    set link_cmd $CXX\n+\t    set link_cmd $CXX_FOR_TARGET\n \t} else {\n \t    set link_proc ld_link\n-\t    set link_cmd $CC\n+\t    set link_cmd $CC_FOR_TARGET\n \t}\n \n \tif { $binfile eq \"tmpdir/\" } {\n@@ -851,10 +851,10 @@ proc run_cc_link_tests { ldtests } {\n     global srcdir\n     global subdir\n     global env\n-    global CC\n-    global CXX\n-    global CFLAGS\n-    global CXXFLAGS\n+    global CC_FOR_TARGET\n+    global CXX_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n+    global CXXFLAGS_FOR_TARGET\n     global ar\n     global exec_output\n     global board_cflags\n@@ -936,9 +936,9 @@ proc run_cc_link_tests { ldtests } {\n \t    lappend objfiles $objfile\n \n \t    if { [ string match \"c++\" $lang ] } {\n-\t\tset cmd \"$CXX -c $CXXFLAGS $cflags\"\n+\t\tset cmd \"$CXX_FOR_TARGET -c $CXXFLAGS_FOR_TARGET $cflags\"\n \t    } else {\n-\t\tset cmd \"$CC -c $CFLAGS $cflags\"\n+\t\tset cmd \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\"\n \t    }\n \t    if ![ld_compile $cmd $srcdir/$subdir/$src_file $objfile] {\n \t\tset failed 1\n@@ -954,9 +954,9 @@ proc run_cc_link_tests { ldtests } {\n \treset_vars\n \n \tif { [ string match \"c++\" $lang ] } {\n-\t    set cc_cmd $CXX\n+\t    set cc_cmd $CXX_FOR_TARGET\n \t} else {\n-\t    set cc_cmd $CC\n+\t    set cc_cmd $CC_FOR_TARGET\n \t}\n \n \tif { $binfile eq \"tmpdir/\" } {\n@@ -1200,10 +1200,10 @@ proc check_sysroot_available { } {\n \n proc check_compiler_available { } {\n     global compiler_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists compiler_available_saved]} {\n-\tif { [which $CC] == 0 } {\n+\tif { [which $CC_FOR_TARGET] == 0 } {\n \t    set compiler_available_saved 0\n \t    return 0\n \t}\n@@ -1228,7 +1228,7 @@ proc check_compiler_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset compiler_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src -o $output\"]\n+\tset compiler_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $src -o $output\"]\n \tremote_file host delete $src\n \tremote_file host delete $output\n \tfile delete $src\n@@ -1238,16 +1238,16 @@ proc check_compiler_available { } {\n \n # Returns 1 if plugin is enabled in gcc.  Returns 0 otherwise.\n proc check_gcc_plugin_enabled { } {\n-    global CC\n+    global CC_FOR_TARGET\n \n-    if {![info exists CC]} {\n-\tset CC [find_gcc]\n+    if {![info exists CC_FOR_TARGET]} {\n+\tset CC_FOR_TARGET [find_gcc]\n     }\n-    if { $CC == \"\"} {\n+    if { $CC_FOR_TARGET == \"\"} {\n \treturn 0\n     }\n     # Filter out -Wl, options.\n-    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC \"\" cc_cmd\n+    regsub -all -- \"-Wl,\\[^ ^\\t\\]+\" $CC_FOR_TARGET \"\" cc_cmd\n     set state [remote_exec host $cc_cmd -v]\n     if { [lindex $state 0] != 0 } {\n \treturn 0;\n@@ -1266,7 +1266,7 @@ proc check_gcc_plugin_enabled { } {\n # Returns true if the target compiler supports LTO\n proc check_lto_available { } {\n     global lto_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists lto_available_saved]} {\n \tif { ![check_gcc_plugin_enabled] } {\n@@ -1298,7 +1298,7 @@ proc check_lto_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset lto_available_saved [run_host_cmd_yesno \"$CC\" \"$flags -flto -fuse-linker-plugin $src -o $output\"]\n+\tset lto_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags -flto -fuse-linker-plugin $src -o $output\"]\n \tremote_file host delete $src\n \tremote_file host delete $output\n \tfile delete $src\n@@ -1309,7 +1309,7 @@ proc check_lto_available { } {\n # Returns true if the target compiler supports LTO  -ffat-lto-objects\n proc check_lto_fat_available { } {\n     global lto_fat_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists lto_fat_available_saved]} {\n \tif { ![check_gcc_plugin_enabled] } {\n@@ -1341,7 +1341,7 @@ proc check_lto_fat_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset lto_fat_available_saved [run_host_cmd_yesno \"$CC\" \"$flags -flto -ffat-lto-objects -fuse-linker-plugin $src -o $output\"]\n+\tset lto_fat_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags -flto -ffat-lto-objects -fuse-linker-plugin $src -o $output\"]\n \tremote_file host delete $src\n \tremote_file host delete $output\n \tfile delete $src\n@@ -1352,7 +1352,7 @@ proc check_lto_fat_available { } {\n # Returns true if the target compiler supports LTO and -shared\n proc check_lto_shared_available { } {\n     global lto_shared_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists lto_shared_available_saved]} {\n \tif { ![check_gcc_plugin_enabled] } {\n@@ -1384,7 +1384,7 @@ proc check_lto_shared_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset lto_shared_available_saved [run_host_cmd_yesno \"$CC\" \"$flags -shared -fPIC -flto -fuse-linker-plugin $src -o $output\"]\n+\tset lto_shared_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags -shared -fPIC -flto -fuse-linker-plugin $src -o $output\"]\n \tremote_file host delete $src\n \tremote_file host delete $output\n \tfile delete $src\n@@ -1418,7 +1418,7 @@ proc check_as_cfi { } {\n \n proc check_ifunc_available { } {\n     global ifunc_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists ifunc_available_saved]} {\n \tif { ![check_compiler_available] } {\n@@ -1452,7 +1452,7 @@ proc check_ifunc_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset ifunc_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src -o $output\"]\n+\tset ifunc_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $src -o $output\"]\n \tif { [isnative] && $ifunc_available_saved == 1 } {\n \t  set ifunc_available_saved [run_host_cmd_yesno \"$output\" \"\"]\n \t}\n@@ -1467,7 +1467,7 @@ proc check_ifunc_available { } {\n \n proc check_ifunc_attribute_available { } {\n     global ifunc_attribute_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists ifunc_attribute_available_saved]} {\n \tif { ![check_compiler_available] } {\n@@ -1499,7 +1499,7 @@ proc check_ifunc_attribute_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset ifunc_attribute_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src -o $output\"]\n+\tset ifunc_attribute_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $src -o $output\"]\n \tif { [isnative] && $ifunc_attribute_available_saved == 1 } {\n \t  set ifunc_attribute_available_saved [run_host_cmd_yesno \"$output\" \"\"]\n \t}\n@@ -1514,7 +1514,7 @@ proc check_ifunc_attribute_available { } {\n \n proc check_libdl_available { } {\n     global libdl_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n \n     if {![info exists libdl_available_saved]} {\n \tif { ![check_compiler_available] } {\n@@ -1537,7 +1537,7 @@ proc check_libdl_available { } {\n \tif [is_remote host] {\n \t    set src [remote_download host $src]\n \t}\n-\tset libdl_available_saved [run_host_cmd_yesno \"$CC\" \"$src -o $output -ldl\"]\n+\tset libdl_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$src -o $output -ldl\"]\n \tremote_file host delete $src\n \tremote_file host delete $output\n \tfile delete $src\n@@ -1549,7 +1549,7 @@ proc check_libdl_available { } {\n \n proc check_gnu2_tls_available { } {\n     global gnu2_tls_available_saved\n-    global CC\n+    global CC_FOR_TARGET\n     global GNU2_CFLAGS\n \n     if {![info exists gnu2_tls_available_saved]} {\n@@ -1593,9 +1593,9 @@ proc check_gnu2_tls_available { } {\n \tif [is_remote host] {\n \t    set src2 [remote_download host $src2]\n \t}\n-\tset gnu2_tls_available_saved [run_host_cmd_yesno \"$CC\" \"-fPIC -shared $flags $src1 -o $output1\"]\n+\tset gnu2_tls_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"-fPIC -shared $flags $src1 -o $output1\"]\n \tif { $gnu2_tls_available_saved == 1 } {\n-\t    set gnu2_tls_available_saved [run_host_cmd_yesno \"$CC\" \"$flags $src2 $output1 -o $output2\"]\n+\t    set gnu2_tls_available_saved [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $src2 $output1 -o $output2\"]\n \t    if { $gnu2_tls_available_saved == 1 } {\n \t\tset gnu2_tls_available_saved [run_host_cmd_yesno \"$output2\" \"\"]\n \t    }\n@@ -1611,8 +1611,8 @@ proc check_gnu2_tls_available { } {\n \n # Compile a C source file, with the specified additional_flags.\n proc compile_one_cc { src output additional_flags } {\n-    global CC\n-    global CFLAGS\n+    global CC_FOR_TARGET\n+    global CFLAGS_FOR_TARGET\n \n     set flags \"\"\n     if [board_info [target_info name] exists cflags] {\n@@ -1625,7 +1625,7 @@ proc compile_one_cc { src output additional_flags } {\n     if [is_remote host] {\n \tset src [remote_download host $src]\n     }\n-    return [run_host_cmd_yesno \"$CC\" \"$flags $CFLAGS $additional_flags $src -o $output\"]\n+    return [run_host_cmd_yesno \"$CC_FOR_TARGET\" \"$flags $CFLAGS_FOR_TARGET $additional_flags $src -o $output\"]\n }\n \n # Returns true if the target compiler supports -gctf"
    },
    {
      "sha": "76881844798c63cc859298f8035fd087fc71702f",
      "filename": "libctf/Makefile.am",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.am?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -86,8 +86,9 @@ check-DEJAGNU: site.exp development.exp\n \truntest=$(RUNTEST); \\\n \tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n \t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n-\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n-\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n+\t\tCC=\"$(CC)\" CC_FOR_TARGET=\"$(CC_FOR_TARGET)\" \\\n+\t\tCFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n+\t\tLIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi\n "
    },
    {
      "sha": "bb3b88fc109f7aa8dea8b3bee0e004dd1c4c424c",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -1374,8 +1374,9 @@ uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES\n @TCL_TRY_TRUE@\truntest=$(RUNTEST); \\\n @TCL_TRY_TRUE@\tif $(SHELL) -c \"$$runtest --version\" > /dev/null 2>&1; then \\\n @TCL_TRY_TRUE@\t  $$runtest --tool $(DEJATOOL) --srcdir $${srcroot}/testsuite \\\n-@TCL_TRY_TRUE@\t\tCC=\"$(CC_FOR_TARGET)\" CFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n-@TCL_TRY_TRUE@\t\tCC_FOR_HOST=\"$(CC)\" LIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n+@TCL_TRY_TRUE@\t\tCC=\"$(CC)\" CC_FOR_TARGET=\"$(CC_FOR_TARGET)\" \\\n+@TCL_TRY_TRUE@\t\tCFLAGS=\"$(CFLAGS) -I$(INCDIR) -I$(srcdir) -I$(builddir) -I$(builddir)/../bfd $(ZLIBINC)\" \\\n+@TCL_TRY_TRUE@\t\tLIBS=\"$(libctf_nobfd_la_LIBADD) $(LIBS)\" $(RUNTESTFLAGS); \\\n @TCL_TRY_TRUE@\telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n @TCL_TRY_TRUE@\tfi\n "
    },
    {
      "sha": "f2aba561fe2c262be713fbbb99758332893e9120",
      "filename": "libctf/testsuite/config/default.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/config/default.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -43,18 +43,18 @@ if {![file isdirectory tmpdir/libctf]} then {\n set gcc_B_opt \"-B[pwd]/tmpdir/libctf/\"\n set ld_L_opt \"\"\n \n-# The \"make check\" target in the Makefile passes in\n-# \"CC=$(CC_FOR_TARGET)\".  But, if the user invokes runtest directly,\n-# these flags may not be set.\n if {![info exists CC]} {\n-    set CC [find_gcc]\n-}\n-if {![info exists CC_FOR_HOST]} {\n-    set CC_FOR_HOST $CC\n+    set CC gcc\n }\n if {![info exists CFLAGS]} {\n     set CFLAGS \"-g -O2\"\n }\n+if {![info exists CC_FOR_TARGET]} {\n+    set CC_FOR_TARGET [find_gcc]\n+}\n+if {![info exists CFLAGS_FOR_TARGET]} {\n+    set CFLAGS_FOR_TARGET $CFLAGS\n+}\n \n # load the utility procedures\n load_lib ctf-lib.exp"
    },
    {
      "sha": "f2908f78c7c95568cc088f5ecd9416dfddc22b82",
      "filename": "libctf/testsuite/lib/ctf-lib.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/testsuite/lib/ctf-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ad77db1c02a92c912f9719f32e2452890aa738ad/libctf/testsuite/lib/ctf-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/testsuite/lib/ctf-lib.exp?ref=ad77db1c02a92c912f9719f32e2452890aa738ad",
      "patch": "@@ -48,10 +48,10 @@ proc run_native_host_cmd { command } {\n \n # Compile and link a C source file for execution on the host.\n proc compile_link_one_host_cc { src output additional_args } {\n-    global CC_FOR_HOST\n+    global CC\n     global CFLAGS\n \n-    return [run_native_host_cmd \"./libtool --quiet --tag=CC --mode=link $CC_FOR_HOST $CFLAGS $src -o $output $additional_args\" ]\n+    return [run_native_host_cmd \"./libtool --quiet --tag=CC --mode=link $CC $CFLAGS $src -o $output $additional_args\" ]\n }\n \n # run_lookup_test FILE\n@@ -110,7 +110,7 @@ proc compile_link_one_host_cc { src output additional_args } {\n # regexps in FILE.d.\n #\n proc run_lookup_test { name } {\n-    global CC CFLAGS LIBS\n+    global CC_FOR_TARGET CFLAGS_FOR_TARGET LIBS\n     global copyfile env runtests srcdir subdir verbose\n \n     if ![runtest_file_p $runtests $name] then {\n@@ -217,7 +217,7 @@ proc run_lookup_test { name } {\n \t    }\n \t}\n \n-\tset comp_output [run_host_cmd \"$CC\" \"$CFLAGS $lookup_flags [concat $src] -o $lookup_output\"]\n+\tset comp_output [run_host_cmd \"$CC_FOR_TARGET\" \"$CFLAGS_FOR_TARGET $lookup_flags [concat $src] -o $lookup_output\"]\n \n \tif { $comp_output != \"\"} {\n \t    send_log \"compilation of CTF program [concat $src] failed with <$comp_output>\""
    }
  ]
}