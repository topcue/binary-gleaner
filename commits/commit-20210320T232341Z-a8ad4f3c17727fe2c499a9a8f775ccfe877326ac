{
  "sha": "a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YThhZDRmM2MxNzcyN2ZlMmM0OTlhOWE4Zjc3NWNjZmU4NzczMjZhYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:40Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-20T23:23:41Z"
    },
    "message": "Change objfile_has_partial_symbols to a method\n\nThis changes objfile_has_partial_symbols to be a method on objfile.\n\nThere are some other functions that could benefit from this sort of\nchange, but this was the only one that was relevant to this series.\n\ngdb/ChangeLog\n2021-03-20  Tom Tromey  <tom@tromey.com>\n\n\t* symfile.c (read_symbols): Update.\n\t* objfiles.h (struct objfile) <has_partial_symbols>: New method.\n\t(objfile_has_partial_symbols): Don't declare.\n\t* objfiles.c (objfile::has_partial_symbols): Rename from\n\tobjfile_has_partial_symbols.\n\t(objfile_has_symbols, have_partial_symbols): Update.\n\t* elfread.c (elf_symfile_read): Update.\n\t* dwarf2/read.c (dwarf2_has_info): Update.\n\t* coffread.c (coff_symfile_read): Update.",
    "tree": {
      "sha": "848ea6efadcd795524e4bf124c944cff3aa6eb97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/848ea6efadcd795524e4bf124c944cff3aa6eb97"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "701823751bec1bbf2f1c96463994f894d33d2238",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/701823751bec1bbf2f1c96463994f894d33d2238",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/701823751bec1bbf2f1c96463994f894d33d2238"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 29,
    "deletions": 16
  },
  "files": [
    {
      "sha": "20f7b56d4f830b86a3cc71e301d8c5cf81d60ae5",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -1,3 +1,15 @@\n+2021-03-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* symfile.c (read_symbols): Update.\n+\t* objfiles.h (struct objfile) <has_partial_symbols>: New method.\n+\t(objfile_has_partial_symbols): Don't declare.\n+\t* objfiles.c (objfile::has_partial_symbols): Rename from\n+\tobjfile_has_partial_symbols.\n+\t(objfile_has_symbols, have_partial_symbols): Update.\n+\t* elfread.c (elf_symfile_read): Update.\n+\t* dwarf2/read.c (dwarf2_has_info): Update.\n+\t* coffread.c (coff_symfile_read): Update.\n+\n 2021-03-20  Tom Tromey  <tom@tromey.com>\n \n \t* coffread.c: Include dwarf2/public.h."
    },
    {
      "sha": "badcb5a608483f9cc5e5be58a53da3d3114cff2d",
      "filename": "gdb/coffread.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/coffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/coffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/coffread.c?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -708,7 +708,7 @@ coff_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n   dwarf2_build_frame_info (objfile);\n \n   /* Try to add separate debug file if no symbols table found.   */\n-  if (!objfile_has_partial_symbols (objfile))\n+  if (!objfile->has_partial_symbols ())\n     {\n       std::string debugfile = find_separate_debug_file_by_buildid (objfile);\n "
    },
    {
      "sha": "dd2abd39b0f6d6e23988494269ee4003f2b90a6f",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -1954,7 +1954,7 @@ dwarf2_has_info (struct objfile *objfile,\n       /* We can share a \"dwarf2_per_bfd\" with other objfiles if the BFD\n \t doesn't require relocations and if there aren't partial symbols\n \t from some other reader.  */\n-      if (!objfile_has_partial_symbols (objfile)\n+      if (!objfile->has_partial_symbols ()\n \t  && !gdb_bfd_requires_relocations (objfile->obfd))\n \t{\n \t  /* See if one has been created for this BFD yet.  */"
    },
    {
      "sha": "439f5cc29a0431e5ad226a22a94e972e85f0f69e",
      "filename": "gdb/elfread.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/elfread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/elfread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/elfread.c?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -1266,7 +1266,7 @@ elf_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n       /* elf_sym_fns_gdb_index cannot handle simultaneous non-DWARF\n \t debug information present in OBJFILE.  If there is such debug\n \t info present never use an index.  */\n-      if (!objfile_has_partial_symbols (objfile)\n+      if (!objfile->has_partial_symbols ()\n \t  && dwarf2_initialize_objfile (objfile, &index_kind))\n \t{\n \t  switch (index_kind)\n@@ -1293,14 +1293,14 @@ elf_symfile_read (struct objfile *objfile, symfile_add_flags symfile_flags)\n      SYMTABS/PSYMTABS.  `.gnu_debuglink' may no longer be present with\n      `.note.gnu.build-id'.\n \n-     .gnu_debugdata is !objfile_has_partial_symbols because it contains only\n+     .gnu_debugdata is !objfile::has_partial_symbols because it contains only\n      .symtab, not .debug_* section.  But if we already added .gnu_debugdata as\n      an objfile via find_separate_debug_file_in_section there was no separate\n      debug info available.  Therefore do not attempt to search for another one,\n      objfile->separate_debug_objfile->separate_debug_objfile GDB guarantees to\n      be NULL and we would possibly violate it.  */\n \n-  else if (!objfile_has_partial_symbols (objfile)\n+  else if (!objfile->has_partial_symbols ()\n \t   && objfile->separate_debug_objfile == NULL\n \t   && objfile->separate_debug_objfile_backlink == NULL)\n     {"
    },
    {
      "sha": "53ca66d17e64e9744043cebb6b75463600348387",
      "filename": "gdb/objfiles.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/objfiles.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/objfiles.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.c?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -810,23 +810,23 @@ objfile_rebase (struct objfile *objfile, CORE_ADDR slide)\n     breakpoint_re_set ();\n }\n \f\n-/* Return non-zero if OBJFILE has partial symbols.  */\n+/* See objfiles.h.  */\n \n int\n-objfile_has_partial_symbols (struct objfile *objfile)\n+objfile::has_partial_symbols ()\n {\n-  if (!objfile->sf)\n+  if (!sf)\n     return 0;\n \n   /* If we have not read psymbols, but we have a function capable of reading\n      them, then that is an indication that they are in fact available.  Without\n      this function the symbols may have been already read in but they also may\n      not be present in this objfile.  */\n-  if ((objfile->flags & OBJF_PSYMTABS_READ) == 0\n-      && objfile->sf->sym_read_psymbols != NULL)\n+  if ((flags & OBJF_PSYMTABS_READ) == 0\n+      && sf->sym_read_psymbols != NULL)\n     return 1;\n \n-  return objfile->sf->qf->has_symbols (objfile);\n+  return sf->qf->has_symbols (this);\n }\n \n /* Return non-zero if OBJFILE has full symbols.  */\n@@ -844,7 +844,7 @@ int\n objfile_has_symbols (struct objfile *objfile)\n {\n   for (::objfile *o : objfile->separate_debug_objfiles ())\n-    if (objfile_has_partial_symbols (o) || objfile_has_full_symbols (o))\n+    if (o->has_partial_symbols () || objfile_has_full_symbols (o))\n       return 1;\n   return 0;\n }\n@@ -859,7 +859,7 @@ have_partial_symbols (void)\n {\n   for (objfile *ofp : current_program_space->objfiles ())\n     {\n-      if (objfile_has_partial_symbols (ofp))\n+      if (ofp->has_partial_symbols ())\n \treturn 1;\n     }\n   return 0;"
    },
    {
      "sha": "0568e16ae4c138eae1d8691a1037b36bcc1efe56",
      "filename": "gdb/objfiles.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/objfiles.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/objfiles.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objfiles.h?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -548,6 +548,9 @@ struct objfile\n     return per_bfd->gdbarch;\n   }\n \n+  /* Return true if OBJFILE has partial symbols.  */\n+\n+  int has_partial_symbols ();\n \n   /* The object file's original name as specified by the user,\n      made absolute, and tilde-expanded.  However, it is not canonicalized\n@@ -738,8 +741,6 @@ extern void free_objfile_separate_debug (struct objfile *);\n extern void objfile_relocate (struct objfile *, const section_offsets &);\n extern void objfile_rebase (struct objfile *, CORE_ADDR);\n \n-extern int objfile_has_partial_symbols (struct objfile *objfile);\n-\n extern int objfile_has_full_symbols (struct objfile *objfile);\n \n extern int objfile_has_symbols (struct objfile *objfile);"
    },
    {
      "sha": "34d6363a91a71a369eb9019adea7b29934026d43",
      "filename": "gdb/symfile.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/symfile.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a8ad4f3c17727fe2c499a9a8f775ccfe877326ac/gdb/symfile.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symfile.c?ref=a8ad4f3c17727fe2c499a9a8f775ccfe877326ac",
      "patch": "@@ -775,7 +775,7 @@ read_symbols (struct objfile *objfile, symfile_add_flags add_flags)\n \n   /* find_separate_debug_file_in_section should be called only if there is\n      single binary with no existing separate debug info file.  */\n-  if (!objfile_has_partial_symbols (objfile)\n+  if (!objfile->has_partial_symbols ()\n       && objfile->separate_debug_objfile == NULL\n       && objfile->separate_debug_objfile_backlink == NULL)\n     {"
    }
  ]
}