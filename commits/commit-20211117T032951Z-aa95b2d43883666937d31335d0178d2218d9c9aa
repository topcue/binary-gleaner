{
  "sha": "aa95b2d43883666937d31335d0178d2218d9c9aa",
  "node_id": "C_kwDOANOeidoAKGFhOTViMmQ0Mzg4MzY2NjkzN2QzMTMzNWQwMTc4ZDIyMThkOWM5YWE",
  "commit": {
    "author": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2021-11-09T21:47:36Z"
    },
    "committer": {
      "name": "Aaron Merey",
      "email": "amerey@redhat.com",
      "date": "2021-11-17T03:29:51Z"
    },
    "message": "gdb: Add aliases for read_core_file_mappings callbacks\n\nAdd aliases read_core_file_mappings_loop_ftype and\nread_core_file_mappings_pre_loop_ftype.  Intended for use with\nread_core_file_mappings.\n\nAlso add build_id parameter to read_core_file_mappings_loop_ftype.",
    "tree": {
      "sha": "eb9f3dc97b6f5e108184897a02221b226978f1b3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/eb9f3dc97b6f5e108184897a02221b226978f1b3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa95b2d43883666937d31335d0178d2218d9c9aa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa95b2d43883666937d31335d0178d2218d9c9aa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa95b2d43883666937d31335d0178d2218d9c9aa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa95b2d43883666937d31335d0178d2218d9c9aa/comments",
  "author": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "aaronmerey",
    "id": 28735867,
    "node_id": "MDQ6VXNlcjI4NzM1ODY3",
    "avatar_url": "https://avatars.githubusercontent.com/u/28735867?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/aaronmerey",
    "html_url": "https://github.com/aaronmerey",
    "followers_url": "https://api.github.com/users/aaronmerey/followers",
    "following_url": "https://api.github.com/users/aaronmerey/following{/other_user}",
    "gists_url": "https://api.github.com/users/aaronmerey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/aaronmerey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/aaronmerey/subscriptions",
    "organizations_url": "https://api.github.com/users/aaronmerey/orgs",
    "repos_url": "https://api.github.com/users/aaronmerey/repos",
    "events_url": "https://api.github.com/users/aaronmerey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/aaronmerey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c2aad00a7447a32e1f4b0bd558a1bd2b13085381",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c2aad00a7447a32e1f4b0bd558a1bd2b13085381",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c2aad00a7447a32e1f4b0bd558a1bd2b13085381"
    }
  ],
  "stats": {
    "total": 83,
    "additions": 46,
    "deletions": 37
  },
  "files": [
    {
      "sha": "6c6dca22d63d34d9a60687e80a294d624620162b",
      "filename": "gdb/arch-utils.c",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/arch-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/arch-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch-utils.c?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -1075,16 +1075,11 @@ default_get_pc_address_flags (frame_info *frame, CORE_ADDR pc)\n \n /* See arch-utils.h.  */\n void\n-default_read_core_file_mappings (struct gdbarch *gdbarch,\n-\t\t\t\t struct bfd *cbfd,\n-\t\t\t\t gdb::function_view<void (ULONGEST count)>\n-\t\t\t\t   pre_loop_cb,\n-\t\t\t\t gdb::function_view<void (int num,\n-\t\t\t\t\t\t\t  ULONGEST start,\n-\t\t\t\t\t\t\t  ULONGEST end,\n-\t\t\t\t\t\t\t  ULONGEST file_ofs,\n-\t\t\t\t\t\t\t  const char *filename)>\n-\t\t\t\t   loop_cb)\n+default_read_core_file_mappings\n+  (struct gdbarch *gdbarch,\n+   struct bfd *cbfd,\n+   read_core_file_mappings_pre_loop_ftype pre_loop_cb,\n+   read_core_file_mappings_loop_ftype loop_cb)\n {\n }\n "
    },
    {
      "sha": "07cc496a02ae45cc525c9616be4b31f4ee20f4cc",
      "filename": "gdb/arch-utils.h",
      "status": "modified",
      "additions": 5,
      "deletions": 10,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/arch-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/arch-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/arch-utils.h?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -295,14 +295,9 @@ extern std::string default_get_pc_address_flags (frame_info *frame,\n \t\t\t\t\t\t CORE_ADDR pc);\n \n /* Default implementation of gdbarch read_core_file_mappings method.  */\n-extern void default_read_core_file_mappings (struct gdbarch *gdbarch,\n-\t\t\t\t\t     struct bfd *cbfd,\n-\t\t\t\t\t     gdb::function_view<void (ULONGEST count)>\n-\t\t\t\t\t       pre_loop_cb,\n-\t\t\t\t\t     gdb::function_view<void (int num,\n-\t\t\t\t\t\t\t\t      ULONGEST start,\n-\t\t\t\t\t\t\t\t      ULONGEST end,\n-\t\t\t\t\t\t\t\t      ULONGEST file_ofs,\n-\t\t\t\t\t\t\t\t      const char *filename)>\n-\t\t\t\t\t       loop_cb);\n+extern void default_read_core_file_mappings\n+  (struct gdbarch *gdbarch,\n+   struct bfd *cbfd,\n+   read_core_file_mappings_pre_loop_ftype pre_loop_cb,\n+   read_core_file_mappings_loop_ftype loop_cb);\n #endif /* ARCH_UTILS_H */"
    },
    {
      "sha": "10942e6af01fe2859ec175922fd52dfed70ef226",
      "filename": "gdb/corelow.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/corelow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/corelow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/corelow.c?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -214,7 +214,7 @@ core_target::build_file_mappings ()\n     /* read_core_file_mappings will invoke this lambda for each mapping\n        that it finds.  */\n     [&] (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs,\n-\t const char *filename)\n+\t const char *filename, const bfd_build_id *build_id)\n       {\n \t/* Architecture-specific read_core_mapping methods are expected to\n \t   weed out non-file-backed mappings.  */"
    },
    {
      "sha": "689187f8b1e5a155a4f1b0ddc66eea6623425ab0",
      "filename": "gdb/gdbarch.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.c?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -5411,7 +5411,7 @@ set_gdbarch_get_pc_address_flags (struct gdbarch *gdbarch,\n }\n \n void\n-gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb)\n+gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, read_core_file_mappings_pre_loop_ftype pre_loop_cb, read_core_file_mappings_loop_ftype loop_cb)\n {\n   gdb_assert (gdbarch != NULL);\n   gdb_assert (gdbarch->read_core_file_mappings != NULL);"
    },
    {
      "sha": "eae5395af9c4ed2ac7c0fb84cc5554d7b2e47261",
      "filename": "gdb/gdbarch.h",
      "status": "modified",
      "additions": 14,
      "deletions": 2,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.h?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -131,6 +131,18 @@ enum class memtag_type\n   allocation,\n };\n \n+/* Callback types for 'read_core_file_mappings' gdbarch method.  */\n+\n+using read_core_file_mappings_pre_loop_ftype =\n+  gdb::function_view<void (ULONGEST count)>;\n+\n+using read_core_file_mappings_loop_ftype =\n+  gdb::function_view<void (int num,\n+\t\t\t   ULONGEST start,\n+\t\t\t   ULONGEST end,\n+\t\t\t   ULONGEST file_ofs,\n+\t\t\t   const char *filename,\n+\t\t\t   const bfd_build_id *build_id)>;\n \n \n /* The following are pre-initialized by GDBARCH.  */\n@@ -1712,8 +1724,8 @@ extern void set_gdbarch_get_pc_address_flags (struct gdbarch *gdbarch, gdbarch_g\n \n /* Read core file mappings */\n \n-typedef void (gdbarch_read_core_file_mappings_ftype) (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb);\n-extern void gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb);\n+typedef void (gdbarch_read_core_file_mappings_ftype) (struct gdbarch *gdbarch, struct bfd *cbfd, read_core_file_mappings_pre_loop_ftype pre_loop_cb, read_core_file_mappings_loop_ftype loop_cb);\n+extern void gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, struct bfd *cbfd, read_core_file_mappings_pre_loop_ftype pre_loop_cb, read_core_file_mappings_loop_ftype loop_cb);\n extern void set_gdbarch_read_core_file_mappings (struct gdbarch *gdbarch, gdbarch_read_core_file_mappings_ftype *read_core_file_mappings);\n \n extern struct gdbarch_tdep *gdbarch_tdep (struct gdbarch *gdbarch);"
    },
    {
      "sha": "83a359b4f599b1c9db47256c11d71610c8caf3e6",
      "filename": "gdb/gdbarch.sh",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/gdbarch.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbarch.sh?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -1210,7 +1210,7 @@ m;ULONGEST;type_align;struct type *type;type;;default_type_align;;0\n f;std::string;get_pc_address_flags;frame_info *frame, CORE_ADDR pc;frame, pc;;default_get_pc_address_flags;;0\n \n # Read core file mappings\n-m;void;read_core_file_mappings;struct bfd *cbfd, gdb::function_view<void (ULONGEST count)> pre_loop_cb, gdb::function_view<void (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs, const char *filename)> loop_cb;cbfd, pre_loop_cb, loop_cb;;default_read_core_file_mappings;;0\n+m;void;read_core_file_mappings;struct bfd *cbfd, read_core_file_mappings_pre_loop_ftype pre_loop_cb, read_core_file_mappings_loop_ftype loop_cb;cbfd, pre_loop_cb, loop_cb;;default_read_core_file_mappings;;0\n \n EOF\n }\n@@ -1402,6 +1402,18 @@ enum class memtag_type\n   allocation,\n };\n \n+/* Callback types for 'read_core_file_mappings' gdbarch method.  */\n+\n+using read_core_file_mappings_pre_loop_ftype =\n+  gdb::function_view<void (ULONGEST count)>;\n+\n+using read_core_file_mappings_loop_ftype =\n+  gdb::function_view<void (int num,\n+\t\t\t   ULONGEST start,\n+\t\t\t   ULONGEST end,\n+\t\t\t   ULONGEST file_ofs,\n+\t\t\t   const char *filename,\n+\t\t\t   const bfd_build_id *build_id)>;\n EOF\n \n # function typedef's"
    },
    {
      "sha": "e2cff83086a77ac734449057eb500b90650a60b5",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 7,
      "deletions": 12,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa95b2d43883666937d31335d0178d2218d9c9aa/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=aa95b2d43883666937d31335d0178d2218d9c9aa",
      "patch": "@@ -1097,16 +1097,11 @@ linux_info_proc (struct gdbarch *gdbarch, const char *args,\n    for each mapping.  */\n \n static void\n-linux_read_core_file_mappings (struct gdbarch *gdbarch,\n-\t\t\t       struct bfd *cbfd,\n-\t\t\t       gdb::function_view<void (ULONGEST count)>\n-\t\t\t\t pre_loop_cb,\n-\t\t\t       gdb::function_view<void (int num,\n-\t\t\t\t\t\t\tULONGEST start,\n-\t\t\t\t\t\t\tULONGEST end,\n-\t\t\t\t\t\t\tULONGEST file_ofs,\n-\t\t\t\t\t\t\tconst char *filename)>\n-\t\t\t\t loop_cb)\n+linux_read_core_file_mappings\n+  (struct gdbarch *gdbarch,\n+   struct bfd *cbfd,\n+   read_core_file_mappings_pre_loop_ftype pre_loop_cb,\n+   read_core_file_mappings_loop_ftype  loop_cb)\n {\n   /* Ensure that ULONGEST is big enough for reading 64-bit core files.  */\n   gdb_static_assert (sizeof (ULONGEST) >= 8);\n@@ -1189,7 +1184,7 @@ linux_read_core_file_mappings (struct gdbarch *gdbarch,\n       char * filename = filenames;\n       filenames += strlen ((char *) filenames) + 1;\n \n-      loop_cb (i, start, end, file_ofs, filename);\n+      loop_cb (i, start, end, file_ofs, filename, nullptr);\n     }\n }\n \n@@ -1218,7 +1213,7 @@ linux_core_info_proc_mappings (struct gdbarch *gdbarch, const char *args)\n \t  }\n       },\n     [=] (int num, ULONGEST start, ULONGEST end, ULONGEST file_ofs,\n-\t const char *filename)\n+\t const char *filename, const bfd_build_id *build_id)\n       {\n \tif (gdbarch_addr_bit (gdbarch) == 32)\n \t  printf_filtered (\"\\t%10s %10s %10s %10s %s\\n\","
    }
  ]
}