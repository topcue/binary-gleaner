{
  "sha": "7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2FkNTc4ODA3YWQyMGFjMTljMGIzMWJmOGI5N2M5OWVhYjFjZTE1ZQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-09-10T12:23:11Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-09-10T12:23:11Z"
    },
    "message": "Stop symbols generated by the annobin gcc plugin from breaking the disassembly of PowerPC binaries.\n\n\t* ppc-dis.c (ppc_symbol_is_valid): New function.  Returns false\n\tfor hidden, local, no-type symbols.\n\t(disassemble_init_powerpc): Point the symbol_is_valid field in the\n\tinfo structure at the new function.",
    "tree": {
      "sha": "86289cde8b5b130a48206020921471b10a8e8035",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/86289cde8b5b130a48206020921471b10a8e8035"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "89ce8eab23ac49c8c990c1934d2dff84841990af",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89ce8eab23ac49c8c990c1934d2dff84841990af",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89ce8eab23ac49c8c990c1934d2dff84841990af"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 31,
    "deletions": 0
  },
  "files": [
    {
      "sha": "d4d1865b584813111c3ad5a43f2c977db94f85ea",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* ppc-dis.c (ppc_symbol_is_valid): New function.  Returns false\n+\tfor hidden, local, no-type symbols.\n+\t(disassemble_init_powerpc): Point the symbol_is_valid field in the\n+\tinfo structure at the new function.\n+\n 2020-09-10  Cooper Qu  <cooper.qu@linux.alibaba.com>\n \n \t* csky-opc.h (csky_v2_opcodes): Add L2Cache instructions."
    },
    {
      "sha": "4e8e3cb462835bbdb9e87b6af40c5fdeaf86d3b8",
      "filename": "opcodes/ppc-dis.c",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e/opcodes/ppc-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7ad578807ad20ac19c0b31bf8b97c99eab1ce15e/opcodes/ppc-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ppc-dis.c?ref=7ad578807ad20ac19c0b31bf8b97c99eab1ce15e",
      "patch": "@@ -399,12 +399,36 @@ static unsigned short vle_opcd_indices[VLE_OPCD_SEGS + 1];\n #define SPE2_OPCD_SEGS (1 + SPE2_XOP_TO_SEG (SPE2_XOP (-1)))\n static unsigned short spe2_opcd_indices[SPE2_OPCD_SEGS + 1];\n \n+static bfd_boolean\n+ppc_symbol_is_valid (asymbol *sym,\n+\t\t     struct disassemble_info *info ATTRIBUTE_UNUSED)\n+{\n+  elf_symbol_type * est;\n+\n+  if (sym == NULL)\n+    return FALSE;\n+\n+  est = elf_symbol_from (NULL, sym);\n+  \n+  /* Ignore ELF hidden, local, no-type symbols.\n+     These are generated by annobin.  */\n+  if (est != NULL\n+      && ELF_ST_VISIBILITY (est->internal_elf_sym.st_other) == STV_HIDDEN\n+      && ELF_ST_BIND (est->internal_elf_sym.st_info) == STB_LOCAL\n+      && ELF_ST_TYPE (est->internal_elf_sym.st_info) == STT_NOTYPE)\n+    return FALSE;\n+\n+  return TRUE;\n+}\n+\n /* Calculate opcode table indices to speed up disassembly,\n    and init dialect.  */\n \n void\n disassemble_init_powerpc (struct disassemble_info *info)\n {\n+  info->symbol_is_valid = ppc_symbol_is_valid;\n+\n   if (powerpc_opcd_indices[PPC_OPCD_SEGS] == 0)\n     {\n       unsigned seg, idx, op;"
    }
  ]
}