{
  "sha": "999a4952a2f32e60769b2c3baefb274613754e6d",
  "node_id": "C_kwDOANOeidoAKDk5OWE0OTUyYTJmMzJlNjA3NjliMmMzYmFlZmIyNzQ2MTM3NTRlNmQ",
  "commit": {
    "author": {
      "name": "Christina Schimpe",
      "email": "christina.schimpe@intel.com",
      "date": "2021-11-16T09:58:10Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2021-11-19T11:29:43Z"
    },
    "message": "gdb: Print cv qualifiers if class attributes are substituted\n\nMake ptype print const/volatile qualifiers when template or typedef\nattributes are substituted.\n\nFor a programm like\n~~~\ntemplate<typename DataT>\nclass Cfoo\n{\n  typedef float myfloat;\npublic:\n  DataT me0;\n  const DataT me1=1;\n  const myfloat me2=2.0;\n};\n\nint main()\n{\n  Cfoo<int> cfoo;\n  return 0;\n}\n~~~\n\ngdb outputs the following type for cfoo's attributes:\n\n~~~\n(gdb) b 14\nBreakpoint 1 at 0x1170: file tmp.cc, line 14.\n(gdb) run\nStarting program: /tmp\n\nBreakpoint 1, main () at tmp.cc:14\n14        return 0;\n(gdb) ptype cfoo\ntype = class Cfoo<int> [with DataT = int] {\n  public:\n    DataT me0;\n    DataT me1;\n    myfloat me2;\n\n  private:\n    typedef float myfloat;\n}\n\n~~~\n\nThe cv qualifiers (const in this case) are ignored for me1 and me2.\n\nAfter:\n~~~\n(gdb) ptype cfoo\ntype = class Cfoo<int> [with DataT = int] {\n  public:\n    DataT me0;\n    const DataT me1;\n    const myfloat me2;\n\n  private:\n    typedef float myfloat;\n}\n~~~\n\ngdb/ChangeLog:\n2021-11-16  Christina Schimpe  <christina.schimpe@intel.com>\n\n\t* gdb/c-typeprint.c: Print cv qualifiers in case of parameter\n\t  substitution.\n\ngdb/testsuite/ChangeLog:\n2021-11-16  Christina Schimpe  <christina.schimpe@intel.com>\n\n\t* gdb.cp/templates.cc: \tNew template class Cfoo with const,\n\t  template, typdef and integer attributes.\n\t* gdb.cp/templates.exp: Add new test using ptype and ptype/r\n\t  commmands for template class CFoo.",
    "tree": {
      "sha": "7541a704d797dafd5b8f913b119b073d9db98cfa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7541a704d797dafd5b8f913b119b073d9db98cfa"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/999a4952a2f32e60769b2c3baefb274613754e6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/999a4952a2f32e60769b2c3baefb274613754e6d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/999a4952a2f32e60769b2c3baefb274613754e6d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/999a4952a2f32e60769b2c3baefb274613754e6d/comments",
  "author": {
    "login": "SchChristina",
    "id": 89983158,
    "node_id": "MDQ6VXNlcjg5OTgzMTU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/89983158?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SchChristina",
    "html_url": "https://github.com/SchChristina",
    "followers_url": "https://api.github.com/users/SchChristina/followers",
    "following_url": "https://api.github.com/users/SchChristina/following{/other_user}",
    "gists_url": "https://api.github.com/users/SchChristina/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SchChristina/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SchChristina/subscriptions",
    "organizations_url": "https://api.github.com/users/SchChristina/orgs",
    "repos_url": "https://api.github.com/users/SchChristina/repos",
    "events_url": "https://api.github.com/users/SchChristina/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SchChristina/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": null,
  "parents": [
    {
      "sha": "d3ffd7f77654adafe5f1989bdfdbe4a337ff2e8b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d3ffd7f77654adafe5f1989bdfdbe4a337ff2e8b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d3ffd7f77654adafe5f1989bdfdbe4a337ff2e8b"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 51,
    "deletions": 0
  },
  "files": [
    {
      "sha": "a6228248e9ebd24efec1cf6ac5889c7365837257",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=999a4952a2f32e60769b2c3baefb274613754e6d",
      "patch": "@@ -119,6 +119,7 @@ c_print_type_1 (struct type *type,\n   code = type->code ();\n   if (local_name != NULL)\n     {\n+      c_type_print_modifier (type, stream, 0, 1, language);\n       fputs_filtered (local_name, stream);\n       if (varstring != NULL && *varstring != '\\0')\n \tfputs_filtered (\" \", stream);"
    },
    {
      "sha": "d5b24af3a4ecc3b09182280f942699ac33596a90",
      "filename": "gdb/testsuite/gdb.cp/templates.cc",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/testsuite/gdb.cp/templates.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/testsuite/gdb.cp/templates.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/templates.cc?ref=999a4952a2f32e60769b2c3baefb274613754e6d",
      "patch": "@@ -690,6 +690,18 @@ int gf2 (int a) {\n \n char string[3];\n \n+// Template class with typedefs and const attributes.\n+template<typename DataT>\n+class Cfoo\n+{\n+  typedef float myfloat;\n+public:\n+  DataT me0;\n+  const DataT me1=1;\n+  const myfloat me2=2.0;\n+  const int me3=0;\n+};\n+\n \n // Template for nested instantiations\n \n@@ -778,6 +790,8 @@ int main()\n   sic.spec ('c');\n   siip.spec (&x);\n \n+  Cfoo<double> cfoo;\n+\n   Garply<int> f;\n   Garply<char> fc;\n   f.x = 13;"
    },
    {
      "sha": "5f0538d8d4b5db30f2ea80f73cddb450675a2f6c",
      "filename": "gdb/testsuite/gdb.cp/templates.exp",
      "status": "modified",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/testsuite/gdb.cp/templates.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/999a4952a2f32e60769b2c3baefb274613754e6d/gdb/testsuite/gdb.cp/templates.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.cp/templates.exp?ref=999a4952a2f32e60769b2c3baefb274613754e6d",
      "patch": "@@ -547,6 +547,42 @@ gdb_test_multiple \"ptype/r siip\" \"ptype siip\" {\n     }\n }\n \n+# Check cv qualifiers and substitute parameters.\n+\n+if {[test_compiler_info {clang-*}]} {\n+\tsetup_kfail \"llvm/52262 \" \"*-*-*\"\n+}\n+gdb_test \"ptype cfoo\" [multi_line \\\n+\"type = (class |)Cfoo<double> \\\\\\[with DataT = double\\\\\\] \\\\{\" \\\n+  \"\\[ \\t\\]*public:\" \\\n+    \"\\[ \\t\\]*DataT me0;\" \\\n+    \"\\[ \\t\\]*const DataT me1;\" \\\n+    \"\\[ \\t\\]*const myfloat me2;\" \\\n+    \"\\[ \\t\\]*const int me3;\" \\\n+    \"\" \\\n+  \"\\[ \\t\\]*private:\" \\\n+    \"\\[ \\t\\]*typedef float myfloat;\" \\\n+\"\\\\}\" \\\n+] \"print type of cfoo\"\n+\n+# Check cv qualifiers and do not substitute.\n+\n+if {[test_compiler_info {clang-*}]} {\n+\tsetup_kfail \"llvm/52262 \" \"*-*-*\"\n+}\n+gdb_test \"ptype/r cfoo\" [multi_line \\\n+\"type = (class |)Cfoo<double> \\\\{\" \\\n+  \"\\[ \\t\\]*public:\" \\\n+    \"\\[ \\t\\]*double me0;\" \\\n+    \"\\[ \\t\\]*const double me1;\" \\\n+    \"\\[ \\t\\]*const Cfoo<double>::myfloat me2;\" \\\n+    \"\\[ \\t\\]*const int me3;\" \\\n+    \"\" \\\n+  \"\\[ \\t\\]*private:\" \\\n+    \"\\[ \\t\\]*typedef float myfloat;\" \\\n+\"\\\\}\" \\\n+] \"print raw type of cfoo\"\n+\n # pt Garply<int>\n \n gdb_test_multiple \"ptype/r Garply<int>\" \"ptype Garply<int>\" {"
    }
  ]
}