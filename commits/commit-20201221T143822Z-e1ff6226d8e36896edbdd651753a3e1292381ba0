{
  "sha": "e1ff6226d8e36896edbdd651753a3e1292381ba0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTFmZjYyMjZkOGUzNjg5NmVkYmRkNjUxNzUzYTNlMTI5MjM4MWJhMA==",
  "commit": {
    "author": {
      "name": "Peter Waller",
      "email": "p@pwaller.net",
      "date": "2020-12-21T14:38:07Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-12-21T14:38:22Z"
    },
    "message": "Preserve gdb_std{out, err, log, targ, targerr} across interpreter_exec_cmd\n\nCalls through interpreter_exec_cmd can cause the output state to be modified in\na way which doesn't get back after the execution.\n\nIt looks like the intent is that interp::resume should put things back how they\nshould be, however, mi_interp::resume modifies gdb_stdout and nothing currently\nrestores it to the previous state.\n\nTo see the broken behaviour:\n\n  gdb -ex starti -ex bt -ex 'interpreter-exec mi echo' -ex bt -ex q echo <<<''\n\nPrior to this patch, on a terminal environment, the first backtrace is\ncoloured, and the second backtrace is not. The reason is that\nstdio_file::can_emit_style_escape becomes false, because the gdb_stdout gets\noverwritten in mi_interp::resume and not replaced.\n\ngdb/ChangeLog:\n\n\t* interps.c (interpreter_exec_cmd): Restore streams pointers.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/style-interp-exec-mi.exp: New.\n\t* gdb.base/style-interp-exec-mi.c: New.\n\nSigned-off-by: Peter Waller <p@pwaller.net>\nChange-Id: Id87423b262d058857ea9dca5866ca6471741e512",
    "tree": {
      "sha": "c30ef5fba5cf64bd5d6ae951132b0b2880643623",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c30ef5fba5cf64bd5d6ae951132b0b2880643623"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e1ff6226d8e36896edbdd651753a3e1292381ba0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1ff6226d8e36896edbdd651753a3e1292381ba0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e1ff6226d8e36896edbdd651753a3e1292381ba0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e1ff6226d8e36896edbdd651753a3e1292381ba0/comments",
  "author": {
    "login": "pwaller",
    "id": 438648,
    "node_id": "MDQ6VXNlcjQzODY0OA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/438648?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pwaller",
    "html_url": "https://github.com/pwaller",
    "followers_url": "https://api.github.com/users/pwaller/followers",
    "following_url": "https://api.github.com/users/pwaller/following{/other_user}",
    "gists_url": "https://api.github.com/users/pwaller/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pwaller/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pwaller/subscriptions",
    "organizations_url": "https://api.github.com/users/pwaller/orgs",
    "repos_url": "https://api.github.com/users/pwaller/repos",
    "events_url": "https://api.github.com/users/pwaller/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pwaller/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca01f1bf3d9e5f5bcddf72bd83f574395e859d1c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca01f1bf3d9e5f5bcddf72bd83f574395e859d1c",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca01f1bf3d9e5f5bcddf72bd83f574395e859d1c"
    }
  ],
  "stats": {
    "total": 85,
    "additions": 85,
    "deletions": 0
  },
  "files": [
    {
      "sha": "a3aabb506826159ec3a1b1eae30de47aa9e2c1d9",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e1ff6226d8e36896edbdd651753a3e1292381ba0",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-21  Peter Waller  <p@pwaller.net>\n+\n+\t* interps.c (interpreter_exec_cmd): Restore streams pointers.\n+\n 2020-12-21  Markus Metzger  <markus.t.metzger@intel.com>\n \n \t* record.c (require_record_target): Rephrase error message."
    },
    {
      "sha": "e186a73678631a1711956c4893c52544349d8857",
      "filename": "gdb/interps.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/interps.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/interps.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/interps.c?ref=e1ff6226d8e36896edbdd651753a3e1292381ba0",
      "patch": "@@ -370,6 +370,14 @@ interpreter_exec_cmd (const char *args, int from_tty)\n   unsigned int nrules;\n   unsigned int i;\n \n+  /* Interpreters may clobber stdout/stderr (e.g.  in mi_interp::resume at time\n+     of writing), preserve their state here.  */\n+  scoped_restore save_stdout = make_scoped_restore (&gdb_stdout);\n+  scoped_restore save_stderr = make_scoped_restore (&gdb_stderr);\n+  scoped_restore save_stdlog = make_scoped_restore (&gdb_stdlog);\n+  scoped_restore save_stdtarg = make_scoped_restore (&gdb_stdtarg);\n+  scoped_restore save_stdtargerr = make_scoped_restore (&gdb_stdtargerr);\n+\n   if (args == NULL)\n     error_no_arg (_(\"interpreter-exec command\"));\n "
    },
    {
      "sha": "da1f22dfd382b3ac70d7672d3169c0085d6c7e20",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e1ff6226d8e36896edbdd651753a3e1292381ba0",
      "patch": "@@ -1,3 +1,8 @@\n+2020-12-21  Peter Waller  <p@pwaller.net>\n+\n+\t* gdb.base/style-interp-exec-mi.exp: New.\n+\t* gdb.base/style-interp-exec-mi.c: New.\n+\n 2020-12-21  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* gdb.base/list.exp: Replace send_gdb + gdb_expect with"
    },
    {
      "sha": "9d7b2f1a4c28b1c5298708fddf4c8c8ed2f11675",
      "filename": "gdb/testsuite/gdb.base/style-interp-exec-mi.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/gdb.base/style-interp-exec-mi.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/gdb.base/style-interp-exec-mi.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style-interp-exec-mi.c?ref=e1ff6226d8e36896edbdd651753a3e1292381ba0",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "f3f010e24a457a7e062ed08f3d6ad474eb73b106",
      "filename": "gdb/testsuite/gdb.base/style-interp-exec-mi.exp",
      "status": "added",
      "additions": 46,
      "deletions": 0,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/gdb.base/style-interp-exec-mi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e1ff6226d8e36896edbdd651753a3e1292381ba0/gdb/testsuite/gdb.base/style-interp-exec-mi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/style-interp-exec-mi.exp?ref=e1ff6226d8e36896edbdd651753a3e1292381ba0",
      "patch": "@@ -0,0 +1,46 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# It was observed that when doing:\n+#\n+#   - backtrace\n+#   - an \"interpreter-exec mi\" command\n+#   - backtrace again\n+#\n+# The second backtrace would not be styled.  This test tests that.\n+\n+standard_testfile\n+\n+save_vars { env(TERM) } {\n+    # We need an ANSI-capable terminal to get the output.\n+    setenv TERM ansi\n+\n+    if { [prepare_for_testing \"failed to prepare\" \\\n+\t    ${testfile} ${srcfile}] } {\n+\treturn\n+    }\n+\n+    if { ![runto_main] } {\n+\tuntested \"could not run to main\"\n+\treturn\n+    }\n+\n+    gdb_test_no_output \"set style enabled on\"\n+    set main_expr [style main function]\n+    gdb_test \"backtrace\" \".* ${main_expr} .*\" \"backtrace before\"\n+    gdb_test \"interpreter-exec mi \\\"-data-evaluate-expression 1\\\"\" \\\n+\t\"\\\\^done,value=\\\"1\\\"\"\n+    gdb_test \"backtrace\" \".* ${main_expr} .*\" \"backtrace after\"\n+}"
    }
  ]
}