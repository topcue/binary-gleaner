{
  "sha": "7b466b10241f3971ab628ace1e75cf1166209af5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2I0NjZiMTAyNDFmMzk3MWFiNjI4YWNlMWU3NWNmMTE2NjIwOWFmNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-10-12T21:53:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-10-13T02:18:47Z"
    },
    "message": "Introduce target-section.h\n\nThis introduces a new target-section.h file.  This makes some of the\nlater patches in this series a bit cleaner, because new includes of\ntarget.h won't be required.  Also I think it's better to have small\nheader files for each separate data structure.\n\ngdb/ChangeLog\n2020-10-12  Tom Tromey  <tom@tromey.com>\n\n\t* target.h (struct target_section, struct target_section_table):\n\tMove to target-section.h.\n\t* target-section.h: New file.",
    "tree": {
      "sha": "06eb7d269f6118294733fff4b6b6cbddf0e30762",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06eb7d269f6118294733fff4b6b6cbddf0e30762"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7b466b10241f3971ab628ace1e75cf1166209af5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b466b10241f3971ab628ace1e75cf1166209af5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7b466b10241f3971ab628ace1e75cf1166209af5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7b466b10241f3971ab628ace1e75cf1166209af5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af1b7b51595f47d2672e4fcbc9fa4c641e4a501e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af1b7b51595f47d2672e4fcbc9fa4c641e4a501e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af1b7b51595f47d2672e4fcbc9fa4c641e4a501e"
    }
  ],
  "stats": {
    "total": 87,
    "additions": 60,
    "deletions": 27
  },
  "files": [
    {
      "sha": "96d57c7780fcf10a83d8222143d879f4db81949b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7b466b10241f3971ab628ace1e75cf1166209af5",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-12  Tom Tromey  <tom@tromey.com>\n+\n+\t* target.h (struct target_section, struct target_section_table):\n+\tMove to target-section.h.\n+\t* target-section.h: New file.\n+\n 2020-10-12  Pedro Alves  <pedro@palves.net>\n \n \tPR exp/26602"
    },
    {
      "sha": "ff81675d7ebaf80e3136fc3f259650bbc1b92fa1",
      "filename": "gdb/target-section.h",
      "status": "added",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/target-section.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/target-section.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-section.h?ref=7b466b10241f3971ab628ace1e75cf1166209af5",
      "patch": "@@ -0,0 +1,53 @@\n+/* Target sections.\n+\n+   Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GDB_TARGET_SECTION_H\n+#define GDB_TARGET_SECTION_H\n+\n+/* Struct target_section maps address ranges to file sections.  It is\n+   mostly used with BFD files, but can be used without (e.g. for handling\n+   raw disks, or files not in formats handled by BFD).  */\n+\n+struct target_section\n+{\n+  /* Lowest address in section.  */\n+  CORE_ADDR addr;\n+  /* Highest address in section, plus 1.  */\n+  CORE_ADDR endaddr;\n+\n+  /* The BFD section.  */\n+  struct bfd_section *the_bfd_section;\n+\n+  /* The \"owner\" of the section.\n+     It can be any unique value.  It is set by add_target_sections\n+     and used by remove_target_sections.\n+     For example, for executables it is a pointer to exec_bfd and\n+     for shlibs it is the so_list pointer.  */\n+  void *owner;\n+};\n+\n+/* Holds an array of target sections.  Defined by [SECTIONS..SECTIONS_END[.  */\n+\n+struct target_section_table\n+{\n+  struct target_section *sections;\n+  struct target_section *sections_end;\n+};\n+\n+#endif /* GDB_TARGET_SECTION_H */"
    },
    {
      "sha": "cf0a296075d429eb0b6552633650bef82dc2bce2",
      "filename": "gdb/target.h",
      "status": "modified",
      "additions": 1,
      "deletions": 27,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7b466b10241f3971ab628ace1e75cf1166209af5/gdb/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.h?ref=7b466b10241f3971ab628ace1e75cf1166209af5",
      "patch": "@@ -44,6 +44,7 @@ struct inferior;\n #include \"breakpoint.h\" /* For enum bptype.  */\n #include \"gdbsupport/scoped_restore.h\"\n #include \"gdbsupport/refcounted-object.h\"\n+#include \"target-section.h\"\n \n /* This include file defines the interface between the main part\n    of the debugger, and the part which is target-specific, or\n@@ -2405,33 +2406,6 @@ extern bool target_is_pushed (target_ops *t);\n extern CORE_ADDR target_translate_tls_address (struct objfile *objfile,\n \t\t\t\t\t       CORE_ADDR offset);\n \n-/* Struct target_section maps address ranges to file sections.  It is\n-   mostly used with BFD files, but can be used without (e.g. for handling\n-   raw disks, or files not in formats handled by BFD).  */\n-\n-struct target_section\n-  {\n-    CORE_ADDR addr;\t\t/* Lowest address in section */\n-    CORE_ADDR endaddr;\t\t/* 1+highest address in section */\n-\n-    struct bfd_section *the_bfd_section;\n-\n-    /* The \"owner\" of the section.\n-       It can be any unique value.  It is set by add_target_sections\n-       and used by remove_target_sections.\n-       For example, for executables it is a pointer to exec_bfd and\n-       for shlibs it is the so_list pointer.  */\n-    void *owner;\n-  };\n-\n-/* Holds an array of target sections.  Defined by [SECTIONS..SECTIONS_END[.  */\n-\n-struct target_section_table\n-{\n-  struct target_section *sections;\n-  struct target_section *sections_end;\n-};\n-\n /* Return the \"section\" containing the specified address.  */\n struct target_section *target_section_by_addr (struct target_ops *target,\n \t\t\t\t\t       CORE_ADDR addr);"
    }
  ]
}