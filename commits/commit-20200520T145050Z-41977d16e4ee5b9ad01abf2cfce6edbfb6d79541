{
  "sha": "41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDE5NzdkMTZlNGVlNWI5YWQwMWFiZjJjZmNlNmVkYmZiNmQ3OTU0MQ==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-20T14:50:39Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-20T14:50:50Z"
    },
    "message": "gdb/testsuite: check mmap ret val against MAP_FAILED\n\nFixup a few spots in the testsuite that use mmap to consistently check\nthe return value against MAP_FAILED.\n\nOne spot in gdb.base/coredump-filter.c checked against NULL, that is\nwrong.  The other spots either didn't check, or checked against -1.\nMAP_FAILED has the value -1, at least on Linux, but it's better to check\nagainst the documented define.\n\ngdb/testsuite/ChangeLog:\n\n\tPR gdb/26016\n\t* gdb.base/coredump-filter.c (do_mmap): Check mmap ret val\n\tagainst MAP_FAILED.\n\t* gdb.base/coremaker.c (mmapdata): Likewise.\n\t* gdb.base/jit-reader-host.c (main): Likewise.\n\t* gdb.base/sym-file-loader.c (load): Likewise.\n\t(load_shlib): Likewise.",
    "tree": {
      "sha": "46af3678d259d1b8b736c473707c5997c34bf0d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/46af3678d259d1b8b736c473707c5997c34bf0d3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b4757f2e45f292c9f0e48e8dbdc003e5dbfca5ed",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b4757f2e45f292c9f0e48e8dbdc003e5dbfca5ed",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b4757f2e45f292c9f0e48e8dbdc003e5dbfca5ed"
    }
  ],
  "stats": {
    "total": 22,
    "additions": 19,
    "deletions": 3
  },
  "files": [
    {
      "sha": "050a793ed05db2eca638e29d817b26360b43fce7",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -1,3 +1,13 @@\n+2020-05-20  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\tPR gdb/26016\n+\t* gdb.base/coredump-filter.c (do_mmap): Check mmap ret val\n+\tagainst MAP_FAILED.\n+\t* gdb.base/coremaker.c (mmapdata): Likewise.\n+\t* gdb.base/jit-reader-host.c (main): Likewise.\n+\t* gdb.base/sym-file-loader.c (load): Likewise.\n+\t(load_shlib): Likewise.\n+\n 2020-05-20  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/array_char_idx.exp: Recognize initialized array."
    },
    {
      "sha": "5786c6fe0982dee6c594c7764a5dbe9904464518",
      "filename": "gdb/testsuite/gdb.base/coredump-filter.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/coredump-filter.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/coredump-filter.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/coredump-filter.c?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -29,7 +29,7 @@ do_mmap (void *addr, size_t size, int prot, int flags, int fd, off_t offset)\n {\n   void *ret = mmap (addr, size, prot, flags, fd, offset);\n \n-  assert (ret != NULL);\n+  assert (ret != MAP_FAILED);\n   return ret;\n }\n "
    },
    {
      "sha": "3cc97e1e8e5931dfdfd49cf718a780b4693dfafd",
      "filename": "gdb/testsuite/gdb.base/coremaker.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/coremaker.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/coremaker.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/coremaker.c?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -77,7 +77,7 @@ mmapdata ()\n   /* Now map the file into our address space as buf2 */\n \n   buf2 = (char *) mmap (0, MAPSIZE, PROT_READ | PROT_WRITE, MAP_PRIVATE, fd, 0);\n-  if (buf2 == (char *) -1)\n+  if (buf2 == (char *) MAP_FAILED)\n     {\n       perror (\"mmap failed\");\n       return;"
    },
    {
      "sha": "0cf653f1fb2241b77b020337e470bc97e9cbab31",
      "filename": "gdb/testsuite/gdb.base/jit-reader-host.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/jit-reader-host.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/jit-reader-host.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/jit-reader-host.c?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -15,6 +15,7 @@\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n+#include <assert.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n@@ -59,6 +60,8 @@ main (int argc, char **argv)\n \t\t     MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n   char *code_end = code;\n \n+  assert (code != MAP_FAILED);\n+\n   /* \"JIT\" function_stack_mangle.  */\n   memcpy (code_end, jit_function_stack_mangle_code,\n \t  sizeof (jit_function_stack_mangle_code));"
    },
    {
      "sha": "c8074b8489110c606aef140d35bae780538ae2f1",
      "filename": "gdb/testsuite/gdb.base/sym-file-loader.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/sym-file-loader.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/41977d16e4ee5b9ad01abf2cfce6edbfb6d79541/gdb/testsuite/gdb.base/sym-file-loader.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/sym-file-loader.c?ref=41977d16e4ee5b9ad01abf2cfce6edbfb6d79541",
      "patch": "@@ -20,6 +20,7 @@\n #include <stdlib.h>\n #include <string.h>\n #include <sys/mman.h>\n+#include <assert.h>\n \n #include \"sym-file-loader.h\"\n \n@@ -112,6 +113,8 @@ load (uint8_t *addr, Elf_External_Phdr *phdr, struct segment *tail_seg)\n   mapped_addr = (uint8_t *) mmap ((void *) GETADDR (phdr, p_vaddr),\n \t\t\t\t  GET (phdr, p_memsz), perm,\n \t\t\t\t  MAP_ANONYMOUS | MAP_PRIVATE, -1, 0);\n+  assert (mapped_addr != MAP_FAILED);\n+\n   mapped_size = GET (phdr, p_memsz);\n \n   from = (void *) (addr + GET (phdr, p_offset));\n@@ -255,7 +258,7 @@ load_shlib (const char *file)\n     }\n \n   addr = (uint8_t *) mmap (NULL, fsize, PROT_READ, MAP_PRIVATE, fd, 0);\n-  if (addr == (uint8_t *) -1)\n+  if (addr == MAP_FAILED)\n     {\n       perror (\"mmap failed.\");\n       return NULL;"
    }
  ]
}