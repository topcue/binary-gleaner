{
  "sha": "ba0084966cfee307631aba6d0f052a39ad773909",
  "node_id": "C_kwDOANOeidoAKGJhMDA4NDk2NmNmZWUzMDc2MzFhYmE2ZDBmMDUyYTM5YWQ3NzM5MDk",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-22T17:30:16Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-12-29T17:24:05Z"
    },
    "message": "Remove unusual use of core_addr_eq and core_addr_hash\n\ngdbtypes.h uses core_addr_eq and core_addr_hash in a weird way: taking\nthe address of a member and then passing this (as a void*) to these\nfunctions.\n\nIt seems better to simply inline the ordinary code here.  CORE_ADDR is\na scalar so it can be directly compared, and the identity hash\nfunction seems safe to assume as well.\n\nAfter this, core_addr_eq and core_addr_hash are unused, so this patch\nremoves them.",
    "tree": {
      "sha": "63012fc81a9af3914b8f5368803dc52a76383b8f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/63012fc81a9af3914b8f5368803dc52a76383b8f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ba0084966cfee307631aba6d0f052a39ad773909",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba0084966cfee307631aba6d0f052a39ad773909",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ba0084966cfee307631aba6d0f052a39ad773909",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ba0084966cfee307631aba6d0f052a39ad773909/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "003aae076207dbf32f98ba846158fc32669ef85f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/003aae076207dbf32f98ba846158fc32669ef85f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/003aae076207dbf32f98ba846158fc32669ef85f"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 2,
    "deletions": 27
  },
  "files": [
    {
      "sha": "35549a846209ad0dfa62b083b39d3a4fee3e41a7",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba0084966cfee307631aba6d0f052a39ad773909/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba0084966cfee307631aba6d0f052a39ad773909/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=ba0084966cfee307631aba6d0f052a39ad773909",
      "patch": "@@ -1910,13 +1910,13 @@ struct call_site\n     static int\n     eq (const call_site *a, const call_site *b)\n     {\n-      return core_addr_eq (&a->m_unrelocated_pc, &b->m_unrelocated_pc);\n+      return a->m_unrelocated_pc == b->m_unrelocated_pc;\n     }\n \n     static hashval_t\n     hash (const call_site *a)\n     {\n-      return core_addr_hash (&a->m_unrelocated_pc);\n+      return a->m_unrelocated_pc;\n     }\n \n     static int"
    },
    {
      "sha": "eba1acbc8f6a5614442bd2652c43c958b60caebb",
      "filename": "gdb/utils.c",
      "status": "modified",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba0084966cfee307631aba6d0f052a39ad773909/gdb/utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba0084966cfee307631aba6d0f052a39ad773909/gdb/utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.c?ref=ba0084966cfee307631aba6d0f052a39ad773909",
      "patch": "@@ -2837,27 +2837,6 @@ print_core_address (struct gdbarch *gdbarch, CORE_ADDR address)\n     return hex_string_custom (address, 16);\n }\n \n-/* Callback hash_f for htab_create_alloc or htab_create_alloc_ex.  */\n-\n-hashval_t\n-core_addr_hash (const void *ap)\n-{\n-  const CORE_ADDR *addrp = (const CORE_ADDR *) ap;\n-\n-  return *addrp;\n-}\n-\n-/* Callback eq_f for htab_create_alloc or htab_create_alloc_ex.  */\n-\n-int\n-core_addr_eq (const void *ap, const void *bp)\n-{\n-  const CORE_ADDR *addr_ap = (const CORE_ADDR *) ap;\n-  const CORE_ADDR *addr_bp = (const CORE_ADDR *) bp;\n-\n-  return *addr_ap == *addr_bp;\n-}\n-\n /* Convert a string back into a CORE_ADDR.  */\n CORE_ADDR\n string_to_core_addr (const char *my_string)"
    },
    {
      "sha": "54cf090974a29fb7aca4427f83be8a7dc1a2fdaa",
      "filename": "gdb/utils.h",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ba0084966cfee307631aba6d0f052a39ad773909/gdb/utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ba0084966cfee307631aba6d0f052a39ad773909/gdb/utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/utils.h?ref=ba0084966cfee307631aba6d0f052a39ad773909",
      "patch": "@@ -541,10 +541,6 @@ extern const char *paddress (struct gdbarch *gdbarch, CORE_ADDR addr);\n extern const char *print_core_address (struct gdbarch *gdbarch,\n \t\t\t\t       CORE_ADDR address);\n \n-/* Callback hash_f and eq_f for htab_create_alloc or htab_create_alloc_ex.  */\n-extern hashval_t core_addr_hash (const void *ap);\n-extern int core_addr_eq (const void *ap, const void *bp);\n-\n extern CORE_ADDR string_to_core_addr (const char *my_string);\n \n extern void fprintf_symbol_filtered (struct ui_file *, const char *,"
    }
  ]
}