{
  "sha": "456e800a63def18484f69a51f59c2338a5cc4568",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDU2ZTgwMGE2M2RlZjE4NDg0ZjY5YTUxZjU5YzIzMzhhNWNjNDU2OA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2019-10-31T16:46:18Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2020-01-08T18:17:18Z"
    },
    "message": "Use std::string in dwarf2read.c\n\nThis replaces two instances of manual string management in\ndwarf2read.c with std::string.\n\ngdb/ChangeLog\n2020-01-08  Tom Tromey  <tromey@adacore.com>\n\n\t* dwarf2read.c (parse_macro_definition): Use std::string.\n\t(parse_macro_definition): Likewise.\n\nChange-Id: Iec437100105484aa4a116fb5d651d7ed52ee9d81",
    "tree": {
      "sha": "c55fe313258a4cacd3237f33355f86b3bf55934f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c55fe313258a4cacd3237f33355f86b3bf55934f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/456e800a63def18484f69a51f59c2338a5cc4568",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/456e800a63def18484f69a51f59c2338a5cc4568",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/456e800a63def18484f69a51f59c2338a5cc4568",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/456e800a63def18484f69a51f59c2338a5cc4568/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6dfa2fc20773615c3a08c3565974dcfdfa36f052",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6dfa2fc20773615c3a08c3565974dcfdfa36f052",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6dfa2fc20773615c3a08c3565974dcfdfa36f052"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 10,
    "deletions": 8
  },
  "files": [
    {
      "sha": "9733a106222f48b8e41c7ff3516fcb7a8f68a733",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/456e800a63def18484f69a51f59c2338a5cc4568/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/456e800a63def18484f69a51f59c2338a5cc4568/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=456e800a63def18484f69a51f59c2338a5cc4568",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-08  Tom Tromey  <tromey@adacore.com>\n+\n+\t* dwarf2read.c (parse_macro_definition): Use std::string.\n+\t(parse_macro_definition): Likewise.\n+\n 2020-01-08  Tom Tromey  <tromey@adacore.com>\n \n \t* dwarf2read.c (abbrev_table_read_table): Use std::vector."
    },
    {
      "sha": "40af0b975ba85d22058cd0c25002e2573494bb02",
      "filename": "gdb/dwarf2read.c",
      "status": "modified",
      "additions": 5,
      "deletions": 8,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/456e800a63def18484f69a51f59c2338a5cc4568/gdb/dwarf2read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/456e800a63def18484f69a51f59c2338a5cc4568/gdb/dwarf2read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2read.c?ref=456e800a63def18484f69a51f59c2338a5cc4568",
      "patch": "@@ -24570,7 +24570,7 @@ parse_macro_definition (struct macro_source_file *file, int line,\n     {\n       /* It's an object-like macro.  */\n       int name_len = p - body;\n-      char *name = savestring (body, name_len);\n+      std::string name (body, name_len);\n       const char *replacement;\n \n       if (*p == ' ')\n@@ -24581,14 +24581,12 @@ parse_macro_definition (struct macro_source_file *file, int line,\n           replacement = body + name_len;\n         }\n \n-      macro_define_object (file, line, name, replacement);\n-\n-      xfree (name);\n+      macro_define_object (file, line, name.c_str (), replacement);\n     }\n   else if (*p == '(')\n     {\n       /* It's a function-like macro.  */\n-      char *name = savestring (body, p - body);\n+      std::string name (body, p - body);\n       int argc = 0;\n       int argv_size = 1;\n       char **argv = XNEWVEC (char *, argv_size);\n@@ -24637,14 +24635,14 @@ parse_macro_definition (struct macro_source_file *file, int line,\n \n           if (*p == ' ')\n             /* Perfectly formed definition, no complaints.  */\n-            macro_define_function (file, line, name,\n+            macro_define_function (file, line, name.c_str (),\n                                    argc, (const char **) argv,\n                                    p + 1);\n           else if (*p == '\\0')\n             {\n               /* Complain, but do define it.  */\n \t      dwarf2_macro_malformed_definition_complaint (body);\n-              macro_define_function (file, line, name,\n+              macro_define_function (file, line, name.c_str (),\n                                      argc, (const char **) argv,\n                                      p);\n             }\n@@ -24656,7 +24654,6 @@ parse_macro_definition (struct macro_source_file *file, int line,\n         /* Just complain.  */\n \tdwarf2_macro_malformed_definition_complaint (body);\n \n-      xfree (name);\n       {\n         int i;\n "
    }
  ]
}