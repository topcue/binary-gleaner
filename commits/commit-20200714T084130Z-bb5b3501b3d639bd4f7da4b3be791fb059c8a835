{
  "sha": "bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmI1YjM1MDFiM2Q2MzliZDRmN2RhNGIzYmU3OTFmYjA1OWM4YTgzNQ==",
  "commit": {
    "author": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:41:30Z"
    },
    "committer": {
      "name": "Jan Beulich",
      "email": "jbeulich@suse.com",
      "date": "2020-07-14T08:41:30Z"
    },
    "message": "x86: also use %BW / %DQ for kshift*",
    "tree": {
      "sha": "ccbb34f30c6e0746db61735c7835ff584c8aaac9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ccbb34f30c6e0746db61735c7835ff584c8aaac9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bb5b3501b3d639bd4f7da4b3be791fb059c8a835/comments",
  "author": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jbeulich",
    "id": 5610135,
    "node_id": "MDQ6VXNlcjU2MTAxMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jbeulich",
    "html_url": "https://github.com/jbeulich",
    "followers_url": "https://api.github.com/users/jbeulich/followers",
    "following_url": "https://api.github.com/users/jbeulich/following{/other_user}",
    "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions",
    "organizations_url": "https://api.github.com/users/jbeulich/orgs",
    "repos_url": "https://api.github.com/users/jbeulich/repos",
    "events_url": "https://api.github.com/users/jbeulich/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jbeulich/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "025a39a7c26e9f19985a392797c9499923a555d7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/025a39a7c26e9f19985a392797c9499923a555d7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/025a39a7c26e9f19985a392797c9499923a555d7"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 35,
    "deletions": 65
  },
  "files": [
    {
      "sha": "b6d52c4920d5d564ee8ad71922f45655a478f2e5",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb5b3501b3d639bd4f7da4b3be791fb059c8a835/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb5b3501b3d639bd4f7da4b3be791fb059c8a835/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
      "patch": "@@ -1,3 +1,21 @@\n+2020-07-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (MOD_VEX_0F3A30_L_0_W_0, MOD_VEX_0F3A30_L_0_W_1,\n+\tMOD_VEX_0F3A31_L_0_W_0, MOD_VEX_0F3A31_L_0_W_1,\n+\tMOD_VEX_0F3A32_L_0_W_0, MOD_VEX_0F3A32_L_0_W_1,\n+\tMOD_VEX_0F3A33_L_0_W_0, MOD_VEX_0F3A33_L_0_W_1): Replace by ...\n+\t(MOD_VEX_0F3A30_L_0, MOD_VEX_0F3A31_L_0,\n+\tMOD_VEX_0F3A32_L_0, MOD_VEX_0F3A33_L_0): ... these.\n+\t(VEX_W_0F3A30_L_0, VEX_W_0F3A31_L_0, VEX_W_0F3A32_L_0,\n+\tVEX_W_0F3A33_L_0): Delete.\n+\t(dis386): Adjust \"BW\" description.\n+\t(vex_len_table): Refer to mod_table[] for opcodes 0F3A30,\n+\t0F3A31, 0F3A32, and 0F3A33.\n+\t(vex_w_table): Delete opcode 0F3A30, 0F3A31, 0F3A32, and 0F3A33\n+\tentries.\n+\t(mod_table): Replace opcode 0F3A30, 0F3A31, 0F3A32, and 0F3A33\n+\tentries.\n+\n 2020-07-14  Jan Beulich  <jbeulich@suse.com>\n \n \t* i386-dis.c (PREFIX_0F6C, PREFIX_0F6D, PREFIX_0F73_REG_3,"
    },
    {
      "sha": "12fd32ac23628cc9e3fa508086a2c4975c750d36",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 17,
      "deletions": 65,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/bb5b3501b3d639bd4f7da4b3be791fb059c8a835/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/bb5b3501b3d639bd4f7da4b3be791fb059c8a835/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=bb5b3501b3d639bd4f7da4b3be791fb059c8a835",
      "patch": "@@ -894,14 +894,10 @@ enum\n   MOD_VEX_0F385A,\n   MOD_VEX_0F388C,\n   MOD_VEX_0F388E,\n-  MOD_VEX_0F3A30_L_0_W_0,\n-  MOD_VEX_0F3A30_L_0_W_1,\n-  MOD_VEX_0F3A31_L_0_W_0,\n-  MOD_VEX_0F3A31_L_0_W_1,\n-  MOD_VEX_0F3A32_L_0_W_0,\n-  MOD_VEX_0F3A32_L_0_W_1,\n-  MOD_VEX_0F3A33_L_0_W_0,\n-  MOD_VEX_0F3A33_L_0_W_1,\n+  MOD_VEX_0F3A30_L_0,\n+  MOD_VEX_0F3A31_L_0,\n+  MOD_VEX_0F3A32_L_0,\n+  MOD_VEX_0F3A33_L_0,\n \n   MOD_VEX_0FXOP_09_12,\n \n@@ -1517,10 +1513,6 @@ enum\n   VEX_W_0F3A18_L_1,\n   VEX_W_0F3A19_L_1,\n   VEX_W_0F3A1D,\n-  VEX_W_0F3A30_L_0,\n-  VEX_W_0F3A31_L_0,\n-  VEX_W_0F3A32_L_0,\n-  VEX_W_0F3A33_L_0,\n   VEX_W_0F3A38_L_1,\n   VEX_W_0F3A39_L_1,\n   VEX_W_0F3A46_L_1,\n@@ -1799,7 +1791,7 @@ struct dis386 {\n    \"LS\" => print \"abs\" in 64bit mode and behave as 'S' otherwise\n    \"LV\" => print \"abs\" for 64bit operand and behave as 'S' otherwise\n    \"DQ\" => print 'd' or 'q' depending on the VEX.W bit\n-   \"BW\" => print 'b' or 'w' depending on the EVEX.W bit\n+   \"BW\" => print 'b' or 'w' depending on the VEX.W bit\n    \"LP\" => print 'w' or 'l' ('d' in Intel mode) if instruction has\n \t   an operand size prefix, or suffix_always is true.  print\n \t   'q' if rex prefix is present.\n@@ -7079,22 +7071,22 @@ static const struct dis386 vex_len_table[][2] = {\n \n   /* VEX_LEN_0F3A30 */\n   {\n-    { VEX_W_TABLE (VEX_W_0F3A30_L_0) },\n+    { MOD_TABLE (MOD_VEX_0F3A30_L_0) },\n   },\n \n   /* VEX_LEN_0F3A31 */\n   {\n-    { VEX_W_TABLE (VEX_W_0F3A31_L_0) },\n+    { MOD_TABLE (MOD_VEX_0F3A31_L_0) },\n   },\n \n   /* VEX_LEN_0F3A32 */\n   {\n-    { VEX_W_TABLE (VEX_W_0F3A32_L_0) },\n+    { MOD_TABLE (MOD_VEX_0F3A32_L_0) },\n   },\n \n   /* VEX_LEN_0F3A33 */\n   {\n-    { VEX_W_TABLE (VEX_W_0F3A33_L_0) },\n+    { MOD_TABLE (MOD_VEX_0F3A33_L_0) },\n   },\n \n   /* VEX_LEN_0F3A38 */\n@@ -7745,26 +7737,6 @@ static const struct dis386 vex_w_table[][2] = {\n     /* VEX_W_0F3A1D */\n     { \"vcvtps2ph\", { EXxmmq, XM, EXxEVexS, Ib }, PREFIX_DATA },\n   },\n-  {\n-    /* VEX_W_0F3A30_L_0 */\n-    { MOD_TABLE (MOD_VEX_0F3A30_L_0_W_0) },\n-    { MOD_TABLE (MOD_VEX_0F3A30_L_0_W_1) },\n-  },\n-  {\n-    /* VEX_W_0F3A31_L_0 */\n-    { MOD_TABLE (MOD_VEX_0F3A31_L_0_W_0) },\n-    { MOD_TABLE (MOD_VEX_0F3A31_L_0_W_1) },\n-  },\n-  {\n-    /* VEX_W_0F3A32_L_0 */\n-    { MOD_TABLE (MOD_VEX_0F3A32_L_0_W_0) },\n-    { MOD_TABLE (MOD_VEX_0F3A32_L_0_W_1) },\n-  },\n-  {\n-    /* VEX_W_0F3A33_L_0 */\n-    { MOD_TABLE (MOD_VEX_0F3A33_L_0_W_0) },\n-    { MOD_TABLE (MOD_VEX_0F3A33_L_0_W_1) },\n-  },\n   {\n     /* VEX_W_0F3A38_L_1 */\n     { \"vinserti128\",\t{ XM, Vex, EXxmm, Ib }, PREFIX_DATA },\n@@ -8765,44 +8737,24 @@ static const struct dis386 mod_table[][2] = {\n     { \"vpmaskmov%DQ\",\t{ Mx, Vex, XM }, PREFIX_DATA },\n   },\n   {\n-    /* MOD_VEX_0F3A30_L_0_W_0 */\n-    { Bad_Opcode },\n-    { \"kshiftrb\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n-  },\n-  {\n-    /* MOD_VEX_0F3A30_L_0_W_1 */\n-    { Bad_Opcode },\n-    { \"kshiftrw\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n-  },\n-  {\n-    /* MOD_VEX_0F3A31_L_0_W_0 */\n-    { Bad_Opcode },\n-    { \"kshiftrd\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n-  },\n-  {\n-    /* MOD_VEX_0F3A31_L_0_W_1 */\n-    { Bad_Opcode },\n-    { \"kshiftrq\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n-  },\n-  {\n-    /* MOD_VEX_0F3A32_L_0_W_0 */\n+    /* MOD_VEX_0F3A30_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftlb\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftr%BW\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n   },\n   {\n-    /* MOD_VEX_0F3A32_L_0_W_1 */\n+    /* MOD_VEX_0F3A31_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftlw\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftr%DQ\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n   },\n   {\n-    /* MOD_VEX_0F3A33_L_0_W_0 */\n+    /* MOD_VEX_0F3A32_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftld\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftl%BW\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n   },\n   {\n-    /* MOD_VEX_0F3A33_L_0_W_1 */\n+    /* MOD_VEX_0F3A33_L_0 */\n     { Bad_Opcode },\n-    { \"kshiftlq\",       { MaskG, MaskR, Ib }, PREFIX_DATA },\n+    { \"kshiftl%DQ\",\t{ MaskG, MaskR, Ib }, PREFIX_DATA },\n   },\n   {\n     /* MOD_VEX_0FXOP_09_12 */"
    }
  ]
}