{
  "sha": "a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTQ5ODgxZjczZWYxYmI2NzBiNzRlOTliZmE3NmNkNjhlZTE0ODdjMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:09Z"
    },
    "message": "Split out eval_op_m2_subscript\n\nThis splits BINOP_SUBSCRIPT into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* m2-lang.c (eval_op_m2_subscript): New function.\n\t(evaluate_subexp_modula2): Use it.",
    "tree": {
      "sha": "fa6d3dee503ba39d377e1037e9f4397a5bf9971d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fa6d3dee503ba39d377e1037e9f4397a5bf9971d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a49881f73ef1bb670b74e99bfa76cd68ee1487c1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/41bdced5aef96b040b9b3eadf35306c8b2fc71d3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/41bdced5aef96b040b9b3eadf35306c8b2fc71d3"
    }
  ],
  "stats": {
    "total": 104,
    "additions": 56,
    "deletions": 48
  },
  "files": [
    {
      "sha": "8ee6f5cc5937faa9a75425357ea1e7791d7b540a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a49881f73ef1bb670b74e99bfa76cd68ee1487c1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a49881f73ef1bb670b74e99bfa76cd68ee1487c1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* m2-lang.c (eval_op_m2_subscript): New function.\n+\t(evaluate_subexp_modula2): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* m2-lang.c (eval_op_m2_high): New function."
    },
    {
      "sha": "5748b60d59cb24e6bda89964f1f4bf8e742c35e6",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 51,
      "deletions": 48,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a49881f73ef1bb670b74e99bfa76cd68ee1487c1/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a49881f73ef1bb670b74e99bfa76cd68ee1487c1/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=a49881f73ef1bb670b74e99bfa76cd68ee1487c1",
      "patch": "@@ -60,14 +60,63 @@ eval_op_m2_high (struct type *expect_type, struct expression *exp,\n   return arg1;\n }\n \n+/* A helper function for BINOP_SUBSCRIPT.  */\n+\n+static struct value *\n+eval_op_m2_subscript (struct type *expect_type, struct expression *exp,\n+\t\t      enum noside noside,\n+\t\t      struct value *arg1, struct value *arg2)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  /* If the user attempts to subscript something that is not an\n+     array or pointer type (like a plain int variable for example),\n+     then report this as an error.  */\n+\n+  arg1 = coerce_ref (arg1);\n+  struct type *type = check_typedef (value_type (arg1));\n+\n+  if (m2_is_unbounded_array (type))\n+    {\n+      struct value *temp = arg1;\n+      type = type->field (0).type ();\n+      if (type == NULL || (type->code () != TYPE_CODE_PTR))\n+\terror (_(\"internal error: unbounded \"\n+\t\t \"array structure is unknown\"));\n+      /* i18n: Do not translate the \"_m2_contents\" part!  */\n+      arg1 = value_struct_elt (&temp, NULL, \"_m2_contents\", NULL,\n+\t\t\t       _(\"unbounded structure \"\n+\t\t\t\t \"missing _m2_contents field\"));\n+\t  \n+      if (value_type (arg1) != type)\n+\targ1 = value_cast (type, arg1);\n+\n+      check_typedef (value_type (arg1));\n+      return value_ind (value_ptradd (arg1, value_as_long (arg2)));\n+    }\n+  else\n+    if (type->code () != TYPE_CODE_ARRAY)\n+      {\n+\tif (type->name ())\n+\t  error (_(\"cannot subscript something of type `%s'\"),\n+\t\t type->name ());\n+\telse\n+\t  error (_(\"cannot subscript requested type\"));\n+      }\n+\n+  if (noside == EVAL_AVOID_SIDE_EFFECTS)\n+    return value_zero (TYPE_TARGET_TYPE (type), VALUE_LVAL (arg1));\n+  else\n+    return value_subscript (arg1, value_as_long (arg2));\n+}\n+\n static struct value *\n evaluate_subexp_modula2 (struct type *expect_type, struct expression *exp,\n \t\t\t int *pos, enum noside noside)\n {\n   enum exp_opcode op = exp->elts[*pos].opcode;\n   struct value *arg1;\n   struct value *arg2;\n-  struct type *type;\n \n   switch (op)\n     {\n@@ -80,57 +129,11 @@ evaluate_subexp_modula2 (struct type *expect_type, struct expression *exp,\n       (*pos)++;\n       arg1 = evaluate_subexp_with_coercion (exp, pos, noside);\n       arg2 = evaluate_subexp_with_coercion (exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\tgoto nosideret;\n-      /* If the user attempts to subscript something that is not an\n-\t array or pointer type (like a plain int variable for example),\n-\t then report this as an error.  */\n-\n-      arg1 = coerce_ref (arg1);\n-      type = check_typedef (value_type (arg1));\n-\n-      if (m2_is_unbounded_array (type))\n-\t{\n-\t  struct value *temp = arg1;\n-\t  type = type->field (0).type ();\n-\t  if (type == NULL || (type->code () != TYPE_CODE_PTR))\n-\t    {\n-\t      warning (_(\"internal error: unbounded \"\n-\t\t\t \"array structure is unknown\"));\n-\t      return evaluate_subexp_standard (expect_type, exp, pos, noside);\n-\t    }\n-\t  /* i18n: Do not translate the \"_m2_contents\" part!  */\n-\t  arg1 = value_struct_elt (&temp, NULL, \"_m2_contents\", NULL,\n-\t\t\t\t   _(\"unbounded structure \"\n-\t\t\t\t     \"missing _m2_contents field\"));\n-\t  \n-\t  if (value_type (arg1) != type)\n-\t    arg1 = value_cast (type, arg1);\n-\n-\t  check_typedef (value_type (arg1));\n-\t  return value_ind (value_ptradd (arg1, value_as_long (arg2)));\n-\t}\n-      else\n-\tif (type->code () != TYPE_CODE_ARRAY)\n-\t  {\n-\t    if (type->name ())\n-\t      error (_(\"cannot subscript something of type `%s'\"),\n-\t\t     type->name ());\n-\t    else\n-\t      error (_(\"cannot subscript requested type\"));\n-\t  }\n-\n-      if (noside == EVAL_AVOID_SIDE_EFFECTS)\n-\treturn value_zero (TYPE_TARGET_TYPE (type), VALUE_LVAL (arg1));\n-      else\n-\treturn value_subscript (arg1, value_as_long (arg2));\n+      return eval_op_m2_subscript (expect_type, exp, noside, arg1, arg2);\n \n     default:\n       return evaluate_subexp_standard (expect_type, exp, pos, noside);\n     }\n-\n- nosideret:\n-  return value_from_longest (builtin_type (exp->gdbarch)->builtin_int, 1);\n }\n \f\n "
    }
  ]
}