{
  "sha": "b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjhlNjFkYWExYWQ1NjMzMGZkODkzMWM4YTUzYmZhMTZkOGU0YTQ3YQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-10T07:36:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-11T01:04:33Z"
    },
    "message": "ubsan: epiphany: left shift of negative value\n\nTwo places in epiphany_cgen_extract_operand, \"value\" is a long.\n        value = ((((value) << (1))) + (pc));\n\ncpu/\n\t* epiphany.cpu (f-simm8, f-simm24): Use multiply rather than\n\tshift left to avoid UB on left shift of negative values.\nopcodes/\n\t* epiphany-ibld.c: Regenerate.",
    "tree": {
      "sha": "ba543454bcef55c770165f89c0430044b063c24e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ba543454bcef55c770165f89c0430044b063c24e"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8ff23dba80b80a9f47d75dd43812e041f6674763",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ff23dba80b80a9f47d75dd43812e041f6674763",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8ff23dba80b80a9f47d75dd43812e041f6674763"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 13,
    "deletions": 4
  },
  "files": [
    {
      "sha": "fd26cb78b4b8256e8c07b49d32637e7be5ab9e9a",
      "filename": "cpu/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/cpu/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/cpu/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/ChangeLog?ref=b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* epiphany.cpu (f-simm8, f-simm24): Use multiply rather than\n+\tshift left to avoid UB on left shift of negative values.\n+\n 2019-11-20  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \t* bpf.cpu: Fix comment describing the 128-bit instruction format."
    },
    {
      "sha": "9f873b38f47bc254aaff6b73dc0cda86108546f0",
      "filename": "cpu/epiphany.cpu",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/cpu/epiphany.cpu",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/cpu/epiphany.cpu",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/cpu/epiphany.cpu?ref=b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
      "patch": "@@ -149,11 +149,11 @@\n \n (df f-simm8\t  \"branch displacement\"   (PCREL-ADDR RELOC) 15 8 INT\n     ((value pc) (sra SI (sub SI value pc) 1))\n-    ((value pc) (add SI (sll SI value 1) pc)))\n+    ((value pc) (add SI (mul SI value 2) pc)))\n \n (df f-simm24     \"branch displacement\"\t  (PCREL-ADDR RELOC) 31 24 INT\n     ((value pc) (sra SI (sub SI value pc) 1))\n-    ((value pc) (add SI (sll SI value 1) pc)))\n+    ((value pc) (add SI (mul SI value 2) pc)))\n \n (df f-sdisp3     \"signed immediate 3 bit\"      ()     9 3  INT #f #f)\n "
    },
    {
      "sha": "de76accd54238dcbb49b742f68273ba956af21f2",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
      "patch": "@@ -1,3 +1,7 @@\n+2019-12-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* epiphany-ibld.c: Regenerate.\n+\n 2019-12-10  Alan Modra  <amodra@gmail.com>\n \n \tPR 24960"
    },
    {
      "sha": "6e6fd7be9714919e2af7daec2c83d6e38194941e",
      "filename": "opcodes/epiphany-ibld.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/opcodes/epiphany-ibld.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a/opcodes/epiphany-ibld.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/epiphany-ibld.c?ref=b8e61daa1ad56330fd8931c8a53bfa16d8e4a47a",
      "patch": "@@ -1100,7 +1100,7 @@ epiphany_cgen_extract_operand (CGEN_CPU_DESC cd,\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_RELOC)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 31, 24, 32, total_length, pc, & value);\n-        value = ((((value) << (1))) + (pc));\n+        value = ((((value) * (2))) + (pc));\n         fields->f_simm24 = value;\n       }\n       break;\n@@ -1111,7 +1111,7 @@ epiphany_cgen_extract_operand (CGEN_CPU_DESC cd,\n       {\n         long value;\n         length = extract_normal (cd, ex_info, insn_value, 0|(1<<CGEN_IFLD_SIGNED)|(1<<CGEN_IFLD_RELOC)|(1<<CGEN_IFLD_PCREL_ADDR), 0, 15, 8, 32, total_length, pc, & value);\n-        value = ((((value) << (1))) + (pc));\n+        value = ((((value) * (2))) + (pc));\n         fields->f_simm8 = value;\n       }\n       break;"
    }
  ]
}