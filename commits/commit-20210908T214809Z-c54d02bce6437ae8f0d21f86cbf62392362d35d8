{
  "sha": "c54d02bce6437ae8f0d21f86cbf62392362d35d8",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzU0ZDAyYmNlNjQzN2FlOGYwZDIxZjg2Y2JmNjIzOTIzNjJkMzVkOA==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-29T19:57:48Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-09-08T21:48:09Z"
    },
    "message": "gnulib: import various network functions\n\nSome sim ports use these to provide networking functionality via the\ndv-sockser module or via direct emulation for a few ports.\n\nGdb seems to build just fine still too.",
    "tree": {
      "sha": "e879d62cbe57dbc54959be23831757d6015df741",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e879d62cbe57dbc54959be23831757d6015df741"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c54d02bce6437ae8f0d21f86cbf62392362d35d8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c54d02bce6437ae8f0d21f86cbf62392362d35d8",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c54d02bce6437ae8f0d21f86cbf62392362d35d8",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c54d02bce6437ae8f0d21f86cbf62392362d35d8/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "828a9ed9ca86020a6dc08c6582d22b4953039623",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/828a9ed9ca86020a6dc08c6582d22b4953039623",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/828a9ed9ca86020a6dc08c6582d22b4953039623"
    }
  ],
  "stats": {
    "total": 3854,
    "additions": 2261,
    "deletions": 1593
  },
  "files": [
    {
      "sha": "dd960bf6e0b660ca88461a58b28b06260dd531b4",
      "filename": "gnulib/config.in",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/config.in?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -143,6 +143,12 @@\n    whether the gnulib module tempname shall be considered present. */\n #undef GNULIB_TEMPNAME\n \n+/* Define to 1 when the gnulib module accept should be tested. */\n+#undef GNULIB_TEST_ACCEPT\n+\n+/* Define to 1 when the gnulib module bind should be tested. */\n+#undef GNULIB_TEST_BIND\n+\n /* Define to 1 when the gnulib module btowc should be tested. */\n #undef GNULIB_TEST_BTOWC\n \n@@ -165,6 +171,9 @@\n /* Define to 1 when the gnulib module closedir should be tested. */\n #undef GNULIB_TEST_CLOSEDIR\n \n+/* Define to 1 when the gnulib module connect should be tested. */\n+#undef GNULIB_TEST_CONNECT\n+\n /* Define to 1 when the gnulib module dirfd should be tested. */\n #undef GNULIB_TEST_DIRFD\n \n@@ -228,6 +237,9 @@\n /* Define to 1 when the gnulib module glob should be tested. */\n #undef GNULIB_TEST_GLOB\n \n+/* Define to 1 when the gnulib module listen should be tested. */\n+#undef GNULIB_TEST_LISTEN\n+\n /* Define to 1 when the gnulib module lstat should be tested. */\n #undef GNULIB_TEST_LSTAT\n \n@@ -312,6 +324,12 @@\n /* Define to 1 when the gnulib module setlocale_null should be tested. */\n #undef GNULIB_TEST_SETLOCALE_NULL\n \n+/* Define to 1 when the gnulib module setsockopt should be tested. */\n+#undef GNULIB_TEST_SETSOCKOPT\n+\n+/* Define to 1 when the gnulib module socket should be tested. */\n+#undef GNULIB_TEST_SOCKET\n+\n /* Define to 1 when the gnulib module stat should be tested. */\n #undef GNULIB_TEST_STAT\n "
    },
    {
      "sha": "39555afe9f01f3b254c93db5bd81104ef066d039",
      "filename": "gnulib/configure",
      "status": "modified",
      "additions": 1740,
      "deletions": 1557,
      "changes": 3297,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/configure?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8"
    },
    {
      "sha": "5a405cfc3683eba11edd54bc379758f1ca99180b",
      "filename": "gnulib/import/Makefile.am",
      "status": "modified",
      "additions": 60,
      "deletions": 0,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/Makefile.am?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -33,9 +33,12 @@\n #  --no-libtool \\\n #  --macro-prefix=gl \\\n #  --no-vc-files \\\n+#  accept \\\n #  alloca \\\n+#  bind \\\n #  canonicalize-lgpl \\\n #  chown \\\n+#  connect \\\n #  count-one-bits \\\n #  dirent \\\n #  dirfd \\\n@@ -52,6 +55,7 @@\n #  inet_ntop \\\n #  inttypes \\\n #  limits-h \\\n+#  listen \\\n #  lstat \\\n #  memchr \\\n #  memmem \\\n@@ -65,7 +69,9 @@\n #  rename \\\n #  select \\\n #  setenv \\\n+#  setsockopt \\\n #  signal-h \\\n+#  socket \\\n #  strchrnul \\\n #  strerror_r-posix \\\n #  strstr \\\n@@ -115,6 +121,15 @@ HAVE_INCLUDE_NEXT = (__GNUC__ || __clang__ || 60000000 <= __DECC_VER)\n \n ## end   gnulib module absolute-header\n \n+## begin gnulib module accept\n+\n+\n+EXTRA_DIST += accept.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += accept.c\n+\n+## end   gnulib module accept\n+\n ## begin gnulib module alloca\n \n \n@@ -214,6 +229,15 @@ EXTRA_DIST += basename-lgpl.h\n \n ## end   gnulib module basename-lgpl\n \n+## begin gnulib module bind\n+\n+\n+EXTRA_DIST += bind.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += bind.c\n+\n+## end   gnulib module bind\n+\n ## begin gnulib module btowc\n \n \n@@ -276,6 +300,15 @@ EXTRA_libgnu_a_SOURCES += closedir.c\n \n ## end   gnulib module closedir\n \n+## begin gnulib module connect\n+\n+\n+EXTRA_DIST += connect.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += connect.c\n+\n+## end   gnulib module connect\n+\n ## begin gnulib module count-one-bits\n \n libgnu_a_SOURCES += count-one-bits.c\n@@ -976,6 +1009,15 @@ EXTRA_DIST += limits.in.h\n \n ## end   gnulib module limits-h\n \n+## begin gnulib module listen\n+\n+\n+EXTRA_DIST += listen.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += listen.c\n+\n+## end   gnulib module listen\n+\n ## begin gnulib module localcharset\n \n libgnu_a_SOURCES += localcharset.c\n@@ -1731,6 +1773,15 @@ EXTRA_libgnu_a_SOURCES += setlocale-lock.c\n \n ## end   gnulib module setlocale-null\n \n+## begin gnulib module setsockopt\n+\n+\n+EXTRA_DIST += setsockopt.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += setsockopt.c\n+\n+## end   gnulib module setsockopt\n+\n ## begin gnulib module signal-h\n \n BUILT_SOURCES += signal.h\n@@ -1821,6 +1872,15 @@ EXTRA_DIST += warn-on-use.h\n \n ## end   gnulib module snippet/warn-on-use\n \n+## begin gnulib module socket\n+\n+\n+EXTRA_DIST += socket.c w32sock.h\n+\n+EXTRA_libgnu_a_SOURCES += socket.c\n+\n+## end   gnulib module socket\n+\n ## begin gnulib module sockets\n \n libgnu_a_SOURCES += sockets.h sockets.c"
    },
    {
      "sha": "3393458f4e660fe3f12155997bbdbc0917e6ca2c",
      "filename": "gnulib/import/Makefile.in",
      "status": "modified",
      "additions": 50,
      "deletions": 36,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/Makefile.in?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -47,9 +47,12 @@\n #  --no-libtool \\\n #  --macro-prefix=gl \\\n #  --no-vc-files \\\n+#  accept \\\n #  alloca \\\n+#  bind \\\n #  canonicalize-lgpl \\\n #  chown \\\n+#  connect \\\n #  count-one-bits \\\n #  dirent \\\n #  dirfd \\\n@@ -66,6 +69,7 @@\n #  inet_ntop \\\n #  inttypes \\\n #  limits-h \\\n+#  listen \\\n #  lstat \\\n #  memchr \\\n #  memmem \\\n@@ -79,7 +83,9 @@\n #  rename \\\n #  select \\\n #  setenv \\\n+#  setsockopt \\\n #  signal-h \\\n+#  socket \\\n #  strchrnul \\\n #  strerror_r-posix \\\n #  strstr \\\n@@ -1820,10 +1826,11 @@ noinst_HEADERS =\n noinst_LIBRARIES = libgnu.a\n noinst_LTLIBRARIES = \n # No GNU Make output.\n-EXTRA_DIST = m4/gnulib-cache.m4 alloca.c alloca.in.h arpa_inet.in.h \\\n-\tassure.h attribute.h basename-lgpl.h btowc.c \\\n-\tcanonicalize-lgpl.c chdir-long.c chdir-long.h chown.c \\\n-\tfchown-stub.c cloexec.h close.c closedir.c dirent-private.h \\\n+EXTRA_DIST = m4/gnulib-cache.m4 accept.c w32sock.h alloca.c \\\n+\talloca.in.h arpa_inet.in.h assure.h attribute.h \\\n+\tbasename-lgpl.h bind.c w32sock.h btowc.c canonicalize-lgpl.c \\\n+\tchdir-long.c chdir-long.h chown.c fchown-stub.c cloexec.h \\\n+\tclose.c closedir.c dirent-private.h connect.c w32sock.h \\\n \tcount-one-bits.h ctype.in.h dirent.in.h dirfd.c dirname.h \\\n \tdup.c dup2.c eloop-threshold.h errno.in.h error.c error.h \\\n \texitfail.h fchdir.c fcntl.c fcntl.in.h fd-hook.h fdopendir.c \\\n@@ -1838,8 +1845,8 @@ EXTRA_DIST = m4/gnulib-cache.m4 alloca.c alloca.in.h arpa_inet.in.h \\\n \tglob.in.h hard-locale.h inet_ntop.c intprops.h inttypes.in.h \\\n \tisblank.c float+.h isnan.c isnand-nolibm.h isnand.c float+.h \\\n \tisnan.c isnanl-nolibm.h isnanl.c cdefs.h libc-config.h \\\n-\tlimits.in.h localcharset.h locale.in.h lstat.c malloc.c \\\n-\tmalloca.h math.in.h lc-charset-dispatch.c \\\n+\tlimits.in.h listen.c w32sock.h localcharset.h locale.in.h \\\n+\tlstat.c malloc.c malloca.h math.in.h lc-charset-dispatch.c \\\n \tlc-charset-dispatch.h mbrtowc-impl-utf8.h mbrtowc-impl.h \\\n \tmbrtowc.c mbtowc-lock.c mbtowc-lock.h windows-initguard.h \\\n \tmbsinit.c mbsrtowcs-impl.h mbsrtowcs-state.c mbsrtowcs.c \\\n@@ -1852,17 +1859,17 @@ EXTRA_DIST = m4/gnulib-cache.m4 alloca.c alloca.in.h arpa_inet.in.h \\\n \treadlink.c realloc.c rename.c dirent-private.h rewinddir.c \\\n \trmdir.c same-inode.h save-cwd.h malloc/scratch_buffer.h \\\n \tscratch_buffer.h select.c setenv.c setlocale-lock.c \\\n-\tsetlocale_null.h windows-initguard.h signal.in.h _Noreturn.h \\\n-\targ-nonnull.h c++defs.h warn-on-use.h w32sock.h stat-w32.c \\\n-\tstat-w32.h stat.c stat-time.h stdalign.in.h stdbool.in.h \\\n-\tstddef.in.h stdint.in.h stdio.in.h stdlib.in.h strchrnul.c \\\n-\tstrchrnul.valgrind strdup.c streq.h strerror.c \\\n-\tstrerror-override.c strerror-override.h strerror_r.c \\\n-\tstring.in.h strings.in.h strnlen.c strstr.c str-two-way.h \\\n-\tstrstr.c strtok_r.c sys_random.in.h sys_select.in.h \\\n-\tsys_socket.in.h sys_stat.in.h sys_time.in.h sys_types.in.h \\\n-\tsys_uio.in.h sys_wait.in.h tempname.h time.in.h time_r.c \\\n-\tunistd.in.h unistd--.h unistd-safer.h unsetenv.c \\\n+\tsetlocale_null.h windows-initguard.h setsockopt.c w32sock.h \\\n+\tsignal.in.h _Noreturn.h arg-nonnull.h c++defs.h warn-on-use.h \\\n+\tsocket.c w32sock.h w32sock.h stat-w32.c stat-w32.h stat.c \\\n+\tstat-time.h stdalign.in.h stdbool.in.h stddef.in.h stdint.in.h \\\n+\tstdio.in.h stdlib.in.h strchrnul.c strchrnul.valgrind strdup.c \\\n+\tstreq.h strerror.c strerror-override.c strerror-override.h \\\n+\tstrerror_r.c string.in.h strings.in.h strnlen.c strstr.c \\\n+\tstr-two-way.h strstr.c strtok_r.c sys_random.in.h \\\n+\tsys_select.in.h sys_socket.in.h sys_stat.in.h sys_time.in.h \\\n+\tsys_types.in.h sys_uio.in.h sys_wait.in.h tempname.h time.in.h \\\n+\ttime_r.c unistd.in.h unistd--.h unistd-safer.h unsetenv.c \\\n \t$(top_srcdir)/import/extra/update-copyright verify.h \\\n \twchar.in.h wctype.in.h windows-initguard.h windows-mutex.c \\\n \twindows-mutex.h windows-once.c windows-once.h \\\n@@ -1912,25 +1919,26 @@ libgnu_a_SOURCES = openat-priv.h openat-proc.c basename-lgpl.c \\\n \tdup-safer.c fd-safer.c pipe-safer.c wctype-h.c\n libgnu_a_LIBADD = $(gl_LIBOBJS) @ALLOCA@\n libgnu_a_DEPENDENCIES = $(gl_LIBOBJS) @ALLOCA@\n-EXTRA_libgnu_a_SOURCES = alloca.c btowc.c canonicalize-lgpl.c \\\n-\tchdir-long.c chown.c fchown-stub.c close.c closedir.c dirfd.c \\\n-\tdup.c dup2.c error.c fchdir.c fcntl.c fdopendir.c ffs.c \\\n-\tfloat.c itold.c fnmatch.c fnmatch_loop.c fnmatch.c free.c \\\n-\tfrexp.c frexp.c frexpl.c fstat.c stat-w32.c at-func.c \\\n-\tfstatat.c getcwd.c getcwd-lgpl.c getdelim.c getdtablesize.c \\\n-\tgetline.c getlogin_r.c getrandom.c gettimeofday.c glob.c \\\n-\tglob_pattern_p.c globfree.c inet_ntop.c isblank.c isnan.c \\\n-\tisnand.c isnan.c isnanl.c lstat.c malloc.c \\\n-\tlc-charset-dispatch.c mbrtowc.c mbtowc-lock.c mbsinit.c \\\n-\tmbsrtowcs-state.c mbsrtowcs.c mbtowc.c memchr.c memmem.c \\\n-\tmemmem.c mempcpy.c memrchr.c mkdir.c mkdtemp.c mkostemp.c \\\n-\tmsvc-inval.c msvc-nothrow.c open.c openat.c opendir.c pipe.c \\\n-\trawmemchr.c readdir.c readlink.c realloc.c rename.c \\\n-\trewinddir.c rmdir.c select.c setenv.c setlocale-lock.c \\\n-\tstat-w32.c stat.c strchrnul.c strdup.c strerror.c \\\n-\tstrerror-override.c strerror_r.c strnlen.c strstr.c strstr.c \\\n-\tstrtok_r.c time_r.c unsetenv.c windows-mutex.c windows-once.c \\\n-\twindows-recmutex.c windows-rwlock.c wmemchr.c wmempcpy.c\n+EXTRA_libgnu_a_SOURCES = accept.c alloca.c bind.c btowc.c \\\n+\tcanonicalize-lgpl.c chdir-long.c chown.c fchown-stub.c close.c \\\n+\tclosedir.c connect.c dirfd.c dup.c dup2.c error.c fchdir.c \\\n+\tfcntl.c fdopendir.c ffs.c float.c itold.c fnmatch.c \\\n+\tfnmatch_loop.c fnmatch.c free.c frexp.c frexp.c frexpl.c \\\n+\tfstat.c stat-w32.c at-func.c fstatat.c getcwd.c getcwd-lgpl.c \\\n+\tgetdelim.c getdtablesize.c getline.c getlogin_r.c getrandom.c \\\n+\tgettimeofday.c glob.c glob_pattern_p.c globfree.c inet_ntop.c \\\n+\tisblank.c isnan.c isnand.c isnan.c isnanl.c listen.c lstat.c \\\n+\tmalloc.c lc-charset-dispatch.c mbrtowc.c mbtowc-lock.c \\\n+\tmbsinit.c mbsrtowcs-state.c mbsrtowcs.c mbtowc.c memchr.c \\\n+\tmemmem.c memmem.c mempcpy.c memrchr.c mkdir.c mkdtemp.c \\\n+\tmkostemp.c msvc-inval.c msvc-nothrow.c open.c openat.c \\\n+\topendir.c pipe.c rawmemchr.c readdir.c readlink.c realloc.c \\\n+\trename.c rewinddir.c rmdir.c select.c setenv.c \\\n+\tsetlocale-lock.c setsockopt.c socket.c stat-w32.c stat.c \\\n+\tstrchrnul.c strdup.c strerror.c strerror-override.c \\\n+\tstrerror_r.c strnlen.c strstr.c strstr.c strtok_r.c time_r.c \\\n+\tunsetenv.c windows-mutex.c windows-once.c windows-recmutex.c \\\n+\twindows-rwlock.c wmemchr.c wmempcpy.c\n \n # Use this preprocessor expression to decide whether #include_next works.\n # Do not rely on a 'configure'-time test for this, since the expression\n@@ -2042,16 +2050,19 @@ mostlyclean-compile:\n distclean-compile:\n \t-rm -f *.tab.c\n \n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accept.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alloca.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/at-func.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basename-lgpl.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bind.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/btowc.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/canonicalize-lgpl.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chdir-long.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chown.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cloexec.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/close.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/closedir.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/connect.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/count-one-bits.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dirfd.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dirname-lgpl.Po@am__quote@\n@@ -2098,6 +2109,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isnanl.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itold.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lc-charset-dispatch.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listen.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/localcharset.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lstat.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/malloc.Po@am__quote@\n@@ -2137,6 +2149,8 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setenv.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setlocale-lock.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setlocale_null.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setsockopt.Po@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socket.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sockets.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat-time.Po@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat-w32.Po@am__quote@"
    },
    {
      "sha": "a7d5743c5bbc7aa358fe8f8fdb64d564233e3441",
      "filename": "gnulib/import/accept.c",
      "status": "added",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/accept.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/accept.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/accept.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,52 @@\n+/* accept.c --- wrappers for Windows accept function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#undef accept\n+\n+int\n+rpl_accept (int fd, struct sockaddr *addr, socklen_t *addrlen)\n+{\n+  SOCKET sock = FD_TO_SOCKET (fd);\n+\n+  if (sock == INVALID_SOCKET)\n+    {\n+      errno = EBADF;\n+      return -1;\n+    }\n+  else\n+    {\n+      SOCKET fh = accept (sock, addr, addrlen);\n+      if (fh == INVALID_SOCKET)\n+        {\n+          set_winsock_errno ();\n+          return -1;\n+        }\n+      else\n+        return SOCKET_TO_FD (fh);\n+    }\n+}"
    },
    {
      "sha": "467da951e45d09720586eb9261ec4eb63afbec67",
      "filename": "gnulib/import/bind.c",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/bind.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/bind.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/bind.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,49 @@\n+/* bind.c --- wrappers for Windows bind function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#undef bind\n+\n+int\n+rpl_bind (int fd, const struct sockaddr *sockaddr, socklen_t len)\n+{\n+  SOCKET sock = FD_TO_SOCKET (fd);\n+\n+  if (sock == INVALID_SOCKET)\n+    {\n+      errno = EBADF;\n+      return -1;\n+    }\n+  else\n+    {\n+      int r = bind (sock, sockaddr, len);\n+      if (r < 0)\n+        set_winsock_errno ();\n+\n+      return r;\n+    }\n+}"
    },
    {
      "sha": "6dc11075e1dc9157fe7b835c6dc39f0b2b8149e3",
      "filename": "gnulib/import/connect.c",
      "status": "added",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/connect.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/connect.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/connect.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,56 @@\n+/* connect.c --- wrappers for Windows connect function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#undef connect\n+\n+int\n+rpl_connect (int fd, const struct sockaddr *sockaddr, socklen_t len)\n+{\n+  SOCKET sock = FD_TO_SOCKET (fd);\n+\n+  if (sock == INVALID_SOCKET)\n+    {\n+      errno = EBADF;\n+      return -1;\n+    }\n+  else\n+    {\n+      int r = connect (sock, sockaddr, len);\n+      if (r < 0)\n+        {\n+          /* EINPROGRESS is not returned by WinSock 2.0; for backwards\n+             compatibility, connect(2) uses EWOULDBLOCK.  */\n+          if (WSAGetLastError () == WSAEWOULDBLOCK)\n+            WSASetLastError (WSAEINPROGRESS);\n+\n+          set_winsock_errno ();\n+        }\n+\n+      return r;\n+    }\n+}"
    },
    {
      "sha": "0645e2ee6cca80490258bac67ed2545534335250",
      "filename": "gnulib/import/listen.c",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/listen.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/listen.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/listen.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,49 @@\n+/* listen.c --- wrappers for Windows listen function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#undef listen\n+\n+int\n+rpl_listen (int fd, int backlog)\n+{\n+  SOCKET sock = FD_TO_SOCKET (fd);\n+\n+  if (sock == INVALID_SOCKET)\n+    {\n+      errno = EBADF;\n+      return -1;\n+    }\n+  else\n+    {\n+      int r = listen (sock, backlog);\n+      if (r < 0)\n+        set_winsock_errno ();\n+\n+      return r;\n+    }\n+}"
    },
    {
      "sha": "381cdde68f2be8e62f7d1e73c89d4bee547a4379",
      "filename": "gnulib/import/m4/gnulib-cache.m4",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/m4/gnulib-cache.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/m4/gnulib-cache.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/gnulib-cache.m4?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -38,9 +38,12 @@\n #  --no-libtool \\\n #  --macro-prefix=gl \\\n #  --no-vc-files \\\n+#  accept \\\n #  alloca \\\n+#  bind \\\n #  canonicalize-lgpl \\\n #  chown \\\n+#  connect \\\n #  count-one-bits \\\n #  dirent \\\n #  dirfd \\\n@@ -57,6 +60,7 @@\n #  inet_ntop \\\n #  inttypes \\\n #  limits-h \\\n+#  listen \\\n #  lstat \\\n #  memchr \\\n #  memmem \\\n@@ -70,7 +74,9 @@\n #  rename \\\n #  select \\\n #  setenv \\\n+#  setsockopt \\\n #  signal-h \\\n+#  socket \\\n #  strchrnul \\\n #  strerror_r-posix \\\n #  strstr \\\n@@ -87,9 +93,12 @@\n # Specification in the form of a few gnulib-tool.m4 macro invocations:\n gl_LOCAL_DIR([])\n gl_MODULES([\n+  accept\n   alloca\n+  bind\n   canonicalize-lgpl\n   chown\n+  connect\n   count-one-bits\n   dirent\n   dirfd\n@@ -106,6 +115,7 @@ gl_MODULES([\n   inet_ntop\n   inttypes\n   limits-h\n+  listen\n   lstat\n   memchr\n   memmem\n@@ -119,7 +129,9 @@ gl_MODULES([\n   rename\n   select\n   setenv\n+  setsockopt\n   signal-h\n+  socket\n   strchrnul\n   strerror_r-posix\n   strstr"
    },
    {
      "sha": "5376a93c79244c6402328a08d929f87d4768f2e2",
      "filename": "gnulib/import/m4/gnulib-comp.m4",
      "status": "modified",
      "additions": 51,
      "deletions": 0,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/m4/gnulib-comp.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/m4/gnulib-comp.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/m4/gnulib-comp.m4?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -44,13 +44,15 @@ AC_DEFUN([gl_EARLY],\n \n   AC_REQUIRE([AM_PROG_CC_C_O])\n   # Code from module absolute-header:\n+  # Code from module accept:\n   # Code from module alloca:\n   # Code from module alloca-opt:\n   # Code from module arpa_inet:\n   # Code from module assure:\n   # Code from module at-internal:\n   # Code from module attribute:\n   # Code from module basename-lgpl:\n+  # Code from module bind:\n   # Code from module btowc:\n   # Code from module builtin-expect:\n   # Code from module c99:\n@@ -62,6 +64,7 @@ AC_DEFUN([gl_EARLY],\n   # Code from module cloexec:\n   # Code from module close:\n   # Code from module closedir:\n+  # Code from module connect:\n   # Code from module count-one-bits:\n   # Code from module ctype:\n   # Code from module d-ino:\n@@ -129,6 +132,7 @@ AC_DEFUN([gl_EARLY],\n   AC_REQUIRE([AC_SYS_LARGEFILE])\n   # Code from module libc-config:\n   # Code from module limits-h:\n+  # Code from module listen:\n   # Code from module localcharset:\n   # Code from module locale:\n   # Code from module lock:\n@@ -175,11 +179,13 @@ AC_DEFUN([gl_EARLY],\n   # Code from module select:\n   # Code from module setenv:\n   # Code from module setlocale-null:\n+  # Code from module setsockopt:\n   # Code from module signal-h:\n   # Code from module snippet/_Noreturn:\n   # Code from module snippet/arg-nonnull:\n   # Code from module snippet/c++defs:\n   # Code from module snippet/warn-on-use:\n+  # Code from module socket:\n   # Code from module socketlib:\n   # Code from module sockets:\n   # Code from module socklen:\n@@ -251,10 +257,20 @@ AC_DEFUN([gl_INIT],\n   m4_pushdef([gl_LIBSOURCES_DIR], [])\n   gl_COMMON\n   gl_source_base='import'\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([accept])\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([accept])\n   gl_FUNC_ALLOCA\n   gl_HEADER_ARPA_INET\n   AC_PROG_MKDIR_P\n   AC_REQUIRE([AC_CANONICAL_HOST])\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([bind])\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([bind])\n   gl_FUNC_BTOWC\n   if test $HAVE_BTOWC = 0 || test $REPLACE_BTOWC = 1; then\n     AC_LIBOBJ([btowc])\n@@ -295,6 +311,11 @@ AC_DEFUN([gl_INIT],\n     AC_LIBOBJ([closedir])\n   fi\n   gl_DIRENT_MODULE_INDICATOR([closedir])\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([connect])\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([connect])\n   gl_CTYPE_H\n   gl_CHECK_TYPE_STRUCT_DIRENT_D_INO\n   gl_CHECK_TYPE_STRUCT_DIRENT_D_TYPE\n@@ -498,6 +519,11 @@ AC_DEFUN([gl_INIT],\n   AC_REQUIRE([gl_LARGEFILE])\n   gl___INLINE\n   gl_LIMITS_H\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([listen])\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([listen])\n   gl_LOCALCHARSET\n   dnl For backward compatibility. Some packages still use this.\n   LOCALCHARSET_TESTS_ENVIRONMENT=\n@@ -685,7 +711,26 @@ AC_DEFUN([gl_INIT],\n     gl_PREREQ_SETLOCALE_LOCK\n   fi\n   gl_LOCALE_MODULE_INDICATOR([setlocale_null])\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([setsockopt])\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([setsockopt])\n   gl_SIGNAL_H\n+  AC_REQUIRE([gl_HEADER_SYS_SOCKET])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    AC_LIBOBJ([socket])\n+  fi\n+  # When this module is used, sockets may actually occur as file descriptors,\n+  # hence it is worth warning if the modules 'close' and 'ioctl' are not used.\n+  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])\n+  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])\n+  AC_REQUIRE([gl_PREREQ_SYS_H_WINSOCK2])\n+  if test \"$ac_cv_header_winsock2_h\" = yes; then\n+    UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1\n+    SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1\n+  fi\n+  gl_SYS_SOCKET_MODULE_INDICATOR([socket])\n   AC_REQUIRE([gl_SOCKETLIB])\n   AC_REQUIRE([gl_SOCKETS])\n   gl_TYPE_SOCKLEN_T\n@@ -980,6 +1025,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   doc/gendocs_template\n   doc/gendocs_template_min\n   lib/_Noreturn.h\n+  lib/accept.c\n   lib/alloca.c\n   lib/alloca.in.h\n   lib/arg-nonnull.h\n@@ -989,6 +1035,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/attribute.h\n   lib/basename-lgpl.c\n   lib/basename-lgpl.h\n+  lib/bind.c\n   lib/btowc.c\n   lib/c++defs.h\n   lib/canonicalize-lgpl.c\n@@ -1000,6 +1047,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/cloexec.h\n   lib/close.c\n   lib/closedir.c\n+  lib/connect.c\n   lib/count-one-bits.c\n   lib/count-one-bits.h\n   lib/ctype.in.h\n@@ -1081,6 +1129,7 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/lc-charset-dispatch.h\n   lib/libc-config.h\n   lib/limits.in.h\n+  lib/listen.c\n   lib/localcharset.c\n   lib/localcharset.h\n   lib/locale.in.h\n@@ -1148,7 +1197,9 @@ AC_DEFUN([gl_FILE_LIST], [\n   lib/setlocale-lock.c\n   lib/setlocale_null.c\n   lib/setlocale_null.h\n+  lib/setsockopt.c\n   lib/signal.in.h\n+  lib/socket.c\n   lib/sockets.c\n   lib/sockets.h\n   lib/stat-time.c"
    },
    {
      "sha": "b6f5dfce306810a13c1ec193ee7bbb762235a9cd",
      "filename": "gnulib/import/setsockopt.c",
      "status": "added",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/setsockopt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/setsockopt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/setsockopt.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,65 @@\n+/* setsockopt.c --- wrappers for Windows setsockopt function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get struct timeval. */\n+#include <sys/time.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#undef setsockopt\n+\n+int\n+rpl_setsockopt (int fd, int level, int optname, const void *optval, socklen_t optlen)\n+{\n+  SOCKET sock = FD_TO_SOCKET (fd);\n+  int r;\n+\n+  if (sock == INVALID_SOCKET)\n+    {\n+      errno = EBADF;\n+      return -1;\n+    }\n+  else\n+    {\n+      if (level == SOL_SOCKET\n+          && (optname == SO_RCVTIMEO || optname == SO_SNDTIMEO))\n+        {\n+          const struct timeval *tv = optval;\n+          int milliseconds = tv->tv_sec * 1000 + tv->tv_usec / 1000;\n+          optval = &milliseconds;\n+          r = setsockopt (sock, level, optname, optval, sizeof (int));\n+        }\n+      else\n+        {\n+          r = setsockopt (sock, level, optname, optval, optlen);\n+        }\n+\n+      if (r < 0)\n+        set_winsock_errno ();\n+\n+      return r;\n+    }\n+}"
    },
    {
      "sha": "f5086ad2a34486b0b95208802e4ccb93046c8934",
      "filename": "gnulib/import/socket.c",
      "status": "added",
      "additions": 53,
      "deletions": 0,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/socket.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/import/socket.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/import/socket.c?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -0,0 +1,53 @@\n+/* socket.c --- wrappers for Windows socket function\n+\n+   Copyright (C) 2008-2021 Free Software Foundation, Inc.\n+\n+   This program is free software: you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */\n+\n+/* Written by Paolo Bonzini */\n+\n+#include <config.h>\n+\n+#define WIN32_LEAN_AND_MEAN\n+/* Get winsock2.h. */\n+#include <sys/socket.h>\n+\n+/* Get set_winsock_errno, FD_TO_SOCKET etc. */\n+#include \"w32sock.h\"\n+\n+#include \"sockets.h\"\n+\n+/* Don't assume that UNICODE is defined.  */\n+#undef WSASocket\n+#define WSASocket WSASocketW\n+\n+int\n+rpl_socket (int domain, int type, int protocol)\n+{\n+  SOCKET fh;\n+\n+  gl_sockets_startup (SOCKETS_1_1);\n+\n+  /* We have to use WSASocket() to create non-overlapped IO sockets.\n+     Overlapped IO sockets cannot be used with read/write.  */\n+  fh = WSASocket (domain, type, protocol, NULL, 0, 0);\n+\n+  if (fh == INVALID_SOCKET)\n+    {\n+      set_winsock_errno ();\n+      return -1;\n+    }\n+  else\n+    return SOCKET_TO_FD (fh);\n+}"
    },
    {
      "sha": "f0f83432b6a4f38560ac399b7b8229d3a2f52fec",
      "filename": "gnulib/update-gnulib.sh",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/update-gnulib.sh",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c54d02bce6437ae8f0d21f86cbf62392362d35d8/gnulib/update-gnulib.sh",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gnulib/update-gnulib.sh?ref=c54d02bce6437ae8f0d21f86cbf62392362d35d8",
      "patch": "@@ -30,9 +30,12 @@\n \n # The list of gnulib modules we are importing in GDB.\n IMPORTED_GNULIB_MODULES=\"\\\n+    accept \\\n     alloca \\\n+    bind \\\n     canonicalize-lgpl \\\n     chown \\\n+    connect \\\n     count-one-bits \\\n     dirent \\\n     dirfd \\\n@@ -50,6 +53,7 @@ IMPORTED_GNULIB_MODULES=\"\\\n     inttypes \\\n     lstat \\\n     limits-h \\\n+    listen \\\n     memchr \\\n     memmem \\\n     mkdir \\\n@@ -62,7 +66,9 @@ IMPORTED_GNULIB_MODULES=\"\\\n     rename \\\n     select \\\n     setenv \\\n+    setsockopt \\\n     signal-h \\\n+    socket \\\n     strchrnul \\\n     strerror_r-posix \\\n     strstr \\"
    }
  ]
}