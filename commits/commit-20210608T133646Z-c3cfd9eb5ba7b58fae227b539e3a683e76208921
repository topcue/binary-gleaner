{
  "sha": "c3cfd9eb5ba7b58fae227b539e3a683e76208921",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzNjZmQ5ZWI1YmE3YjU4ZmFlMjI3YjUzOWUzYTY4M2U3NjIwODkyMQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-08T13:36:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-06-08T13:36:46Z"
    },
    "message": "[gdb/testsuite] Fix gdb.base/info-macros.exp with check-read1\n\nWith check-read1 we run into:\n...\nFAIL: gdb.base/info-macros.exp: info macros info-macros.c:42 (timeout)\n...\n\nFix this by using gdb_test_lines from gdb.base/info-types.exp.tcl.\n\nTested on x86_64-linux.\n\ngdb/testsuite/ChangeLog:\n\n2021-06-08  Tom de Vries  <tdevries@suse.de>\n\n\t* gdb.base/info-types.exp.tcl (match_line, gdb_test_lines): Move ...\n\t* lib/gdb.exp: ... here.\n\t* gdb.base/info-macros.exp: Use gdb_test_lines.",
    "tree": {
      "sha": "11e6091e1eb2afb465477631b4bdd565323837b2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/11e6091e1eb2afb465477631b4bdd565323837b2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c3cfd9eb5ba7b58fae227b539e3a683e76208921",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3cfd9eb5ba7b58fae227b539e3a683e76208921",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c3cfd9eb5ba7b58fae227b539e3a683e76208921",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c3cfd9eb5ba7b58fae227b539e3a683e76208921/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/58f076c6f86dc8361f2e6a6c67940fd9b5ad9a60"
    }
  ],
  "stats": {
    "total": 176,
    "additions": 91,
    "deletions": 85
  },
  "files": [
    {
      "sha": "e2f1486af348ff2198ba9afc4bd04b9d8e164de3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-08  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gdb.base/info-types.exp.tcl (match_line, gdb_test_lines): Move ...\n+\t* lib/gdb.exp: ... here.\n+\t* gdb.base/info-macros.exp: Use gdb_test_lines.\n+\n 2021-06-08  Tom de Vries  <tdevries@suse.de>\n \n \t* gdb.base/info-types.exp.tcl (match_line): Handle --any."
    },
    {
      "sha": "3d096a3db51c0e44d534111288c10aa813ab624c",
      "filename": "gdb/testsuite/gdb.base/info-macros.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/gdb.base/info-macros.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/gdb.base/info-macros.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-macros.exp?ref=c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "patch": "@@ -273,6 +273,6 @@ gdb_test_multiple_with_read1_timeout_factor 10 \"$test\" $testname {\n \n set test \"info macros info-macros.c:42\"\n \n-set r1 \".*define DEF_MACROS\"\n-set r2 \".*define ONE\"\n-gdb_test \"$test\" \"$r1$r2.*\"\n+set r1 \"#define DEF_MACROS\"\n+set r2 \"#define ONE\"\n+gdb_test_lines \"$test\" \"\" [list $r1 \"--any\" $r2]"
    },
    {
      "sha": "c820adc4ac1721fbdc27c1583ceb2fd0a8f32ec4",
      "filename": "gdb/testsuite/gdb.base/info-types.exp.tcl",
      "status": "modified",
      "additions": 0,
      "deletions": 82,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/gdb.base/info-types.exp.tcl",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/gdb.base/info-types.exp.tcl",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/info-types.exp.tcl?ref=c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "patch": "@@ -16,88 +16,6 @@\n # Check that 'info types' produces the expected output for an inferior\n # containing a number of different types.\n \n-# Match LINE against regexp OUTPUT_LINES[IDX].  Helper function for\n-# gdb_test_lines.\n-proc match_line { line output_lines idx_name } {\n-    upvar $idx_name idx\n-\n-    while { 1 } {\n-\tif { $idx == [llength $output_lines] } {\n-\t    # Ran out of regexps, bail out.\n-\t    return -1\n-\t}\n-\n-\tset re [lindex $output_lines $idx]\n-\tset opt 0\n-\tset any 0\n-\tif { $re == \"--optional\" } {\n-\t    # Optional, get actual regexp.\n-\t    set opt 1\n-\t    incr idx\n-\t    set re [lindex $output_lines $idx]\n-\t} elseif { $re == \"--any\" } {\n-\t    set any 1\n-\t    incr idx\n-\t    set re [lindex $output_lines $idx]\n-\t}\n-\n-\tif { [regexp $re $line] } {\n-\t    # Match.\n-\t    incr idx\n-\t    if { $idx == [llength $output_lines] } {\n-\t\t# Last match, we're done.\n-\t\treturn 1\n-\t    }\n-\t    # Match found, keep looking for next match.\n-\t    return 0\n-\t} else {\n-\t    # No match.\n-\t    if { $idx == 0 } {\n-\t\t# First match not found, just keep looking for first match.\n-\t\treturn 0\n-\t    } elseif { $opt } {\n-\t\t# Try next regexp on same line.\n-\t\tincr idx\n-\t\tcontinue\n-\t    } elseif { $any } {\n-\t\t# Try again with next line.\n-\t\tincr idx -1\n-\t\treturn 0\n-\t    } else {\n-\t\t# Mismatch, bail out.\n-\t\treturn -1\n-\t    }\n-\t}\n-\tbreak\n-    }\n-\n-    # Keep going.\n-    return 0\n-}\n-\n-# Match output of COMMAND line-by-line, using PATTERNS.\n-# Report pass/fail with MESSAGE.\n-\n-proc gdb_test_lines { command message patterns } {\n-    set found 0\n-    set idx 0\n-    if { $message == \"\"} {\n-\tset message $command\n-    }\n-    gdb_test_multiple $command $message {\n-\t-re \"\\r\\n(\\[^\\r\\n\\]*)(?=\\r\\n)\" {\n-\t    if { $found == 0 } {\n-\t\tset line $expect_out(1,string)\n-\t\tset found [match_line $line $patterns idx]\n-\t    }\n-\t    exp_continue\n-\t}\n-\t-re -wrap \"\" {\n-\t    gdb_assert { $found == 1 } $gdb_test_name\n-\t}\n-    }\n-}\n-\n # Run 'info types' test, compiling the test file for language LANG,\n # which should be either 'c' or 'c++'.\n proc run_test { lang } {"
    },
    {
      "sha": "f7ab2198a25cf6ec4e584788879b42b65c4d927b",
      "filename": "gdb/testsuite/lib/gdb.exp",
      "status": "modified",
      "additions": 82,
      "deletions": 0,
      "changes": 82,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/lib/gdb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c3cfd9eb5ba7b58fae227b539e3a683e76208921/gdb/testsuite/lib/gdb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/lib/gdb.exp?ref=c3cfd9eb5ba7b58fae227b539e3a683e76208921",
      "patch": "@@ -1432,6 +1432,88 @@ proc gdb_test_sequence { args } {\n }\n \n \f\n+# Match LINE against regexp OUTPUT_LINES[IDX].  Helper function for\n+# gdb_test_lines.\n+proc match_line { line output_lines idx_name } {\n+    upvar $idx_name idx\n+\n+    while { 1 } {\n+\tif { $idx == [llength $output_lines] } {\n+\t    # Ran out of regexps, bail out.\n+\t    return -1\n+\t}\n+\n+\tset re [lindex $output_lines $idx]\n+\tset opt 0\n+\tset any 0\n+\tif { $re == \"--optional\" } {\n+\t    # Optional, get actual regexp.\n+\t    set opt 1\n+\t    incr idx\n+\t    set re [lindex $output_lines $idx]\n+\t} elseif { $re == \"--any\" } {\n+\t    set any 1\n+\t    incr idx\n+\t    set re [lindex $output_lines $idx]\n+\t}\n+\n+\tif { [regexp $re $line] } {\n+\t    # Match.\n+\t    incr idx\n+\t    if { $idx == [llength $output_lines] } {\n+\t\t# Last match, we're done.\n+\t\treturn 1\n+\t    }\n+\t    # Match found, keep looking for next match.\n+\t    return 0\n+\t} else {\n+\t    # No match.\n+\t    if { $idx == 0 } {\n+\t\t# First match not found, just keep looking for first match.\n+\t\treturn 0\n+\t    } elseif { $opt } {\n+\t\t# Try next regexp on same line.\n+\t\tincr idx\n+\t\tcontinue\n+\t    } elseif { $any } {\n+\t\t# Try again with next line.\n+\t\tincr idx -1\n+\t\treturn 0\n+\t    } else {\n+\t\t# Mismatch, bail out.\n+\t\treturn -1\n+\t    }\n+\t}\n+\tbreak\n+    }\n+\n+    # Keep going.\n+    return 0\n+}\n+\n+# Match output of COMMAND line-by-line, using PATTERNS.\n+# Report pass/fail with MESSAGE.\n+\n+proc gdb_test_lines { command message patterns } {\n+    set found 0\n+    set idx 0\n+    if { $message == \"\"} {\n+\tset message $command\n+    }\n+    gdb_test_multiple $command $message {\n+\t-re \"\\r\\n(\\[^\\r\\n\\]*)(?=\\r\\n)\" {\n+\t    if { $found == 0 } {\n+\t\tset line $expect_out(1,string)\n+\t\tset found [match_line $line $patterns idx]\n+\t    }\n+\t    exp_continue\n+\t}\n+\t-re -wrap \"\" {\n+\t    gdb_assert { $found == 1 } $gdb_test_name\n+\t}\n+    }\n+}\n+\n # Test that a command gives an error.  For pass or fail, return\n # a 1 to indicate that more tests can proceed.  However a timeout\n # is a serious error, generates a special fail message, and causes"
    }
  ]
}