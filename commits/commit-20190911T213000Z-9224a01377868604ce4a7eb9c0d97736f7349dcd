{
  "sha": "9224a01377868604ce4a7eb9c0d97736f7349dcd",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTIyNGEwMTM3Nzg2ODYwNGNlNGE3ZWI5YzBkOTc3MzZmNzM0OWRjZA==",
  "commit": {
    "author": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-08-20T21:38:29Z"
    },
    "committer": {
      "name": "Christian Biesinger",
      "email": "cbiesinger@google.com",
      "date": "2019-09-11T21:30:00Z"
    },
    "message": "Factor out the code to do the datadir-relocation for gdbinit\n\nThis simplifies get_init_files and makes it possible to reuse\nthis code in an upcoming patch for SYSTEM_GDBINIT_DIR.\n\ngdb/ChangeLog:\n\n2019-09-11  Christian Biesinger  <cbiesinger@google.com>\n\n\t* main.c (relocate_gdbinit_path_maybe_in_datadir): Factor this code\n\tout of get_init_files.\n\t(get_init_files): Update.",
    "tree": {
      "sha": "92a4d226ec7ca7f8cf8c5261b5bc5c9f81495940",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/92a4d226ec7ca7f8cf8c5261b5bc5c9f81495940"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9224a01377868604ce4a7eb9c0d97736f7349dcd",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9224a01377868604ce4a7eb9c0d97736f7349dcd",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9224a01377868604ce4a7eb9c0d97736f7349dcd",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9224a01377868604ce4a7eb9c0d97736f7349dcd/comments",
  "author": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "cbiesinger",
    "id": 1483109,
    "node_id": "MDQ6VXNlcjE0ODMxMDk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1483109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cbiesinger",
    "html_url": "https://github.com/cbiesinger",
    "followers_url": "https://api.github.com/users/cbiesinger/followers",
    "following_url": "https://api.github.com/users/cbiesinger/following{/other_user}",
    "gists_url": "https://api.github.com/users/cbiesinger/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cbiesinger/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cbiesinger/subscriptions",
    "organizations_url": "https://api.github.com/users/cbiesinger/orgs",
    "repos_url": "https://api.github.com/users/cbiesinger/repos",
    "events_url": "https://api.github.com/users/cbiesinger/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cbiesinger/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f48cd8368bf45b40547237939af3ab6b47dc7b01",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f48cd8368bf45b40547237939af3ab6b47dc7b01",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f48cd8368bf45b40547237939af3ab6b47dc7b01"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 49,
    "deletions": 31
  },
  "files": [
    {
      "sha": "91b860c78a3ffb38544faaf3d2a116f23e54736c",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9224a01377868604ce4a7eb9c0d97736f7349dcd/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9224a01377868604ce4a7eb9c0d97736f7349dcd/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=9224a01377868604ce4a7eb9c0d97736f7349dcd",
      "patch": "@@ -1,3 +1,9 @@\n+2019-09-11  Christian Biesinger  <cbiesinger@google.com>\n+\n+\t* main.c (relocate_gdbinit_path_maybe_in_datadir): Factor this code\n+\tout of get_init_files.\n+\t(get_init_files): Update.\n+\n 2019-09-11  Christian Biesinger  <cbiesinger@google.com>\n \n \t* main.c (get_init_files): Change to use std::string."
    },
    {
      "sha": "9e2288959016930b71321630cf6ab66533003cf2",
      "filename": "gdb/main.c",
      "status": "modified",
      "additions": 43,
      "deletions": 31,
      "changes": 74,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9224a01377868604ce4a7eb9c0d97736f7349dcd/gdb/main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9224a01377868604ce4a7eb9c0d97736f7349dcd/gdb/main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/main.c?ref=9224a01377868604ce4a7eb9c0d97736f7349dcd",
      "patch": "@@ -191,6 +191,47 @@ relocate_gdb_directory (const char *initial, bool relocatable)\n   return dir;\n }\n \n+/* Given a gdbinit path in FILE, adjusts it according to the gdb_datadir\n+   parameter if it is in the data dir, or passes it through relocate_path\n+   otherwise.  */\n+\n+static std::string\n+relocate_gdbinit_path_maybe_in_datadir (const std::string& file)\n+{\n+  size_t datadir_len = strlen (GDB_DATADIR);\n+\n+  std::string relocated_path;\n+\n+  /* If SYSTEM_GDBINIT lives in data-directory, and data-directory\n+     has been provided, search for SYSTEM_GDBINIT there.  */\n+  if (gdb_datadir_provided\n+      && datadir_len < file.length ()\n+      && filename_ncmp (file.c_str (), GDB_DATADIR, datadir_len) == 0\n+      && IS_DIR_SEPARATOR (file[datadir_len]))\n+    {\n+      /* Append the part of SYSTEM_GDBINIT that follows GDB_DATADIR\n+\t to gdb_datadir.  */\n+\n+      size_t start = datadir_len;\n+      for (; IS_DIR_SEPARATOR (file[start]); ++start)\n+\t;\n+      relocated_path = (std::string (gdb_datadir) + SLASH_STRING\n+\t\t\t+ file.substr (start));\n+    }\n+  else\n+    {\n+      char *relocated = relocate_path (gdb_program_name,\n+\t\t\t\t       file.c_str (),\n+\t\t\t\t       SYSTEM_GDBINIT_RELOCATABLE);\n+      if (relocated != nullptr)\n+\t{\n+\t  relocated_path = relocated;\n+\t  xfree (relocated);\n+\t}\n+    }\n+    return relocated_path;\n+}\n+\n /* Compute the locations of init files that GDB should source and\n    return them in SYSTEM_GDBINIT, HOME_GDBINIT, LOCAL_GDBINIT.  If\n    there is no system gdbinit (resp. home gdbinit and local gdbinit)\n@@ -212,37 +253,8 @@ get_init_files (std::string *system_gdbinit,\n \n       if (SYSTEM_GDBINIT[0])\n \t{\n-\t  size_t datadir_len = strlen (GDB_DATADIR);\n-\t  size_t sys_gdbinit_len = strlen (SYSTEM_GDBINIT);\n-\t  std::string relocated_sysgdbinit;\n-\n-\t  /* If SYSTEM_GDBINIT lives in data-directory, and data-directory\n-\t     has been provided, search for SYSTEM_GDBINIT there.  */\n-\t  if (gdb_datadir_provided\n-\t      && datadir_len < sys_gdbinit_len\n-\t      && filename_ncmp (SYSTEM_GDBINIT, GDB_DATADIR, datadir_len) == 0\n-\t      && IS_DIR_SEPARATOR (SYSTEM_GDBINIT[datadir_len]))\n-\t    {\n-\t      /* Append the part of SYSTEM_GDBINIT that follows GDB_DATADIR\n-\t\t to gdb_datadir.  */\n-\n-\t      size_t start = datadir_len;\n-\t      for (; IS_DIR_SEPARATOR (SYSTEM_GDBINIT[start]); ++start)\n-\t\t;\n-\t      relocated_sysgdbinit = (std::string (gdb_datadir) + SLASH_STRING\n-\t\t\t\t      + &SYSTEM_GDBINIT[start]);\n-\t    }\n-\t  else\n-\t    {\n-\t      char *relocated = relocate_path (gdb_program_name,\n-\t\t\t\t\t       SYSTEM_GDBINIT,\n-\t\t\t\t\t       SYSTEM_GDBINIT_RELOCATABLE);\n-\t      if (relocated != nullptr)\n-\t        {\n-\t\t  relocated_sysgdbinit = relocated;\n-\t\t  xfree (relocated);\n-\t\t}\n-\t    }\n+\t  std::string relocated_sysgdbinit\n+\t    = relocate_gdbinit_path_maybe_in_datadir (SYSTEM_GDBINIT);\n \t  if (!relocated_sysgdbinit.empty ()\n \t      && stat (relocated_sysgdbinit.c_str (), &s) == 0)\n \t    sysgdbinit = relocated_sysgdbinit;"
    }
  ]
}