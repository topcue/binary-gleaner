{
  "sha": "18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MThhYjIzYWY4YjNkNDczZjc5NWNlNDhlZTU0YTQ3ZTFhM2U3YWU0Nw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-02T21:41:08Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:21Z"
    },
    "message": "Rearrange TUI data window code\n\nAn earlier patch caused tui-windata.h to be essentially empty.  And,\nother earlier patches implemented TUI data window methods in any spot\nthat happened to be convenient at the time.\n\nThis patch rearranges all the data window code to be somewhat more\norganized.  It moves tui_data_window to tui-regs.h, and moves the\nimplementation of all methods to tui-regs.c.  It then removes\ntui-windata.h and tui-windata.c.\n\nIt also removes the \"structuring\" comments from tui-regs.c; these are\nnot the usual gdb style, and were out of date anyhow.  Finally, it\nmoves _initialize_tui_regs to the end of the file, per the usual gdb\nconvention.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.c: Update.\n\t* tui/tui-wingeneral.c (tui_data_window::refresh_window): Move to\n\ttui-regs.c.\n\t* tui/tui-windata.h: Remove file.\n\t* tui/tui-windata.c: Remove file.\n\t* tui/tui-win.c (tui_data_window::set_new_height)\n\t(tui_data_window::do_make_visible_with_new_height): Move to\n\ttui-regs.c.\n\t* tui/tui-regs.h (struct tui_data_window): Move from tui-data.h.\n\t* tui/tui-regs.c: Remove \"structuring\" comments.\n\t(tui_data_window::first_data_item_displayed)\n\t(tui_data_window::delete_data_content_windows)\n\t(tui_data_window::erase_data_content)\n\t(tui_data_window::display_all_data)\n\t(tui_data_window::refresh_all)\n\t(tui_data_window::do_scroll_vertical)\n\t(tui_data_window::clear_detail, tui_data_window::set_new_height)\n\t(tui_data_window::do_make_visible_with_new_height)\n\t(tui_data_window::refresh_window): Move from elsewhere.\n\t(_initialize_tui_regs): Move to end of file.\n\t* tui/tui-layout.c: Update.\n\t* tui/tui-hooks.c: Update.\n\t* tui/tui-data.h (struct tui_data_window): Move to tui-regs.h.\n\t* tui/tui-data.c (tui_data_window::clear_detail): Move to\n\ttui-regs.c.\n\t* Makefile.in (SUBDIR_TUI_SRCS): Remove tui-windata.c.",
    "tree": {
      "sha": "306c15b6b1bd672d984eb91f1062613ec4cd1f9d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/306c15b6b1bd672d984eb91f1062613ec4cd1f9d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "88b7e7ccb958220adabc307e6d38fc66877820fb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/88b7e7ccb958220adabc307e6d38fc66877820fb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/88b7e7ccb958220adabc307e6d38fc66877820fb"
    }
  ],
  "stats": {
    "total": 645,
    "additions": 291,
    "deletions": 354
  },
  "files": [
    {
      "sha": "8ccadef28612429ddf1a74da836074fe2c52974b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -1,3 +1,32 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.c: Update.\n+\t* tui/tui-wingeneral.c (tui_data_window::refresh_window): Move to\n+\ttui-regs.c.\n+\t* tui/tui-windata.h: Remove file.\n+\t* tui/tui-windata.c: Remove file.\n+\t* tui/tui-win.c (tui_data_window::set_new_height)\n+\t(tui_data_window::do_make_visible_with_new_height): Move to\n+\ttui-regs.c.\n+\t* tui/tui-regs.h (struct tui_data_window): Move from tui-data.h.\n+\t* tui/tui-regs.c: Remove \"structuring\" comments.\n+\t(tui_data_window::first_data_item_displayed)\n+\t(tui_data_window::delete_data_content_windows)\n+\t(tui_data_window::erase_data_content)\n+\t(tui_data_window::display_all_data)\n+\t(tui_data_window::refresh_all)\n+\t(tui_data_window::do_scroll_vertical)\n+\t(tui_data_window::clear_detail, tui_data_window::set_new_height)\n+\t(tui_data_window::do_make_visible_with_new_height)\n+\t(tui_data_window::refresh_window): Move from elsewhere.\n+\t(_initialize_tui_regs): Move to end of file.\n+\t* tui/tui-layout.c: Update.\n+\t* tui/tui-hooks.c: Update.\n+\t* tui/tui-data.h (struct tui_data_window): Move to tui-regs.h.\n+\t* tui/tui-data.c (tui_data_window::clear_detail): Move to\n+\ttui-regs.c.\n+\t* Makefile.in (SUBDIR_TUI_SRCS): Remove tui-windata.c.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-io.c (tui_puts_internal): Call wrefresh if newline is"
    },
    {
      "sha": "75936539720bf58f3f4e5c23046d0f86428c985e",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -291,7 +291,6 @@ SUBDIR_TUI_SRCS = \\\n \ttui/tui-source.c \\\n \ttui/tui-stack.c \\\n \ttui/tui-win.c \\\n-\ttui/tui-windata.c \\\n \ttui/tui-wingeneral.c \\\n \ttui/tui-winsource.c\n "
    },
    {
      "sha": "e861eb222ddc04cb552f76df689fd6a4a6675eb2",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -158,16 +158,6 @@ tui_cmd_window::clear_detail ()\n   wmove (handle, 0, 0);\n }\n \n-/* See tui-data.h.  */\n-\n-void\n-tui_data_window::clear_detail ()\n-{\n-  regs_content.clear ();\n-  regs_column_count = 1;\n-  display_regs = false;\n-}\n-\n /* Accessor for the locator win info.  Answers a pointer to the static\n    locator win info struct.  */\n struct tui_locator_window *"
    },
    {
      "sha": "ec60efda7a5359c457b7c2502219958c572af0d8",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -454,87 +454,6 @@ struct tui_disasm_window : public tui_source_window_base\n   void do_scroll_vertical (int num_to_scroll) override;\n };\n \n-struct tui_data_window : public tui_win_info\n-{\n-  tui_data_window ()\n-    : tui_win_info (DATA_WIN)\n-  {\n-  }\n-\n-  DISABLE_COPY_AND_ASSIGN (tui_data_window);\n-\n-  void clear_detail () override;\n-  void refresh_all () override;\n-\n-  void set_new_height (int height) override;\n-\n-  void refresh_window () override;\n-\n-  const char *name () const override\n-  {\n-    return DATA_NAME;\n-  }\n-\n-  /* Windows that are used to display registers.  */\n-  std::vector<std::unique_ptr<tui_data_item_window>> regs_content;\n-  int regs_column_count = 0;\n-  /* Should regs be displayed at all?  */\n-  bool display_regs = false;\n-  struct reggroup *current_group = nullptr;\n-\n-  /* Answer the number of the last line in the regs display.  If there\n-     are no registers (-1) is returned.  */\n-  int last_regs_line_no () const;\n-\n-  /* Answer the line number that the register element at element_no is\n-     on.  If element_no is greater than the number of register\n-     elements there are, -1 is returned.  */\n-  int line_from_reg_element_no (int element_no) const;\n-\n-  /* Answer the index of the first element in line_no.  If line_no is\n-     past the register area (-1) is returned.  */\n-  int first_reg_element_no_inline (int line_no) const;\n-\n-  /* Displays the data that is in the data window's content.  It does\n-     not set the content.  */\n-  void display_all_data ();\n-\n-  /* Delete all the item windows in the data window.  This is usually\n-     done when the data window is scrolled.  */\n-  void delete_data_content_windows ();\n-\n-  void erase_data_content (const char *prompt);\n-\n-  /* Display the registers in the content from 'start_element_no'\n-     until the end of the register content or the end of the display\n-     height.  No checking for displaying past the end of the registers\n-     is done here.  */\n-  void display_registers_from (int start_element_no);\n-\n-  /* Display the registers starting at line line_no in the data\n-     window.  Answers the line number that the display actually\n-     started from.  If nothing is displayed (-1) is returned.  */\n-  int display_registers_from_line (int line_no);\n-\n-protected:\n-\n-  void do_scroll_vertical (int num_to_scroll) override;\n-  void do_scroll_horizontal (int num_to_scroll) override\n-  {\n-  }\n-  void do_make_visible_with_new_height () override;\n-\n-  /* Return the index of the first element displayed.  If none are\n-     displayed, then return -1.  */\n-  int first_data_item_displayed ();\n-\n-  /* Display the registers in the content from 'start_element_no' on\n-     'start_line_no' until the end of the register content or the end\n-     of the display height.  This function checks that we won't\n-     display off the end of the register display.  */\n-  void display_reg_element_at_line (int start_element_no, int start_line_no);\n-};\n-\n struct tui_cmd_window : public tui_win_info\n {\n   tui_cmd_window ()"
    },
    {
      "sha": "a2d06f8a15242c874c0ac4479ac0c991050842ac",
      "filename": "gdb/tui/tui-hooks.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-hooks.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-hooks.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-hooks.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -45,7 +45,6 @@\n #include \"tui/tui-regs.h\"\n #include \"tui/tui-win.h\"\n #include \"tui/tui-stack.h\"\n-#include \"tui/tui-windata.h\"\n #include \"tui/tui-winsource.h\"\n \n #include \"gdb_curses.h\""
    },
    {
      "sha": "abc3fd6018293d3d76e247fe6eba9482ac505d07",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -29,7 +29,6 @@\n \n #include \"tui/tui.h\"\n #include \"tui/tui-data.h\"\n-#include \"tui/tui-windata.h\"\n #include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-stack.h\"\n #include \"tui/tui-regs.h\""
    },
    {
      "sha": "2470478ce859c6e04ff6d7c019ec78a89bce6611",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 179,
      "deletions": 34,
      "changes": 213,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -32,7 +32,6 @@\n #include \"target.h\"\n #include \"tui/tui-layout.h\"\n #include \"tui/tui-win.h\"\n-#include \"tui/tui-windata.h\"\n #include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-file.h\"\n #include \"tui/tui-regs.h\"\n@@ -43,10 +42,6 @@\n \n #include \"gdb_curses.h\"\n \n-\n-/*****************************************\n-** STATIC LOCAL FUNCTIONS FORWARD DECLS    **\n-******************************************/\n static void tui_display_register (struct tui_data_item_window *data);\n \n static void tui_show_register_group (tui_data_window *win_info,\n@@ -58,13 +53,7 @@ static void tui_get_register (struct frame_info *frame,\n \t\t\t      struct tui_data_item_window *data,\n \t\t\t      int regnum, bool *changedp);\n \n-\n-\n-/*****************************************\n-** PUBLIC FUNCTIONS                     **\n-******************************************/\n-\n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n int\n tui_data_window::last_regs_line_no () const\n@@ -80,7 +69,7 @@ tui_data_window::last_regs_line_no () const\n   return num_lines;\n }\n \n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n int\n tui_data_window::line_from_reg_element_no (int element_no) const\n@@ -104,7 +93,7 @@ tui_data_window::line_from_reg_element_no (int element_no) const\n     return (-1);\n }\n \n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n int\n tui_data_window::first_reg_element_no_inline (int line_no) const\n@@ -255,7 +244,7 @@ tui_show_register_group (tui_data_window *win_info,\n     }\n }\n \n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n void\n tui_data_window::display_registers_from (int start_element_no)\n@@ -337,7 +326,7 @@ tui_data_window::display_registers_from (int start_element_no)\n     }\n }\n \n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n void\n tui_data_window::display_reg_element_at_line (int start_element_no,\n@@ -366,7 +355,7 @@ tui_data_window::display_reg_element_at_line (int start_element_no,\n     }\n }\n \n-/* See tui-data.h.  */\n+/* See tui-regs.h.  */\n \n int\n tui_data_window::display_registers_from_line (int line_no)\n@@ -403,6 +392,167 @@ tui_data_window::display_registers_from_line (int line_no)\n }\n \n \n+/* Answer the index first element displayed.  If none are displayed,\n+   then return (-1).  */\n+int\n+tui_data_window::first_data_item_displayed ()\n+{\n+  for (int i = 0; i < regs_content.size (); i++)\n+    {\n+      struct tui_gen_win_info *data_item_win;\n+\n+      data_item_win = regs_content[i].get ();\n+      if (data_item_win->handle != NULL && data_item_win->is_visible)\n+\treturn i;\n+    }\n+\n+  return -1;\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::delete_data_content_windows ()\n+{\n+  for (auto &&win : regs_content)\n+    {\n+      tui_delete_win (win->handle);\n+      win->handle = NULL;\n+      win->is_visible = false;\n+    }\n+}\n+\n+\n+void\n+tui_data_window::erase_data_content (const char *prompt)\n+{\n+  werase (handle);\n+  tui_check_and_display_highlight_if_needed (this);\n+  if (prompt != NULL)\n+    {\n+      int half_width = (width - 2) / 2;\n+      int x_pos;\n+\n+      if (strlen (prompt) >= half_width)\n+\tx_pos = 1;\n+      else\n+\tx_pos = half_width - strlen (prompt);\n+      mvwaddstr (handle, (height / 2), x_pos, (char *) prompt);\n+    }\n+  wrefresh (handle);\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::display_all_data ()\n+{\n+  if (regs_content.empty ())\n+    erase_data_content (NO_DATA_STRING);\n+  else\n+    {\n+      erase_data_content (NULL);\n+      delete_data_content_windows ();\n+      tui_check_and_display_highlight_if_needed (this);\n+      display_registers_from (0);\n+    }\n+}\n+\n+\n+/* Function to redisplay the contents of the data window.  */\n+void\n+tui_data_window::refresh_all ()\n+{\n+  erase_data_content (NULL);\n+  if (!regs_content.empty ())\n+    {\n+      int first_element = first_data_item_displayed ();\n+\n+      if (first_element >= 0)\t/* Re-use existing windows.  */\n+\t{\n+\t  int first_line = (-1);\n+\n+\t  if (first_element < regs_content.size ())\n+\t    first_line = line_from_reg_element_no (first_element);\n+\n+\t  if (first_line >= 0)\n+\t    {\n+\t      erase_data_content (NULL);\n+\t      display_registers_from_line (first_line);\n+\t    }\n+\t}\n+    }\n+}\n+\n+\n+/* Scroll the data window vertically forward or backward.  */\n+void\n+tui_data_window::do_scroll_vertical (int num_to_scroll)\n+{\n+  int first_element_no;\n+  int first_line = (-1);\n+\n+  first_element_no = first_data_item_displayed ();\n+  if (first_element_no < regs_content.size ())\n+    first_line = line_from_reg_element_no (first_element_no);\n+  else\n+    { /* Calculate the first line from the element number which is in\n+        the general data content.  */\n+    }\n+\n+  if (first_line >= 0)\n+    {\n+      first_line += num_to_scroll;\n+      erase_data_content (NULL);\n+      delete_data_content_windows ();\n+      display_registers_from_line (first_line);\n+    }\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::clear_detail ()\n+{\n+  regs_content.clear ();\n+  regs_column_count = 1;\n+  display_regs = false;\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::set_new_height (int height)\n+{\n+  /* Delete all data item windows.  */\n+  for (auto &&win : regs_content)\n+    {\n+      tui_delete_win (win->handle);\n+      win->handle = NULL;\n+    }\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::do_make_visible_with_new_height ()\n+{\n+  display_all_data ();\n+}\n+\n+/* See tui-regs.h.  */\n+\n+void\n+tui_data_window::refresh_window ()\n+{\n+  tui_gen_win_info::refresh_window ();\n+  for (auto &&win : regs_content)\n+    {\n+      if (win != NULL)\n+\twin->refresh_window ();\n+    }\n+}\n+\n /* This function check all displayed registers for changes in values,\n    given a particular frame.  If the values have changed, they are\n    updated with the new value and highlighted.  */\n@@ -600,23 +750,6 @@ tui_reggroup_completer (struct cmd_list_element *ignore,\n     }\n }\n \n-void\n-_initialize_tui_regs (void)\n-{\n-  struct cmd_list_element **tuicmd, *cmd;\n-\n-  tuicmd = tui_get_cmd_list ();\n-\n-  cmd = add_cmd (\"reg\", class_tui, tui_reg_command, _(\"\\\n-TUI command to control the register window.\"), tuicmd);\n-  set_cmd_completer (cmd, tui_reggroup_completer);\n-}\n-\n-\n-/*****************************************\n-** STATIC LOCAL FUNCTIONS                 **\n-******************************************/\n-\n /* Get the register from the frame and return a printable\n    representation of it.  */\n \n@@ -666,3 +799,15 @@ tui_get_register (struct frame_info *frame,\n       xfree (prev_content);\n     }\n }\n+\n+void\n+_initialize_tui_regs (void)\n+{\n+  struct cmd_list_element **tuicmd, *cmd;\n+\n+  tuicmd = tui_get_cmd_list ();\n+\n+  cmd = add_cmd (\"reg\", class_tui, tui_reg_command, _(\"\\\n+TUI command to control the register window.\"), tuicmd);\n+  set_cmd_completer (cmd, tui_reggroup_completer);\n+}"
    },
    {
      "sha": "acefa41f99ee602efc9a126b0df6fb1af057e69d",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 83,
      "deletions": 1,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -22,7 +22,89 @@\n #ifndef TUI_TUI_REGS_H\n #define TUI_TUI_REGS_H\n \n-#include \"tui/tui-data.h\"  /* For struct tui_register_display_type.  */\n+#include \"tui/tui-data.h\"\n+\n+/* The TUI registers window.  */\n+struct tui_data_window : public tui_win_info\n+{\n+  tui_data_window ()\n+    : tui_win_info (DATA_WIN)\n+  {\n+  }\n+\n+  DISABLE_COPY_AND_ASSIGN (tui_data_window);\n+\n+  void clear_detail () override;\n+  void refresh_all () override;\n+\n+  void set_new_height (int height) override;\n+\n+  void refresh_window () override;\n+\n+  const char *name () const override\n+  {\n+    return DATA_NAME;\n+  }\n+\n+  /* Windows that are used to display registers.  */\n+  std::vector<std::unique_ptr<tui_data_item_window>> regs_content;\n+  int regs_column_count = 0;\n+  /* Should regs be displayed at all?  */\n+  bool display_regs = false;\n+  struct reggroup *current_group = nullptr;\n+\n+  /* Answer the number of the last line in the regs display.  If there\n+     are no registers (-1) is returned.  */\n+  int last_regs_line_no () const;\n+\n+  /* Answer the line number that the register element at element_no is\n+     on.  If element_no is greater than the number of register\n+     elements there are, -1 is returned.  */\n+  int line_from_reg_element_no (int element_no) const;\n+\n+  /* Answer the index of the first element in line_no.  If line_no is\n+     past the register area (-1) is returned.  */\n+  int first_reg_element_no_inline (int line_no) const;\n+\n+  /* Displays the data that is in the data window's content.  It does\n+     not set the content.  */\n+  void display_all_data ();\n+\n+  /* Delete all the item windows in the data window.  This is usually\n+     done when the data window is scrolled.  */\n+  void delete_data_content_windows ();\n+\n+  void erase_data_content (const char *prompt);\n+\n+  /* Display the registers in the content from 'start_element_no'\n+     until the end of the register content or the end of the display\n+     height.  No checking for displaying past the end of the registers\n+     is done here.  */\n+  void display_registers_from (int start_element_no);\n+\n+  /* Display the registers starting at line line_no in the data\n+     window.  Answers the line number that the display actually\n+     started from.  If nothing is displayed (-1) is returned.  */\n+  int display_registers_from_line (int line_no);\n+\n+protected:\n+\n+  void do_scroll_vertical (int num_to_scroll) override;\n+  void do_scroll_horizontal (int num_to_scroll) override\n+  {\n+  }\n+  void do_make_visible_with_new_height () override;\n+\n+  /* Return the index of the first element displayed.  If none are\n+     displayed, then return -1.  */\n+  int first_data_item_displayed ();\n+\n+  /* Display the registers in the content from 'start_element_no' on\n+     'start_line_no' until the end of the register content or the end\n+     of the display height.  This function checks that we won't\n+     display off the end of the register display.  */\n+  void display_reg_element_at_line (int start_element_no, int start_line_no);\n+};\n \n extern void tui_check_register_values (struct frame_info *);\n extern void tui_show_registers (struct reggroup *group);"
    },
    {
      "sha": "0c7042e9385b911160b956c4a26443b8440d9701",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -43,7 +43,6 @@\n #include \"tui/tui-disasm.h\"\n #include \"tui/tui-source.h\"\n #include \"tui/tui-winsource.h\"\n-#include \"tui/tui-windata.h\"\n #include \"tui/tui-win.h\"\n \n #include \"gdb_curses.h\"\n@@ -1243,19 +1242,6 @@ tui_source_window_base::set_new_height (int height)\n     }\n }\n \n-/* See tui-data.h.  */\n-\n-void\n-tui_data_window::set_new_height (int height)\n-{\n-  /* Delete all data item windows.  */\n-  for (auto &&win : regs_content)\n-    {\n-      tui_delete_win (win->handle);\n-      win->handle = NULL;\n-    }\n-}\n-\n /* Function make the target window (and auxiliary windows associated\n    with the targer) invisible, and set the new height and\n    location.  */\n@@ -1333,14 +1319,6 @@ tui_source_window_base::do_make_visible_with_new_height ()\n \n /* See tui-data.h.  */\n \n-void\n-tui_data_window::do_make_visible_with_new_height ()\n-{\n-  display_all_data ();\n-}\n-\n-/* See tui-data.h.  */\n-\n void\n tui_cmd_window::do_make_visible_with_new_height ()\n {"
    },
    {
      "sha": "2ee259e2af704f75d6c5f0479da8560f6fe2000c",
      "filename": "gdb/tui/tui-windata.c",
      "status": "removed",
      "additions": 0,
      "deletions": 162,
      "changes": 162,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88b7e7ccb958220adabc307e6d38fc66877820fb/gdb/tui/tui-windata.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88b7e7ccb958220adabc307e6d38fc66877820fb/gdb/tui/tui-windata.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.c?ref=88b7e7ccb958220adabc307e6d38fc66877820fb",
      "patch": "@@ -1,162 +0,0 @@\n-/* Data/register window display.\n-\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n-\n-   Contributed by Hewlett-Packard Company.\n-\n-   This file is part of GDB.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#include \"defs.h\"\n-#include \"tui/tui.h\"\n-#include \"tui/tui-data.h\"\n-#include \"tui/tui-wingeneral.h\"\n-#include \"tui/tui-regs.h\"\n-#include \"tui/tui-windata.h\"\n-#include \"gdb_curses.h\"\n-\n-\n-/*****************************************\n-** STATIC LOCAL FUNCTIONS FORWARD DECLS    **\n-******************************************/\n-\n-\n-\n-/*****************************************\n-** PUBLIC FUNCTIONS                        **\n-******************************************/\n-\n-\n-/* Answer the index first element displayed.  If none are displayed,\n-   then return (-1).  */\n-int\n-tui_data_window::first_data_item_displayed ()\n-{\n-  for (int i = 0; i < regs_content.size (); i++)\n-    {\n-      struct tui_gen_win_info *data_item_win;\n-\n-      data_item_win = regs_content[i].get ();\n-      if (data_item_win->handle != NULL && data_item_win->is_visible)\n-\treturn i;\n-    }\n-\n-  return -1;\n-}\n-\n-/* See tui-data.h.  */\n-\n-void\n-tui_data_window::delete_data_content_windows ()\n-{\n-  for (auto &&win : regs_content)\n-    {\n-      tui_delete_win (win->handle);\n-      win->handle = NULL;\n-      win->is_visible = false;\n-    }\n-}\n-\n-\n-void\n-tui_data_window::erase_data_content (const char *prompt)\n-{\n-  werase (handle);\n-  tui_check_and_display_highlight_if_needed (this);\n-  if (prompt != NULL)\n-    {\n-      int half_width = (width - 2) / 2;\n-      int x_pos;\n-\n-      if (strlen (prompt) >= half_width)\n-\tx_pos = 1;\n-      else\n-\tx_pos = half_width - strlen (prompt);\n-      mvwaddstr (handle, (height / 2), x_pos, (char *) prompt);\n-    }\n-  wrefresh (handle);\n-}\n-\n-/* See tui-data.h.  */\n-\n-void\n-tui_data_window::display_all_data ()\n-{\n-  if (regs_content.empty ())\n-    erase_data_content (NO_DATA_STRING);\n-  else\n-    {\n-      erase_data_content (NULL);\n-      delete_data_content_windows ();\n-      tui_check_and_display_highlight_if_needed (this);\n-      display_registers_from (0);\n-    }\n-}\n-\n-\n-/* Function to redisplay the contents of the data window.  */\n-void\n-tui_data_window::refresh_all ()\n-{\n-  erase_data_content (NULL);\n-  if (!regs_content.empty ())\n-    {\n-      int first_element = first_data_item_displayed ();\n-\n-      if (first_element >= 0)\t/* Re-use existing windows.  */\n-\t{\n-\t  int first_line = (-1);\n-\n-\t  if (first_element < regs_content.size ())\n-\t    first_line = line_from_reg_element_no (first_element);\n-\n-\t  if (first_line >= 0)\n-\t    {\n-\t      erase_data_content (NULL);\n-\t      display_registers_from_line (first_line);\n-\t    }\n-\t}\n-    }\n-}\n-\n-\n-/* Scroll the data window vertically forward or backward.  */\n-void\n-tui_data_window::do_scroll_vertical (int num_to_scroll)\n-{\n-  int first_element_no;\n-  int first_line = (-1);\n-\n-  first_element_no = first_data_item_displayed ();\n-  if (first_element_no < regs_content.size ())\n-    first_line = line_from_reg_element_no (first_element_no);\n-  else\n-    { /* Calculate the first line from the element number which is in\n-        the general data content.  */\n-    }\n-\n-  if (first_line >= 0)\n-    {\n-      first_line += num_to_scroll;\n-      erase_data_content (NULL);\n-      delete_data_content_windows ();\n-      display_registers_from_line (first_line);\n-    }\n-}\n-\n-\n-/*****************************************\n-** STATIC LOCAL FUNCTIONS               **\n-******************************************/"
    },
    {
      "sha": "3b89eefabc03c34cf764d31549ef9ee2f70415cb",
      "filename": "gdb/tui/tui-windata.h",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/88b7e7ccb958220adabc307e6d38fc66877820fb/gdb/tui/tui-windata.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/88b7e7ccb958220adabc307e6d38fc66877820fb/gdb/tui/tui-windata.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-windata.h?ref=88b7e7ccb958220adabc307e6d38fc66877820fb",
      "patch": "@@ -1,27 +0,0 @@\n-/* Data/register window display.\n-\n-   Copyright (C) 1998-2019 Free Software Foundation, Inc.\n-\n-   Contributed by Hewlett-Packard Company.\n-\n-   This file is part of GDB.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#ifndef TUI_TUI_WINDATA_H\n-#define TUI_TUI_WINDATA_H\n-\n-#include \"tui/tui-data.h\"\n-\n-#endif /* TUI_TUI_WINDATA_H */"
    },
    {
      "sha": "5d632b6f97e1e62d98fa935ba5932042be13ae41",
      "filename": "gdb/tui/tui-wingeneral.c",
      "status": "modified",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-wingeneral.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui-wingeneral.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-wingeneral.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -43,19 +43,6 @@ tui_gen_win_info::refresh_window ()\n     }\n }\n \n-/* See tui-data.h.  */\n-\n-void\n-tui_data_window::refresh_window ()\n-{\n-  tui_gen_win_info::refresh_window ();\n-  for (auto &&win : regs_content)\n-    {\n-      if (win != NULL)\n-\twin->refresh_window ();\n-    }\n-}\n-\n /* Function to delete the curses window, checking for NULL.  */\n void\n tui_delete_win (WINDOW *window)"
    },
    {
      "sha": "996dbaf6cf7d3c8a4d1c8a915c5e137329890d04",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/18ab23af8b3d473f795ce48ee54a47e1a3e7ae47/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=18ab23af8b3d473f795ce48ee54a47e1a3e7ae47",
      "patch": "@@ -30,7 +30,6 @@\n #include \"tui/tui-stack.h\"\n #include \"tui/tui-win.h\"\n #include \"tui/tui-winsource.h\"\n-#include \"tui/tui-windata.h\"\n #include \"target.h\"\n #include \"frame.h\"\n #include \"breakpoint.h\""
    }
  ]
}