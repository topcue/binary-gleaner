{
  "sha": "c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yzk2ZThiMDRkM2E4ZWY0MTg0M2M3ZDNmYTA5M2I1MGI1OTdkYzdlMA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-29T21:35:07Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-05-31T01:44:05Z"
    },
    "message": "Remove dwarf2_per_bfd::m_num_psymtabs\n\nNow that CUs and TUs are stored together in all_comp_units, the\nm_num_psymtabs member is no longer needed -- it is always identical to\nthe length of the vector.  This patch removes it.\n\n2021-05-30  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.h (struct dwarf2_per_bfd) <num_psymtabs,\n\tm_num_psymtabs>: Remove.\n\t(resize_symtabs): Update.\n\t* dwarf2/read.c (dwarf2_per_bfd::allocate_per_cu)\n\t(dwarf2_per_bfd::allocate_signatured_type): Update.",
    "tree": {
      "sha": "31dce094d1895a0220cb23617c8af1a2ca40fba5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/31dce094d1895a0220cb23617c8af1a2ca40fba5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "140c5aec0db2d1c27320274ab8aead925a1429fc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/140c5aec0db2d1c27320274ab8aead925a1429fc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/140c5aec0db2d1c27320274ab8aead925a1429fc"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 12,
    "deletions": 15
  },
  "files": [
    {
      "sha": "ecec841d860eb5e601c1c8b02ee8f26c8d3b4f81",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
      "patch": "@@ -1,3 +1,11 @@\n+2021-05-30  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_bfd) <num_psymtabs,\n+\tm_num_psymtabs>: Remove.\n+\t(resize_symtabs): Update.\n+\t* dwarf2/read.c (dwarf2_per_bfd::allocate_per_cu)\n+\t(dwarf2_per_bfd::allocate_signatured_type): Update.\n+\n 2021-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* Fix tab after space indentation issues throughout."
    },
    {
      "sha": "6da312413675149ac55f746e1a506f81652006d5",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
      "patch": "@@ -2288,7 +2288,7 @@ dwarf2_per_bfd::allocate_per_cu ()\n {\n   dwarf2_per_cu_data_up result (new dwarf2_per_cu_data);\n   result->per_bfd = this;\n-  result->index = m_num_psymtabs++;\n+  result->index = all_comp_units.size ();\n   return result;\n }\n \n@@ -2299,7 +2299,7 @@ dwarf2_per_bfd::allocate_signatured_type ()\n {\n   std::unique_ptr<signatured_type> result (new signatured_type);\n   result->per_bfd = this;\n-  result->index = m_num_psymtabs++;\n+  result->index = all_comp_units.size ();\n   tu_stats.nr_tus++;\n   return result;\n }"
    },
    {
      "sha": "07fbb36c419babfbbe5d67a05533344475315620",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 2,
      "deletions": 13,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=c96e8b04d3a8ef41843c7d3fa093b50b597dc7e0",
      "patch": "@@ -124,11 +124,6 @@ struct dwarf2_per_bfd\n      is allocated on the dwarf2_per_bfd obstack.  */\n   std::unique_ptr<signatured_type> allocate_signatured_type ();\n \n-  /* Return the number of partial symtabs allocated with allocate_per_cu\n-     and allocate_signatured_type so far.  */\n-  int num_psymtabs () const\n-  { return m_num_psymtabs; }\n-\n private:\n   /* This function is mapped across the sections and remembers the\n      offset and size of each of the debugging sections we are\n@@ -249,12 +244,6 @@ struct dwarf2_per_bfd\n \n   /* The address map that is used by the DWARF index code.  */\n   struct addrmap *index_addrmap = nullptr;\n-\n-private:\n-\n-  /* The total number of per_cu and signatured_type objects that have\n-     been created so far for this reader.  */\n-  size_t m_num_psymtabs = 0;\n };\n \n /* This is the per-objfile data associated with a type_unit_group.  */\n@@ -307,9 +296,9 @@ struct dwarf2_per_objfile\n   void resize_symtabs ()\n   {\n     /* The symtabs vector should only grow, not shrink.  */\n-    gdb_assert (per_bfd->num_psymtabs () >= m_symtabs.size ());\n+    gdb_assert (per_bfd->all_comp_units.size () >= m_symtabs.size ());\n \n-    m_symtabs.resize (per_bfd->num_psymtabs ());\n+    m_symtabs.resize (per_bfd->all_comp_units.size ());\n   }\n \n   /* Return true if the symtab corresponding to PER_CU has been set,"
    }
  ]
}