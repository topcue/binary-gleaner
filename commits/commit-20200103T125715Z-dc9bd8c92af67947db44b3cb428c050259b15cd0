{
  "sha": "dc9bd8c92af67947db44b3cb428c050259b15cd0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZGM5YmQ4YzkyYWY2Nzk0N2RiNDRiM2NiNDI4YzA1MDI1OWIxNWNkMA==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-01-03T12:55:12Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-03T12:57:15Z"
    },
    "message": "For PE format files, the base relocation table is necessary if the image is loaded at a different image base than specified in the PE header.  This patch provides a new option --enable-reloc-section to force the generation of this section.\n\n\t* emultempl/pe.em: Add new option --enable-reloc-section.\n\t* emultempl/pep.em: Likewise.\n\t* ld.texi: Document --enable-reloc-section.\n\t* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.\n\t(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.\n\t* pe-dll.h: Add extern declaration of option flag.\n\t* pep-dll.c (pe_dll_enable_reloc_section):\n\tAdd alias define for pep_dll_enable_reloc_section.\n\t* pep-dll.h: Add extern declaration of option flag.",
    "tree": {
      "sha": "f6115a6aabaced600c41c2b005e685593afa307b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f6115a6aabaced600c41c2b005e685593afa307b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/dc9bd8c92af67947db44b3cb428c050259b15cd0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc9bd8c92af67947db44b3cb428c050259b15cd0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/dc9bd8c92af67947db44b3cb428c050259b15cd0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc9bd8c92af67947db44b3cb428c050259b15cd0/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b26a3d5827edcb942b3af5b921bf317bbc0c8e83",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b26a3d5827edcb942b3af5b921bf317bbc0c8e83",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b26a3d5827edcb942b3af5b921bf317bbc0c8e83"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 52,
    "deletions": 24
  },
  "files": [
    {
      "sha": "476e6cb894c243c4e3ea40693999dccf84f75088",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -1,3 +1,15 @@\n+2020-01-03  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* emultempl/pe.em: Add new option --enable-reloc-section.\n+\t* emultempl/pep.em: Likewise.\n+\t* ld.texi: Document --enable-reloc-section.\n+\t* pe-dll.c (pe_dll_build_sections): Use pe_dll_enable_reloc_section.\n+\t(pe_dll_fill_sections): Simplify by calling pe_exe_fill_sections.\n+\t* pe-dll.h: Add extern declaration of option flag.\n+\t* pep-dll.c (pe_dll_enable_reloc_section):\n+\tAdd alias define for pep_dll_enable_reloc_section.\n+\t* pep-dll.h: Add extern declaration of option flag.\n+\n 2020-01-02  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \t* Makefile.am: Add new target z80-elf"
    },
    {
      "sha": "97fb1468aac92ecb11df16191c03a435bbcf6326",
      "filename": "ld/emultempl/pe.em",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/emultempl/pe.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/emultempl/pe.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pe.em?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -270,6 +270,7 @@ fragment <<EOF\n #define OPTION_INSERT_TIMESTAMP\t\t(OPTION_TERMINAL_SERVER_AWARE + 1)\n #define OPTION_NO_INSERT_TIMESTAMP\t(OPTION_INSERT_TIMESTAMP + 1)\n #define OPTION_BUILD_ID\t\t\t(OPTION_NO_INSERT_TIMESTAMP + 1)\n+#define OPTION_ENABLE_RELOC_SECTION\t(OPTION_BUILD_ID + 1)\n \n static void\n gld${EMULATION_NAME}_add_options\n@@ -349,6 +350,7 @@ gld${EMULATION_NAME}_add_options\n     {\"wdmdriver\", no_argument, NULL, OPTION_WDM_DRIVER},\n     {\"tsaware\", no_argument, NULL, OPTION_TERMINAL_SERVER_AWARE},\n     {\"build-id\", optional_argument, NULL, OPTION_BUILD_ID},\n+    {\"enable-reloc-section\", no_argument, NULL, OPTION_ENABLE_RELOC_SECTION},\n     {NULL, no_argument, NULL, 0}\n   };\n \n@@ -483,6 +485,7 @@ gld_${EMULATION_NAME}_list_options (FILE *file)\n                                        in object files\\n\"));\n   fprintf (file, _(\"  --dynamicbase                      Image base address may be relocated using\\n\\\n                                        address space layout randomization (ASLR)\\n\"));\n+  fprintf (file, _(\"  --enable-reloc-section             Create the base relocation table\\n\"));\n   fprintf (file, _(\"  --forceinteg               Code integrity checks are enforced\\n\"));\n   fprintf (file, _(\"  --nxcompat                 Image is compatible with data execution prevention\\n\"));\n   fprintf (file, _(\"  --no-isolation             Image understands isolation but do not isolate the image\\n\"));\n@@ -855,6 +858,9 @@ gld${EMULATION_NAME}_handle_option (int optc)\n /*  Get DLLCharacteristics bits  */\n     case OPTION_DYNAMIC_BASE:\n       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE;\n+      /* fall through */\n+    case OPTION_ENABLE_RELOC_SECTION:\n+      pe_dll_enable_reloc_section = 1;\n       break;\n     case OPTION_FORCE_INTEGRITY:\n       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY;\n@@ -1947,6 +1953,7 @@ gld_${EMULATION_NAME}_finish (void)\n #ifdef DLL_SUPPORT\n   if (bfd_link_pic (&link_info)\n #if !defined(TARGET_IS_shpe)\n+      || pe_dll_enable_reloc_section\n       || (!bfd_link_relocatable (&link_info)\n \t  && pe_def_file->num_exports != 0)\n #endif"
    },
    {
      "sha": "e8f5ca503fb5695acd95d240da98e574b5095d69",
      "filename": "ld/emultempl/pep.em",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/emultempl/pep.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/emultempl/pep.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/pep.em?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -247,7 +247,8 @@ enum options\n   OPTION_INSERT_TIMESTAMP,\n   OPTION_NO_INSERT_TIMESTAMP,\n   OPTION_TERMINAL_SERVER_AWARE,\n-  OPTION_BUILD_ID\n+  OPTION_BUILD_ID,\n+  OPTION_ENABLE_RELOC_SECTION\n };\n \n static void\n@@ -325,6 +326,7 @@ gld${EMULATION_NAME}_add_options\n     {\"insert-timestamp\", no_argument, NULL, OPTION_INSERT_TIMESTAMP},\n     {\"no-insert-timestamp\", no_argument, NULL, OPTION_NO_INSERT_TIMESTAMP},\n     {\"build-id\", optional_argument, NULL, OPTION_BUILD_ID},\n+    {\"enable-reloc-section\", no_argument, NULL, OPTION_ENABLE_RELOC_SECTION},\n     {NULL, no_argument, NULL, 0}\n   };\n \n@@ -448,6 +450,7 @@ gld_${EMULATION_NAME}_list_options (FILE *file)\n                                        layout randomization (ASLR)\\n\"));\n   fprintf (file, _(\"  --dynamicbase                      Image base address may be relocated using\\n\\\n                                        address space layout randomization (ASLR)\\n\"));\n+  fprintf (file, _(\"  --enable-reloc-section             Create the base relocation table\\n\"));\n   fprintf (file, _(\"  --forceinteg               Code integrity checks are enforced\\n\"));\n   fprintf (file, _(\"  --nxcompat                 Image is compatible with data execution prevention\\n\"));\n   fprintf (file, _(\"  --no-isolation             Image understands isolation but do not isolate the image\\n\"));\n@@ -799,9 +802,12 @@ gld${EMULATION_NAME}_handle_option (int optc)\n     /*  Get DLLCharacteristics bits  */\n     case OPTION_HIGH_ENTROPY_VA:\n       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA;\n-      break;\n+      /* fall through */\n     case OPTION_DYNAMIC_BASE:\n       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE;\n+      /* fall through */\n+    case OPTION_ENABLE_RELOC_SECTION:\n+      pep_dll_enable_reloc_section = 1;\n       break;\n     case OPTION_FORCE_INTEGRITY:\n       pe_dll_characteristics |= IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY;\n@@ -1755,6 +1761,7 @@ gld_${EMULATION_NAME}_finish (void)\n \n #ifdef DLL_SUPPORT\n   if (bfd_link_pic (&link_info)\n+      || pep_dll_enable_reloc_section\n       || (!bfd_link_relocatable (&link_info)\n \t  && pep_def_file->num_exports != 0))\n     {"
    },
    {
      "sha": "eb7bcb993383fa57392acd45dda66956c9995f1f",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -2995,12 +2995,15 @@ of the PE file header:\n @item --high-entropy-va\n Image is compatible with 64-bit address space layout randomization\n (ASLR).\n+This option also implies @option{--dynamicbase} and\n+@option{--enable-reloc-section}.\n \n @kindex --dynamicbase\n @item --dynamicbase\n The image base address may be relocated using address space layout\n randomization (ASLR).  This feature was introduced with MS Windows\n Vista for i386 PE targets.\n+This option also implies @option{--enable-reloc-section}.\n \n @kindex --forceinteg\n @item --forceinteg\n@@ -3043,6 +3046,11 @@ same sources are linked.  The option @option{--no-insert-timestamp}\n can be used to insert a zero value for the timestamp, this ensuring\n that binaries produced from identical sources will compare\n identically.\n+\n+@kindex --enable-reloc-section\n+@item --enable-reloc-section\n+Create the base relocation table, which is necessary if the image\n+is loaded at a different image base than specified in the PE header.\n @end table\n \n @c man end"
    },
    {
      "sha": "397af8780e47f5cd9ccc1c24a104906876edd38e",
      "filename": "ld/pe-dll.c",
      "status": "modified",
      "additions": 13,
      "deletions": 22,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pe-dll.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pe-dll.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pe-dll.c?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -160,6 +160,7 @@ int pe_dll_extra_pe_debug = 0;\n int pe_use_nul_prefixed_import_tables = 0;\n int pe_use_coff_long_section_names = -1;\n int pe_leading_underscore = -1;\n+int pe_dll_enable_reloc_section = 0;\n \n /* Static variables and types.  */\n \n@@ -3554,7 +3555,14 @@ pe_dll_build_sections (bfd *abfd, struct bfd_link_info *info)\n   process_def_file_and_drectve (abfd, info);\n \n   if (pe_def_file->num_exports == 0 && !bfd_link_pic (info))\n-    return;\n+    {\n+      if (pe_dll_enable_reloc_section)\n+\t{\n+\t  build_filler_bfd (0);\n+\t  pe_output_file_set_long_section_names (filler_bfd);\n+\t}\n+      return;\n+    }\n \n   generate_edata (abfd, info);\n   build_filler_bfd (1);\n@@ -3573,33 +3581,16 @@ pe_exe_build_sections (bfd *abfd, struct bfd_link_info *info ATTRIBUTE_UNUSED)\n void\n pe_dll_fill_sections (bfd *abfd, struct bfd_link_info *info)\n {\n-  pe_dll_id_target (bfd_get_target (abfd));\n-  pe_output_file_set_long_section_names (abfd);\n-  image_base = pe_data (abfd)->pe_opthdr.ImageBase;\n+  pe_exe_fill_sections (abfd, info);\n \n-  generate_reloc (abfd, info);\n-  if (reloc_sz > 0)\n+  if (edata_s)\n     {\n-      bfd_set_section_size (reloc_s, reloc_sz);\n-\n-      /* Resize the sections.  */\n-      lang_reset_memory_regions ();\n-      lang_size_sections (NULL, TRUE);\n-\n-      /* Redo special stuff.  */\n-      ldemul_after_allocation ();\n-\n-      /* Do the assignments again.  */\n-      lang_do_assignments (lang_final_phase_enum);\n+      fill_edata (abfd, info);\n+      edata_s->contents = edata_d;\n     }\n \n-  fill_edata (abfd, info);\n-\n   if (bfd_link_dll (info))\n     pe_data (abfd)->dll = 1;\n-\n-  edata_s->contents = edata_d;\n-  reloc_s->contents = reloc_d;\n }\n \n void"
    },
    {
      "sha": "2dbd0fb9867f5683cef32e28f783da54868ae988",
      "filename": "ld/pe-dll.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pe-dll.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pe-dll.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pe-dll.h?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -38,6 +38,7 @@ extern int pe_dll_extra_pe_debug;\n extern int pe_use_nul_prefixed_import_tables;\n extern int pe_use_coff_long_section_names;\n extern int pe_leading_underscore;\n+extern int pe_dll_enable_reloc_section;\n \n typedef enum { EXCLUDESYMS, EXCLUDELIBS, EXCLUDEFORIMPLIB } exclude_type;\n "
    },
    {
      "sha": "16140d322b0d2cfcff08077ada2cdf4f2b0a2c90",
      "filename": "ld/pep-dll.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pep-dll.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pep-dll.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pep-dll.c?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -39,6 +39,7 @@\n #define pe_use_coff_long_section_names \\\n \t\t\t\t    pep_use_coff_long_section_names\n #define pe_leading_underscore\t    pep_leading_underscore\n+#define pe_dll_enable_reloc_section pep_dll_enable_reloc_section\n \n /* Unique global name for functions to avoid double defined symbols.  */\n #define pe_find_data_imports        pep_find_data_imports"
    },
    {
      "sha": "d05598f064d1d506f1e1615d1275a62a3ad02ac1",
      "filename": "ld/pep-dll.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pep-dll.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/dc9bd8c92af67947db44b3cb428c050259b15cd0/ld/pep-dll.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/pep-dll.h?ref=dc9bd8c92af67947db44b3cb428c050259b15cd0",
      "patch": "@@ -39,6 +39,7 @@ extern int pep_dll_extra_pe_debug;\n extern int pep_use_nul_prefixed_import_tables;\n extern int pep_use_coff_long_section_names;\n extern int pep_leading_underscore;\n+extern int pep_dll_enable_reloc_section;\n \n typedef enum { EXCLUDESYMS, EXCLUDELIBS, EXCLUDEFORIMPLIB } exclude_type;\n "
    }
  ]
}