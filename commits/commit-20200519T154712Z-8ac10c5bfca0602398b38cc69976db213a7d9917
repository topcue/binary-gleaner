{
  "sha": "8ac10c5bfca0602398b38cc69976db213a7d9917",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGFjMTBjNWJmY2EwNjAyMzk4YjM4Y2M2OTk3NmRiMjEzYTdkOTkxNw==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-19T15:47:12Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-19T15:47:12Z"
    },
    "message": "Allow readelf to issue warnings if checking is enabled and there are discrepancies between the dynamic tags and the dynamic sections.\n\n\tPR binutils/25809\n\t* readelf.c (process_program_headers): Warn if the PT_DYNAMIC\n\tsegment doesn't match the .dynamic section and checks are\n\tenabled.\n\t(struct filedata): Add dynamic_symtab_section and\n\tdynamic_strtab_section fields.\n\t(process_section_headers): Set dynamic_symtab_section to the\n\t.dynsym section.  Set dynamic_strtab_section to the .dynstr\n\tsection.\n\t(process_dynamic_section): Warn if the .dynsym section doesn't\n\tmatch DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't\n\tDT_STRTAB and DT_STRSZ.  But only if checks are enabled.",
    "tree": {
      "sha": "7138bc1ff4533ed7299dc72e4be2e91639fc19f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7138bc1ff4533ed7299dc72e4be2e91639fc19f3"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8ac10c5bfca0602398b38cc69976db213a7d9917",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ac10c5bfca0602398b38cc69976db213a7d9917",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8ac10c5bfca0602398b38cc69976db213a7d9917",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8ac10c5bfca0602398b38cc69976db213a7d9917/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7e94cf6cb018df7cc1311afb2b15e9f69adb60d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7e94cf6cb018df7cc1311afb2b15e9f69adb60d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7e94cf6cb018df7cc1311afb2b15e9f69adb60d9"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 47,
    "deletions": 7
  },
  "files": [
    {
      "sha": "76de37e449a6dd27b6cd63cd2a8b2f79482adc78",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ac10c5bfca0602398b38cc69976db213a7d9917/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ac10c5bfca0602398b38cc69976db213a7d9917/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=8ac10c5bfca0602398b38cc69976db213a7d9917",
      "patch": "@@ -1,3 +1,18 @@\n+2020-05-19  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR binutils/25809\n+\t* readelf.c (process_program_headers): Warn if the PT_DYNAMIC\n+\tsegment doesn't match the .dynamic section and checks are\n+\tenabled.\n+\t(struct filedata): Add dynamic_symtab_section and\n+\tdynamic_strtab_section fields.\n+\t(process_section_headers): Set dynamic_symtab_section to the\n+\t.dynsym section.  Set dynamic_strtab_section to the .dynstr\n+\tsection.\n+\t(process_dynamic_section): Warn if the .dynsym section doesn't\n+\tmatch DT_SYMTAB and DT_SYMENT or the .dynstr section doesn't\n+\tDT_STRTAB and DT_STRSZ.  But only if checks are enabled.\n+\n 2020-05-19  Alan Modra  <amodra@gmail.com>\n \n \t* ar.c (map_over_members, get_pos_bfd, delete_members, move_members),"
    },
    {
      "sha": "87bb574129fb5b67f2ddc1dde9f6fe45ed7da381",
      "filename": "binutils/readelf.c",
      "status": "modified",
      "additions": 32,
      "deletions": 7,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8ac10c5bfca0602398b38cc69976db213a7d9917/binutils/readelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8ac10c5bfca0602398b38cc69976db213a7d9917/binutils/readelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/readelf.c?ref=8ac10c5bfca0602398b38cc69976db213a7d9917",
      "patch": "@@ -267,8 +267,10 @@ typedef struct filedata\n   bfd_size_type        dynamic_size;\n   size_t               dynamic_nent;\n   Elf_Internal_Dyn *   dynamic_section;\n+  Elf_Internal_Shdr *  dynamic_strtab_section;\n   char *               dynamic_strings;\n   unsigned long        dynamic_strings_length;\n+  Elf_Internal_Shdr *  dynamic_symtab_section;\n   unsigned long        num_dynamic_syms;\n   Elf_Internal_Sym *   dynamic_symbols;\n   bfd_vma              version_info[16];\n@@ -5363,13 +5365,13 @@ process_program_headers (Filedata * filedata)\n \t      filedata->dynamic_addr = sec->sh_offset;\n \t      filedata->dynamic_size = sec->sh_size;\n \n-\t      if (filedata->dynamic_addr < segment->p_offset\n-\t\t  || filedata->dynamic_addr > segment->p_offset + segment->p_filesz)\n-\t\twarn (_(\"the .dynamic section is not contained\"\n-\t\t\t\" within the dynamic segment\\n\"));\n-\t      else if (filedata->dynamic_addr > segment->p_offset)\n-\t\twarn (_(\"the .dynamic section is not the first section\"\n-\t\t\t\" in the dynamic segment.\\n\"));\n+\t      /* The PT_DYNAMIC segment, which is used by the run-time\n+\t\t loader,  should exactly match the .dynamic section.  */\n+\t      if (do_checks\n+\t\t  && (filedata->dynamic_addr != segment->p_offset\n+\t\t      || filedata->dynamic_size != segment->p_filesz))\n+\t\twarn (_(\"\\\n+the .dynamic section is not the same as the dynamic segment\\n\"));\n \t    }\n \n \t  /* PR binutils/17512: Avoid corrupt dynamic section info in the\n@@ -6319,6 +6321,7 @@ process_section_headers (Filedata * filedata)\n \t  CHECK_ENTSIZE (section, i, Sym);\n \t  filedata->dynamic_symbols\n \t    = GET_ELF_SYMBOLS (filedata, section, &filedata->num_dynamic_syms);\n+\t  filedata->dynamic_symtab_section = section;\n \t  break;\n \n \tcase SHT_STRTAB:\n@@ -6335,6 +6338,7 @@ process_section_headers (Filedata * filedata)\n \t\t\t\t     1, section->sh_size, _(\"dynamic strings\"));\n \t      filedata->dynamic_strings_length\n \t\t= filedata->dynamic_strings == NULL ? 0 : section->sh_size;\n+\t      filedata->dynamic_strtab_section = section;\n \t    }\n \t  break;\n \n@@ -10341,6 +10345,18 @@ process_dynamic_section (Filedata * filedata)\n \t\t  section.sh_size = (num_of_syms\n \t\t\t\t     * filedata->dynamic_info[DT_SYMENT]);\n \t\t  section.sh_entsize = filedata->dynamic_info[DT_SYMENT];\n+\n+\t\t  if (do_checks\n+\t\t      && filedata->dynamic_symtab_section != NULL\n+\t\t      && ((filedata->dynamic_symtab_section->sh_offset\n+\t\t\t   != section.sh_offset)\n+\t\t\t  || (filedata->dynamic_symtab_section->sh_size\n+\t\t\t      != section.sh_size)\n+\t\t\t  || (filedata->dynamic_symtab_section->sh_entsize\n+\t\t\t      != section.sh_entsize)))\n+\t\t    warn (_(\"\\\n+the .dynsym section doesn't match the DT_SYMTAB and DT_SYMENT tags\\n\"));\n+\n \t\t  section.sh_name = filedata->string_table_length;\n \t\t  filedata->dynamic_symbols\n \t\t    = GET_ELF_SYMBOLS (filedata, &section,\n@@ -10378,6 +10394,15 @@ process_dynamic_section (Filedata * filedata)\n \t    offset = offset_from_vma (filedata,\n \t\t\t\t      filedata->dynamic_info[DT_STRTAB],\n \t\t\t\t      str_tab_len);\n+\t    if (do_checks\n+\t\t&& filedata->dynamic_strtab_section\n+\t\t&& ((filedata->dynamic_strtab_section->sh_offset\n+\t\t     != (file_ptr) offset)\n+\t\t    || (filedata->dynamic_strtab_section->sh_size\n+\t\t\t!= str_tab_len)))\n+\t      warn (_(\"\\\n+the .dynstr section doesn't match the DT_STRTAB and DT_STRSZ tags\\n\"));\n+\n \t    filedata->dynamic_strings\n \t      = (char *) get_data (NULL, filedata, offset, 1, str_tab_len,\n \t\t\t\t   _(\"dynamic string table\"));"
    }
  ]
}