{
  "sha": "63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjNjNmZjNmNhY2Y4MmU2YjM5ZjczNzNkNDRjMWUxZTFhMGE3NTdmYQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-06-04T19:45:20Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2019-06-04T19:45:33Z"
    },
    "message": "i386: Check for reserved VEX.vvvv and EVEX.vvvv\n\nIf VEX.vvvv and EVEX.vvvv are reserved, they must be all 1s, which are\nall 0s in inverted form.  Add check for unused VEX.vvvv and EVEX.vvvv\nwhen disassembling VEX and EVEX instructions.\n\ngas/\n\n\tPR binutils/24626\n\t* testsuite/gas/i386/disassem.s: Add tests for reserved VEX.vvvv\n\tand EVEX.vvvv.\n\t* testsuite/gas/i386/x86-64-disassem.s: Likewise.\n\t* testsuite/gas/i386/disassem.d: Updated.\n\t* testsuite/gas/i386/x86-64-disassem.d: Likewise.\n\nopcodes/\n\n\tPR binutils/24626\n\t* i386-dis.c (print_insn): Check for unused VEX.vvvv and\n\tEVEX.vvvv when disassembling VEX and EVEX instructions.\n\t(OP_VEX): Set vex.register_specifier to 0 after readding\n\tvex.register_specifier.\n\t(OP_Vex_2src_1): Likewise.\n\t(OP_Vex_2src_2): Likewise.\n\t(OP_LWP_E): Likewise.\n\t(OP_EX_Vex): Don't check vex.register_specifier.\n\t(OP_XMM_Vex): Likewise.",
    "tree": {
      "sha": "3e831fa004f9e57c096800067866fa1fd16107c6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3e831fa004f9e57c096800067866fa1fd16107c6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad118caa9f690114d11384b0813f30980cc333f3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad118caa9f690114d11384b0813f30980cc333f3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad118caa9f690114d11384b0813f30980cc333f3"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 49,
    "deletions": 10
  },
  "files": [
    {
      "sha": "036d734dd98ede86566f04845559a4d93a906d71",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -1,3 +1,12 @@\n+2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24626\n+\t* testsuite/gas/i386/disassem.s: Add tests for reserved VEX.vvvv\n+\tand EVEX.vvvv.\n+\t* testsuite/gas/i386/x86-64-disassem.s: Likewise.\n+\t* testsuite/gas/i386/disassem.d: Updated.\n+\t* testsuite/gas/i386/x86-64-disassem.d: Likewise.\n+\n 2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \t    Lili Cui  <lili.cui@intel.com>\n "
    },
    {
      "sha": "ff9ee497e32224a1ecea7bcc6c77c2951055ff1d",
      "filename": "gas/testsuite/gas/i386/disassem.d",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/disassem.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/disassem.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/disassem.d?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -341,4 +341,9 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*6f[ \t]*outsl  %ds:\\(%esi\\),\\(%dx\\)\n [ \t]*[a-f0-9]+:[ \t]*c4 e1 f9 93[ \t]*\\(bad\\)[ ]*\n [ \t]*[a-f0-9]+:[ \t]*3f[ \t]*aas[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*c4 e2 01 1c[ \t]*\\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*41[ \t]*inc[ \t]*%ecx\n+[ \t]*[a-f0-9]+:[ \t]*37[ \t]*aaa[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*62 f2 ad 08 1c[ \t]*\\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*01[ \t]*.byte[ \t]*0x1\n #pass"
    },
    {
      "sha": "700208aa356f8cd03b6eb0d30f79e618e88d8cd7",
      "filename": "gas/testsuite/gas/i386/disassem.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/disassem.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/disassem.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/disassem.s?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -167,3 +167,5 @@\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x9B\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x6F\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x3F\n+.byte 0xc4, 0xe2, 0x1, 0x1c, 0x41, 0x37\n+.byte 0x62, 0xf2, 0xad, 0x08, 0x1c, 0x01"
    },
    {
      "sha": "c8277bf0eba724132b489b9a6853310ec858d475",
      "filename": "gas/testsuite/gas/i386/x86-64-disassem.d",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/x86-64-disassem.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/x86-64-disassem.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-disassem.d?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -341,4 +341,8 @@ Disassembly of section \\.text:\n [ \t]*[a-f0-9]+:[ \t]*6f[ \t]*outsl  %ds:\\(%rsi\\),\\(%dx\\)\n [ \t]*[a-f0-9]+:[ \t]*c4 e1 f9 93[ \t]*\\(bad\\)[ ]*\n [ \t]*[a-f0-9]+:[ \t]*3f[ \t]*\\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*c4 62 01 1c[ \t]*\\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*41 37[ \t]*rex.B \\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*62 72 ad 08 1c[ \t]*\\(bad\\)[ ]*\n+[ \t]*[a-f0-9]+:[ \t]*01[ \t]*.byte[ \t]*0x1\n #pass"
    },
    {
      "sha": "ade5e15c1db654670fcaa56eaf695e8d774955d3",
      "filename": "gas/testsuite/gas/i386/x86-64-disassem.s",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/x86-64-disassem.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/gas/testsuite/gas/i386/x86-64-disassem.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-disassem.s?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -167,3 +167,5 @@\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x9B\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x6F\n .byte 0xC4, 0xE1, 0xF9, 0x93, 0x3F\n+.byte 0xc4, 0x62, 0x1, 0x1c, 0x41, 0x37\n+.byte 0x62, 0x72, 0xad, 0x08, 0x1c, 0x01"
    },
    {
      "sha": "9f5b347c68fcea45b76585eb675174259010aadb",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -1,3 +1,16 @@\n+2019-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/24626\n+\t* i386-dis.c (print_insn): Check for unused VEX.vvvv and\n+\tEVEX.vvvv when disassembling VEX and EVEX instructions.\n+\t(OP_VEX): Set vex.register_specifier to 0 after readding\n+\tvex.register_specifier.\n+\t(OP_Vex_2src_1): Likewise.\n+\t(OP_Vex_2src_2): Likewise.\n+\t(OP_LWP_E): Likewise.\n+\t(OP_EX_Vex): Don't check vex.register_specifier.\n+\t(OP_XMM_Vex): Likewise.\n+\n 2019-06-04  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \t    Lili Cui  <lili.cui@intel.com>\n "
    },
    {
      "sha": "f5975398328d13037edd24b1c5174843a347ed85",
      "filename": "opcodes/i386-dis.c",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/opcodes/i386-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa/opcodes/i386-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/i386-dis.c?ref=63c6fc6cacf82e6b39f7373d44c1e1e1a0a757fa",
      "patch": "@@ -12155,6 +12155,14 @@ print_insn (bfd_vma pc, disassemble_info *info)\n \t}\n     }\n \n+  /* If VEX.vvvv and EVEX.vvvv are unused, they must be all 1s, which\n+     are all 0s in inverted form.  */\n+  if (need_vex && vex.register_specifier != 0)\n+    {\n+      (*info->fprintf_func) (info->stream, \"(bad)\");\n+      return end_codep - priv.the_buffer;\n+    }\n+\n   /* Check if the REX prefix is used.  */\n   if (rex_ignored == 0 && (rex ^ rex_used) == 0 && last_rex_prefix >= 0)\n     all_prefixes[last_rex_prefix] = 0;\n@@ -15921,6 +15929,7 @@ OP_VEX (int bytemode, int sizeflag ATTRIBUTE_UNUSED)\n     return;\n \n   reg = vex.register_specifier;\n+  vex.register_specifier = 0;\n   if (address_mode != mode_64bit)\n     reg &= 7;\n   else if (vex.evex && !vex.v)\n@@ -16204,6 +16213,7 @@ OP_Vex_2src_1 (int bytemode, int sizeflag)\n   if (vex.w)\n     {\n       unsigned int reg = vex.register_specifier;\n+      vex.register_specifier = 0;\n \n       if (address_mode != mode_64bit)\n \treg &= 7;\n@@ -16221,6 +16231,7 @@ OP_Vex_2src_2 (int bytemode, int sizeflag)\n   else\n     {\n       unsigned int reg = vex.register_specifier;\n+      vex.register_specifier = 0;\n \n       if (address_mode != mode_64bit)\n \treg &= 7;\n@@ -16298,23 +16309,15 @@ static void\n OP_EX_Vex (int bytemode, int sizeflag)\n {\n   if (modrm.mod != 3)\n-    {\n-      if (vex.register_specifier != 0)\n-\tBadOp ();\n-      need_vex_reg = 0;\n-    }\n+    need_vex_reg = 0;\n   OP_EX (bytemode, sizeflag);\n }\n \n static void\n OP_XMM_Vex (int bytemode, int sizeflag)\n {\n   if (modrm.mod != 3)\n-    {\n-      if (vex.register_specifier != 0)\n-\tBadOp ();\n-      need_vex_reg = 0;\n-    }\n+    need_vex_reg = 0;\n   OP_XMM (bytemode, sizeflag);\n }\n \n@@ -16594,6 +16597,7 @@ OP_LWP_E (int bytemode ATTRIBUTE_UNUSED, int sizeflag ATTRIBUTE_UNUSED)\n {\n   const char **names;\n   unsigned int reg = vex.register_specifier;\n+  vex.register_specifier = 0;\n \n   if (rex & REX_W)\n     names = names64;"
    }
  ]
}