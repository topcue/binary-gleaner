{
  "sha": "90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTBkMDBiYmQ5YzUxNGEwZmVhNTJkOWRjNDRiOThjZTFkZDU2NDA5NA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-13T01:37:03Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-13T01:37:03Z"
    },
    "message": "Sync config and libiberty with GCC\n\nconfig/\n\n\tPR bootstrap/94998\n\t* cet.m4 (GCC_CET_HOST_FLAGS): Enable CET in cross compiler if\n\tpossible.\n\nlibiberty/\n\n\tPR bootstrap/94998\n\t* configure: Regenerated.",
    "tree": {
      "sha": "95be8573f0dd17a81fe95b218960074ddd870fda",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/95be8573f0dd17a81fe95b218960074ddd870fda"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "09f20ec88626cfba0a3e0ee0f5af80b172986d23",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09f20ec88626cfba0a3e0ee0f5af80b172986d23",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/09f20ec88626cfba0a3e0ee0f5af80b172986d23"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 35,
    "deletions": 9
  },
  "files": [
    {
      "sha": "de8c327b548267613c941345dfbb6353da81aaaa",
      "filename": "config/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/config/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/config/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/ChangeLog?ref=90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
      "patch": "@@ -1,3 +1,12 @@\n+2020-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tSync with GCC\n+\t2020-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/94998\n+\t* cet.m4 (GCC_CET_HOST_FLAGS): Enable CET in cross compiler if\n+\tpossible.\n+\n 2020-04-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tSync with GCC"
    },
    {
      "sha": "d9608699cd521a72e38a1e6184ffbd1862b4622b",
      "filename": "config/cet.m4",
      "status": "modified",
      "additions": 12,
      "deletions": 6,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/config/cet.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/config/cet.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/config/cet.m4?ref=90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
      "patch": "@@ -111,7 +111,8 @@ if test x$may_have_cet = xyes; then\n fi\n \n if test x$may_have_cet = xyes; then\n-  AC_TRY_RUN([\n+  if test x$cross_compiling = xno; then\n+    AC_TRY_RUN([\n static void\n foo (void)\n {\n@@ -137,12 +138,17 @@ main ()\n   bar ();\n   return 0;\n }\n-  ],\n-  [have_cet=no],\n-  [have_cet=yes])\n-  if test x$enable_cet = xno -a x$have_cet = xyes; then\n-    AC_MSG_ERROR([Intel CET must be enabled on Intel CET enabled host])\n+    ],\n+    [have_cet=no],\n+    [have_cet=yes])\n+    if test x$enable_cet = xno -a x$have_cet = xyes; then\n+      AC_MSG_ERROR([Intel CET must be enabled on Intel CET enabled host])\n+    fi\n   fi\n+else\n+  # Enable CET in cross compiler if possible so that it will run on both\n+  # CET and non-CET hosts.\n+  have_cet=yes\n fi\n if test x$enable_cet = xyes; then\n   $1=\"-fcf-protection\""
    },
    {
      "sha": "f5691180e4004a9bd2fdd30f4768e677bc8fbc63",
      "filename": "libiberty/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/libiberty/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/libiberty/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/ChangeLog?ref=90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/94998\n+\t* configure: Regenerated.\n+\n 2020-04-28  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/94739"
    },
    {
      "sha": "3f82c5bb865cb09edd605138a8e7bf98c32f3f45",
      "filename": "libiberty/configure",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/libiberty/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/90d00bbd9c514a0fea52d9dc44b98ce1dd564094/libiberty/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libiberty/configure?ref=90d00bbd9c514a0fea52d9dc44b98ce1dd564094",
      "patch": "@@ -5375,7 +5375,8 @@ rm -f core conftest.err conftest.$ac_objext \\\n fi\n \n if test x$may_have_cet = xyes; then\n-  if test \"$cross_compiling\" = yes; then :\n+  if test x$cross_compiling = xno; then\n+    if test \"$cross_compiling\" = yes; then :\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n as_fn_error $? \"cannot run test program while cross compiling\n@@ -5420,9 +5421,14 @@ rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n   conftest.$ac_objext conftest.beam conftest.$ac_ext\n fi\n \n-  if test x$enable_cet = xno -a x$have_cet = xyes; then\n-    as_fn_error $? \"Intel CET must be enabled on Intel CET enabled host\" \"$LINENO\" 5\n+    if test x$enable_cet = xno -a x$have_cet = xyes; then\n+      as_fn_error $? \"Intel CET must be enabled on Intel CET enabled host\" \"$LINENO\" 5\n+    fi\n   fi\n+else\n+  # Enable CET in cross compiler if possible so that it will run on both\n+  # CET and non-CET hosts.\n+  have_cet=yes\n fi\n if test x$enable_cet = xyes; then\n   CET_HOST_FLAGS=\"-fcf-protection\""
    }
  ]
}