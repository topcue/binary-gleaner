{
  "sha": "4ffc13fb0e4a1c5158cdf00f2751378653101207",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGZmYzEzZmIwZTRhMWM1MTU4Y2RmMDBmMjc1MTM3ODY1MzEwMTIwNw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-18T20:38:50Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-06-23T12:34:11Z"
    },
    "message": "gdb: Convert language la_print_typedef field to a method\n\nThis commit changes the language_data::la_print_typedef function\npointer member variable into a member function of language_defn.\n\nThere should be no user visible changes after this commit.\n\ngdb/ChangeLog:\n\n\t* ada-lang.c (ada_language_data): Delete la_print_typedef\n\tinitializer.\n\t(ada_language::print_typedef): New member function.\n\t* c-lang.c (c_language_data): Delete la_print_typedef initializer.\n\t(cplus_language_data): Likewise.\n\t(asm_language_data): Likewise.\n\t(minimal_language_data): Likewise.\n\t* d-lang.c (d_language_data): Likewise.\n\t* f-lang.c (f_language_data): Likewise.\n\t(f_language::print_typedef): New member function.\n\t* go-lang.c (go_language_data): Delete la_print_typedef\n\tinitializer.\n\t* language.c (language_defn::print_typedef): Define member\n\tfunction.\n\t(unknown_language_data): Delete la_print_typedef initializer.\n\t(unknown_language::print_typedef): New member function.\n\t(auto_language_data): Delete la_print_typedef initializer.\n\t(auto_language::print_typedef): New member function.\n\t* language.h (language_data): Delete la_print_typedef field.\n\t(language_defn::print_typedef): Declare new member function.\n\t(LA_PRINT_TYPEDEF): Update call to print_typedef.\n\t(default_print_typedef): Delete declaration.\n\t* m2-lang.c (m2_language_data): Delete la_print_typedef\n\tinitializer.\n\t(m2_language::print_typedef): New member function.\n\t* objc-lang.c (objc_language_data): Delete la_print_typedef\n\tinitializer.\n\t* opencl-lang.c (opencl_language_data): Likewise.\n\t* p-lang.c (pascal_language_data): Likewise.\n\t(pascal_language::print_typedef): New member function.\n\t* rust-lang.c (rust_print_typedef): Delete function,\n\timplementation moved to rust_language::print_typedef.\n\t(rust_language): Delete la_print_typedef initializer.\n\t(rust_language::print_typedef): New member function,\n\timplementation from rust_print_typedef.\n\t* typeprint.c (default_print_typedef): Delete.",
    "tree": {
      "sha": "2abc7e9de6f8702e9997fb4de53f2bc1ec38d36c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2abc7e9de6f8702e9997fb4de53f2bc1ec38d36c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4ffc13fb0e4a1c5158cdf00f2751378653101207",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffc13fb0e4a1c5158cdf00f2751378653101207",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4ffc13fb0e4a1c5158cdf00f2751378653101207",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4ffc13fb0e4a1c5158cdf00f2751378653101207/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d711ee67aca06c9753f09dc154eb8c75cb4f58ef",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d711ee67aca06c9753f09dc154eb8c75cb4f58ef",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d711ee67aca06c9753f09dc154eb8c75cb4f58ef"
    }
  ],
  "stats": {
    "total": 169,
    "additions": 118,
    "deletions": 51
  },
  "files": [
    {
      "sha": "de348bb4770a2a5c1cc90e04c6bf60a3c68b8bd4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -1,3 +1,42 @@\n+2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* ada-lang.c (ada_language_data): Delete la_print_typedef\n+\tinitializer.\n+\t(ada_language::print_typedef): New member function.\n+\t* c-lang.c (c_language_data): Delete la_print_typedef initializer.\n+\t(cplus_language_data): Likewise.\n+\t(asm_language_data): Likewise.\n+\t(minimal_language_data): Likewise.\n+\t* d-lang.c (d_language_data): Likewise.\n+\t* f-lang.c (f_language_data): Likewise.\n+\t(f_language::print_typedef): New member function.\n+\t* go-lang.c (go_language_data): Delete la_print_typedef\n+\tinitializer.\n+\t* language.c (language_defn::print_typedef): Define member\n+\tfunction.\n+\t(unknown_language_data): Delete la_print_typedef initializer.\n+\t(unknown_language::print_typedef): New member function.\n+\t(auto_language_data): Delete la_print_typedef initializer.\n+\t(auto_language::print_typedef): New member function.\n+\t* language.h (language_data): Delete la_print_typedef field.\n+\t(language_defn::print_typedef): Declare new member function.\n+\t(LA_PRINT_TYPEDEF): Update call to print_typedef.\n+\t(default_print_typedef): Delete declaration.\n+\t* m2-lang.c (m2_language_data): Delete la_print_typedef\n+\tinitializer.\n+\t(m2_language::print_typedef): New member function.\n+\t* objc-lang.c (objc_language_data): Delete la_print_typedef\n+\tinitializer.\n+\t* opencl-lang.c (opencl_language_data): Likewise.\n+\t* p-lang.c (pascal_language_data): Likewise.\n+\t(pascal_language::print_typedef): New member function.\n+\t* rust-lang.c (rust_print_typedef): Delete function,\n+\timplementation moved to rust_language::print_typedef.\n+\t(rust_language): Delete la_print_typedef initializer.\n+\t(rust_language::print_typedef): New member function,\n+\timplementation from rust_print_typedef.\n+\t* typeprint.c (default_print_typedef): Delete.\n+\n 2020-06-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-lang.c (ada_language_data): Delete la_printstr initializer."
    },
    {
      "sha": "752bf44cef03249ea9b85656ee64c1794d38e93e",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -13681,7 +13681,6 @@ extern const struct language_data ada_language_data =\n   macro_expansion_no,\n   ada_extensions,\n   &ada_exp_descriptor,\n-  ada_print_typedef,            /* Print a typedef using appropriate syntax */\n   NULL,                         /* name_of_this */\n   true,                         /* la_store_sym_names_in_linkage_form_p */\n   ada_op_print_tab,             /* expression operators for printing */\n@@ -14132,6 +14131,14 @@ class ada_language : public language_defn\n \t\t  force_ellipses, options);\n   }\n \n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    ada_print_typedef (type, new_symbol, stream);\n+  }\n+\n protected:\n   /* See language.h.  */\n "
    },
    {
      "sha": "aca0d7a6bc9d18cb2b3bfccc17f35d2467fc269d",
      "filename": "gdb/c-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/c-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/c-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -889,7 +889,6 @@ extern const struct language_data c_language_data =\n   macro_expansion_c,\n   c_extensions,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -992,7 +991,6 @@ extern const struct language_data cplus_language_data =\n   macro_expansion_c,\n   cplus_extensions,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"this\",                       /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -1192,7 +1190,6 @@ extern const struct language_data asm_language_data =\n   macro_expansion_c,\n   asm_extensions,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -1250,7 +1247,6 @@ extern const struct language_data minimal_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n   true,\t\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */"
    },
    {
      "sha": "b907dd750e0098de231627b0c453086ed5d2c107",
      "filename": "gdb/d-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/d-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/d-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/d-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -142,8 +142,6 @@ extern const struct language_data d_language_data =\n   macro_expansion_no,\n   d_extensions,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate\n-\t\t\t\t   syntax.  */\n   \"this\",\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   d_op_print_tab,\t\t/* Expression operators for printing.  */"
    },
    {
      "sha": "946d5bc25afc523c55f22b91c8449e8d14794e3b",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -513,7 +513,6 @@ extern const struct language_data f_language_data =\n   macro_expansion_no,\n   f_extensions,\n   &exp_descriptor_f,\n-  f_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,                    \t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   f_op_print_tab,\t\t/* expression operators for printing */\n@@ -702,6 +701,14 @@ class f_language : public language_defn\n \t\t      force_ellipses, '\\'', 0, options);\n   }\n \n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    f_print_typedef (type, new_symbol, stream);\n+  }\n+\n protected:\n \n   /* See language.h.  */"
    },
    {
      "sha": "fa263997b12a24ec12c537683840140d36259303",
      "filename": "gdb/go-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/go-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/go-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/go-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -527,8 +527,6 @@ extern const struct language_data go_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_c,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate\n-\t\t\t\t   syntax.  */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   go_op_print_tab,\t\t/* Expression operators for printing.  */"
    },
    {
      "sha": "5ae8c46879c5c04a8279f8aebc5f5aeda4698546",
      "filename": "gdb/language.c",
      "status": "modified",
      "additions": 25,
      "deletions": 2,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/language.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/language.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -681,6 +681,15 @@ language_defn::printstr (struct ui_file *stream, struct type *elttype,\n \t      options);\n }\n \n+/* See language.h.  */\n+\n+void\n+language_defn::print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t\t      struct ui_file *stream) const\n+{\n+  c_print_typedef (type, new_symbol, stream);\n+}\n+\n /* The default implementation of the get_symbol_name_matcher_inner method\n    from the language_defn class.  Matches with strncmp_iw.  */\n \n@@ -774,7 +783,6 @@ extern const struct language_data unknown_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   \"this\",        \t    \t/* name_of_this */\n   true,\t\t\t\t/* store_sym_names_in_linkage_form_p */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n@@ -868,6 +876,14 @@ class unknown_language : public language_defn\n   {\n     error (_(\"unimplemented unknown_language::printstr called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    error (_(\"unimplemented unknown_language::print_typedef called\"));\n+  }\n };\n \n /* Single instance of the unknown language class.  */\n@@ -887,7 +903,6 @@ extern const struct language_data auto_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_standard,\n-  default_print_typedef,\t/* Print a typedef using appropriate syntax */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* store_sym_names_in_linkage_form_p */\n   unk_op_print_tab,\t\t/* expression operators for printing */\n@@ -981,6 +996,14 @@ class auto_language : public language_defn\n   {\n     error (_(\"unimplemented auto_language::printstr called\"));\n   }\n+\n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    error (_(\"unimplemented auto_language::print_typedef called\"));\n+  }\n };\n \n /* Single instance of the fake \"auto\" language.  */"
    },
    {
      "sha": "19cd8205718b12f35a0de95d2bfde9c44cec0462",
      "filename": "gdb/language.h",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/language.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/language.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/language.h?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -225,13 +225,6 @@ struct language_data\n \n     const struct exp_descriptor *la_exp_desc;\n \n-    /* Print a typedef using syntax appropriate for this language.\n-       TYPE is the underlying type.  NEW_SYMBOL is the symbol naming\n-       the type.  STREAM is the output stream on which to print.  */\n-\n-    void (*la_print_typedef) (struct type *type, struct symbol *new_symbol,\n-\t\t\t      struct ui_file *stream);\n-\n     /* Now come some hooks for lookup_symbol.  */\n \n     /* If this is non-NULL, specifies the name that of the implicit\n@@ -552,6 +545,14 @@ struct language_defn : language_data\n \t\t\t const char *encoding, int force_ellipses,\n \t\t\t const struct value_print_options *options) const;\n \n+\n+  /* Print a typedef using syntax appropriate for this language.\n+     TYPE is the underlying type.  NEW_SYMBOL is the symbol naming\n+     the type.  STREAM is the output stream on which to print.  */\n+\n+  virtual void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t\t      struct ui_file *stream) const;\n+\n protected:\n \n   /* This is the overridable part of the GET_SYMBOL_NAME_MATCHER method.\n@@ -648,7 +649,7 @@ extern enum language set_language (enum language);\n   (current_language->print_type(type,varstring,stream,show,level,flags))\n \n #define LA_PRINT_TYPEDEF(type,new_symbol,stream) \\\n-  (current_language->la_print_typedef(type,new_symbol,stream))\n+  (current_language->print_typedef (type,new_symbol,stream))\n \n #define LA_VALUE_PRINT(val,stream,options) \\\n   (current_language->value_print (val,stream,options))\n@@ -715,10 +716,6 @@ extern char *language_demangle (const struct language_defn *current_language,\n    (and returned) by reference at the language level.  */\n struct language_pass_by_ref_info language_pass_by_reference (struct type *type);\n \n-/* The default implementation of la_print_typedef.  */\n-void default_print_typedef (struct type *type, struct symbol *new_symbol,\n-\t\t\t    struct ui_file *stream);\n-\n void c_get_string (struct value *value,\n \t\t   gdb::unique_xmalloc_ptr<gdb_byte> *buffer,\n \t\t   int *length, struct type **char_type,"
    },
    {
      "sha": "f0f7c22fb5d698457a0416fe554041cecbb45c55",
      "filename": "gdb/m2-lang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/m2-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/m2-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/m2-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -229,7 +229,6 @@ extern const struct language_data m2_language_data =\n   macro_expansion_no,\n   NULL,\n   &exp_descriptor_modula2,\n-  m2_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t                /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   m2_op_print_tab,\t\t/* expression operators for printing */\n@@ -427,6 +426,15 @@ class m2_language : public language_defn\n     if (force_ellipses || i < length)\n       fputs_filtered (\"...\", stream);\n   }\n+\n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    m2_print_typedef (type, new_symbol, stream);\n+  }\n+\n };\n \n /* Single instance of the M2 language.  */"
    },
    {
      "sha": "0c952730a967f53cc4be88885ebc057a8ca17744",
      "filename": "gdb/objc-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/objc-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/objc-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/objc-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -337,7 +337,6 @@ extern const struct language_data objc_language_data =\n   macro_expansion_c,\n   objc_extensions,\n   &exp_descriptor_standard,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"self\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   objc_op_print_tab,\t\t/* Expression operators for printing */"
    },
    {
      "sha": "2431faed00e0964cc34d736bf36629137d5fce3c",
      "filename": "gdb/opencl-lang.c",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/opencl-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/opencl-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/opencl-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -1016,7 +1016,6 @@ extern const struct language_data opencl_language_data =\n   macro_expansion_c,\n   NULL,\n   &exp_descriptor_opencl,\n-  c_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,                         /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */"
    },
    {
      "sha": "9fd823185b15b72196979a30d93d117f0c0031e2",
      "filename": "gdb/p-lang.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/p-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/p-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/p-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -276,7 +276,6 @@ extern const struct language_data pascal_language_data =\n   macro_expansion_no,\n   p_extensions,\n   &exp_descriptor_standard,\n-  pascal_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   \"this\",\t\t        /* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   pascal_op_print_tab,\t\t/* expression operators for printing */\n@@ -494,6 +493,15 @@ class pascal_language : public language_defn\n     if (force_ellipses || i < length)\n       fputs_filtered (\"...\", stream);\n   }\n+\n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    pascal_print_typedef (type, new_symbol, stream);\n+  }\n+\n };\n \n /* Single instance of the Pascal language class.  */"
    },
    {
      "sha": "083b3f73277573e4a283ece2396dd1a93f644498",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 11,
      "deletions": 14,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -765,19 +765,6 @@ rust_print_struct_def (struct type *type, const char *varstring,\n   fputs_filtered (is_tuple_struct ? \")\" : \"}\", stream);\n }\n \n-/* la_print_typedef implementation for Rust.  */\n-\n-static void\n-rust_print_typedef (struct type *type,\n-\t\t    struct symbol *new_symbol,\n-\t\t    struct ui_file *stream)\n-{\n-  type = check_typedef (type);\n-  fprintf_filtered (stream, \"type %s = \", new_symbol->print_name ());\n-  type_print (type, \"\", stream, 0);\n-  fprintf_filtered (stream, \";\");\n-}\n-\n /* la_print_type implementation for Rust.  */\n \n static void\n@@ -1953,7 +1940,6 @@ extern const struct language_data rust_language_data =\n   macro_expansion_no,\n   rust_extensions,\n   &exp_descriptor_rust,\n-  rust_print_typedef,\t\t/* Print a typedef using appropriate syntax */\n   NULL,\t\t\t\t/* name_of_this */\n   false,\t\t\t/* la_store_sym_names_in_linkage_form_p */\n   c_op_print_tab,\t\t/* expression operators for printing */\n@@ -2155,6 +2141,17 @@ class rust_language : public language_defn\n     rust_printstr (stream, elttype, string, length, encoding,\n \t\t   force_ellipses, options);\n   }\n+\n+  /* See language.h.  */\n+\n+  void print_typedef (struct type *type, struct symbol *new_symbol,\n+\t\t      struct ui_file *stream) const override\n+  {\n+    type = check_typedef (type);\n+    fprintf_filtered (stream, \"type %s = \", new_symbol->print_name ());\n+    type_print (type, \"\", stream, 0);\n+    fprintf_filtered (stream, \";\");\n+  }\n };\n \n /* Single instance of the Rust language class.  */"
    },
    {
      "sha": "08b9a426eac3f1c5233e360302b249517337e744",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4ffc13fb0e4a1c5158cdf00f2751378653101207/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=4ffc13fb0e4a1c5158cdf00f2751378653101207",
      "patch": "@@ -368,15 +368,6 @@ typedef_print (struct type *type, struct symbol *newobj, struct ui_file *stream)\n   LA_PRINT_TYPEDEF (type, newobj, stream);\n }\n \n-/* The default way to print a typedef.  */\n-\n-void\n-default_print_typedef (struct type *type, struct symbol *new_symbol,\n-\t\t       struct ui_file *stream)\n-{\n-  error (_(\"Language not supported.\"));\n-}\n-\n /* Print a description of a type TYPE in the form of a declaration of a\n    variable named VARSTRING.  (VARSTRING is demangled if necessary.)\n    Output goes to STREAM (via stdio)."
    }
  ]
}