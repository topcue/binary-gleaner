{
  "sha": "f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Zjc1ZmJlOGFkMmUzZDliMzRiZjFmNDQ4YTZkZjMyOGZmMzYxODIyZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-26T00:19:27Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-03-26T00:32:58Z"
    },
    "message": "alpha-vms: Sanity check ETIR__C_CTL_DFLOC index\n\nI doubt anyone will want to create more than 16M debug location\nentries.  If there is no bound the object format allows for 32-bit\nindices and of course fuzzers find that and attempt allocation of up\nto a 16G byte array.  The patch also fixes potential integer overflows\nin calculating the array size.\n\n\t* vms-alpha.c (dst_define_location): Limit size of dst_ptr_offsets\n\tarray.\n\t(_bfd_vms_slurp_object_records): Rename \"err\" to \"ok\".",
    "tree": {
      "sha": "59a87f782ad6c3ba3af0de9bd3adfd824ac39019",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/59a87f782ad6c3ba3af0de9bd3adfd824ac39019"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "46b438bb7369a55eefef15cd5d1afbb5c2c5742e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/46b438bb7369a55eefef15cd5d1afbb5c2c5742e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/46b438bb7369a55eefef15cd5d1afbb5c2c5742e"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 23,
    "deletions": 9
  },
  "files": [
    {
      "sha": "b5a2e7d447d5b13afa0c8c98de5aea278046b0ae",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* vms-alpha.c (dst_define_location): Limit size of dst_ptr_offsets\n+\tarray.\n+\t(_bfd_vms_slurp_object_records): Rename \"err\" to \"ok\".\n+\n 2020-03-25  Nick Clifton  <nickc@redhat.com>\n \n \t* cofflink.c (bfd_coff_get_internal_extra_pe_aouthdr): New"
    },
    {
      "sha": "594363b32afe7ad590515f9610851e5bf68a0402",
      "filename": "bfd/vms-alpha.c",
      "status": "modified",
      "additions": 17,
      "deletions": 9,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f/bfd/vms-alpha.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f75fbe8ad2e3d9b34bf1f448a6df328ff361822f/bfd/vms-alpha.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/vms-alpha.c?ref=f75fbe8ad2e3d9b34bf1f448a6df328ff361822f",
      "patch": "@@ -1553,6 +1553,14 @@ dst_define_location (bfd *abfd, unsigned int loc)\n {\n   vms_debug2 ((4, \"dst_define_location (%d)\\n\", (int)loc));\n \n+  if (loc > 1 << 24)\n+    {\n+      /* 16M entries ought to be plenty.  */\n+      bfd_set_error (bfd_error_bad_value);\n+      _bfd_error_handler (_(\"dst_define_location %u too large\"), loc);\n+      return FALSE;\n+    }\n+\n   /* Grow the ptr offset table if necessary.  */\n   if (loc + 1 > PRIV (dst_ptr_offsets_count))\n     {\n@@ -2634,7 +2642,7 @@ _bfd_vms_slurp_eeom (bfd *abfd)\n static bfd_boolean\n _bfd_vms_slurp_object_records (bfd * abfd)\n {\n-  bfd_boolean err;\n+  bfd_boolean ok;\n   int type;\n \n   do\n@@ -2651,27 +2659,27 @@ _bfd_vms_slurp_object_records (bfd * abfd)\n       switch (type)\n \t{\n \tcase EOBJ__C_EMH:\n-\t  err = _bfd_vms_slurp_ehdr (abfd);\n+\t  ok = _bfd_vms_slurp_ehdr (abfd);\n \t  break;\n \tcase EOBJ__C_EEOM:\n-\t  err = _bfd_vms_slurp_eeom (abfd);\n+\t  ok = _bfd_vms_slurp_eeom (abfd);\n \t  break;\n \tcase EOBJ__C_EGSD:\n-\t  err = _bfd_vms_slurp_egsd (abfd);\n+\t  ok = _bfd_vms_slurp_egsd (abfd);\n \t  break;\n \tcase EOBJ__C_ETIR:\n-\t  err = TRUE; /* _bfd_vms_slurp_etir (abfd); */\n+\t  ok = TRUE; /* _bfd_vms_slurp_etir (abfd); */\n \t  break;\n \tcase EOBJ__C_EDBG:\n-\t  err = _bfd_vms_slurp_edbg (abfd);\n+\t  ok = _bfd_vms_slurp_edbg (abfd);\n \t  break;\n \tcase EOBJ__C_ETBT:\n-\t  err = _bfd_vms_slurp_etbt (abfd);\n+\t  ok = _bfd_vms_slurp_etbt (abfd);\n \t  break;\n \tdefault:\n-\t  err = FALSE;\n+\t  ok = FALSE;\n \t}\n-      if (!err)\n+      if (!ok)\n \t{\n \t  vms_debug2 ((2, \"slurp type %d failed\\n\", type));\n \t  return FALSE;"
    }
  ]
}