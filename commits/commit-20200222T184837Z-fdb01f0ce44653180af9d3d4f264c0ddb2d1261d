{
  "sha": "fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmRiMDFmMGNlNDQ2NTMxODBhZjlkM2Q0ZjI2NGMwZGRiMmQxMjYxZA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:26Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-22T18:48:37Z"
    },
    "message": "TUI windows do not need to store their type\n\nTUI windows no longer need to store their type -- there's only a\nsingle spot that uses this information, and it can be changed to use\ndynamic_cast.  (It could be cleaned up even more, by using a virtual\nmethod, but I haven't done so.)  This patch removes the \"type\" field\nfrom tui_gen_win_info, and this in turn allows removing a couple of\nenumerator constants.\n\ngdb/ChangeLog\n2020-02-22  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.h (enum tui_win_type) <LOCATOR_WIN, DATA_ITEM_WIN>:\n\tRemove constants.\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<tui_source_window_base>: Remove parameter.\n\t* tui/tui-winsource.c\n\t(tui_source_window_base::tui_source_window_base): Remove\n\tparameter.\n\t(tui_source_window_base::refill): Update.\n\t* tui/tui-stack.h (struct tui_locator_window)\n\t<tui_locator_window>: Update.\n\t* tui/tui-source.h (struct tui_source_window) <tui_source_window>:\n\tDefault the constructor.\n\t* tui/tui-regs.h (struct tui_data_item_window)\n\t<tui_data_item_window>: Default the constructor.\n\t(struct tui_data_window) <tui_data_window>: Likewise.\n\t* tui/tui-disasm.h (struct tui_disasm_window) <tui_disasm_window>:\n\tDefault the constructor.\n\t* tui/tui-data.h (struct tui_gen_win_info) <tui_gen_win_info>:\n\tDefault the constructor.\n\t<type>: Remove.\n\t(struct tui_win_info) <tui_win_info>: Default the constructor.\n\t* tui/tui-data.c (tui_win_info::tui_win_info): Remove.\n\t* tui/tui-command.h (struct tui_cmd_window) <tui_cmd_window>:\n\tDefault the constructor.\n\nChange-Id: I594cd07d2e0bba71ad594a6fb263904ce2febcd6",
    "tree": {
      "sha": "48e764972c1c724ed13bf700db9cd770bb4421a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/48e764972c1c724ed13bf700db9cd770bb4421a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/865a5aec04b504d33c83baf5e05f6cdf95ac9dc3"
    }
  ],
  "stats": {
    "total": 82,
    "additions": 39,
    "deletions": 43
  },
  "files": [
    {
      "sha": "dc54fc40e63a571f158fff30a8a7a238e7c30059",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -1,3 +1,30 @@\n+2020-02-22  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.h (enum tui_win_type) <LOCATOR_WIN, DATA_ITEM_WIN>:\n+\tRemove constants.\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<tui_source_window_base>: Remove parameter.\n+\t* tui/tui-winsource.c\n+\t(tui_source_window_base::tui_source_window_base): Remove\n+\tparameter.\n+\t(tui_source_window_base::refill): Update.\n+\t* tui/tui-stack.h (struct tui_locator_window)\n+\t<tui_locator_window>: Update.\n+\t* tui/tui-source.h (struct tui_source_window) <tui_source_window>:\n+\tDefault the constructor.\n+\t* tui/tui-regs.h (struct tui_data_item_window)\n+\t<tui_data_item_window>: Default the constructor.\n+\t(struct tui_data_window) <tui_data_window>: Likewise.\n+\t* tui/tui-disasm.h (struct tui_disasm_window) <tui_disasm_window>:\n+\tDefault the constructor.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <tui_gen_win_info>:\n+\tDefault the constructor.\n+\t<type>: Remove.\n+\t(struct tui_win_info) <tui_win_info>: Default the constructor.\n+\t* tui/tui-data.c (tui_win_info::tui_win_info): Remove.\n+\t* tui/tui-command.h (struct tui_cmd_window) <tui_cmd_window>:\n+\tDefault the constructor.\n+\n 2020-02-22  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.h (tui_make_all_invisible): Don't declare."
    },
    {
      "sha": "211d0c8d8a24d17af8a07cf26a3f4d9793cc3667",
      "filename": "gdb/tui/tui-command.h",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -27,10 +27,7 @@\n /* The TUI command window.  */\n struct tui_cmd_window : public tui_win_info\n {\n-  tui_cmd_window ()\n-    : tui_win_info (CMD_WIN)\n-  {\n-  }\n+  tui_cmd_window () = default;\n \n   DISABLE_COPY_AND_ASSIGN (tui_cmd_window);\n "
    },
    {
      "sha": "db637d8fbe65cbbff4de6c3d8d9808f1d332897d",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -129,11 +129,6 @@ tui_prev_win (struct tui_win_info *cur_win)\n }\n \n \n-tui_win_info::tui_win_info (enum tui_win_type type)\n-  : tui_gen_win_info (type)\n-{\n-}\n-\n void\n tui_win_info::rerender ()\n {"
    },
    {
      "sha": "51208b1100e8781dd2bce20c36ef4029202d2b44",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -22,7 +22,7 @@\n #ifndef TUI_TUI_DATA_H\n #define TUI_TUI_DATA_H\n \n-#include \"tui/tui.h\"\t/* For enum tui_win_type.  */\n+#include \"tui/tui.h\"\n #include \"gdb_curses.h\"\t/* For WINDOW.  */\n #include \"observable.h\"\n \n@@ -44,10 +44,7 @@ struct tui_gen_win_info\n {\n protected:\n \n-  explicit tui_gen_win_info (enum tui_win_type t)\n-    : type (t)\n-  {\n-  }\n+  tui_gen_win_info () = default;\n \n   /* This is called after the window is resized, and should update the\n      window's contents.  */\n@@ -117,8 +114,6 @@ struct tui_gen_win_info\n \n   /* Window handle.  */\n   std::unique_ptr<WINDOW, curses_deleter> handle;\n-  /* Type of window.  */\n-  enum tui_win_type type;\n   /* Window width.  */\n   int width = 0;\n   /* Window height.  */\n@@ -162,7 +157,7 @@ struct tui_win_info : public tui_gen_win_info\n {\n protected:\n \n-  explicit tui_win_info (enum tui_win_type type);\n+  tui_win_info () = default;\n   DISABLE_COPY_AND_ASSIGN (tui_win_info);\n \n   /* Scroll the contents vertically.  This is only called via"
    },
    {
      "sha": "dd0203107469daab81881eb6b20444e4fed33ece",
      "filename": "gdb/tui/tui-disasm.h",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-disasm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-disasm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-disasm.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -30,10 +30,7 @@\n \n struct tui_disasm_window : public tui_source_window_base\n {\n-  tui_disasm_window ()\n-    : tui_source_window_base (DISASSEM_WIN)\n-  {\n-  }\n+  tui_disasm_window () = default;\n \n   DISABLE_COPY_AND_ASSIGN (tui_disasm_window);\n "
    },
    {
      "sha": "df8c27305cd19c2183e2c8a9bc21a8518813e2d0",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 2,
      "deletions": 8,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -28,10 +28,7 @@\n \n struct tui_data_item_window : public tui_gen_win_info\n {\n-  tui_data_item_window ()\n-    : tui_gen_win_info (DATA_ITEM_WIN)\n-  {\n-  }\n+  tui_data_item_window () = default;\n \n   DISABLE_COPY_AND_ASSIGN (tui_data_item_window);\n \n@@ -61,10 +58,7 @@ struct tui_data_item_window : public tui_gen_win_info\n /* The TUI registers window.  */\n struct tui_data_window : public tui_win_info\n {\n-  tui_data_window ()\n-    : tui_win_info (DATA_WIN)\n-  {\n-  }\n+  tui_data_window () = default;\n \n   DISABLE_COPY_AND_ASSIGN (tui_data_window);\n "
    },
    {
      "sha": "58dc5e88cf77a7c1246988bdb89ac0f3654be86d",
      "filename": "gdb/tui/tui-source.h",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-source.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-source.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-source.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -31,10 +31,7 @@ struct symtab;\n \n struct tui_source_window : public tui_source_window_base\n {\n-  tui_source_window ()\n-    : tui_source_window_base (SRC_WIN)\n-  {\n-  }\n+  tui_source_window () = default;\n \n   DISABLE_COPY_AND_ASSIGN (tui_source_window);\n "
    },
    {
      "sha": "fde7c6dd2c938a41f6d6e5f770a6bc6f3e0d6152",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -31,7 +31,6 @@ struct frame_info;\n struct tui_locator_window : public tui_gen_win_info\n {\n   tui_locator_window ()\n-    : tui_gen_win_info (LOCATOR_WIN)\n   {\n     full_name[0] = 0;\n     proc_name[0] = 0;"
    },
    {
      "sha": "9ec05ae7c3df52d5d18111c79ee98c16564976b8",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -286,10 +286,8 @@ tui_source_window_base::show_source_content ()\n   refresh_window ();\n }\n \n-tui_source_window_base::tui_source_window_base (enum tui_win_type type)\n-  : tui_win_info (type)\n+tui_source_window_base::tui_source_window_base ()\n {\n-  gdb_assert (type == SRC_WIN || type == DISASSEM_WIN);\n   start_line_or_addr.loa = LOA_ADDRESS;\n   start_line_or_addr.u.addr = 0;\n \n@@ -334,7 +332,7 @@ tui_source_window_base::rerender ()\n       struct gdbarch *gdbarch = get_frame_arch (frame);\n \n       struct symtab *s = find_pc_line_symtab (get_frame_pc (frame));\n-      if (type != SRC_WIN)\n+      if (this != TUI_SRC_WIN)\n \tfind_line_pc (s, cursal.line, &cursal.pc);\n       update_source_window (gdbarch, cursal);\n     }\n@@ -349,7 +347,7 @@ tui_source_window_base::refill ()\n {\n   symtab_and_line sal {};\n \n-  if (type == SRC_WIN)\n+  if (this == TUI_SRC_WIN)\n     {\n       sal = get_current_source_symtab_and_line ();\n       if (sal.symtab == NULL)"
    },
    {
      "sha": "4ac20d805025fcfad89c24fa23c64608e999549c",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -75,7 +75,7 @@ struct tui_source_element\n struct tui_source_window_base : public tui_win_info\n {\n protected:\n-  explicit tui_source_window_base (enum tui_win_type type);\n+  tui_source_window_base ();\n   ~tui_source_window_base ();\n \n   DISABLE_COPY_AND_ASSIGN (tui_source_window_base);"
    },
    {
      "sha": "816b1e92851b3869949fc48b2805b30bc897863a",
      "filename": "gdb/tui/tui.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fdb01f0ce44653180af9d3d4f264c0ddb2d1261d/gdb/tui/tui.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.h?ref=fdb01f0ce44653180af9d3d4f264c0ddb2d1261d",
      "patch": "@@ -40,9 +40,6 @@ enum tui_win_type\n   CMD_WIN,\n   /* This must ALWAYS be AFTER the major windows last.  */\n   MAX_MAJOR_WINDOWS,\n-  /* Auxiliary windows.  */\n-  LOCATOR_WIN,\n-  DATA_ITEM_WIN\n };\n \n extern CORE_ADDR tui_get_low_disassembly_address (struct gdbarch *,"
    }
  ]
}