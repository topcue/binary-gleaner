{
  "sha": "4478c3312715e4bf04f30fc12925035b4687edfc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQ3OGMzMzEyNzE1ZTRiZjA0ZjMwZmMxMjkyNTAzNWI0Njg3ZWRmYw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-24T20:57:39Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-04-25T13:02:20Z"
    },
    "message": "Use htab_t in sim-options.c\n\nThis changes sim-options.c to use the libiberty hash table, rather\nthan its own custom hash table.\n\nsim/common/ChangeLog\n2021-04-25  Tom Tromey  <tom@tromey.com>\n\n\t* sim-options.c (compare_strings): New function.\n\t(ARG_HASH_SIZE, ARG_HASH): Remove.\n\t(dup_arg_p): Use htab_t.\n\t(sim_parse_args): Remove assert.",
    "tree": {
      "sha": "af14c94accc3495a2eec68853d7715360e25113b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/af14c94accc3495a2eec68853d7715360e25113b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4478c3312715e4bf04f30fc12925035b4687edfc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4478c3312715e4bf04f30fc12925035b4687edfc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4478c3312715e4bf04f30fc12925035b4687edfc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4478c3312715e4bf04f30fc12925035b4687edfc/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "77393c9b1895ad67c8e725bbe8f49b5c40caab36",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/77393c9b1895ad67c8e725bbe8f49b5c40caab36",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/77393c9b1895ad67c8e725bbe8f49b5c40caab36"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 25,
    "deletions": 21
  },
  "files": [
    {
      "sha": "0a05cf3b04bdc92f00906cbfa015284c22b79e57",
      "filename": "sim/common/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4478c3312715e4bf04f30fc12925035b4687edfc/sim/common/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4478c3312715e4bf04f30fc12925035b4687edfc/sim/common/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/ChangeLog?ref=4478c3312715e4bf04f30fc12925035b4687edfc",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* sim-options.c (compare_strings): New function.\n+\t(ARG_HASH_SIZE, ARG_HASH): Remove.\n+\t(dup_arg_p): Use htab_t.\n+\t(sim_parse_args): Remove assert.\n+\n 2021-04-24  Mike Frysinger  <vapier@gentoo.org>\n \n \t* dv-cfi.c (attach_cfi_regs): Change %u to PRIiTC."
    },
    {
      "sha": "a6da8eccdefaf39b3168418a3e5f7eaec5e9b234",
      "filename": "sim/common/sim-options.c",
      "status": "modified",
      "additions": 18,
      "deletions": 21,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4478c3312715e4bf04f30fc12925035b4687edfc/sim/common/sim-options.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4478c3312715e4bf04f30fc12925035b4687edfc/sim/common/sim-options.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/common/sim-options.c?ref=4478c3312715e4bf04f30fc12925035b4687edfc",
      "patch": "@@ -28,6 +28,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n #include \"sim-io.h\"\n #include \"sim-assert.h\"\n #include \"version.h\"\n+#include \"hashtab.h\"\n \n #include \"bfd.h\"\n \n@@ -413,37 +414,36 @@ standard_install (SIM_DESC sd)\n   return SIM_RC_OK;\n }\n \n+/* Equality function for arguments.  */\n+\n+static int\n+compare_strings (const void *a, const void *b)\n+{\n+  return strcmp (a, b) == 0;\n+}\n+\n /* Return non-zero if arg is a duplicate argument.\n    If ARG is NULL, initialize.  */\n \n-#define ARG_HASH_SIZE 256\n-#define ARG_HASH(a) ((256 * (unsigned char) a[0] + (unsigned char) a[1]) % ARG_HASH_SIZE)\n-\n static int\n dup_arg_p (const char *arg)\n {\n-  int hash;\n-  static const char **arg_table = NULL;\n+  static htab_t arg_table = NULL;\n+  void **slot;\n \n   if (arg == NULL)\n     {\n       if (arg_table == NULL)\n-\targ_table = (const char **) xmalloc (ARG_HASH_SIZE * sizeof (char *));\n-      memset (arg_table, 0, ARG_HASH_SIZE * sizeof (char *));\n+\targ_table = htab_create_alloc (10, htab_hash_string,\n+\t\t\t\t       compare_strings, NULL,\n+\t\t\t\t       xcalloc, free);\n       return 0;\n     }\n \n-  hash = ARG_HASH (arg);\n-  while (arg_table[hash] != NULL)\n-    {\n-      if (strcmp (arg, arg_table[hash]) == 0)\n-\treturn 1;\n-      /* We assume there won't be more than ARG_HASH_SIZE arguments so we\n-\t don't check if the table is full.  */\n-      if (++hash == ARG_HASH_SIZE)\n-\thash = 0;\n-    }\n-  arg_table[hash] = arg;\n+  slot = htab_find_slot (arg_table, arg, INSERT);\n+  if (*slot != NULL)\n+    return 1;\n+  *slot = (void *) arg;\n   return 0;\n }\n \n@@ -478,9 +478,6 @@ sim_parse_args (SIM_DESC sd, char * const *argv)\n       for (opt = ol->options; OPTION_VALID_P (opt); ++opt)\n \t++num_opts;\n \n-  /* We build a hash table of all options, so make sure they all fit.  */\n-  SIM_ASSERT (num_opts <= ARG_HASH_SIZE);\n-\n   /* Initialize duplicate argument checker.  */\n   (void) dup_arg_p (NULL);\n "
    }
  ]
}