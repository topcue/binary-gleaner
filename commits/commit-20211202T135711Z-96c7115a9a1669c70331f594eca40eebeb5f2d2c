{
  "sha": "96c7115a9a1669c70331f594eca40eebeb5f2d2c",
  "node_id": "C_kwDOANOeidoAKDk2YzcxMTVhOWExNjY5YzcwMzMxZjU5NGVjYTQwZWViZWI1ZjJkMmM",
  "commit": {
    "author": {
      "name": "Marcus Nilsson",
      "email": "brainbomb@gmail.com",
      "date": "2021-12-02T13:57:11Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2021-12-02T13:57:11Z"
    },
    "message": "Allow the --visualize-jumps feature to work with the AVR disassembler.\n\n\t* avr-dis.c (avr_operand); Pass in disassemble_info and fill\n\tin insn_type on branching instructions.",
    "tree": {
      "sha": "44aa41ae02082ce5fda844d0693f1477468c14ae",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/44aa41ae02082ce5fda844d0693f1477468c14ae"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96c7115a9a1669c70331f594eca40eebeb5f2d2c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c7115a9a1669c70331f594eca40eebeb5f2d2c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96c7115a9a1669c70331f594eca40eebeb5f2d2c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c7115a9a1669c70331f594eca40eebeb5f2d2c/comments",
  "author": {
    "login": "metmo",
    "id": 69970419,
    "node_id": "MDQ6VXNlcjY5OTcwNDE5",
    "avatar_url": "https://avatars.githubusercontent.com/u/69970419?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/metmo",
    "html_url": "https://github.com/metmo",
    "followers_url": "https://api.github.com/users/metmo/followers",
    "following_url": "https://api.github.com/users/metmo/following{/other_user}",
    "gists_url": "https://api.github.com/users/metmo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/metmo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/metmo/subscriptions",
    "organizations_url": "https://api.github.com/users/metmo/orgs",
    "repos_url": "https://api.github.com/users/metmo/repos",
    "events_url": "https://api.github.com/users/metmo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/metmo/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6cade9185cc55478830559d91593ba510bef1b17",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6cade9185cc55478830559d91593ba510bef1b17",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/6cade9185cc55478830559d91593ba510bef1b17"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 37,
    "deletions": 5
  },
  "files": [
    {
      "sha": "7eba5165637e9c4ab77c48ba36a9475cf2faf409",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7115a9a1669c70331f594eca40eebeb5f2d2c/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7115a9a1669c70331f594eca40eebeb5f2d2c/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=96c7115a9a1669c70331f594eca40eebeb5f2d2c",
      "patch": "@@ -1,3 +1,8 @@\n+2021-12-02  Marcus Nilsson  <brainbomb@gmail.com>\n+\n+\t* avr-dis.c (avr_operand); Pass in disassemble_info and fill\n+\tin insn_type on branching instructions.\n+\n 2021-11-25  Andrew Burgess  <aburgess@redhat.com>\n \t    Simon Cook  <simon.cook@embecosm.com>\n "
    },
    {
      "sha": "61af515e73e776159b19f23b999ed6bba85996a2",
      "filename": "opcodes/avr-dis.c",
      "status": "modified",
      "additions": 32,
      "deletions": 5,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c7115a9a1669c70331f594eca40eebeb5f2d2c/opcodes/avr-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c7115a9a1669c70331f594eca40eebeb5f2d2c/opcodes/avr-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/avr-dis.c?ref=96c7115a9a1669c70331f594eca40eebeb5f2d2c",
      "patch": "@@ -49,8 +49,17 @@ const struct avr_opcodes_s avr_opcodes[] =\n static const char * comment_start = \"0x\";\n \n static int\n-avr_operand (unsigned int insn, unsigned int insn2, unsigned int pc, int constraint,\n-             char *opcode_str, char *buf, char *comment, int regs, int *sym, bfd_vma *sym_addr)\n+avr_operand (unsigned int        insn,\n+\t     unsigned int        insn2,\n+\t     unsigned int        pc,\n+\t     int                 constraint,\n+             char *              opcode_str,\n+\t     char *              buf,\n+\t     char *              comment,\n+\t     int                 regs,\n+\t     int *               sym,\n+\t     bfd_vma *           sym_addr,\n+\t     disassemble_info *  info)\n {\n   int ok = 1;\n   *sym = 0;\n@@ -161,6 +170,9 @@ avr_operand (unsigned int insn, unsigned int insn2, unsigned int pc, int constra\n \t objdump_print_address() which would affect many targets.  */\n       sprintf (buf, \"%#lx\", (unsigned long) *sym_addr);\n       strcpy (comment, comment_start);\n+      info->insn_info_valid = 1;\n+      info->insn_type = dis_jsr;\n+      info->target = *sym_addr;\n       break;\n \n     case 'L':\n@@ -170,6 +182,9 @@ avr_operand (unsigned int insn, unsigned int insn2, unsigned int pc, int constra\n         *sym = 1;\n         *sym_addr = pc + 2 + rel_addr;\n \tstrcpy (comment, comment_start);\n+        info->insn_info_valid = 1;\n+        info->insn_type = dis_branch;\n+        info->target = *sym_addr;\n       }\n       break;\n \n@@ -181,6 +196,9 @@ avr_operand (unsigned int insn, unsigned int insn2, unsigned int pc, int constra\n         *sym = 1;\n         *sym_addr = pc + 2 + rel_addr;\n \tstrcpy (comment, comment_start);\n+        info->insn_info_valid = 1;\n+        info->insn_type = dis_condbranch;\n+        info->target = *sym_addr;\n       }\n       break;\n \n@@ -314,6 +332,13 @@ print_insn_avr (bfd_vma addr, disassemble_info *info)\n   int sym_op1 = 0, sym_op2 = 0;\n   bfd_vma sym_addr1, sym_addr2;\n \n+  /* Clear instruction information field.  */\n+  info->insn_info_valid = 0;\n+  info->branch_delay_insns = 0;\n+  info->data_size = 0;\n+  info->insn_type = dis_noninsn;\n+  info->target = 0;\n+  info->target2 = 0;\n \n   if (!initialized)\n     {\n@@ -395,11 +420,13 @@ print_insn_avr (bfd_vma addr, disassemble_info *info)\n \t{\n \t  int regs = REGISTER_P (*constraints);\n \n-\t  ok = avr_operand (insn, insn2, addr, *constraints, opcode_str, op1, comment1, 0, &sym_op1, &sym_addr1);\n+\t  ok = avr_operand (insn, insn2, addr, *constraints, opcode_str, op1,\n+\t\t\t    comment1, 0, &sym_op1, &sym_addr1, info);\n \n \t  if (ok && *(++constraints) == ',')\n-\t    ok = avr_operand (insn, insn2, addr, *(++constraints), opcode_str, op2,\n-\t\t\t      *comment1 ? comment2 : comment1, regs, &sym_op2, &sym_addr2);\n+\t    ok = avr_operand (insn, insn2, addr, *(++constraints), opcode_str,\n+\t\t\t      op2, *comment1 ? comment2 : comment1, regs,\n+\t\t\t      &sym_op2, &sym_addr2, info);\n \t}\n     }\n "
    }
  ]
}