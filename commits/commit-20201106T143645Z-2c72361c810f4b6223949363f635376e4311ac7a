{
  "sha": "2c72361c810f4b6223949363f635376e4311ac7a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MmM3MjM2MWM4MTBmNGI2MjIzOTQ5MzYzZjYzNTM3NmU0MzExYWM3YQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-06T14:36:45Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-11-06T14:36:45Z"
    },
    "message": "Extend ld's -Map=<dir> functionality by allowing '%' to be replaced with the output file path.\n\n\t* lexsup.c (parse_args): Add more checks of the mapfile.  If it is\n\ta directory use the basename of the output file as the file\n\tcomponent.  If the % character is present, replace it with the\n\tfull output filepath.\n\t* testsuite/ld-scripts/map-address.exp: Add test of %\n\tfunctionality.\n\t* ld.texi: Document the new behaviour.",
    "tree": {
      "sha": "12e8ff66e98cb6867f5c3d687ea84f53d0d83b15",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/12e8ff66e98cb6867f5c3d687ea84f53d0d83b15"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2c72361c810f4b6223949363f635376e4311ac7a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c72361c810f4b6223949363f635376e4311ac7a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2c72361c810f4b6223949363f635376e4311ac7a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2c72361c810f4b6223949363f635376e4311ac7a/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9c905051aaa48bd07f243c1ed502fc88dbf1f3bb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c905051aaa48bd07f243c1ed502fc88dbf1f3bb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9c905051aaa48bd07f243c1ed502fc88dbf1f3bb"
    }
  ],
  "stats": {
    "total": 157,
    "additions": 137,
    "deletions": 20
  },
  "files": [
    {
      "sha": "0909d6a62ba74dcf483e2817a82258b26888bcf7",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c72361c810f4b6223949363f635376e4311ac7a/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c72361c810f4b6223949363f635376e4311ac7a/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=2c72361c810f4b6223949363f635376e4311ac7a",
      "patch": "@@ -1,3 +1,13 @@\n+2020-11-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* lexsup.c (parse_args): Add more checks of the mapfile.  If it is\n+\ta directory use the basename of the output file as the file\n+\tcomponent.  If the % character is present, replace it with the\n+\tfull output filepath.\n+\t* testsuite/ld-scripts/map-address.exp: Add test of %\n+\tfunctionality.\n+\t* ld.texi: Document the new behaviour.\n+\n 2020-11-06  Nick Clifton  <nickc@redhat.com>\n \n \t* po/sr.po: Updated Serbian translation."
    },
    {
      "sha": "9b74b893c199765407c7cb8433fc6a15bef560eb",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 28,
      "deletions": 4,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c72361c810f4b6223949363f635376e4311ac7a/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c72361c810f4b6223949363f635376e4311ac7a/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=2c72361c810f4b6223949363f635376e4311ac7a",
      "patch": "@@ -1866,10 +1866,34 @@ Print a summary of all target-specific options on the standard output and exit.\n @kindex -Map=@var{mapfile}\n @item -Map=@var{mapfile}\n Print a link map to the file @var{mapfile}.  See the description of the\n-@option{-M} option, above.  Specifying a directory as @var{mapfile}\n-causes the linker map to be written into a file inside the directory.\n-The name of the file is based upon the @var{output} filename with\n-@code{.map} appended.\n+@option{-M} option, above.  If @var{mapfile} is just the character\n+@code{-} then the map will be written to stdout.\n+\n+Specifying a directory as @var{mapfile} causes the linker map to be\n+written as a file inside the directory.  Normally name of the file\n+inside the directory is computed as the basename of the @var{output}\n+file with @code{.map} appended.   If however the special character\n+@code{%} is used then this will be replaced by the full path of the\n+output file.  Additionally if there are any characters after the\n+@var{%} symbol then @code{.map} will no longer be appended.\n+\n+@smallexample\n+ -o foo.exe -Map=bar                  [Creates ./bar]\n+ -o ../dir/foo.exe -Map=bar           [Creates ./bar]\n+ -o foo.exe -Map=../dir               [Creates ../dir/foo.exe.map]\n+ -o ../dir2/foo.exe -Map=../dir       [Creates ../dir/foo.exe.map]\n+ -o foo.exe -Map=%                    [Creates ./foo.exe.map]\n+ -o ../dir/foo.exe -Map=%             [Creates ../dir/foo.exe.map]\n+ -o foo.exe -Map=%.bar                [Creates ./foo.exe.bar]\n+ -o ../dir/foo.exe -Map=%.bar         [Creates ../dir/foo.exe.bar]\n+ -o ../dir2/foo.exe -Map=../dir/%     [Creates ../dir/../dir2/foo.exe.map]\n+ -o ../dir2/foo.exe -Map=../dir/%.bar [Creates ../dir/../dir2/foo.exe.bar]\n+@end smallexample\n+\n+It is an error to specify more than one @code{%} character.\n+\n+If the map file already exists then it will be overwritten by this\n+operation.\n \n @cindex memory usage\n @kindex --no-keep-memory"
    },
    {
      "sha": "0d10bc6fba8a139207449ff224dec9471f0aee0d",
      "filename": "ld/lexsup.c",
      "status": "modified",
      "additions": 52,
      "deletions": 16,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c72361c810f4b6223949363f635376e4311ac7a/ld/lexsup.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c72361c810f4b6223949363f635376e4311ac7a/ld/lexsup.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/lexsup.c?ref=2c72361c810f4b6223949363f635376e4311ac7a",
      "patch": "@@ -22,8 +22,10 @@\n #include \"bfd.h\"\n #include \"bfdver.h\"\n #include \"libiberty.h\"\n+#include \"filenames.h\"\n #include <stdio.h>\n #include <string.h>\n+#include <errno.h>\n #include \"safe-ctype.h\"\n #include \"getopt.h\"\n #include \"bfdlink.h\"\n@@ -1700,35 +1702,69 @@ parse_args (unsigned argc, char **argv)\n   /* Run a couple of checks on the map filename.  */\n   if (config.map_filename)\n     {\n+      char * new_name = NULL;\n+      char * percent;\n+      int    res = 0;\n+\n       if (config.map_filename[0] == 0)\n \t{\n \t  einfo (_(\"%P: no file/directory name provided for map output; ignored\\n\"));\n \t  config.map_filename = NULL;\n \t}\n+      else if (strcmp (config.map_filename, \"-\") == 0)\n+\t; /* Write to stdout.  Handled in main().  */\n+      else if ((percent = strchr (config.map_filename, '%')) != NULL)\n+\t{\n+\t  /* FIXME: Check for a second % character and issue an error ?  */\n+\n+\t  /* Construct a map file by replacing the % character with the (full)\n+\t     output filename.  If the % character was the last character in\n+\t     the original map filename then add a .map extension.  */\n+\t  percent[0] = 0;\n+\t  res = asprintf (&new_name, \"%s%s%s\", config.map_filename,\n+\t\t\t  output_filename,\n+\t\t\t  percent[1] ? percent + 1 : \".map\");\n+\n+\t  /* FIXME: Should we ensure that any directory components in new_name exist ?  */\n+\t}\n       else\n \t{\n \t  struct stat s;\n \n \t  /* If the map filename is actually a directory then create\n \t     a file inside it, based upon the output filename.  */\n-\t  if (stat (config.map_filename, &s) >= 0\n-\t      && S_ISDIR (s.st_mode))\n+\t  if (stat (config.map_filename, &s) < 0)\n \t    {\n-\t      char * new_name;\n-\n-\t      /* FIXME: This is a (trivial) memory leak.  */\n-\t      if (asprintf (&new_name, \"%s/%s.map\",\n-\t\t\t    config.map_filename, output_filename) < 0)\n-\t\t{\n-\t\t  /* If this alloc fails then something is probably very\n-\t\t     wrong.  Better to halt now rather than continue on\n-\t\t     into more problems.  */\n-\t\t  einfo (_(\"%P%F: cannot create name for linker map file: %E\\n\"));\n-\t\t  new_name = NULL;\n-\t\t}\n-\n-\t      config.map_filename = new_name;\n+\t      if (errno != ENOENT)\n+\t\teinfo (_(\"%P: cannot stat linker map file: %E\\n\"));\n \t    }\n+\t  else if (S_ISDIR (s.st_mode))\n+\t    {\n+\t      char lastc = config.map_filename[strlen (config.map_filename) - 1];\n+\t      res = asprintf (&new_name, \"%s%s%s.map\",\n+\t\t\t      config.map_filename,\n+\t\t\t      IS_DIR_SEPARATOR (lastc) ? \"\" : \"/\",\n+\t\t\t      lbasename (output_filename));\n+\t    }\n+\t  else if (! S_ISREG (s.st_mode))\n+\t    {\n+\t      einfo (_(\"%P: linker map file is not a regular file\\n\"));\n+\t      config.map_filename = NULL;\n+\t    }\n+\t  /* else FIXME: Check write permission ?  */\n+\t}\n+\n+      if (res < 0)\n+\t{\n+\t  /* If the asprintf failed then something is probably very\n+\t     wrong.  Better to halt now rather than continue on\n+\t     into more problems.  */\n+\t  einfo (_(\"%P%F: cannot create name for linker map file: %E\\n\"));\n+\t}\n+      else if (new_name != NULL)\n+\t{\n+\t  /* This is a trivial memory leak.  */\n+\t  config.map_filename = new_name;\n \t}\n     }\n "
    },
    {
      "sha": "e8d3683c018ca85e23dca488e5cad2d015947547",
      "filename": "ld/testsuite/ld-scripts/map-address.exp",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2c72361c810f4b6223949363f635376e4311ac7a/ld/testsuite/ld-scripts/map-address.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2c72361c810f4b6223949363f635376e4311ac7a/ld/testsuite/ld-scripts/map-address.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/map-address.exp?ref=2c72361c810f4b6223949363f635376e4311ac7a",
      "patch": "@@ -46,6 +46,7 @@ if {[regexp_diff \\\n     pass $testname\n }\n \n+\n set testname \"map to directory\"\n \n if {![ld_link $ld tmpdir/map-address \\\n@@ -67,3 +68,49 @@ if {[regexp_diff \\\n } else {\n     pass $testname\n }\n+\n+\n+set testname \"map to % directory\"\n+\n+if {![ld_link $ld tmpdir/map-address \\\n+\t \"$LDFLAGS -T $srcdir/$subdir/map-address.t \\\n+\t  tmpdir/map-address.o \\\n+\t  -Map=tmpdir/% --output fred\"]} {\n+    fail $testname\n+    return\n+}\n+\n+if [is_remote host] then {\n+    remote_upload host \"tmpdir/fred.map\"\n+}\n+\n+if {[regexp_diff \\\n+\t       \"tmpdir/fred.map\" \\\n+\t       \"$srcdir/$subdir/map-address.d\"]} {\n+    fail $testname\n+} else {\n+    pass $testname\n+}\n+\n+\n+set testname \"map to %.foo directory\"\n+\n+if {![ld_link $ld tmpdir/map-address \\\n+\t \"$LDFLAGS -T $srcdir/$subdir/map-address.t \\\n+\t  tmpdir/map-address.o \\\n+\t  -Map=tmpdir/%.foo --output fred\"]} {\n+    fail $testname\n+    return\n+}\n+\n+if [is_remote host] then {\n+    remote_upload host \"tmpdir/fred.foo\"\n+}\n+\n+if {[regexp_diff \\\n+\t       \"tmpdir/fred.foo\" \\\n+\t       \"$srcdir/$subdir/map-address.d\"]} {\n+    fail $testname\n+} else {\n+    pass $testname\n+}"
    }
  ]
}