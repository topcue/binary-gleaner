{
  "sha": "48b490f28a2152134a51215a06cb22c9b09a7a80",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDhiNDkwZjI4YTIxNTIxMzRhNTEyMTVhMDZjYjIyYzliMDlhN2E4MA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Change dwp_file to use htab_up\n\nThis changes dwp_file to use htab_up for the loaded_cus and loaded_tus\nmembers.  This lets us avoid allocating the contents of these hash\ntables on the objfile obstack.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (struct dwp_file) <loaded_cus, loaded_tus>: Now\n\thtab_up.\n\t(lookup_dwo_unit_in_dwp): Update.\n\t(allocate_dwp_loaded_cutus_table): Return htab_up.  Don't allocate\n\ton obstack.\n\nChange-Id: Id61209bf5c6c6faa0c067195af31fbcf26813a3a",
    "tree": {
      "sha": "9d8d12b2655654430db3c33e131d2fa06e27bb35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9d8d12b2655654430db3c33e131d2fa06e27bb35"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/48b490f28a2152134a51215a06cb22c9b09a7a80",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48b490f28a2152134a51215a06cb22c9b09a7a80",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/48b490f28a2152134a51215a06cb22c9b09a7a80",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48b490f28a2152134a51215a06cb22c9b09a7a80/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bc68fb1930b72d3772fadbe76d9006c799bb33e9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bc68fb1930b72d3772fadbe76d9006c799bb33e9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bc68fb1930b72d3772fadbe76d9006c799bb33e9"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 17,
    "deletions": 12
  },
  "files": [
    {
      "sha": "82e99312b885ebc5d3b7237e51e7b0715c65f11e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48b490f28a2152134a51215a06cb22c9b09a7a80/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48b490f28a2152134a51215a06cb22c9b09a7a80/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=48b490f28a2152134a51215a06cb22c9b09a7a80",
      "patch": "@@ -1,3 +1,11 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (struct dwp_file) <loaded_cus, loaded_tus>: Now\n+\thtab_up.\n+\t(lookup_dwo_unit_in_dwp): Update.\n+\t(allocate_dwp_loaded_cutus_table): Return htab_up.  Don't allocate\n+\ton obstack.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.c (allocate_dwo_file_hash_table): Don't allocate on"
    },
    {
      "sha": "4c445eae90b5056bda3b17cbd08112154453d47a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 9,
      "deletions": 12,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/48b490f28a2152134a51215a06cb22c9b09a7a80/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/48b490f28a2152134a51215a06cb22c9b09a7a80/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=48b490f28a2152134a51215a06cb22c9b09a7a80",
      "patch": "@@ -868,8 +868,8 @@ struct dwp_file\n   const struct dwp_hash_table *tus = nullptr;\n \n   /* Tables of loaded CUs/TUs.  Each entry is a struct dwo_unit *.  */\n-  htab_t loaded_cus {};\n-  htab_t loaded_tus {};\n+  htab_up loaded_cus;\n+  htab_up loaded_tus;\n \n   /* Table to map ELF section numbers to their sections.\n      This is only needed for the DWP V1 file format.  */\n@@ -12350,8 +12350,8 @@ lookup_dwo_unit_in_dwp (struct dwarf2_per_objfile *dwarf2_per_objfile,\n   memset (&find_dwo_cu, 0, sizeof (find_dwo_cu));\n   find_dwo_cu.signature = signature;\n   slot = htab_find_slot (is_debug_types\n-\t\t\t ? dwp_file->loaded_tus\n-\t\t\t : dwp_file->loaded_cus,\n+\t\t\t ? dwp_file->loaded_tus.get ()\n+\t\t\t : dwp_file->loaded_cus.get (),\n \t\t\t &find_dwo_cu, INSERT);\n \n   if (*slot != NULL)\n@@ -12722,16 +12722,13 @@ eq_dwp_loaded_cutus (const void *a, const void *b)\n \n /* Allocate a hash table for dwp_file loaded CUs/TUs.  */\n \n-static htab_t\n+static htab_up\n allocate_dwp_loaded_cutus_table (struct objfile *objfile)\n {\n-  return htab_create_alloc_ex (3,\n-\t\t\t       hash_dwp_loaded_cutus,\n-\t\t\t       eq_dwp_loaded_cutus,\n-\t\t\t       NULL,\n-\t\t\t       &objfile->objfile_obstack,\n-\t\t\t       hashtab_obstack_allocate,\n-\t\t\t       dummy_obstack_deallocate);\n+  return htab_up (htab_create_alloc (3,\n+\t\t\t\t     hash_dwp_loaded_cutus,\n+\t\t\t\t     eq_dwp_loaded_cutus,\n+\t\t\t\t     NULL, xcalloc, xfree));\n }\n \n /* Try to open DWP file FILE_NAME."
    }
  ]
}