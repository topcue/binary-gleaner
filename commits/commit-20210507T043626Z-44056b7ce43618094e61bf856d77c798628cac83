{
  "sha": "44056b7ce43618094e61bf856d77c798628cac83",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDQwNTZiN2NlNDM2MTgwOTRlNjFiZjg1NmQ3N2M3OTg2MjhjYWM4Mw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-07T04:31:05Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-05-07T04:36:26Z"
    },
    "message": "sim: m32c: clean up various warnings\n\nA random grab bag of minor fixes to enable -Werror for this port.\n\nCheck the return values of read & write calls and issue warnings when\nthey fail.\nFixup funky pointer math as the compiler doesn't like ++ on void*.\nHandle short reads with fread().",
    "tree": {
      "sha": "9aa2e47efceff17e1f9381e1f608786aa65af106",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9aa2e47efceff17e1f9381e1f608786aa65af106"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/44056b7ce43618094e61bf856d77c798628cac83",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44056b7ce43618094e61bf856d77c798628cac83",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/44056b7ce43618094e61bf856d77c798628cac83",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44056b7ce43618094e61bf856d77c798628cac83/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0ae995e2df001ab7c45c4bc596c4b0b734910c08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0ae995e2df001ab7c45c4bc596c4b0b734910c08",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0ae995e2df001ab7c45c4bc596c4b0b734910c08"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 41,
    "deletions": 21
  },
  "files": [
    {
      "sha": "f8842f57af19e5861a6c25866ffc61490251ff71",
      "filename": "sim/m32c/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/ChangeLog?ref=44056b7ce43618094e61bf856d77c798628cac83",
      "patch": "@@ -1,3 +1,15 @@\n+2021-05-07  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* mem.c: Include errno.h.\n+\t(mem_put_byte): Print a warning when the write call fails.\n+\t(mem_put_blk): Declare local buf pointer and use it.\n+\t(mem_get_byte): Return 0 when the read call fails.\n+\t(mem_get_blk): Declare local buf pointer and use it.\n+\t* trace.c (load_file_and_line): Declare ret.\n+\tAssign fread to ret and use to index f->data.\n+\t* configure.ac: Delete SIM_AC_OPTION_WARNINGS call.\n+\t* configure: Regenerate.\n+\n 2021-05-07  Mike Frysinger  <vapier@gentoo.org>\n \n \t* m32c.opc: Add scope braces around a few segments."
    },
    {
      "sha": "7c283c21ca660fa8a614d8640e0c5e00c65e1fc8",
      "filename": "sim/m32c/configure",
      "status": "modified",
      "additions": 15,
      "deletions": 13,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure?ref=44056b7ce43618094e61bf856d77c798628cac83",
      "patch": "@@ -11850,6 +11850,18 @@ _ACEOF\n \n \n \n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n # Check whether --enable-werror was given.\n if test \"${enable_werror+set}\" = set; then :\n   enableval=$enable_werror; case \"${enableval}\" in\n@@ -11866,6 +11878,9 @@ if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n fi\n \n WERROR_CFLAGS=\"\"\n+  if test \"${ERROR_ON_WARNING}\" = yes ; then\n+    WERROR_CFLAGS=\"-Werror\"\n+  fi\n \n build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n -Wpointer-sign \\\n@@ -11947,19 +11962,6 @@ $as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n fi\n \n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n hardware=\"cfi core pal glue \"\n sim_hw_cflags=\"-DWITH_HW=1\"\n sim_hw=\"$hardware\""
    },
    {
      "sha": "de1587eaac113feb50265d490cc8eb2312160d23",
      "filename": "sim/m32c/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/configure.ac?ref=44056b7ce43618094e61bf856d77c798628cac83",
      "patch": "@@ -23,8 +23,6 @@ AC_CONFIG_MACRO_DIRS([../m4 ../.. ../../config])\n \n SIM_AC_COMMON\n \n-SIM_AC_OPTION_WARNINGS(no)\n-\n AC_CHECK_HEADERS_ONCE(m4_flatten([\n   termios.h\n   netinet/in.h"
    },
    {
      "sha": "4baf71fa6728f47df7c749039aa10cd4d234f3c7",
      "filename": "sim/m32c/mem.c",
      "status": "modified",
      "additions": 11,
      "deletions": 4,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/mem.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/mem.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/mem.c?ref=44056b7ce43618094e61bf856d77c798628cac83",
      "patch": "@@ -20,6 +20,7 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n \n #include \"config.h\"\n+#include <errno.h>\n #include <stdio.h>\n #include <stdlib.h>\n #include <string.h>\n@@ -294,7 +295,8 @@ mem_put_byte (int address, unsigned char value)\n \t  }\n \telse\n \t  {\n-\t    write (m32c_console_ofd, &value, 1);\n+\t    if (write (m32c_console_ofd, &value, 1) != 1)\n+\t      printf (\"write console failed: %s\\n\", strerror (errno));\n \t  }\n       }\n       break;\n@@ -367,11 +369,13 @@ mem_put_si (int address, unsigned long value)\n void\n mem_put_blk (int address, const void *bufptr, int nbytes)\n {\n+  const unsigned char *buf = bufptr;\n+\n   S (\"<=\");\n   if (enable_counting)\n     mem_counters[1][1] += nbytes;\n   while (nbytes--)\n-    mem_put_byte (address++, *(const unsigned char *) bufptr++);\n+    mem_put_byte (address++, *buf++);\n   E ();\n }\n \n@@ -443,7 +447,8 @@ mem_get_byte (int address)\n     case 0x2ee:\t\t/* m32c uart1 rx */\n       {\n \tchar c;\n-\tread (m32c_console_ifd, &c, 1);\n+\tif (read (m32c_console_ifd, &c, 1) != 1)\n+\t  return 0;\n \tif (m32c_console_ifd == 0 && c == 3)\t/* Ctrl-C */\n \t  {\n \t    printf (\"Ctrl-C!\\n\");\n@@ -535,11 +540,13 @@ mem_get_si (int address)\n void\n mem_get_blk (int address, void *bufptr, int nbytes)\n {\n+  char *buf = bufptr;\n+\n   S (\"=>\");\n   if (enable_counting)\n     mem_counters[0][1] += nbytes;\n   while (nbytes--)\n-    *(char *) bufptr++ = mem_get_byte (address++);\n+    *buf++ = mem_get_byte (address++);\n   E ();\n }\n "
    },
    {
      "sha": "f871c01d82b21386c3408c5b31eeee57a9176acd",
      "filename": "sim/m32c/trace.c",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/trace.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/44056b7ce43618094e61bf856d77c798628cac83/sim/m32c/trace.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/m32c/trace.c?ref=44056b7ce43618094e61bf856d77c798628cac83",
      "patch": "@@ -130,6 +130,7 @@ load_file_and_line (const char *filename, int lineno)\n       struct stat s;\n       const char *found_filename, *slash;\n       FILE *file;\n+      size_t ret;\n \n       found_filename = filename;\n       while (1)\n@@ -148,8 +149,8 @@ load_file_and_line (const char *filename, int lineno)\n       f->filename = strdup (filename);\n       f->data = (char *) malloc (s.st_size + 2);\n       file = fopen (found_filename, \"rb\");\n-      fread (f->data, 1, s.st_size, file);\n-      f->data[s.st_size] = 0;\n+      ret = fread (f->data, 1, s.st_size, file);\n+      f->data[ret] = 0;\n       fclose (file);\n \n       f->nlines = 1;"
    }
  ]
}