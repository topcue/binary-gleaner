{
  "sha": "d148f80354c0dbf01823655f82e239dd60250f35",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDE0OGY4MDM1NGMwZGJmMDE4MjM2NTVmODJlMjM5ZGQ2MDI1MGYzNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:07Z"
    },
    "message": "Change parameters to rust_range\n\nThis changes the parameters to rust_range, making it more suitable for\nreuse by the (coming) new expression code.  In particular, rust_range\nno longer evaluates its subexpressions.  Instead, they are passed in.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* rust-lang.c (rust_range): Change parameters.\n\t(rust_evaluate_subexp): Update.",
    "tree": {
      "sha": "2be3000eac2926d2f765abe4351f0119e6fd52e1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2be3000eac2926d2f765abe4351f0119e6fd52e1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d148f80354c0dbf01823655f82e239dd60250f35",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d148f80354c0dbf01823655f82e239dd60250f35",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d148f80354c0dbf01823655f82e239dd60250f35",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d148f80354c0dbf01823655f82e239dd60250f35/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9cbd1c2011286ac8982f9d606390d3359f78f9c8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9cbd1c2011286ac8982f9d606390d3359f78f9c8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9cbd1c2011286ac8982f9d606390d3359f78f9c8"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 21,
    "deletions": 11
  },
  "files": [
    {
      "sha": "407344bedaf074d76db17d1314119f3ef9d30013",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d148f80354c0dbf01823655f82e239dd60250f35/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d148f80354c0dbf01823655f82e239dd60250f35/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=d148f80354c0dbf01823655f82e239dd60250f35",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* rust-lang.c (rust_range): Change parameters.\n+\t(rust_evaluate_subexp): Update.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* f-lang.c (eval_op_f_allocated): New function."
    },
    {
      "sha": "329e00d9497eef0e2f5e856b88db51a7ebbf331f",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 16,
      "deletions": 11,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d148f80354c0dbf01823655f82e239dd60250f35/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d148f80354c0dbf01823655f82e239dd60250f35/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=d148f80354c0dbf01823655f82e239dd60250f35",
      "patch": "@@ -1041,24 +1041,17 @@ rust_evaluate_funcall (struct expression *exp, int *pos, enum noside noside)\n /* A helper for rust_evaluate_subexp that handles OP_RANGE.  */\n \n static struct value *\n-rust_range (struct expression *exp, int *pos, enum noside noside)\n+rust_range (struct type *expect_type, struct expression *exp,\n+\t    enum noside noside, enum range_flag kind,\n+\t    struct value *low, struct value *high)\n {\n-  struct value *low = NULL, *high = NULL;\n   struct value *addrval, *result;\n   CORE_ADDR addr;\n   struct type *range_type;\n   struct type *index_type;\n   struct type *temp_type;\n   const char *name;\n \n-  auto kind\n-    = (enum range_flag) longest_to_int (exp->elts[*pos + 1].longconst);\n-  *pos += 3;\n-\n-  if (!(kind & RANGE_LOW_BOUND_DEFAULT))\n-    low = evaluate_subexp (nullptr, exp, pos, noside);\n-  if (!(kind & RANGE_HIGH_BOUND_DEFAULT))\n-    high = evaluate_subexp (nullptr, exp, pos, noside);\n   bool inclusive = !(kind & RANGE_HIGH_BOUND_EXCLUSIVE);\n \n   if (noside == EVAL_SKIP)\n@@ -1614,7 +1607,19 @@ tuple structs, and tuple-like enum variants\"));\n       break;\n \n     case OP_RANGE:\n-      result = rust_range (exp, pos, noside);\n+      {\n+\tstruct value *low = NULL, *high = NULL;\n+\tauto kind\n+\t  = (enum range_flag) longest_to_int (exp->elts[*pos + 1].longconst);\n+\t*pos += 3;\n+\n+\tif (!(kind & RANGE_LOW_BOUND_DEFAULT))\n+\t  low = evaluate_subexp (nullptr, exp, pos, noside);\n+\tif (!(kind & RANGE_HIGH_BOUND_DEFAULT))\n+\t  high = evaluate_subexp (nullptr, exp, pos, noside);\n+\n+\tresult = rust_range (expect_type, exp, noside, kind, low, high);\n+      }\n       break;\n \n     case UNOP_ADDR:"
    }
  ]
}