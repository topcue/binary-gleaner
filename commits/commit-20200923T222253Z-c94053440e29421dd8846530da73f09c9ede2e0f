{
  "sha": "c94053440e29421dd8846530da73f09c9ede2e0f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yzk0MDUzNDQwZTI5NDIxZGQ4ODQ2NTMwZGE3M2YwOWM5ZWRlMmUwZg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-23T05:25:39Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-09-23T22:22:53Z"
    },
    "message": "PR26655, Power10 libstdc++.so R_PPC64_NONE dynamic relocs\n\nSome of the powerpc64 code editing functions are better run after\ndynamic symbols have stabilised in order to make proper decisions\nbased on SYMBOL_REFERENCES_LOCAL.  The dynamic symbols are processed\nearly in bfd_elf_size_dynamic_sections, before the backend\nalways_size_sections function is called.\n\nOne function, ppc64_elf_tls_setup must run before\nbfd_elf_size_dynamic_sections because it changes dynamic symbols.\nppc64_elf_edit_opd and ppc64_elf_inline_plt can run early or late, I\nthink.  ppc64_elf_tls_optimize and ppc64_elf_edit_toc are better run\nlater.\n\nSo this patch arranges to call some edit functions later via\nalways_size_sections.\n\n\tPR 26655\nbfd/\n\t* elf64-ppc.c (ppc64_elf_func_desc_adjust): Rename to..\n\t(ppc64_elf_edit): Call params->edit.\n\t(ppc64_elf_tls_setup): Don't call _bfd_elf_tls_setup.  Return a\n\tbfd_boolean.\n\t* elf64-ppc.h (struct ppc64_elf_params): Add \"edit\".\n\t(ppc64_elf_tls_setup): Update declaration.\nld/\n\t* emultempl/ppc64elf.em (params): Add ppc_edit.\n\t(ppc_before_allocation): Split off some edit functions to..\n\t(ppc_edit): ..this, new function.",
    "tree": {
      "sha": "0eda8206c14678ef2b6e4114f95fca798460ce7f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0eda8206c14678ef2b6e4114f95fca798460ce7f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c94053440e29421dd8846530da73f09c9ede2e0f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c94053440e29421dd8846530da73f09c9ede2e0f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c94053440e29421dd8846530da73f09c9ede2e0f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c94053440e29421dd8846530da73f09c9ede2e0f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "afdcafe89118cee761f9bf67ea1b1efc29311300",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/afdcafe89118cee761f9bf67ea1b1efc29311300",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/afdcafe89118cee761f9bf67ea1b1efc29311300"
    }
  ],
  "stats": {
    "total": 65,
    "additions": 50,
    "deletions": 15
  },
  "files": [
    {
      "sha": "39e5ead6d73be75e85f6cc14e60aa1d549880f48",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=c94053440e29421dd8846530da73f09c9ede2e0f",
      "patch": "@@ -1,3 +1,13 @@\n+2020-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26655\n+\t* elf64-ppc.c (ppc64_elf_func_desc_adjust): Rename to..\n+\t(ppc64_elf_edit): Call params->edit.\n+\t(ppc64_elf_tls_setup): Don't call _bfd_elf_tls_setup.  Return a\n+\tbfd_boolean.\n+\t* elf64-ppc.h (struct ppc64_elf_params): Add \"edit\".\n+\t(ppc64_elf_tls_setup): Update declaration.\n+\n 2020-09-21  Alan Modra  <amodra@gmail.com>\n \n \tPR 26569"
    },
    {
      "sha": "4d16dc3cd46b17c45d1725523add0bf4c0d92c1f",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 16,
      "deletions": 11,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=c94053440e29421dd8846530da73f09c9ede2e0f",
      "patch": "@@ -114,7 +114,7 @@ static bfd_vma opd_entry_value\n #define elf_backend_adjust_dynamic_symbol     ppc64_elf_adjust_dynamic_symbol\n #define elf_backend_hide_symbol\t\t      ppc64_elf_hide_symbol\n #define elf_backend_maybe_function_sym\t      ppc64_elf_maybe_function_sym\n-#define elf_backend_always_size_sections      ppc64_elf_func_desc_adjust\n+#define elf_backend_always_size_sections      ppc64_elf_edit\n #define elf_backend_size_dynamic_sections     ppc64_elf_size_dynamic_sections\n #define elf_backend_hash_symbol\t\t      ppc64_elf_hash_symbol\n #define elf_backend_init_index_section\t      _bfd_elf_init_2_index_sections\n@@ -6341,20 +6341,23 @@ static const struct sfpr_def_parms save_res_funcs[] =\n   };\n \n /* Called near the start of bfd_elf_size_dynamic_sections.  We use\n-   this hook to a) provide some gcc support functions, and b) transfer\n-   dynamic linking information gathered so far on function code symbol\n-   entries, to their corresponding function descriptor symbol entries.  */\n+   this hook to a) run the edit functions in this file, b) provide\n+   some gcc support functions, and c) transfer dynamic linking\n+   information gathered so far on function code symbol entries, to\n+   their corresponding function descriptor symbol entries.  */\n \n static bfd_boolean\n-ppc64_elf_func_desc_adjust (bfd *obfd ATTRIBUTE_UNUSED,\n-\t\t\t    struct bfd_link_info *info)\n+ppc64_elf_edit (bfd *obfd ATTRIBUTE_UNUSED, struct bfd_link_info *info)\n {\n   struct ppc_link_hash_table *htab;\n \n   htab = ppc_hash_table (info);\n   if (htab == NULL)\n     return FALSE;\n \n+  /* Call back into the linker, which then runs the edit functions.  */\n+  htab->params->edit ();\n+\n   /* Provide any missing _save* and _rest* functions.  */\n   if (htab->sfpr != NULL)\n     {\n@@ -7695,17 +7698,19 @@ ppc64_elf_inline_plt (struct bfd_link_info *info)\n   return TRUE;\n }\n \n-/* Set htab->tls_get_addr and call the generic ELF tls_setup function.  */\n+/* Set htab->tls_get_addr and various other info specific to TLS.\n+   This needs to run before dynamic symbols are processed in\n+   bfd_elf_size_dynamic_sections.  */\n \n-asection *\n+bfd_boolean\n ppc64_elf_tls_setup (struct bfd_link_info *info)\n {\n   struct ppc_link_hash_table *htab;\n   struct elf_link_hash_entry *tga, *tga_fd, *desc, *desc_fd;\n \n   htab = ppc_hash_table (info);\n   if (htab == NULL)\n-    return NULL;\n+    return FALSE;\n \n   if (abiversion (info->output_bfd) == 1)\n     htab->opd_abi = 1;\n@@ -7827,7 +7832,7 @@ ppc64_elf_tls_setup (struct bfd_link_info *info)\n \t\t      _bfd_elf_strtab_delref (elf_hash_table (info)->dynstr,\n \t\t\t\t\t      opt_fd->dynstr_index);\n \t\t      if (!bfd_elf_link_record_dynamic_symbol (info, opt_fd))\n-\t\t\treturn NULL;\n+\t\t\treturn FALSE;\n \t\t    }\n \t\t  if (tga_fd != NULL)\n \t\t    {\n@@ -7886,7 +7891,7 @@ ppc64_elf_tls_setup (struct bfd_link_info *info)\n       && htab->params->no_tls_get_addr_regsave == -1)\n     htab->params->no_tls_get_addr_regsave = 0;\n \n-  return _bfd_elf_tls_setup (info->output_bfd, info);\n+  return TRUE;\n }\n \n /* Return TRUE iff REL is a branch reloc with a global symbol matching"
    },
    {
      "sha": "0492fd7fad5d568a2c7b566fa7df77d45d1f547d",
      "filename": "bfd/elf64-ppc.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/elf64-ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c94053440e29421dd8846530da73f09c9ede2e0f/bfd/elf64-ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.h?ref=c94053440e29421dd8846530da73f09c9ede2e0f",
      "patch": "@@ -27,6 +27,7 @@ struct ppc64_elf_params\n   /* Linker call-backs.  */\n   asection * (*add_stub_section) (const char *, asection *);\n   void (*layout_sections_again) (void);\n+  void (*edit) (void);\n \n   /* Maximum size of a group of input sections that can be handled by\n      one stub section.  A value of +/-1 indicates the bfd back-end\n@@ -80,7 +81,7 @@ bfd_boolean ppc64_elf_edit_opd\n   (struct bfd_link_info *);\n bfd_boolean ppc64_elf_inline_plt\n   (struct bfd_link_info *);\n-asection *ppc64_elf_tls_setup\n+bfd_boolean ppc64_elf_tls_setup\n   (struct bfd_link_info *);\n bfd_boolean ppc64_elf_tls_optimize\n   (struct bfd_link_info *);"
    },
    {
      "sha": "0662ac2ca780e45028090f7b470069f24a8620ce",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c94053440e29421dd8846530da73f09c9ede2e0f/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c94053440e29421dd8846530da73f09c9ede2e0f/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=c94053440e29421dd8846530da73f09c9ede2e0f",
      "patch": "@@ -1,3 +1,10 @@\n+2020-09-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 26655\n+\t* emultempl/ppc64elf.em (params): Add ppc_edit.\n+\t(ppc_before_allocation): Split off some edit functions to..\n+\t(ppc_edit): ..this, new function.\n+\n 2020-09-22  Frediano Ziglio  <fziglio@redhat.com>\n \n \t* emultempl/pe.em (set_entry_point): Only use the DLL entry point"
    },
    {
      "sha": "2df5a218e6a64a086f2ddbc7d8be7093bef05511",
      "filename": "ld/emultempl/ppc64elf.em",
      "status": "modified",
      "additions": 15,
      "deletions": 3,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c94053440e29421dd8846530da73f09c9ede2e0f/ld/emultempl/ppc64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c94053440e29421dd8846530da73f09c9ede2e0f/ld/emultempl/ppc64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/ppc64elf.em?ref=c94053440e29421dd8846530da73f09c9ede2e0f",
      "patch": "@@ -32,10 +32,12 @@ fragment <<EOF\n \n static asection *ppc_add_stub_section (const char *, asection *);\n static void ppc_layout_sections_again (void);\n+static void ppc_edit (void);\n \n static struct ppc64_elf_params params = { NULL,\n \t\t\t\t\t  &ppc_add_stub_section,\n \t\t\t\t\t  &ppc_layout_sections_again,\n+\t\t\t\t\t  &ppc_edit,\n \t\t\t\t\t  1, -1, -1, 0,\n \t\t\t\t\t  ${DEFAULT_PLT_STATIC_CHAIN-0}, -1, 5,\n \t\t\t\t\t  -1, -1, 0, 0, -1, -1, 0};\n@@ -294,7 +296,19 @@ ppc_before_allocation (void)\n \t    einfo (_(\"%X%P: inline PLT: %E\\n\"));\n \t}\n \n-      if (ppc64_elf_tls_setup (&link_info)\n+      if (!ppc64_elf_tls_setup (&link_info))\n+\teinfo (_(\"%X%P: TLS problem %E\\n\"));\n+    }\n+\n+  gld${EMULATION_NAME}_before_allocation ();\n+}\n+\n+static void\n+ppc_edit (void)\n+{\n+  if (stub_file != NULL)\n+    {\n+      if (elf_hash_table (&link_info)->tls_sec != NULL\n \t  && !no_tls_opt)\n \t{\n \t  /* Size the sections.  This is premature, but we want to know the\n@@ -323,8 +337,6 @@ ppc_before_allocation (void)\n \t    sort_toc_sections (&toc_os->children, NULL, NULL);\n \t}\n     }\n-\n-  gld${EMULATION_NAME}_before_allocation ();\n }\n \n struct hook_stub_info"
    }
  ]
}