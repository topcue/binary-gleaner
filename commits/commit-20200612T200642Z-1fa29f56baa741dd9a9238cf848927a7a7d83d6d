{
  "sha": "1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWZhMjlmNTZiYWE3NDFkZDlhOTIzOGNmODQ4OTI3YTdhN2Q4M2Q2ZA==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-12T20:06:42Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-06-12T20:06:42Z"
    },
    "message": "gdbserver: remove support for Blackfin\n\nThis port has been unmaintained for years and the upstream Linux kernel\ndoes not support this architecture anymore, remove it.\n\ngdbserver/ChangeLog:\n\n\t* Makefile.in (SFILES): Remove linux-bfin-low.c.\n\t* configure.srv: Remove bfin case.\n\t* linux-bfin-low.cc: Remove.\n\t* linux-low.cc: Remove BFIN-conditional code.\n\nChange-Id: I846310d15e6386118ec7eabb1b87e647174560fb",
    "tree": {
      "sha": "45b52bccac9b4311d47aff67b23aa12a9b4ef181",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/45b52bccac9b4311d47aff67b23aa12a9b4ef181"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "613f149a90d6fc32a5a6ff47e0325f762cb07424",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/613f149a90d6fc32a5a6ff47e0325f762cb07424",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/613f149a90d6fc32a5a6ff47e0325f762cb07424"
    }
  ],
  "stats": {
    "total": 191,
    "additions": 7,
    "deletions": 184
  },
  "files": [
    {
      "sha": "e49c81865560f698e8dda08443ff7d6a80932887",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
      "patch": "@@ -1,3 +1,10 @@\n+2020-06-12  Simon Marchi  <simon.marchi@efficios.com>\n+\n+\t* Makefile.in (SFILES): Remove linux-bfin-low.c.\n+\t* configure.srv: Remove bfin case.\n+\t* linux-bfin-low.cc: Remove.\n+\t* linux-low.cc: Remove BFIN-conditional code.\n+\n 2020-06-12  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* configure: Re-generate."
    },
    {
      "sha": "58577ca898c380cb13b7216e2ff784df188d061f",
      "filename": "gdbserver/Makefile.in",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/Makefile.in?ref=1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
      "patch": "@@ -180,7 +180,6 @@ SFILES = \\\n \t$(srcdir)/inferiors.cc \\\n \t$(srcdir)/linux-aarch64-low.cc \\\n \t$(srcdir)/linux-arm-low.cc \\\n-\t$(srcdir)/linux-bfin-low.cc \\\n \t$(srcdir)/linux-cris-low.cc \\\n \t$(srcdir)/linux-crisv32-low.cc \\\n \t$(srcdir)/linux-ia64-low.cc \\"
    },
    {
      "sha": "4b4e25a5e5e8b836459c0893d5c1d8c76f4a4883",
      "filename": "gdbserver/configure.srv",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/configure.srv",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/configure.srv",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/configure.srv?ref=1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
      "patch": "@@ -81,11 +81,6 @@ case \"${gdbserver_host}\" in\n \t\t\tsrv_mingw=yes\n \t\t\tsrv_mingwce=yes\n \t\t\t;;\n-  bfin-*-*linux*)\tsrv_regobj=reg-bfin.o\n-\t\t\tsrv_tgtobj=\"$srv_linux_obj linux-bfin-low.o\"\n-\t\t\tsrv_linux_usrregs=yes\n-\t\t\tsrv_linux_thread_db=yes\n-\t\t\t;;\n   crisv32-*-linux*)\tsrv_regobj=reg-crisv32.o\n \t\t\tsrv_tgtobj=\"$srv_linux_obj linux-crisv32-low.o\"\n \t\t\tsrv_linux_regsets=yes"
    },
    {
      "sha": "963ccfeda949aa062de62a23900725a2cdaf0e38",
      "filename": "gdbserver/linux-bfin-low.cc",
      "status": "removed",
      "additions": 0,
      "deletions": 173,
      "changes": 173,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/613f149a90d6fc32a5a6ff47e0325f762cb07424/gdbserver/linux-bfin-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/613f149a90d6fc32a5a6ff47e0325f762cb07424/gdbserver/linux-bfin-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-bfin-low.cc?ref=613f149a90d6fc32a5a6ff47e0325f762cb07424",
      "patch": "@@ -1,173 +0,0 @@\n-/* GNU/Linux/BFIN specific low level interface, for the remote server for GDB.\n-\n-   Copyright (C) 2005-2020 Free Software Foundation, Inc.\n-\n-   Contributed by Analog Devices, Inc.\n-\n-   This file is part of GDB.\n-\n-   This program is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as published by\n-   the Free Software Foundation; either version 3 of the License, or\n-   (at your option) any later version.\n-\n-   This program is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n-\n-#include \"server.h\"\n-#include \"linux-low.h\"\n-#include <asm/ptrace.h>\n-\n-/* Linux target op definitions for the BFIN architecture.  */\n-\n-class bfin_target : public linux_process_target\n-{\n-public:\n-\n-  const regs_info *get_regs_info () override;\n-\n-  const gdb_byte *sw_breakpoint_from_kind (int kind, int *size) override;\n-\n-protected:\n-\n-  void low_arch_setup () override;\n-\n-  bool low_cannot_fetch_register (int regno) override;\n-\n-  bool low_cannot_store_register (int regno) override;\n-\n-  bool low_supports_breakpoints () override;\n-\n-  CORE_ADDR low_get_pc (regcache *regcache) override;\n-\n-  void low_set_pc (regcache *regcache, CORE_ADDR newpc) override;\n-\n-  int low_decr_pc_after_break () override;\n-\n-  bool low_breakpoint_at (CORE_ADDR pc) override;\n-};\n-\n-/* The singleton target ops object.  */\n-\n-static bfin_target the_bfin_target;\n-\n-bool\n-bfin_target::low_supports_breakpoints ()\n-{\n-  return true;\n-}\n-\n-CORE_ADDR\n-bfin_target::low_get_pc (regcache *regcache)\n-{\n-  return linux_get_pc_32bit (regcache);\n-}\n-\n-void\n-bfin_target::low_set_pc (regcache *regcache, CORE_ADDR pc)\n-{\n-  linux_set_pc_32bit (regcache, pc);\n-}\n-\n-int\n-bfin_target::low_decr_pc_after_break ()\n-{\n-  return 2;\n-}\n-\n-/* Defined in auto-generated file reg-bfin.c.  */\n-void init_registers_bfin (void);\n-extern const struct target_desc *tdesc_bfin;\n-\n-static int bfin_regmap[] =\n-{\n-  PT_R0, PT_R1, PT_R2, PT_R3, PT_R4, PT_R5, PT_R6, PT_R7,\n-  PT_P0, PT_P1, PT_P2, PT_P3, PT_P4, PT_P5, PT_USP, PT_FP,\n-  PT_I0, PT_I1, PT_I2, PT_I3, PT_M0, PT_M1, PT_M2, PT_M3,\n-  PT_B0, PT_B1, PT_B2, PT_B3, PT_L0, PT_L1, PT_L2, PT_L3,\n-  PT_A0X, PT_A0W, PT_A1X, PT_A1W, PT_ASTAT, PT_RETS,\n-  PT_LC0, PT_LT0, PT_LB0, PT_LC1, PT_LT1, PT_LB1,\n-  -1 /* PT_CYCLES */, -1 /* PT_CYCLES2 */,\n-  -1 /* PT_USP */, PT_SEQSTAT, PT_SYSCFG, PT_PC, PT_RETX, PT_RETN, PT_RETE,\n-  PT_PC,\n-};\n-\n-#define bfin_num_regs ARRAY_SIZE (bfin_regmap)\n-\n-bool\n-bfin_target::low_cannot_store_register (int regno)\n-{\n-  return (regno >= bfin_num_regs);\n-}\n-\n-bool\n-bfin_target::low_cannot_fetch_register (int regno)\n-{\n-  return (regno >= bfin_num_regs);\n-}\n-\n-#define bfin_breakpoint_len 2\n-static const gdb_byte bfin_breakpoint[bfin_breakpoint_len] = {0xa1, 0x00};\n-\n-/* Implementation of target ops method \"sw_breakpoint_from_kind\".  */\n-\n-const gdb_byte *\n-bfin_target::sw_breakpoint_from_kind (int kind, int *size)\n-{\n-  *size = bfin_breakpoint_len;\n-  return bfin_breakpoint;\n-}\n-\n-bool\n-bfin_target::low_breakpoint_at (CORE_ADDR where)\n-{\n-  unsigned char insn[bfin_breakpoint_len];\n-\n-  read_inferior_memory(where, insn, bfin_breakpoint_len);\n-  if (insn[0] == bfin_breakpoint[0]\n-      && insn[1] == bfin_breakpoint[1])\n-    return true;\n-\n-  /* If necessary, recognize more trap instructions here.  GDB only uses the\n-     one.  */\n-  return false;\n-}\n-\n-void\n-bfin_target::low_arch_setup ()\n-{\n-  current_process ()->tdesc = tdesc_bfin;\n-}\n-\n-static struct usrregs_info bfin_usrregs_info =\n-  {\n-    bfin_num_regs,\n-    bfin_regmap,\n-  };\n-\n-static struct regs_info myregs_info =\n-  {\n-    NULL, /* regset_bitmap */\n-    &bfin_usrregs_info,\n-  };\n-\n-const regs_info *\n-bfin_target::get_regs_info ()\n-{\n-  return &myregs_info;\n-}\n-\n-/* The linux target ops object.  */\n-\n-linux_process_target *the_linux_target = &the_bfin_target;\n-\n-void\n-initialize_low_arch (void)\n-{\n-  init_registers_bfin ();\n-}"
    },
    {
      "sha": "bde6c767e87e4e8b1d7f4f702a21610429e52df4",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 5,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1fa29f56baa741dd9a9238cf848927a7a7d83d6d/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=1fa29f56baa741dd9a9238cf848927a7a7d83d6d",
      "patch": "@@ -86,11 +86,6 @@\n #define PT_TEXT_ADDR 49*4\n #define PT_DATA_ADDR 50*4\n #define PT_TEXT_END_ADDR  51*4\n-/* BFIN already defines these since at least 2.6.32 kernels.  */\n-#elif defined(BFIN)\n-#define PT_TEXT_ADDR 220\n-#define PT_TEXT_END_ADDR 224\n-#define PT_DATA_ADDR 228\n /* These are still undefined in 3.10 kernels.  */\n #elif defined(__TMS320C6X__)\n #define PT_TEXT_ADDR     (0x10000*4)"
    }
  ]
}