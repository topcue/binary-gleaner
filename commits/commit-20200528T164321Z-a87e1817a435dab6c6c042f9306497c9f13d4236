{
  "sha": "a87e1817a435dab6c6c042f9306497c9f13d4236",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTg3ZTE4MTdhNDM1ZGFiNmM2YzA0MmY5MzA2NDk3YzlmMTNkNDIzNg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-28T16:43:21Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-05-28T16:43:21Z"
    },
    "message": "Have the linker fail if any attempt to link in an executable is made.\n\n\tPR 26047\n\t* ldelf.c (ldelf_after_open): Fail if attempting to link one\n\texecutable into another.  Ensure that the test is made for all\n\tforms of linking.",
    "tree": {
      "sha": "fe25ebf0548d80ba774792afda33bb7366ebd41c",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fe25ebf0548d80ba774792afda33bb7366ebd41c"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a87e1817a435dab6c6c042f9306497c9f13d4236",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a87e1817a435dab6c6c042f9306497c9f13d4236",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a87e1817a435dab6c6c042f9306497c9f13d4236",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a87e1817a435dab6c6c042f9306497c9f13d4236/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a3fc941881e4224eff3ef20ba1e784026bcc17fa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a3fc941881e4224eff3ef20ba1e784026bcc17fa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a3fc941881e4224eff3ef20ba1e784026bcc17fa"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 14,
    "deletions": 2
  },
  "files": [
    {
      "sha": "28999bc49b69b3b5be772be47a47c8b974b25d7f",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a87e1817a435dab6c6c042f9306497c9f13d4236/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a87e1817a435dab6c6c042f9306497c9f13d4236/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=a87e1817a435dab6c6c042f9306497c9f13d4236",
      "patch": "@@ -2,7 +2,8 @@\n \n \tPR 26047\n \t* ldelf.c (ldelf_after_open): Fail if attempting to link one\n-\texecutable into another.\n+\texecutable into another.  Ensure that the test is made for all\n+\tforms of linking.\n \n 2020-05-28  H.J. Lu  <hongjiu.lu@intel.com>\n "
    },
    {
      "sha": "8f2167e8895ef3bdd5029ff2f5c247ad868c3617",
      "filename": "ld/ldelf.c",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a87e1817a435dab6c6c042f9306497c9f13d4236/ld/ldelf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a87e1817a435dab6c6c042f9306497c9f13d4236/ld/ldelf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ldelf.c?ref=a87e1817a435dab6c6c042f9306497c9f13d4236",
      "patch": "@@ -1038,6 +1038,17 @@ ldelf_after_open (int use_libpath, int native, int is_linux, int is_freebsd,\n \n   get_elf_backend_data (link_info.output_bfd)->setup_gnu_properties (&link_info);\n \n+  /* Do not allow executable files to be used as inputs to the link.  */\n+  for (abfd = link_info.input_bfds; abfd; abfd = abfd->link.next)\n+    {\n+      if (elf_tdata (abfd) != NULL\n+\t  && elf_tdata (abfd)->elf_header != NULL\n+\t  /* FIXME: Maybe check for other non-supportable types as well ?  */\n+\t  && elf_tdata (abfd)->elf_header->e_type == ET_EXEC)\n+\teinfo (_(\"%F%P: cannot use executable file '%pB' as input to a link\\n\"),\n+\t       abfd);\n+    }\n+\n   if (bfd_link_relocatable (&link_info))\n     {\n       if (link_info.execstack == !link_info.noexecstack)\n@@ -1054,7 +1065,7 @@ ldelf_after_open (int use_libpath, int native, int is_linux, int is_freebsd,\n \t}\n       return;\n     }\n-\n+  \n   if (!link_info.traditional_format)\n     {\n       bfd *elfbfd = NULL;"
    }
  ]
}