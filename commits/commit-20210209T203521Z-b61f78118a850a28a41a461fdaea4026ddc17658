{
  "sha": "b61f78118a850a28a41a461fdaea4026ddc17658",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjYxZjc4MTE4YTg1MGEyOGE0MWE0NjFmZGFlYTQwMjZkZGMxNzY1OA==",
  "commit": {
    "author": {
      "name": "Hafiz Abid Qadeer",
      "email": "abidh@codesourcery.com",
      "date": "2021-02-09T17:11:28Z"
    },
    "committer": {
      "name": "Hafiz Abid Qadeer",
      "email": "abidh@codesourcery.com",
      "date": "2021-02-09T20:35:21Z"
    },
    "message": "[testsuite] Don't use 'testfile' before 'standard_testfile'.\n\nWhile running tests on arm-none-eabi, I noticed following errors in some\ngdb.threads tests.\n\nERROR: can't read \"testfile\": no such variable\n\nThese were being caused by ${testfile} being used before 'standard_testfile'\nwhich sets it. This patch just moves standard_testfile before the use.\n\n2021-02-09  Abid Qadeer  <abidh@codesourcery.com>\n\n\tgdb/testsuite/ChangeLog:\n\n\t* gdb.threads/signal-command-handle-nopass.exp: Call\n\t'standard_testfile' before using 'testfile'.\n\t* gdb.threads/signal-command-multiple-signals-pending.exp: Likewise.\n\t* gdb.threads/signal-delivered-right-thread.exp: Likewise\n\t* gdb.threads/signal-sigtrap.exp: Likewise",
    "tree": {
      "sha": "152f72d521420c04b6a4d53db5872d2645ac8a17",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/152f72d521420c04b6a4d53db5872d2645ac8a17"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b61f78118a850a28a41a461fdaea4026ddc17658",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b61f78118a850a28a41a461fdaea4026ddc17658",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b61f78118a850a28a41a461fdaea4026ddc17658",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b61f78118a850a28a41a461fdaea4026ddc17658/comments",
  "author": {
    "login": "abidh",
    "id": 4067533,
    "node_id": "MDQ6VXNlcjQwNjc1MzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abidh",
    "html_url": "https://github.com/abidh",
    "followers_url": "https://api.github.com/users/abidh/followers",
    "following_url": "https://api.github.com/users/abidh/following{/other_user}",
    "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abidh/subscriptions",
    "organizations_url": "https://api.github.com/users/abidh/orgs",
    "repos_url": "https://api.github.com/users/abidh/repos",
    "events_url": "https://api.github.com/users/abidh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abidh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "abidh",
    "id": 4067533,
    "node_id": "MDQ6VXNlcjQwNjc1MzM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abidh",
    "html_url": "https://github.com/abidh",
    "followers_url": "https://api.github.com/users/abidh/followers",
    "following_url": "https://api.github.com/users/abidh/following{/other_user}",
    "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abidh/subscriptions",
    "organizations_url": "https://api.github.com/users/abidh/orgs",
    "repos_url": "https://api.github.com/users/abidh/repos",
    "events_url": "https://api.github.com/users/abidh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abidh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f73e424f7bb51d4a5164320107f386b8fec34f4b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f73e424f7bb51d4a5164320107f386b8fec34f4b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f73e424f7bb51d4a5164320107f386b8fec34f4b"
    }
  ],
  "stats": {
    "total": 24,
    "additions": 16,
    "deletions": 8
  },
  "files": [
    {
      "sha": "e51f4d79435fbcb787734093c367a50a1cf1da84",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b61f78118a850a28a41a461fdaea4026ddc17658",
      "patch": "@@ -1,3 +1,11 @@\n+2021-02-09  Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* gdb.threads/signal-command-handle-nopass.exp: Call\n+\t'standard_testfile' before using 'testfile'.\n+\t* gdb.threads/signal-command-multiple-signals-pending.exp: Likewise.\n+\t* gdb.threads/signal-delivered-right-thread.exp: Likewise\n+\t* gdb.threads/signal-sigtrap.exp: Likewise\n+\n 2021-02-08  Luis Machado  <luis.machado@linaro.org>\n \n \t* gdb.base/gnu-ifunc.exp (build): Pass -Wl,z,lazy."
    },
    {
      "sha": "bef125c8ab425908f0f8080145d3e445eae51905",
      "filename": "gdb/testsuite/gdb.threads/signal-command-handle-nopass.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-command-handle-nopass.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-command-handle-nopass.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-command-handle-nopass.exp?ref=b61f78118a850a28a41a461fdaea4026ddc17658",
      "patch": "@@ -18,13 +18,13 @@\n # delivered to the right thread, even if GDB has to step over a\n # breakpoint in some other thread first.\n \n+standard_testfile\n+\n if [target_info exists gdb,nosignals] {\n     verbose \"Skipping ${testfile}.exp because of nosignals.\"\n     return -1\n }\n \n-standard_testfile\n-\n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" \\\n \t executable { debug }] != \"\" } {\n     return -1"
    },
    {
      "sha": "2d4417c6506f254cbb532298cea971c0b37b853b",
      "filename": "gdb/testsuite/gdb.threads/signal-command-multiple-signals-pending.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-command-multiple-signals-pending.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-command-multiple-signals-pending.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-command-multiple-signals-pending.exp?ref=b61f78118a850a28a41a461fdaea4026ddc17658",
      "patch": "@@ -16,13 +16,13 @@\n # Test that \"signal FOO\" behaves correctly when we have multiple\n # threads that have stopped for a signal.\n \n+standard_testfile\n+\n if [target_info exists gdb,nosignals] {\n     verbose \"Skipping ${testfile}.exp because of nosignals.\"\n     return -1\n }\n \n-standard_testfile\n-\n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" \\\n \t executable { debug }] != \"\" } {\n     return -1"
    },
    {
      "sha": "c635facca2d3634fbca70af72d6aec6aa16c73b4",
      "filename": "gdb/testsuite/gdb.threads/signal-delivered-right-thread.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-delivered-right-thread.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-delivered-right-thread.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-delivered-right-thread.exp?ref=b61f78118a850a28a41a461fdaea4026ddc17658",
      "patch": "@@ -13,13 +13,13 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n \n+standard_testfile\n+\n if [target_info exists gdb,nosignals] {\n     verbose \"Skipping ${testfile}.exp because of nosignals.\"\n     return -1\n }\n \n-standard_testfile\n-\n if {[gdb_compile_pthreads \"${srcdir}/${subdir}/${srcfile}\" \"${binfile}\" \\\n \t executable { debug }] != \"\" } {\n     return -1"
    },
    {
      "sha": "92488a50ac1bb7724d38a694620cad493d276077",
      "filename": "gdb/testsuite/gdb.threads/signal-sigtrap.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-sigtrap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b61f78118a850a28a41a461fdaea4026ddc17658/gdb/testsuite/gdb.threads/signal-sigtrap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/signal-sigtrap.exp?ref=b61f78118a850a28a41a461fdaea4026ddc17658",
      "patch": "@@ -16,13 +16,13 @@\n # Check that GDB doesn't forget to pass SIGTRAP to the program when\n # the user explicitly passes it with the signal command.\n \n+standard_testfile\n+\n if [target_info exists gdb,nosignals] {\n     verbose \"Skipping ${testfile}.exp because of nosignals.\"\n     return -1\n }\n \n-standard_testfile\n-\n if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile {debug pthreads}]} {\n     return -1\n }"
    }
  ]
}