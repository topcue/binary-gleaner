{
  "sha": "121b3efd49f98e4049281b3ba7a258e650e40b38",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTIxYjNlZmQ0OWY5OGU0MDQ5MjgxYjNiYTdhMjU4ZTY1MGU0MGIzOA==",
  "commit": {
    "author": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:06:14Z"
    },
    "committer": {
      "name": "Pedro Alves",
      "email": "palves@redhat.com",
      "date": "2020-01-10T20:06:14Z"
    },
    "message": "Add \"info connections\" command, \"info inferiors\" connection number/string\n\nThis commit extends the CLI a bit for multi-target, in three ways.\n\n#1 - New \"info connections\" command.\n\nThis is a new command that lists the open connections (process_stratum\ntargets).  For example, if you're debugging two remote connections, a\ncouple local/native processes, and a core dump, all at the same time,\nyou might see something like this:\n\n (gdb) info connections\n   Num  What                     Description\n   1    remote 192.168.0.1:9999  Remote serial target in gdb-specific protocol\n   2    remote 192.168.0.2:9998  Remote serial target in gdb-specific protocol\n * 3    native                   Native process\n   4    core                     Local core dump file\n\n#2 - New \"info inferiors\" \"Connection\" column\n\nYou'll also see a new matching \"Connection\" column in \"info\ninferiors\", showing you which connection an inferior is bound to:\n\n (gdb) info inferiors\n   Num  Description       Connection                   Executable\n   1    process 18526     1 (remote 192.168.0.1:9999)  target:/tmp/a.out\n   2    process 18531     2 (remote 192.168.0.2:9998)  target:/tmp/a.out\n   3    process 19115     3 (native)                   /tmp/prog1\n   4    process 6286      4 (core)                     myprogram\n * 5    process 19122     3 (native)                   /bin/hello\n\n#3 - Makes \"add-inferior\" show the inferior's target connection\n\n\"add-inferior\" now shows you the connection you've just bound the\ninferior to, which is the current process_stratum target:\n\n (gdb) add-inferior\n [New inferior 2]\n Added inferior 2 on connection 1 (extended-remote localhost:2346)\n\ngdb/ChangeLog:\n2020-01-10  Pedro Alves  <palves@redhat.com>\n\n\t* Makefile.in (COMMON_SFILES): Add target-connection.c.\n\t* inferior.c (uiout_field_connection): New function.\n\t(print_inferior): Add new \"connection-id\" column.\n\t(add_inferior_command): Show connection number/string of added\n\tinferior.\n\t* process-stratum-target.h\n\t(process_stratum_target::connection_string): New virtual method.\n\t(process_stratum_target::connection_number): New field.\n\t* remote.c (remote_target::connection_string): New override.\n\t* target-connection.c: New file.\n\t* target-connection.h: New file.\n\t* target.c (decref_target): Remove process_stratum targets from\n\tthe connection list.\n\t(target_stack::push): Add process_stratum targets to the\n\tconnection list.\n\ngdb/testsuite/ChangeLog:\n2020-01-10  Pedro Alves  <palves@redhat.com>\n\n\t* gdb.base/kill-detach-inferiors-cmd.exp: Adjust expected output\n\tof \"add-inferior\".\n\t* gdb.base/quit-live.exp: Likewise.\n\t* gdb.base/remote-exec-file.exp: Likewise.\n\t* gdb.guile/scm-progspace.exp: Likewise.\n\t* gdb.linespec/linespec.exp: Likewise.\n\t* gdb.mi/new-ui-mi-sync.exp: Likewise.\n\t* gdb.mi/user-selected-context-sync.exp: Likewise.\n\t* gdb.multi/multi-target.exp (setup): Add \"info connection\" and\n\t\"info inferiors\" tests.\n\t* gdb.multi/remove-inferiors.exp: Adjust expected output of\n\t\"add-inferior\".\n\t* gdb.multi/watchpoint-multi.exp: Likewise.\n\t* gdb.python/py-inferior.exp: Likewise.\n\t* gdb.server/extended-remote-restart.exp: Likewise.\n\t* gdb.threads/fork-plus-threads.exp: Adjust expected output of\n\t\"info inferiors\".\n\t* gdb.threads/forking-threads-plus-breakpoint.exp: Likewise.\n\t* gdb.trace/report.exp: Likewise.",
    "tree": {
      "sha": "6cc76edd8054a1270597adc9fa668562eba78d82",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6cc76edd8054a1270597adc9fa668562eba78d82"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/121b3efd49f98e4049281b3ba7a258e650e40b38",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/121b3efd49f98e4049281b3ba7a258e650e40b38",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/121b3efd49f98e4049281b3ba7a258e650e40b38",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/121b3efd49f98e4049281b3ba7a258e650e40b38/comments",
  "author": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "palves",
    "id": 1202913,
    "node_id": "MDQ6VXNlcjEyMDI5MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1202913?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/palves",
    "html_url": "https://github.com/palves",
    "followers_url": "https://api.github.com/users/palves/followers",
    "following_url": "https://api.github.com/users/palves/following{/other_user}",
    "gists_url": "https://api.github.com/users/palves/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/palves/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/palves/subscriptions",
    "organizations_url": "https://api.github.com/users/palves/orgs",
    "repos_url": "https://api.github.com/users/palves/repos",
    "events_url": "https://api.github.com/users/palves/events{/privacy}",
    "received_events_url": "https://api.github.com/users/palves/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f83758119ddf0f114477760d79bdde7bbc76835",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f83758119ddf0f114477760d79bdde7bbc76835",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/4f83758119ddf0f114477760d79bdde7bbc76835"
    }
  ],
  "stats": {
    "total": 403,
    "additions": 375,
    "deletions": 28
  },
  "files": [
    {
      "sha": "d07a792ae5d7800586fe44ed12663d5cdd340063",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -1,3 +1,21 @@\n+2020-01-10  Pedro Alves  <palves@redhat.com>\n+\n+\t* Makefile.in (COMMON_SFILES): Add target-connection.c.\n+\t* inferior.c (uiout_field_connection): New function.\n+\t(print_inferior): Add new \"connection-id\" column.\n+\t(add_inferior_command): Show connection number/string of added\n+\tinferior.\n+\t* process-stratum-target.h\n+\t(process_stratum_target::connection_string): New virtual method.\n+\t(process_stratum_target::connection_number): New field.\n+\t* remote.c (remote_target::connection_string): New override.\n+\t* target-connection.c: New file.\n+\t* target-connection.h: New file.\n+\t* target.c (decref_target): Remove process_stratum targets from\n+\tthe connection list.\n+\t(target_stack::push): Add process_stratum targets to the\n+\tconnection list.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \tRevert:"
    },
    {
      "sha": "6df0f46b5ed91d4abcb0a59d73bcee7ec7cd3b02",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -1140,6 +1140,7 @@ COMMON_SFILES = \\\n \tsymmisc.c \\\n \tsymtab.c \\\n \ttarget.c \\\n+\ttarget-connection.c \\\n \ttarget-dcache.c \\\n \ttarget-descriptions.c \\\n \ttarget-memory.c \\"
    },
    {
      "sha": "3ce43860f766d200d062ebfad6ab12eeca2f86b7",
      "filename": "gdb/inferior.c",
      "status": "modified",
      "additions": 52,
      "deletions": 4,
      "changes": 56,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/inferior.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/inferior.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/inferior.c?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -428,6 +428,31 @@ print_selected_inferior (struct ui_out *uiout)\n \t\t  inf->num, inferior_pid_to_str (inf->pid).c_str (), filename);\n }\n \n+/* Helper for print_inferior.  Returns the 'connection-id' string for\n+   PROC_TARGET.  */\n+\n+static std::string\n+uiout_field_connection (process_stratum_target *proc_target)\n+{\n+  if (proc_target == NULL)\n+    {\n+      return {};\n+    }\n+  else if (proc_target->connection_string () != NULL)\n+    {\n+      return string_printf (\"%d (%s %s)\",\n+\t\t\t    proc_target->connection_number,\n+\t\t\t    proc_target->shortname (),\n+\t\t\t    proc_target->connection_string ());\n+    }\n+  else\n+    {\n+      return string_printf (\"%d (%s)\",\n+\t\t\t    proc_target->connection_number,\n+\t\t\t    proc_target->shortname ());\n+    }\n+}\n+\n /* Prints the list of inferiors and their details on UIOUT.  This is a\n    version of 'info_inferior_command' suitable for use from MI.\n \n@@ -439,13 +464,18 @@ static void\n print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n {\n   int inf_count = 0;\n+  size_t connection_id_len = 20;\n \n   /* Compute number of inferiors we will print.  */\n   for (inferior *inf : all_inferiors ())\n     {\n       if (!number_is_in_list (requested_inferiors, inf->num))\n \tcontinue;\n \n+      std::string conn = uiout_field_connection (inf->process_target ());\n+      if (connection_id_len < conn.size ())\n+\tconnection_id_len = conn.size ();\n+\n       ++inf_count;\n     }\n \n@@ -455,10 +485,12 @@ print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n       return;\n     }\n \n-  ui_out_emit_table table_emitter (uiout, 4, inf_count, \"inferiors\");\n+  ui_out_emit_table table_emitter (uiout, 5, inf_count, \"inferiors\");\n   uiout->table_header (1, ui_left, \"current\", \"\");\n   uiout->table_header (4, ui_left, \"number\", \"Num\");\n   uiout->table_header (17, ui_left, \"target-id\", \"Description\");\n+  uiout->table_header (connection_id_len, ui_left,\n+\t\t       \"connection-id\", \"Connection\");\n   uiout->table_header (17, ui_left, \"exec\", \"Executable\");\n \n   uiout->table_body ();\n@@ -478,6 +510,9 @@ print_inferior (struct ui_out *uiout, const char *requested_inferiors)\n \n       uiout->field_string (\"target-id\", inferior_pid_to_str (inf->pid));\n \n+      std::string conn = uiout_field_connection (inf->process_target ());\n+      uiout->field_string (\"connection-id\", conn.c_str ());\n+\n       if (inf->pspace->pspace_exec_filename != NULL)\n \tuiout->field_string (\"exec\", inf->pspace->pspace_exec_filename);\n       else\n@@ -712,9 +747,22 @@ switch_to_inferior_and_push_target (inferior *new_inf,\n \n   /* Reuse the target for new inferior.  */\n   if (!no_connection && proc_target != NULL)\n-    push_target (proc_target);\n-\n-  printf_filtered (_(\"Added inferior %d\\n\"), new_inf->num);\n+    {\n+      push_target (proc_target);\n+      if (proc_target->connection_string () != NULL)\n+\tprintf_filtered (_(\"Added inferior %d on connection %d (%s %s)\\n\"),\n+\t\t\t new_inf->num,\n+\t\t\t proc_target->connection_number,\n+\t\t\t proc_target->shortname (),\n+\t\t\t proc_target->connection_string ());\n+      else\n+\tprintf_filtered (_(\"Added inferior %d on connection %d (%s)\\n\"),\n+\t\t\t new_inf->num,\n+\t\t\t proc_target->connection_number,\n+\t\t\t proc_target->shortname ());\n+    }\n+  else\n+    printf_filtered (_(\"Added inferior %d\\n\"), new_inf->num);\n }\n \n /* add-inferior [-copies N] [-exec FILENAME] [-no-connection] */"
    },
    {
      "sha": "1be02100dcff31cd227053651e59cdde9a8f138f",
      "filename": "gdb/process-stratum-target.h",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/process-stratum-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/process-stratum-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/process-stratum-target.h?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -31,6 +31,16 @@ class process_stratum_target : public target_ops\n \n   strata stratum () const final override { return process_stratum; }\n \n+  /* Return a string representation of this target's open connection.\n+     This string is used to distinguish different instances of a given\n+     target type.  For example, when remote debugging, the target is\n+     called \"remote\", but since we may have more than one remote\n+     target open, connection_string() returns the connection serial\n+     connection name, e.g., \"localhost:10001\", \"192.168.0.1:20000\",\n+     etc.  This string is shown in several places, e.g., in \"info\n+     connections\" and \"info inferiors\".  */\n+  virtual const char *connection_string () { return nullptr; }\n+\n   /* We must default these because they must be implemented by any\n      target that can run.  */\n   bool can_async_p () override { return false; }\n@@ -58,6 +68,9 @@ class process_stratum_target : public target_ops\n      stop events for all known threads, because any of those threads\n      may have spawned new threads we haven't heard of yet.  */\n   bool threads_executing = false;\n+\n+  /* The connection number.  Visible in \"info connections\".  */\n+  int connection_number = 0;\n };\n \n /* Downcast TARGET to process_stratum_target.  */"
    },
    {
      "sha": "665e2773e15be3ae69da88bc4d38aae6030731d7",
      "filename": "gdb/remote.c",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/remote.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/remote.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/remote.c?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -406,6 +406,8 @@ class remote_target : public process_stratum_target\n   const target_info &info () const override\n   { return remote_target_info; }\n \n+  const char *connection_string () override;\n+\n   thread_control_capabilities get_thread_control_capabilities () override\n   { return tc_schedlock; }\n \n@@ -4853,6 +4855,17 @@ remote_target::start_remote (int from_tty, int extended_p)\n     insert_breakpoints ();\n }\n \n+const char *\n+remote_target::connection_string ()\n+{\n+  remote_state *rs = get_remote_state ();\n+\n+  if (rs->remote_desc->name != NULL)\n+    return rs->remote_desc->name;\n+  else\n+    return NULL;\n+}\n+\n /* Open a connection to a remote debugger.\n    NAME is the filename used for communication.  */\n "
    },
    {
      "sha": "35c786bc1c69d4381c0553bcd9775e478c0fa1fc",
      "filename": "gdb/target-connection.c",
      "status": "added",
      "additions": 162,
      "deletions": 0,
      "changes": 162,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target-connection.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target-connection.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-connection.c?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -0,0 +1,162 @@\n+/* List of target connections for GDB.\n+\n+   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"defs.h\"\n+#include \"target-connection.h\"\n+\n+#include <map>\n+\n+#include \"inferior.h\"\n+#include \"target.h\"\n+\n+/* A map between connection number and representative process_stratum\n+   target.  */\n+static std::map<int, process_stratum_target *> process_targets;\n+\n+/* The highest connection number ever given to a target.  */\n+static int highest_target_connection_num;\n+\n+/* See target-connection.h.  */\n+\n+void\n+connection_list_add (process_stratum_target *t)\n+{\n+  if (t->connection_number == 0)\n+    {\n+      t->connection_number = ++highest_target_connection_num;\n+      process_targets[t->connection_number] = t;\n+    }\n+}\n+\n+/* See target-connection.h.  */\n+\n+void\n+connection_list_remove (process_stratum_target *t)\n+{\n+  process_targets.erase (t->connection_number);\n+  t->connection_number = 0;\n+}\n+\n+/* Make a target connection string for T.  This is usually T's\n+   shortname, but it includes the result of\n+   process_stratum_target::connection_string() too if T supports\n+   it.  */\n+\n+static std::string\n+make_target_connection_string (process_stratum_target *t)\n+{\n+  if (t->connection_string () != NULL)\n+    return string_printf (\"%s %s\", t->shortname (),\n+\t\t\t  t->connection_string ());\n+  else\n+    return t->shortname ();\n+}\n+\n+/* Prints the list of target connections and their details on UIOUT.\n+\n+   If REQUESTED_CONNECTIONS is not NULL, it's a list of GDB ids of the\n+   target connections that should be printed.  Otherwise, all target\n+   connections are printed.  */\n+\n+static void\n+print_connection (struct ui_out *uiout, const char *requested_connections)\n+{\n+  int count = 0;\n+  size_t what_len = 0;\n+\n+  /* Compute number of lines we will print.  */\n+  for (const auto &it : process_targets)\n+    {\n+      if (!number_is_in_list (requested_connections, it.first))\n+\tcontinue;\n+\n+      ++count;\n+\n+      process_stratum_target *t = it.second;\n+\n+      size_t l = strlen (t->shortname ());\n+      if (t->connection_string () != NULL)\n+\tl += 1 + strlen (t->connection_string ());\n+\n+      if (l > what_len)\n+\twhat_len = l;\n+    }\n+\n+  if (count == 0)\n+    {\n+      uiout->message (_(\"No connections.\\n\"));\n+      return;\n+    }\n+\n+  ui_out_emit_table table_emitter (uiout, 4, process_targets.size (),\n+\t\t\t\t   \"connections\");\n+\n+  uiout->table_header (1, ui_left, \"current\", \"\");\n+  uiout->table_header (4, ui_left, \"number\", \"Num\");\n+  /* The text in the \"what\" column may include spaces.  Add one extra\n+     space to visually separate the What and Description columns a\n+     little better.  Compare:\n+      \"* 1    remote :9999 Remote serial target in gdb-specific protocol\"\n+      \"* 1    remote :9999  Remote serial target in gdb-specific protocol\"\n+  */\n+  uiout->table_header (what_len + 1, ui_left, \"what\", \"What\");\n+  uiout->table_header (17, ui_left, \"description\", \"Description\");\n+\n+  uiout->table_body ();\n+\n+  for (const auto &it : process_targets)\n+    {\n+      process_stratum_target *t = it.second;\n+\n+      if (!number_is_in_list (requested_connections, t->connection_number))\n+\tcontinue;\n+\n+      ui_out_emit_tuple tuple_emitter (uiout, NULL);\n+\n+      if (current_inferior ()->process_target () == t)\n+\tuiout->field_string (\"current\", \"*\");\n+      else\n+\tuiout->field_skip (\"current\");\n+\n+      uiout->field_signed (\"number\", t->connection_number);\n+\n+      uiout->field_string (\"what\", make_target_connection_string (t).c_str ());\n+\n+      uiout->field_string (\"description\", t->longname ());\n+\n+      uiout->text (\"\\n\");\n+    }\n+}\n+\n+/* The \"info connections\" command.  */\n+\n+static void\n+info_connections_command (const char *args, int from_tty)\n+{\n+  print_connection (current_uiout, args);\n+}\n+\n+void\n+_initialize_target_connection ()\n+{\n+  add_info (\"connections\", info_connections_command,\n+\t    _(\"\\\n+Target connections in use.\\n\\\n+Shows the list of target connections currently in use.\"));\n+}"
    },
    {
      "sha": "dad33577052e8bf3b0d7e69c80bd978d991a51cf",
      "filename": "gdb/target-connection.h",
      "status": "added",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target-connection.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target-connection.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target-connection.h?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -0,0 +1,32 @@\n+/* List of target connections for GDB.\n+\n+   Copyright (C) 2017-2020 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#ifndef TARGET_CONNECTION_H\n+#define TARGET_CONNECTION_H\n+\n+struct process_stratum_target;\n+\n+/* Add a process target to the connection list, if not already\n+   added.  */\n+void connection_list_add (process_stratum_target *t);\n+\n+/* Remove a process target from the connection list.  */\n+void connection_list_remove (process_stratum_target *t);\n+\n+#endif /* TARGET_CONNECTION_H */"
    },
    {
      "sha": "f6058451d654351781106283138dc42e6860a54e",
      "filename": "gdb/target.c",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/target.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/target.c?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -49,6 +49,7 @@\n #include \"gdbsupport/byte-vector.h\"\n #include \"terminal.h\"\n #include <unordered_map>\n+#include \"target-connection.h\"\n \n static void generic_tls_error (void) ATTRIBUTE_NORETURN;\n \n@@ -561,7 +562,11 @@ decref_target (target_ops *t)\n {\n   t->decref ();\n   if (t->refcount () == 0)\n-    target_close (t);\n+    {\n+      if (t->stratum () == process_stratum)\n+\tconnection_list_remove (as_process_stratum_target (t));\n+      target_close (t);\n+    }\n }\n \n /* See target.h.  */\n@@ -573,6 +578,9 @@ target_stack::push (target_ops *t)\n \n   strata stratum = t->stratum ();\n \n+  if (stratum == process_stratum)\n+    connection_list_add (as_process_stratum_target (t));\n+\n   /* If there's already a target at this stratum, remove it.  */\n \n   if (m_stack[stratum] != NULL)"
    },
    {
      "sha": "e7bd05a1592193a4fe1cfdb44056d79cbf2bb224",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -1,3 +1,25 @@\n+2020-01-10  Pedro Alves  <palves@redhat.com>\n+\n+\t* gdb.base/kill-detach-inferiors-cmd.exp: Adjust expected output\n+\tof \"add-inferior\".\n+\t* gdb.base/quit-live.exp: Likewise.\n+\t* gdb.base/remote-exec-file.exp: Likewise.\n+\t* gdb.guile/scm-progspace.exp: Likewise.\n+\t* gdb.linespec/linespec.exp: Likewise.\n+\t* gdb.mi/new-ui-mi-sync.exp: Likewise.\n+\t* gdb.mi/user-selected-context-sync.exp: Likewise.\n+\t* gdb.multi/multi-target.exp (setup): Add \"info connection\" and\n+\t\"info inferiors\" tests.\n+\t* gdb.multi/remove-inferiors.exp: Adjust expected output of\n+\t\"add-inferior\".\n+\t* gdb.multi/watchpoint-multi.exp: Likewise.\n+\t* gdb.python/py-inferior.exp: Likewise.\n+\t* gdb.server/extended-remote-restart.exp: Likewise.\n+\t* gdb.threads/fork-plus-threads.exp: Adjust expected output of\n+\t\"info inferiors\".\n+\t* gdb.threads/forking-threads-plus-breakpoint.exp: Likewise.\n+\t* gdb.trace/report.exp: Likewise.\n+\n 2020-01-10  Pedro Alves  <palves@redhat.com>\n \n \t* gdb.multi/multi-target.c: New file."
    },
    {
      "sha": "82e0c712c8f0e90b6bc99dd1aa7594cceee51701",
      "filename": "gdb/testsuite/gdb.base/kill-detach-inferiors-cmd.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/kill-detach-inferiors-cmd.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/kill-detach-inferiors-cmd.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/kill-detach-inferiors-cmd.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -32,15 +32,15 @@ if [prepare_for_testing \"failed to prepare\" $executable] {\n runto_main\n \n # Add another forked inferior process.\n-gdb_test \"add-inferior\" \"Added inferior 2\" \"add inferior 2\"\n+gdb_test \"add-inferior\" \"Added inferior 2 on connection .*\" \"add inferior 2\"\n gdb_test \"inferior 2\" \"Switching to inferior 2.*\"\n gdb_test \"file $binfile\" \"Reading symbols from .*\" \"load binary\"\n gdb_test \"start\" \"Temporary breakpoint.*Starting program.*\"\n \n # Add an attached inferior process.\n set test_spawn_id [spawn_wait_for_attach $binfile]\n set test_pid [spawn_id_get_pid $test_spawn_id]\n-gdb_test \"add-inferior\" \"Added inferior 3\" \"add inferior 3\"\n+gdb_test \"add-inferior\" \"Added inferior 3 on connection .*\" \"add inferior 3\"\n gdb_test \"inferior 3\" \"Switching to inferior 3.*\"\n gdb_test \"attach $test_pid\" \"Attaching to process.*\" \"attach to pid\"\n "
    },
    {
      "sha": "c8e2f019b2d5ebba4b8b092ddf1b54a7940ec708",
      "filename": "gdb/testsuite/gdb.base/quit-live.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/quit-live.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/quit-live.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/quit-live.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -120,7 +120,7 @@ proc quit_with_live_inferior {appear_how extra_inferior quit_how} {\n     }\n \n     if {$extra_inferior} {\n-\tgdb_test \"add-inferior\" \"Added inferior 2*\" \\\n+\tgdb_test \"add-inferior\" \"Added inferior 2 on connection .*\" \\\n \t    \"add empty inferior 2\"\n \tgdb_test \"inferior 2\" \"Switching to inferior 2.*\" \\\n \t    \"switch to inferior 2\""
    },
    {
      "sha": "a479a79d5d199f3c35d9a7405559f8ef9f53e0e8",
      "filename": "gdb/testsuite/gdb.base/remote-exec-file.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/remote-exec-file.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.base/remote-exec-file.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/remote-exec-file.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -27,7 +27,7 @@ with_test_prefix \"set inf 1\" {\n \n # Set remote exec-file in inferior 2.\n with_test_prefix \"set inf 2\" {\n-    gdb_test \"add-inferior\" \"Added inferior 2\" \"add inferior 2\"\n+    gdb_test \"add-inferior\" \"Added inferior 2.*\" \"add inferior 2\"\n     gdb_test \"inferior 2\" \"Switching to inferior 2.*\"\n     gdb_test_no_output \"set remote exec-file prog2\"\n }"
    },
    {
      "sha": "91a78e2ab8fd6bbb4fa3b82fbbf7f19e5f9311b2",
      "filename": "gdb/testsuite/gdb.guile/scm-progspace.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.guile/scm-progspace.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.guile/scm-progspace.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.guile/scm-progspace.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -73,7 +73,7 @@ with_test_prefix \"program unloaded\" {\n # deleted.  We need to, for example, delete an inferior to get the progspace\n # to go away.\n \n-gdb_test \"add-inferior\" \"Added inferior 2\" \"create new inferior\"\n+gdb_test \"add-inferior\" \"Added inferior 2.*\" \"create new inferior\"\n gdb_test \"inferior 2\" \".*\" \"switch to new inferior\"\n gdb_test_no_output \"remove-inferiors 1\" \"remove first inferior\"\n "
    },
    {
      "sha": "be1b9189e2039cabda0eae30882fd962d18984bb",
      "filename": "gdb/testsuite/gdb.linespec/linespec.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.linespec/linespec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.linespec/linespec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.linespec/linespec.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -201,7 +201,7 @@ gdb_test \"break lspec.h:$line\" \\\n # Multi-inferior tests.\n #\n \n-gdb_test \"add-inferior\" \"Added inferior 2\" \\\n+gdb_test \"add-inferior\" \"Added inferior 2.*\" \\\n     \"add inferior for linespec tests\"\n \n gdb_test \"inferior 2\" \"Switching to inferior 2 .*\" \\"
    },
    {
      "sha": "a55fae67dfe7d0e8899b6e860edbba7f5c0dc2f6",
      "filename": "gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/new-ui-mi-sync.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -83,7 +83,7 @@ proc do_test {sync_command} {\n     # in the separate MI UI.  Note the \"run\" variant usually triggers\n     # =thread-group-started/=thread-created/=library-loaded as well.\n     with_spawn_id $gdb_main_spawn_id {\n-\tgdb_test \"add-inferior\" \"Added inferior 2\"\n+\tgdb_test \"add-inferior\" \"Added inferior 2 on connection .*\"\n     }\n \n     # Interrupt the program."
    },
    {
      "sha": "390df005542cc937fe287530bc5460161344a73e",
      "filename": "gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.mi/user-selected-context-sync.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/user-selected-context-sync.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -415,7 +415,7 @@ proc_with_prefix test_setup { mode } {\n \t# Add the second inferior now.  While this is not mandatory, it allows\n \t# us to assume that per-inferior thread numbering will be used,\n \t# simplifying test_continue_to_start a bit (Thread 1.2 and not Thread 2).\n-\tgdb_test \"add-inferior\" \"Added inferior 2\" \"add inferior 2\"\n+\tgdb_test \"add-inferior\" \"Added inferior 2 on connection .*\" \"add inferior 2\"\n \n \t# Prepare the first inferior for the test.\n \ttest_continue_to_start $mode 1"
    },
    {
      "sha": "903831c4206675e70c2eed3b20e45f94db92d002",
      "filename": "gdb/testsuite/gdb.multi/multi-target.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 1,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/multi-target.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/multi-target.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/multi-target.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -137,8 +137,34 @@ proc setup {non-stop} {\n \treturn 0\n     }\n \n+    set ws \"\\[ \\t\\]+\"\n+    global decimal\n+\n+    # Test \"info connections\" and \"info inferior\"'s \"Connection\"\n+    # column, while at it.\n+\n+    gdb_test \"info connections\" \\\n+\t[multi_line \\\n+\t     \"Num${ws}What${ws}Description${ws}\" \\\n+\t     \"  1${ws}native${ws}Native process${ws}\" \\\n+\t     \"  2${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n+\t     \"  3${ws}core${ws}Local core dump file${ws}\" \\\n+\t     \"  4${ws}extended-remote localhost:$decimal${ws}Extended remote serial target in gdb-specific protocol${ws}\" \\\n+\t   \"\\\\* 5${ws}core${ws}Local core dump file${ws}\" \\\n+\t    ]\n+\n+    gdb_test \"info inferiors\" \\\n+\t[multi_line \\\n+\t     \"Num${ws}Description${ws}Connection${ws}Executable${ws}\" \\\n+\t     \"  1${ws}process ${decimal}${ws}1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n+\t     \"  2${ws}process ${decimal}${ws}2 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n+\t     \"  3${ws}process ${decimal}${ws}3 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n+\t     \"  4${ws}process ${decimal}${ws}1 \\\\(native\\\\)${ws}${binfile}${ws}\" \\\n+\t     \"  5${ws}process ${decimal}${ws}4 \\\\(extended-remote localhost:$decimal\\\\)${ws}${binfile}${ws}\" \\\n+\t   \"\\\\* 6${ws}process ${decimal}${ws}5 \\\\(core\\\\)${ws}${binfile}${ws}\" \\\n+\t    ]\n+\n     # For debugging.\n-    gdb_test \"info inferiors\" \".*\"\n     gdb_test \"info threads\" \".*\"\n \n     # Make \"continue\" resume all inferiors."
    },
    {
      "sha": "54c2c000290c936c7157bc87466e7fa3f8f7c425",
      "filename": "gdb/testsuite/gdb.multi/remove-inferiors.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/remove-inferiors.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/remove-inferiors.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/remove-inferiors.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -26,7 +26,7 @@ proc switch_to_inferior { num message } {\n }\n \n proc add_inferior { expected_num message } {\n-    gdb_test \"add-inferior\" \"Added inferior ${expected_num}\" \"${message}\"\n+    gdb_test \"add-inferior\" \"Added inferior ${expected_num}( on connection .*)?\" \"${message}\"\n }\n \n proc test_remove_inferiors { } {"
    },
    {
      "sha": "2d48b70f95e47a40e0c22e4e91c953cfcd4874d1",
      "filename": "gdb/testsuite/gdb.multi/watchpoint-multi.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/watchpoint-multi.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.multi/watchpoint-multi.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.multi/watchpoint-multi.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -53,7 +53,7 @@ if [support_displaced_stepping] {\n gdb_breakpoint main {temporary}\n gdb_test \"run\" \"Temporary breakpoint.* main .*\" \"start to main inferior 1\"\n \n-gdb_test \"add-inferior\" \"Added inferior 2\" \"add inferior 2\"\n+gdb_test \"add-inferior\" \"Added inferior 2 on connection .*\" \"add inferior 2\"\n gdb_test \"inferior 2\" \"witching to inferior 2 .*\" \"switch to inferior 2, first time\"\n gdb_load $binfile\n "
    },
    {
      "sha": "997da196bc62b5385b5ac464e4b3e6e8370cbb2a",
      "filename": "gdb/testsuite/gdb.python/py-inferior.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.python/py-inferior.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.python/py-inferior.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.python/py-inferior.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -279,7 +279,7 @@ with_test_prefix \"selected_inferior\" {\n     gdb_test \"inferior 1\" \".*\" \"switch to first inferior\"\n     gdb_test \"py print (gdb.selected_inferior().num)\" \"1\" \"first inferior selected\"\n \n-    gdb_test \"add-inferior\" \"Added inferior 3\" \"create new inferior\"\n+    gdb_test \"add-inferior\" \"Added inferior 3 on connection .*\" \"create new inferior\"\n     gdb_test \"inferior 3\" \".*\" \"switch to third inferior\"\n     gdb_test \"py print (gdb.selected_inferior().num)\" \"3\" \"third inferior selected\"\n     gdb_test \"inferior 1\" \".*\" \"switch back to first inferior\"\n@@ -288,7 +288,7 @@ with_test_prefix \"selected_inferior\" {\n \n # Test repr()/str()\n with_test_prefix \"__repr__\" {\n-    gdb_test \"add-inferior\" \"Added inferior 4\" \"add inferior 4\"\n+    gdb_test \"add-inferior\" \"Added inferior 4 on connection .*\" \"add inferior 4\"\n     gdb_py_test_silent_cmd \"python infs = gdb.inferiors()\" \"get inferior list\" 1\n     gdb_test \"python print (infs\\[0\\])\" \"<gdb.Inferior num=1, pid=$decimal>\"\n     gdb_test \"python print (infs)\" \\"
    },
    {
      "sha": "11f8a286ac96c7c18eece42c010aa72e7d45b906",
      "filename": "gdb/testsuite/gdb.server/extended-remote-restart.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.server/extended-remote-restart.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.server/extended-remote-restart.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.server/extended-remote-restart.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -88,12 +88,16 @@ proc test_reload { do_kill_p follow_child_p } {\n     gdb_breakpoint \"breakpt\"\n     gdb_continue_to_breakpoint \"breakpt\"\n \n-    # Check we have the expected inferiors.\n+    set ws \"\\[ \\t\\]+\"\n+    set any_re \"\\[^\\r\\n\\]+\"\n+    set connection_re $any_re\n+    set executable_re $any_re\n+\n     gdb_test \"info inferiors\" \\\n \t[multi_line \\\n-\t     \"  Num  Description       Executable.*\" \\\n-\t     \"${parent_prefix} 1 +${live_inf_ptn} \\[^\\r\\n\\]+\" \\\n-\t     \"${child_prefix} 2 +${live_inf_ptn} \\[^\\r\\n\\]+\" ] \\\n+\t     \"  Num${ws}Description${ws}Connection${ws}Executable${ws}\" \\\n+\t     \"${parent_prefix} 1${ws}${live_inf_ptn}${ws}${connection_re}${executable_re}\" \\\n+\t     \"${child_prefix} 2${ws}${live_inf_ptn}${ws}${connection_re}${executable_re}\" ] \\\n \t\"Check inferiors at breakpoint\"\n \n     if { $do_kill_p } {\n@@ -107,9 +111,9 @@ proc test_reload { do_kill_p follow_child_p } {\n \t# Check the first inferior really did die.\n \tgdb_test \"info inferiors\" \\\n \t    [multi_line \\\n-\t\t \"  Num  Description       Executable.*\" \\\n-\t\t \"${parent_prefix} 1 +${parent_inf_after_kill_ptn} \\[^\\r\\n\\]+\" \\\n-\t\t \"${child_prefix} 2 +${child_inf_after_kill_ptn} \\[^\\r\\n\\]+\" ] \\\n+\t\t \"  Num${ws}Description${ws}Connection${ws}Executable${ws}\" \\\n+\t\t \"${parent_prefix} 1${ws}${parent_inf_after_kill_ptn}${ws}${connection_re}${executable_re}\" \\\n+\t\t \"${child_prefix} 2${ws}${child_inf_after_kill_ptn}${ws}${connection_re}${executable_re}\" ] \\\n \t    \"Check inferior was killed\"\n     }\n "
    },
    {
      "sha": "8d36b96810ba6bb69f564437ea7f26b955e87b09",
      "filename": "gdb/testsuite/gdb.threads/fork-plus-threads.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.threads/fork-plus-threads.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.threads/fork-plus-threads.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/fork-plus-threads.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -109,7 +109,7 @@ proc do_test { detach_on_fork } {\n \t\"no threads left\"\n \n     gdb_test \"info inferiors\" \\\n-\t\"Num\\[ \\t\\]+Description\\[ \\t\\]+Executable\\[ \\t\\]+\\r\\n\\\\* 1 \\[^\\r\\n\\]+\" \\\n+\t\"Num\\[ \\t\\]+Description\\[ \\t\\]+Connection\\[ \\t\\]+Executable\\[ \\t\\]+\\r\\n\\\\* 1 \\[^\\r\\n\\]+\" \\\n \t\"only inferior 1 left\"\n }\n "
    },
    {
      "sha": "c4c9596be3129ebd8a3482029f29328bf9c3acf3",
      "filename": "gdb/testsuite/gdb.threads/forking-threads-plus-breakpoint.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.threads/forking-threads-plus-breakpoint.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.threads/forking-threads-plus-breakpoint.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.threads/forking-threads-plus-breakpoint.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -142,7 +142,7 @@ proc do_test { cond_bp_target detach_on_fork displaced } {\n \t\"no threads left\"\n \n     gdb_test \"info inferiors\" \\\n-\t\"Num\\[ \\t\\]+Description\\[ \\t\\]+Executable\\[ \\t\\]+\\r\\n\\\\* 1 \\[^\\r\\n\\]+\" \\\n+\t\"Num\\[ \\t\\]+Description\\[ \\t\\]+Connection\\[ \\t\\]+Executable\\[ \\t\\]+\\r\\n\\\\* 1 \\[^\\r\\n\\]+\" \\\n \t\"only inferior 1 left\"\n }\n "
    },
    {
      "sha": "93029757b777a7a0aa94f63feca6fbf7b69cc002",
      "filename": "gdb/testsuite/gdb.trace/report.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.trace/report.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/121b3efd49f98e4049281b3ba7a258e650e40b38/gdb/testsuite/gdb.trace/report.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.trace/report.exp?ref=121b3efd49f98e4049281b3ba7a258e650e40b38",
      "patch": "@@ -391,7 +391,7 @@ proc use_collected_data { data_source } {\n \t# There is always a thread of an inferior, either a live one or\n \t# a faked one.\n \tgdb_test \"info threads\" \"\\\\* ${decimal}    (process|Thread) \\[0-9\\.\\]+\\[ \\t\\].*\"\n-\tgdb_test \"info inferiors\" \"\\\\* 1    process ${decimal} \\[ \\t\\]+${binfile}.*\"\n+\tgdb_test \"info inferiors\" \"\\\\* 1    process ${decimal} \\[ \\t\\]+\\[^\\r\\n\\]*\\[ \\t\\]+${binfile}.*\"\n     }\n }\n "
    }
  ]
}