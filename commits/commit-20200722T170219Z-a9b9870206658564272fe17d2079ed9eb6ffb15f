{
  "sha": "a9b9870206658564272fe17d2079ed9eb6ffb15f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTliOTg3MDIwNjY1ODU2NDI3MmZlMTdkMjA3OWVkOWViNmZmYjE1Zg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-05T17:38:03Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T17:02:19Z"
    },
    "message": "libctf, dedup: add new configure option --enable-libctf-hash-debugging\n\nAdd a new debugging configure option, --enable-libctf-hash-debugging,\noff by default, which lets you configure in expensive internal\nconsistency checks and enable the printing of debugging output when\nLIBCTF_DEBUG=t before type deduplication has happened.\n\nIn this commit we just add the option and cause it to turn ctf_assert\ninto a real, hard assert for easier debugging.\n\nlibctf/\n\t* configure.ac: Add --enable-libctf-hash-debugging.\n\t* aclocal.m4: Pull in enable.m4, for GCC_ENABLE.\n\t* Makefile.in: Regenerated.\n\t* configure: Likewise.\n\t* config.h.in: Likewise.\n\t* ctf-impl.h [ENABLE_LIBCTF_HASH_DEBUGGING]\n\t(ctf_assert): Define to assert.",
    "tree": {
      "sha": "8c0d078b5ad067def1b1283624ae5200e41cf507",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8c0d078b5ad067def1b1283624ae5200e41cf507"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a9b9870206658564272fe17d2079ed9eb6ffb15f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9b9870206658564272fe17d2079ed9eb6ffb15f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a9b9870206658564272fe17d2079ed9eb6ffb15f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a9b9870206658564272fe17d2079ed9eb6ffb15f/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1f2e8b5b87df91a0b8ff76fab75538dfcc2478f5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1f2e8b5b87df91a0b8ff76fab75538dfcc2478f5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/1f2e8b5b87df91a0b8ff76fab75538dfcc2478f5"
    }
  ],
  "stats": {
    "total": 67,
    "additions": 65,
    "deletions": 2
  },
  "files": [
    {
      "sha": "be00e92016007c6d3d55887e5826c13dcd4cb652",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -1,3 +1,13 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* configure.ac: Add --enable-libctf-hash-debugging.\n+\t* aclocal.m4: Pull in enable.m4, for GCC_ENABLE.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\t* config.h.in: Likewise.\n+\t* ctf-impl.h [ENABLE_LIBCTF_HASH_DEBUGGING]\n+\t(ctf_assert): Define to assert.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-sha1.h: New, inline wrappers around sha1_init_ctx and"
    },
    {
      "sha": "bc385278e0903c13eef83637e0e9142baf3cecbf",
      "filename": "libctf/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/Makefile.in?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -113,6 +113,7 @@ ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../bfd/acinclude.m4 \\\n \t$(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../config/depstand.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/gettext-sister.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\"
    },
    {
      "sha": "df51584d8371cdb7b318ee5234c200e042ddc518",
      "filename": "libctf/aclocal.m4",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/aclocal.m4",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/aclocal.m4",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/aclocal.m4?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -1230,6 +1230,7 @@ AC_SUBST([am__untar])\n m4_include([../bfd/acinclude.m4])\n m4_include([../config/acx.m4])\n m4_include([../config/depstand.m4])\n+m4_include([../config/enable.m4])\n m4_include([../config/gettext-sister.m4])\n m4_include([../config/lead-dot.m4])\n m4_include([../config/override.m4])"
    },
    {
      "sha": "2ddd512608843a339b5c2bffeabfa7ecdd56cf12",
      "filename": "libctf/config.h.in",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/config.h.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/config.h.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/config.h.in?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -3,6 +3,9 @@\n /* Define if building universal (internal helper macro) */\n #undef AC_APPLE_UNIVERSAL_BUILD\n \n+/* Enable expensive debugging of CTF deduplication type hashing */\n+#undef ENABLE_LIBCTF_HASH_DEBUGGING\n+\n /* Define to 1 if translation of program messages to the user's native\n    language is requested. */\n #undef ENABLE_NLS"
    },
    {
      "sha": "9f16ae92b8d22a559e78da44899d0ae72167a6f4",
      "filename": "libctf/configure",
      "status": "modified",
      "additions": 39,
      "deletions": 2,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -642,6 +642,8 @@ SHARED_LIBADD\n SHARED_LDFLAGS\n NEED_CTF_QSORT_R_FALSE\n NEED_CTF_QSORT_R_TRUE\n+ENABLE_LIBCTF_HASH_DEBUGGING_FALSE\n+ENABLE_LIBCTF_HASH_DEBUGGING_TRUE\n zlibinc\n zlibdir\n ac_libctf_warn_cflags\n@@ -796,6 +798,7 @@ enable_werror_always\n enable_maintainer_mode\n enable_install_libbfd\n with_system_zlib\n+enable_libctf_hash_debugging\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1441,6 +1444,9 @@ Optional Features:\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n   --enable-install-libbfd controls installation of libbfd and related headers\n+  --enable-libctf-hash-debugging\n+                          Enable expensive debugging of CTF deduplication type\n+                          hashing [default=no]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11513,7 +11519,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11516 \"configure\"\n+#line 11522 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11619,7 +11625,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11622 \"configure\"\n+#line 11628 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12799,6 +12805,33 @@ fi\n \n \n \n+ # Check whether --enable-libctf-hash-debugging was given.\n+if test \"${enable_libctf_hash_debugging+set}\" = set; then :\n+  enableval=$enable_libctf_hash_debugging;\n+      case \"$enableval\" in\n+       yes|no) ;;\n+       *) as_fn_error $? \"Argument to enable/disable libctf-hash-debugging must be yes or no\" \"$LINENO\" 5 ;;\n+      esac\n+\n+else\n+  enable_libctf_hash_debugging=no\n+fi\n+\n+\n+if test \"${enable_libctf_hash_debugging}\" = yes; then\n+\n+$as_echo \"#define ENABLE_LIBCTF_HASH_DEBUGGING 1\" >>confdefs.h\n+\n+fi\n+ if test \"${enable_libctf_hash_debugging}\" = yes; then\n+  ENABLE_LIBCTF_HASH_DEBUGGING_TRUE=\n+  ENABLE_LIBCTF_HASH_DEBUGGING_FALSE='#'\n+else\n+  ENABLE_LIBCTF_HASH_DEBUGGING_TRUE='#'\n+  ENABLE_LIBCTF_HASH_DEBUGGING_FALSE=\n+fi\n+\n+\n # Similar to GDB_AC_CHECK_BFD.\n OLD_CFLAGS=$CFLAGS\n OLD_LDFLAGS=$LDFLAGS\n@@ -13495,6 +13528,10 @@ if test -z \"${INSTALL_LIBBFD_TRUE}\" && test -z \"${INSTALL_LIBBFD_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"INSTALL_LIBBFD\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_LIBCTF_HASH_DEBUGGING_TRUE}\" && test -z \"${ENABLE_LIBCTF_HASH_DEBUGGING_FALSE}\"; then\n+  as_fn_error $? \"conditional \\\"ENABLE_LIBCTF_HASH_DEBUGGING\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n if test -z \"${NEED_CTF_QSORT_R_TRUE}\" && test -z \"${NEED_CTF_QSORT_R_FALSE}\"; then\n   as_fn_error $? \"conditional \\\"NEED_CTF_QSORT_R\\\" was never defined."
    },
    {
      "sha": "3799a0cb906624296ac906c7d8cbb188fde3a18c",
      "filename": "libctf/configure.ac",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/configure.ac?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -67,6 +67,12 @@ AC_FUNC_MMAP\n AC_SEARCH_LIBS(dlopen, dl)\n AM_ZLIB\n \n+GCC_ENABLE([libctf-hash-debugging], [no], [], [Enable expensive debugging of CTF deduplication type hashing])\n+if test \"${enable_libctf_hash_debugging}\" = yes; then\n+    AC_DEFINE(ENABLE_LIBCTF_HASH_DEBUGGING, 1, [Enable expensive debugging of CTF deduplication type hashing])\n+fi\n+AM_CONDITIONAL(ENABLE_LIBCTF_HASH_DEBUGGING, test \"${enable_libctf_hash_debugging}\" = yes)\n+\n # Similar to GDB_AC_CHECK_BFD.\n OLD_CFLAGS=$CFLAGS\n OLD_LDFLAGS=$LDFLAGS"
    },
    {
      "sha": "c2fcc92d67229da5c4cd9eb80d0255f8262e975c",
      "filename": "libctf/ctf-impl.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/ctf-impl.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a9b9870206658564272fe17d2079ed9eb6ffb15f/libctf/ctf-impl.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-impl.h?ref=a9b9870206658564272fe17d2079ed9eb6ffb15f",
      "patch": "@@ -71,9 +71,14 @@ extern \"C\"\n \n #endif\n \n+#if defined (ENABLE_LIBCTF_HASH_DEBUGGING) && !defined (NDEBUG)\n+#include <assert.h>\n+#define ctf_assert(fp, expr) (assert (expr), 1)\n+#else\n #define ctf_assert(fp, expr)\t\t\t\t\t\t\\\n   _libctf_unlikely_ (ctf_assert_internal (fp, __FILE__, __LINE__,\t\\\n \t\t\t\t\t  #expr, !!(expr)))\n+#endif\n \n /* libctf in-memory state.  */\n "
    }
  ]
}