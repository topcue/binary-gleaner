{
  "sha": "62194b631d00112bac1f8856d3259d774df4c15e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjIxOTRiNjMxZDAwMTEyYmFjMWY4ODU2ZDMyNTlkNzc0ZGY0YzE1ZQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-02T07:57:31Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-07-02T11:18:55Z"
    },
    "message": "Re: Fix minor NDS32 renaming snafu\n\nSome extern declarations differ in constnes to their definitions too.\nLet's make sure this sort of thing doesn't happen again, but putting\nthe externs in a header where they belong.\n\ngas/\n\t* config/tc-nds32.c (nds32_keyword_gpr): Don't declare.\n\t(md_begin): Constify k.\nopcodes/\n\t* nds32-dis.c (nds32_find_reg_keyword): Constify arg and return.\n\t(nds32_parse_audio_ext, nds32_parse_opcode): Constify psys_reg.\n\t(nds32_field_table, nds32_opcode_table, nds32_keyword_table),\n\t(nds32_opcodes, nds32_operand_fields, nds32_keywords),\n\t(nds32_keyword_gpr): Move declarations to..\n\t* nds32-asm.h: ..here, constifying to match definitions.",
    "tree": {
      "sha": "cd7385f4fdfbd31d5773180313cea95c3b340bdf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cd7385f4fdfbd31d5773180313cea95c3b340bdf"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/62194b631d00112bac1f8856d3259d774df4c15e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62194b631d00112bac1f8856d3259d774df4c15e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/62194b631d00112bac1f8856d3259d774df4c15e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/62194b631d00112bac1f8856d3259d774df4c15e/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "af82b082c27eeefa261753e746fd002cc528cd1f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/af82b082c27eeefa261753e746fd002cc528cd1f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/af82b082c27eeefa261753e746fd002cc528cd1f"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 27,
    "deletions": 14
  },
  "files": [
    {
      "sha": "2e7a1cad17bb377e7564584965c0eacc97906497",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62194b631d00112bac1f8856d3259d774df4c15e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62194b631d00112bac1f8856d3259d774df4c15e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=62194b631d00112bac1f8856d3259d774df4c15e",
      "patch": "@@ -1,3 +1,8 @@\n+2021-07-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-nds32.c (nds32_keyword_gpr): Don't declare.\n+\t(md_begin): Constify k.\n+\n 2021-07-02  Nick Clifton  <nickc@redhat.com>\n \n \t* config/tc-nds32.c: Change all references of keyword_gpr to"
    },
    {
      "sha": "4ff667caf61e219a08c63265b5985b3604683bcc",
      "filename": "gas/config/tc-nds32.c",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62194b631d00112bac1f8856d3259d774df4c15e/gas/config/tc-nds32.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62194b631d00112bac1f8856d3259d774df4c15e/gas/config/tc-nds32.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-nds32.c?ref=62194b631d00112bac1f8856d3259d774df4c15e",
      "patch": "@@ -97,7 +97,6 @@ static int optimize_for_space = 0;\n static int label_exist = 0;\n /* Flag to save state in omit_fp region.  */\n static int in_omit_fp = 0;\n-extern struct nds32_keyword nds32_keyword_gpr[];\n /* Tag there is relax relocation having to link.  */\n static bool relaxing = false;\n /* ICT model.  */\n@@ -4601,7 +4600,7 @@ nds32_asm_parse_operand (struct nds32_asm_desc *pdesc ATTRIBUTE_UNUSED,\n void\n md_begin (void)\n {\n-  struct nds32_keyword *k;\n+  const struct nds32_keyword *k;\n   relax_info_t *relax_info;\n   int flags = 0;\n "
    },
    {
      "sha": "25e8f66e32819d828e44cda410dc090f3e6985b1",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=62194b631d00112bac1f8856d3259d774df4c15e",
      "patch": "@@ -1,3 +1,12 @@\n+2021-07-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* nds32-dis.c (nds32_find_reg_keyword): Constify arg and return.\n+\t(nds32_parse_audio_ext, nds32_parse_opcode): Constify psys_reg.\n+\t(nds32_field_table, nds32_opcode_table, nds32_keyword_table),\n+\t(nds32_opcodes, nds32_operand_fields, nds32_keywords),\n+\t(nds32_keyword_gpr): Move declarations to..\n+\t* nds32-asm.h: ..here, constifying to match definitions.\n+\n 2021-07-01  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.am (GUILE): New variable."
    },
    {
      "sha": "e0ec98df26ef99d76bc85af13ea8186c37db7b33",
      "filename": "opcodes/nds32-asm.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/nds32-asm.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/nds32-asm.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-asm.h?ref=62194b631d00112bac1f8856d3259d774df4c15e",
      "patch": "@@ -268,6 +268,14 @@ typedef struct nds32_field\n \t\tchar **, int64_t *);\n } field_t;\n \n+extern const field_t *nds32_field_table[NDS32_CORE_COUNT];\n+extern opcode_t *nds32_opcode_table[NDS32_CORE_COUNT];\n+extern const keyword_t **nds32_keyword_table[NDS32_CORE_COUNT];\n+extern struct nds32_opcode nds32_opcodes[];\n+extern const field_t nds32_operand_fields[];\n+extern const keyword_t *nds32_keywords[];\n+extern const keyword_t nds32_keyword_gpr[];\n+\n extern void nds32_assemble (nds32_asm_desc_t *, nds32_asm_insn_t *, char *);\n extern void nds32_asm_init (nds32_asm_desc_t *, int);\n "
    },
    {
      "sha": "c8cb506165f286e1648a331988b38f6de1d7bb70",
      "filename": "opcodes/nds32-dis.c",
      "status": "modified",
      "additions": 4,
      "deletions": 12,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/nds32-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/62194b631d00112bac1f8856d3259d774df4c15e/opcodes/nds32-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/nds32-dis.c?ref=62194b631d00112bac1f8856d3259d774df4c15e",
      "patch": "@@ -65,14 +65,6 @@ struct nds32_private_data\n #define NDS32_PARSE_INSN16      0x01\n #define NDS32_PARSE_INSN32      0x02\n \n-extern const field_t *nds32_field_table[NDS32_CORE_COUNT];\n-extern opcode_t *nds32_opcode_table[NDS32_CORE_COUNT];\n-extern keyword_t **nds32_keyword_table[NDS32_CORE_COUNT];\n-extern struct nds32_opcode nds32_opcodes[];\n-extern const field_t nds32_operand_fields[];\n-extern keyword_t *nds32_keywords[];\n-extern const keyword_t nds32_keyword_gpr[];\n-\n static uint32_t nds32_mask_opcode (uint32_t);\n static void nds32_special_opcode (uint32_t, struct nds32_opcode **);\n static int get_mapping_symbol_type (struct disassemble_info *, int,\n@@ -86,8 +78,8 @@ static htab_t opcode_htab;\n \n /* Find the value map register name.  */\n \n-static keyword_t *\n-nds32_find_reg_keyword (keyword_t *reg, int value)\n+static const keyword_t *\n+nds32_find_reg_keyword (const keyword_t *reg, int value)\n {\n   if (!reg)\n     return NULL;\n@@ -107,7 +99,7 @@ nds32_parse_audio_ext (const field_t *pfd,\n {\n   fprintf_ftype func = info->fprintf_func;\n   void *stream = info->stream;\n-  keyword_t *psys_reg;\n+  const keyword_t *psys_reg;\n   int int_value, new_value;\n \n   if (pfd->hw_res == HW_INT || pfd->hw_res == HW_UINT)\n@@ -224,7 +216,7 @@ nds32_parse_opcode (struct nds32_opcode *opc, bfd_vma pc ATTRIBUTE_UNUSED,\n   unsigned int push25gpr = 0, lsmwRb, lsmwRe, lsmwEnb4, checkbit, i;\n   int int_value, ifthe1st = 1;\n   const field_t *pfd;\n-  keyword_t *psys_reg;\n+  const keyword_t *psys_reg;\n \n   if (opc == NULL)\n     {"
    }
  ]
}