{
  "sha": "6f8f6017a0c4e22c6417c597c31b0a937d148a39",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NmY4ZjYwMTdhMGM0ZTIyYzY0MTdjNTk3YzMxYjBhOTM3ZDE0OGEzOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-16T12:59:05Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-16T13:51:44Z"
    },
    "message": "PR27567, Linking PE files adds alignment section flags to executables\n\nSo don't set those flags for an executable.  In the patch I also test\nDYNAMIC even though the PE bfd code doesn't appear to set it for dlls.\nI figure it doesn't hurt to include that flag too.\n\n\tPR 27567\nbfd/\n\t* coffcode.h (styp_to_sec_flags): Use an unsigned long styp_flags.\n\t(coff_write_object_contents): Pass bfd to COFF_ENCODE_ALIGNMENT,\n\tignore alignment checks when return is false.  Formatting.\ninclude/\n\t* coff/internal.h (struct internal_scnhdr): Make s_flags unsigned long.\n\t* coff/pe.h (COFF_ENCODE_ALIGNMENT): Don't set align flags for an\n\texecutable and return false.  Do so for a relocatable object and\n\tevaluate to true.\n\t* coff/ti.h (COFF_ENCODE_ALIGNMENT): Add bfd arg and evaluate to true.\n\t(COFF_DECODE_ALIGNMENT): Formatting.\n\t* coff/z80.h (COFF_ENCODE_ALIGNMENT): Similarly.\n\t(COFF_DECODE_ALIGNMENT): Similarly.",
    "tree": {
      "sha": "06fb2f4b8c73bbbc58ce2866e3d5e775ec37e070",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/06fb2f4b8c73bbbc58ce2866e3d5e775ec37e070"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6f8f6017a0c4e22c6417c597c31b0a937d148a39",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f8f6017a0c4e22c6417c597c31b0a937d148a39",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6f8f6017a0c4e22c6417c597c31b0a937d148a39",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6f8f6017a0c4e22c6417c597c31b0a937d148a39/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "768589d18042a55f0e1f77f466568a1c102ab099",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/768589d18042a55f0e1f77f466568a1c102ab099",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/768589d18042a55f0e1f77f466568a1c102ab099"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 40,
    "deletions": 16
  },
  "files": [
    {
      "sha": "513d6e9d3f3a06aa176b62d35a8cd51157951758",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27567\n+\t* coffcode.h (styp_to_sec_flags): Use an unsigned long styp_flags.\n+\t(coff_write_object_contents): Pass bfd to COFF_ENCODE_ALIGNMENT,\n+\tignore alignment checks when return is false.  Formatting.\n+\n 2021-04-15  Nelson Chu  <nelson.chu@sifive.com>\n \n \tPR27584"
    },
    {
      "sha": "f65f3352e4666c42e1701913613abaa75cd333cf",
      "filename": "bfd/coffcode.h",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/bfd/coffcode.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/bfd/coffcode.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coffcode.h?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -737,7 +737,7 @@ styp_to_sec_flags (bfd *abfd,\n \t\t   flagword *flags_ptr)\n {\n   struct internal_scnhdr *internal_s = (struct internal_scnhdr *) hdr;\n-  long styp_flags = internal_s->s_flags;\n+  unsigned long styp_flags = internal_s->s_flags;\n   flagword sec_flags = 0;\n \n #ifdef STYP_BLOCK\n@@ -3643,18 +3643,18 @@ coff_write_object_contents (bfd * abfd)\n \n \n #ifdef COFF_ENCODE_ALIGNMENT\n-      COFF_ENCODE_ALIGNMENT(section, current->alignment_power);\n-      if ((unsigned int)COFF_DECODE_ALIGNMENT(section.s_flags)\n-\t  != current->alignment_power)\n+      if (COFF_ENCODE_ALIGNMENT (abfd, section, current->alignment_power)\n+\t  && (COFF_DECODE_ALIGNMENT (section.s_flags)\n+\t      != current->alignment_power))\n \t{\n-\t  bool warn = coff_data (abfd)->link_info\n-\t    && !bfd_link_relocatable (coff_data (abfd)->link_info);\n+\t  bool warn = (coff_data (abfd)->link_info\n+\t\t       && !bfd_link_relocatable (coff_data (abfd)->link_info));\n \n \t  _bfd_error_handler\n \t    /* xgettext:c-format */\n \t    (_(\"%pB:%s section %s: alignment 2**%u not representable\"),\n-\t    abfd, warn ? \" warning:\" : \"\", current->name,\n-\t    current->alignment_power);\n+\t     abfd, warn ? \" warning:\" : \"\", current->name,\n+\t     current->alignment_power);\n \t  if (!warn)\n \t    {\n \t      bfd_set_error (bfd_error_nonrepresentable_section);"
    },
    {
      "sha": "83ae2cb84cc75a7aebae23ce5b897e7b761b467e",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -1,3 +1,15 @@\n+2021-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27567\n+\t* coff/internal.h (struct internal_scnhdr): Make s_flags unsigned long.\n+\t* coff/pe.h (COFF_ENCODE_ALIGNMENT): Don't set align flags for an\n+\texecutable and return false.  Do so for a relocatable object and\n+\tevaluate to true.\n+\t* coff/ti.h (COFF_ENCODE_ALIGNMENT): Add bfd arg and evaluate to true.\n+\t(COFF_DECODE_ALIGNMENT): Formatting.\n+\t* coff/z80.h (COFF_ENCODE_ALIGNMENT): Similarly.\n+\t(COFF_DECODE_ALIGNMENT): Similarly.\n+\n 2021-04-09  Alan Modra  <amodra@gmail.com>\n \n \t* dis-asm.h (struct disassemble_info): Add dynrelbuf and dynrelcount."
    },
    {
      "sha": "b09bb0f469dc49f2c598d216e1682f4e5e1e2ddf",
      "filename": "include/coff/internal.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/internal.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/internal.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/internal.h?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -407,7 +407,7 @@ struct internal_scnhdr\n   bfd_vma s_lnnoptr;\t\t/* file ptr to line numbers\t*/\n   unsigned long s_nreloc;\t/* number of relocation entries\t*/\n   unsigned long s_nlnno;\t/* number of line number entries*/\n-  long s_flags;\t\t\t/* flags\t\t\t*/\n+  unsigned long s_flags;\t/* flags\t\t\t*/\n   unsigned char s_page;         /* TI COFF load page            */\n };\n "
    },
    {
      "sha": "d6e84691677f1337ec931cdb62cd4470472a22bf",
      "filename": "include/coff/pe.h",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/pe.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/pe.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/pe.h?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -105,9 +105,12 @@\n #define IMAGE_SCN_ALIGN_8192BYTES\t     IMAGE_SCN_ALIGN_POWER_CONST (13)\n \n /* Encode alignment power into IMAGE_SCN_ALIGN bits of s_flags.  */\n-#define COFF_ENCODE_ALIGNMENT(SECTION, ALIGNMENT_POWER) \\\n-  ((SECTION).s_flags |= IMAGE_SCN_ALIGN_POWER_CONST ((ALIGNMENT_POWER) <= 13 \\\n-\t\t\t\t\t\t     ? (ALIGNMENT_POWER) : 13))\n+#define COFF_ENCODE_ALIGNMENT(ABFD, SECTION, ALIGNMENT_POWER) \\\n+  (((ABFD)->flags & (EXEC_P | DYNAMIC)) != 0 ? false\t\t\t\\\n+   : ((SECTION).s_flags\t\t\t\t\t\t\t\\\n+      |= IMAGE_SCN_ALIGN_POWER_CONST ((ALIGNMENT_POWER) < 13\t\t\\\n+\t\t\t\t      ? (ALIGNMENT_POWER) : 13),\t\\\n+      true))\n #define COFF_DECODE_ALIGNMENT(X)             \\\n   IMAGE_SCN_ALIGN_POWER_NUM ((X) & IMAGE_SCN_ALIGN_POWER_BIT_MASK)\n "
    },
    {
      "sha": "e51cf96bff9b51d1732e58b42a0eef821aac7208",
      "filename": "include/coff/ti.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/ti.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/ti.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/ti.h?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -88,9 +88,10 @@ struct external_filehdr\n #define COFF_ALIGN_IN_SECTION_HEADER 1\n #define COFF_ALIGN_IN_S_FLAGS 1\n /* requires a power-of-two argument */\n-#define COFF_ENCODE_ALIGNMENT(S,X) ((S).s_flags |= (((unsigned)(X)&0xF)<<8))\n+#define COFF_ENCODE_ALIGNMENT(B,S,X) \\\n+  ((S).s_flags |= (((unsigned) (X) & 0xF) << 8), true)\n /* result is a power of two */\n-#define COFF_DECODE_ALIGNMENT(X) (((X)>>8)&0xF)\n+#define COFF_DECODE_ALIGNMENT(X) (((X) >> 8) & 0xF)\n \n #define COFF0_P(ABFD) (bfd_coff_filhsz(ABFD) == FILHSZ_V0)\n #define COFF2_P(ABFD) (bfd_coff_scnhsz(ABFD) != SCNHSZ_V01)"
    },
    {
      "sha": "1fd94fe5145d25498c2004624d512b3f258182c9",
      "filename": "include/coff/z80.h",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/z80.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6f8f6017a0c4e22c6417c597c31b0a937d148a39/include/coff/z80.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/coff/z80.h?ref=6f8f6017a0c4e22c6417c597c31b0a937d148a39",
      "patch": "@@ -35,9 +35,10 @@\n #define COFF_ALIGN_IN_S_FLAGS 1\n #define F_ALGNMASK 0x0F00\n /* requires a power-of-two argument */\n-#define COFF_ENCODE_ALIGNMENT(S,X) ((S).s_flags |= (((unsigned)(X)&0xF)<<8))\n+#define COFF_ENCODE_ALIGNMENT(B,S,X) \\\n+  ((S).s_flags |= (((unsigned) (X) & 0xF) << 8), true)\n /* result is a power of two */\n-#define COFF_DECODE_ALIGNMENT(X) (((X)>>8)&0xF)\n+#define COFF_DECODE_ALIGNMENT(X) (((X) >> 8) & 0xF)\n \n #define\tZ80MAGIC   0x805A\n "
    }
  ]
}