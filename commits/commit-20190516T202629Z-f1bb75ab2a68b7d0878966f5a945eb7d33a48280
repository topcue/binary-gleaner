{
  "sha": "f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjFiYjc1YWIyYTY4YjdkMDg3ODk2NmY1YTk0NWViN2QzM2E0ODI4MA==",
  "commit": {
    "author": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:17:30Z"
    },
    "committer": {
      "name": "Sergio Durigan Junior",
      "email": "sergiodj@redhat.com",
      "date": "2019-05-16T20:26:29Z"
    },
    "message": "Slightly improve logic of some operations on stap-probe.c\n\nThis patch contains three very small improvement on the logic of some\noperations we do on stap-probe.c.  They don't change what the code\ndoes.\n\nPushed as obvious.\n\ngdb/ChangeLog:\n2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n\n\t* stap-probe.c (stap_parse_register_operand): Make \"if (*p->arg ==\n\t'-')\" and \"else if\".\n\t(stap_parse_single_operand): Join checks for\n\t\"gdbarch_stap_parse_special_token_p\" and\n\t\"gdbarch_stap_parse_special_token\" in the same \"if\" statement.\n\tInvert check when verifying for operation on register\n\tdisplacement.",
    "tree": {
      "sha": "d1d7b95a91359d612bde6c5c327bcc33b394be32",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/d1d7b95a91359d612bde6c5c327bcc33b394be32"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f1bb75ab2a68b7d0878966f5a945eb7d33a48280/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "3ca58cdea13ddad01d70aa170eb419903b241b94",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3ca58cdea13ddad01d70aa170eb419903b241b94",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3ca58cdea13ddad01d70aa170eb419903b241b94"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 20,
    "deletions": 11
  },
  "files": [
    {
      "sha": "c89b7039e86387fdd2c78044794f4ecd47cb32b7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1bb75ab2a68b7d0878966f5a945eb7d33a48280/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1bb75ab2a68b7d0878966f5a945eb7d33a48280/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
      "patch": "@@ -1,3 +1,13 @@\n+2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n+\n+\t* stap-probe.c (stap_parse_register_operand): Make \"if (*p->arg ==\n+\t'-')\" and \"else if\".\n+\t(stap_parse_single_operand): Join checks for\n+\t\"gdbarch_stap_parse_special_token_p\" and\n+\t\"gdbarch_stap_parse_special_token\" in the same \"if\" statement.\n+\tInvert check when verifying for operation on register\n+\tdisplacement.\n+\n 2019-05-16  Sergio Durigan Junior  <sergiodj@redhat.com>\n \n \t* stap-probe.c (stap_get_opcode): Update comment."
    },
    {
      "sha": "db9231558f5772f77109e74cc322b0681cae3913",
      "filename": "gdb/stap-probe.c",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f1bb75ab2a68b7d0878966f5a945eb7d33a48280/gdb/stap-probe.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f1bb75ab2a68b7d0878966f5a945eb7d33a48280/gdb/stap-probe.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/stap-probe.c?ref=f1bb75ab2a68b7d0878966f5a945eb7d33a48280",
      "patch": "@@ -705,8 +705,7 @@ stap_parse_register_operand (struct stap_parse_info *p)\n \t pointer.  */\n       ++p->arg;\n     }\n-\n-  if (*p->arg == '-')\n+  else if (*p->arg == '-')\n     {\n       got_minus = true;\n       ++p->arg;\n@@ -842,15 +841,15 @@ stap_parse_single_operand (struct stap_parse_info *p)\n   const char *int_prefix = NULL;\n \n   /* We first try to parse this token as a \"special token\".  */\n-  if (gdbarch_stap_parse_special_token_p (gdbarch))\n-    if (gdbarch_stap_parse_special_token (gdbarch, p) != 0)\n-      {\n-\t/* If the return value of the above function is not zero,\n-\t   it means it successfully parsed the special token.\n+  if (gdbarch_stap_parse_special_token_p (gdbarch)\n+      && (gdbarch_stap_parse_special_token (gdbarch, p) != 0))\n+    {\n+      /* If the return value of the above function is not zero,\n+\t it means it successfully parsed the special token.\n \n-\t   If it is NULL, we try to parse it using our method.  */\n-\treturn;\n-      }\n+\t If it is NULL, we try to parse it using our method.  */\n+      return;\n+    }\n \n   if (*p->arg == '-' || *p->arg == '~' || *p->arg == '+')\n     {\n@@ -890,7 +889,7 @@ stap_parse_single_operand (struct stap_parse_info *p)\n \t{\n \t  /* If we are here, it means it is a displacement.  The only\n \t     operations allowed here are `-' and `+'.  */\n-\t  if (c == '~')\n+\t  if (c != '-' && c != '+')\n \t    error (_(\"Invalid operator `%c' for register displacement \"\n \t\t     \"on expression `%s'.\"), c, p->saved_arg);\n "
    }
  ]
}