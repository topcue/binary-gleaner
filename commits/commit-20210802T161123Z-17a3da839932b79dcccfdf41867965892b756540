{
  "sha": "17a3da839932b79dcccfdf41867965892b756540",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTdhM2RhODM5OTMyYjc5ZGNjY2ZkZjQxODY3OTY1ODkyYjc1NjU0MA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-07-01T17:40:37Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-08-02T16:11:23Z"
    },
    "message": "Remove the type_qualifier global\n\nThe type_qualifier global is no longer needed in the Ada expression\nparser, so this removes it.",
    "tree": {
      "sha": "8743230e79ea710da2c3c2ad59cc53b55448dcb1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/8743230e79ea710da2c3c2ad59cc53b55448dcb1"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/17a3da839932b79dcccfdf41867965892b756540",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17a3da839932b79dcccfdf41867965892b756540",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/17a3da839932b79dcccfdf41867965892b756540",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/17a3da839932b79dcccfdf41867965892b756540/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03adb248d621063cbbb0ce583cbd2e016ada7a6f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/03adb248d621063cbbb0ce583cbd2e016ada7a6f",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/03adb248d621063cbbb0ce583cbd2e016ada7a6f"
    }
  ],
  "stats": {
    "total": 14,
    "additions": 1,
    "deletions": 13
  },
  "files": [
    {
      "sha": "66d58b06cb59111b751a3a6feca72182cfc98463",
      "filename": "gdb/ada-exp.y",
      "status": "modified",
      "additions": 1,
      "deletions": 13,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/17a3da839932b79dcccfdf41867965892b756540/gdb/ada-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/17a3da839932b79dcccfdf41867965892b756540/gdb/ada-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-exp.y?ref=17a3da839932b79dcccfdf41867965892b756540",
      "patch": "@@ -68,10 +68,6 @@ struct name_info {\n \n static struct parser_state *pstate = NULL;\n \n-/* If expression is in the context of TYPE'(...), then TYPE, else\n- * NULL.  */\n-static struct type *type_qualifier;\n-\n int yyparse (void);\n \n static int yylex (void);\n@@ -428,8 +424,6 @@ pop_associations (int n)\n %type <bval> block\n %type <lval> arglist tick_arglist\n \n-%type <tval> save_qualifier\n-\n %token DOT_ALL\n \n /* Special type cases, put in to allow the parser to distinguish different\n@@ -516,22 +510,17 @@ primary :\tprimary '(' arglist ')'\n \t\t\t}\n \t;\n \n-primary :\tvar_or_type '\\'' save_qualifier { type_qualifier = $1; } \n-\t\t   '(' exp ')'\n+primary :\tvar_or_type '\\'' '(' exp ')'\n \t\t\t{\n \t\t\t  if ($1 == NULL)\n \t\t\t    error (_(\"Type required for qualification\"));\n \t\t\t  operation_up arg = ada_pop (true,\n \t\t\t\t\t\t      check_typedef ($1));\n \t\t\t  pstate->push_new<ada_qual_operation>\n \t\t\t    (std::move (arg), $1);\n-\t\t\t  type_qualifier = $3;\n \t\t\t}\n \t;\n \n-save_qualifier : \t{ $$ = type_qualifier; }\n-\t;\n-\n primary :\n \t\tprimary '(' simple_exp DOTDOT simple_exp ')'\n \t\t\t{ ada_wrap3<ada_ternop_slice_operation> (); }\n@@ -1093,7 +1082,6 @@ ada_parse (struct parser_state *par_state)\n   pstate = par_state;\n \n   lexer_init (yyin);\t\t/* (Re-)initialize lexer.  */\n-  type_qualifier = NULL;\n   obstack_free (&temp_parse_space, NULL);\n   obstack_init (&temp_parse_space);\n   components.clear ();"
    }
  ]
}