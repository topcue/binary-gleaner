{
  "sha": "f51f9f1d0300029d33ecb73976f5d2be9b63553e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZjUxZjlmMWQwMzAwMDI5ZDMzZWNiNzM5NzZmNWQyYmU5YjYzNTUzZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-07T08:07:32Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-12-07T08:07:32Z"
    },
    "message": "[gdb/ada] Handle shrink resize in replace_operator_with_call\n\nIn replace_operator_with_call, we resize the elts array like this:\n...\n  exp->nelts = exp->nelts + 7 - oplen;\n  exp->resize (exp->nelts);\n...\n\nAlthough all the current callers ensure that the new size is bigger, it could\nalso be smaller, in which case the following memmove possibly reads out of\nbounds:\n...\n   memmove (exp->elts + pc + 7, exp->elts + pc + oplen,\n           EXP_ELEM_TO_BYTES (save_nelts - pc - oplen));\n...\n\nFix this by doing the resize after the memmove in case the new size is\nsmaller.\n\nTested on x86_64-linux.\n\ngdb/ChangeLog:\n\n2020-12-07  Tom de Vries  <tdevries@suse.de>\n\n\t* ada-lang.c (replace_operator_with_call): Handle shrink resize.",
    "tree": {
      "sha": "da77fac6d0af66cdb553d6717f498f52b758e5d5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/da77fac6d0af66cdb553d6717f498f52b758e5d5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/f51f9f1d0300029d33ecb73976f5d2be9b63553e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f51f9f1d0300029d33ecb73976f5d2be9b63553e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/f51f9f1d0300029d33ecb73976f5d2be9b63553e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f51f9f1d0300029d33ecb73976f5d2be9b63553e/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00158a68d1c382f9afe16630ac327695a4904556",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00158a68d1c382f9afe16630ac327695a4904556",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/00158a68d1c382f9afe16630ac327695a4904556"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 10,
    "deletions": 2
  },
  "files": [
    {
      "sha": "8b94c029cf8bcdbbc9cad1d79dcbb3c5247454cb",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f51f9f1d0300029d33ecb73976f5d2be9b63553e/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f51f9f1d0300029d33ecb73976f5d2be9b63553e/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=f51f9f1d0300029d33ecb73976f5d2be9b63553e",
      "patch": "@@ -1,3 +1,7 @@\n+2020-12-07  Tom de Vries  <tdevries@suse.de>\n+\n+\t* ada-lang.c (replace_operator_with_call): Handle shrink resize.\n+\n 2020-12-06  Tom Tromey  <tom@tromey.com>\n \n \tPR ada/26999"
    },
    {
      "sha": "8a1d9df5411fe5be54876f7016aabd108472ebc6",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/f51f9f1d0300029d33ecb73976f5d2be9b63553e/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/f51f9f1d0300029d33ecb73976f5d2be9b63553e/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=f51f9f1d0300029d33ecb73976f5d2be9b63553e",
      "patch": "@@ -4005,11 +4005,15 @@ replace_operator_with_call (expression_up *expp, int pc, int nargs,\n      expression.  */\n   struct expression *exp = expp->get ();\n   int save_nelts = exp->nelts;\n-  exp->nelts = exp->nelts + 7 - oplen;\n-  exp->resize (exp->nelts);\n+  int extra_elts = 7 - oplen;\n+  exp->nelts += extra_elts;\n \n+  if (extra_elts > 0)\n+    exp->resize (exp->nelts);\n   memmove (exp->elts + pc + 7, exp->elts + pc + oplen,\n \t   EXP_ELEM_TO_BYTES (save_nelts - pc - oplen));\n+  if (extra_elts < 0)\n+    exp->resize (exp->nelts);\n \n   exp->elts[pc].opcode = exp->elts[pc + 2].opcode = OP_FUNCALL;\n   exp->elts[pc + 1].longconst = (LONGEST) nargs;"
    }
  ]
}