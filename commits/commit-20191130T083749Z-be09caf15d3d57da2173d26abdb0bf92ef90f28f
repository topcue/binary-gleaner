{
  "sha": "be09caf15d3d57da2173d26abdb0bf92ef90f28f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YmUwOWNhZjE1ZDNkNTdkYTIxNzNkMjZhYmRiMGJmOTJlZjkwZjI4Zg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-09-08T19:54:18Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2019-11-30T08:37:49Z"
    },
    "message": "Allow . character as part of command names.\n\nThis patch adds . as an allowed character for user defined commands.\nCombined with 'define-prefix', this allows to e.g. define a set of Valgrind\nspecific user command corresponding to the Valgrind monitor commands\n(such as check_memory, v.info, v.set, ...).\n\ngdb/ChangeLog\n2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* command.h (valid_cmd_char_p): Declare.\n\t* cli/cli-decode.c (valid_cmd_char_p): New function factorizing\n\tthe check of valid command char.\n\t(find_command_name_length, valid_user_defined_cmd_name_p): Use\n\tvalid_cmd_char_p.\n\t* cli/cli-script.c (validate_comname): Likewise.\n\t* completer.c (gdb_completer_command_word_break_characters):\n\tDo not remove . from the word break char, update comments.\n\t(complete_line_internal_1): Use valid_cmd_char_p.\n\t* guile/scm-cmd.c (gdbscm_parse_command_name): Likewise.\n\t* python/py-cmd.c (gdbpy_parse_command_name): Likewise.\n\ngdb/testsuite/ChangeLog\n2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/define.exp: Test . in command names.\n\t* gdb.base/setshow.exp: Update test, as . is now part of\n\tcommand name.",
    "tree": {
      "sha": "dee1e80c88e618bec9c24fe31e9a0f226d9208ec",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/dee1e80c88e618bec9c24fe31e9a0f226d9208ec"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/be09caf15d3d57da2173d26abdb0bf92ef90f28f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be09caf15d3d57da2173d26abdb0bf92ef90f28f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/be09caf15d3d57da2173d26abdb0bf92ef90f28f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/be09caf15d3d57da2173d26abdb0bf92ef90f28f/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "643c0cbedb4647702778ca8788a54053d1259d3b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/643c0cbedb4647702778ca8788a54053d1259d3b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/643c0cbedb4647702778ca8788a54053d1259d3b"
    }
  ],
  "stats": {
    "total": 101,
    "additions": 76,
    "deletions": 25
  },
  "files": [
    {
      "sha": "50de35d07a97857a9d83d90646515eab541643c7",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -1,3 +1,17 @@\n+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* command.h (valid_cmd_char_p): Declare.\n+\t* cli/cli-decode.c (valid_cmd_char_p): New function factorizing\n+\tthe check of valid command char.\n+\t(find_command_name_length, valid_user_defined_cmd_name_p): Use\n+\tvalid_cmd_char_p.\n+\t* cli/cli-script.c (validate_comname): Likewise.\n+\t* completer.c (gdb_completer_command_word_break_characters):\n+\tDo not remove . from the word break char, update comments.\n+\t(complete_line_internal_1): Use valid_cmd_char_p.\n+\t* guile/scm-cmd.c (gdbscm_parse_command_name): Likewise.\n+\t* python/py-cmd.c (gdbpy_parse_command_name): Likewise.\n+\n 2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* cli/cli-script.c (do_define_command): Ensure a redefined"
    },
    {
      "sha": "307fd1e8263ccdfe63e9edcde62e9855c307d289",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 14,
      "deletions": 10,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -1372,17 +1372,26 @@ find_command_name_length (const char *text)\n   if (*p == '!' || *p == '|')\n     return 1;\n \n-  while (isalnum (*p) || *p == '-' || *p == '_'\n+  while (valid_cmd_char_p (*p)\n \t /* Characters used by TUI specific commands.  */\n \t || *p == '+' || *p == '<' || *p == '>' || *p == '$')\n     p++;\n \n   return p - text;\n }\n \n-/* Return TRUE if NAME is a valid user-defined command name.\n-   This is a stricter subset of all gdb commands,\n-   see find_command_name_length.  */\n+/* See command.h.  */\n+\n+bool\n+valid_cmd_char_p (int c)\n+{\n+  /* Alas \"42\" is a legitimate user-defined command.\n+     In the interests of not breaking anything we preserve that.  */\n+\n+  return isalnum (c) || c == '-' || c == '_' || c == '.';\n+}\n+\n+/* See command.h.  */\n \n bool\n valid_user_defined_cmd_name_p (const char *name)\n@@ -1392,14 +1401,9 @@ valid_user_defined_cmd_name_p (const char *name)\n   if (*name == '\\0')\n     return false;\n \n-  /* Alas \"42\" is a legitimate user-defined command.\n-     In the interests of not breaking anything we preserve that.  */\n-\n   for (p = name; *p != '\\0'; ++p)\n     {\n-      if (isalnum (*p)\n-\t  || *p == '-'\n-\t  || *p == '_')\n+      if (valid_cmd_char_p (*p))\n \t; /* Ok.  */\n       else\n \treturn false;"
    },
    {
      "sha": "10824a3daffd321d32c4319b4deacaaf10ce7a88",
      "filename": "gdb/cli/cli-script.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/cli/cli-script.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/cli/cli-script.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-script.c?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -1342,7 +1342,7 @@ validate_comname (const char **comname)\n   p = *comname;\n   while (*p)\n     {\n-      if (!isalnum (*p) && *p != '-' && *p != '_')\n+      if (!valid_cmd_char_p (*p))\n \terror (_(\"Junk in argument list: \\\"%s\\\"\"), p);\n       p++;\n     }"
    },
    {
      "sha": "5384a0a6747a2063a46cc390a73eb2750728756b",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -133,8 +133,16 @@ extern struct cli_suppress_notification cli_suppress_notification;\n \n /* API to the manipulation of command lists.  */\n \n+/* Return TRUE if NAME is a valid user-defined command name.\n+   This is a stricter subset of all gdb commands,\n+   see find_command_name_length.  */\n+\n extern bool valid_user_defined_cmd_name_p (const char *name);\n \n+/* Return TRUE if C is a valid command character.  */\n+\n+extern bool valid_cmd_char_p (int c);\n+\n /* Const-correct variant of the above.  */\n \n extern struct cmd_list_element *add_cmd (const char *, enum command_class,"
    },
    {
      "sha": "6658da6d7fb7d7e36c4b3d377658692935efa4b3",
      "filename": "gdb/completer.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/completer.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/completer.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/completer.c?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -102,13 +102,13 @@ enum explicit_location_match_type\n \n /* Variables which are necessary for fancy command line editing.  */\n \n-/* When completing on command names, we remove '-' from the list of\n+/* When completing on command names, we remove '-' and '.' from the list of\n    word break characters, since we use it in command names.  If the\n    readline library sees one in any of the current completion strings,\n    it thinks that the string needs to be quoted and automatically\n    supplies a leading quote.  */\n static const char gdb_completer_command_word_break_characters[] =\n-\" \\t\\n!@#$%^&*()+=|~`}{[]\\\"';:?/>.<,\";\n+\" \\t\\n!@#$%^&*()+=|~`}{[]\\\"';:?/><,\";\n \n /* When completing on file names, we remove from the list of word\n    break characters any characters that are commonly used in file\n@@ -1284,7 +1284,7 @@ complete_line_internal_1 (completion_tracker &tracker,\n      on command strings (as opposed to strings supplied by the\n      individual command completer functions, which can be any string)\n      then we will switch to the special word break set for command\n-     strings, which leaves out the '-' character used in some\n+     strings, which leaves out the '-' and '.' character used in some\n      commands.  */\n   set_rl_completer_word_break_characters\n     (current_language->la_word_break_characters());\n@@ -1347,7 +1347,7 @@ complete_line_internal_1 (completion_tracker &tracker,\n       /* lookup_cmd_1 advances p up to the first ambiguous thing, but\n \t doesn't advance over that thing itself.  Do so now.  */\n       q = p;\n-      while (*q && (isalnum (*q) || *q == '-' || *q == '_'))\n+      while (valid_cmd_char_p (*q))\n \t++q;\n       if (q != tmp_command + point)\n \t{\n@@ -1435,7 +1435,7 @@ complete_line_internal_1 (completion_tracker &tracker,\n \t      q = p;\n \t      while (q > tmp_command)\n \t\t{\n-\t\t  if (isalnum (q[-1]) || q[-1] == '-' || q[-1] == '_')\n+\t\t  if (valid_cmd_char_p (q[-1]))\n \t\t    --q;\n \t\t  else\n \t\t    break;"
    },
    {
      "sha": "3b8195b8b4191ffe344227108d039009f3e40674",
      "filename": "gdb/guile/scm-cmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/guile/scm-cmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/guile/scm-cmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-cmd.c?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -492,10 +492,7 @@ gdbscm_parse_command_name (const char *name,\n   lastchar = i;\n \n   /* Find first character of the final word.  */\n-  for (; i > 0 && (isalnum (name[i - 1])\n-\t\t   || name[i - 1] == '-'\n-\t\t   || name[i - 1] == '_');\n-       --i)\n+  for (; i > 0 && valid_cmd_char_p (name[i - 1]); --i)\n     ;\n   result = (char *) xmalloc (lastchar - i + 2);\n   memcpy (result, &name[i], lastchar - i + 1);"
    },
    {
      "sha": "8d6f01b78fc259009815d0406dcd93e7afe9c40f",
      "filename": "gdb/python/py-cmd.c",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/python/py-cmd.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/python/py-cmd.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-cmd.c?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -372,10 +372,7 @@ gdbpy_parse_command_name (const char *name,\n   lastchar = i;\n \n   /* Find first character of the final word.  */\n-  for (; i > 0 && (isalnum (name[i - 1])\n-\t\t   || name[i - 1] == '-'\n-\t\t   || name[i - 1] == '_');\n-       --i)\n+  for (; i > 0 && valid_cmd_char_p (name[i - 1]); --i)\n     ;\n   result = (char *) xmalloc (lastchar - i + 2);\n   memcpy (result, &name[i], lastchar - i + 1);"
    },
    {
      "sha": "1f52d01df7efa2bcc74aa4b621800edc2974c60d",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/define.exp: Test . in command names.\n+\t* gdb.base/setshow.exp: Update test, as . is now part of\n+\tcommand name.\n+\n 2019-11-30  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/define-prefix.exp: New file."
    },
    {
      "sha": "b5183eceecc3a800b7f52292170043acf8b0f026",
      "filename": "gdb/testsuite/gdb.base/define.exp",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/gdb.base/define.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/gdb.base/define.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/define.exp?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -130,6 +130,31 @@ gdb_test \"help nextwhere\" \\\n     \"   A next command that first shows you where you're stepping from.*\" \\\n     \"preserve whitespace in help string\"\n \n+# Verify that GDB allows a user to use . in a command name.\n+#\n+gdb_test_multiple \"define dot.command\" \"define user command: dot.command\" {\n+    -re \"Type commands for definition of \\\"dot.command\\\".\\r\\nEnd with a line saying just \\\"end\\\".\\r\\n>$\" {\n+\tgdb_test \"echo dot command\\\\n\\nend\" \"\" \\\n+\t    \"define user command: dot.command\"\n+    }\n+}\n+\n+# Verify that dot.command works.\n+#\n+gdb_test \"dot.command\" \\\n+    \"dot command\" \\\n+    \"full name dot.command\"\n+gdb_test \"dot\" \\\n+    \"dot command\" \\\n+    \"partial name dot\"\n+gdb_test \"dot.\" \\\n+    \"dot command\" \\\n+    \"partial name dot.\"\n+gdb_test \"dot.c\" \\\n+    \"dot command\" \\\n+    \"partial name dot.c\"\n+\n+\n # Verify that the command parser doesn't require a space after an 'if'\n # command in a user defined function.\n #"
    },
    {
      "sha": "394967babf35491ca3adb16b50337f61f0bd45d4",
      "filename": "gdb/testsuite/gdb.base/setshow.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/gdb.base/setshow.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/be09caf15d3d57da2173d26abdb0bf92ef90f28f/gdb/testsuite/gdb.base/setshow.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/setshow.exp?ref=be09caf15d3d57da2173d26abdb0bf92ef90f28f",
      "patch": "@@ -355,7 +355,7 @@ gdb_test_no_output \"set verbose off\" \"set verbose off\"\n gdb_test \"show verbose\" \"Verbosity is off..*\" \"show verbose (off)\" \n #test argument must be preceded by space\n foreach x {\"history file\" \"solib-search-path\" \"data-directory\"} {\n-    foreach y {\"/home/\" \".\" \"~/home\" \"=home\"} {\n+    foreach y {\"/home/\" \"~/home\" \"=home\"} {\n         gdb_test \"set $x$y\" \"Argument must be preceded by space.\" \\\n             \"$x is not set to $y\"\n     }"
    }
  ]
}