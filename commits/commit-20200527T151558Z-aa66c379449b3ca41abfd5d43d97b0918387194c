{
  "sha": "aa66c379449b3ca41abfd5d43d97b0918387194c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YWE2NmMzNzk0NDliM2NhNDFhYmZkNWQ0M2Q5N2IwOTE4Mzg3MTk0Yw==",
  "commit": {
    "author": {
      "name": "Simon Marchi",
      "email": "simon.marchi@polymtl.ca",
      "date": "2020-05-27T15:14:05Z"
    },
    "committer": {
      "name": "Simon Marchi",
      "email": "simon.marchi@efficios.com",
      "date": "2020-05-27T15:15:58Z"
    },
    "message": "Add dwarf2_per_objfile parameter to get_die_type_at_offset\n\nThis allows removing some dwarf2_per_cu_data::dwarf2_per_objfile\nreferences.\n\ngdb/ChangeLog:\n\n\t* dwarf2/read.h (dwarf2_get_die_type): Add dwarf2_per_objfile\n\tparameter.\n\t* dwarf2/read.c (get_die_type_at_offset): Likewise.\n\t(read_namespace_alias): Update.\n\t(lookup_die_type): Update.\n\t(dwarf2_get_die_type): Add dwarf2_per_objfile parameter.\n\t* dwarf2/loc.c (class dwarf_evaluate_loc_desc) <get_base_type>:\n\tUpdate.\n\t(disassemble_dwarf_expression): Update.\n\nChange-Id: Ibaf5b684cb0a8eb8f0b23e62bd0283c295410aa5",
    "tree": {
      "sha": "9a967ff123d6833a49a244c4b48fa1c784d267f0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/9a967ff123d6833a49a244c4b48fa1c784d267f0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/aa66c379449b3ca41abfd5d43d97b0918387194c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa66c379449b3ca41abfd5d43d97b0918387194c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/aa66c379449b3ca41abfd5d43d97b0918387194c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/aa66c379449b3ca41abfd5d43d97b0918387194c/comments",
  "author": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "simark",
    "id": 1758287,
    "node_id": "MDQ6VXNlcjE3NTgyODc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1758287?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/simark",
    "html_url": "https://github.com/simark",
    "followers_url": "https://api.github.com/users/simark/followers",
    "following_url": "https://api.github.com/users/simark/following{/other_user}",
    "gists_url": "https://api.github.com/users/simark/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/simark/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/simark/subscriptions",
    "organizations_url": "https://api.github.com/users/simark/orgs",
    "repos_url": "https://api.github.com/users/simark/repos",
    "events_url": "https://api.github.com/users/simark/events{/privacy}",
    "received_events_url": "https://api.github.com/users/simark/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "120ce1b5b255226227e5e36342b2e3764c2a80aa",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/120ce1b5b255226227e5e36342b2e3764c2a80aa",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/120ce1b5b255226227e5e36342b2e3764c2a80aa"
    }
  ],
  "stats": {
    "total": 46,
    "additions": 31,
    "deletions": 15
  },
  "files": [
    {
      "sha": "45d267bdb42da37f6dc1c23816883eabfb666287",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=aa66c379449b3ca41abfd5d43d97b0918387194c",
      "patch": "@@ -1,3 +1,15 @@\n+2020-05-27  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* dwarf2/read.h (dwarf2_get_die_type): Add dwarf2_per_objfile\n+\tparameter.\n+\t* dwarf2/read.c (get_die_type_at_offset): Likewise.\n+\t(read_namespace_alias): Update.\n+\t(lookup_die_type): Update.\n+\t(dwarf2_get_die_type): Add dwarf2_per_objfile parameter.\n+\t* dwarf2/loc.c (class dwarf_evaluate_loc_desc) <get_base_type>:\n+\tUpdate.\n+\t(disassemble_dwarf_expression): Update.\n+\n 2020-05-27  Simon Marchi  <simon.marchi@efficios.com>\n \n \t* dwarf2/read.h (struct dwarf2_queue_item): Add"
    },
    {
      "sha": "7953361adeed0b5a9c633417f6c60efe0a83c439",
      "filename": "gdb/dwarf2/loc.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/loc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/loc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/loc.c?ref=aa66c379449b3ca41abfd5d43d97b0918387194c",
      "patch": "@@ -673,7 +673,7 @@ class dwarf_evaluate_loc_desc : public dwarf_expr_context\n \n   struct type *get_base_type (cu_offset die_offset, int size) override\n   {\n-    struct type *result = dwarf2_get_die_type (die_offset, per_cu);\n+    struct type *result = dwarf2_get_die_type (die_offset, per_cu, per_objfile);\n     if (result == NULL)\n       error (_(\"Could not find type for DW_OP_const_type\"));\n     if (size != 0 && TYPE_LENGTH (result) != size)\n@@ -4162,7 +4162,7 @@ disassemble_dwarf_expression (struct ui_file *stream,\n \n \t    data = safe_read_uleb128 (data, end, &ul);\n \t    cu_offset offset = (cu_offset) ul;\n-\t    type = dwarf2_get_die_type (offset, per_cu);\n+\t    type = dwarf2_get_die_type (offset, per_cu, per_objfile);\n \t    fprintf_filtered (stream, \"<\");\n \t    type_print (type, \"\", stream, -1);\n \t    fprintf_filtered (stream, \" [0x%s]> %d\",\n@@ -4178,7 +4178,7 @@ disassemble_dwarf_expression (struct ui_file *stream,\n \n \t    data = safe_read_uleb128 (data, end, &ul);\n \t    cu_offset type_die = (cu_offset) ul;\n-\t    type = dwarf2_get_die_type (type_die, per_cu);\n+\t    type = dwarf2_get_die_type (type_die, per_cu, per_objfile);\n \t    fprintf_filtered (stream, \"<\");\n \t    type_print (type, \"\", stream, -1);\n \t    fprintf_filtered (stream, \" [0x%s]>\",\n@@ -4202,7 +4202,7 @@ disassemble_dwarf_expression (struct ui_file *stream,\n \t    data = safe_read_uleb128 (data, end, &ul);\n \t    cu_offset type_die = (cu_offset) ul;\n \n-\t    type = dwarf2_get_die_type (type_die, per_cu);\n+\t    type = dwarf2_get_die_type (type_die, per_cu, per_objfile);\n \t    fprintf_filtered (stream, \"<\");\n \t    type_print (type, \"\", stream, -1);\n \t    fprintf_filtered (stream, \" [0x%s]> [$%s]\",\n@@ -4225,7 +4225,7 @@ disassemble_dwarf_expression (struct ui_file *stream,\n \t      {\n \t\tstruct type *type;\n \n-\t\ttype = dwarf2_get_die_type (type_die, per_cu);\n+\t\ttype = dwarf2_get_die_type (type_die, per_cu, per_objfile);\n \t\tfprintf_filtered (stream, \"<\");\n \t\ttype_print (type, \"\", stream, -1);\n \t\tfprintf_filtered (stream, \" [0x%s]>\","
    },
    {
      "sha": "06e843aeb82917ca83db7caa9b2cf6e9afa3d62a",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 12,
      "deletions": 9,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=aa66c379449b3ca41abfd5d43d97b0918387194c",
      "patch": "@@ -1599,7 +1599,8 @@ static void dwarf2_mark (struct dwarf2_cu *);\n static void dwarf2_clear_marks (struct dwarf2_per_cu_data *);\n \n static struct type *get_die_type_at_offset (sect_offset,\n-\t\t\t\t\t    struct dwarf2_per_cu_data *);\n+\t\t\t\t\t    dwarf2_per_cu_data *per_cu,\n+\t\t\t\t\t    dwarf2_per_objfile *per_objfile);\n \n static struct type *get_die_type (struct die_info *die, struct dwarf2_cu *cu);\n \n@@ -10594,7 +10595,7 @@ read_namespace_alias (struct die_info *die, struct dwarf2_cu *cu)\n \t  struct type *type;\n \t  sect_offset sect_off = attr->get_ref_die_offset ();\n \n-\t  type = get_die_type_at_offset (sect_off, cu->per_cu);\n+\t  type = get_die_type_at_offset (sect_off, cu->per_cu, cu->per_objfile);\n \t  if (type != NULL && type->code () == TYPE_CODE_NAMESPACE)\n \t    {\n \t      /* This declaration is a global namespace alias.  Add\n@@ -21390,13 +21391,14 @@ lookup_die_type (struct die_info *die, const struct attribute *attr,\n \n       per_cu = dwarf2_find_containing_comp_unit (sect_off, 1,\n \t\t\t\t\t\t dwarf2_per_objfile);\n-      this_type = get_die_type_at_offset (sect_off, per_cu);\n+      this_type = get_die_type_at_offset (sect_off, per_cu, dwarf2_per_objfile);\n     }\n   else if (attr->form_is_ref ())\n     {\n       sect_offset sect_off = attr->get_ref_die_offset ();\n \n-      this_type = get_die_type_at_offset (sect_off, cu->per_cu);\n+      this_type = get_die_type_at_offset (sect_off, cu->per_cu,\n+\t\t\t\t\t  dwarf2_per_objfile);\n     }\n   else if (attr->form == DW_FORM_ref_sig8)\n     {\n@@ -22596,10 +22598,11 @@ dwarf2_fetch_die_type_sect_off (sect_offset sect_off,\n \n struct type *\n dwarf2_get_die_type (cu_offset die_offset,\n-\t\t     struct dwarf2_per_cu_data *per_cu)\n+\t\t     dwarf2_per_cu_data *per_cu,\n+\t\t     dwarf2_per_objfile *per_objfile)\n {\n   sect_offset die_offset_sect = per_cu->sect_off + to_underlying (die_offset);\n-  return get_die_type_at_offset (die_offset_sect, per_cu);\n+  return get_die_type_at_offset (die_offset_sect, per_cu, per_objfile);\n }\n \n /* Follow type unit SIG_TYPE referenced by SRC_DIE.\n@@ -23789,10 +23792,10 @@ set_die_type (struct die_info *die, struct type *type, struct dwarf2_cu *cu)\n \n static struct type *\n get_die_type_at_offset (sect_offset sect_off,\n-\t\t\tstruct dwarf2_per_cu_data *per_cu)\n+\t\t\tdwarf2_per_cu_data *per_cu,\n+\t\t\tdwarf2_per_objfile *dwarf2_per_objfile)\n {\n   struct dwarf2_per_cu_offset_and_type *slot, ofs;\n-  struct dwarf2_per_objfile *dwarf2_per_objfile = per_cu->dwarf2_per_objfile;\n \n   if (dwarf2_per_objfile->die_type_hash == NULL)\n     return NULL;\n@@ -23813,7 +23816,7 @@ get_die_type_at_offset (sect_offset sect_off,\n static struct type *\n get_die_type (struct die_info *die, struct dwarf2_cu *cu)\n {\n-  return get_die_type_at_offset (die->sect_off, cu->per_cu);\n+  return get_die_type_at_offset (die->sect_off, cu->per_cu, cu->per_objfile);\n }\n \n /* Add a dependence relationship from CU to REF_PER_CU.  */"
    },
    {
      "sha": "cc1fd914b6f085c70dc5b7973d052d66283bb6b6",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/aa66c379449b3ca41abfd5d43d97b0918387194c/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=aa66c379449b3ca41abfd5d43d97b0918387194c",
      "patch": "@@ -569,7 +569,8 @@ extern dwz_file *dwarf2_get_dwz_file (dwarf2_per_bfd *per_bfd);\n    PER_CU.  */\n \n struct type *dwarf2_get_die_type (cu_offset die_offset,\n-\t\t\t\t  struct dwarf2_per_cu_data *per_cu);\n+\t\t\t\t  dwarf2_per_cu_data *per_cu,\n+\t\t\t\t  dwarf2_per_objfile *per_objfile);\n \n /* Given an index in .debug_addr, fetch the value.\n    NOTE: This can be called during dwarf expression evaluation,"
    }
  ]
}