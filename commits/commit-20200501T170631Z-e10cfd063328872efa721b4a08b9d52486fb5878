{
  "sha": "e10cfd063328872efa721b4a08b9d52486fb5878",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTEwY2ZkMDYzMzI4ODcyZWZhNzIxYjRhMDhiOWQ1MjQ4NmZiNTg3OA==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:06:15Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-05-01T17:06:31Z"
    },
    "message": "gold: Make Ordering::operator() even more complex\n\nGCC 9 generates the same function size for Ordering::operator() in\nodr_violation1.cc and odr_violation2.cc on x32:\n\n  134: 00000000    31 FUNC    WEAK   DEFAULT   64 _ZN8OrderingclEii\n   40: 00000000    31 FUNC    GLOBAL DEFAULT   10 _ZN8OrderingclEii\n\nThis patch makes Ordering::operator() even more complex\n\n   134: 00000000    31 FUNC    WEAK   DEFAULT   64 _ZN8OrderingclEii\n    42: 00000000    35 FUNC    GLOBAL DEFAULT   11 _ZN8OrderingclEii\n\n\t* testsuite/odr_violation2.cc (Ordering::operator()): Make\n\texpression even more complex.",
    "tree": {
      "sha": "1b0483a697333eb1085f14797b38c33dd7aa2904",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1b0483a697333eb1085f14797b38c33dd7aa2904"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e10cfd063328872efa721b4a08b9d52486fb5878",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e10cfd063328872efa721b4a08b9d52486fb5878",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e10cfd063328872efa721b4a08b9d52486fb5878",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e10cfd063328872efa721b4a08b9d52486fb5878/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "de6d6067f59bdcd97ea5e5b72ca3161d4448493e",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/de6d6067f59bdcd97ea5e5b72ca3161d4448493e",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/de6d6067f59bdcd97ea5e5b72ca3161d4448493e"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 6,
    "deletions": 1
  },
  "files": [
    {
      "sha": "97044b6f7288c38f078295c0285e3dca369e14ed",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10cfd063328872efa721b4a08b9d52486fb5878/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10cfd063328872efa721b4a08b9d52486fb5878/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=e10cfd063328872efa721b4a08b9d52486fb5878",
      "patch": "@@ -1,3 +1,8 @@\n+2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/odr_violation2.cc (Ordering::operator()): Make\n+\texpression even more complex.\n+\n 2020-05-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/ver_test_pr16504.sh: Updated."
    },
    {
      "sha": "35dd454704bf4861caefd94d0cce415248cf8a43",
      "filename": "gold/testsuite/odr_violation2.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e10cfd063328872efa721b4a08b9d52486fb5878/gold/testsuite/odr_violation2.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e10cfd063328872efa721b4a08b9d52486fb5878/gold/testsuite/odr_violation2.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/testsuite/odr_violation2.cc?ref=e10cfd063328872efa721b4a08b9d52486fb5878",
      "patch": "@@ -12,7 +12,7 @@ class Ordering {\n bool Ordering::operator()(int a, int b) {\n   // Optimization makes this operator() a different size than the one\n   // in odr_violation1.cc.\n-  return a + 12345 > b / 67;\n+  return (a * 30 + b + 12345) > b / 67;\n }\n \n void SortDescending(int array[], int size) {"
    }
  ]
}