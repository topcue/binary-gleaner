{
  "sha": "e8b6c1da565c93f015d93a4f8554830118e9bd07",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZThiNmMxZGE1NjVjOTNmMDE1ZDkzYTRmODU1NDgzMDExOGU5YmQwNw==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-26T15:53:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-04-26T15:53:32Z"
    },
    "message": "Add test case for gdb 10 crash\n\nPR gdb/27743 points out a gdb crash when expanding partial symtabs,\nwhere one of the compilation units uses DW_TAG_imported_unit.\n\nThis crash happens for gdb 10, but not git trunk.  This patch pulls\nover the new test case only.\n\ngdb/testsuite/ChangeLog\n2021-04-26  Tom Tromey  <tromey@adacore.com>\n\n\tPR gdb/27743:\n\t* gdb.dwarf2/imported-unit-bp.exp: New file.\n\t* gdb.dwarf2/imported-unit-bp-main.c: New file.\n\t* gdb.dwarf2/imported-unit-bp-alt.c: New file.",
    "tree": {
      "sha": "5aad18592919bf242632ee75f9ffcdf075d64a0d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5aad18592919bf242632ee75f9ffcdf075d64a0d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e8b6c1da565c93f015d93a4f8554830118e9bd07",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b6c1da565c93f015d93a4f8554830118e9bd07",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e8b6c1da565c93f015d93a4f8554830118e9bd07",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e8b6c1da565c93f015d93a4f8554830118e9bd07/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bea3329b76cf131ad4ac27acb6728b38984998b9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bea3329b76cf131ad4ac27acb6728b38984998b9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bea3329b76cf131ad4ac27acb6728b38984998b9"
    }
  ],
  "stats": {
    "total": 209,
    "additions": 209,
    "deletions": 0
  },
  "files": [
    {
      "sha": "45bca311a3912a916928bc6a8d4810c12f2e7801",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e8b6c1da565c93f015d93a4f8554830118e9bd07",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-26  Tom Tromey  <tromey@adacore.com>\n+\n+\tPR gdb/27743:\n+\t* gdb.dwarf2/imported-unit-bp.exp: New file.\n+\t* gdb.dwarf2/imported-unit-bp-main.c: New file.\n+\t* gdb.dwarf2/imported-unit-bp-alt.c: New file.\n+\n 2021-04-26  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \tPR gdb/27773"
    },
    {
      "sha": "0785e0a344ebf868fa842b141ee30336295c8c49",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit-bp-alt.c",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp-alt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp-alt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit-bp-alt.c?ref=e8b6c1da565c93f015d93a4f8554830118e9bd07",
      "patch": "@@ -0,0 +1,50 @@\n+/* Copyright 2020-2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+/* Used to insert labels with which we can build a fake line table.  */\n+#define LL(N) asm (\"line_label_\" #N \": .globl line_label_\" #N)\n+\n+volatile int var;\n+volatile int bar;\n+\n+/* Generate some code to take up some space.  */\n+#define FILLER do { \\\n+    var = 99;\t    \\\n+} while (0)\n+\n+int\n+func (void)\n+{\t\t\t\t\t/* func prologue */\n+  asm (\"func_label: .globl func_label\");\n+  LL (1);\t// F1, Ln 16\n+  FILLER;\n+  LL (2);\t// F1, Ln 17\n+  FILLER;\n+  LL (3);\t// F2, Ln 21\n+  FILLER;\n+  LL (4);\t// F2, Ln 22 // F1, Ln 18, !S\n+  FILLER;\n+  LL (5);\t// F1, Ln 19 !S\n+  FILLER;\n+  LL (6);\t// F1, Ln 20\n+  FILLER;\n+  LL (7);\n+  FILLER;\n+  return 0;\t\t\t\t/* func end */\n+}\n+\n+#ifdef WITHMAIN\n+int main () { return 0; }\n+#endif"
    },
    {
      "sha": "e355582b3583257c403e8857724081c2021dd7c0",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit-bp-main.c",
      "status": "added",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp-main.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp-main.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit-bp-main.c?ref=e8b6c1da565c93f015d93a4f8554830118e9bd07",
      "patch": "@@ -0,0 +1,24 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2004-2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+extern int func (void);\n+\n+int\n+main()\n+{\n+  return func ();\n+}"
    },
    {
      "sha": "b6a0f25d2ce5885986be8b2ef5a4dd8f6f211a9c",
      "filename": "gdb/testsuite/gdb.dwarf2/imported-unit-bp.exp",
      "status": "added",
      "additions": 128,
      "deletions": 0,
      "changes": 128,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e8b6c1da565c93f015d93a4f8554830118e9bd07/gdb/testsuite/gdb.dwarf2/imported-unit-bp.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/imported-unit-bp.exp?ref=e8b6c1da565c93f015d93a4f8554830118e9bd07",
      "patch": "@@ -0,0 +1,128 @@\n+# Copyright 2020-2021 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Test that \"break /absolute/file:line\" works ok with imported CUs.\n+\n+load_lib dwarf.exp\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    return 0\n+}\n+\n+standard_testfile imported-unit-bp-alt.c .S imported-unit-bp-main.c\n+\n+set build_options {nodebug optimize=-O1}\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile srcfile\n+    global build_options\n+    declare_labels lines_label callee_subprog_label cu_label\n+\n+    get_func_info func \"$build_options additional_flags=-DWITHMAIN\"\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C}\n+\t    {name \"<artificial>\"}\n+\t} {\n+\t    imported_unit {\n+\t\t{import %$cu_label}\n+\t    }\n+\t}\n+    }\n+\n+    cu {} {\n+\tcu_label: compile_unit {\n+\t    {producer \"gcc\"}\n+\t    {language @DW_LANG_C}\n+\t    {name ${srcfile}}\n+\t    {comp_dir \"/tmp\"}\n+\t    {low_pc 0 addr}\n+\t    {stmt_list ${lines_label} DW_FORM_sec_offset}\n+\t} {\n+\t    callee_subprog_label: subprogram {\n+\t\t{external 1 flag}\n+\t\t{name callee}\n+\t\t{inline 3 data1}\n+\t    }\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name func}\n+\t\t{low_pc $func_start addr}\n+\t\t{high_pc \"$func_start + $func_len\" addr}\n+\t    } {\n+\t    }\n+\t}\n+    }\n+\n+    lines {version 2 default_is_stmt 1} lines_label {\n+\tinclude_dir \"/tmp\"\n+\tfile_name \"$srcfile\" 1\n+\n+\tprogram {\n+\t    {DW_LNE_set_address line_label_1}\n+\t    {DW_LNS_advance_line 15}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_2}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_3}\n+\t    {DW_LNS_advance_line 4}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_4}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNS_advance_line -4}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_5}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_6}\n+\t    {DW_LNS_advance_line 1}\n+\t    {DW_LNS_negate_stmt}\n+\t    {DW_LNS_copy}\n+\n+\t    {DW_LNE_set_address line_label_7}\n+\t    {DW_LNE_end_sequence}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file $srcfile3] $build_options] } {\n+    return -1\n+}\n+\n+gdb_reinitialize_dir /tmp\n+\n+# Using an absolute path is important to see the bug.\n+gdb_test \"break /tmp/${srcfile}:19\" \"Breakpoint .* file $srcfile, line .*\""
    }
  ]
}