{
  "sha": "00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDBlNDlkZmYyMDQyMWUwZjhmMjhlZTc0Y2VjMTJhMGJhZThmMWI4Mg==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-20T13:08:29Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-02-20T13:08:29Z"
    },
    "message": "Stop the BFD library from automatically converting OS and PROC specific symbol section indicies to SHN_ABS, and provide a hook for backends to decide how such indicies should be processed.\n\n\t* elf-bfd.h (struct elf_backend_data): Add symbol_section_index\n\tcallback.\n\t* elfxx-target.h (elf_backend_symbol_section_index): Provide\n\tdefault definition.\n\t(elfNN_bed): Initialise the symbol_section_index field.\n\t* elf.c (swap_out_syms): Call symbol_section_index, if defined, on\n\tOS and PROC specific section indicies.  Warn if converting other\n\treserved incidies to SHN_ABS.",
    "tree": {
      "sha": "b5ad074f9e41fd5fdcdfae88cfac0c517b4a79f8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b5ad074f9e41fd5fdcdfae88cfac0c517b4a79f8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d13c7322fe1266984024644154003a19664610ea",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d13c7322fe1266984024644154003a19664610ea",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d13c7322fe1266984024644154003a19664610ea"
    }
  ],
  "stats": {
    "total": 41,
    "additions": 40,
    "deletions": 1
  },
  "files": [
    {
      "sha": "6ee734c4fc9797211f71c79b5104565286585fcf",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
      "patch": "@@ -1,3 +1,14 @@\n+2020-02-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* elf-bfd.h (struct elf_backend_data): Add symbol_section_index\n+\tcallback.\n+\t* elfxx-target.h (elf_backend_symbol_section_index): Provide\n+\tdefault definition.\n+\t(elfNN_bed): Initialise the symbol_section_index field.\n+\t* elf.c (swap_out_syms): Call symbol_section_index, if defined, on\n+\tOS and PROC specific section indicies.  Warn if converting other\n+\treserved incidies to SHN_ABS.\n+\n 2020-02-19  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \tPR 25537"
    },
    {
      "sha": "7d36e23ea11161a1db67ebbcd2a36be9c460934e",
      "filename": "bfd/elf-bfd.h",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elf-bfd.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elf-bfd.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-bfd.h?ref=00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
      "patch": "@@ -1503,6 +1503,12 @@ struct elf_backend_data\n   /* Opcode representing no unwind.  */\n   int (*cant_unwind_opcode) (struct bfd_link_info *);\n \n+  /* Called when emitting an ELF symbol whoes input version had an\n+     ST_SHNDX field set to a value in the range SHN_LOPROC..SHN_HIOS.\n+     Returns the value to be installed in the ST_SHNDX field of the\n+     emitted symbol.  If not defined, the value is left unchanged.  */\n+  unsigned int (*symbol_section_index) (bfd *, elf_symbol_type *);\n+  \n   /* This is non-zero if static TLS segments require a special alignment.  */\n   unsigned static_tls_alignment;\n "
    },
    {
      "sha": "4342e847527e288791a13aaaf1d23a78166baea8",
      "filename": "bfd/elf.c",
      "status": "modified",
      "additions": 18,
      "deletions": 1,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf.c?ref=00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
      "patch": "@@ -8194,9 +8194,26 @@ swap_out_syms (bfd *abfd,\n \t\t  if (elf_symtab_shndx_list (abfd))\n \t\t    shndx = elf_symtab_shndx_list (abfd)->ndx;\n \t\t  break;\n-\t\tdefault:\n+\t\tcase SHN_COMMON:\n+\t\tcase SHN_ABS:\n \t\t  shndx = SHN_ABS;\n \t\t  break;\n+\t\tdefault:\n+\t\t  if (shndx >= SHN_LOPROC && shndx <= SHN_HIOS)\n+\t\t    {\n+\t\t      if (bed->symbol_section_index)\n+\t\t\tshndx = bed->symbol_section_index (abfd, type_ptr);\n+\t\t      /* Otherwise just leave the index alone.  */\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      if (shndx > SHN_HIOS && shndx < SHN_HIRESERVE)\n+\t\t\t_bfd_error_handler (_(\"%pB: \\\n+Unable to handle section index %x in ELF symbol.  Using ABS instead.\"),\n+\t\t\t\t\t  abfd, shndx);\n+\t\t      shndx = SHN_ABS;\n+\t\t    }\n+\t\t  break;\n \t\t}\n \t    }\n \t  else"
    },
    {
      "sha": "e9cac0a5352dd3fc8a355ac0cbf59c890aefceda",
      "filename": "bfd/elfxx-target.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elfxx-target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/00e49dff20421e0f8f28ee74cec12a0bae8f1b82/bfd/elfxx-target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elfxx-target.h?ref=00e49dff20421e0f8f28ee74cec12a0bae8f1b82",
      "patch": "@@ -769,6 +769,10 @@\n #define elf_backend_cant_unwind_opcode 0\n #endif\n \n+#ifndef elf_backend_symbol_section_index\n+#define elf_backend_symbol_section_index NULL\n+#endif\n+ \n #ifndef elf_match_priority\n #define elf_match_priority \\\n   (ELF_ARCH == bfd_arch_unknown ? 2 : ELF_OSABI == ELFOSABI_NONE ? 1 : 0)\n@@ -895,6 +899,7 @@ static struct elf_backend_data elfNN_bed =\n   elf_backend_fixup_gnu_properties,\n   elf_backend_compact_eh_encoding,\n   elf_backend_cant_unwind_opcode,\n+  elf_backend_symbol_section_index,\n   elf_backend_static_tls_alignment,\n   elf_backend_stack_align,\n   elf_backend_strtab_flags,"
    }
  ]
}