{
  "sha": "a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
  "node_id": "C_kwDOANOeidoAKGEwY2M1NjlkNTk5ZjkyYzNhOTE2OGZjZDIzYTBiMThmN2ZmNDJmMWQ",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-10-25T10:17:02Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2021-10-25T10:17:04Z"
    },
    "message": "libctf: dump: do not stop dumping types on error\n\nIf dumping of a single type fails, we obviously can't dump it; but just\nas obviously this doesn't make the other types in the types section\ninvalid or undumpable.  So we should not propagate errors seen when\ntype-dumping, but rather ignore them and carry on, so we dump as many\ntypes as we can (leaving out the ones we can't grok).\n\nlibctf/ChangeLog\n2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n\n\t* ctf-dump.c (ctf_dump_type): Do not abort on error.",
    "tree": {
      "sha": "cc5607eb8257ee863fb87845c4286027f420e98b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/cc5607eb8257ee863fb87845c4286027f420e98b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "10909ea819417549886daf2fea983cc42cd6c734",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/10909ea819417549886daf2fea983cc42cd6c734",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/10909ea819417549886daf2fea983cc42cd6c734"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 14,
    "deletions": 4
  },
  "files": [
    {
      "sha": "879e128126af14f4a0c9967044e55c4b6c195c93",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
      "patch": "@@ -1,3 +1,7 @@\n+2021-10-25  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_type): Do not abort on error.\n+\n 2021-09-27  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-lookup.c (ctf_lookup_by_name_internal): Fix pptrtab bounds."
    },
    {
      "sha": "b6af0dfe419a35dd402cf198d3ae46750100f8b9",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=a0cc569d599f92c3a9168fcd23a0b18f7ff42f1d",
      "patch": "@@ -564,7 +564,6 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n {\n   char *str;\n   char *indent;\n-  int err = 0;\n   ctf_dump_state_t *state = arg;\n   ctf_dump_membstate_t membstate = { &str, state->cds_fp, NULL };\n \n@@ -619,9 +618,8 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n \n \t  if (asprintf (&bit, \"%s: %i\\n\", enumerand, value) < 0)\n \t    {\n-\t      err = ENOMEM;\n \t      ctf_next_destroy (it);\n-\t      goto err;\n+\t      goto oom;\n \t    }\n \t  str = str_append (str, bit);\n \t  free (bit);\n@@ -648,7 +646,15 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n  err:\n   free (indent);\n   free (str);\n-  return ctf_set_errno (state->cds_fp, err);\n+\n+  /* Swallow the error: don't cause an error in one type to abort all\n+     type dumping.  */\n+  return 0;\n+\n+ oom:\n+  free (indent);\n+  free (str);\n+  return ctf_set_errno (state->cds_fp, ENOMEM);\n }\n \n /* Dump the string table into the cds_items.  */"
    }
  ]
}