{
  "sha": "606decb27ef7a408bcd701b014af6a56080fe90a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjA2ZGVjYjI3ZWY3YTQwOGJjZDcwMWIwMTRhZjZhNTYwODBmZTkwYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-06T01:27:43Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-11-06T01:27:43Z"
    },
    "message": "Remove objfile parameter from abbrev_table::read\n\nIn a longer series that I am working on, I needed to remove the\nobjfile parameter from abbrev_table::read.  It seemed to me that this\nwas a simple and relatively harmless patch, so I'm sending it now.\n\ngdb/ChangeLog\n2020-11-05  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.c (read_cutu_die_from_dwo)\n\t(cutu_reader::cutu_reader, cutu_reader::cutu_reader)\n\t(build_type_psymtabs_1): Update.\n\t* dwarf2/abbrev.h (struct abbrev_table): Remove objfile\n\tparameter.\n\t* dwarf2/abbrev.c (abbrev_table::read): Remove objfile parameter.\n\tDon't read section.  Add assert.",
    "tree": {
      "sha": "debb826f4b2cd75591345b2eab0bfb73abdc782b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/debb826f4b2cd75591345b2eab0bfb73abdc782b"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/606decb27ef7a408bcd701b014af6a56080fe90a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606decb27ef7a408bcd701b014af6a56080fe90a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/606decb27ef7a408bcd701b014af6a56080fe90a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606decb27ef7a408bcd701b014af6a56080fe90a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7ef63c9507e45db8c1dac4eed6a4ae21bf6489d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7ef63c9507e45db8c1dac4eed6a4ae21bf6489d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/7ef63c9507e45db8c1dac4eed6a4ae21bf6489d9"
    }
  ],
  "stats": {
    "total": 39,
    "additions": 26,
    "deletions": 13
  },
  "files": [
    {
      "sha": "8a05f20ca905c6104adf445de1df2cb9a1691dfa",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=606decb27ef7a408bcd701b014af6a56080fe90a",
      "patch": "@@ -1,3 +1,13 @@\n+2020-11-05  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.c (read_cutu_die_from_dwo)\n+\t(cutu_reader::cutu_reader, cutu_reader::cutu_reader)\n+\t(build_type_psymtabs_1): Update.\n+\t* dwarf2/abbrev.h (struct abbrev_table): Remove objfile\n+\tparameter.\n+\t* dwarf2/abbrev.c (abbrev_table::read): Remove objfile parameter.\n+\tDon't read section.  Add assert.\n+\n 2020-11-04  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-typeprint.c (ada_print_type): Handle __XVL fields."
    },
    {
      "sha": "9067df07659ea3e9a2b62c17e8cafb395e64ed01",
      "filename": "gdb/dwarf2/abbrev.c",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/abbrev.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/abbrev.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/abbrev.c?ref=606decb27ef7a408bcd701b014af6a56080fe90a",
      "patch": "@@ -91,8 +91,7 @@ abbrev_table::add_abbrev (struct abbrev_info *abbrev)\n /* Read in an abbrev table.  */\n \n abbrev_table_up\n-abbrev_table::read (struct objfile *objfile,\n-\t\t    struct dwarf2_section_info *section,\n+abbrev_table::read (struct dwarf2_section_info *section,\n \t\t    sect_offset sect_off)\n {\n   bfd *abfd = section->get_bfd_owner ();\n@@ -104,7 +103,8 @@ abbrev_table::read (struct objfile *objfile,\n \n   abbrev_table_up abbrev_table (new struct abbrev_table (sect_off));\n \n-  section->read (objfile);\n+  /* Caller must ensure this.  */\n+  gdb_assert (section->readin);\n   abbrev_ptr = section->buffer + to_underlying (sect_off);\n   abbrev_number = read_unsigned_leb128 (abfd, abbrev_ptr, &bytes_read);\n   abbrev_ptr += bytes_read;"
    },
    {
      "sha": "d52d00b42bfd8abe65bfc57d3cd03f609dc9ce7e",
      "filename": "gdb/dwarf2/abbrev.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/abbrev.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/abbrev.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/abbrev.h?ref=606decb27ef7a408bcd701b014af6a56080fe90a",
      "patch": "@@ -55,8 +55,11 @@ typedef std::unique_ptr<struct abbrev_table> abbrev_table_up;\n \n struct abbrev_table\n {\n-  static abbrev_table_up read (struct objfile *objfile,\n-\t\t\t       struct dwarf2_section_info *section,\n+  /* Read an abbrev table from the indicated section, at the given\n+     offset.  The caller is responsible for ensuring that the section\n+     has already been read.  */\n+\n+  static abbrev_table_up read (struct dwarf2_section_info *section,\n \t\t\t       sect_offset sect_off);\n \n   /* Look up an abbrev in the table."
    },
    {
      "sha": "dbf0a3e25b93999d7dc17600e559d70bcb6e960b",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606decb27ef7a408bcd701b014af6a56080fe90a/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=606decb27ef7a408bcd701b014af6a56080fe90a",
      "patch": "@@ -6926,9 +6926,9 @@ read_cutu_die_from_dwo (dwarf2_cu *cu,\n       dwo_unit->length = cu->header.get_length ();\n     }\n \n+  dwo_abbrev_section->read (objfile);\n   *result_dwo_abbrev_table\n-    = abbrev_table::read (objfile, dwo_abbrev_section,\n-\t\t\t  cu->header.abbrev_sect_off);\n+    = abbrev_table::read (dwo_abbrev_section, cu->header.abbrev_sect_off);\n   init_cu_die_reader (result_reader, cu, section, dwo_unit->dwo_file,\n \t\t      result_dwo_abbrev_table->get ());\n \n@@ -7216,9 +7216,9 @@ cutu_reader::cutu_reader (dwarf2_per_cu_data *this_cu,\n     gdb_assert (cu->header.abbrev_sect_off == abbrev_table->sect_off);\n   else\n     {\n+      abbrev_section->read (objfile);\n       m_abbrev_table_holder\n-\t= abbrev_table::read (objfile, abbrev_section,\n-\t\t\t      cu->header.abbrev_sect_off);\n+\t= abbrev_table::read (abbrev_section, cu->header.abbrev_sect_off);\n       abbrev_table = m_abbrev_table_holder.get ();\n     }\n \n@@ -7360,9 +7360,9 @@ cutu_reader::cutu_reader (dwarf2_per_cu_data *this_cu,\n       return;\n     }\n \n+  abbrev_section->read (objfile);\n   m_abbrev_table_holder\n-    = abbrev_table::read (objfile, abbrev_section,\n-\t\t\t  m_new_cu->header.abbrev_sect_off);\n+    = abbrev_table::read (abbrev_section, m_new_cu->header.abbrev_sect_off);\n \n   init_cu_die_reader (this, m_new_cu.get (), section, dwo_file,\n \t\t      m_abbrev_table_holder.get ());\n@@ -7862,9 +7862,9 @@ build_type_psymtabs_1 (dwarf2_per_objfile *per_objfile)\n \t  || tu.abbrev_offset != abbrev_offset)\n \t{\n \t  abbrev_offset = tu.abbrev_offset;\n+\t  per_objfile->per_bfd->abbrev.read (per_objfile->objfile);\n \t  abbrev_table =\n-\t    abbrev_table::read (per_objfile->objfile,\n-\t\t\t\t&per_objfile->per_bfd->abbrev, abbrev_offset);\n+\t    abbrev_table::read (&per_objfile->per_bfd->abbrev, abbrev_offset);\n \t  ++tu_stats->nr_uniq_abbrev_tables;\n \t}\n "
    }
  ]
}