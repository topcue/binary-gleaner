{
  "sha": "d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDVjMDRlMWJmODFjMDZhYjVjMzBlNjllYjQxYjVjZWE5MTM2YTEwOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-01-01T10:53:15Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-01-01T10:55:40Z"
    },
    "message": "ChangeLog rotation",
    "tree": {
      "sha": "5d70b7bd863fc133ee6827966b117d308bbc0f03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5d70b7bd863fc133ee6827966b117d308bbc0f03"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "66d91b39089d606c9589673a7c5419cf37e7d639",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/66d91b39089d606c9589673a7c5419cf37e7d639",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/66d91b39089d606c9589673a7c5419cf37e7d639"
    }
  ],
  "stats": {
    "total": 42994,
    "additions": 21560,
    "deletions": 21434
  },
  "files": [
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 4937,
      "changes": 4939,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "370466f13750bcaa4fd52e43918216b7e32c9f45",
      "filename": "bfd/ChangeLog-2018",
      "status": "added",
      "additions": 4949,
      "deletions": 0,
      "changes": 4949,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/bfd/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/bfd/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 1546,
      "changes": 1548,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,1550 +1,6 @@\n-2018-12-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/23900\n-\t* readelf.c (get_segment_type): Support PT_GNU_PROPERTY.\n-\t(decode_x86_isa): Don't check GNU_PROPERTY_X86_UINT32_VALID.\n-\t(decode_x86_feature_1): Likewise.\n-\t(decode_x86_feature_2): Likewise.\n-\t(print_gnu_property_note): Remove GNU_PROPERTY_X86_UINT32_VALID\n-\tcheck.\n-\t* testsuite/binutils-all/i386/empty.d: Updated.\n-\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.s: Change\n-\tGNU_PROPERTY_X86_ISA_1_USED bits to 0x7fffffff.\n-\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n-\n-2018-12-13  Sam Tebbs  <sam.tebbs@arm.com>\n-\n-\t* dwarf.c (read_cie):  Add check for 'B'.\n-\n-2018-12-11  Nick Clifton  <nickc@redhat.com>\n-\n-\t* NEWS: Note that recursion limit has increased to 2048.\n-\t* doc/binutils.texi: Likewise.\n-\n-2018-12-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* strings.c (unget_part_char): New function.\n-\t(print_strings): Use unget_part_char.  Formatting.\n-\t* testsuite/binutils-all/strings.exp (test_multibyte): Don't\n-\tuse square brackets in fail message.  Expect \"String1\\nString2\".\n-\n-2018-12-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* nm.c (display_rel_file): Use xrealloc to increase minisyms\n-\tfor synthetic symbols.\n-\n-2018-12-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* addr2line.c (demangle_flags): New static variable.\n-        (long_options): Add --recurse-limit and --no-recurse-limit.\n-        (translate_address): Pass demangle_flags to bfd_demangle.\n-        (main): Handle --recurse-limit and --no-recurse-limit options.\n-        * cxxfilt.c: (long_options): Add --recurse-limit and\n-\t--no-recurse-limit.\n-        (main): Handle new options.\n-        * nm.c (demangle_flags): New static variable.\n-        (long_options): Add --recurse-limit and --no-recurse-limit.\n-        (main): Handle new options.\n-        * objdump.c (demangle_flags): New static variable.\n-        (usage): Add --recurse-limit and --no-recurse-limit.\n-        (long_options): Likewise.\n-        (objdump_print_symname): Pass demangle_flags to bfd_demangle.\n-        (disassemble_section): Likewise.\n-        (dump_dymbols): Likewise.\n-        (main): Handle new options.\n-        * prdbg.c (demangle_flags): New static variable.\n-        (tg_variable): Pass demangle_flags to demangler.\n-        (tg_start_function): Likewise.\n-        * stabs.c (demangle_flags): New static variable.\n-        (stab_demangle_template): Pass demangle_flags to demangler.\n-        (stab_demangle_v3_argtypes): Likewise.\n-        (stab_demangle_v3_arg): Likewise.\n-\t* doc/binutuls.texi: Document new command line options.\n-\t* NEWS: Mention the new feature.\n-        * testsuite/config/default.exp (CXXFILT): Define if not already\n-        defined.\n-        (CXXFILTFLAGS): Likewise.\n-        * testsuite/binutils-all/cxxfilt.exp: New file.  Runs a few\n-        simple tests of the cxxfilt program.\n-\n-2018-12-03  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23941\n-\t* testsuite/binutils-all/i386/compressed-1a.d: Update expected output.\n-\t* testsuite/binutils-all/x86-64/compressed-1a.d: Likewise.\n-\n-2018-12-01  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23946\n-\t* readelf.c (slurp_ia64_unwind_table): Bounds check symbol index\n-\ton reloc.\n-\t(slurp_hppa_unwind_table): Likewise.\n-\n-2018-12-01  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23945\n-\t* readelf.c (slurp_ia64_unwind_table): Don't call elf_ia64_reloc_type\n-\tneedlessly.\n-\t(slurp_hppa_unwind_table): Use same range checks and error messages\n-\tas slurp_ia64_unwind_table.\n-\n-2018-11-29  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23931\n-\t* objdump.c (dump_relocs_in_section): When checking for an\n-\tunreasonable amount of relocs in a bfd, allow for the fact that\n-\tthe internal representation of a reloc may be bigger than the\n-\texternal representation.\n-\n-2018-11-27  Mark Wielaard  <mark@klomp.org>\n-\n-\tPR binutils/23919\n-\t* readelf.c (dump_sections_as_strings): Remove bogus addralign check.\n-\t(dump_sections_as_bytes): Likewise.\n-\t(load_specific_debug_sections): Likewise.\n-\t* testsuite/binutils-all/dw2-3.rS: Adjust alignment.\n-\t* testsuite/binutils-all/dw2-3.rt: Likewise.\n-\n-2018-11-20  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23898\n-\t* testsuite/lib/binutils-common.exp (prune_warnings_extra):\n-\tPrune gaps in build notes.\n-\n-2018-11-13  Francois H. Theron <francois.theron@netronome.com>\n-\n-\t* testsuite/binutils-all/nfp/test1.d: Test for swapped operand crc[].\n-\n-\n-2018-11-09  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n-\n-\t* configure: Regenerate.\n-\n-2018-11-09  Mathias   <m4tze@exitno.de>\n-\n-\t* strings.c (print_strings): Check for multibyte encodings.\n-\t* binutils-all/strings-1.bin: New file.  Test binary for string decoding.\n-\t* testsuite/binutils-all/strings.exp: New file.  Test the strings program.\n-\t* testsuite/config/default.exp (STRINGS): Define if not provided\n-\tby the environment.\n-\t(STRINGSFLAGS): Likewise.\n-\n-2018-11-07  Masatake Yamato  <yamato@redhat.com>\n-\n-\t* objdump.c (long_options): Have the --disassemble option take an\n-\toptional argument.\n-\t(usage): Add description for the `symbol' argument to the\n-\t--disassemble option.\n-\t(disasm_sym): New file private variable.\n-\t(struct objdump_disasm_info): New field `symbol'.\n-\t(disassemble_section): Introduce `do_print' local variable\n-\tto control whether objdump displays the result of disassembling\n-\tfor a symbol or not.\n-\t(main): Set `symbol' file private variable if the option argument\n-\tfor the --disassemble option is given.\n-\t* doc/binutils.texi (objdump): Add description for the option\n-\targument.\n-\t* NEWS: Mention the new feature.\n-\t* testsuite/binutils-all/objdump.exp: Add tests of the -d and\n-\t--disassemble=<symbol> options.\n-\t* testsuite/binutils-all/bintest.s: Add more symbols and code.\n-\t* testsuite/binutils-all/readelf.s: Update expected output.\n-\t* testsuite/binutils-all/readelf.ss-64: Likewise.\n-\t* testsuite/binutils-all/readelf.ss-mips: Likewise.\n-\t* testsuite/binutils-all/readelf.ss-tmips: Likewise.\n-\n-2018-11-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt.po: Updated Portuguese translation.\n-\n-2018-11-06  Roman Bolshakov  <r.bolshakov@yadro.com>\n-\t    Saagar Jha  <saagar@saagarjha.com>\n-\n-\tPR 23728\n-\t* od-macho.c (printf_version): New.\n-\t(dump_load_command): Use it to print version. Print sdk version. Print\n-\tversion info for watchOS and tvOS. Print LC_NOTE, LC_BUILD_VERSION.\n-\t(dump_buld_version): New.\n-\t(bfd_mach_o_platform_name): New\n-\t(bfd_mach_o_tool_name): New\n-\n-2018-11-07  Yoshinori Sato  <ysato@users.sourceforge.jp>\n-\n-\t* testsuite/lib/binutils-common.exp: Special section name\n-\tuse only rx-*-elf.\n-\n-2018-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* doc/binutils.texi: Document --enable-x86-feature and\n-\t--disable-x86-feature options for elfedit.\n-\t* elfedit.c: Include \"config.h\" and <sys/mman.h>.\n-\t(enable_x86_features): New.\n-\t(disable_x86_features): Likewise.\n-\t(update_gnu_property): Likewise.\n-\t(elf_x86_feature): Likewise.\n-\t(process_file): Call update_gnu_property on ET_EXEC or ET_DYN\n-\tfile.\n-\t(command_line_switch): Add OPTION_ENABLE_X86_FEATURE and\n-\tOPTION_DISABLE_X86_FEATURE.\n-\t(options): Add--enable-x86-feature and --disable-x86-feature.\n-\t(usage): Likewise.\n-\t(main): Handle OPTION_ENABLE_X86_FEATURE and\n-\tOPTION_DISABLE_X86_FEATURE.\n-\n-2018-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elfedit.c (update_elf_header): Move EI_MAG? check to ...\n-\t(get_file_header): Here.\n-\n-2018-11-02  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure.ac (AC_FUNC_MMAP): New.\n-\t* config.in: Regenerated.\n-\t* configure: Likewise.\n-\n-2018-11-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_section_headers): Don't warn on a zero\n-\tsh_info or sh_link for any reloc section in an executable or\n-\tshared library.  Do warn for .rel.dyn/.rela.dyn in ET_REL.\n-\n-2018-11-01  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n-\n-\t* testsuite/config/default.exp: Define LD, LDFLAGS and\n-\tld_elf_shared_opt.\n-\t* testsuite/lib/binutils-common.exp (check_shared_lib_support): Moved\n-\tfrom ld-lib.exp.\n-\t(run_dump_test): Set ld to $LD.\n-\n-2018-10-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* doc/binutils.texi (readelf): Document alternatives to the\n-\t--unwind option if it is not supported for the target\n-\tarchitecture.\n-\n-2018-10-16  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23780\n-\t* readelf.c (display_raw_attribute): Correct assertion.\n-\n-2018-10-15  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23534\n-\t* addr2line.c (main): Exit with fatal error if bfd_init\n-\treturns an unexpected value.\n-\t* ar.c (main): Likewise.\n-\t* dlltool.c (identify_dll_for_implib): Likewise.\n-\t* nm.c (main): Likewise.\n-\t* objcopy.c (main): Likewise.\n-\t* objdump.c (main): Likewise.\n-\t* size.c (main): Likewise.\n-\t* strings.c (main): Likewise.\n-\t* windmc.c (main): Likewise.\n-\t* windres.c (main): Likewise.\n-\n-2018-10-11  Jordan Rupprecht  <rupprecht@google.com>\n-\t    Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (copy_main): Issue a fata error if the\n-\t--keep-global-symbol(s) and the --globalize-symbol(s) options are\n-\tused together.\n-\t* doc/binutils.texi: Document that the two options are\n-\tincompatible.\n-\t* testsuite/binutils-all/copy-5.d: New test.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2018-10-10  Helge Deller <deller@gmx.de>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (hppa_process_unwind): Don't use eh_addr_size to\n-\tcalculate number of entries.\n-\t(slurp_hppa_unwind_table): Don't use eh_addr_size here either.\n-\n-2018-10-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* objdump.c (dump_dwarf): Set s12z eh_addr_size to 4.\n-\n-2018-10-08  Andreas Schwab  <schwab@suse.de>\n-\n-\t* readelf.c (is_32bit_pcrel_reloc): Handle R_RISCV_32_PCREL.\n-\n-2018-10-03  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt.po: Updated Portuguese translation.\n-\t* po/fr.po: Updated French translation.\n-\n-2018-09-22  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (apply_relocations): Don't return FALSE for warnings.\n-\n-2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Set the unsupported reloc number\n-\tfrom 215 to 255 for NDS32.\n-\n-2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* objcopy.c (strip_specific_buffer): New.\n-\t(strip_unneeded_buffer): Likewise.\n-\t(keep_specific_buffer): Likewise.\n-\t(localize_specific_buffer): Likewise.\n-\t(globalize_specific_buffer): Likewise.\n-\t(keepglobal_specific_buffer): Likewise.\n-\t(weaken_specific_buffer): Likewise.\n-\t(add_specific_symbols): Add an argument to return pointer to\n-\tallocated buffer.\n-\t(copy_main): Update add_specific_symbols to update pointers to\n-\tallocated buffer.  Free pointers to allocated buffer before\n-\treturn.\n-\n-2018-09-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* objcopy.c (handle_remove_section_option): Don't require a dot\n-\tafter .rela and .rel to handle a possible relocation section.\n-\t* testsuite/binutils-all/remove-relocs-07.s,\n-\t* testsuite/binutils-all/remove-relocs-07.d,\n-\t* testsuite/binutils-all/remove-relocs-08.d: New tests.\n-\t* testsuite/binutils-all/remove-relocs-01.d,\n-\t* testsuite/binutils-all/remove-relocs-04.d,\n-\t* testsuite/binutils-all/remove-relocs-05.d,\n-\t* testsuite/binutils-all/remove-relocs-06.d: Exclude mips64-openbsd.\n-\n-2018-09-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_som_format): New proc.\n-\t(run_dump_test): Correct target test for alternate .comm syntax.\n-\t(get_standard_section_names): Handle som format.\n-\t* testsuite/lib/utils-lib.exp (default_binutils_assemble_flags):\n-\tCorrect target test for alternate .comm syntax.\n-\n-2018-09-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/strip-13mips64.s: Add section flags\n-\tfor reloc section.\n-\t* testsuite/binutils-all/strip-13rel.s: Likewise.\n-\t* testsuite/binutils-all/strip-13rela.s: Likewise.\n-\t* testsuite/binutils-all/strip-14mips64.s: Likewise.\n-\t* testsuite/binutils-all/strip-14rel.s: Likewise.\n-\t* testsuite/binutils-all/strip-14rela.s: Likewise.\n-\t* testsuite/binutils-all/strip-15mips64.s: Likewise.\n-\t* testsuite/binutils-all/strip-15rel.s: Likewise.\n-\t* testsuite/binutils-all/strip-15rela.s: Likewise.\n-\n-2018-09-17  Nick Clifton  <nickc@redhat.com>\n-\n-\t* testsuite/binutils-all/compress.exp: Rename second \"objcopy\n-\tzlib-gnu compress debug sections 3\" test to \"objcopy zlib-gabi\n-\tcompress debug sections 3\" and use gabi object files instead\n-\tof gnu object files.\n-\t* testsuite/binutils-all/objcopy.exp: Add suffix to the names\n-\tof the \"ELF group\" tests.\n-\t* testsuite/binutils-all/readelf.exp (proc readelf_find_size):\n-\tAdd an iteration parameter and include it in the name of the\n-\ttest.  Update callers to include an iteration count.\n-\n-2018-09-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/add-symbol.d: Add \"section_subst: no\".\n-\t* testsuite/binutils-all/elfedit.exp: Don't set tempfile or copyfile.\n-\t* testsuite/binutils-all/symbols-1.d,\n-\t* testsuite/binutils-all/symbols-2.d,\n-\t* testsuite/binutils-all/symbols-3.d,\n-\t* testsuite/binutils-all/symbols-4.d: Quote '*' and '!'.\n-\t* testsuite/binutils-all/add-empty-section.d,\n-\t* testsuite/binutils-all/add-section.d,\n-\t* testsuite/binutils-all/elfedit.exp,\n-\t* testsuite/binutils-all/note-1.d,\n-\t* testsuite/binutils-all/pr23633.d: Add $subdir after $srcdir.\n-\t* testsuite/config/default.exp (AS, ASFLAGS): Define.\n-\t* testsuite/config/hppa.sed: Handle all common symbols.\n-\t* testsuite/lib/binutils-common.exp (run_dump_test): New proc,\n-\tmerged from three other versions.\n-\t(slurp_options, file_contents, set_file_contents): Likewise.\n-\t(big_or_little_endian, get_standard_section_names): Likewise.\n-\t* testsuite/lib/utils-lib.exp (run_dump_test): Delete.\n-\t(slurp_options, proc file_contents): Delete.\n-\t(get_standard_section_names): Delete.\n-\n-2018-09-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/copy-2.d,\n-\t* testsuite/binutils-all/copy-3.d,\n-\t* testsuite/binutils-all/copy-4.d,\n-\t* testsuite/binutils-all/elfedit-1.d,\n-\t* testsuite/binutils-all/note-1.d,\n-\t* testsuite/binutils-all/note-2-64.d,\n-\t* testsuite/binutils-all/strip-11.d,\n-\t* testsuite/binutils-all/strip-13.d,\n-\t* testsuite/binutils-all/strip-14.d,\n-\t* testsuite/binutils-all/testranges.d,\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d,\n-\t* testsuite/binutils-all/x86-64/pr23494a.d,\n-\t* testsuite/binutils-all/x86-64/pr23494b-x32.d,\n-\t* testsuite/binutils-all/x86-64/pr23494b.d,\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d,\n-\t* testsuite/binutils-all/x86-64/pr23494c.d,\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d,\n-\t* testsuite/binutils-all/x86-64/pr23494d.d,\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d,\n-\t* testsuite/binutils-all/x86-64/pr23494e.d,\n-\t* testsuite/lib/utils-lib.exp (run_dump_test): Replace not-target\n-\tand not-skip with notarget and noskip.\n-\n-2018-09-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/group-7a.d,\n-\t* testsuite/binutils-all/group-7b.d,\n-\t* testsuite/binutils-all/group-7c.d,\n-\t* testsuite/binutils-all/symbols-1.d,\n-\t* testsuite/binutils-all/symbols-2.d,\n-\t* testsuite/binutils-all/symbols-3.d,\n-\t* testsuite/binutils-all/symbols-4.d: Remove DUMPPROG.\n-\n-2018-09-14  Alan Modra  <amodra@gmail.com>\n-\n-\tPR binutils/23633\n-\t* testsuite/binutils-all/pr23633.d: Don't fail when assembler\n-\tgenerates sections other than .text.\n-\n-2018-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23633\n-\t* testsuite/binutils-all/objcopy.exp: Run pr23633.\n-\t* testsuite/binutils-all/pr23633.d: New file.\n-\t* testsuite/binutils-all/pr23633.list: Likewise.\n-\t* testsuite/binutils-all/pr23633.s: Likewise.\n-\n-2018-09-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23633\n-\t* objcopy.c (add_specific_symbols): Do not free the buffer at the\n-\tend of the function.\n-\n-2018-09-10  Alan Modra  <amodra@gmail.com>\n-\n-\tPR binutils/23611\n-\t* objcopy.c (handle_remove_section_option): Consider .rela and\n-\t.rel sections for stripping directly as well as attached to the\n-\tassociated section they relocate.\n-\t* doc/binutils.texi (remove-relocations): Specify that this\n-\toption removes non-dynamic relocation sections.\n-\t* testsuite/binutils-all/objcopy.exp\n-\t(objcopy_remove_relocations_from_executable): New test.\n-\n-2018-09-03  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/ja.po: Updated Japanese translation.\n-\n-2018-08-31  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/readelf.s-64: Adjusted for\n-\t.note.gnu.property section.\n-\t* testsuite/binutils-all/strip-3.d: Also strip\n-\t.note.gnu.property section.\n-\n-2018-08-31  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/i386/compressed-1b.d: Pass\n-\t-mx86-used-note=no to assembler.\n-\t* testsuite/binutils-all/i386/compressed-1c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/compressed-1b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/compressed-1c.d: Likewise.\n-\t* testsuite/binutils-all/i386/empty.d: Pass -mx86-used-note=yes\n-\tto assembler and update expected output from \"readelf -n\".\n-\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n-\n-2018-08-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (process_section_headers): Treat SHT_FINI_ARRAY and\n-\tSHT_PREINIT_ARRAY as relocatable sections.\n-\n-2018-08-30  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* MAINTAINERS: Add myself as a MIPS port maintainer.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* NEWS: Mention Loongson 2K1000 proccessor support.\n-\t* readelf.c (get_machine_flags): Handle gs264e.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* NEWS: Mention Loongson 3A2000/3A3000 proccessor support.\n-\t* readelf.c (get_machine_flags): Handle gs464e.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* NEWS: Mention Loongson 3A1000 proccessor support.\n-\t* readelf.c (get_machine_flags): Rename loongson-3a to gs464.\n-\t(print_mips_isa_ext): Delete AFL_EXT_LOONGSON_3A.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* readelf.c (print_mips_ases): Add Loongson EXT2 extension.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t * readelf.c (print_mips_ases): Add Loongson EXT extension.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* readelf.c (print_mips_ases): Add CAM extension.\n-\n-2018-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (decode_x86_isa): Print <None> if bitmask only\n-\tcontains the GNU_PROPERTY_X86_UINT32_VALID bit.\n-\t(decode_x86_feature_1): Likewise.\n-\t(decode_x86_feature_2): Likewise.\n-\t(print_gnu_property_note): Don't mask out the\n-\tGNU_PROPERTY_X86_UINT32_VALID bit.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\n-2018-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (decode_x86_compat_isa): Break multi-statement line.\n-\t(decode_x86_isa): Likewise.\n-\t(decode_x86_feature_2): Likewise.\n-\n-2018-08-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/23499\n-\t* readelf.c (get_symbol_version_string): Return _(\"<corrupt>\")\n-\tfor corrupt symbol version info.\n-\n-2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (decode_x86_compat_isa): New function.\n-\t(decode_x86_feature_2): Likewise.\n-\t(decode_x86_isa): Updated for new X86_ISA_1_XXX bits.\n-\t(decode_x86_feature): Renamed to ...\n-\t(decode_x86_feature_1): This.  Remove the type argument.\n-\t(print_gnu_property_note): Handle X86_COMPAT_ISA_1_USED,\n-\tX86_COMPAT_ISA_1_NEEDED, X86_UINT32_AND_LO, X86_UINT32_AND_HI,\n-\tX86_UINT32_OR_LO, X86_UINT32_OR_HI, X86_UINT32_OR_AND_LO and\n-\tX86_UINT32_OR_AND_HI instead of X86_ISA_1_USED, X86_ISA_1_NEEDED\n-\tand X86_FEATURE_1_AND.\n-\t* testsuite/binutils-all/i386/pr21231b.s: Updated to the current\n-\tGNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED\n-\tvalues.\n-\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.s: Likewise.\n-\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n-\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\n-2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (print_gnu_property_note): Check the\n-\tGNU_PROPERTY_X86_UINT32_VALID bit for invalid GNU property note.\n-\n-2018-08-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_ppc64_symbol_other): Return NULL if st_other\n-\tfield contains unrecognised or reserved values.  Handle\n-\tlocalentry:1 value.\n-\n-2018-08-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/23536\n-\t* Makefile.am (development.exp): New target.\n-\t(EXTRA_DEJAGNU_SITE_CONFIG): New.\n-\t(DISTCLEANFILES): Add development.exp.\n-\t* Makefile.in: Regenerated.\n-\t* testsuite/binutils-all/objcopy.exp (strip_test): Call\n-\tprune_warnings to prune BFD output.\n-\t(strip_test_with_saving_a_symbol): Likewise.\n-\t(objcopy_test_without_global_symbol): Likewise.\n-\t* testsuite/lib/binutils-common.exp (prune_warnings_extra):\n-\tNew proc.\n-\t(prune_warnings): Likewise.\n-\n-2018-08-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* README-how-to-make-a-release: Document setting \"experimental\"\n-\tto false.\n-\n-2018-08-22  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (process_file_header): Assign updated values from\n-\tsection_header[0] fields to e_phnum, e_shnum and e_shstrndx\n-\tduring printing of header.  Correct e_shstrndx range check.\n-\tRemove unnecessary casts and use %u rather than %ld for\n-\tunsigned int header fields.  Don't print a random %lx when\n-\treporting an unknown EI_VERSION.\n-\n-2018-08-21  Nick Clifton  <nickc@redhat.com>\n-\n-\t* MAINTAINERS: Note that Arnold Metselaar has retired as the z80\n-\tmaintainer.\n-\n-2018-08-21  L. Simon  <l.simon@samsung.com>\n-\n-\tPR 23531\n-\t* readelf.c (hppa_process_unwind): Only dump the unwind table if\n-\tthe data was successfully read in.\n-\n-2018-08-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_elf64): Use directory of\n-\tinput file for readelf.out.\n-\t(is_rela): New proc.\n-\t* testsuite/binutils-all/objcopy.exp (elf64): Set new variable\n-\tfrom first result of is_elf64 test.\n-\t(reloc_format): Set using is_rela.\n-\t(strip-13): Pass RELOC and ELF64 to assembler.\n-\t(strip-14, strip-15): Use elf64 rather than calling is_elf64 again.\n-\t* testsuite/binutils-all/strip-13.d: Run for more targets.\n-\t* testsuite/binutils-all/strip-13mips64.s: Use RELOC and set\n-\taddend to zero.\n-\t* testsuite/binutils-all/strip-13rel.s: Use RELOC and ELF64.\n-\tDon't add _NONE reloc.\n-\t* testsuite/binutils-all/strip-13rela.s: Likewise.\n-\n-2018-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23494\n-\t* testsuite/binutils-all/x86-64/pr23494c.s: New file.\n-\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n-\n-2018-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Skip nacl\n-\ttargets.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\n-2018-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23494\n-\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: New file.\n-\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n-\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n-\n-2018-08-08  Kevin Buettner  <kevinb@redhat.com>\n-\n-\t* dwarf.c (decode_location_expresion): Add case for\n-\tDW_OP_GNU_variable_value.\n-\n-2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* readelf.c (display_arc_attribute): Print Tag_ARC_ATR_version.\n-\n-2018-08-03  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (merge_gnu_build_notes): Delete empty notes.  Merge\n-\tidentical function notes.\n-\n-2018-08-01  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add note about regenerating the\n-\tinfo files prior to the release.\n-\n-2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n-\n-\t* MAINTAINERS (C-SKY): Add Yunhai Shang as co-maintainer.\n-\n-2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n-\n-\t* MAINTAINERS (C-SKY): Add Lifang Xia as maintainer.\n-\n-2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n-\n-\t* readelf.c: Include elf/csky.h.\n-\t(guess_is_rela): Handle EM_CSKY.\n-\t(dump_relocations): Likewise.\n-\t(get_machine_name): Likewise.\n-\t(is_32bit_abs_reloc): Likewise.\n-\n-2018-07-25  Nick Clifton  <nickc@redhat.com>\n-\n-\t* rdcoff.c (parse_coff_struct_type): Free fields array upon early\n-\texit.\n-\t(parse_coff_enum_type): Free names and vals arrays upon early\n-\texit.\n-\t* rddbg.c (read_section_stabs_debugging_info): Free shandle and\n-\tstrings and stabs arrays upon early exit.\n-\t* readelf.c (get_32bit_section_headers): Free shdrs structure upon\n-\tearly exit.\n-\t(get_64bit_section_headers): Likewise.\n-\t(get_32bit_elf_symbols): Generate an error if multiple symbol\n-\ttable index sections are associated with the same symbol section.\n-\t(get_64bit_elf_symbols): Likewise.\n-\t(process_dynamic_section): Generate an error if there are multiple\n-\tdynamic symbol table sections, multiple dynamic string tables or\n-\tmultiple dynamic symbol information sections.\n-\n-2018-07-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2018-07-24  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23431\n-\t* dwarf.c (display_formatted_table): Replace \"what\" parameter\n-\twith \"is_dir\".  Expand messages.  Fix capitalisation.\n-\t* testsuite/binutils-all/dw5.W: Update expected output.\n-\n-2018-07-24  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23430\n-\t* elfcomm.h (struct archive_info): Rename uses_64bit_indicies\n-\tto uses_64bit_indices.\n-\t* elfcomm.c (setup_archive): Update uses of above.\n-\t* readelf.c (process_archive): Likewise.\n-\t(get_section_type_name): Rename indicies to indices.\n-\t(get_32bit_elf_symbols, get_64bit_elf_symbols): Likewise.\n-\t(process_section_groups): Likewise.\n-\n-2018-07-20  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* MAINTAINERS: Update my e-mail address, downgrade to MIPS I-IV\n-\tISA maintenance.\n-\n-2018-07-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (add_specific_symbols): Free buffer on exit.\n-\t(add_redefine_syms_file): Close file handle on exit.\n-\t(copy_object): Close file handle on early exit.\n-\tFree buffer on early exit.\n-\tFree gaps buffers once they are no longer needed.\n-\t* dwarf.c (display_debug_frames): Free allocated memory on exit.\n-\t(load_separate_debug_info): Free allocate memory on early exit.\n-\n-2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\t    Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* readelf.c (print_mips_ases): Add MMI extension.\n-\n-2018-07-19  DJ Delorie  <dj@redhat.com>\n-\n-\t* MAINTAINERS (RL78, RX): Remove myself as maintainer.\n-\n-2018-07-19  Nick Clifton  <nickc@redhat.com>\n-\n-\t* dwarf.c (read_cie): Free allocated memory before returning with\n-\ta failure result.\n-\n-2018-07-16  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>\n-\n-\t* readelf.c (get_note_type): Fix typo in NT_PPC_TM_CVSX note\n-\tdescription.\n-\n-2018-07-16  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add note to check for new top\n-\tlevel files and add them to the src-release.sh script.\n-\n-2018-07-14  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Updated with corrections based on\n-\tthe 2.31 release experience.\n-\n-2018-07-12  Francois H. Theron  <francois.theron@netronome.com>\n-\n-\t* readelf.c (process_section_headers): Don't print section type\n-\ttwice for --section-details.\n-\n-2018-07-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (supports_gnu_unique): Return\n-\tzero for xgate.\n-\n-2018-07-06  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (same_section): New function.\n-\t(print_gnu_build_attribute_description): Do not complain about\n-\tgaps that cross a section boundary.\n-\n-2018-07-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/bg.po: Updated Bulgarian translation.\n-\n-2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* NEWS: Use command-line consistently when used in a compount word.\n-\t* doc/binutils.texi: Likewise and fix trailing whitespace on same\n-\tline.\n-\n-2018-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2018-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* doc/binutils.texi: Fix spelling mistakes.\n-\t* README--how-to-make-a-release: Likewise.\n-\n-2018-06-25  Tom Tromey  <tom@tromey.com>\n-\n-\t* dwarf-mode.el (dwarf-mode-syntax-table): New variable.\n-\tBump version number.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Update with experiences from\n-\tmaking 2.31 branch.\n-\t* po/binutils.pot: Regenerate.\n-\t* configure: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\t* NEWS: Add marker for 2.31.\n-\n-2018-06-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* doc/Makefile.am (AUTOMAKE_OPTIONS): Add \"foreign\".\n-\t* doc/Makefile.in: Regenerate.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* configure.ac: Remove AC_PREREQ.\n-\t* doc/Makefile.am (AUTOMAKE_OPTIONS): Remove cygnus, add\n-\tinfo-in-builddir no-texinfo.tex.\n-\t* Makefile.in: Re-generate.\n-\t* aclocal.m4: Re-generate.\n-\t* config.in: Re-generate.\n-\t* configure: Re-generate.\n-\t* doc/Makefile.in: Re-generate.\n-\n-2018-06-19  Andreas Schwab  <schwab@suse.de>\n-\n-\t* readelf.c (is_16bit_abs_reloc): Handle R_RISCV_SET16.\n-\t(is_8bit_abs_reloc): New function.\n-\t(is_6bit_abs_reloc): New function.\n-\t(is_6bit_inplace_sub_reloc): New function.\n-\t(apply_relocations): Use them.  Handle 6-bit relocations.\n-\n-2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* readelf.c (print_mips_ases): Add GINV extension.\n-\n-2018-06-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23267\n-\t* readelf.c (get_symbol_version_string): Check if the first\n-\tsymbol version is base version.\n-\n-2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n-\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* readelf.c (print_mips_ases): Add CRC.\n-\n-2018-06-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* doc/binutils.texi (objdump): Add missing closing square\n-\tparenthesis to listing of objcopy's command line options.\n-\n-2018-06-11  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\n-2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure: Regenerated.\n-\n-2018-05-31  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Don't\n-\tset CC_FOR_TARGET.  Run test non-native.\n-\t* testsuite/binutils-all/objdump.exp (test_build_id_debuglink):\n-\tLikewise.\n-\t(test_follow_debuglink): Run test non-native.\n-\n-2018-05-30  Ant Bikeneev  <ant.bikineev@gmail.com>\n-\n-\tPR 23107\n-\t* ar.c (display_offsets): New variable.\n-\t(usage): Add description of 'O' operator.\n-\t(decode_option): Handle 'O' operator.\n-\t(print_descr): Pass display_offsets to print_arelt_descr.\n-\t* arsup.c: Update call to printy_arelt_descr.\n-\t* objdump.c: Likewise.\n-\t* bucomm.c (print_arelt_descr): If offsets parameter is true then\n-\tdisplay offset of archive element within the archive.\n-\t* bucomm.h: Update prototype for print_arelt_descr.\n-\t* doc/binutils.texi: Update description of ar command.\n-\t* NEWS: Mention the new feature.\n-\t* testsuite/binutils-all/ar.exp: Add text of new feature.\n-\n-2018-05-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23235\n-\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Return\n-\tunsupported rather than fail on compile errors.\n-\t* testsuite/binutils-all/objdump.exp (test_build_id_debuglink):\n-\tLikewise.  Save and restore CFLAGS_FOR_TARGET.\n-\n-2018-05-18  Kito Cheng  <kito.cheng@gmail.com>\n-\n-\t* readelf.c (get_machine_flags): Handle EF_RISCV_RVE.\n-\n-2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* readelf.c: Add support for s12z architecture.\n-\t* testsuite/lib/binutils-common.exp (is_elf_format): Excluse s12z\n-\ttargets.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* doc/binutils.texi (-M): Document AArch64 options.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* doc/binutils.texi (-M): Document AArch64 options.\n-\t* NEWS: Document notes and warnings.\n-\n-2018-05-15  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_elf_format): Add chorus,\n-\tcloudabi, fuchsia, kaos and nto.  Merge netbsdelf* into *elf*,\n-\tand *uclinux* into *linux*.\n-\t* testsuite/binutils-all/objcopy.exp: Accept armeb for rel\n-\tstrip-13 test, exclude arm-vxworks and arm-windiss.\n-\n-2018-05-10  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* readelf.c (get_machine_name): EM_S12Z - handle new case.\n-\n-2018-05-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* od-macho.c (dump_unwind_encoding_x86): Fix typo in last patch.\n-\n-2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n-\n-\t* od-macho.c (dump_unwind_encoding_x86): Adjust for macro renaming.\n-\n-2018-05-08  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23141\n-\t* objcopy.c (is_strip_section): Strip groups without a valid\n-\tsignature symbol.\n-\n-2018-05-07  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23142\n-\t* objcopy.c (group_signature): Don't accept groups that use a\n-\tsymbol table other than the one we've read.\n-\n-2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n-\n-\t* readelf.c: Very basic support for EM_NFP and its section types.\n-\t* testsuite/binutils-all/nfp: New directory.\n-\t* testsuite/binutils-all/nfp/objdump.exp: New file.  Run new\n-\ttests.\n-\t* testsuite/binutils-all/nfp/test2_ctx8.d: New file.\n-\t* testsuite/binutils-all/nfp/test2_no-pc_ctx4.d: New file.\n-\t* testsuite/binutils-all/nfp/test1.d: New file.\n-\t* testsuite/binutils-all/nfp/nfp6000.nffw: New file.\n-\t* testsuite/binutils-all/nfp/test2_nfp6000.nffw: New file.\n-\t* NEWS: Mention the new support.\n-\n-2018-04-27  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/lib/binutils-common.exp (match_target): New procedure.\n-\t* testsuite/lib/utils-lib.exp (run_dump_test): Use it in place\n-\tof `istarget' for matching with `target', `not-target', `skip'\n-\tand `not-skip' options.\n-\n-2018-04-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (is_32bit_abs_reloc): Support R_PARISC_DIR32 as a\n-\t32-bit absolute reloc for the HPPA target.\n-\t* testsuite/binutils-all/note-5.d: New test.\n-\t* testsuite/binutils-all/note-5.s: Source file for new test.\n-\t* testsuite/binutils-all/objcopy.exp: Run new test.\n-\n-2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n-\n-\t* testsuite/binutils-all/elfedit-2.d: Accept arm*-*-uclinuxfdpiceabi.\n-\t* testsuite/binutils-all/elfedit-3.d: Likewise.\n-\t* testsuite/binutils-all/objcopy.exp: Likewise.\n-\t* testsuite/binutils-all/strip-3.d: Likewise.\n-\t* testsuite/lib/binutils-common.exp: Likewise.\n-\n-2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n-\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n-\n-\t* readelf.c (decode_ARM_machine_flags): Support EF_ARM_PIC.\n-\t(get_osabi_name): Support ELFOSABI_ARM_FDPIC.\n-\n-2018-04-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/arm/objdump.exp: Remove arm-aout and\n-\tarm-coff support.\n-\t* testsuite/binutils-all/objcopy.exp: Likewise.\n-\t* testsuite/lib/binutils-common.exp: Likewise.\n-\n-2018-04-18  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23062\n-\t* dwarf.c (read_and_display_attr_value): Replace assertions with\n-\ttest and warning message.\n-\n-2018-04-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp: Remove support for assorted\n-\taout targets.\n-\n-2018-04-17  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23063\n-\t* readelf.c (print_symbol): If the width is zero, return straight\n-\taway.\n-\n-\tPR 23064\n-\t* dwarf.c (process_cu_tu_index): Test for a potential buffer\n-\toverrun before copying signature pointer.\n-\n-2018-04-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c: Revert 2018-04-16 and 2018-04-11 changes.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_machine_name): Correct typo.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac: Remove arm-epoc-pe support.\n-\t* dlltool.c: Likewise.\n-\t* configure: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/lib/binutils-common.exp: Remove sparc-aout and\n-\tsparc-coff support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/copy-2.d: Remove m68k-aout and m68k-coff\n-\tsupport.\n-\t* testsuite/binutils-all/copy-3.d: Likewise.\n-\t* testsuite/binutils-all/objcopy.exp: Likewise.\n-\t* testsuite/lib/binutils-common.exp: Likewise.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Remove sh5 and sh64 support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Remove w65 support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objdump.exp: Remove we32k support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* MAINTAINERS (Mark Kettenis): Move to past maintainers.\n-\t* testsuite/binutils-all/objdump.exp: Remove m88k support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c: Remove i370 support.\n-\t* testsuite/binutils-all/objdump.exp: Likewise.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Remove h8500 support.\n-\t* testsuite/lib/binutils-common.exp: Likewise.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp: Remove h8300-coff support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove IEEE 695 support.\n-\t* budbg.h: Likewise.\n-\t* doc/binutils.texi: Likewise.\n-\t* makefile.vms: Likewise.\n-\t* objcopy.c: Likewise.\n-\t* objdump.c: Likewise.\n-\t* rddbg.c: Likewise.\n-\t* ieee.c: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/copy-2.d: Remove newsos3 support.\n-\t* testsuite/binutils-all/nm.exp: Likewise.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* .gitignore: Remove netware support.\n-\t* Makefile.am: Likewise.\n-\t* configure.ac: Likewise.\n-\t* doc/Makefile.am: Likewise.\n-\t* doc/binutils.texi: Likewise.\n-\t* testsuite/binutils-all/nm.exp: Likewise.\n-\t* nlmconv.c: Delete.\n-\t* nlmconv.h: Delete.\n-\t* nlmheader.y: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* doc/Makefile.in: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objdump.exp: Remove tahoe support.\n-\n-2018-04-14  Alan Modra  <amodra@gmail.com>\n-\n-\t* readelf.c (get_machine_name): Revert 2018-04-11 change.\n-\n-2018-04-12  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23050\n-\t* readelf.c (process_dynamic_section): Correct dynamic string\n-\ttable size calculation.\n-\n-2018-04-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* ieee.c: Remove i960 support.\n-\t* od-macho.c: Remove i860 support.\n-\t* readelf.c: Remove i860 and i960 support.\n-\t* testsuite/binutils-all/objcopy.exp: Likewise.\n-\t* testsuite/binutils-all/objdump.exp: Likewise.\n-\t* testsuite/lib/binutils-common.exp: Likewise.\n-\n-2018-04-11  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/lib/binutils-common.exp (is_elf_format): Also return\n-\t1 for `*-*-lynxos*' and `*-*-symbianelf*' targets.\n-\n-2018-04-10  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/objcopy.exp (strip-14, strip-15): Choose\n-\treloc=11 for pru and reloc=50 for nds32.\n-\t* testsuite/binutils-all/strip-15.d: Accept 0xb reloc number.\n-\n-2018-04-09  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-15.d: New test.\n-\t* testsuite/binutils-all/strip-15rel.s: New test source.\n-\t* testsuite/binutils-all/strip-15rela.s: New test source.\n-\t* testsuite/binutils-all/strip-15mips64.s: New test source.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2018-04-09  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-14.d: New test.\n-\t* testsuite/binutils-all/strip-14rel.s: New test source.\n-\t* testsuite/binutils-all/strip-14rela.s: New test source.\n-\t* testsuite/binutils-all/strip-14mips64.s: New test source.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2018-04-06  Tom Tromey  <tom@tromey.com>\n-\n-\t* dwarf.c (read_and_display_attr_value): Add missing DW_LANG\n-\tconstants from DWARF 5.\n-\n-2018-04-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/22318\n-\t* configure: Regenerated.\n-\n-2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-13mips64.s: Use `.dc.l' rather\n-\tthan `.dc.w' in second relocation.\n-\n-2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-13.d: Also expect `unsupported\n-\trelocation type 0x8f' error message.\n-\n-2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-13.s: Rename to...\n-\t* testsuite/binutils-all/strip-13rela.s: ... this.\n-\t* testsuite/binutils-all/strip-13rel.s: New test source.\n-\t* testsuite/binutils-all/strip-13mips64.s: New test source.\n-\t* testsuite/binutils-all/strip-13.d: Remove `arm-*', `d10v-*',\n-\t`dlx-*' and `xgate-*' from `not-target' list.  Add `m6811-*' and\n-\t`m68hc11-*' to `not-target' list.\n-\t* testsuite/binutils-all/objcopy.exp: Switch between sources for\n-\t`strip-13'.\n-\n-2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/strip-13.s: Use 143 (0x8f) rather than\n-\t241 (0xf1) for the relocation number and RELA addend.\n-\t* testsuite/binutils-all/strip-13.d: Remove `hppa*-*' from the\n-\t`not-target' list.\n-\n-2018-04-04  John David Anglin  <danglin@gcc.gnu.org>\n-\n-\t* MAINTAINERS: Update my e-mail address.\n-\n-2018-04-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* MAINTAINERS: Move Jason Eckhardt to past maintainers section.\n-\n-2018-03-23  Nick Clifton  <nickc@redhat.com>\n-\n-\t* readelf.c (get_symbol_for_build_attribute): Skip ARM mapping\n-\tsymbols.\n-\t(print_gnu_build_attribute_description): If no file start symbol\n-\tcould be found, look for one two bytes into the file.\n-\t* testsuite/binutils-all/note-4-64.s: Set the address of the file\n-\tstart symbol to two bytes into the file.\n-\t* testsuite/binutils-all/note-4-32.s: Likewise.\n-\n-2018-03-21  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* readelf.c (process_dynamic_section): Also dump DF_1_KMOD,\n-\tDF_1_WEAKFILTER and DF_1_NOCOMMON.\n-\n-2018-03-20  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\t* po/ru.po: Updated Russian translation.\n-\n-2018-03-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22957\n-\t* stabs.c (pop_binincl): Fail if the file index is off the end of\n-\tthe stack.\n-\n-2018-03-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22955\n-\t* stabs.c (parse_number): Add p_end parameter and use it to check\n-\tthe validity of the pp parameter.  Add checks to prevent walking\n-\toff the end of the string buffer.\n-\t(parse_stab_string): Likewise.\n-\t(parse_stab_type): Likewise.\n-\t(parse_stab_type_number): Likewise.\n-\t(parse_stab_range_type): Likewise.\n-\t(parse_stab_sun_builtin_type): Likewise.\n-\t(parse_stab_sun_floating_type): Likewise.\n-\t(parse_stab_enum_type): Likewise.\n-\t(parse_stab_struct_type): Likewise.\n-\t(parse_stab_baseclasses): Likewise.\n-\t(parse_stab_struct_fields): Likewise.\n-\t(parse_stab_cpp_abbrev): Likewise.\n-\t(parse_stab_one_struct_field): Likewise.\n-\t(parse_stab_members): Likewise.\n-\t(parse_stab_tilde_field): Likewise.\n-\t(parse_stab_array_type): Likewise.\n-\n-\t* parse_stab: Compute the end of the string and then pass it on to\n-\tindividual parser functions.\n-\n-2018-03-07  Paul Pluzhnikov  <ppluzhnikov@google.com>\n-\n-\tPR binutils/22923\n-\t* binutils/readelf.c (get_ver_flags): Expand buffer to avoid\n-\toverflow.\n-\n-2018-03-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac: Add objdump_private_desc_xcoff for rs6000.\n-\t* configure: Regenerate.\n-\n-2018-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/22911\n-\t* objdump.c (is_significant_symbol_name): Return TRUE for all\n-\t.plt* sections.\n-\t(find_symbol_for_address): Replace linear search with binary\n-\tsearch on dynamic relocations.\n-\n-2018-03-01  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22905\n-\t* dwarf.c (display_debug_ranges): Check that the offset loaded\n-\tfrom the range_entry structure is valid.\n-\n-2018-03-01  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac (ALL_LINGUAS): Add sr.  Sort.\n-\t* configure: Regenerate.\n-\n-2018-02-27  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt.po: New Portuguese translation.\n-\t* configure.ac (ALL_LINGUAS): Add pt.\n-\t* configure: Regenerate.\n-\n-2018-02-27  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22875\n-\t* objcopy.c (copy_object): Check the error status after marking\n-\tsymbols used in relocations.\n-\t* testsuite/binutils-all/strip-13.s: New test source file.\n-\t* testsuite/binutils-all/strip-13.s: New test driver file.\n-\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n-\n-2018-02-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/mips/mips-reginfo-n32.d,\n-\t* testsuite/binutils-all/mips/mips-reginfo.d: Update.\n-\n-2018-02-23  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/binutils-all/mips/mips-reginfo-n32.d,\n-\t* testsuite/binutils-all/mips/mips-reginfo.d: Update.\n-\n-2018-02-20  Ronald Hoogenboom  <hoogenboom30@zonnet.nl>\n-\n-\t* doc/binutils.texi (objcopy): Add missing closing square\n-\tparenthesis to listing of objcopy's command line options.\n-\n-2018-02-19  Matthias Klose  <doko@debian.org>\n-\n-\t* strings.c (long_options): Include-all-whitespace does not take\n-\tan extra agument.\n-\n-2018-02-13  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 22836\n-\t* testsuite/binutils-all/group-7.s,\n-\t* testsuite/binutils-all/group-7a.d,\n-\t* testsuite/binutils-all/group-7b.d,\n-\t* testsuite/binutils-all/group-7c.d: New tests.\n-\t* testsuite/binutils-all/objcopy.exp: Run them.\n-\n-2018-02-08  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22802\n-\t* dwarf.c (load_separate_debug_file): Return early if the user is\n-\tnot interested in debug links.\n-\n-2018-02-06  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22793\n-\t* readelf.c (find_section): Replace assertion with test and return\n-\tof NULL.\n-\t(find_section_by_address): Add test of section header table\n-\texistance.\n-\t(find_section_by_type): Likewise.\n-\t(find_section_in_set): Likewise.\n-\n-2018-02-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/binutils-all/mips/mips-reginfo.d: New test.\n-\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: New test.\n-\t* testsuite/binutils-all/mips/mips-reginfo.s: New test source.\n-\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n-\n-2018-02-05  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* testsuite/config/default.exp (binutils_run): Document\n-\t`binutils_run_status'.\n-\t* testsuite/lib/utils-lib.exp (default_binutils_run): Likewise,\n-\tand set it.\n-\t(run_dump_test): Add `error', `error_output', `warning' and\n-\t`warning_output' options.  Update documentation accordingly.\n-\n-2018-02-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dwarf.c (dwarf_regnames_riscv): New register name table.\n-\t(init_dwarf_regnames_riscv): New function.\n-\t(init_dwarf_regnames): Add call to initialise RiscV register\n-\tnames.\n-\t* dwarf.h (init_dwarf_regnames_riscv): Declare.\n-\t* objdump.c (dump_dwarf): Add call to initialise RiscV register\n-\tnames.\n-\n-2018-02-01  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 22769\n-\t* objdump.c (load_specific_debug_section): Check for overflow\n-\twhen adding one to section size for a string section terminator.\n-\n-2018-01-30  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22734\n-\t* doc/binutils.texi (nm): Update description to point out that\n-\tzero-initialized values can also be shown as type B, b, S or s\n-\tsince they can be stored in the BSS section.\n-\n-2018-01-30  Alan Modra  <amodra@gmail.com>\n-\n-\t* objcopy.c (merge_gnu_build_notes): Use (bfd_vma) -1 as\n-\t\"artificially large\" end address.\n-\n-2018-01-28  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add note about checking gpg key\n-\tand the results of gnupload.\n-\n-2018-01-27  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add details on how to actually\n-\tmake the release.\n-\n-2018-01-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add more details on updating\n-\tversion numbers.\n-\n-2018-01-22  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* doc/binutils.texi (objcopy): Fix a typo in `--rename-section'\n-\toption description.\n-\n-2018-01-22  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* MAINTAINERS: Update my company e-mail address.\n-\n-2018-01-22  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2018-01-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/bg.po: Updated Bulgarian translation.\n-\n-2018-01-16  Joel Brobecker  <brobecker@adacore.com>\n-\n-\t* README-how-to-make-a-release: Add reminder to update the\n-\tbranch name in gdbadmin's crontab on sourceware.\n-\n-2018-01-16  Joel Brobecker  <brobecker@adacore.com>\n-\n-\t* README-how-to-make-a-release: Remove trailing spaces.\n-\n-2018-01-16  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2018-01-15  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Update notes.\n-\t* po/binutils.pot: Regenerated.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\t* NEWS: Add marker for 2.30.\n-\n-2018-01-12  Nick Clifton  <nickc@redhat.com>\n-\n-\t* README-how-to-make-a-release: Add notes on how to make the\n-\tbranch and prelease snapshot.\n-\t* BRANCHES: Add binutils-2_29-branch.\n-\n-2018-01-10  Nick Clifton  <nickc@redhat.com>\n-\n-\t* MAINTAINERS: Note that it is now the configure.ac file and not\n-\tthe configure.in file that needs to be kept in sync with gcc.\n-\tAdd a note about sending patches for libiberty to gcc.\n-\n-2018-01-03  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (merge_gnu_build_notes): Add cast to maximum address\n-\tconstants.\n-\n-2018-01-03  Nick Clifton  <nickc@redhat.com>\n-\n-\t* objcopy.c (objcopy_internal_note): New structure.\n-\t(gap_exists): New function.\n-\t(is_open_note): New function.\n-\t(is_func_note): New function.\n-\t(is_64bit): New function.\n-\t(merge_gnu_build_notes): Handle v3 notes.  Do not merge\n-\tif there are relocations against the notes.\n-\t* readelf.c (get_note_type): Use short names for build attribute\n-\tnotes.\n-\t(print_symbol_for_build_attribute): Rename to\n-\tget_symbol_for_build_attribute.  Returns the found symbol rather\n-\tthan printing it.\n-\t(print_gnu_build_attribute_description): Maintain address ranges\n-\tfor function notes as well as global notes.  Handle v3 notes.\n-\t(print_gnu_build_attribute_name): Use more space for printing the\n-\tname in wide mode.\n-\t* testsuite/binutils-all/note-2-32.s: Use .dc.l instead of .word.\n-\tEliminate symbol references in order to remove the need for\n-\trelocations.\n-\t* testsuite/binutils-all/note-2-64.s: Likewise.\n-\t* testsuite/binutils-all/note-3-32.s: Add a size to the note_1\n-\tsymbol.\n-\t* testsuite/binutils-all/note-3-64.s: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Update expected\n-\toutput.\n-\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n-\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n-\t* testsuite/binutils-all/note-2-32.d: Likewise.\n-\t* testsuite/binutils-all/note-2-64.d: Likewise.\n-\t* testsuite/binutils-all/note-3-32.d: Likewise.\n-\t* testsuite/binutils-all/note-3-64.d: Likewise.\n-\t* testsuite/binutils-all/note-4-64.s: New test.  Checks v3 notes.\n-\t* testsuite/binutils-all/note-4-32.s: New test.\n-\t* testsuite/binutils-all/note-4-64.d: New test result file.\n-\t* testsuite/binutils-all/note-4-32.d: New test result file.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "3a251e9760502b9af58a842b9c903163a93d6ddc",
      "filename": "binutils/ChangeLog-2018",
      "status": "added",
      "additions": 1558,
      "deletions": 0,
      "changes": 1558,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/binutils/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/binutils/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,1558 @@\n+2018-12-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/23900\n+\t* readelf.c (get_segment_type): Support PT_GNU_PROPERTY.\n+\t(decode_x86_isa): Don't check GNU_PROPERTY_X86_UINT32_VALID.\n+\t(decode_x86_feature_1): Likewise.\n+\t(decode_x86_feature_2): Likewise.\n+\t(print_gnu_property_note): Remove GNU_PROPERTY_X86_UINT32_VALID\n+\tcheck.\n+\t* testsuite/binutils-all/i386/empty.d: Updated.\n+\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.s: Change\n+\tGNU_PROPERTY_X86_ISA_1_USED bits to 0x7fffffff.\n+\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n+\n+2018-12-13  Sam Tebbs  <sam.tebbs@arm.com>\n+\n+\t* dwarf.c (read_cie):  Add check for 'B'.\n+\n+2018-12-11  Nick Clifton  <nickc@redhat.com>\n+\n+\t* NEWS: Note that recursion limit has increased to 2048.\n+\t* doc/binutils.texi: Likewise.\n+\n+2018-12-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* strings.c (unget_part_char): New function.\n+\t(print_strings): Use unget_part_char.  Formatting.\n+\t* testsuite/binutils-all/strings.exp (test_multibyte): Don't\n+\tuse square brackets in fail message.  Expect \"String1\\nString2\".\n+\n+2018-12-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* nm.c (display_rel_file): Use xrealloc to increase minisyms\n+\tfor synthetic symbols.\n+\n+2018-12-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* addr2line.c (demangle_flags): New static variable.\n+        (long_options): Add --recurse-limit and --no-recurse-limit.\n+        (translate_address): Pass demangle_flags to bfd_demangle.\n+        (main): Handle --recurse-limit and --no-recurse-limit options.\n+        * cxxfilt.c: (long_options): Add --recurse-limit and\n+\t--no-recurse-limit.\n+        (main): Handle new options.\n+        * nm.c (demangle_flags): New static variable.\n+        (long_options): Add --recurse-limit and --no-recurse-limit.\n+        (main): Handle new options.\n+        * objdump.c (demangle_flags): New static variable.\n+        (usage): Add --recurse-limit and --no-recurse-limit.\n+        (long_options): Likewise.\n+        (objdump_print_symname): Pass demangle_flags to bfd_demangle.\n+        (disassemble_section): Likewise.\n+        (dump_dymbols): Likewise.\n+        (main): Handle new options.\n+        * prdbg.c (demangle_flags): New static variable.\n+        (tg_variable): Pass demangle_flags to demangler.\n+        (tg_start_function): Likewise.\n+        * stabs.c (demangle_flags): New static variable.\n+        (stab_demangle_template): Pass demangle_flags to demangler.\n+        (stab_demangle_v3_argtypes): Likewise.\n+        (stab_demangle_v3_arg): Likewise.\n+\t* doc/binutuls.texi: Document new command line options.\n+\t* NEWS: Mention the new feature.\n+        * testsuite/config/default.exp (CXXFILT): Define if not already\n+        defined.\n+        (CXXFILTFLAGS): Likewise.\n+        * testsuite/binutils-all/cxxfilt.exp: New file.  Runs a few\n+        simple tests of the cxxfilt program.\n+\n+2018-12-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23941\n+\t* testsuite/binutils-all/i386/compressed-1a.d: Update expected output.\n+\t* testsuite/binutils-all/x86-64/compressed-1a.d: Likewise.\n+\n+2018-12-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23946\n+\t* readelf.c (slurp_ia64_unwind_table): Bounds check symbol index\n+\ton reloc.\n+\t(slurp_hppa_unwind_table): Likewise.\n+\n+2018-12-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23945\n+\t* readelf.c (slurp_ia64_unwind_table): Don't call elf_ia64_reloc_type\n+\tneedlessly.\n+\t(slurp_hppa_unwind_table): Use same range checks and error messages\n+\tas slurp_ia64_unwind_table.\n+\n+2018-11-29  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23931\n+\t* objdump.c (dump_relocs_in_section): When checking for an\n+\tunreasonable amount of relocs in a bfd, allow for the fact that\n+\tthe internal representation of a reloc may be bigger than the\n+\texternal representation.\n+\n+2018-11-27  Mark Wielaard  <mark@klomp.org>\n+\n+\tPR binutils/23919\n+\t* readelf.c (dump_sections_as_strings): Remove bogus addralign check.\n+\t(dump_sections_as_bytes): Likewise.\n+\t(load_specific_debug_sections): Likewise.\n+\t* testsuite/binutils-all/dw2-3.rS: Adjust alignment.\n+\t* testsuite/binutils-all/dw2-3.rt: Likewise.\n+\n+2018-11-20  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23898\n+\t* testsuite/lib/binutils-common.exp (prune_warnings_extra):\n+\tPrune gaps in build notes.\n+\n+2018-11-13  Francois H. Theron <francois.theron@netronome.com>\n+\n+\t* testsuite/binutils-all/nfp/test1.d: Test for swapped operand crc[].\n+\n+\n+2018-11-09  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* configure: Regenerate.\n+\n+2018-11-09  Mathias   <m4tze@exitno.de>\n+\n+\t* strings.c (print_strings): Check for multibyte encodings.\n+\t* binutils-all/strings-1.bin: New file.  Test binary for string decoding.\n+\t* testsuite/binutils-all/strings.exp: New file.  Test the strings program.\n+\t* testsuite/config/default.exp (STRINGS): Define if not provided\n+\tby the environment.\n+\t(STRINGSFLAGS): Likewise.\n+\n+2018-11-07  Masatake Yamato  <yamato@redhat.com>\n+\n+\t* objdump.c (long_options): Have the --disassemble option take an\n+\toptional argument.\n+\t(usage): Add description for the `symbol' argument to the\n+\t--disassemble option.\n+\t(disasm_sym): New file private variable.\n+\t(struct objdump_disasm_info): New field `symbol'.\n+\t(disassemble_section): Introduce `do_print' local variable\n+\tto control whether objdump displays the result of disassembling\n+\tfor a symbol or not.\n+\t(main): Set `symbol' file private variable if the option argument\n+\tfor the --disassemble option is given.\n+\t* doc/binutils.texi (objdump): Add description for the option\n+\targument.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/objdump.exp: Add tests of the -d and\n+\t--disassemble=<symbol> options.\n+\t* testsuite/binutils-all/bintest.s: Add more symbols and code.\n+\t* testsuite/binutils-all/readelf.s: Update expected output.\n+\t* testsuite/binutils-all/readelf.ss-64: Likewise.\n+\t* testsuite/binutils-all/readelf.ss-mips: Likewise.\n+\t* testsuite/binutils-all/readelf.ss-tmips: Likewise.\n+\n+2018-11-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt.po: Updated Portuguese translation.\n+\n+2018-11-06  Roman Bolshakov  <r.bolshakov@yadro.com>\n+\t    Saagar Jha  <saagar@saagarjha.com>\n+\n+\tPR 23728\n+\t* od-macho.c (printf_version): New.\n+\t(dump_load_command): Use it to print version. Print sdk version. Print\n+\tversion info for watchOS and tvOS. Print LC_NOTE, LC_BUILD_VERSION.\n+\t(dump_buld_version): New.\n+\t(bfd_mach_o_platform_name): New\n+\t(bfd_mach_o_tool_name): New\n+\n+2018-11-07  Yoshinori Sato  <ysato@users.sourceforge.jp>\n+\n+\t* testsuite/lib/binutils-common.exp: Special section name\n+\tuse only rx-*-elf.\n+\n+2018-11-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* doc/binutils.texi: Document --enable-x86-feature and\n+\t--disable-x86-feature options for elfedit.\n+\t* elfedit.c: Include \"config.h\" and <sys/mman.h>.\n+\t(enable_x86_features): New.\n+\t(disable_x86_features): Likewise.\n+\t(update_gnu_property): Likewise.\n+\t(elf_x86_feature): Likewise.\n+\t(process_file): Call update_gnu_property on ET_EXEC or ET_DYN\n+\tfile.\n+\t(command_line_switch): Add OPTION_ENABLE_X86_FEATURE and\n+\tOPTION_DISABLE_X86_FEATURE.\n+\t(options): Add--enable-x86-feature and --disable-x86-feature.\n+\t(usage): Likewise.\n+\t(main): Handle OPTION_ENABLE_X86_FEATURE and\n+\tOPTION_DISABLE_X86_FEATURE.\n+\n+2018-11-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elfedit.c (update_elf_header): Move EI_MAG? check to ...\n+\t(get_file_header): Here.\n+\n+2018-11-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure.ac (AC_FUNC_MMAP): New.\n+\t* config.in: Regenerated.\n+\t* configure: Likewise.\n+\n+2018-11-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_section_headers): Don't warn on a zero\n+\tsh_info or sh_link for any reloc section in an executable or\n+\tshared library.  Do warn for .rel.dyn/.rela.dyn in ET_REL.\n+\n+2018-11-01  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n+\n+\t* testsuite/config/default.exp: Define LD, LDFLAGS and\n+\tld_elf_shared_opt.\n+\t* testsuite/lib/binutils-common.exp (check_shared_lib_support): Moved\n+\tfrom ld-lib.exp.\n+\t(run_dump_test): Set ld to $LD.\n+\n+2018-10-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* doc/binutils.texi (readelf): Document alternatives to the\n+\t--unwind option if it is not supported for the target\n+\tarchitecture.\n+\n+2018-10-16  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23780\n+\t* readelf.c (display_raw_attribute): Correct assertion.\n+\n+2018-10-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23534\n+\t* addr2line.c (main): Exit with fatal error if bfd_init\n+\treturns an unexpected value.\n+\t* ar.c (main): Likewise.\n+\t* dlltool.c (identify_dll_for_implib): Likewise.\n+\t* nm.c (main): Likewise.\n+\t* objcopy.c (main): Likewise.\n+\t* objdump.c (main): Likewise.\n+\t* size.c (main): Likewise.\n+\t* strings.c (main): Likewise.\n+\t* windmc.c (main): Likewise.\n+\t* windres.c (main): Likewise.\n+\n+2018-10-11  Jordan Rupprecht  <rupprecht@google.com>\n+\t    Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (copy_main): Issue a fata error if the\n+\t--keep-global-symbol(s) and the --globalize-symbol(s) options are\n+\tused together.\n+\t* doc/binutils.texi: Document that the two options are\n+\tincompatible.\n+\t* testsuite/binutils-all/copy-5.d: New test.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2018-10-10  Helge Deller <deller@gmx.de>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (hppa_process_unwind): Don't use eh_addr_size to\n+\tcalculate number of entries.\n+\t(slurp_hppa_unwind_table): Don't use eh_addr_size here either.\n+\n+2018-10-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* objdump.c (dump_dwarf): Set s12z eh_addr_size to 4.\n+\n+2018-10-08  Andreas Schwab  <schwab@suse.de>\n+\n+\t* readelf.c (is_32bit_pcrel_reloc): Handle R_RISCV_32_PCREL.\n+\n+2018-10-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt.po: Updated Portuguese translation.\n+\t* po/fr.po: Updated French translation.\n+\n+2018-09-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (apply_relocations): Don't return FALSE for warnings.\n+\n+2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Set the unsupported reloc number\n+\tfrom 215 to 255 for NDS32.\n+\n+2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* objcopy.c (strip_specific_buffer): New.\n+\t(strip_unneeded_buffer): Likewise.\n+\t(keep_specific_buffer): Likewise.\n+\t(localize_specific_buffer): Likewise.\n+\t(globalize_specific_buffer): Likewise.\n+\t(keepglobal_specific_buffer): Likewise.\n+\t(weaken_specific_buffer): Likewise.\n+\t(add_specific_symbols): Add an argument to return pointer to\n+\tallocated buffer.\n+\t(copy_main): Update add_specific_symbols to update pointers to\n+\tallocated buffer.  Free pointers to allocated buffer before\n+\treturn.\n+\n+2018-09-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* objcopy.c (handle_remove_section_option): Don't require a dot\n+\tafter .rela and .rel to handle a possible relocation section.\n+\t* testsuite/binutils-all/remove-relocs-07.s,\n+\t* testsuite/binutils-all/remove-relocs-07.d,\n+\t* testsuite/binutils-all/remove-relocs-08.d: New tests.\n+\t* testsuite/binutils-all/remove-relocs-01.d,\n+\t* testsuite/binutils-all/remove-relocs-04.d,\n+\t* testsuite/binutils-all/remove-relocs-05.d,\n+\t* testsuite/binutils-all/remove-relocs-06.d: Exclude mips64-openbsd.\n+\n+2018-09-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_som_format): New proc.\n+\t(run_dump_test): Correct target test for alternate .comm syntax.\n+\t(get_standard_section_names): Handle som format.\n+\t* testsuite/lib/utils-lib.exp (default_binutils_assemble_flags):\n+\tCorrect target test for alternate .comm syntax.\n+\n+2018-09-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/strip-13mips64.s: Add section flags\n+\tfor reloc section.\n+\t* testsuite/binutils-all/strip-13rel.s: Likewise.\n+\t* testsuite/binutils-all/strip-13rela.s: Likewise.\n+\t* testsuite/binutils-all/strip-14mips64.s: Likewise.\n+\t* testsuite/binutils-all/strip-14rel.s: Likewise.\n+\t* testsuite/binutils-all/strip-14rela.s: Likewise.\n+\t* testsuite/binutils-all/strip-15mips64.s: Likewise.\n+\t* testsuite/binutils-all/strip-15rel.s: Likewise.\n+\t* testsuite/binutils-all/strip-15rela.s: Likewise.\n+\n+2018-09-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* testsuite/binutils-all/compress.exp: Rename second \"objcopy\n+\tzlib-gnu compress debug sections 3\" test to \"objcopy zlib-gabi\n+\tcompress debug sections 3\" and use gabi object files instead\n+\tof gnu object files.\n+\t* testsuite/binutils-all/objcopy.exp: Add suffix to the names\n+\tof the \"ELF group\" tests.\n+\t* testsuite/binutils-all/readelf.exp (proc readelf_find_size):\n+\tAdd an iteration parameter and include it in the name of the\n+\ttest.  Update callers to include an iteration count.\n+\n+2018-09-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/add-symbol.d: Add \"section_subst: no\".\n+\t* testsuite/binutils-all/elfedit.exp: Don't set tempfile or copyfile.\n+\t* testsuite/binutils-all/symbols-1.d,\n+\t* testsuite/binutils-all/symbols-2.d,\n+\t* testsuite/binutils-all/symbols-3.d,\n+\t* testsuite/binutils-all/symbols-4.d: Quote '*' and '!'.\n+\t* testsuite/binutils-all/add-empty-section.d,\n+\t* testsuite/binutils-all/add-section.d,\n+\t* testsuite/binutils-all/elfedit.exp,\n+\t* testsuite/binutils-all/note-1.d,\n+\t* testsuite/binutils-all/pr23633.d: Add $subdir after $srcdir.\n+\t* testsuite/config/default.exp (AS, ASFLAGS): Define.\n+\t* testsuite/config/hppa.sed: Handle all common symbols.\n+\t* testsuite/lib/binutils-common.exp (run_dump_test): New proc,\n+\tmerged from three other versions.\n+\t(slurp_options, file_contents, set_file_contents): Likewise.\n+\t(big_or_little_endian, get_standard_section_names): Likewise.\n+\t* testsuite/lib/utils-lib.exp (run_dump_test): Delete.\n+\t(slurp_options, proc file_contents): Delete.\n+\t(get_standard_section_names): Delete.\n+\n+2018-09-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/copy-2.d,\n+\t* testsuite/binutils-all/copy-3.d,\n+\t* testsuite/binutils-all/copy-4.d,\n+\t* testsuite/binutils-all/elfedit-1.d,\n+\t* testsuite/binutils-all/note-1.d,\n+\t* testsuite/binutils-all/note-2-64.d,\n+\t* testsuite/binutils-all/strip-11.d,\n+\t* testsuite/binutils-all/strip-13.d,\n+\t* testsuite/binutils-all/strip-14.d,\n+\t* testsuite/binutils-all/testranges.d,\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d,\n+\t* testsuite/binutils-all/x86-64/pr23494a.d,\n+\t* testsuite/binutils-all/x86-64/pr23494b-x32.d,\n+\t* testsuite/binutils-all/x86-64/pr23494b.d,\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d,\n+\t* testsuite/binutils-all/x86-64/pr23494c.d,\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d,\n+\t* testsuite/binutils-all/x86-64/pr23494d.d,\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d,\n+\t* testsuite/binutils-all/x86-64/pr23494e.d,\n+\t* testsuite/lib/utils-lib.exp (run_dump_test): Replace not-target\n+\tand not-skip with notarget and noskip.\n+\n+2018-09-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/group-7a.d,\n+\t* testsuite/binutils-all/group-7b.d,\n+\t* testsuite/binutils-all/group-7c.d,\n+\t* testsuite/binutils-all/symbols-1.d,\n+\t* testsuite/binutils-all/symbols-2.d,\n+\t* testsuite/binutils-all/symbols-3.d,\n+\t* testsuite/binutils-all/symbols-4.d: Remove DUMPPROG.\n+\n+2018-09-14  Alan Modra  <amodra@gmail.com>\n+\n+\tPR binutils/23633\n+\t* testsuite/binutils-all/pr23633.d: Don't fail when assembler\n+\tgenerates sections other than .text.\n+\n+2018-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23633\n+\t* testsuite/binutils-all/objcopy.exp: Run pr23633.\n+\t* testsuite/binutils-all/pr23633.d: New file.\n+\t* testsuite/binutils-all/pr23633.list: Likewise.\n+\t* testsuite/binutils-all/pr23633.s: Likewise.\n+\n+2018-09-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23633\n+\t* objcopy.c (add_specific_symbols): Do not free the buffer at the\n+\tend of the function.\n+\n+2018-09-10  Alan Modra  <amodra@gmail.com>\n+\n+\tPR binutils/23611\n+\t* objcopy.c (handle_remove_section_option): Consider .rela and\n+\t.rel sections for stripping directly as well as attached to the\n+\tassociated section they relocate.\n+\t* doc/binutils.texi (remove-relocations): Specify that this\n+\toption removes non-dynamic relocation sections.\n+\t* testsuite/binutils-all/objcopy.exp\n+\t(objcopy_remove_relocations_from_executable): New test.\n+\n+2018-09-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/ja.po: Updated Japanese translation.\n+\n+2018-08-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/readelf.s-64: Adjusted for\n+\t.note.gnu.property section.\n+\t* testsuite/binutils-all/strip-3.d: Also strip\n+\t.note.gnu.property section.\n+\n+2018-08-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/i386/compressed-1b.d: Pass\n+\t-mx86-used-note=no to assembler.\n+\t* testsuite/binutils-all/i386/compressed-1c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/compressed-1b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/compressed-1c.d: Likewise.\n+\t* testsuite/binutils-all/i386/empty.d: Pass -mx86-used-note=yes\n+\tto assembler and update expected output from \"readelf -n\".\n+\t* testsuite/binutils-all/i386/ibt.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/i386/shstk.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/empty.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/ibt.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/shstk.d: Likewise.\n+\n+2018-08-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (process_section_headers): Treat SHT_FINI_ARRAY and\n+\tSHT_PREINIT_ARRAY as relocatable sections.\n+\n+2018-08-30  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* MAINTAINERS: Add myself as a MIPS port maintainer.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* NEWS: Mention Loongson 2K1000 proccessor support.\n+\t* readelf.c (get_machine_flags): Handle gs264e.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* NEWS: Mention Loongson 3A2000/3A3000 proccessor support.\n+\t* readelf.c (get_machine_flags): Handle gs464e.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* NEWS: Mention Loongson 3A1000 proccessor support.\n+\t* readelf.c (get_machine_flags): Rename loongson-3a to gs464.\n+\t(print_mips_isa_ext): Delete AFL_EXT_LOONGSON_3A.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* readelf.c (print_mips_ases): Add Loongson EXT2 extension.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t * readelf.c (print_mips_ases): Add Loongson EXT extension.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* readelf.c (print_mips_ases): Add CAM extension.\n+\n+2018-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (decode_x86_isa): Print <None> if bitmask only\n+\tcontains the GNU_PROPERTY_X86_UINT32_VALID bit.\n+\t(decode_x86_feature_1): Likewise.\n+\t(decode_x86_feature_2): Likewise.\n+\t(print_gnu_property_note): Don't mask out the\n+\tGNU_PROPERTY_X86_UINT32_VALID bit.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\n+2018-08-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (decode_x86_compat_isa): Break multi-statement line.\n+\t(decode_x86_isa): Likewise.\n+\t(decode_x86_feature_2): Likewise.\n+\n+2018-08-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/23499\n+\t* readelf.c (get_symbol_version_string): Return _(\"<corrupt>\")\n+\tfor corrupt symbol version info.\n+\n+2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (decode_x86_compat_isa): New function.\n+\t(decode_x86_feature_2): Likewise.\n+\t(decode_x86_isa): Updated for new X86_ISA_1_XXX bits.\n+\t(decode_x86_feature): Renamed to ...\n+\t(decode_x86_feature_1): This.  Remove the type argument.\n+\t(print_gnu_property_note): Handle X86_COMPAT_ISA_1_USED,\n+\tX86_COMPAT_ISA_1_NEEDED, X86_UINT32_AND_LO, X86_UINT32_AND_HI,\n+\tX86_UINT32_OR_LO, X86_UINT32_OR_HI, X86_UINT32_OR_AND_LO and\n+\tX86_UINT32_OR_AND_HI instead of X86_ISA_1_USED, X86_ISA_1_NEEDED\n+\tand X86_FEATURE_1_AND.\n+\t* testsuite/binutils-all/i386/pr21231b.s: Updated to the current\n+\tGNU_PROPERTY_X86_ISA_1_USED and GNU_PROPERTY_X86_ISA_1_NEEDED\n+\tvalues.\n+\t* testsuite/binutils-all/x86-64/pr21231b.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.s: Likewise.\n+\t* testsuite/binutils-all/i386/pr21231b.d: Updated.\n+\t* testsuite/binutils-all/x86-64/pr21231b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\n+2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (print_gnu_property_note): Check the\n+\tGNU_PROPERTY_X86_UINT32_VALID bit for invalid GNU property note.\n+\n+2018-08-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_ppc64_symbol_other): Return NULL if st_other\n+\tfield contains unrecognised or reserved values.  Handle\n+\tlocalentry:1 value.\n+\n+2018-08-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/23536\n+\t* Makefile.am (development.exp): New target.\n+\t(EXTRA_DEJAGNU_SITE_CONFIG): New.\n+\t(DISTCLEANFILES): Add development.exp.\n+\t* Makefile.in: Regenerated.\n+\t* testsuite/binutils-all/objcopy.exp (strip_test): Call\n+\tprune_warnings to prune BFD output.\n+\t(strip_test_with_saving_a_symbol): Likewise.\n+\t(objcopy_test_without_global_symbol): Likewise.\n+\t* testsuite/lib/binutils-common.exp (prune_warnings_extra):\n+\tNew proc.\n+\t(prune_warnings): Likewise.\n+\n+2018-08-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* README-how-to-make-a-release: Document setting \"experimental\"\n+\tto false.\n+\n+2018-08-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (process_file_header): Assign updated values from\n+\tsection_header[0] fields to e_phnum, e_shnum and e_shstrndx\n+\tduring printing of header.  Correct e_shstrndx range check.\n+\tRemove unnecessary casts and use %u rather than %ld for\n+\tunsigned int header fields.  Don't print a random %lx when\n+\treporting an unknown EI_VERSION.\n+\n+2018-08-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* MAINTAINERS: Note that Arnold Metselaar has retired as the z80\n+\tmaintainer.\n+\n+2018-08-21  L. Simon  <l.simon@samsung.com>\n+\n+\tPR 23531\n+\t* readelf.c (hppa_process_unwind): Only dump the unwind table if\n+\tthe data was successfully read in.\n+\n+2018-08-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_elf64): Use directory of\n+\tinput file for readelf.out.\n+\t(is_rela): New proc.\n+\t* testsuite/binutils-all/objcopy.exp (elf64): Set new variable\n+\tfrom first result of is_elf64 test.\n+\t(reloc_format): Set using is_rela.\n+\t(strip-13): Pass RELOC and ELF64 to assembler.\n+\t(strip-14, strip-15): Use elf64 rather than calling is_elf64 again.\n+\t* testsuite/binutils-all/strip-13.d: Run for more targets.\n+\t* testsuite/binutils-all/strip-13mips64.s: Use RELOC and set\n+\taddend to zero.\n+\t* testsuite/binutils-all/strip-13rel.s: Use RELOC and ELF64.\n+\tDon't add _NONE reloc.\n+\t* testsuite/binutils-all/strip-13rela.s: Likewise.\n+\n+2018-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23494\n+\t* testsuite/binutils-all/x86-64/pr23494c.s: New file.\n+\t* testsuite/binutils-all/x86-64/pr23494e-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494e.d: Likewise.\n+\n+2018-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: Skip nacl\n+\ttargets.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\n+2018-08-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23494\n+\t* testsuite/binutils-all/x86-64/pr23494a-x32.d: New file.\n+\t* testsuite/binutils-all/x86-64/pr23494a.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494a.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494b.s: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494c.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d-x32.d: Likewise.\n+\t* testsuite/binutils-all/x86-64/pr23494d.d: Likewise.\n+\n+2018-08-08  Kevin Buettner  <kevinb@redhat.com>\n+\n+\t* dwarf.c (decode_location_expresion): Add case for\n+\tDW_OP_GNU_variable_value.\n+\n+2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* readelf.c (display_arc_attribute): Print Tag_ARC_ATR_version.\n+\n+2018-08-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (merge_gnu_build_notes): Delete empty notes.  Merge\n+\tidentical function notes.\n+\n+2018-08-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add note about regenerating the\n+\tinfo files prior to the release.\n+\n+2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* MAINTAINERS (C-SKY): Add Yunhai Shang as co-maintainer.\n+\n+2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* MAINTAINERS (C-SKY): Add Lifang Xia as maintainer.\n+\n+2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* readelf.c: Include elf/csky.h.\n+\t(guess_is_rela): Handle EM_CSKY.\n+\t(dump_relocations): Likewise.\n+\t(get_machine_name): Likewise.\n+\t(is_32bit_abs_reloc): Likewise.\n+\n+2018-07-25  Nick Clifton  <nickc@redhat.com>\n+\n+\t* rdcoff.c (parse_coff_struct_type): Free fields array upon early\n+\texit.\n+\t(parse_coff_enum_type): Free names and vals arrays upon early\n+\texit.\n+\t* rddbg.c (read_section_stabs_debugging_info): Free shandle and\n+\tstrings and stabs arrays upon early exit.\n+\t* readelf.c (get_32bit_section_headers): Free shdrs structure upon\n+\tearly exit.\n+\t(get_64bit_section_headers): Likewise.\n+\t(get_32bit_elf_symbols): Generate an error if multiple symbol\n+\ttable index sections are associated with the same symbol section.\n+\t(get_64bit_elf_symbols): Likewise.\n+\t(process_dynamic_section): Generate an error if there are multiple\n+\tdynamic symbol table sections, multiple dynamic string tables or\n+\tmultiple dynamic symbol information sections.\n+\n+2018-07-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2018-07-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23431\n+\t* dwarf.c (display_formatted_table): Replace \"what\" parameter\n+\twith \"is_dir\".  Expand messages.  Fix capitalisation.\n+\t* testsuite/binutils-all/dw5.W: Update expected output.\n+\n+2018-07-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23430\n+\t* elfcomm.h (struct archive_info): Rename uses_64bit_indicies\n+\tto uses_64bit_indices.\n+\t* elfcomm.c (setup_archive): Update uses of above.\n+\t* readelf.c (process_archive): Likewise.\n+\t(get_section_type_name): Rename indicies to indices.\n+\t(get_32bit_elf_symbols, get_64bit_elf_symbols): Likewise.\n+\t(process_section_groups): Likewise.\n+\n+2018-07-20  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* MAINTAINERS: Update my e-mail address, downgrade to MIPS I-IV\n+\tISA maintenance.\n+\n+2018-07-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (add_specific_symbols): Free buffer on exit.\n+\t(add_redefine_syms_file): Close file handle on exit.\n+\t(copy_object): Close file handle on early exit.\n+\tFree buffer on early exit.\n+\tFree gaps buffers once they are no longer needed.\n+\t* dwarf.c (display_debug_frames): Free allocated memory on exit.\n+\t(load_separate_debug_info): Free allocate memory on early exit.\n+\n+2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\t    Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* readelf.c (print_mips_ases): Add MMI extension.\n+\n+2018-07-19  DJ Delorie  <dj@redhat.com>\n+\n+\t* MAINTAINERS (RL78, RX): Remove myself as maintainer.\n+\n+2018-07-19  Nick Clifton  <nickc@redhat.com>\n+\n+\t* dwarf.c (read_cie): Free allocated memory before returning with\n+\ta failure result.\n+\n+2018-07-16  Pedro Franco de Carvalho  <pedromfc@linux.ibm.com>\n+\n+\t* readelf.c (get_note_type): Fix typo in NT_PPC_TM_CVSX note\n+\tdescription.\n+\n+2018-07-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add note to check for new top\n+\tlevel files and add them to the src-release.sh script.\n+\n+2018-07-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Updated with corrections based on\n+\tthe 2.31 release experience.\n+\n+2018-07-12  Francois H. Theron  <francois.theron@netronome.com>\n+\n+\t* readelf.c (process_section_headers): Don't print section type\n+\ttwice for --section-details.\n+\n+2018-07-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (supports_gnu_unique): Return\n+\tzero for xgate.\n+\n+2018-07-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (same_section): New function.\n+\t(print_gnu_build_attribute_description): Do not complain about\n+\tgaps that cross a section boundary.\n+\n+2018-07-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/bg.po: Updated Bulgarian translation.\n+\n+2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* NEWS: Use command-line consistently when used in a compount word.\n+\t* doc/binutils.texi: Likewise and fix trailing whitespace on same\n+\tline.\n+\n+2018-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2018-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* doc/binutils.texi: Fix spelling mistakes.\n+\t* README--how-to-make-a-release: Likewise.\n+\n+2018-06-25  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf-mode.el (dwarf-mode-syntax-table): New variable.\n+\tBump version number.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Update with experiences from\n+\tmaking 2.31 branch.\n+\t* po/binutils.pot: Regenerate.\n+\t* configure: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\t* NEWS: Add marker for 2.31.\n+\n+2018-06-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* doc/Makefile.am (AUTOMAKE_OPTIONS): Add \"foreign\".\n+\t* doc/Makefile.in: Regenerate.\n+\n+2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* configure.ac: Remove AC_PREREQ.\n+\t* doc/Makefile.am (AUTOMAKE_OPTIONS): Remove cygnus, add\n+\tinfo-in-builddir no-texinfo.tex.\n+\t* Makefile.in: Re-generate.\n+\t* aclocal.m4: Re-generate.\n+\t* config.in: Re-generate.\n+\t* configure: Re-generate.\n+\t* doc/Makefile.in: Re-generate.\n+\n+2018-06-19  Andreas Schwab  <schwab@suse.de>\n+\n+\t* readelf.c (is_16bit_abs_reloc): Handle R_RISCV_SET16.\n+\t(is_8bit_abs_reloc): New function.\n+\t(is_6bit_abs_reloc): New function.\n+\t(is_6bit_inplace_sub_reloc): New function.\n+\t(apply_relocations): Use them.  Handle 6-bit relocations.\n+\n+2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* readelf.c (print_mips_ases): Add GINV extension.\n+\n+2018-06-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23267\n+\t* readelf.c (get_symbol_version_string): Check if the first\n+\tsymbol version is base version.\n+\n+2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n+\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* readelf.c (print_mips_ases): Add CRC.\n+\n+2018-06-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* doc/binutils.texi (objdump): Add missing closing square\n+\tparenthesis to listing of objcopy's command line options.\n+\n+2018-06-11  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\n+2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure: Regenerated.\n+\n+2018-05-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Don't\n+\tset CC_FOR_TARGET.  Run test non-native.\n+\t* testsuite/binutils-all/objdump.exp (test_build_id_debuglink):\n+\tLikewise.\n+\t(test_follow_debuglink): Run test non-native.\n+\n+2018-05-30  Ant Bikeneev  <ant.bikineev@gmail.com>\n+\n+\tPR 23107\n+\t* ar.c (display_offsets): New variable.\n+\t(usage): Add description of 'O' operator.\n+\t(decode_option): Handle 'O' operator.\n+\t(print_descr): Pass display_offsets to print_arelt_descr.\n+\t* arsup.c: Update call to printy_arelt_descr.\n+\t* objdump.c: Likewise.\n+\t* bucomm.c (print_arelt_descr): If offsets parameter is true then\n+\tdisplay offset of archive element within the archive.\n+\t* bucomm.h: Update prototype for print_arelt_descr.\n+\t* doc/binutils.texi: Update description of ar command.\n+\t* NEWS: Mention the new feature.\n+\t* testsuite/binutils-all/ar.exp: Add text of new feature.\n+\n+2018-05-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23235\n+\t* testsuite/binutils-all/compress.exp (test_gnu_debuglink): Return\n+\tunsupported rather than fail on compile errors.\n+\t* testsuite/binutils-all/objdump.exp (test_build_id_debuglink):\n+\tLikewise.  Save and restore CFLAGS_FOR_TARGET.\n+\n+2018-05-18  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* readelf.c (get_machine_flags): Handle EF_RISCV_RVE.\n+\n+2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* readelf.c: Add support for s12z architecture.\n+\t* testsuite/lib/binutils-common.exp (is_elf_format): Excluse s12z\n+\ttargets.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* doc/binutils.texi (-M): Document AArch64 options.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* doc/binutils.texi (-M): Document AArch64 options.\n+\t* NEWS: Document notes and warnings.\n+\n+2018-05-15  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_elf_format): Add chorus,\n+\tcloudabi, fuchsia, kaos and nto.  Merge netbsdelf* into *elf*,\n+\tand *uclinux* into *linux*.\n+\t* testsuite/binutils-all/objcopy.exp: Accept armeb for rel\n+\tstrip-13 test, exclude arm-vxworks and arm-windiss.\n+\n+2018-05-10  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* readelf.c (get_machine_name): EM_S12Z - handle new case.\n+\n+2018-05-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* od-macho.c (dump_unwind_encoding_x86): Fix typo in last patch.\n+\n+2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n+\n+\t* od-macho.c (dump_unwind_encoding_x86): Adjust for macro renaming.\n+\n+2018-05-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23141\n+\t* objcopy.c (is_strip_section): Strip groups without a valid\n+\tsignature symbol.\n+\n+2018-05-07  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23142\n+\t* objcopy.c (group_signature): Don't accept groups that use a\n+\tsymbol table other than the one we've read.\n+\n+2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n+\n+\t* readelf.c: Very basic support for EM_NFP and its section types.\n+\t* testsuite/binutils-all/nfp: New directory.\n+\t* testsuite/binutils-all/nfp/objdump.exp: New file.  Run new\n+\ttests.\n+\t* testsuite/binutils-all/nfp/test2_ctx8.d: New file.\n+\t* testsuite/binutils-all/nfp/test2_no-pc_ctx4.d: New file.\n+\t* testsuite/binutils-all/nfp/test1.d: New file.\n+\t* testsuite/binutils-all/nfp/nfp6000.nffw: New file.\n+\t* testsuite/binutils-all/nfp/test2_nfp6000.nffw: New file.\n+\t* NEWS: Mention the new support.\n+\n+2018-04-27  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/lib/binutils-common.exp (match_target): New procedure.\n+\t* testsuite/lib/utils-lib.exp (run_dump_test): Use it in place\n+\tof `istarget' for matching with `target', `not-target', `skip'\n+\tand `not-skip' options.\n+\n+2018-04-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (is_32bit_abs_reloc): Support R_PARISC_DIR32 as a\n+\t32-bit absolute reloc for the HPPA target.\n+\t* testsuite/binutils-all/note-5.d: New test.\n+\t* testsuite/binutils-all/note-5.s: Source file for new test.\n+\t* testsuite/binutils-all/objcopy.exp: Run new test.\n+\n+2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n+\n+\t* testsuite/binutils-all/elfedit-2.d: Accept arm*-*-uclinuxfdpiceabi.\n+\t* testsuite/binutils-all/elfedit-3.d: Likewise.\n+\t* testsuite/binutils-all/objcopy.exp: Likewise.\n+\t* testsuite/binutils-all/strip-3.d: Likewise.\n+\t* testsuite/lib/binutils-common.exp: Likewise.\n+\n+2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n+\n+\t* readelf.c (decode_ARM_machine_flags): Support EF_ARM_PIC.\n+\t(get_osabi_name): Support ELFOSABI_ARM_FDPIC.\n+\n+2018-04-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/arm/objdump.exp: Remove arm-aout and\n+\tarm-coff support.\n+\t* testsuite/binutils-all/objcopy.exp: Likewise.\n+\t* testsuite/lib/binutils-common.exp: Likewise.\n+\n+2018-04-18  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23062\n+\t* dwarf.c (read_and_display_attr_value): Replace assertions with\n+\ttest and warning message.\n+\n+2018-04-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp: Remove support for assorted\n+\taout targets.\n+\n+2018-04-17  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23063\n+\t* readelf.c (print_symbol): If the width is zero, return straight\n+\taway.\n+\n+\tPR 23064\n+\t* dwarf.c (process_cu_tu_index): Test for a potential buffer\n+\toverrun before copying signature pointer.\n+\n+2018-04-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c: Revert 2018-04-16 and 2018-04-11 changes.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_machine_name): Correct typo.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac: Remove arm-epoc-pe support.\n+\t* dlltool.c: Likewise.\n+\t* configure: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/lib/binutils-common.exp: Remove sparc-aout and\n+\tsparc-coff support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/copy-2.d: Remove m68k-aout and m68k-coff\n+\tsupport.\n+\t* testsuite/binutils-all/copy-3.d: Likewise.\n+\t* testsuite/binutils-all/objcopy.exp: Likewise.\n+\t* testsuite/lib/binutils-common.exp: Likewise.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Remove sh5 and sh64 support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Remove w65 support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objdump.exp: Remove we32k support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* MAINTAINERS (Mark Kettenis): Move to past maintainers.\n+\t* testsuite/binutils-all/objdump.exp: Remove m88k support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c: Remove i370 support.\n+\t* testsuite/binutils-all/objdump.exp: Likewise.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Remove h8500 support.\n+\t* testsuite/lib/binutils-common.exp: Likewise.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp: Remove h8300-coff support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove IEEE 695 support.\n+\t* budbg.h: Likewise.\n+\t* doc/binutils.texi: Likewise.\n+\t* makefile.vms: Likewise.\n+\t* objcopy.c: Likewise.\n+\t* objdump.c: Likewise.\n+\t* rddbg.c: Likewise.\n+\t* ieee.c: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/copy-2.d: Remove newsos3 support.\n+\t* testsuite/binutils-all/nm.exp: Likewise.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* .gitignore: Remove netware support.\n+\t* Makefile.am: Likewise.\n+\t* configure.ac: Likewise.\n+\t* doc/Makefile.am: Likewise.\n+\t* doc/binutils.texi: Likewise.\n+\t* testsuite/binutils-all/nm.exp: Likewise.\n+\t* nlmconv.c: Delete.\n+\t* nlmconv.h: Delete.\n+\t* nlmheader.y: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* doc/Makefile.in: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objdump.exp: Remove tahoe support.\n+\n+2018-04-14  Alan Modra  <amodra@gmail.com>\n+\n+\t* readelf.c (get_machine_name): Revert 2018-04-11 change.\n+\n+2018-04-12  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23050\n+\t* readelf.c (process_dynamic_section): Correct dynamic string\n+\ttable size calculation.\n+\n+2018-04-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* ieee.c: Remove i960 support.\n+\t* od-macho.c: Remove i860 support.\n+\t* readelf.c: Remove i860 and i960 support.\n+\t* testsuite/binutils-all/objcopy.exp: Likewise.\n+\t* testsuite/binutils-all/objdump.exp: Likewise.\n+\t* testsuite/lib/binutils-common.exp: Likewise.\n+\n+2018-04-11  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/lib/binutils-common.exp (is_elf_format): Also return\n+\t1 for `*-*-lynxos*' and `*-*-symbianelf*' targets.\n+\n+2018-04-10  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/objcopy.exp (strip-14, strip-15): Choose\n+\treloc=11 for pru and reloc=50 for nds32.\n+\t* testsuite/binutils-all/strip-15.d: Accept 0xb reloc number.\n+\n+2018-04-09  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-15.d: New test.\n+\t* testsuite/binutils-all/strip-15rel.s: New test source.\n+\t* testsuite/binutils-all/strip-15rela.s: New test source.\n+\t* testsuite/binutils-all/strip-15mips64.s: New test source.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2018-04-09  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-14.d: New test.\n+\t* testsuite/binutils-all/strip-14rel.s: New test source.\n+\t* testsuite/binutils-all/strip-14rela.s: New test source.\n+\t* testsuite/binutils-all/strip-14mips64.s: New test source.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2018-04-06  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf.c (read_and_display_attr_value): Add missing DW_LANG\n+\tconstants from DWARF 5.\n+\n+2018-04-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/22318\n+\t* configure: Regenerated.\n+\n+2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-13mips64.s: Use `.dc.l' rather\n+\tthan `.dc.w' in second relocation.\n+\n+2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-13.d: Also expect `unsupported\n+\trelocation type 0x8f' error message.\n+\n+2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-13.s: Rename to...\n+\t* testsuite/binutils-all/strip-13rela.s: ... this.\n+\t* testsuite/binutils-all/strip-13rel.s: New test source.\n+\t* testsuite/binutils-all/strip-13mips64.s: New test source.\n+\t* testsuite/binutils-all/strip-13.d: Remove `arm-*', `d10v-*',\n+\t`dlx-*' and `xgate-*' from `not-target' list.  Add `m6811-*' and\n+\t`m68hc11-*' to `not-target' list.\n+\t* testsuite/binutils-all/objcopy.exp: Switch between sources for\n+\t`strip-13'.\n+\n+2018-04-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/strip-13.s: Use 143 (0x8f) rather than\n+\t241 (0xf1) for the relocation number and RELA addend.\n+\t* testsuite/binutils-all/strip-13.d: Remove `hppa*-*' from the\n+\t`not-target' list.\n+\n+2018-04-04  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\t* MAINTAINERS: Update my e-mail address.\n+\n+2018-04-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* MAINTAINERS: Move Jason Eckhardt to past maintainers section.\n+\n+2018-03-23  Nick Clifton  <nickc@redhat.com>\n+\n+\t* readelf.c (get_symbol_for_build_attribute): Skip ARM mapping\n+\tsymbols.\n+\t(print_gnu_build_attribute_description): If no file start symbol\n+\tcould be found, look for one two bytes into the file.\n+\t* testsuite/binutils-all/note-4-64.s: Set the address of the file\n+\tstart symbol to two bytes into the file.\n+\t* testsuite/binutils-all/note-4-32.s: Likewise.\n+\n+2018-03-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* readelf.c (process_dynamic_section): Also dump DF_1_KMOD,\n+\tDF_1_WEAKFILTER and DF_1_NOCOMMON.\n+\n+2018-03-20  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\t* po/ru.po: Updated Russian translation.\n+\n+2018-03-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22957\n+\t* stabs.c (pop_binincl): Fail if the file index is off the end of\n+\tthe stack.\n+\n+2018-03-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22955\n+\t* stabs.c (parse_number): Add p_end parameter and use it to check\n+\tthe validity of the pp parameter.  Add checks to prevent walking\n+\toff the end of the string buffer.\n+\t(parse_stab_string): Likewise.\n+\t(parse_stab_type): Likewise.\n+\t(parse_stab_type_number): Likewise.\n+\t(parse_stab_range_type): Likewise.\n+\t(parse_stab_sun_builtin_type): Likewise.\n+\t(parse_stab_sun_floating_type): Likewise.\n+\t(parse_stab_enum_type): Likewise.\n+\t(parse_stab_struct_type): Likewise.\n+\t(parse_stab_baseclasses): Likewise.\n+\t(parse_stab_struct_fields): Likewise.\n+\t(parse_stab_cpp_abbrev): Likewise.\n+\t(parse_stab_one_struct_field): Likewise.\n+\t(parse_stab_members): Likewise.\n+\t(parse_stab_tilde_field): Likewise.\n+\t(parse_stab_array_type): Likewise.\n+\n+\t* parse_stab: Compute the end of the string and then pass it on to\n+\tindividual parser functions.\n+\n+2018-03-07  Paul Pluzhnikov  <ppluzhnikov@google.com>\n+\n+\tPR binutils/22923\n+\t* binutils/readelf.c (get_ver_flags): Expand buffer to avoid\n+\toverflow.\n+\n+2018-03-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac: Add objdump_private_desc_xcoff for rs6000.\n+\t* configure: Regenerate.\n+\n+2018-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/22911\n+\t* objdump.c (is_significant_symbol_name): Return TRUE for all\n+\t.plt* sections.\n+\t(find_symbol_for_address): Replace linear search with binary\n+\tsearch on dynamic relocations.\n+\n+2018-03-01  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22905\n+\t* dwarf.c (display_debug_ranges): Check that the offset loaded\n+\tfrom the range_entry structure is valid.\n+\n+2018-03-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (ALL_LINGUAS): Add sr.  Sort.\n+\t* configure: Regenerate.\n+\n+2018-02-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt.po: New Portuguese translation.\n+\t* configure.ac (ALL_LINGUAS): Add pt.\n+\t* configure: Regenerate.\n+\n+2018-02-27  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22875\n+\t* objcopy.c (copy_object): Check the error status after marking\n+\tsymbols used in relocations.\n+\t* testsuite/binutils-all/strip-13.s: New test source file.\n+\t* testsuite/binutils-all/strip-13.s: New test driver file.\n+\t* testsuite/binutils-all/objcopy.exp: Run the new test.\n+\n+2018-02-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/mips/mips-reginfo-n32.d,\n+\t* testsuite/binutils-all/mips/mips-reginfo.d: Update.\n+\n+2018-02-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/binutils-all/mips/mips-reginfo-n32.d,\n+\t* testsuite/binutils-all/mips/mips-reginfo.d: Update.\n+\n+2018-02-20  Ronald Hoogenboom  <hoogenboom30@zonnet.nl>\n+\n+\t* doc/binutils.texi (objcopy): Add missing closing square\n+\tparenthesis to listing of objcopy's command line options.\n+\n+2018-02-19  Matthias Klose  <doko@debian.org>\n+\n+\t* strings.c (long_options): Include-all-whitespace does not take\n+\tan extra agument.\n+\n+2018-02-13  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 22836\n+\t* testsuite/binutils-all/group-7.s,\n+\t* testsuite/binutils-all/group-7a.d,\n+\t* testsuite/binutils-all/group-7b.d,\n+\t* testsuite/binutils-all/group-7c.d: New tests.\n+\t* testsuite/binutils-all/objcopy.exp: Run them.\n+\n+2018-02-08  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22802\n+\t* dwarf.c (load_separate_debug_file): Return early if the user is\n+\tnot interested in debug links.\n+\n+2018-02-06  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22793\n+\t* readelf.c (find_section): Replace assertion with test and return\n+\tof NULL.\n+\t(find_section_by_address): Add test of section header table\n+\texistance.\n+\t(find_section_by_type): Likewise.\n+\t(find_section_in_set): Likewise.\n+\n+2018-02-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/binutils-all/mips/mips-reginfo.d: New test.\n+\t* testsuite/binutils-all/mips/mips-reginfo-n32.d: New test.\n+\t* testsuite/binutils-all/mips/mips-reginfo.s: New test source.\n+\t* testsuite/binutils-all/mips/mips.exp: Run the new tests.\n+\n+2018-02-05  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* testsuite/config/default.exp (binutils_run): Document\n+\t`binutils_run_status'.\n+\t* testsuite/lib/utils-lib.exp (default_binutils_run): Likewise,\n+\tand set it.\n+\t(run_dump_test): Add `error', `error_output', `warning' and\n+\t`warning_output' options.  Update documentation accordingly.\n+\n+2018-02-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dwarf.c (dwarf_regnames_riscv): New register name table.\n+\t(init_dwarf_regnames_riscv): New function.\n+\t(init_dwarf_regnames): Add call to initialise RiscV register\n+\tnames.\n+\t* dwarf.h (init_dwarf_regnames_riscv): Declare.\n+\t* objdump.c (dump_dwarf): Add call to initialise RiscV register\n+\tnames.\n+\n+2018-02-01  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 22769\n+\t* objdump.c (load_specific_debug_section): Check for overflow\n+\twhen adding one to section size for a string section terminator.\n+\n+2018-01-30  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22734\n+\t* doc/binutils.texi (nm): Update description to point out that\n+\tzero-initialized values can also be shown as type B, b, S or s\n+\tsince they can be stored in the BSS section.\n+\n+2018-01-30  Alan Modra  <amodra@gmail.com>\n+\n+\t* objcopy.c (merge_gnu_build_notes): Use (bfd_vma) -1 as\n+\t\"artificially large\" end address.\n+\n+2018-01-28  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add note about checking gpg key\n+\tand the results of gnupload.\n+\n+2018-01-27  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add details on how to actually\n+\tmake the release.\n+\n+2018-01-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add more details on updating\n+\tversion numbers.\n+\n+2018-01-22  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* doc/binutils.texi (objcopy): Fix a typo in `--rename-section'\n+\toption description.\n+\n+2018-01-22  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* MAINTAINERS: Update my company e-mail address.\n+\n+2018-01-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2018-01-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/bg.po: Updated Bulgarian translation.\n+\n+2018-01-16  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* README-how-to-make-a-release: Add reminder to update the\n+\tbranch name in gdbadmin's crontab on sourceware.\n+\n+2018-01-16  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* README-how-to-make-a-release: Remove trailing spaces.\n+\n+2018-01-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2018-01-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Update notes.\n+\t* po/binutils.pot: Regenerated.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\t* NEWS: Add marker for 2.30.\n+\n+2018-01-12  Nick Clifton  <nickc@redhat.com>\n+\n+\t* README-how-to-make-a-release: Add notes on how to make the\n+\tbranch and prelease snapshot.\n+\t* BRANCHES: Add binutils-2_29-branch.\n+\n+2018-01-10  Nick Clifton  <nickc@redhat.com>\n+\n+\t* MAINTAINERS: Note that it is now the configure.ac file and not\n+\tthe configure.in file that needs to be kept in sync with gcc.\n+\tAdd a note about sending patches for libiberty to gcc.\n+\n+2018-01-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (merge_gnu_build_notes): Add cast to maximum address\n+\tconstants.\n+\n+2018-01-03  Nick Clifton  <nickc@redhat.com>\n+\n+\t* objcopy.c (objcopy_internal_note): New structure.\n+\t(gap_exists): New function.\n+\t(is_open_note): New function.\n+\t(is_func_note): New function.\n+\t(is_64bit): New function.\n+\t(merge_gnu_build_notes): Handle v3 notes.  Do not merge\n+\tif there are relocations against the notes.\n+\t* readelf.c (get_note_type): Use short names for build attribute\n+\tnotes.\n+\t(print_symbol_for_build_attribute): Rename to\n+\tget_symbol_for_build_attribute.  Returns the found symbol rather\n+\tthan printing it.\n+\t(print_gnu_build_attribute_description): Maintain address ranges\n+\tfor function notes as well as global notes.  Handle v3 notes.\n+\t(print_gnu_build_attribute_name): Use more space for printing the\n+\tname in wide mode.\n+\t* testsuite/binutils-all/note-2-32.s: Use .dc.l instead of .word.\n+\tEliminate symbol references in order to remove the need for\n+\trelocations.\n+\t* testsuite/binutils-all/note-2-64.s: Likewise.\n+\t* testsuite/binutils-all/note-3-32.s: Add a size to the note_1\n+\tsymbol.\n+\t* testsuite/binutils-all/note-3-64.s: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n32.d: Update expected\n+\toutput.\n+\t* testsuite/binutils-all/mips/mips-note-2r-n64.d: Likewise.\n+\t* testsuite/binutils-all/mips/mips-note-2r.d: Likewise.\n+\t* testsuite/binutils-all/note-2-32.d: Likewise.\n+\t* testsuite/binutils-all/note-2-64.d: Likewise.\n+\t* testsuite/binutils-all/note-3-32.d: Likewise.\n+\t* testsuite/binutils-all/note-3-64.d: Likewise.\n+\t* testsuite/binutils-all/note-4-64.s: New test.  Checks v3 notes.\n+\t* testsuite/binutils-all/note-4-32.s: New test.\n+\t* testsuite/binutils-all/note-4-64.d: New test result file.\n+\t* testsuite/binutils-all/note-4-32.d: New test result file.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "elfcpp/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 53,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/elfcpp/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/elfcpp/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,57 +1,6 @@\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips.c (EF_MIPS_MACH): New E_MIPS_MACH_GS264E.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips.c (EF_MIPS_MACH): New E_MIPS_MACH_GS464E.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips.c (EF_MIPS_MACH): Rename E_MIPS_MACH_LS3A to\n-\tE_MIPS_MACH_GS464.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t * mips.h (AFL_ASE_LOONGSON_EXT): New enum.\n-\n-2018-07-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (Tag_GNU_Power_ABI_FP): Define.\n-\t(Tag_GNU_Power_ABI_Vector, Tag_GNU_Power_ABI_Struct_Return): Define.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\n-2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22914\n-\t* elfcpp.h (NT_GNU_PROPERTY_TYPE_0): New note type.\n-\t(GNU_PROPERTY_*): New Gnu property types.\n-\t* x86_64.h (GNU_PROPERTY_X86_FEATURE_1_IBT)\n-\t(GNU_PROPERTY_X86_FEATURE_1_SHSTK): New x86 feature bits.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.h (R_POWERPC_PLTSEQ, R_POWERPC_PLTCALL): Define.\n-\n-2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22969\n-\t* aarch64.h: Fix spelling of R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "ecae362353affe116fd6e591b166230b4713c7be",
      "filename": "elfcpp/ChangeLog-2018",
      "status": "added",
      "additions": 65,
      "deletions": 0,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/elfcpp/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/elfcpp/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/elfcpp/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,65 @@\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips.c (EF_MIPS_MACH): New E_MIPS_MACH_GS264E.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips.c (EF_MIPS_MACH): New E_MIPS_MACH_GS464E.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips.c (EF_MIPS_MACH): Rename E_MIPS_MACH_LS3A to\n+\tE_MIPS_MACH_GS464.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t * mips.h (AFL_ASE_LOONGSON_EXT): New enum.\n+\n+2018-07-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (Tag_GNU_Power_ABI_FP): Define.\n+\t(Tag_GNU_Power_ABI_Vector, Tag_GNU_Power_ABI_Struct_Return): Define.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\n+2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22914\n+\t* elfcpp.h (NT_GNU_PROPERTY_TYPE_0): New note type.\n+\t(GNU_PROPERTY_*): New Gnu property types.\n+\t* x86_64.h (GNU_PROPERTY_X86_FEATURE_1_IBT)\n+\t(GNU_PROPERTY_X86_FEATURE_1_SHSTK): New x86 feature bits.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.h (R_POWERPC_PLTSEQ, R_POWERPC_PLTCALL): Define.\n+\n+2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22969\n+\t* aarch64.h: Fix spelling of R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 5874,
      "changes": 5876,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "b21680a1589ef0203a2c82f07cf3a506645cce5e",
      "filename": "gas/ChangeLog-2018",
      "status": "added",
      "additions": 5886,
      "deletions": 0,
      "changes": 5886,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gas/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gas/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "gold/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 773,
      "changes": 775,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gold/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gold/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,777 +1,6 @@\n-2018-12-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/Makefile.am (keep_text_section_prefix_nm.stdout):\n-\tPass --synthetic to nm.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-12-08  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 21128\n-\t* testsuite/icf_safe_so_test.sh (check_fold): Rewrite to check\n-\tmultiple symbols at once.\n-\t(arch_specific_safe_fold): Likewise, and call with the four foo*\n-\tsymbols expected to fold.\n-\n-2018-12-06  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* archive.cc (Archive::get_elf_object_for_member): Also print\n-\tarchive member and non-ELF/non-IR info on error.\n-\n-2018-12-05  Alan Modra  <amodra@gmail.com>\n-\n-\t* symtab.h (Symbol::Symbol): Avoid -Wclass-memaccess warning.\n-\n-2018-12-03  Alexey Neyman  <stilor@att.net>\n-\n-\tPR gold/23594\n-\t* configure.ac: Add checks for link, mkdtemp.\n-\t* configure: Regenerate.\n-\t* config.in: Regenerate.\n-\t* plugin.cc (Plugin_recorder::init): Fall back to mktemp\n-\tif mkdtemp is not available.\n-\t(link_or_copy_file): Fall back to copy if link() is not available.\n-\n-2018-12-02  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23919\n-\t* merge.cc (Output_merge_string<Char_type>::do_add_input_section):\n-\tGet addralign from decompressed_section_contents.\n-\t* object.cc (build_compressed_section_map): Set info.addralign.\n-\t(Object::decompressed_section_contents): Add a palign\n-\targument and store p->second.addralign in *palign if it isn't\n-\tNULL.\n-\t* object.h (Compressed_section_info): Add addralign.\n-\t(section_is_compressed): Add a palign argument, default it\n-\tto NULL, store p->second.addralign in *palign if it isn't NULL.\n-\t(Object::decompressed_section_contents): Likewise.\n-\t* output.cc (Output_section::add_input_section): Get addralign\n-\tfrom section_is_compressed.\n-\n-2018-11-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/Makefile.am (justsyms_lib): Link with -z norelro.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/justsyms_exec.c (main): Do check exported_func\n-\ton PowerPC64 ELFv2.\n-\n-2018-11-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* testsuite/ver_test_14.sh: Accept objdump -T display of st_other\n-\tbits on powerpc64le.\n-\n-2018-11-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am (gcctestdir1/ld): Use $@ and absolute paths.\n-\t(gcctestdir1/collect-ld): New.\n-\t(ld1_DEPENDENCIES): Add gcctestdir1/collect-ld.\n-\t(ld1_LDFLAGS): Remove -Bgcctestdir1/.\n-\t(editcc1, ld1_LINK): Define.\n-\t(gcctestdir2/ld, gcctestdir2/collect-ld, ld2_DEPENDENCIES),\n-\t(ld2_LDFLAGS, editcc2, ld2_LINK),\n-\t(ld1_r_DEPENDENCIES, ld1_r_LDFLAGS, ld1_r_LINK),\n-\t(gcctestdir2-r/ld, gcctestdir2-r/collect-ld, ld2_r_DEPENDENCIES),\n-\t(ld2_r_LDFLAGS, editcc2r, ld2_r_LINK),\n-\t(gcctestdir3/ld, gcctestdir3/collect-ld, ld3_DEPENDENCIES),\n-\t(ld3_LDFLAGS, editcc3, ld3_LINK),\n-\t(gcctestdir4/ld, gcctestdir4/collect-ld, ld4_DEPENDENCIES),\n-\t(ld4_LDFLAGS, editcc4, ld4_LINK): Similarly.\n-\t* Makefile.in: Regenerate.\n-\t* testsuite/Makefile.am (editcc): Define sed command to put\n-\tour -B option first.  Remove other occurrences of -Bgcctestdir/\n-\tthroughout file.\n-\t(editcc1): Define for -D_FORTIFY_SOURCE stripping.\n-\t(editcc2): Define for -static-libgcc/libstdc++ stripping.\n-\t(LINK1, CXXLINK1): Don't use CCLD or CXXLD.\n-\t(CCLD, CXXLD, COMPILE, LINK, CXXCOMPILE, CXXLINK, CXXLINK_S): Define\n-\tusing editcc macros.\n-\t(gcctestdir/collect-ld): New rule, add as a dependency of..\n-\t(gcctestdir/ld): ..this.  Use $@ and abs_top_buildir.\n-\t(gcctestdir/as): Use $@.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/incremental_test.sh (actual): Match collect-ld too.\n-\n-2018-11-02  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am (MOSTLYCLEANFILES): Define.\n-\t* Makefile.in: Regnerate.\n-\t* testsuite/Makefile.am (MOSTLYCLEANFILES): Add ver_test_14 and\n-\tgnu_property_test.\n-\t* testsuite/Makefile.in: Regnerate.\n-\n-2018-10-16  Cherry Zhang  <cherryyz@google.com>\n-\n-\tPR 23769\n-\t* gold.cc (queue_middle_tasks): Correct split-stack error message.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips.cc (Mips_mach, add_machine_extensions, elf_mips_mach):\n-\tRename loongson3a to gs464.\n-\t(mips_isa_ext_mach, mips_isa_ext): Delete loongson3a.\n-\t(infer_abiflags): Use ases instead of isa_ext for infer ABI\n-\tflags.\n-\t(elf_mips_mach_name): Rename loongson3a to gs464.\n-\n-2018-07-10  Tulio Magno Quites Machado Filho  <tuliom@linux.ibm.com>\n-\n-\t* object.cc (Sized_relobj_file::map_to_kept_section): Initialize\n-\tkept_file.\n-\n-2018-08-07  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR ld/23486\n-\t* x86_64.cc (Target_x86_64::Target_x86_64): Initialize\n-\tobject_isa_1_used_.\n-\t(Target_x86_64::object_isa_1_used_): New data member.\n-\t(Target_x86_64::record_gnu_property): Save ISA_1_USED bits for object.\n-\t(Target_x86_64::merge_gnu_properties): Merge ISA_1_USED bits.\n-\n-2018-08-06  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23455\n-\t* options.h (General_options): Add --warn-drop-version option.\n-\t* symtab.cc (Symbol_table::set_dynsym_indexes): Check it.\n-\n-2018-08-06  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* target.h (Sized_target::record_gnu_property): Change first two\n-\tparameters to unsigned int.\n-\t* x86_64.cc (Target_x86_64::record_gnu_property): Likewise.\n-\n-2018-07-30  Nick Clifton  <nickc@redhat.com>\n-\n-\t* layout.cc (section_name_mapping): Add an entry for\n-\t.gnu.build.attributes.\n-\n-2018-07-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/fr.po: Updated French translation.\n-\n-2018-07-14  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23397\n-\t* object.cc (Sized_relobj_file::do_layout): Mark section as deferred.\n-\t* testsuite/Makefile.am (plugin_test_1): Add --emit-relocs option to\n-\texisting test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-07-14  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23409\n-\t* symtab.cc (Symbol_table::define_special_symbol): Add check for\n-\tversion name on existing symbol.\n-\t* testsuite/Makefile.am (ver_test_pr23409): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/ver_test_pr23409.sh: New test script.\n-\t* testsuite/ver_test_pr23409_1.script: New version script.\n-\t* testsuite/ver_test_pr23409_2.script: New version script.\n-\n-2018-07-11  Franz Sirl  <franz.sirl-kernel@lauterbach.com>\n-\n-\t* main.cc (main): Print m.arena as long long.\n-\n-2018-07-09  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* incremental.cc (Sized_incremental_binary::setup_readers): Use\n-\templace_back for C++ 11 or later.\n-\n-2018-07-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc: Include attributes.h.\n-\t(Powerpc_relobj::attributes_section_data_): New variable, with\n-\taccessor and associated constructor and destructor support.\n-\t(Powerpc_dynobj::attributes_section_data_): Likewise.\n-\t(Powerpc_relobj::do_read_symbols): Stash SHT_GNU_ATTRIBUTES section\n-\tcontents in attributes_section_data_.\n-\t(Powerpc_dynobj::do_read_symbols): Likewise.\n-\t(Target_powerpc): Add attributes_section_data_, last_fp_, last_ld_,\n-\tlast_vec_, and last_struct_ vars.\n-\t(Target_powerpc::merge_object_attributes): New function.\n-\t(Target_powerpc::do_finalize_sections): Iterate over input objects\n-\tmerging attributes.  Create output attributes section.\n-\n-2018-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/gold.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\n-2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* version.cc (version_string): Bump to 1.16.\n-\t* NEWS: Add new features in 1.16.\n-\n-2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22914\n-\t* x86_64.cc (Target_x86_64::record_gnu_property): Initialize val.\n-\n-2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22915\n-\t* x86_64.cc (Output_data_plt_x86_64_ibt): New class.\n-\t(Target_x86_64::do_make_data_plt): (All instantiations) Check for\n-\tIBT feature bit and create IBT PLTs.\n-\n-2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22914\n-\t* layout.cc (read_sized_value): Fix spelling of section name.\n-\t(Layout::layout_gnu_property): Call Sized_target::record_gnu_property\n-\tfor target-specific properties;\n-\tdon't store them with target-independent properties yet.\n-\t(Layout::merge_gnu_properties): New method.\n-\t(Layout::add_gnu_property): New method.\n-\t(Layout::create_gnu_properties_note): Call target to finalize\n-\ttarget-specific properties. Fix spelling of output section name.\n-\t* layout.h (Layout::merge_gnu_properties): New method.\n-\t(Layout::add_gnu_property): New method.\n-\t* object.cc (Sized_relobj_file::do_layout): Call\n-\tLayout::merge_gnu_properties.\n-\t* target.h (Target::merge_gnu_property): Remove.\n-\t(Target::finalize_gnu_properties): New method.\n-\t(Target::do_merge_gnu_property): Move to Sized_target and rename.\n-\t(Target::do_finalize_gnu_properties): New virtual method.\n-\t(Sized_target::record_gnu_property): Moved and renamed from\n-\tTarget::do_merge_gnu_property.\n-\t(Sized_target::merge_gnu_properties): New virtual method.\n-\t* x86_64.cc (Target_x86_64::isa_1_used_, isa_1_needed_)\n-\t(feature_1_, object_feature_1_, seen_first_object_): New data members.\n-\t(Target_x86_64::do_merge_gnu_property): Rename to ...\n-\t(Target_x86_64::record_gnu_property): ... this.  Save target-specific\n-\tproperties in Target class object.\n-\t(Target_x86_64::merge_gnu_properties): New method.\n-\t(add_property): New static inline function.\n-\t(Target_x86_64::do_finalize_gnu_properties): New method.\n-\t* testsuite/Makefile.am (gnu_property_test): Remove C source file;\n-\tlink directly without compiler driver.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/gnu_property_a.S: Add _start.\n-\n-2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* incremental.cc (Sized_incremental_binary::setup_readers): Use\n-\templace_back for GCC 5 and later.\n-\t* incremental.h (Incremental_binary::Input_reader): Provide copy\n-\tconstructor.\n-\t(Sized_incremental_binary::Sized_input_reader): Likewise.\n-\n-2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22914\n-\t* layout.cc (Layout::Layout): Initialize gnu_properties_.\n-\t(read_sized_value, write_sized_value): New functions.\n-\t(Layout::layout_gnu_property): New method.\n-\t(Layout::create_notes): Call create_gnu_properties_note.\n-\t(Layout::create_gnu_properties_note): New method.\n-\t* layout.h (Layout::layout_gnu_property): New method.\n-\t(Layout::create_gnu_properties_note): New method.\n-\t(Layout::Gnu_property, Layout::Gnu_properties): New types.\n-\t(Layout::gnu_properties_): New data member.\n-\t* object.cc (Sized_relobj_file::layout_gnu_property_section): New\n-\tmethod.\n-\t(Sized_relobj_file::do_layout): Handle .note.gnu.property sections.\n-\t* object.h (Sized_relobj_file::layout_gnu_property_section): New\n-\tmethod.\n-\t* target.h (Target::merge_gnu_property): New method.\n-\t(Target::do_merge_gnu_property): New virtual method.\n-\t* x86_64.cc (Target_x86_64::do_merge_gnu_property): New method.\n-\t* testsuite/Makefile.am (gnu_property_test): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/gnu_property_a.S: New source file.\n-\t* testsuite/gnu_property_b.S: New source file.\n-\t* testsuite/gnu_property_c.S: New source file.\n-\t* testsuite/gnu_property_main.c: New source file.\n-\t* testsuite/gnu_property_test.sh: New test script.\n-\n-2018-06-21  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* resolve.cc (Symbol_table::resolve): Rename tobinding to\n-\torig_tobinding.  Call set_is_needed() for objects that resolve\n-\tnon-weak references.\n-\t(Symbol_table::should_override): Allow a dynamic definition to\n-\toverride an earlier one in a not-needed library.\n-\t* symtab.cc (Symbol_table::set_dynsym_indexes): Remove separate\n-\tprocessing for as-needed symbols.  Add warning when discarding\n-\tversion informatin.\n-\t* testsuite/Makefile.am (weak_as_needed): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/weak_as_needed.sh: New test script.\n-\t* testsuite/weak_as_needed_a.c: New source file.\n-\t* testsuite/weak_as_needed_b.c: New source file.\n-\t* testsuite/weak_as_needed_b.script: New version script.\n-\t* testsuite/weak_as_needed_c.c: New source file.\n-\t* testsuite/weak_as_needed_c.script: New version script.\n-\n-2018-06-20  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23268\n-\t* dynobj.cc (Versions::Versions): Change init for needs_base_version_.\n-\t(Versions::record_version): Add verdefs for both shared objects and\n-\texecutables.\n-\t(Versions::add_def): Likewise for base version.\n-\t(Versions::add_need): Don't add base version for executables.\n-\t(Versions::version_index): Look up version for both shared objects and\n-\texecutables.\n-\t* testsuite/Makefile.am (ver_test_14): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/ver_test_14.script: New version script.\n-\t* testsuite/ver_test_14.sh: New test script.\n-\n-2018-06-19  Joshua Watt  <jpewhacker@gmail.com>\n-\t    Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* configure.ac: Replace manual thread configuration with AX_PTHREAD.\n-\tAdd --enable-threads=auto.\n-\t* Makefile.am (THREADFLAGS, THREADLIBS): New defines.\n-\t(AM_CFLAGS, AM_CXXFLAGS): Add $(THREADFLAGS).\n-\t(THREADSLIB): Remove; change all references to THREADLIBS.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* config.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* testsuite/Makefile.am (THREADSLIB): Replace with...\n-\t(THREADFLAGS, THREADLIBS): ... these.\n-\t(LDADD): Remove; add as individual defines for...\n-\t(object_unittest, binary_unittest, leb128_unittest)\n-\t(overflow_unittest): ... these tests.\n-\t(tls_test, tls_pic_test, tls_pie_test, tls_pie_pic_test)\n-\t(tls_shared_test, tls_shared_ie_test, tls_shared_gd_to_ie_test)\n-\t(tls_shared_gnu2_gd_to_ie_test, tls_shared_gnu2_test_LDFLAGS)\n-\t(tls_shared_nonpic_test_LDFLAGS): Add $(THREADFLAGS) and ($THREADLIBS).\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-06-19  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* testsuite/Makefile.am (MOSTLYCLEANFILES): Add *.stderr.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* configure.ac: Remove AC_PREREQ, add missing quoting and usage\n-\tof AC_LANG_SOURCE.\n-\t* Makefile.in: Re-generate.\n-\t* aclocal.m4: Re-generate.\n-\t* configure: Re-generate.\n-\t* testsuite/Makefile.in: Re-generate.\n-\n-2018-05-10  Stephen Crane  <sjc@immunant.com>\n-\n-\t* aarch64.cc (Target_aarch64::do_finalize_sections): Use size of\n-\t.got section for the _GLOBAL_OFFSET_TABLE_ symbol computation.\n-\n-2018-04-24  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/20642\n-\tPR gold/22820\n-\t* gc.h (gc_process_relocs): Flag STT_SECTION symbols in symvec.\n-\t* icf.cc (get_section_contents): For merge sections, ignore the\n-\taddend for relocations against non-section symbols.\n-\n-2018-04-24  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/16504\n-\t* dynobj.cc (Versions::symbol_section_contents): Don't set\n-\tVERSYM_HIDDEN flag for undefined symbols.\n-\t* symtab.cc (Symbol_table::add_from_object): Don't override default\n-\tversion definition with a different default version.\n-\t* symtab.h (Symbol::from_dyn): New method.\n-\t* testsuite/plugin_test.c (struct sym_info): Add ver field.\n-\t(claim_file_hook): Pass symbol version to plugin API.\n-\t(parse_readelf_line): Parse symbol version.\n-\t* testsuite/Makefile.am (ver_test_pr16504): New test case.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/ver_test_pr16504.sh: New test script.\n-\t* testsuite/ver_test_pr16504_a.c: New source file.\n-\t* testsuite/ver_test_pr16504_a.script: New version script.\n-\t* testsuite/ver_test_pr16504_b.c: New source file.\n-\t* testsuite/ver_test_pr16504_b.script: New version script.\n-\n-2018-04-19  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23046\n-\t* gc.h (gc_process_relocs): Pass target to\n-\tscan.local_reloc_may_be_function_pointer.\n-\n-2018-04-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\n-2018-04-14  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23046\n-\t* gc.h (gc_process_relocs): Pass target to\n-\tscan.global_reloc_may_be_function_pointer.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure: Regenerate.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::Track_tls::maybe_skip_tls_get_addr_call):\n-\tHandle inline plt sequence relocs.\n-\t(Stub_table::Plt_stub_key::Plt_stub_key): Likewise.\n-\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise.\n-\t(Target_powerpc::Relocate::relocate): Likewise.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::lplt_): New variable.\n-\t(Target_powerpc::lplt_section): Associated accessor.\n-\t(Target_powerpc::plt_off): Handle local non-ifunc symbols.\n-\t(Target_powerpc::make_lplt_section): New function.\n-\t(Target_powerpc::make_local_plt_entry): New function.\n-\t(Powerpc_relobj::do_relocate_sections): Write out lplt.\n-\t(Output_data_plt_powerpc::first_plt_entry_offset): Zero for lplt.\n-\t(Output_data_plt_powerpc::add_local_entry): New function.\n-\t(Output_data_plt_powerpc::do_write): Ignore lplt.\n-\t(Target_powerpc::make_iplt_section): Make lplt first.\n-\t(Target_powerpc::make_brlt_section): Make .branch_lt relro.\n-\t(Target_powerpc::Scan::local): Handle PLT16 relocs.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::plt_off): New functions.\n-\t(is_plt16_reloc): New function.\n-\t(Stub_table::plt_off): Use Target_powerpc::plt_off.\n-\t(Stub_table::plt_call_size): Use plt_off.\n-\t(Stub_table::do_write): Likewise.\n-\t(Target_powerpc::Scan::get_reference_flags): Return RELATIVE_REF\n-\tfor PLT16 relocations.\n-\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Return true\n-\tfor PLT16 relocations.\n-\t(Target_powerpc::Scan::global): Make a PLT entry for PLT16 relocations.\n-\t(Target_powerpc::Relocate::relocate): Support PLT16 relocations.\n-\t(Powerpc_scan_relocatable_reloc::global_strategy): Return RELOC_SPECIAL\n-\tfor ppc32 plt16 relocs.\n-\n-2018-04-06  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* object.cc (Sized_relobj_file::include_section_group): Store\n-\treference to Kept_section info for discarded comdat sections\n-\tregardless of size.  Move size checking to map_to_kept_section.\n-\t(Sized_relobj_file::include_linkonce_section): Likewise.\n-\t(Sized_relobj_file::map_to_kept_section): Add section name parameter.\n-\tInsert size checking logic from above functions.\n-\t(Sized_relobj_file::find_kept_section_object): New method.\n-\t(Sized_relobj_file::get_symbol_name): New method.\n-\t* object.h (Sized_relobj_file::map_to_kept_section): Add section_name\n-\tparameter.  Adjust all callers.\n-\t(Sized_relobj_file::find_kept_section_object): New method.\n-\t(Sized_relobj_file::get_symbol_name): New method.\n-\t(Sized_relobj_file::Kept_comdat_section): Replace object and shndx\n-\tfields with sh_size, kept_section, symndx, and is_comdat fields.\n-\t(Sized_relobj_file::set_kept_comdat_section): Replace kept_object\n-\tand kept_shndx parameters with is_comdat, symndx, sh_size, and\n-\tkept_section.\n-\t(Sized_relobj_file::get_kept_comdat_section): Likewise.\n-\t* target-reloc.h (enum Comdat_behavior): Change CB_WARNING to CB_ERROR.\n-\tAdjust all references.\n-\t(issue_undefined_symbol_error): New function template.\n-\t(relocate_section): Pass section name to map_to_kept_section.\n-\tMove discarded section code to new function above.\n-\t* aarch64.cc (Target_aarch64::scan_reloc_section_for_stubs): Move\n-\tdeclaration for gsym out one level.  Call issue_discarded_error.\n-\t* arm.cc (Target_arm::scan_reloc_section_for_stubs): Likewise.\n-\t* powerpc.cc (Relocate_comdat_behavior): Change CB_WARNING to CB_ERROR.\n-\n-2018-04-05  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* target-reloc.h (relocate_section): Add local symbol index or global\n-\tsymbol name to warning about relocation that refers to discarded\n-\tsection.\n-\n-2018-04-05  James Cowgill  <james.cowgill@mips.com>\n-\n-\tRevert previous patch and apply revised patch.\n-\n-\tPR gold/22770\n-\t* mips.cc (Mips_got_info::record_got_page_entry): Don't insert\n-\tGot_page_entry for object's GOT.\n-\t(Mips_got_info::add_got_page_entries): Add all pages from from's GOT.\n-\tRename to add_got_page_count.\n-\t(Got_page_entry): Remove num_pages.\n-\n-2018-04-05  James Cowgill  <james.cowgill@mips.com>\n-\n-\tPR gold/22770\n-\t* mips.cc (Mips_got_info::record_got_page_entry): Fetch existing\n-\tpage entries for the object's GOT.\n-\n-2018-04-05  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (Target_powerpc::make_brlt_section): Make .branch_lt relro.\n-\n-2018-04-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\n-2018-04-02  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/23016\n-\t* incremental.cc (can_incremental_update): Check for unwind section\n-\ttype.\n-\t* layout.h (Layout::layout): Add sh_type parameter.\n-\t* layout.cc (Layout::layout): Likewise.\n-\t(Layout::layout_reloc): Create new output reloc section if data\n-\tsection does not already have one.\n-\t(Layout::layout_eh_frame): Check for unwind section type.\n-\t(Layout::make_eh_frame_section): Use unwind section type for .eh_frame\n-\tand .eh_frame_hdr.\n-\t* object.h (Sized_relobj_file::Shdr_write): New typedef.\n-\t(Sized_relobj_file::layout_section): Add sh_type parameter.\n-\t(Sized_relobj_file::Deferred_layout::Deferred_layout): Add sh_type\n-\tparameter.\n-\t* object.cc (Sized_relobj_file::check_eh_frame_flags): Check for\n-\tunwind section type.\n-\t(Sized_relobj_file::layout_section): Add sh_type parameter; pass it\n-\tto Layout::layout.\n-\t(Sized_relobj_file::do_layout): Make local copy of sh_type.\n-\tForce .eh_frame sections to unwind section type.\n-\tPass sh_type to layout_section.\n-\t(Sized_relobj_file<size, big_endian>::do_layout_deferred_sections):\n-\tPass sh_type to layout_section.\n-\t* output.cc (Output_section::Output_section): Initialize reloc_section_.\n-\t* output.h (Output_section::reloc_section): New method.\n-\t(Output_section::set_reloc_section): New method.\n-\t(Output_section::reloc_section_): New data member.\n-\t* target.h (Target::unwind_section_type): New method.\n-\t(Target::Target_info::unwind_section_type): New data member.\n-\n-\t* aarch64.cc (aarch64_info): Add unwind_section_type.\n-\t* arm.cc (arm_info, arm_nacl_info): Likewise.\n-\t* i386.cc (i386_info, i386_nacl_info, iamcu_info): Likewise.\n-\t* mips.cc (mips_info, mips_nacl_info): Likewise.\n-\t* powerpc.cc (powerpc_info): Likewise.\n-\t* s390.cc (s390_info): Likewise.\n-\t* sparc.cc (sparc_info): Likewise.\n-\t* tilegx.cc (tilegx_info): Likewise.\n-\t* x86_64.cc (x86_64_info, x86_64_nacl_info): Likewise.\n-\n-\t* testsuite/Makefile.am (pr23016_1, pr23016_2): New test cases.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/testfile.cc: Add unwind_section_type.\n-\t* testsuite/pr23016_1.sh: New test script.\n-\t* testsuite/pr23016_1a.s: New source file.\n-\t* testsuite/pr23016_1b.s: New source file.\n-\t* testsuite/pr23016_2.sh: New test script.\n-\t* testsuite/pr23016_2a.s: New source file.\n-\t* testsuite/pr23016_2b.s: New source file.\n-\n-2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/21423\n-\tPR gold/22500\n-\t* configure.ac: Call AC_USE_SYSTEM_EXTENSIONS.\n-\tReplace check for --enable-plugins with AC_PLUGINS.\n-\t* options.cc (parse_plugin, parse_plugin_opt): Remove #ifdef.\n-\t(General_options::finalize): Check if plugins enabled.\n-\t* options.h (--plugin, --plugin-opt): Define even if plugins not\n-\tenabled.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* configure: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22969\n-\t* aarch64-reloc.def: Add TLSLE_LDST* relocations.\n-\t* aarch64.cc (Target_aarch64::optimize_tls_reloc): Likewise.\n-\t(Target_aarch64::Scan::local): Likewise.\n-\t(Target_aarch64::Scan::global): Likewise.\n-\t(Target_aarch64::Relocate::relocate): Likewise.\n-\t(Target_aarch64::Relocate::relocate_tls): Likewise.\n-\n-2018-03-27  Roland McGrath  <mcgrathr@google.com>\n-\n-\t* testsuite/split_x86_64.sh: Fix bad regexp.\n-\n-2018-03-26  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22868\n-\t* plugin.cc (Sized_pluginobj::do_add_symbols): Use a real section\n-\tindex instead of SHN_ABS for defined symbols.\n-\t* testsuite/Makefile.am (plugin_pr22868): New test case.\n-\t* testsuite/Makefile.in: Regenerate\n-\t* testsuite/plugin_pr22868.sh: New test script.\n-\t* testsuite/plugin_pr22868_a.c: New source file.\n-\t* testsuite/plugin_pr22868_b.c: New source file.\n-\n-2018-03-23  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* plugin.cc (link_or_copy_file): Remove newlines from warning messages.\n-\tAdd pedantic check for return value from ::write.\n-\n-2018-03-23  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* debug.h (DEBUG_PLUGIN): New constant.\n-\t(DEBUG_ALL): Add DEBUG_PLUGIN.\n-\t(debug_string_to_enum): Likewise.\n-\t* plugin.cc (make_sized_plugin_object): Add filename parameter.\n-\t(Plugin_recorder): New class.\n-\t(Plugin_manager::~Plugin_manager): Delete recorder_.\n-\t(Plugin_manager::load_plugins): Create and initialize recorder_.\n-\t(Plugin_manager::claim_file): Record claimed and unclaimed files.\n-\t(Plugin_manager::make_plugin_object): Use object name as name for\n-\tplugin object, if available.\n-\t(Plugin_manager::add_input_file): Record replacement files.\n-\t(Sized_pluginobj::do_add_symbols): Record plugin symbols.\n-\t(Plugin_finish::run): Call Plugin_recorder::finish().\n-\t(make_sized_plugin_object): Add filename parameter and pass to\n-\tSized_pluginobj constructor.\n-\t* plugin.h (Plugin::filename): New method.\n-\t(Plugin::recorder): New method.\n-\t(Plugin::recorder_): New data member.\n-\n-2018-03-07  Sriraman Tallam  <tmsriram@google.com>\n-\n-\t* layout.cc (Layout::default_section_order): Check for text section\n-\tprefixes.\n-\t(Layout::text_section_name_mapping): New static member.\n-\t(Layout::text_section_name_mapping_count): New static member.\n-\t(Layout::match_section_name): New static function.\n-\t(Layout::output_section_name): Check for text section prefixes.\n-\t* layout.h (Output_section_order::ORDER_TEXT_HOT): New enum value.\n-\t(Output_section_order::ORDER_TEXT_STARTUP): New enum value.\n-\t(Output_section_order::ORDER_TEXT_EXIT): New enum value.\n-\t(Output_section_order::ORDER_TEXT_UNLIKELY): New enum value.\n-\t(Layout::text_section_name_mapping): New static member.\n-\t(Layout::text_section_name_mapping_count): New static member.\n-\t(Layout::match_section_name): New static function.\n-\t* options.h (keep_text_section_prefix): New -z option.\n-\t* testsuite/Makefile.am (keep_text_section_prefix): New test.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/keep_text_section_prefix.cc: New test source.\n-\t* testsuite/keep_text_section_prefix.sh: New test script.\n-\n-2018-02-22  Sriraman Tallam  <tmsriram@google.com>\n-\n-\t* plugin.cc (get_wrap_symbols): New plugin interface.\n-\t(load): Add get_wrap_symbols to transfer vector.\n-\t* plugin-api.h (ld_plugin_get_wrap_symbols): New plugin interface.\n-\t* testsuite/plugin_test.c (onload): Call and check get_wrap_symbols\n-\tinterface.\n-\t* testsuite/plugin_test_wrap_symbols.sh: New test script.\n-\t* testsuite/plugin_test_wrap_symbols_1.cc: New file.\n-\t* testsuite/plugin_test_wrap_symbols_2.cc: New file.\n-\t* testsuite/Makefile.am (plugin_test_wrap_symbols): New test.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2018-02-07  Sriraman Tallam  <tmsriram@google.com>\n-\n-\t* expression.cc (Symbol_expression::set_expr_sym_in_real_elf):\n-\tNew method.\n-\t(Unary_expression::set_expr_sym_in_real_elf): New method.\n-\t(Binary_expression::set_expr_sym_in_real_elf): New method.\n-\t(Trinary_expression::set_expr_sym_in_real_elf): New method.\n-\t* plugin.cc (get_symbol_resolution_info): Fix symbol resolution if\n-\tdefined or used in defsyms.\n-\t* plugin.h (Plugin_manager::is_defsym_def): New method.\n-\t(Plugin_manager::Plugin_manager): Initialize defsym_defines_set_.\n-\t(Plugin_manager::defsym_defines_set_): New member.\n-\t(Plugin_manager::Defsym_defines_set): New typedef.\n-\t* script.cc (Script_options::set_defsym_uses_in_real_elf): New method.\n-\t(Script_options::find_defsym_defs): New method.\n-\t* script.h (Expression::set_expr_sym_in_real_elf): New method.\n-\t(Symbol_assignment::is_defsym): New method.\n-\t(Symbol_assignment::value): New method.\n-\t(Script_options::find_defsym_defs): New method.\n-\t(Script_options::set_defsym_uses_in_real_elf): New method.\n-\t* testsuite/Makefile.am (plugin_test_defsym): New test.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* testsuite/plugin_test.c: Check for new symbol resolution.\n-\t* testsuite/plugin_test_defsym.sh: New script.\n-\t* testsuite/plugin_test_defsym.c: New test source.\n-\n-2018-02-07  Alan Modra  <amodra@gmail.com>\n-\n-\tRevert 2018-01-17  Alan Modra  <amodra@gmail.com>\n-\t* options.h: Remove --speculate-indirect-jumps support.\n-\t* powerpc.cc: Likewise.\n-\n-2018-02-02  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* PR gold/22776\n-\t* dwarf_reader.cc (Sized_dwarf_line_info::read_header_prolog): Add\n-\tsupport for DWARF-4 line number tables.\n-\t* dwarf_reader.h (Sized_dwarf_line_info::max_ops_per_insn): New field.\n-\n-2018-01-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* powerpc.cc (param_plt_align): New function supplying default\n-\t--plt-align values.  Use it..\n-\t(Stub_table::plt_call_align): ..here, and..\n-\t(Output_data_glink::global_entry_align): ..here.\n-\t(Stub_table::stub_align): Correct 32-bit minimum alignment.\n-\n-2018-01-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* options.h (speculate_indirect_jumps): New option.\n-\t* powerpc.cc (beqctrm, beqctrlm, crseteq): New insn constants.\n-\t(output_bctr): New function.\n-\t(Stub_table::plt_call_size): Add space for speculation barrier.\n-\t(Stub_table::branch_stub_size): Likewise.\n-\t(Output_data_glink::pltresolve_size): Likewise.\n-\t(Stub_table::do_write): Output speculation barriers.\n-\n-2018-01-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* options.h (plt_align): Support for PowerPC32 too.\n-\t* powerpc.cc (Stub_table::stub_align): Heed --plt-align for 32-bit.\n-\t(Stub_table::plt_call_size, branch_stub_size): Tidy.\n-\t(Stub_table::plt_call_align): Implement using stub_align.\n-\t(Output_data_glink::global_entry_align): New function.\n-\t(Output_data_glink::global_entry_off): New function.\n-\t(Output_data_glink::global_entry_address): Use global_entry_off.\n-\t(Output_data_glink::pltresolve_size): New function, replacing\n-\tpltresolve_size_ constant.  Update all uses.\n-\t(Output_data_glink::add_global_entry): Align offset.\n-\t(Output_data_glink::set_final_data_size): Use global_entry_align.\n-\t(Stub_table::do_write): Don't pad __glink_PLTrelsolve with nops.\n-\tTidy stub output.  Use global_entry_off.\n-\n-2018-01-15  Cary Coutant  <ccoutant@gmail.com>\n-\n-\tPR gold/22694\n-\t* options.h (-fuse-ld): Add correct helparg.\n-\n-2018-01-15  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/gold.pot: Regenerated.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\n-2018-01-12  Cary Coutant  <ccoutant@gmail.com>\n-\n-\t* NEWS: Add new features in 1.15.\n-\t* version.cc (version_string): Bump to 1.15.\n-\n-2018-01-12  Sterling Augustine  <saugustine@google.com>\n-\n-\t* cref.cc (Cref_inputs::Cref_table_compare::operator): Add\n-\tconditionals and calls to is_forwarder.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "cdbddde63f5cb8abd348db042752af32ab57d020",
      "filename": "gold/ChangeLog-2018",
      "status": "added",
      "additions": 785,
      "deletions": 0,
      "changes": 785,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gold/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gold/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gold/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,785 @@\n+2018-12-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/Makefile.am (keep_text_section_prefix_nm.stdout):\n+\tPass --synthetic to nm.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-12-08  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 21128\n+\t* testsuite/icf_safe_so_test.sh (check_fold): Rewrite to check\n+\tmultiple symbols at once.\n+\t(arch_specific_safe_fold): Likewise, and call with the four foo*\n+\tsymbols expected to fold.\n+\n+2018-12-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* archive.cc (Archive::get_elf_object_for_member): Also print\n+\tarchive member and non-ELF/non-IR info on error.\n+\n+2018-12-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* symtab.h (Symbol::Symbol): Avoid -Wclass-memaccess warning.\n+\n+2018-12-03  Alexey Neyman  <stilor@att.net>\n+\n+\tPR gold/23594\n+\t* configure.ac: Add checks for link, mkdtemp.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* plugin.cc (Plugin_recorder::init): Fall back to mktemp\n+\tif mkdtemp is not available.\n+\t(link_or_copy_file): Fall back to copy if link() is not available.\n+\n+2018-12-02  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23919\n+\t* merge.cc (Output_merge_string<Char_type>::do_add_input_section):\n+\tGet addralign from decompressed_section_contents.\n+\t* object.cc (build_compressed_section_map): Set info.addralign.\n+\t(Object::decompressed_section_contents): Add a palign\n+\targument and store p->second.addralign in *palign if it isn't\n+\tNULL.\n+\t* object.h (Compressed_section_info): Add addralign.\n+\t(section_is_compressed): Add a palign argument, default it\n+\tto NULL, store p->second.addralign in *palign if it isn't NULL.\n+\t(Object::decompressed_section_contents): Likewise.\n+\t* output.cc (Output_section::add_input_section): Get addralign\n+\tfrom section_is_compressed.\n+\n+2018-11-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/Makefile.am (justsyms_lib): Link with -z norelro.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/justsyms_exec.c (main): Do check exported_func\n+\ton PowerPC64 ELFv2.\n+\n+2018-11-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/ver_test_14.sh: Accept objdump -T display of st_other\n+\tbits on powerpc64le.\n+\n+2018-11-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am (gcctestdir1/ld): Use $@ and absolute paths.\n+\t(gcctestdir1/collect-ld): New.\n+\t(ld1_DEPENDENCIES): Add gcctestdir1/collect-ld.\n+\t(ld1_LDFLAGS): Remove -Bgcctestdir1/.\n+\t(editcc1, ld1_LINK): Define.\n+\t(gcctestdir2/ld, gcctestdir2/collect-ld, ld2_DEPENDENCIES),\n+\t(ld2_LDFLAGS, editcc2, ld2_LINK),\n+\t(ld1_r_DEPENDENCIES, ld1_r_LDFLAGS, ld1_r_LINK),\n+\t(gcctestdir2-r/ld, gcctestdir2-r/collect-ld, ld2_r_DEPENDENCIES),\n+\t(ld2_r_LDFLAGS, editcc2r, ld2_r_LINK),\n+\t(gcctestdir3/ld, gcctestdir3/collect-ld, ld3_DEPENDENCIES),\n+\t(ld3_LDFLAGS, editcc3, ld3_LINK),\n+\t(gcctestdir4/ld, gcctestdir4/collect-ld, ld4_DEPENDENCIES),\n+\t(ld4_LDFLAGS, editcc4, ld4_LINK): Similarly.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/Makefile.am (editcc): Define sed command to put\n+\tour -B option first.  Remove other occurrences of -Bgcctestdir/\n+\tthroughout file.\n+\t(editcc1): Define for -D_FORTIFY_SOURCE stripping.\n+\t(editcc2): Define for -static-libgcc/libstdc++ stripping.\n+\t(LINK1, CXXLINK1): Don't use CCLD or CXXLD.\n+\t(CCLD, CXXLD, COMPILE, LINK, CXXCOMPILE, CXXLINK, CXXLINK_S): Define\n+\tusing editcc macros.\n+\t(gcctestdir/collect-ld): New rule, add as a dependency of..\n+\t(gcctestdir/ld): ..this.  Use $@ and abs_top_buildir.\n+\t(gcctestdir/as): Use $@.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/incremental_test.sh (actual): Match collect-ld too.\n+\n+2018-11-02  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am (MOSTLYCLEANFILES): Define.\n+\t* Makefile.in: Regnerate.\n+\t* testsuite/Makefile.am (MOSTLYCLEANFILES): Add ver_test_14 and\n+\tgnu_property_test.\n+\t* testsuite/Makefile.in: Regnerate.\n+\n+2018-10-16  Cherry Zhang  <cherryyz@google.com>\n+\n+\tPR 23769\n+\t* gold.cc (queue_middle_tasks): Correct split-stack error message.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips.cc (Mips_mach, add_machine_extensions, elf_mips_mach):\n+\tRename loongson3a to gs464.\n+\t(mips_isa_ext_mach, mips_isa_ext): Delete loongson3a.\n+\t(infer_abiflags): Use ases instead of isa_ext for infer ABI\n+\tflags.\n+\t(elf_mips_mach_name): Rename loongson3a to gs464.\n+\n+2018-07-10  Tulio Magno Quites Machado Filho  <tuliom@linux.ibm.com>\n+\n+\t* object.cc (Sized_relobj_file::map_to_kept_section): Initialize\n+\tkept_file.\n+\n+2018-08-07  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR ld/23486\n+\t* x86_64.cc (Target_x86_64::Target_x86_64): Initialize\n+\tobject_isa_1_used_.\n+\t(Target_x86_64::object_isa_1_used_): New data member.\n+\t(Target_x86_64::record_gnu_property): Save ISA_1_USED bits for object.\n+\t(Target_x86_64::merge_gnu_properties): Merge ISA_1_USED bits.\n+\n+2018-08-06  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23455\n+\t* options.h (General_options): Add --warn-drop-version option.\n+\t* symtab.cc (Symbol_table::set_dynsym_indexes): Check it.\n+\n+2018-08-06  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* target.h (Sized_target::record_gnu_property): Change first two\n+\tparameters to unsigned int.\n+\t* x86_64.cc (Target_x86_64::record_gnu_property): Likewise.\n+\n+2018-07-30  Nick Clifton  <nickc@redhat.com>\n+\n+\t* layout.cc (section_name_mapping): Add an entry for\n+\t.gnu.build.attributes.\n+\n+2018-07-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/fr.po: Updated French translation.\n+\n+2018-07-14  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23397\n+\t* object.cc (Sized_relobj_file::do_layout): Mark section as deferred.\n+\t* testsuite/Makefile.am (plugin_test_1): Add --emit-relocs option to\n+\texisting test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-07-14  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23409\n+\t* symtab.cc (Symbol_table::define_special_symbol): Add check for\n+\tversion name on existing symbol.\n+\t* testsuite/Makefile.am (ver_test_pr23409): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/ver_test_pr23409.sh: New test script.\n+\t* testsuite/ver_test_pr23409_1.script: New version script.\n+\t* testsuite/ver_test_pr23409_2.script: New version script.\n+\n+2018-07-11  Franz Sirl  <franz.sirl-kernel@lauterbach.com>\n+\n+\t* main.cc (main): Print m.arena as long long.\n+\n+2018-07-09  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* incremental.cc (Sized_incremental_binary::setup_readers): Use\n+\templace_back for C++ 11 or later.\n+\n+2018-07-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc: Include attributes.h.\n+\t(Powerpc_relobj::attributes_section_data_): New variable, with\n+\taccessor and associated constructor and destructor support.\n+\t(Powerpc_dynobj::attributes_section_data_): Likewise.\n+\t(Powerpc_relobj::do_read_symbols): Stash SHT_GNU_ATTRIBUTES section\n+\tcontents in attributes_section_data_.\n+\t(Powerpc_dynobj::do_read_symbols): Likewise.\n+\t(Target_powerpc): Add attributes_section_data_, last_fp_, last_ld_,\n+\tlast_vec_, and last_struct_ vars.\n+\t(Target_powerpc::merge_object_attributes): New function.\n+\t(Target_powerpc::do_finalize_sections): Iterate over input objects\n+\tmerging attributes.  Create output attributes section.\n+\n+2018-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/gold.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\n+2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* version.cc (version_string): Bump to 1.16.\n+\t* NEWS: Add new features in 1.16.\n+\n+2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22914\n+\t* x86_64.cc (Target_x86_64::record_gnu_property): Initialize val.\n+\n+2018-06-23  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22915\n+\t* x86_64.cc (Output_data_plt_x86_64_ibt): New class.\n+\t(Target_x86_64::do_make_data_plt): (All instantiations) Check for\n+\tIBT feature bit and create IBT PLTs.\n+\n+2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22914\n+\t* layout.cc (read_sized_value): Fix spelling of section name.\n+\t(Layout::layout_gnu_property): Call Sized_target::record_gnu_property\n+\tfor target-specific properties;\n+\tdon't store them with target-independent properties yet.\n+\t(Layout::merge_gnu_properties): New method.\n+\t(Layout::add_gnu_property): New method.\n+\t(Layout::create_gnu_properties_note): Call target to finalize\n+\ttarget-specific properties. Fix spelling of output section name.\n+\t* layout.h (Layout::merge_gnu_properties): New method.\n+\t(Layout::add_gnu_property): New method.\n+\t* object.cc (Sized_relobj_file::do_layout): Call\n+\tLayout::merge_gnu_properties.\n+\t* target.h (Target::merge_gnu_property): Remove.\n+\t(Target::finalize_gnu_properties): New method.\n+\t(Target::do_merge_gnu_property): Move to Sized_target and rename.\n+\t(Target::do_finalize_gnu_properties): New virtual method.\n+\t(Sized_target::record_gnu_property): Moved and renamed from\n+\tTarget::do_merge_gnu_property.\n+\t(Sized_target::merge_gnu_properties): New virtual method.\n+\t* x86_64.cc (Target_x86_64::isa_1_used_, isa_1_needed_)\n+\t(feature_1_, object_feature_1_, seen_first_object_): New data members.\n+\t(Target_x86_64::do_merge_gnu_property): Rename to ...\n+\t(Target_x86_64::record_gnu_property): ... this.  Save target-specific\n+\tproperties in Target class object.\n+\t(Target_x86_64::merge_gnu_properties): New method.\n+\t(add_property): New static inline function.\n+\t(Target_x86_64::do_finalize_gnu_properties): New method.\n+\t* testsuite/Makefile.am (gnu_property_test): Remove C source file;\n+\tlink directly without compiler driver.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/gnu_property_a.S: Add _start.\n+\n+2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* incremental.cc (Sized_incremental_binary::setup_readers): Use\n+\templace_back for GCC 5 and later.\n+\t* incremental.h (Incremental_binary::Input_reader): Provide copy\n+\tconstructor.\n+\t(Sized_incremental_binary::Sized_input_reader): Likewise.\n+\n+2018-06-22  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22914\n+\t* layout.cc (Layout::Layout): Initialize gnu_properties_.\n+\t(read_sized_value, write_sized_value): New functions.\n+\t(Layout::layout_gnu_property): New method.\n+\t(Layout::create_notes): Call create_gnu_properties_note.\n+\t(Layout::create_gnu_properties_note): New method.\n+\t* layout.h (Layout::layout_gnu_property): New method.\n+\t(Layout::create_gnu_properties_note): New method.\n+\t(Layout::Gnu_property, Layout::Gnu_properties): New types.\n+\t(Layout::gnu_properties_): New data member.\n+\t* object.cc (Sized_relobj_file::layout_gnu_property_section): New\n+\tmethod.\n+\t(Sized_relobj_file::do_layout): Handle .note.gnu.property sections.\n+\t* object.h (Sized_relobj_file::layout_gnu_property_section): New\n+\tmethod.\n+\t* target.h (Target::merge_gnu_property): New method.\n+\t(Target::do_merge_gnu_property): New virtual method.\n+\t* x86_64.cc (Target_x86_64::do_merge_gnu_property): New method.\n+\t* testsuite/Makefile.am (gnu_property_test): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/gnu_property_a.S: New source file.\n+\t* testsuite/gnu_property_b.S: New source file.\n+\t* testsuite/gnu_property_c.S: New source file.\n+\t* testsuite/gnu_property_main.c: New source file.\n+\t* testsuite/gnu_property_test.sh: New test script.\n+\n+2018-06-21  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* resolve.cc (Symbol_table::resolve): Rename tobinding to\n+\torig_tobinding.  Call set_is_needed() for objects that resolve\n+\tnon-weak references.\n+\t(Symbol_table::should_override): Allow a dynamic definition to\n+\toverride an earlier one in a not-needed library.\n+\t* symtab.cc (Symbol_table::set_dynsym_indexes): Remove separate\n+\tprocessing for as-needed symbols.  Add warning when discarding\n+\tversion informatin.\n+\t* testsuite/Makefile.am (weak_as_needed): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/weak_as_needed.sh: New test script.\n+\t* testsuite/weak_as_needed_a.c: New source file.\n+\t* testsuite/weak_as_needed_b.c: New source file.\n+\t* testsuite/weak_as_needed_b.script: New version script.\n+\t* testsuite/weak_as_needed_c.c: New source file.\n+\t* testsuite/weak_as_needed_c.script: New version script.\n+\n+2018-06-20  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23268\n+\t* dynobj.cc (Versions::Versions): Change init for needs_base_version_.\n+\t(Versions::record_version): Add verdefs for both shared objects and\n+\texecutables.\n+\t(Versions::add_def): Likewise for base version.\n+\t(Versions::add_need): Don't add base version for executables.\n+\t(Versions::version_index): Look up version for both shared objects and\n+\texecutables.\n+\t* testsuite/Makefile.am (ver_test_14): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/ver_test_14.script: New version script.\n+\t* testsuite/ver_test_14.sh: New test script.\n+\n+2018-06-19  Joshua Watt  <jpewhacker@gmail.com>\n+\t    Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* configure.ac: Replace manual thread configuration with AX_PTHREAD.\n+\tAdd --enable-threads=auto.\n+\t* Makefile.am (THREADFLAGS, THREADLIBS): New defines.\n+\t(AM_CFLAGS, AM_CXXFLAGS): Add $(THREADFLAGS).\n+\t(THREADSLIB): Remove; change all references to THREADLIBS.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.am (THREADSLIB): Replace with...\n+\t(THREADFLAGS, THREADLIBS): ... these.\n+\t(LDADD): Remove; add as individual defines for...\n+\t(object_unittest, binary_unittest, leb128_unittest)\n+\t(overflow_unittest): ... these tests.\n+\t(tls_test, tls_pic_test, tls_pie_test, tls_pie_pic_test)\n+\t(tls_shared_test, tls_shared_ie_test, tls_shared_gd_to_ie_test)\n+\t(tls_shared_gnu2_gd_to_ie_test, tls_shared_gnu2_test_LDFLAGS)\n+\t(tls_shared_nonpic_test_LDFLAGS): Add $(THREADFLAGS) and ($THREADLIBS).\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-06-19  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* testsuite/Makefile.am (MOSTLYCLEANFILES): Add *.stderr.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* configure.ac: Remove AC_PREREQ, add missing quoting and usage\n+\tof AC_LANG_SOURCE.\n+\t* Makefile.in: Re-generate.\n+\t* aclocal.m4: Re-generate.\n+\t* configure: Re-generate.\n+\t* testsuite/Makefile.in: Re-generate.\n+\n+2018-05-10  Stephen Crane  <sjc@immunant.com>\n+\n+\t* aarch64.cc (Target_aarch64::do_finalize_sections): Use size of\n+\t.got section for the _GLOBAL_OFFSET_TABLE_ symbol computation.\n+\n+2018-04-24  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/20642\n+\tPR gold/22820\n+\t* gc.h (gc_process_relocs): Flag STT_SECTION symbols in symvec.\n+\t* icf.cc (get_section_contents): For merge sections, ignore the\n+\taddend for relocations against non-section symbols.\n+\n+2018-04-24  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/16504\n+\t* dynobj.cc (Versions::symbol_section_contents): Don't set\n+\tVERSYM_HIDDEN flag for undefined symbols.\n+\t* symtab.cc (Symbol_table::add_from_object): Don't override default\n+\tversion definition with a different default version.\n+\t* symtab.h (Symbol::from_dyn): New method.\n+\t* testsuite/plugin_test.c (struct sym_info): Add ver field.\n+\t(claim_file_hook): Pass symbol version to plugin API.\n+\t(parse_readelf_line): Parse symbol version.\n+\t* testsuite/Makefile.am (ver_test_pr16504): New test case.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/ver_test_pr16504.sh: New test script.\n+\t* testsuite/ver_test_pr16504_a.c: New source file.\n+\t* testsuite/ver_test_pr16504_a.script: New version script.\n+\t* testsuite/ver_test_pr16504_b.c: New source file.\n+\t* testsuite/ver_test_pr16504_b.script: New version script.\n+\n+2018-04-19  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23046\n+\t* gc.h (gc_process_relocs): Pass target to\n+\tscan.local_reloc_may_be_function_pointer.\n+\n+2018-04-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\n+2018-04-14  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23046\n+\t* gc.h (gc_process_relocs): Pass target to\n+\tscan.global_reloc_may_be_function_pointer.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure: Regenerate.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::Track_tls::maybe_skip_tls_get_addr_call):\n+\tHandle inline plt sequence relocs.\n+\t(Stub_table::Plt_stub_key::Plt_stub_key): Likewise.\n+\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Likewise.\n+\t(Target_powerpc::Relocate::relocate): Likewise.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::lplt_): New variable.\n+\t(Target_powerpc::lplt_section): Associated accessor.\n+\t(Target_powerpc::plt_off): Handle local non-ifunc symbols.\n+\t(Target_powerpc::make_lplt_section): New function.\n+\t(Target_powerpc::make_local_plt_entry): New function.\n+\t(Powerpc_relobj::do_relocate_sections): Write out lplt.\n+\t(Output_data_plt_powerpc::first_plt_entry_offset): Zero for lplt.\n+\t(Output_data_plt_powerpc::add_local_entry): New function.\n+\t(Output_data_plt_powerpc::do_write): Ignore lplt.\n+\t(Target_powerpc::make_iplt_section): Make lplt first.\n+\t(Target_powerpc::make_brlt_section): Make .branch_lt relro.\n+\t(Target_powerpc::Scan::local): Handle PLT16 relocs.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::plt_off): New functions.\n+\t(is_plt16_reloc): New function.\n+\t(Stub_table::plt_off): Use Target_powerpc::plt_off.\n+\t(Stub_table::plt_call_size): Use plt_off.\n+\t(Stub_table::do_write): Likewise.\n+\t(Target_powerpc::Scan::get_reference_flags): Return RELATIVE_REF\n+\tfor PLT16 relocations.\n+\t(Target_powerpc::Scan::reloc_needs_plt_for_ifunc): Return true\n+\tfor PLT16 relocations.\n+\t(Target_powerpc::Scan::global): Make a PLT entry for PLT16 relocations.\n+\t(Target_powerpc::Relocate::relocate): Support PLT16 relocations.\n+\t(Powerpc_scan_relocatable_reloc::global_strategy): Return RELOC_SPECIAL\n+\tfor ppc32 plt16 relocs.\n+\n+2018-04-06  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* object.cc (Sized_relobj_file::include_section_group): Store\n+\treference to Kept_section info for discarded comdat sections\n+\tregardless of size.  Move size checking to map_to_kept_section.\n+\t(Sized_relobj_file::include_linkonce_section): Likewise.\n+\t(Sized_relobj_file::map_to_kept_section): Add section name parameter.\n+\tInsert size checking logic from above functions.\n+\t(Sized_relobj_file::find_kept_section_object): New method.\n+\t(Sized_relobj_file::get_symbol_name): New method.\n+\t* object.h (Sized_relobj_file::map_to_kept_section): Add section_name\n+\tparameter.  Adjust all callers.\n+\t(Sized_relobj_file::find_kept_section_object): New method.\n+\t(Sized_relobj_file::get_symbol_name): New method.\n+\t(Sized_relobj_file::Kept_comdat_section): Replace object and shndx\n+\tfields with sh_size, kept_section, symndx, and is_comdat fields.\n+\t(Sized_relobj_file::set_kept_comdat_section): Replace kept_object\n+\tand kept_shndx parameters with is_comdat, symndx, sh_size, and\n+\tkept_section.\n+\t(Sized_relobj_file::get_kept_comdat_section): Likewise.\n+\t* target-reloc.h (enum Comdat_behavior): Change CB_WARNING to CB_ERROR.\n+\tAdjust all references.\n+\t(issue_undefined_symbol_error): New function template.\n+\t(relocate_section): Pass section name to map_to_kept_section.\n+\tMove discarded section code to new function above.\n+\t* aarch64.cc (Target_aarch64::scan_reloc_section_for_stubs): Move\n+\tdeclaration for gsym out one level.  Call issue_discarded_error.\n+\t* arm.cc (Target_arm::scan_reloc_section_for_stubs): Likewise.\n+\t* powerpc.cc (Relocate_comdat_behavior): Change CB_WARNING to CB_ERROR.\n+\n+2018-04-05  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* target-reloc.h (relocate_section): Add local symbol index or global\n+\tsymbol name to warning about relocation that refers to discarded\n+\tsection.\n+\n+2018-04-05  James Cowgill  <james.cowgill@mips.com>\n+\n+\tRevert previous patch and apply revised patch.\n+\n+\tPR gold/22770\n+\t* mips.cc (Mips_got_info::record_got_page_entry): Don't insert\n+\tGot_page_entry for object's GOT.\n+\t(Mips_got_info::add_got_page_entries): Add all pages from from's GOT.\n+\tRename to add_got_page_count.\n+\t(Got_page_entry): Remove num_pages.\n+\n+2018-04-05  James Cowgill  <james.cowgill@mips.com>\n+\n+\tPR gold/22770\n+\t* mips.cc (Mips_got_info::record_got_page_entry): Fetch existing\n+\tpage entries for the object's GOT.\n+\n+2018-04-05  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (Target_powerpc::make_brlt_section): Make .branch_lt relro.\n+\n+2018-04-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\n+2018-04-02  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/23016\n+\t* incremental.cc (can_incremental_update): Check for unwind section\n+\ttype.\n+\t* layout.h (Layout::layout): Add sh_type parameter.\n+\t* layout.cc (Layout::layout): Likewise.\n+\t(Layout::layout_reloc): Create new output reloc section if data\n+\tsection does not already have one.\n+\t(Layout::layout_eh_frame): Check for unwind section type.\n+\t(Layout::make_eh_frame_section): Use unwind section type for .eh_frame\n+\tand .eh_frame_hdr.\n+\t* object.h (Sized_relobj_file::Shdr_write): New typedef.\n+\t(Sized_relobj_file::layout_section): Add sh_type parameter.\n+\t(Sized_relobj_file::Deferred_layout::Deferred_layout): Add sh_type\n+\tparameter.\n+\t* object.cc (Sized_relobj_file::check_eh_frame_flags): Check for\n+\tunwind section type.\n+\t(Sized_relobj_file::layout_section): Add sh_type parameter; pass it\n+\tto Layout::layout.\n+\t(Sized_relobj_file::do_layout): Make local copy of sh_type.\n+\tForce .eh_frame sections to unwind section type.\n+\tPass sh_type to layout_section.\n+\t(Sized_relobj_file<size, big_endian>::do_layout_deferred_sections):\n+\tPass sh_type to layout_section.\n+\t* output.cc (Output_section::Output_section): Initialize reloc_section_.\n+\t* output.h (Output_section::reloc_section): New method.\n+\t(Output_section::set_reloc_section): New method.\n+\t(Output_section::reloc_section_): New data member.\n+\t* target.h (Target::unwind_section_type): New method.\n+\t(Target::Target_info::unwind_section_type): New data member.\n+\n+\t* aarch64.cc (aarch64_info): Add unwind_section_type.\n+\t* arm.cc (arm_info, arm_nacl_info): Likewise.\n+\t* i386.cc (i386_info, i386_nacl_info, iamcu_info): Likewise.\n+\t* mips.cc (mips_info, mips_nacl_info): Likewise.\n+\t* powerpc.cc (powerpc_info): Likewise.\n+\t* s390.cc (s390_info): Likewise.\n+\t* sparc.cc (sparc_info): Likewise.\n+\t* tilegx.cc (tilegx_info): Likewise.\n+\t* x86_64.cc (x86_64_info, x86_64_nacl_info): Likewise.\n+\n+\t* testsuite/Makefile.am (pr23016_1, pr23016_2): New test cases.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/testfile.cc: Add unwind_section_type.\n+\t* testsuite/pr23016_1.sh: New test script.\n+\t* testsuite/pr23016_1a.s: New source file.\n+\t* testsuite/pr23016_1b.s: New source file.\n+\t* testsuite/pr23016_2.sh: New test script.\n+\t* testsuite/pr23016_2a.s: New source file.\n+\t* testsuite/pr23016_2b.s: New source file.\n+\n+2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/21423\n+\tPR gold/22500\n+\t* configure.ac: Call AC_USE_SYSTEM_EXTENSIONS.\n+\tReplace check for --enable-plugins with AC_PLUGINS.\n+\t* options.cc (parse_plugin, parse_plugin_opt): Remove #ifdef.\n+\t(General_options::finalize): Check if plugins enabled.\n+\t* options.h (--plugin, --plugin-opt): Define even if plugins not\n+\tenabled.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-03-28  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22969\n+\t* aarch64-reloc.def: Add TLSLE_LDST* relocations.\n+\t* aarch64.cc (Target_aarch64::optimize_tls_reloc): Likewise.\n+\t(Target_aarch64::Scan::local): Likewise.\n+\t(Target_aarch64::Scan::global): Likewise.\n+\t(Target_aarch64::Relocate::relocate): Likewise.\n+\t(Target_aarch64::Relocate::relocate_tls): Likewise.\n+\n+2018-03-27  Roland McGrath  <mcgrathr@google.com>\n+\n+\t* testsuite/split_x86_64.sh: Fix bad regexp.\n+\n+2018-03-26  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22868\n+\t* plugin.cc (Sized_pluginobj::do_add_symbols): Use a real section\n+\tindex instead of SHN_ABS for defined symbols.\n+\t* testsuite/Makefile.am (plugin_pr22868): New test case.\n+\t* testsuite/Makefile.in: Regenerate\n+\t* testsuite/plugin_pr22868.sh: New test script.\n+\t* testsuite/plugin_pr22868_a.c: New source file.\n+\t* testsuite/plugin_pr22868_b.c: New source file.\n+\n+2018-03-23  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* plugin.cc (link_or_copy_file): Remove newlines from warning messages.\n+\tAdd pedantic check for return value from ::write.\n+\n+2018-03-23  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* debug.h (DEBUG_PLUGIN): New constant.\n+\t(DEBUG_ALL): Add DEBUG_PLUGIN.\n+\t(debug_string_to_enum): Likewise.\n+\t* plugin.cc (make_sized_plugin_object): Add filename parameter.\n+\t(Plugin_recorder): New class.\n+\t(Plugin_manager::~Plugin_manager): Delete recorder_.\n+\t(Plugin_manager::load_plugins): Create and initialize recorder_.\n+\t(Plugin_manager::claim_file): Record claimed and unclaimed files.\n+\t(Plugin_manager::make_plugin_object): Use object name as name for\n+\tplugin object, if available.\n+\t(Plugin_manager::add_input_file): Record replacement files.\n+\t(Sized_pluginobj::do_add_symbols): Record plugin symbols.\n+\t(Plugin_finish::run): Call Plugin_recorder::finish().\n+\t(make_sized_plugin_object): Add filename parameter and pass to\n+\tSized_pluginobj constructor.\n+\t* plugin.h (Plugin::filename): New method.\n+\t(Plugin::recorder): New method.\n+\t(Plugin::recorder_): New data member.\n+\n+2018-03-07  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* layout.cc (Layout::default_section_order): Check for text section\n+\tprefixes.\n+\t(Layout::text_section_name_mapping): New static member.\n+\t(Layout::text_section_name_mapping_count): New static member.\n+\t(Layout::match_section_name): New static function.\n+\t(Layout::output_section_name): Check for text section prefixes.\n+\t* layout.h (Output_section_order::ORDER_TEXT_HOT): New enum value.\n+\t(Output_section_order::ORDER_TEXT_STARTUP): New enum value.\n+\t(Output_section_order::ORDER_TEXT_EXIT): New enum value.\n+\t(Output_section_order::ORDER_TEXT_UNLIKELY): New enum value.\n+\t(Layout::text_section_name_mapping): New static member.\n+\t(Layout::text_section_name_mapping_count): New static member.\n+\t(Layout::match_section_name): New static function.\n+\t* options.h (keep_text_section_prefix): New -z option.\n+\t* testsuite/Makefile.am (keep_text_section_prefix): New test.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/keep_text_section_prefix.cc: New test source.\n+\t* testsuite/keep_text_section_prefix.sh: New test script.\n+\n+2018-02-22  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* plugin.cc (get_wrap_symbols): New plugin interface.\n+\t(load): Add get_wrap_symbols to transfer vector.\n+\t* plugin-api.h (ld_plugin_get_wrap_symbols): New plugin interface.\n+\t* testsuite/plugin_test.c (onload): Call and check get_wrap_symbols\n+\tinterface.\n+\t* testsuite/plugin_test_wrap_symbols.sh: New test script.\n+\t* testsuite/plugin_test_wrap_symbols_1.cc: New file.\n+\t* testsuite/plugin_test_wrap_symbols_2.cc: New file.\n+\t* testsuite/Makefile.am (plugin_test_wrap_symbols): New test.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2018-02-07  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* expression.cc (Symbol_expression::set_expr_sym_in_real_elf):\n+\tNew method.\n+\t(Unary_expression::set_expr_sym_in_real_elf): New method.\n+\t(Binary_expression::set_expr_sym_in_real_elf): New method.\n+\t(Trinary_expression::set_expr_sym_in_real_elf): New method.\n+\t* plugin.cc (get_symbol_resolution_info): Fix symbol resolution if\n+\tdefined or used in defsyms.\n+\t* plugin.h (Plugin_manager::is_defsym_def): New method.\n+\t(Plugin_manager::Plugin_manager): Initialize defsym_defines_set_.\n+\t(Plugin_manager::defsym_defines_set_): New member.\n+\t(Plugin_manager::Defsym_defines_set): New typedef.\n+\t* script.cc (Script_options::set_defsym_uses_in_real_elf): New method.\n+\t(Script_options::find_defsym_defs): New method.\n+\t* script.h (Expression::set_expr_sym_in_real_elf): New method.\n+\t(Symbol_assignment::is_defsym): New method.\n+\t(Symbol_assignment::value): New method.\n+\t(Script_options::find_defsym_defs): New method.\n+\t(Script_options::set_defsym_uses_in_real_elf): New method.\n+\t* testsuite/Makefile.am (plugin_test_defsym): New test.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/plugin_test.c: Check for new symbol resolution.\n+\t* testsuite/plugin_test_defsym.sh: New script.\n+\t* testsuite/plugin_test_defsym.c: New test source.\n+\n+2018-02-07  Alan Modra  <amodra@gmail.com>\n+\n+\tRevert 2018-01-17  Alan Modra  <amodra@gmail.com>\n+\t* options.h: Remove --speculate-indirect-jumps support.\n+\t* powerpc.cc: Likewise.\n+\n+2018-02-02  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* PR gold/22776\n+\t* dwarf_reader.cc (Sized_dwarf_line_info::read_header_prolog): Add\n+\tsupport for DWARF-4 line number tables.\n+\t* dwarf_reader.h (Sized_dwarf_line_info::max_ops_per_insn): New field.\n+\n+2018-01-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* powerpc.cc (param_plt_align): New function supplying default\n+\t--plt-align values.  Use it..\n+\t(Stub_table::plt_call_align): ..here, and..\n+\t(Output_data_glink::global_entry_align): ..here.\n+\t(Stub_table::stub_align): Correct 32-bit minimum alignment.\n+\n+2018-01-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* options.h (speculate_indirect_jumps): New option.\n+\t* powerpc.cc (beqctrm, beqctrlm, crseteq): New insn constants.\n+\t(output_bctr): New function.\n+\t(Stub_table::plt_call_size): Add space for speculation barrier.\n+\t(Stub_table::branch_stub_size): Likewise.\n+\t(Output_data_glink::pltresolve_size): Likewise.\n+\t(Stub_table::do_write): Output speculation barriers.\n+\n+2018-01-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* options.h (plt_align): Support for PowerPC32 too.\n+\t* powerpc.cc (Stub_table::stub_align): Heed --plt-align for 32-bit.\n+\t(Stub_table::plt_call_size, branch_stub_size): Tidy.\n+\t(Stub_table::plt_call_align): Implement using stub_align.\n+\t(Output_data_glink::global_entry_align): New function.\n+\t(Output_data_glink::global_entry_off): New function.\n+\t(Output_data_glink::global_entry_address): Use global_entry_off.\n+\t(Output_data_glink::pltresolve_size): New function, replacing\n+\tpltresolve_size_ constant.  Update all uses.\n+\t(Output_data_glink::add_global_entry): Align offset.\n+\t(Output_data_glink::set_final_data_size): Use global_entry_align.\n+\t(Stub_table::do_write): Don't pad __glink_PLTrelsolve with nops.\n+\tTidy stub output.  Use global_entry_off.\n+\n+2018-01-15  Cary Coutant  <ccoutant@gmail.com>\n+\n+\tPR gold/22694\n+\t* options.h (-fuse-ld): Add correct helparg.\n+\n+2018-01-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/gold.pot: Regenerated.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\n+2018-01-12  Cary Coutant  <ccoutant@gmail.com>\n+\n+\t* NEWS: Add new features in 1.15.\n+\t* version.cc (version_string): Bump to 1.15.\n+\n+2018-01-12  Sterling Augustine  <saugustine@google.com>\n+\n+\t* cref.cc (Cref_inputs::Cref_table_compare::operator): Add\n+\tconditionals and calls to is_forwarder.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "gprof/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 87,
      "changes": 89,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gprof/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gprof/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,91 +1,6 @@\n-2018-10-01  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 23698\n-\t* gprof.c (main): Fix typo setting user_specified variable when\n-\tparsing -Z option.\n-\n-2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* gprof.texi: Use command-line consistently when used in a compount\n-\tword.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/gprof.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* configure.ac: Remove AC_PREREQ.\n-\t* Makefile.am: Remove DISTCLEANFILES hack.\n-\t(AUTOMAKE_OPTIONS): Remove 1.11, add info-in-builddir.\n-\t* Makefile.in: Re-generate.\n-\t* aclocal.m4: Re-generate.\n-\t* configure: Re-generate.\n-\t* gconfig.in: Re-generate.\n-\n-2018-06-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/eo.po: Updated Esperanto translation.\n-\t* po/ms.po: Updated Malay translation.\n-\n-2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure: Regenerated.\n-\n-2018-04-18  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* corefile.c: Remove netware support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove tahoe support.\n-\t* corefile.c: Likewise.\n-\t* tahoe.c: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/22318\n-\t* configure: Regenerated.\n-\n-2018-03-01  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac (ALL_LINGUAS): Add it, ro, ru, uk.  Sort.\n-\t* configure: Regenerate.\n-\n-2018-02-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/gprof.pot: Regenerated.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "da083a54af79f90bb777d8744d8dfb3526f19b48",
      "filename": "gprof/ChangeLog-2018",
      "status": "added",
      "additions": 99,
      "deletions": 0,
      "changes": 99,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gprof/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/gprof/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gprof/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,99 @@\n+2018-10-01  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 23698\n+\t* gprof.c (main): Fix typo setting user_specified variable when\n+\tparsing -Z option.\n+\n+2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* gprof.texi: Use command-line consistently when used in a compount\n+\tword.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/gprof.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\n+2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* configure.ac: Remove AC_PREREQ.\n+\t* Makefile.am: Remove DISTCLEANFILES hack.\n+\t(AUTOMAKE_OPTIONS): Remove 1.11, add info-in-builddir.\n+\t* Makefile.in: Re-generate.\n+\t* aclocal.m4: Re-generate.\n+\t* configure: Re-generate.\n+\t* gconfig.in: Re-generate.\n+\n+2018-06-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/eo.po: Updated Esperanto translation.\n+\t* po/ms.po: Updated Malay translation.\n+\n+2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure: Regenerated.\n+\n+2018-04-18  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* corefile.c: Remove netware support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove tahoe support.\n+\t* corefile.c: Likewise.\n+\t* tahoe.c: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/22318\n+\t* configure: Regenerated.\n+\n+2018-03-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (ALL_LINGUAS): Add it, ro, ru, uk.  Sort.\n+\t* configure: Regenerate.\n+\n+2018-02-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/gprof.pot: Regenerated.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "include/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 878,
      "changes": 880,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/include/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/include/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,882 +1,6 @@\n-2018-12-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24028\n-\t* opcode/ppc.h (PPC_INT_FMT): Delete.\n-\n-2018-12-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/23900\n-\t* elf/common.h (PT_GNU_PROPERTY): New.\n-\t(GNU_PROPERTY_X86_UINT32_VALID): Removed.\n-\n-2018-12-11  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 88409\n-\t* demangle.h (DEMANGLE_RECURSION_LIMIT): Increase to 2048.\n-\n-2018-12-07  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* bfdlink.h (bfd_link_info): Add has_map_file.\n-\n-2018-12-07  Nick Clifton  <nickc@redhat.com>\n-\n-\t* demangle.h (DMGL_NO_RECURSE_LIMIT): Define.\n-        (DEMANGLE_RECURSION_LIMIT): Define\n-\n-2018-12-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/ppc.h (E_OPCODE_MASK, E_LI_MASK, E_LI_INSN): Define.\n-\n-2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* dis-asm.h (riscv_symbol_is_valid): Declare.\n-\t* opcode/riscv.h (RISCV_FAKE_LABEL_NAME): Define.\n-\t(RISCV_FAKE_LABEL_CHAR): Define.\n-\n-2018-12-03  Kito Cheng  <kito@andestech.com>\n-\n-\t* opcode/riscv.h (riscv_opcode): Change type of xlen_requirement to\n-\tunsigned.\n-\n-2018-11-27  Jim Wilson  <jimw@sifive.com>\n-\n-\t* opcode/riscv.h (OP_MASK_CFUNCT6, OP_SH_CFUNCT6): New.\n-\t(OP_MASK_CFUNCT2, OP_SH_CFUNCT2): New.\n-\n-2018-11-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* opcode/arm.h (ARM_AEXT_V6M_ONLY): Merge into its use in ARM_AEXT_V6M.\n-\t(ARM_ARCH_V6M_ONLY): Remove.\n-\t(ARM_EXT_V1, ARM_EXT_V2, ARM_EXT_V2S, ARM_EXT_V3, ARM_EXT_V3M,\n-\tARM_EXT_V4, ARM_EXT_V4T, ARM_EXT_V5, ARM_EXT_V5T, ARM_EXT_V5ExP,\n-\tARM_EXT_V5E, ARM_EXT_V5J, ARM_EXT_V6, ARM_EXT_V6K, ARM_EXT_V8,\n-\tARM_EXT_V6T2, ARM_EXT_DIV, ARM_EXT_V5E_NOTM, ARM_EXT_V6_NOTM,\n-\tARM_EXT_V7, ARM_EXT_V7A, ARM_EXT_V7R, ARM_EXT_V7M, ARM_EXT_V6M,\n-\tARM_EXT_BARRIER, ARM_EXT_THUMB_MSR, ARM_EXT_V6_DSP, ARM_EXT_MP,\n-\tARM_EXT_SEC, ARM_EXT_OS, ARM_EXT_ADIV, ARM_EXT_VIRT, ARM_EXT2_PAN,\n-\tARM_EXT2_V8_2A, ARM_EXT2_V8M, ARM_EXT2_ATOMICS, ARM_EXT2_V6T2_V8M,\n-\tARM_EXT2_FP16_INST, ARM_EXT2_V8M_MAIN, ARM_EXT2_RAS, ARM_EXT2_V8_3A,\n-\tARM_EXT2_V8A, ARM_EXT2_V8_4A, ARM_EXT2_FP16_FML, ARM_EXT2_V8_5A,\n-\tARM_EXT2_SB, ARM_EXT2_PREDRES, ARM_CEXT_XSCALE, ARM_CEXT_MAVERICK,\n-\tARM_CEXT_IWMMXT, ARM_CEXT_IWMMXT2, FPU_ENDIAN_PURE, FPU_ENDIAN_BIG,\n-\tFPU_FPA_EXT_V1, FPU_FPA_EXT_V2, FPU_MAVERICK, FPU_VFP_EXT_V1xD,\n-\tFPU_VFP_EXT_V1, FPU_VFP_EXT_V2, FPU_VFP_EXT_V3xD, FPU_VFP_EXT_V3,\n-\tFPU_NEON_EXT_V1, FPU_VFP_EXT_D32, FPU_VFP_EXT_FP16, FPU_NEON_EXT_FMA,\n-\tFPU_VFP_EXT_FMA, FPU_VFP_EXT_ARMV8, FPU_NEON_EXT_ARMV8,\n-\tFPU_CRYPTO_EXT_ARMV8, CRC_EXT_ARMV8, FPU_VFP_EXT_ARMV8xD,\n-\tFPU_NEON_EXT_RDMA, FPU_NEON_EXT_DOTPROD, ARM_AEXT_V1, ARM_AEXT_V2,\n-\tARM_AEXT_V2S, ARM_AEXT_V3, ARM_AEXT_V3M, ARM_AEXT_V4xM, ARM_AEXT_V4,\n-\tARM_AEXT_V4TxM, ARM_AEXT_V4T, ARM_AEXT_V5xM, ARM_AEXT_V5,\n-\tARM_AEXT_V5TxM, ARM_AEXT_V5T, ARM_AEXT_V5TExP, ARM_AEXT_V5TE,\n-\tARM_AEXT_V5TEJ, ARM_AEXT_V6, ARM_AEXT_V6K, ARM_AEXT_V6Z, ARM_AEXT_V6KZ,\n-\tARM_AEXT_V6T2, ARM_AEXT_V6KT2, ARM_AEXT_V6ZT2, ARM_AEXT_V6KZT2,\n-\tARM_AEXT_V7_ARM, ARM_AEXT_V7A, ARM_AEXT_V7VE, ARM_AEXT_V7R,\n-\tARM_AEXT_NOTM, ARM_AEXT_V6M_ONLY, ARM_AEXT_V6M, ARM_AEXT_V6SM,\n-\tARM_AEXT_V7M, ARM_AEXT_V7, ARM_AEXT_V7EM, ARM_AEXT_V8A, ARM_AEXT2_V8A,\n-\tARM_AEXT2_V8_1A, ARM_AEXT2_V8_2A, ARM_AEXT2_V8_3A, ARM_AEXT2_V8_4A,\n-\tARM_AEXT2_V8_5A, ARM_AEXT_V8M_BASE, ARM_AEXT_V8M_MAIN,\n-\tARM_AEXT_V8M_MAIN_DSP, ARM_AEXT2_V8M, ARM_AEXT2_V8M_BASE,\n-\tARM_AEXT2_V8M_MAIN, ARM_AEXT2_V8M_MAIN_DSP, ARM_AEXT_V8R,\n-\tARM_AEXT2_V8R, FPU_VFP_V1xD, FPU_VFP_V1, FPU_VFP_V2, FPU_VFP_V3D16,\n-\tFPU_VFP_V3, FPU_VFP_V3xD, FPU_VFP_V4D16, FPU_VFP_V4, FPU_VFP_V4_SP_D16,\n-\tFPU_VFP_V5D16, FPU_VFP_ARMV8, FPU_NEON_ARMV8, FPU_CRYPTO_ARMV8,\n-\tFPU_VFP_HARD, FPU_FPA, FPU_ARCH_VFP, FPU_ARCH_FPE, FPU_ARCH_FPA,\n-\tFPU_ARCH_VFP_V1xD, FPU_ARCH_VFP_V1, FPU_ARCH_VFP_V2,\n-\tFPU_ARCH_VFP_V3D16_FP16, FPU_ARCH_VFP_V3, FPU_ARCH_VFP_V3_FP16,\n-\tFPU_ARCH_VFP_V3xD_FP16, FPU_ARCH_NEON_V1, FPU_ARCH_VFP_V3_PLUS_NEON_V1,\n-\tFPU_ARCH_NEON_FP16, FPU_ARCH_VFP_HARD, FPU_ARCH_VFP_V4,\n-\tFPU_ARCH_VFP_V4D16, FPU_ARCH_VFP_V4_SP_D16, FPU_ARCH_VFP_V5D16,\n-\tFPU_ARCH_VFP_V5_SP_D16, FPU_ARCH_NEON_VFP_V4, FPU_ARCH_VFP_ARMV8,\n-\tFPU_ARCH_NEON_VFP_ARMV8, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8,\n-\tFPU_ARCH_CRYPTO_NEON_VFP_ARMV8_DOTPROD, ARCH_CRC_ARMV8,\n-\tFPU_ARCH_NEON_VFP_ARMV8_1, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1,\n-\tFPU_ARCH_DOTPROD_NEON_VFP_ARMV8, ARM_ARCH_V1, ARM_ARCH_V2,\n-\tARM_ARCH_V2S, ARM_ARCH_V3, ARM_ARCH_V3M, ARM_ARCH_V4xM, ARM_ARCH_V4,\n-\tARM_ARCH_V4TxM, ARM_ARCH_V4T, ARM_ARCH_V5xM, ARM_ARCH_V5,\n-\tARM_ARCH_V5TxM, ARM_ARCH_V5T, ARM_ARCH_V5TExP, ARM_ARCH_V5TE,\n-\tARM_ARCH_V5TEJ, ARM_ARCH_V6, ARM_ARCH_V6K, ARM_ARCH_V6Z, ARM_ARCH_V6KZ,\n-\tARM_ARCH_V6T2, ARM_ARCH_V6KT2, ARM_ARCH_V6ZT2, ARM_ARCH_V6KZT2,\n-\tARM_ARCH_V6M, ARM_ARCH_V6SM, ARM_ARCH_V7, ARM_ARCH_V7A, ARM_ARCH_V7VE,\n-\tARM_ARCH_V7R, ARM_ARCH_V7M, ARM_ARCH_V7EM, ARM_ARCH_V8A,\n-\tARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A, ARM_ARCH_V8_3A,\n-\tARM_ARCH_V8_4A, ARM_ARCH_V8_5A, ARM_ARCH_V8M_BASE, ARM_ARCH_V8M_MAIN,\n-\tARM_ARCH_V8M_MAIN_DSP, ARM_ARCH_V8R): Reindent.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_ADDR_SIMPLE_2.\n-\t(aarch64_insn_class): Add ldstgv_indexed.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_ADDR_SIMM11\n-\tand AARCH64_OPND_ADDR_SIMM13.\n-\t(aarch64_opnd_qualifier): Add new AARCH64_OPND_QLF_imm_tag.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_opnd): Add\n-\tAARCH64_OPND_UIMM4_ADDG and AARCH64_OPND_UIMM10 as new enums.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_MEMTAG): New.\n-\n-2018-11-07  Roman Bolshakov <r.bolshakov@yadro.com>\n-\t    Saagar Jha  <saagar@saagarjha.com>\n-\n-\t* mach-o/external.h (mach_o_nversion_min_command_external): Rename\n-\treserved to sdk.\n-\t(mach_o_note_command_external): New.\n-\t(mach_o_build_version_command_external): New.\n-\t* mach-o/loader.h (BFD_MACH_O_LC_VERSION_MIN_TVOS): Define.\n-\t(BFD_MACH_O_LC_NOTE): Define.\n-\n-2018-11-06  Romain Margheriti  <lilrom13@gmail.com>\n-\n-\tPR 23742\n-\t* mach-o/loader.h: Add BFD_MACH_O_LC_BUILD_VERSION.\n-\n-2018-11-06  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/arm.h (ARM_ARCH_V8_5A): Move ARM_EXT2_PREDRES and\n-\tARM_EXT2_SB to ...\n-\t(ARM_AEXT2_V8_5A): Here.\n-\n-2018-10-26  John Baldwin  <jhb@FreeBSD.org>\n-\n-\t* elf/common.h (AT_FREEBSD_HWCAP2): Define.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_SSBS): New.\n-\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_SSBS by default.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_SCXTNUM): New.\n-\t(AARCH64_FEATURE_ID_PFR2): New.\n-\t(AARCH64_ARCH_V8_5): Add both by default.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_BTI): New.\n-\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_BTI by default.\n-\t(aarch64_opnd): Add AARCH64_OPND_BTI_TARGET.\n-\t(HINT_OPD_CSYNC, HINT_OPD_C, HINT_OPD_J): New macros to\n-\tdefine HINT #imm values.\n-\t(HINT_OPD_JC, HINT_OPD_NULL): Likewise.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_RNG): New.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_CVADP): New.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_PREDRES): New.\n-\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_PREDRES by default.\n-\t(aarch64_opnd): Add AARCH64_OPND_SYSREG_SR.\n-\t(aarch64_sys_regs_sr): Declare new table.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_SB): New.\n-\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_SB by default.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_FLAGMANIP): New.\n-\t(AARCH64_FEATURE_FRINTTS): New.\n-\t(AARCH64_ARCH_V8_5): Add both by default.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/aarch64.h (AARCH64_FEATURE_V8_5): New.\n-\t(AARCH64_ARCH_V8_5): New.\n-\n-2018-10-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* bfdlink.h (struct bfd_link_info): Add load_phdrs field.\n-\n-2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_PREDRES): New.\n-\t(ARM_ARCH_V8_5A): Add ARM_EXT2_PREDRES by default.\n-\n-2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_SB): New.\n-\t(ARM_ARCH_V8_5A): Add ARM_EXT2_SB by default.\n-\n-2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* opcode/arm.h (ARM_EXT2_V8_5A): New.\n-\t(ARM_AEXT2_V8_5A, ARM_ARCH_V8_5A): New.\n-\n-2018-10-05  Richard Henderson  <rth@twiddle.net>\n-\n-\t* elf/or1k.h (elf_or1k_reloc_type): Add R_OR1K_PCREL_PG21,\n-\tR_OR1K_GOT_PG21, R_OR1K_TLS_GD_PG21, R_OR1K_TLS_LDM_PG21,\n-\tR_OR1K_TLS_IE_PG21, R_OR1K_LO13, R_OR1K_GOT_LO13,\n-\tR_OR1K_TLS_GD_LO13, R_OR1K_TLS_LDM_LO13, R_OR1K_TLS_IE_LO13,\n-\tR_OR1K_SLO13, R_OR1K_PLTA26.\n-\n-2018-10-05  Richard Henderson  <rth@twiddle.net>\n-\n-\t* elf/or1k.h (elf_or1k_reloc_type): Add R_OR1K_AHI16,\n-\tR_OR1K_GOTOFF_AHI16, R_OR1K_TLS_IE_AHI16, R_OR1K_TLS_LE_AHI16,\n-\tR_OR1K_SLO16, R_OR1K_GOTOFF_SLO16, R_OR1K_TLS_LE_SLO16.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* opcode/aarch64.h (aarch64_inst): Remove.\n-\t(enum err_type): Add ERR_VFI.\n-\t(aarch64_is_destructive_by_operands): New.\n-\t(init_insn_sequence): New.\n-\t(aarch64_decode_insn): Remove param name.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* opcode/aarch64.h (struct aarch64_opcode): Expand verifiers to take\n-\tmore arguments.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* opcode/aarch64.h (enum err_type): New.\n-\t(aarch64_decode_insn): Use it.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* opcode/aarch64.h (struct aarch64_instr_sequence): New.\n-\t(aarch64_opcode_encode): Use it.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* opcode/aarch64.h (struct aarch64_opcode): Add constraints,\n-\textend flags field size.\n-\t(F_SCAN, C_SCAN_MOVPRFX, C_MAX_ELEM): New.\n-\n-2018-10-03  John Darrington <john@darrington.wattle.id.au>\n-\n-\t* dis-asm.h (print_insn_s12z): New declaration.\n-\n-2018-10-02  Palmer Dabbelt  <palmer@sifive.com>\n-\n-\t* opcode/riscv-opc.h (MATCH_FENCE_TSO): New define.\n-\t(MASK_FENCE_TSO): Likewise.\n-\n-2018-10-01  Cupertino Miranda <cmiranda@synopsys.com>\n-\n-\t* arc-reloc.def (ARC_TLS_LE_32): Updated reloc formula.\n-\n-2018-09-21  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23694\n-\t* include/elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Don't\n-\tinclude zero size sections at start of PT_NOTE segment.\n-\n-2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n-\n-\t* elf/nds32.h: Remove the unused target features.\n-\t* dis-asm.h (disassemble_init_nds32): Declared.\n-\t* elf/nds32.h (E_NDS32_NULL): Removed.\n-\t(E_NDS32_HAS_DSP_INST, E_NDS32_HAS_ZOL): New.\n-\t* opcode/nds32.h: Ident.\n-\t(N32_SUB6, INSN_LW): New macros.\n-\t(enum n32_opcodes): Updated.\n-\t* elf/nds32.h: Doc fixes.\n-\t* elf/nds32.h: Add R_NDS32_LSI.\n-\t* elf/nds32.h: Add new relocations for TLS.\n-\n-2018-09-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\t* elf/common.h (AT_SUN_HWCAP): Rename to ...\n-\t(AT_SUN_CAP_HW1): ... this.  Retain old name for backward\n-\tcompatibility.\n-\t(AT_SUN_EMULATOR, AT_SUN_BRANDNAME, AT_SUN_BRAND_AUX1)\n-\t(AT_SUN_BRAND_AUX2, AT_SUN_BRAND_AUX3, AT_SUN_CAP_HW2): Define.\n-\n-2018-09-05  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* diagnostics.h (DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL): New macro.\n-\n-2018-08-31  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),\n-\t(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),\n-\t(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.\n-\t(R_PPC64_LO_DS_OPT, R_PPC64_16DX_HA): Bump value.\n-\n-2018-08-30  Kito Cheng  <kito@andestech.com>\n-\n-\t* opcode/riscv.h (MAX_SUBSET_NUM): New.\n-\t(riscv_opcode): Add xlen_requirement field and change type of\n-\tsubset.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* elf/mips.h (E_MIPS_MACH_XXX): New E_MIPS_MACH_GS264E.\n-\t* opcode/mips.h (CPU_XXX): New CPU_GS264E.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* elf/mips.h (E_MIPS_MACH_XXX): New E_MIPS_MACH_GS464E.\n-\t* opcode/mips.h (CPU_XXX): New CPU_GS464E.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* elf/mips.h (E_MIPS_MACH_XXX): Rename E_MIPS_MACH_LS3A to\n-\tE_MIPS_MACH_GS464.\n-\t(AFL_EXT_XXX): Delete AFL_EXT_LOONGSON_3A.\n-\t* opcode/mips.h (INSN_XXX): Delete INSN_LOONGSON_3A.\n-\t(CPU_XXX): Rename CPU_LOONGSON_3A to CPU_GS464.\n-\t* opcode/mips.h (mips_isa_table): Delete CPU_LOONGSON_3A case.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* elf/mips.h (AFL_ASE_LOONGSON_EXT2): New macro.\n-\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_EXT2.\n-\t* opcode/mips.h (ASE_LOONGSON_EXT2): New macro.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t * elf/mips.h (AFL_ASE_LOONGSON_EXT): New macro.\n-\t (AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_EXT.\n-\t * opcode/mips.h (ASE_LOONGSON_EXT): New macro.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* elf/mips.h (AFL_ASE_LOONGSON_CAM): New macro.\n-\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_CAM.\n-\t* opcode/mips.h (ASE_LOONGSON_CAM): New macro.\n-\n-2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_ISA_1_USED): This.\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED): This.\n-\t(GNU_PROPERTY_X86_ISA_1_XXX): Renamed to ...\n-\t(GNU_PROPERTY_X86_COMPAT_ISA_1_XXX): This.\n-\t(GNU_PROPERTY_X86_UINT32_AND_LO): New.\n-\t(GNU_PROPERTY_X86_UINT32_AND_HI): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_LO): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_HI): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO): Likewise.\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_HI): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_CMOV): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSE): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSE2): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSE3): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSSE3): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSE4_1): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_SSE4_2): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX2): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_FMA): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512F): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512CD): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512ER): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512PF): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512VL): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512DQ): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512BW): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_4FMAPS): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_4VNNIW): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_BITALG): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_IFMA): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_VBMI): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_VBMI2): Likewise.\n-\t(GNU_PROPERTY_X86_ISA_1_AVX512_VNNI): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_X86): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_X87): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_MMX): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_XMM): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_YMM): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_ZMM): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_FXSR): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_XSAVE): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_XSAVEOPT): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_2_XSAVEC): Likewise.\n-\t(GNU_PROPERTY_X86_FEATURE_1_AND): Updated to\n-\t(GNU_PROPERTY_X86_UINT32_AND_LO + 0).\n-\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_LO + 0).\n-\t(GNU_PROPERTY_X86_FEATURE_2_NEEDED): New.  Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_LO + 1).\n-\t(GNU_PROPERTY_X86_ISA_1_USED): Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 0).\n-\t(GNU_PROPERTY_X86_FEATURE_2_USED): New.  Defined to\n-\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1).\n-\n-2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (GNU_PROPERTY_X86_UINT32_VALID): New.\n-\n-2018-08-21  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* elf/s12z.h: Rename R_S12Z_UKNWN_3 to R_S12Z_EXT18.\n-\n-2018-08-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/ppc.h (struct powerpc_operand): Correct \"insert\" comment.\n-\tMention use of \"extract\" function to provide default value.\n-\t(PPC_OPERAND_OPTIONAL_VALUE): Delete.\n-\t(ppc_optional_operand_value): Rewrite to use extract function.\n-\n-2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* opcode/s12z.h: New file.\n-\n-2018-08-09  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\t* elf/arm.h: Updated comments for e_flags definitions.\n-\n-2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* elf/arc.h (Tag_ARC_ATR_version): New tag.\n-\n-2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* opcode/arc.h (ARC_OPCODE_ARCV1): Define.\n-\n-2018-08-01  Richard Earnshaw  <rearnsha@arm.com>\n-\n-\tCopy over from GCC\n-\t2018-07-26  Martin Liska  <mliska@suse.cz>\n-\n-\tPR lto/86548\n-\t* libiberty.h (make_temp_file_with_prefix): New function.\n-\n-2018-07-30  Jim Wilson  <jimw@sifive.com>\n-\n-\t* opcode/riscv.h (INSN_TYPE, INSN_BRANCH, INSN_CONDBRANCH, INSN_JSR)\n-\t(INSN_DREF, INSN_DATA_SIZE, INSN_DATA_SIZE_SHIFT, INSN_1_BYTE)\n-\t(INSN_2_BYTE, INSN_4_BYTE, INSN_8_BYTE, INSN_16_BYTE): New.\n-\n-2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n-\n-\t* elf/common.h (EM_CSKY, EM_CSKY_OLD): Define.\n-\t* elf/csky.h: New file.\n-\n-2018-07-27  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\t    Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* elf/mips.h (AFL_ASE_MASK): Correct typo.\n-\n-2018-07-26  Alex Chadwick  <Alex.Chadwick@cl.cam.ac.uk>\n-\n-\t* opcode/ppc.h (PPC_OPCODE_750): Adjust comment.\n-\n-2018-07-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc64.h: Specify byte offset to local entry for values\n-\tof two to six in STO_PPC64_LOCAL_MASK.  Clarify r2 return\n-\tvalue for such functions when entering via global entry point.\n-\tSpecify meaning of a value of one in STO_PPC64_LOCAL_MASK.\n-\n-2018-07-24  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23430\n-\t* elf/common.h (SHT_SYMTAB_SHNDX): Fix comment typo.\n-\n-2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\t    Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* elf/mips.h (AFL_ASE_MMI): New macro.\n-\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_MMI.\n-\t* opcode/mips.h (ASE_LOONGSON_MMI): New macro.\n-\n-2018-07-17  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* bfdlink.h (bfd_link_hash_entry): Add `rel_from_abs' member.\n-\n-2018-07-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* diagnostics.h: Comment on macro usage.\n-\n-2018-07-05  Simon Marchi  <simon.marchi@polymtl.ca>\n-\n-\t* diagnostics.h (DIAGNOSTIC_IGNORE_DEPRECATED_DECLARATIONS):\n-\tDefine for clang.\n-\n-2018-07-02  Maciej W. Rozycki  <macro@mips.com>\n-\n-\tPR tdep/8282\n-\t* dis-asm.h (disasm_option_arg_t): New typedef.\n-\t(disasm_options_and_args_t): Likewise.\n-\t(disasm_options_t): Add `arg' member, document members.\n-\t(disassembler_options_mips): New prototype.\n-\t(disassembler_options_arm, disassembler_options_powerpc)\n-\t(disassembler_options_s390): Update prototypes.\n-\n-2018-06-29  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23192\n-\t*opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_Em16.\n-\n-2018-06-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/internal.h (ELF_SECTION_IN_SEGMENT): Revert last change.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\n-2018-06-21  Alan Hayward  <alan.hayward@arm.com>\n-\n-\t* elf/internal.h (ELF_SECTION_IN_SEGMENT): Don\u2019t check addresses\n-\tfor non SHT_NOBITS.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\tSync with GCC\n-\n-\t2018-05-24  Tom Rix  <trix@juniper.net>\n-\n-\t* dwarf2.def (DW_FORM_strx*, DW_FORM_addrx*): New.\n-\n-\t2017-11-20  Kito Cheng  <kito.cheng@gmail.com>\n-\n-\t* longlong.h [__riscv] (__umulsidi3): Define.\n-\t[__riscv] (umul_ppmm): Likewise.\n-\t[__riscv] (__muluw3): Likewise.\n-\n-2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* elf/mips.h (AFL_ASE_GINV, AFL_ASE_RESERVED1): New macros.\n-\t(AFL_ASE_MASK): Update to include AFL_ASE_GINV.\n-\t* opcode/mips.h: Document \"+\\\" operand format.\n-\t(ASE_GINV): New macro.\n-\n-2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n-\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* elf/mips.h (AFL_ASE_CRC): New macro.\n-\t(AFL_ASE_MASK): Update to include AFL_ASE_CRC.\n-\t* opcode/mips.h (ASE_CRC): New macro.\n-\t* opcode/mips.h (ASE_CRC64): Likewise.\n-\n-2018-06-04  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\t* elf/xtensa.h (xtensa_read_table_entries)\n-\t(xtensa_compute_fill_extra_space): New declarations.\n-\n-2018-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* diagnostics.h (DIAGNOSTIC_IGNORE_STRINGOP_TRUNCATION): Always\n-\tdefine for GCC.\n-\n-2018-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* diagnostics.h (DIAGNOSTIC_STRINGIFY_1): New.\n-\t(DIAGNOSTIC_STRINGIFY): Likewise.\n-\t(DIAGNOSTIC_IGNORE): Replace STRINGIFY with DIAGNOSTIC_STRINGIFY.\n-\t(DIAGNOSTIC_IGNORE_SELF_MOVE): Define empty if not defined.\n-\t(DIAGNOSTIC_IGNORE_DEPRECATED_REGISTER): Likewise.\n-\t(DIAGNOSTIC_IGNORE_UNUSED_FUNCTION): Likewise.\n-\t(DIAGNOSTIC_IGNORE_SWITCH_DIFFERENT_ENUM_TYPES): Likewise.\n-\t(DIAGNOSTIC_IGNORE_STRINGOP_TRUNCATION): New.\n-\n-2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* diagnostics.h: Moved from ../gdb/common/diagnostics.h.\n-\n-2018-05-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n-\n-\t* splay-tree.h (splay_tree_compare_strings,\n-\tsplay_tree_delete_pointers): Declare new utility functions.\n-\n-2018-05-21  Peter Bergner  <bergner@vnet.ibm.com.com>\n-\n-\t* opcode/ppc.h (PPC_OPERAND_FAKE): Delete macro.\n-\n-2018-05-18  Kito Cheng  <kito.cheng@gmail.com>\n-\n-\t* elf/riscv.h (EF_RISCV_RVE): New define.\n-\n-2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* elf/s12z.h: New header.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* opcode/aarch64.h (F_SYS_READ, F_SYS_WRITE): New.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* opcode/aarch64.h (aarch64_operand_error): Add non_fatal.\n-\t(aarch64_print_operand): Support notes.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* opcode/aarch64.h (aarch64_opnd_info): Change sysreg to struct.\n-\t(aarch64_decode_insn): Accept error struct.\n-\n-2018-05-15  Francois H. Theron  <francois.theron@netronome.com>\n-\n-\t* opcode/nfp.h: Use uint64_t instead of bfd_vma.\n-\n-2018-05-10  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* elf/common.h (EM_S12Z): New macro.\n-\n-2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n-\n-\t* mach-o/unwind.h (MACH_O_UNWIND_X86_64_RBP_FRAME_REGISTERS):\n-\tRename from MACH_O_UNWIND_X86_64_RBP_FRAME_REGSITERS.\n-\t(MACH_O_UNWIND_X86_EBP_FRAME_REGISTERS): Rename from\n-\tMACH_O_UNWIND_X86_EBP_FRAME_REGSITERS.\n-\n-2018-05-08  Jim Wilson  <jimw@sifive.com>\n-\n-\t* opcode/riscv-opc.h (MATCH_C_SRLI64, MASK_C_SRLI64): New.\n-\t(MATCH_C_SRAI64, MASK_C_SRAI64): New.\n-\t(MATCH_C_SLLI64, MASK_C_SLLI64): New.\n-\n-2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n-\n-\t* opcode/ppc.h (powerpc_num_opcodes): Change type to unsigned.\n-\t(vle_num_opcodes): Likewise.\n-\t(spe2_num_opcodes): Likewise.\n-\n-2018-05-04  Alan Modra  <amodra@gmail.com>\n-\n-\t* ansidecl.h: Import from gcc.\n-\t* coff/internal.h (struct internal_scnhdr): Add ATTRIBUTE_NONSTRING\n-\tto s_name.\n-\t(struct internal_syment): Add ATTRIBUTE_NONSTRING to _n_name.\n-\n-2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n-\n-\t* dis-asm.h: Added print_nfp_disassembler_options prototype.\n-\t* elf/common.h: Added EM_NFP, officially assigned. See Google Group\n-\tGeneric System V Application Binary Interface.\n-\t* elf/nfp.h: New, for NFP support.\n-\t* opcode/nfp.h: New, for NFP support.\n-\n-2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n-\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n-\n-\t* elf/arm.h: Add R_ARM_TLS_GD32_FDPIC, R_ARM_TLS_LDM32_FDPIC,\n-\tR_ARM_TLS_IE32_FDPIC.\n-\n-2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n-\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n-\n-\t* elf/arm.h (R_ARM_GOTFUNCDESC, R_ARM_GOTOFFFUNCDESC)\n-\t(R_ARM_FUNCDESC)\n-\t(R_ARM_FUNCDESC_VALUE): Define new relocations.\n-\n-2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n-\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n-\n-\t* elf/arm.h (EF_ARM_FDPIC): New.\n-\n-2018-04-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/mipspe.h: Delete.\n-\n-2018-04-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* aout/dynix3.h: Delete.\n-\n-2018-04-17 Andrew Sadek  <andrew.sadek.se@gmail.com>\n-\n-\tMicroblaze Target: PIC data text relative\n-\n-\t* bfdlink.h (Add flag): Add new flag @ 'bfd_link_info' struct.\n-\t* elf/microblaze.h (Add 3 new relocations):\n-\tR_MICROBLAZE_TEXTPCREL_64, R_MICROBLAZE_TEXTREL_64\n-\tand R_MICROBLAZE_TEXTREL_32_LO for relax function.\n-\n-2018-04-17  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/i370.h: Revert removal.\n-\t* elf/i860.h: Likewise.\n-\t* elf/i960.h: Likewise.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/sparc.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* aout/host.h: Remove m68k-aout and m68k-coff support.\n-\t* aout/hp300hpux.h: Delete.\n-\t* coff/apollo.h: Delete.\n-\t* coff/aux-coff.h: Delete.\n-\t* coff/m68k.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* dis-asm.h: Remove sh5 and sh64 support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/internal.h: Remove w65 support.\n-\t* coff/w65.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/we32k.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/internal.h: Remove m88k support.\n-\t* coff/m88k.h: Delete.\n-\t* opcode/m88k.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/i370.h: Delete.\n-\t* opcode/i370.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/h8500.h: Delete.\n-\t* coff/internal.h: Remove h8500 support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* coff/h8300.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* ieee.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* aout/host.h: Remove newsos3 support.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* nlm/ChangeLog-9315: Delete.\n-\t* nlm/alpha-ext.h: Delete.\n-\t* nlm/common.h: Delete.\n-\t* nlm/external.h: Delete.\n-\t* nlm/i386-ext.h: Delete.\n-\t* nlm/internal.h: Delete.\n-\t* nlm/ppc-ext.h: Delete.\n-\t* nlm/sparc32-ext.h: Delete.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcode/tahoe.h: Delete.\n-\n-2018-04-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* aout/adobe.h: Delete.\n-\t* aout/reloc.h: Delete.\n-\t* coff/i860.h: Delete.\n-\t* coff/i960.h: Delete.\n-\t* elf/i860.h: Delete.\n-\t* elf/i960.h: Delete.\n-\t* opcode/i860.h: Delete.\n-\t* opcode/i960.h: Delete.\n-\t* aout/aout64.h (enum reloc_type): Trim off 29k and other unused values.\n-\t* aout/ar.h (ARMAGB): Remove.\n-\t* coff/internal.h (struct internal_aouthdr, struct internal_scnhdr,\n-\tunion internal_auxent): Remove i960 support.\n-\n-2018-04-09  Alan Modra  <amodra@gmail.com>\n-\n-\t* elf/ppc.h (R_PPC_PLTSEQ, R_PPC_PLTCALL): Define.\n-\t* elf/ppc64.h (R_PPC64_PLTSEQ, R_PPC64_PLTCALL): Define.\n-\n-2018-03-28  Renlin Li  <renlin.li@arm.com>\n-\n-\tPR ld/22970\n-\t* elf/aarch64.h: Add relocation number for\n-\tR_AARCH64_P32_TLSLE_LDST16_TPREL_LO12,\n-\tR_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC,\n-\tR_AARCH64_P32_TLSLE_LDST32_TPREL_LO12,\n-\tR_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC,\n-\tR_AARCH64_P32_TLSLE_LDST64_TPREL_LO12,\n-\tR_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC,\n-\tR_AARCH64_P32_TLSLE_LDST8_TPREL_LO12,\n-\tR_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC.\n-\n-2018-03-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22988\n-\t* opcode/aarch64.h (enum aarch64_opnd): Add\n-\tAARCH64_OPND_SVE_ADDR_R.\n-\n-2018-03-21  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* elf/common.h (DF_1_KMOD): New.\n-\t(DF_1_WEAKFILTER): Likewise.\n-\t(DF_1_NOCOMMON): Likewise.\n-\n-2018-03-14  Kito Cheng  <kito.cheng@gmail.com>\n-\n-\t* opcode/riscv.h (OP_MASK_FUNCT3): New.\n-\t(OP_SH_FUNCT3): Likewise.\n-\t(OP_MASK_FUNCT7): Likewise.\n-\t(OP_SH_FUNCT7): Likewise.\n-\t(OP_MASK_OP2): Likewise.\n-\t(OP_SH_OP2): Likewise.\n-\t(OP_MASK_CFUNCT4): Likewise.\n-\t(OP_SH_CFUNCT4): Likewise.\n-\t(OP_MASK_CFUNCT3): Likewise.\n-\t(OP_SH_CFUNCT3): Likewise.\n-\t(riscv_insn_types): Likewise.\n-\n-2018-03-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22113\n-\t* coff/pe.h (struct pex64_unwind_info): Add a rawUnwindCodesEnd\n-\tfield.\n-\n-2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* opcode/i386 (OLDGCC_COMPAT): Removed.\n-\n-2018-02-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* opcode/arm.h (ARM_FEATURE_COPY): Remove macro definition.\n-\n-2018-02-20  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* opcode/mips.h: Remove `M' operand code.\n-\n-2018-02-12  Zebediah Figura  <z.figura12@gmail.com>\n-\n-\t* coff/msdos.h: New header.\n-\t* coff/pe.h: Move common defines to msdos.h.\n-\t* coff/powerpc.h: Likewise.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\n-2018-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR ld/22393\n-\t* bfdlink.h (bfd_link_info): Add separate_code.\n-\n-2018-01-04  Jim Wilson  <jimw@sifive.com>\n-\n-\t* opcode/riscv-opc.h (CSR_SBADADDR): Rename to CSR_STVAL.  Rename\n-\tDECLARE_CSR entry.  Add alias to map sbadaddr to CSR_STVAL.\n-\t(CSR_MBADADDR): Rename to CSR_MTVAL.  Rename DECLARE_CSR entry.\n-\tAdd alias to map mbadaddr to CSR_MTVAL.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "53c423b5e9c78926a5733ba6e30e746ab31b4024",
      "filename": "include/ChangeLog-2018",
      "status": "added",
      "additions": 890,
      "deletions": 0,
      "changes": 890,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/include/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/include/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/include/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,890 @@\n+2018-12-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24028\n+\t* opcode/ppc.h (PPC_INT_FMT): Delete.\n+\n+2018-12-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/23900\n+\t* elf/common.h (PT_GNU_PROPERTY): New.\n+\t(GNU_PROPERTY_X86_UINT32_VALID): Removed.\n+\n+2018-12-11  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 88409\n+\t* demangle.h (DEMANGLE_RECURSION_LIMIT): Increase to 2048.\n+\n+2018-12-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* bfdlink.h (bfd_link_info): Add has_map_file.\n+\n+2018-12-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* demangle.h (DMGL_NO_RECURSE_LIMIT): Define.\n+        (DEMANGLE_RECURSION_LIMIT): Define\n+\n+2018-12-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/ppc.h (E_OPCODE_MASK, E_LI_MASK, E_LI_INSN): Define.\n+\n+2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* dis-asm.h (riscv_symbol_is_valid): Declare.\n+\t* opcode/riscv.h (RISCV_FAKE_LABEL_NAME): Define.\n+\t(RISCV_FAKE_LABEL_CHAR): Define.\n+\n+2018-12-03  Kito Cheng  <kito@andestech.com>\n+\n+\t* opcode/riscv.h (riscv_opcode): Change type of xlen_requirement to\n+\tunsigned.\n+\n+2018-11-27  Jim Wilson  <jimw@sifive.com>\n+\n+\t* opcode/riscv.h (OP_MASK_CFUNCT6, OP_SH_CFUNCT6): New.\n+\t(OP_MASK_CFUNCT2, OP_SH_CFUNCT2): New.\n+\n+2018-11-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* opcode/arm.h (ARM_AEXT_V6M_ONLY): Merge into its use in ARM_AEXT_V6M.\n+\t(ARM_ARCH_V6M_ONLY): Remove.\n+\t(ARM_EXT_V1, ARM_EXT_V2, ARM_EXT_V2S, ARM_EXT_V3, ARM_EXT_V3M,\n+\tARM_EXT_V4, ARM_EXT_V4T, ARM_EXT_V5, ARM_EXT_V5T, ARM_EXT_V5ExP,\n+\tARM_EXT_V5E, ARM_EXT_V5J, ARM_EXT_V6, ARM_EXT_V6K, ARM_EXT_V8,\n+\tARM_EXT_V6T2, ARM_EXT_DIV, ARM_EXT_V5E_NOTM, ARM_EXT_V6_NOTM,\n+\tARM_EXT_V7, ARM_EXT_V7A, ARM_EXT_V7R, ARM_EXT_V7M, ARM_EXT_V6M,\n+\tARM_EXT_BARRIER, ARM_EXT_THUMB_MSR, ARM_EXT_V6_DSP, ARM_EXT_MP,\n+\tARM_EXT_SEC, ARM_EXT_OS, ARM_EXT_ADIV, ARM_EXT_VIRT, ARM_EXT2_PAN,\n+\tARM_EXT2_V8_2A, ARM_EXT2_V8M, ARM_EXT2_ATOMICS, ARM_EXT2_V6T2_V8M,\n+\tARM_EXT2_FP16_INST, ARM_EXT2_V8M_MAIN, ARM_EXT2_RAS, ARM_EXT2_V8_3A,\n+\tARM_EXT2_V8A, ARM_EXT2_V8_4A, ARM_EXT2_FP16_FML, ARM_EXT2_V8_5A,\n+\tARM_EXT2_SB, ARM_EXT2_PREDRES, ARM_CEXT_XSCALE, ARM_CEXT_MAVERICK,\n+\tARM_CEXT_IWMMXT, ARM_CEXT_IWMMXT2, FPU_ENDIAN_PURE, FPU_ENDIAN_BIG,\n+\tFPU_FPA_EXT_V1, FPU_FPA_EXT_V2, FPU_MAVERICK, FPU_VFP_EXT_V1xD,\n+\tFPU_VFP_EXT_V1, FPU_VFP_EXT_V2, FPU_VFP_EXT_V3xD, FPU_VFP_EXT_V3,\n+\tFPU_NEON_EXT_V1, FPU_VFP_EXT_D32, FPU_VFP_EXT_FP16, FPU_NEON_EXT_FMA,\n+\tFPU_VFP_EXT_FMA, FPU_VFP_EXT_ARMV8, FPU_NEON_EXT_ARMV8,\n+\tFPU_CRYPTO_EXT_ARMV8, CRC_EXT_ARMV8, FPU_VFP_EXT_ARMV8xD,\n+\tFPU_NEON_EXT_RDMA, FPU_NEON_EXT_DOTPROD, ARM_AEXT_V1, ARM_AEXT_V2,\n+\tARM_AEXT_V2S, ARM_AEXT_V3, ARM_AEXT_V3M, ARM_AEXT_V4xM, ARM_AEXT_V4,\n+\tARM_AEXT_V4TxM, ARM_AEXT_V4T, ARM_AEXT_V5xM, ARM_AEXT_V5,\n+\tARM_AEXT_V5TxM, ARM_AEXT_V5T, ARM_AEXT_V5TExP, ARM_AEXT_V5TE,\n+\tARM_AEXT_V5TEJ, ARM_AEXT_V6, ARM_AEXT_V6K, ARM_AEXT_V6Z, ARM_AEXT_V6KZ,\n+\tARM_AEXT_V6T2, ARM_AEXT_V6KT2, ARM_AEXT_V6ZT2, ARM_AEXT_V6KZT2,\n+\tARM_AEXT_V7_ARM, ARM_AEXT_V7A, ARM_AEXT_V7VE, ARM_AEXT_V7R,\n+\tARM_AEXT_NOTM, ARM_AEXT_V6M_ONLY, ARM_AEXT_V6M, ARM_AEXT_V6SM,\n+\tARM_AEXT_V7M, ARM_AEXT_V7, ARM_AEXT_V7EM, ARM_AEXT_V8A, ARM_AEXT2_V8A,\n+\tARM_AEXT2_V8_1A, ARM_AEXT2_V8_2A, ARM_AEXT2_V8_3A, ARM_AEXT2_V8_4A,\n+\tARM_AEXT2_V8_5A, ARM_AEXT_V8M_BASE, ARM_AEXT_V8M_MAIN,\n+\tARM_AEXT_V8M_MAIN_DSP, ARM_AEXT2_V8M, ARM_AEXT2_V8M_BASE,\n+\tARM_AEXT2_V8M_MAIN, ARM_AEXT2_V8M_MAIN_DSP, ARM_AEXT_V8R,\n+\tARM_AEXT2_V8R, FPU_VFP_V1xD, FPU_VFP_V1, FPU_VFP_V2, FPU_VFP_V3D16,\n+\tFPU_VFP_V3, FPU_VFP_V3xD, FPU_VFP_V4D16, FPU_VFP_V4, FPU_VFP_V4_SP_D16,\n+\tFPU_VFP_V5D16, FPU_VFP_ARMV8, FPU_NEON_ARMV8, FPU_CRYPTO_ARMV8,\n+\tFPU_VFP_HARD, FPU_FPA, FPU_ARCH_VFP, FPU_ARCH_FPE, FPU_ARCH_FPA,\n+\tFPU_ARCH_VFP_V1xD, FPU_ARCH_VFP_V1, FPU_ARCH_VFP_V2,\n+\tFPU_ARCH_VFP_V3D16_FP16, FPU_ARCH_VFP_V3, FPU_ARCH_VFP_V3_FP16,\n+\tFPU_ARCH_VFP_V3xD_FP16, FPU_ARCH_NEON_V1, FPU_ARCH_VFP_V3_PLUS_NEON_V1,\n+\tFPU_ARCH_NEON_FP16, FPU_ARCH_VFP_HARD, FPU_ARCH_VFP_V4,\n+\tFPU_ARCH_VFP_V4D16, FPU_ARCH_VFP_V4_SP_D16, FPU_ARCH_VFP_V5D16,\n+\tFPU_ARCH_VFP_V5_SP_D16, FPU_ARCH_NEON_VFP_V4, FPU_ARCH_VFP_ARMV8,\n+\tFPU_ARCH_NEON_VFP_ARMV8, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8,\n+\tFPU_ARCH_CRYPTO_NEON_VFP_ARMV8_DOTPROD, ARCH_CRC_ARMV8,\n+\tFPU_ARCH_NEON_VFP_ARMV8_1, FPU_ARCH_CRYPTO_NEON_VFP_ARMV8_1,\n+\tFPU_ARCH_DOTPROD_NEON_VFP_ARMV8, ARM_ARCH_V1, ARM_ARCH_V2,\n+\tARM_ARCH_V2S, ARM_ARCH_V3, ARM_ARCH_V3M, ARM_ARCH_V4xM, ARM_ARCH_V4,\n+\tARM_ARCH_V4TxM, ARM_ARCH_V4T, ARM_ARCH_V5xM, ARM_ARCH_V5,\n+\tARM_ARCH_V5TxM, ARM_ARCH_V5T, ARM_ARCH_V5TExP, ARM_ARCH_V5TE,\n+\tARM_ARCH_V5TEJ, ARM_ARCH_V6, ARM_ARCH_V6K, ARM_ARCH_V6Z, ARM_ARCH_V6KZ,\n+\tARM_ARCH_V6T2, ARM_ARCH_V6KT2, ARM_ARCH_V6ZT2, ARM_ARCH_V6KZT2,\n+\tARM_ARCH_V6M, ARM_ARCH_V6SM, ARM_ARCH_V7, ARM_ARCH_V7A, ARM_ARCH_V7VE,\n+\tARM_ARCH_V7R, ARM_ARCH_V7M, ARM_ARCH_V7EM, ARM_ARCH_V8A,\n+\tARM_ARCH_V8A_CRC, ARM_ARCH_V8_1A, ARM_ARCH_V8_2A, ARM_ARCH_V8_3A,\n+\tARM_ARCH_V8_4A, ARM_ARCH_V8_5A, ARM_ARCH_V8M_BASE, ARM_ARCH_V8M_MAIN,\n+\tARM_ARCH_V8M_MAIN_DSP, ARM_ARCH_V8R): Reindent.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_ADDR_SIMPLE_2.\n+\t(aarch64_insn_class): Add ldstgv_indexed.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_ADDR_SIMM11\n+\tand AARCH64_OPND_ADDR_SIMM13.\n+\t(aarch64_opnd_qualifier): Add new AARCH64_OPND_QLF_imm_tag.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_opnd): Add\n+\tAARCH64_OPND_UIMM4_ADDG and AARCH64_OPND_UIMM10 as new enums.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_MEMTAG): New.\n+\n+2018-11-07  Roman Bolshakov <r.bolshakov@yadro.com>\n+\t    Saagar Jha  <saagar@saagarjha.com>\n+\n+\t* mach-o/external.h (mach_o_nversion_min_command_external): Rename\n+\treserved to sdk.\n+\t(mach_o_note_command_external): New.\n+\t(mach_o_build_version_command_external): New.\n+\t* mach-o/loader.h (BFD_MACH_O_LC_VERSION_MIN_TVOS): Define.\n+\t(BFD_MACH_O_LC_NOTE): Define.\n+\n+2018-11-06  Romain Margheriti  <lilrom13@gmail.com>\n+\n+\tPR 23742\n+\t* mach-o/loader.h: Add BFD_MACH_O_LC_BUILD_VERSION.\n+\n+2018-11-06  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/arm.h (ARM_ARCH_V8_5A): Move ARM_EXT2_PREDRES and\n+\tARM_EXT2_SB to ...\n+\t(ARM_AEXT2_V8_5A): Here.\n+\n+2018-10-26  John Baldwin  <jhb@FreeBSD.org>\n+\n+\t* elf/common.h (AT_FREEBSD_HWCAP2): Define.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SSBS): New.\n+\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_SSBS by default.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SCXTNUM): New.\n+\t(AARCH64_FEATURE_ID_PFR2): New.\n+\t(AARCH64_ARCH_V8_5): Add both by default.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_BTI): New.\n+\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_BTI by default.\n+\t(aarch64_opnd): Add AARCH64_OPND_BTI_TARGET.\n+\t(HINT_OPD_CSYNC, HINT_OPD_C, HINT_OPD_J): New macros to\n+\tdefine HINT #imm values.\n+\t(HINT_OPD_JC, HINT_OPD_NULL): Likewise.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_RNG): New.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_CVADP): New.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_PREDRES): New.\n+\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_PREDRES by default.\n+\t(aarch64_opnd): Add AARCH64_OPND_SYSREG_SR.\n+\t(aarch64_sys_regs_sr): Declare new table.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_SB): New.\n+\t(AARCH64_ARCH_V8_5): Add AARCH64_FEATURE_SB by default.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_FLAGMANIP): New.\n+\t(AARCH64_FEATURE_FRINTTS): New.\n+\t(AARCH64_ARCH_V8_5): Add both by default.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/aarch64.h (AARCH64_FEATURE_V8_5): New.\n+\t(AARCH64_ARCH_V8_5): New.\n+\n+2018-10-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* bfdlink.h (struct bfd_link_info): Add load_phdrs field.\n+\n+2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_PREDRES): New.\n+\t(ARM_ARCH_V8_5A): Add ARM_EXT2_PREDRES by default.\n+\n+2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_SB): New.\n+\t(ARM_ARCH_V8_5A): Add ARM_EXT2_SB by default.\n+\n+2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* opcode/arm.h (ARM_EXT2_V8_5A): New.\n+\t(ARM_AEXT2_V8_5A, ARM_ARCH_V8_5A): New.\n+\n+2018-10-05  Richard Henderson  <rth@twiddle.net>\n+\n+\t* elf/or1k.h (elf_or1k_reloc_type): Add R_OR1K_PCREL_PG21,\n+\tR_OR1K_GOT_PG21, R_OR1K_TLS_GD_PG21, R_OR1K_TLS_LDM_PG21,\n+\tR_OR1K_TLS_IE_PG21, R_OR1K_LO13, R_OR1K_GOT_LO13,\n+\tR_OR1K_TLS_GD_LO13, R_OR1K_TLS_LDM_LO13, R_OR1K_TLS_IE_LO13,\n+\tR_OR1K_SLO13, R_OR1K_PLTA26.\n+\n+2018-10-05  Richard Henderson  <rth@twiddle.net>\n+\n+\t* elf/or1k.h (elf_or1k_reloc_type): Add R_OR1K_AHI16,\n+\tR_OR1K_GOTOFF_AHI16, R_OR1K_TLS_IE_AHI16, R_OR1K_TLS_LE_AHI16,\n+\tR_OR1K_SLO16, R_OR1K_GOTOFF_SLO16, R_OR1K_TLS_LE_SLO16.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* opcode/aarch64.h (aarch64_inst): Remove.\n+\t(enum err_type): Add ERR_VFI.\n+\t(aarch64_is_destructive_by_operands): New.\n+\t(init_insn_sequence): New.\n+\t(aarch64_decode_insn): Remove param name.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* opcode/aarch64.h (struct aarch64_opcode): Expand verifiers to take\n+\tmore arguments.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* opcode/aarch64.h (enum err_type): New.\n+\t(aarch64_decode_insn): Use it.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* opcode/aarch64.h (struct aarch64_instr_sequence): New.\n+\t(aarch64_opcode_encode): Use it.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* opcode/aarch64.h (struct aarch64_opcode): Add constraints,\n+\textend flags field size.\n+\t(F_SCAN, C_SCAN_MOVPRFX, C_MAX_ELEM): New.\n+\n+2018-10-03  John Darrington <john@darrington.wattle.id.au>\n+\n+\t* dis-asm.h (print_insn_s12z): New declaration.\n+\n+2018-10-02  Palmer Dabbelt  <palmer@sifive.com>\n+\n+\t* opcode/riscv-opc.h (MATCH_FENCE_TSO): New define.\n+\t(MASK_FENCE_TSO): Likewise.\n+\n+2018-10-01  Cupertino Miranda <cmiranda@synopsys.com>\n+\n+\t* arc-reloc.def (ARC_TLS_LE_32): Updated reloc formula.\n+\n+2018-09-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23694\n+\t* include/elf/internal.h (ELF_SECTION_IN_SEGMENT_1): Don't\n+\tinclude zero size sections at start of PT_NOTE segment.\n+\n+2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n+\n+\t* elf/nds32.h: Remove the unused target features.\n+\t* dis-asm.h (disassemble_init_nds32): Declared.\n+\t* elf/nds32.h (E_NDS32_NULL): Removed.\n+\t(E_NDS32_HAS_DSP_INST, E_NDS32_HAS_ZOL): New.\n+\t* opcode/nds32.h: Ident.\n+\t(N32_SUB6, INSN_LW): New macros.\n+\t(enum n32_opcodes): Updated.\n+\t* elf/nds32.h: Doc fixes.\n+\t* elf/nds32.h: Add R_NDS32_LSI.\n+\t* elf/nds32.h: Add new relocations for TLS.\n+\n+2018-09-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* elf/common.h (AT_SUN_HWCAP): Rename to ...\n+\t(AT_SUN_CAP_HW1): ... this.  Retain old name for backward\n+\tcompatibility.\n+\t(AT_SUN_EMULATOR, AT_SUN_BRANDNAME, AT_SUN_BRAND_AUX1)\n+\t(AT_SUN_BRAND_AUX2, AT_SUN_BRAND_AUX3, AT_SUN_CAP_HW2): Define.\n+\n+2018-09-05  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* diagnostics.h (DIAGNOSTIC_IGNORE_FORMAT_NONLITERAL): New macro.\n+\n+2018-08-31  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h (R_PPC64_REL16_HIGH, R_PPC64_REL16_HIGHA),\n+\t(R_PPC64_REL16_HIGHER, R_PPC64_REL16_HIGHERA),\n+\t(R_PPC64_REL16_HIGHEST, R_PPC64_REL16_HIGHESTA): Define.\n+\t(R_PPC64_LO_DS_OPT, R_PPC64_16DX_HA): Bump value.\n+\n+2018-08-30  Kito Cheng  <kito@andestech.com>\n+\n+\t* opcode/riscv.h (MAX_SUBSET_NUM): New.\n+\t(riscv_opcode): Add xlen_requirement field and change type of\n+\tsubset.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* elf/mips.h (E_MIPS_MACH_XXX): New E_MIPS_MACH_GS264E.\n+\t* opcode/mips.h (CPU_XXX): New CPU_GS264E.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* elf/mips.h (E_MIPS_MACH_XXX): New E_MIPS_MACH_GS464E.\n+\t* opcode/mips.h (CPU_XXX): New CPU_GS464E.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* elf/mips.h (E_MIPS_MACH_XXX): Rename E_MIPS_MACH_LS3A to\n+\tE_MIPS_MACH_GS464.\n+\t(AFL_EXT_XXX): Delete AFL_EXT_LOONGSON_3A.\n+\t* opcode/mips.h (INSN_XXX): Delete INSN_LOONGSON_3A.\n+\t(CPU_XXX): Rename CPU_LOONGSON_3A to CPU_GS464.\n+\t* opcode/mips.h (mips_isa_table): Delete CPU_LOONGSON_3A case.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* elf/mips.h (AFL_ASE_LOONGSON_EXT2): New macro.\n+\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_EXT2.\n+\t* opcode/mips.h (ASE_LOONGSON_EXT2): New macro.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t * elf/mips.h (AFL_ASE_LOONGSON_EXT): New macro.\n+\t (AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_EXT.\n+\t * opcode/mips.h (ASE_LOONGSON_EXT): New macro.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* elf/mips.h (AFL_ASE_LOONGSON_CAM): New macro.\n+\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_CAM.\n+\t* opcode/mips.h (ASE_LOONGSON_CAM): New macro.\n+\n+2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_X86_ISA_1_USED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_ISA_1_USED): This.\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_ISA_1_NEEDED): This.\n+\t(GNU_PROPERTY_X86_ISA_1_XXX): Renamed to ...\n+\t(GNU_PROPERTY_X86_COMPAT_ISA_1_XXX): This.\n+\t(GNU_PROPERTY_X86_UINT32_AND_LO): New.\n+\t(GNU_PROPERTY_X86_UINT32_AND_HI): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_LO): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_HI): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO): Likewise.\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_HI): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_CMOV): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSE): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSE2): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSE3): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSSE3): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSE4_1): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_SSE4_2): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX2): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_FMA): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512F): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512CD): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512ER): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512PF): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512VL): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512DQ): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512BW): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_4FMAPS): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_4VNNIW): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_BITALG): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_IFMA): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_VBMI): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_VBMI2): Likewise.\n+\t(GNU_PROPERTY_X86_ISA_1_AVX512_VNNI): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_X86): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_X87): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_MMX): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_XMM): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_YMM): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_ZMM): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_FXSR): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_XSAVE): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_XSAVEOPT): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_2_XSAVEC): Likewise.\n+\t(GNU_PROPERTY_X86_FEATURE_1_AND): Updated to\n+\t(GNU_PROPERTY_X86_UINT32_AND_LO + 0).\n+\t(GNU_PROPERTY_X86_ISA_1_NEEDED): Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_LO + 0).\n+\t(GNU_PROPERTY_X86_FEATURE_2_NEEDED): New.  Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_LO + 1).\n+\t(GNU_PROPERTY_X86_ISA_1_USED): Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 0).\n+\t(GNU_PROPERTY_X86_FEATURE_2_USED): New.  Defined to\n+\t(GNU_PROPERTY_X86_UINT32_OR_AND_LO + 1).\n+\n+2018-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (GNU_PROPERTY_X86_UINT32_VALID): New.\n+\n+2018-08-21  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* elf/s12z.h: Rename R_S12Z_UKNWN_3 to R_S12Z_EXT18.\n+\n+2018-08-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/ppc.h (struct powerpc_operand): Correct \"insert\" comment.\n+\tMention use of \"extract\" function to provide default value.\n+\t(PPC_OPERAND_OPTIONAL_VALUE): Delete.\n+\t(ppc_optional_operand_value): Rewrite to use extract function.\n+\n+2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* opcode/s12z.h: New file.\n+\n+2018-08-09  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* elf/arm.h: Updated comments for e_flags definitions.\n+\n+2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* elf/arc.h (Tag_ARC_ATR_version): New tag.\n+\n+2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* opcode/arc.h (ARC_OPCODE_ARCV1): Define.\n+\n+2018-08-01  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tCopy over from GCC\n+\t2018-07-26  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/86548\n+\t* libiberty.h (make_temp_file_with_prefix): New function.\n+\n+2018-07-30  Jim Wilson  <jimw@sifive.com>\n+\n+\t* opcode/riscv.h (INSN_TYPE, INSN_BRANCH, INSN_CONDBRANCH, INSN_JSR)\n+\t(INSN_DREF, INSN_DATA_SIZE, INSN_DATA_SIZE_SHIFT, INSN_1_BYTE)\n+\t(INSN_2_BYTE, INSN_4_BYTE, INSN_8_BYTE, INSN_16_BYTE): New.\n+\n+2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* elf/common.h (EM_CSKY, EM_CSKY_OLD): Define.\n+\t* elf/csky.h: New file.\n+\n+2018-07-27  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\t    Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* elf/mips.h (AFL_ASE_MASK): Correct typo.\n+\n+2018-07-26  Alex Chadwick  <Alex.Chadwick@cl.cam.ac.uk>\n+\n+\t* opcode/ppc.h (PPC_OPCODE_750): Adjust comment.\n+\n+2018-07-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc64.h: Specify byte offset to local entry for values\n+\tof two to six in STO_PPC64_LOCAL_MASK.  Clarify r2 return\n+\tvalue for such functions when entering via global entry point.\n+\tSpecify meaning of a value of one in STO_PPC64_LOCAL_MASK.\n+\n+2018-07-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23430\n+\t* elf/common.h (SHT_SYMTAB_SHNDX): Fix comment typo.\n+\n+2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\t    Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* elf/mips.h (AFL_ASE_MMI): New macro.\n+\t(AFL_ASE_MASK): Update to include AFL_ASE_LOONGSON_MMI.\n+\t* opcode/mips.h (ASE_LOONGSON_MMI): New macro.\n+\n+2018-07-17  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* bfdlink.h (bfd_link_hash_entry): Add `rel_from_abs' member.\n+\n+2018-07-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* diagnostics.h: Comment on macro usage.\n+\n+2018-07-05  Simon Marchi  <simon.marchi@polymtl.ca>\n+\n+\t* diagnostics.h (DIAGNOSTIC_IGNORE_DEPRECATED_DECLARATIONS):\n+\tDefine for clang.\n+\n+2018-07-02  Maciej W. Rozycki  <macro@mips.com>\n+\n+\tPR tdep/8282\n+\t* dis-asm.h (disasm_option_arg_t): New typedef.\n+\t(disasm_options_and_args_t): Likewise.\n+\t(disasm_options_t): Add `arg' member, document members.\n+\t(disassembler_options_mips): New prototype.\n+\t(disassembler_options_arm, disassembler_options_powerpc)\n+\t(disassembler_options_s390): Update prototypes.\n+\n+2018-06-29  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23192\n+\t*opcode/aarch64.h (aarch64_opnd): Add AARCH64_OPND_Em16.\n+\n+2018-06-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/internal.h (ELF_SECTION_IN_SEGMENT): Revert last change.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\n+2018-06-21  Alan Hayward  <alan.hayward@arm.com>\n+\n+\t* elf/internal.h (ELF_SECTION_IN_SEGMENT): Don\u2019t check addresses\n+\tfor non SHT_NOBITS.\n+\n+2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\tSync with GCC\n+\n+\t2018-05-24  Tom Rix  <trix@juniper.net>\n+\n+\t* dwarf2.def (DW_FORM_strx*, DW_FORM_addrx*): New.\n+\n+\t2017-11-20  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* longlong.h [__riscv] (__umulsidi3): Define.\n+\t[__riscv] (umul_ppmm): Likewise.\n+\t[__riscv] (__muluw3): Likewise.\n+\n+2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* elf/mips.h (AFL_ASE_GINV, AFL_ASE_RESERVED1): New macros.\n+\t(AFL_ASE_MASK): Update to include AFL_ASE_GINV.\n+\t* opcode/mips.h: Document \"+\\\" operand format.\n+\t(ASE_GINV): New macro.\n+\n+2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n+\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* elf/mips.h (AFL_ASE_CRC): New macro.\n+\t(AFL_ASE_MASK): Update to include AFL_ASE_CRC.\n+\t* opcode/mips.h (ASE_CRC): New macro.\n+\t* opcode/mips.h (ASE_CRC64): Likewise.\n+\n+2018-06-04  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* elf/xtensa.h (xtensa_read_table_entries)\n+\t(xtensa_compute_fill_extra_space): New declarations.\n+\n+2018-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* diagnostics.h (DIAGNOSTIC_IGNORE_STRINGOP_TRUNCATION): Always\n+\tdefine for GCC.\n+\n+2018-06-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* diagnostics.h (DIAGNOSTIC_STRINGIFY_1): New.\n+\t(DIAGNOSTIC_STRINGIFY): Likewise.\n+\t(DIAGNOSTIC_IGNORE): Replace STRINGIFY with DIAGNOSTIC_STRINGIFY.\n+\t(DIAGNOSTIC_IGNORE_SELF_MOVE): Define empty if not defined.\n+\t(DIAGNOSTIC_IGNORE_DEPRECATED_REGISTER): Likewise.\n+\t(DIAGNOSTIC_IGNORE_UNUSED_FUNCTION): Likewise.\n+\t(DIAGNOSTIC_IGNORE_SWITCH_DIFFERENT_ENUM_TYPES): Likewise.\n+\t(DIAGNOSTIC_IGNORE_STRINGOP_TRUNCATION): New.\n+\n+2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* diagnostics.h: Moved from ../gdb/common/diagnostics.h.\n+\n+2018-05-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* splay-tree.h (splay_tree_compare_strings,\n+\tsplay_tree_delete_pointers): Declare new utility functions.\n+\n+2018-05-21  Peter Bergner  <bergner@vnet.ibm.com.com>\n+\n+\t* opcode/ppc.h (PPC_OPERAND_FAKE): Delete macro.\n+\n+2018-05-18  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* elf/riscv.h (EF_RISCV_RVE): New define.\n+\n+2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* elf/s12z.h: New header.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* opcode/aarch64.h (F_SYS_READ, F_SYS_WRITE): New.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* opcode/aarch64.h (aarch64_operand_error): Add non_fatal.\n+\t(aarch64_print_operand): Support notes.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* opcode/aarch64.h (aarch64_opnd_info): Change sysreg to struct.\n+\t(aarch64_decode_insn): Accept error struct.\n+\n+2018-05-15  Francois H. Theron  <francois.theron@netronome.com>\n+\n+\t* opcode/nfp.h: Use uint64_t instead of bfd_vma.\n+\n+2018-05-10  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* elf/common.h (EM_S12Z): New macro.\n+\n+2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n+\n+\t* mach-o/unwind.h (MACH_O_UNWIND_X86_64_RBP_FRAME_REGISTERS):\n+\tRename from MACH_O_UNWIND_X86_64_RBP_FRAME_REGSITERS.\n+\t(MACH_O_UNWIND_X86_EBP_FRAME_REGISTERS): Rename from\n+\tMACH_O_UNWIND_X86_EBP_FRAME_REGSITERS.\n+\n+2018-05-08  Jim Wilson  <jimw@sifive.com>\n+\n+\t* opcode/riscv-opc.h (MATCH_C_SRLI64, MASK_C_SRLI64): New.\n+\t(MATCH_C_SRAI64, MASK_C_SRAI64): New.\n+\t(MATCH_C_SLLI64, MASK_C_SLLI64): New.\n+\n+2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n+\n+\t* opcode/ppc.h (powerpc_num_opcodes): Change type to unsigned.\n+\t(vle_num_opcodes): Likewise.\n+\t(spe2_num_opcodes): Likewise.\n+\n+2018-05-04  Alan Modra  <amodra@gmail.com>\n+\n+\t* ansidecl.h: Import from gcc.\n+\t* coff/internal.h (struct internal_scnhdr): Add ATTRIBUTE_NONSTRING\n+\tto s_name.\n+\t(struct internal_syment): Add ATTRIBUTE_NONSTRING to _n_name.\n+\n+2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n+\n+\t* dis-asm.h: Added print_nfp_disassembler_options prototype.\n+\t* elf/common.h: Added EM_NFP, officially assigned. See Google Group\n+\tGeneric System V Application Binary Interface.\n+\t* elf/nfp.h: New, for NFP support.\n+\t* opcode/nfp.h: New, for NFP support.\n+\n+2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n+\n+\t* elf/arm.h: Add R_ARM_TLS_GD32_FDPIC, R_ARM_TLS_LDM32_FDPIC,\n+\tR_ARM_TLS_IE32_FDPIC.\n+\n+2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n+\n+\t* elf/arm.h (R_ARM_GOTFUNCDESC, R_ARM_GOTOFFFUNCDESC)\n+\t(R_ARM_FUNCDESC)\n+\t(R_ARM_FUNCDESC_VALUE): Define new relocations.\n+\n+2018-04-25  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n+\n+\t* elf/arm.h (EF_ARM_FDPIC): New.\n+\n+2018-04-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/mipspe.h: Delete.\n+\n+2018-04-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* aout/dynix3.h: Delete.\n+\n+2018-04-17 Andrew Sadek  <andrew.sadek.se@gmail.com>\n+\n+\tMicroblaze Target: PIC data text relative\n+\n+\t* bfdlink.h (Add flag): Add new flag @ 'bfd_link_info' struct.\n+\t* elf/microblaze.h (Add 3 new relocations):\n+\tR_MICROBLAZE_TEXTPCREL_64, R_MICROBLAZE_TEXTREL_64\n+\tand R_MICROBLAZE_TEXTREL_32_LO for relax function.\n+\n+2018-04-17  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/i370.h: Revert removal.\n+\t* elf/i860.h: Likewise.\n+\t* elf/i960.h: Likewise.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/sparc.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* aout/host.h: Remove m68k-aout and m68k-coff support.\n+\t* aout/hp300hpux.h: Delete.\n+\t* coff/apollo.h: Delete.\n+\t* coff/aux-coff.h: Delete.\n+\t* coff/m68k.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* dis-asm.h: Remove sh5 and sh64 support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/internal.h: Remove w65 support.\n+\t* coff/w65.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/we32k.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/internal.h: Remove m88k support.\n+\t* coff/m88k.h: Delete.\n+\t* opcode/m88k.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/i370.h: Delete.\n+\t* opcode/i370.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/h8500.h: Delete.\n+\t* coff/internal.h: Remove h8500 support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* coff/h8300.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* ieee.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* aout/host.h: Remove newsos3 support.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* nlm/ChangeLog-9315: Delete.\n+\t* nlm/alpha-ext.h: Delete.\n+\t* nlm/common.h: Delete.\n+\t* nlm/external.h: Delete.\n+\t* nlm/i386-ext.h: Delete.\n+\t* nlm/internal.h: Delete.\n+\t* nlm/ppc-ext.h: Delete.\n+\t* nlm/sparc32-ext.h: Delete.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcode/tahoe.h: Delete.\n+\n+2018-04-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* aout/adobe.h: Delete.\n+\t* aout/reloc.h: Delete.\n+\t* coff/i860.h: Delete.\n+\t* coff/i960.h: Delete.\n+\t* elf/i860.h: Delete.\n+\t* elf/i960.h: Delete.\n+\t* opcode/i860.h: Delete.\n+\t* opcode/i960.h: Delete.\n+\t* aout/aout64.h (enum reloc_type): Trim off 29k and other unused values.\n+\t* aout/ar.h (ARMAGB): Remove.\n+\t* coff/internal.h (struct internal_aouthdr, struct internal_scnhdr,\n+\tunion internal_auxent): Remove i960 support.\n+\n+2018-04-09  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf/ppc.h (R_PPC_PLTSEQ, R_PPC_PLTCALL): Define.\n+\t* elf/ppc64.h (R_PPC64_PLTSEQ, R_PPC64_PLTCALL): Define.\n+\n+2018-03-28  Renlin Li  <renlin.li@arm.com>\n+\n+\tPR ld/22970\n+\t* elf/aarch64.h: Add relocation number for\n+\tR_AARCH64_P32_TLSLE_LDST16_TPREL_LO12,\n+\tR_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC,\n+\tR_AARCH64_P32_TLSLE_LDST32_TPREL_LO12,\n+\tR_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC,\n+\tR_AARCH64_P32_TLSLE_LDST64_TPREL_LO12,\n+\tR_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC,\n+\tR_AARCH64_P32_TLSLE_LDST8_TPREL_LO12,\n+\tR_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC.\n+\n+2018-03-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22988\n+\t* opcode/aarch64.h (enum aarch64_opnd): Add\n+\tAARCH64_OPND_SVE_ADDR_R.\n+\n+2018-03-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* elf/common.h (DF_1_KMOD): New.\n+\t(DF_1_WEAKFILTER): Likewise.\n+\t(DF_1_NOCOMMON): Likewise.\n+\n+2018-03-14  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* opcode/riscv.h (OP_MASK_FUNCT3): New.\n+\t(OP_SH_FUNCT3): Likewise.\n+\t(OP_MASK_FUNCT7): Likewise.\n+\t(OP_SH_FUNCT7): Likewise.\n+\t(OP_MASK_OP2): Likewise.\n+\t(OP_SH_OP2): Likewise.\n+\t(OP_MASK_CFUNCT4): Likewise.\n+\t(OP_SH_CFUNCT4): Likewise.\n+\t(OP_MASK_CFUNCT3): Likewise.\n+\t(OP_SH_CFUNCT3): Likewise.\n+\t(riscv_insn_types): Likewise.\n+\n+2018-03-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22113\n+\t* coff/pe.h (struct pex64_unwind_info): Add a rawUnwindCodesEnd\n+\tfield.\n+\n+2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* opcode/i386 (OLDGCC_COMPAT): Removed.\n+\n+2018-02-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* opcode/arm.h (ARM_FEATURE_COPY): Remove macro definition.\n+\n+2018-02-20  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* opcode/mips.h: Remove `M' operand code.\n+\n+2018-02-12  Zebediah Figura  <z.figura12@gmail.com>\n+\n+\t* coff/msdos.h: New header.\n+\t* coff/pe.h: Move common defines to msdos.h.\n+\t* coff/powerpc.h: Likewise.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\n+2018-01-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR ld/22393\n+\t* bfdlink.h (bfd_link_info): Add separate_code.\n+\n+2018-01-04  Jim Wilson  <jimw@sifive.com>\n+\n+\t* opcode/riscv-opc.h (CSR_SBADADDR): Rename to CSR_STVAL.  Rename\n+\tDECLARE_CSR entry.  Add alias to map sbadaddr to CSR_STVAL.\n+\t(CSR_MBADADDR): Rename to CSR_MTVAL.  Rename DECLARE_CSR entry.\n+\tAdd alias to map mbadaddr to CSR_MTVAL.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 4748,
      "changes": 4750,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "d7d9188394386edef37784e1242268d440e184e0",
      "filename": "ld/ChangeLog-2018",
      "status": "added",
      "additions": 4760,
      "deletions": 0,
      "changes": 4760,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/ld/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/ld/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109"
    },
    {
      "sha": "c2900e0b00e51f681f527aef6f14329c06bede45",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 2,
      "deletions": 2538,
      "changes": 2540,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -1,2542 +1,6 @@\n-2018-12-28  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 24028\n-\t* ppc-dis.c (print_insn_powerpc): Replace PPC_INT_FMT uses with\n-\tPRId64/PRIx64.\n-\n-2018-12-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* arm-dis.c: Include bfd.h.\n-\t* aarch64-opc.c: Include bfd_stdint.h rather than stdint.h.\n-\t* csky-dis.c: Likewise.\n-\t* nds32-asm.c: Likewise.\n-\t* riscv-dis.c: Likewise.\n-\t* s12z-dis.c: Likewise.\n-\t* wasm32-dis.c: Likewise.\n-\n-2018-12-07  Jim Wilson  <jimw@sifive.com>\n-\n-\tPR gas/23956\n-\t* riscv-opc.c (riscv_opcodes) <\"add\">: Use 1 not 0 for fourth arg.\n-\n-2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* configure.ac (enable-cgen-maint): Support passing path to cgen\n-\tsource tree.\n-\t* configure: Regenerate.\n-\n-2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n-\n-\t* disassembler.c (disassemble_init_for_target): Add RISC-V\n-\tinitialisation.\n-\t* riscv-dis.c (riscv_symbol_is_valid): New function.\n-\n-2018-12-03  Kito Cheng <kito@andestech.com>\n-\n-\t* riscv-opc.c: Change the type of xlen, because type of\n-\txlen_requirement changed.\n-\n-2018-12-03  Egeyar Bagcioglu <egeyar.bagcioglu@oracle.com>\n-\n-\tPR 23193\n-        PR 19721\n-        * aarch64-tbl.h (aarch64_opcode_table): Only disassemble an ORR\n-\tencoding as MOV if the shift operation is a left shift of zero.\n-\n-2018-11-29  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (unimp): Mark compressed unimp as INSN_ALIAS.\n-\t(c.unimp): New.\n-\n-2018-11-27  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (ciw): Fix whitespace to align columns.\n-\t(ca): New.\n-\n-2018-11-21  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* s12z-dis.c (print_insn_shift) [SB_REG_REG_N]: Enter special case\n-\tif the postbyte matches the appropriate pattern.\n-\n-2018-11-13  Francois H. Theron <francois.theron@netronome.com>\n-\n-\t* nfp-dis.c: Fix crc[] disassembly if operands are swapped.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs_dc): New entries for\n-\tIGVAC, IGSW, CGSW, CIGSW, CGVAC, CGVAP, CGVADP, CIGVAC, GVA,\n-\tIGDVAC, IGDSW, CGDSW, CIGDSW, CGDVAC, CGDVAP, CGDVADP,\n-\tCIGDVAC and GZVA.\n-\t(aarch64_sys_ins_reg_supported_p): New check for above.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs): New entries for TCO,\n-\tTFSRE0_SL1, TFSR_EL1, TFSR_EL2, TFSR_EL3, TFSR_EL12,\n-\tRGSR_EL1 and GCR_EL1.\n-\t(aarch64_sys_reg_supported_p): New check for above.\n-\t(aarch64_pstatefields): New entry for TCO.\n-\t(aarch64_pstatefield_supported_p): New check for above.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_ins_addr_simple_2): New.\n-\t* aarch64-asm.h (ins_addr_simple_2): Declare the above.\n-\t* aarch64-dis.c (aarch64_ext_addr_simple_2): New.\n-\t* aarch64-dis.h (ext_addr_simple_2): Declare the above.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Add case for\n-\tAARCH64_OPND_ADDR_SIMPLE_2 and ldstgv_indexed.\n-\t(aarch64_print_operand): Add case for AARCH64_OPND_ADDR_SIMPLE_2.\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add stgv and ldgv.\n-\t(AARCH64_OPERANDS): Define ADDR_SIMPLE_2.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (QL_LDG): New.\n-\t(aarch64_opcode_table): Add ldg.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_opnd_qualifiers): Add new data\n-\tfor AARCH64_OPND_QLF_imm_tag.\n-\t(operand_general_constraint_met_p): Add case for\n-\tAARCH64_OPND_ADDR_SIMM11 and AARCH64_OPND_ADDR_SIMM13.\n-\t(aarch64_print_operand): Likewise.\n-\t* aarch64-tbl.h (QL_LDST_AT, QL_STGP): New.\n-\t(aarch64_opcode_table): Add stg, stzg, st2g, stz2g and stgp\n-\tfor both offset and pre/post indexed versions.\n-\t(AARCH64_OPERANDS): Define ADDR_SIMM11 and ADDR_SIMM13.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add subp, subps and cmpp.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.h (aarch64_field_kind): New FLD_imm4_3.\n-\t(OPD_F_SHIFT_BY_4, operand_need_shift_by_four): New.\n-\t* aarch64-opc.c (fields): Add entry for imm4_3.\n-\t(operand_general_constraint_met_p): Add cases for\n-\tAARCH64_OPND_UIMM4_ADDG and AARCH64_OPND_UIMM10.\n-\t(aarch64_print_operand): Likewise.\n-\t* aarch64-tbl.h (QL_ADDG): New.\n-\t(aarch64_opcode_table): Add addg, subg, irg and gmi.\n-\t(AARCH64_OPERANDS): Define UIMM4_ADDG and UIMM10.\n-\t* aarch64-asm.c (aarch64_ins_imm): Add case for\n-\toperand_need_shift_by_four.\n-\t* aarch64-asm-2.c: Regenerated.\n-\t* aarch64-dis-2.c: Regenerated.\n-\t* aarch64-opc-2.c: Regenerated.\n-\n-2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_memtag): New.\n-\t(MEMTAG, MEMTAG_INSN): New.\n-\n-2018-11-06  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (select_arm_features): Update bfd_mach_arm_8\n-\twith Armv8.5-A. Remove reduntant ARM_EXT2_FP16_FML.\n-\n-2018-11-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-opc.c (insert_arx, insert_ary, insert_rx, insert_ry, insert_ls),\n-\t(insert_evuimm1_ex0, insert_evuimm2_ex0, insert_evuimm4_ex0),\n-\t(insert_evuimm8_ex0, insert_evuimm_lt8, insert_evuimm_lt16),\n-\t(insert_rD_rS_even, insert_off_lsp, insert_off_spe2, insert_Ddd):\n-\tDon't return zero on error, insert mask bits instead.\n-\t(insert_sd4h, extract_sd4h, insert_sd4w, extract_sd4w): Delete.\n-\t(insert_sh6, extract_sh6): Delete dead code.\n-\t(insert_sprbat, insert_sprg): Use unsigned comparisions.\n-\t(powerpc_operands <OIMM>): Set shift count rather than using\n-\tPPC_OPSHIFT_INV.\n-\t<SE_SDH, SE_SDW>: Likewise.  Don't use insert/extract functions.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis-evex.h (evex_table): Use K suffix instead of %LW for\n-\tvpbroadcast{d,q} with GPR operand.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (EVEX_W_0F6E_P_2, EVEX_W_0F7E_P_2): Delete.\n-\t* i386-dis-evex.h (evex_table): Move vmov[dq} with GPR operand\n-\tcases up one level in the hierarchy.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (MOD_VEX_W_0_0F92_P_3_LEN_0,\n-\tMOD_VEX_W_1_0F92_P_3_LEN_0): Fold into MOD_VEX_0F92_P_3_LEN_0.\n-\t(MOD_VEX_W_0_0F93_P_3_LEN_0, MOD_VEX_W_1_0F93_P_3_LEN_0): Fold\n-\tinto MOD_VEX_0F93_P_3_LEN_0.\n-\t(vex_len_table, vex_w_table, mod_table): Move kmov[dq} with GPR\n-\toperand cases up one level in the hierarchy.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (VEX_W_0FC4_P_2, VEX_W_0FC5_P_2, VEX_W_0F3A14_P_2,\n-\tVEX_W_0F3A15_P_2, VEX_W_0F3A20_P_2, EVEX_W_0F3A16_P_2,\n-\tEVEX_W_0F3A22_P_2): Delete.\n-\t(vex_len_table, vex_w_table): Move vpextr{b,w} and vpinsr{b,w}\n-\tentries up one level in the hierarchy.\n-\t(OP_E_memory): Handle dq_mode when determining Disp8 shift\n-\tvalue.\n-\t* i386-dis-evex.h (evex_table): Move vpextr{d,q} and vpinsr{d,q}\n-\tentries up one level in the hierarchy.\n-\t* i386-opc.tbl (vpextrb, vpextrw, vpinsrb, vpinsrw): Change to\n-\tVexWIG for AVX flavors.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vcvtsi2sd, vcvtsi2ss, vmovd, vpcmpestri,\n-\tvpcmpestrm, vpextrd, vpinsrd, vpbroadcastd, vcvtusi2sd,\n-\tvcvtusi2ss, kmovd): Drop VexW=1.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (Vex128, Vex256, VexLIG, EVex128, EVex256,\n-\tEVex512, EVexLIG, EVexDYN): New.\n-\t(ldmxcsr, stmxcsr, vldmxcsr, vstmxcsr, all BMI, BMI2, and TBM\n-\tinsns): Use Vex128 instead of Vex=3 (aka VexLIG).\n-\t(vextractps, vinsertps, vpextr*, vpinsr*): Use EVex128 instead\n-\tof EVex=4 (aka EVexLIG).\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (pextrw, vpextrw): Add Load to 0F C5 forms.\n-\t(vpmaxub): Re-order attributes on AVX512BW flavor.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vandnp*, vandp*, vcmp*, vcvtss2sd, vorp*,\n-\tvpmaxub, vmovntdqa, vmpsadbw, vphsub*): Use VexWIG instead of\n-\tVex=1 on AVX / AVX2 flavors.\n-\t(vpmaxub): Re-order attributes on AVX512BW flavor.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-11-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (VexW0, VexW1): New.\n-\t(vphadd*, vphsub*): Use VexW0 on XOP variants.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-10-22  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* s12z-dis.c (decode_possible_symbol): Add fallback case.\n-\t(rel_15_7): Likewise.\n-\n-2018-10-19  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* arm-dis.c (UNKNOWN_INSTRUCTION_32BIT): Format specifier for arm mode.\n-\t(UNKNOWN_INSTRUCTION_16BIT): Format specifier for thumb mode.\n-\t(print_insn_arm, print_insn_thumb16, print_insn_thumb32): Use them.\n-\n-2018-10-16  Matthew Malcomson  <matthew.malcomson@arm.com>\n-\n-\t* aarch64-opc.c (struct operand_qualifier_data): Change qualifier data\n-\tcorresponding to AARCH64_OPND_QLF_S_4B qualifier.\n-\n-2018-10-10  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Drop Size16, Size32, and\n-\tSize64. Add Size.\n-\t* i386-opc.h (Size16, Size32, Size64): Delete.\n-\t(Size): New.\n-\t(SIZE16, SIZE32, SIZE64): Define.\n-\t(struct i386_opcode_modifier): Drop size16, size32, and size64.\n-\tAdd size.\n-\t* i386-opc.tbl (Size16, Size32, Size64): Define.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Add\n-\tSSBS in the check for one-bit immediate.\n-\t(aarch64_sys_regs): New entry for SSBS.\n-\t(aarch64_sys_reg_supported_p): New check for above.\n-\t(aarch64_pstatefields): New entry for SSBS.\n-\t(aarch64_pstatefield_supported_p): New check for above.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs): New entries for\n-\tscxtnum_el[0,1,2,3,12] and id_pfr2_el1.\n-\t(aarch64_sys_reg_supported_p): New checks for above.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.h (HINT_OPD_NOPRINT, HINT_ENCODE): New.\n-\t(HINT_FLAG, HINT_VALUE): New macros to encode NO_PRINT flag\n-\twith the hint immediate.\n-\t* aarch64-opc.c (aarch64_hint_options): New entries for\n-\tc, j, jc and default (with HINT_OPD_F_NOPRINT flag) for BTI.\n-\t(aarch64_print_operand): Add case for AARCH64_OPND_BTI_TARGET\n-\twhile checking for HINT_OPD_F_NOPRINT flag.\n-\t* aarch64-dis.c (aarch64_ext_hint): Use new HINT_VALUE to\n-\textract value.\n-\t* aarch64-tbl.h (aarch64_feature_bti, BTI, BTI_INSN): New.\n-\t(aarch64_opcode_table): Add entry for BTI.\n-\t(AARCH64_OPERANDS): Add new description for BTI targets.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs): New entries for\n-\trndr and rndrrs.\n-\t(aarch64_sys_reg_supported_p): New check for above.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-opc.c (aarch64_sys_regs_dc): New entry for cvadp.\n-\t(aarch64_sys_ins_reg_supported_p): New check for above.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-dis.c (aarch64_ext_sysins_op): Add case for\n-\tAARCH64_OPND_SYSREG_SR.\n-\t* aarch64-opc.c (aarch64_print_operand): Likewise.\n-\t(aarch64_sys_regs_sr): Define table.\n-\t(aarch64_sys_ins_reg_supported_p): Check for RCTX with\n-\tAARCH64_FEATURE_PREDRES.\n-\t* aarch64-tbl.h (aarch64_feature_predres): New.\n-\t(PREDRES, PREDRES_INSN): New.\n-\t(aarch64_opcode_table): Add entries for cfp, dvp and cpp.\n-\t(AARCH64_OPERANDS): Add new description for SYSREG_SR.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_sb): New.\n-\t(SB, SB_INSN): New.\n-\t(aarch64_opcode_table): Add entry for sb.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_flagmanip): New.\n-\t(aarch64_feature_frintts): New.\n-\t(FLAGMANIP, FRINTTS): New.\n-\t(aarch64_opcode_table): Add entries for xaflag, axflag\n-\tand frint[32,64][x,z] instructions.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_feature_set aarch64_feature_v8_5): New.\n-\t(ARMV8_5, V8_5_INSN): New.\n-\n-2018-10-08  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-opc.c (verify_constraints): Use memset instead of {0}.\n-\n-2018-10-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (rm_table): Add enclv.\n-\t* i386-opc.tbl: Add enclv.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (arm_opcodes): Add sb.\n-\t(thumb32_opcodes): Likewise.\n-\n-2018-10-05  Richard Henderson  <rth@twiddle.net>\n-\t    Stafford Horne  <shorne@gmail.com>\n-\n-\t* or1k-desc.c: Regenerate.\n-\t* or1k-desc.h: Regenerate.\n-\t* or1k-opc.c: Regenerate.\n-\t* or1k-opc.h: Regenerate.\n-\t* or1k-opinst.c: Regenerate.\n-\n-2018-10-05  Richard Henderson  <rth@twiddle.net>\n-\n-\t* or1k-asm.c: Regenerated.\n-\t* or1k-desc.c: Regenerated.\n-\t* or1k-desc.h: Regenerated.\n-\t* or1k-dis.c: Regenerated.\n-\t* or1k-ibld.c: Regenerated.\n-\t* or1k-opc.c: Regenerated.\n-\t* or1k-opc.h: Regenerated.\n-\t* or1k-opinst.c: Regenerated.\n-\n-2018-10-05  Richard Henderson  <rth@twiddle.net>\n-\n-\t* or1k-asm.c: Regenerate.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_opcode_encode): Apply constraint verifier.\n-\t* aarch64-dis.c (print_operands): Refactor to take notes.\n-\t(print_verifier_notes): New.\n-\t(print_aarch64_insn): Apply constraint verifier.\n-\t(print_insn_aarch64_word): Update call to print_aarch64_insn.\n-\t* aarch64-opc.c (aarch64_print_operand): Remove attribute, update notes format.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-opc.c (init_insn_block): New.\n-\t(verify_constraints, aarch64_is_destructive_by_operands): New.\n-\t* aarch64-opc.h (verify_constraints): New.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (aarch64_opcode_decode): Update verifier call.\n-\t* aarch64-opc.c (verify_ldpsw): Update arguments.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (ERR_OK, ERR_UND, ERR_UNP, ERR_NYI): Remove.\n-\t(aarch64_decode_insn, print_insn_aarch64_word): Use err_type.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-asm.c (aarch64_opcode_encode): Add insn_sequence.\n-\t* aarch64-dis.c (insn_sequence): New.\n-\n-2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-tbl.h (CORE_INSN, __FP_INSN, SIMD_INSN, CRYP_INSN, _CRC_INSN,\n-\t_LSE_INSN, _LOR_INSN, RDMA_INSN, FF16_INSN, SF16_INSN, V8_2_INSN,\n-\t_SVE_INSN, V8_3_INSN, CNUM_INSN, RCPC_INSN, SHA2_INSN, AES_INSN,\n-\tV8_4_INSN, SHA3_INSN, SM4_INSN, FP16_V8_2_INSN, DOT_INSN): Initialize\n-\tconstraints.\n-\t(_SVE_INSNC): New.\n-\t(struct aarch64_opcode): (fjcvtzs, ldpsw, ldpsw, esb, psb): Initialize\n-\tconstraints.\n-\t(movprfx): Change _SVE_INSN into _SVE_INSNC, add C_SCAN_MOVPRFX and\n-\tF_SCAN flags.\n-\t(msb, mul, neg, not, orr, rbit, revb, revh, revw, sabd, scvtf,\n-\tsdiv, sdivr, sdot, smax, smin, smulh, splice, sqadd, sqdecd, sqdech,\n-\tsqdecp, sqdecw, sqincd, sqinch, sqincp, sqincw, sqsub, sub, subr, sxtb,\n-\tsxth, sxtw, uabd, ucvtf, udiv, udivr, udot, umax, umin, umulh, uqadd,\n-\tuqdecd, uqdech, uqdecp, uqdecw, uqincd, uqinch, uqincp, uqincw, uqsub,\n-\tuxtb, uxth, uxtw, bic, eon, orn, mov, fmov): Change _SVE_INSN into _SVE_INSNC and add\n-\tC_SCAN_MOVPRFX and C_MAX_ELEM constraints.\n-\n-2018-10-02  Palmer Dabbelt  <palmer@sifive.com>\n-\n-\t* riscv-opc.c (riscv_opcodes) <fence.tso>: New opcode.\n-\n-2018-09-23  Sandra Loosemore  <sandra@codesourcery.com>\n-\n-\t* nios2-dis.c (nios2_print_insn_arg): Make sure signed conversions\n-\tare used when extracting signed fields and converting them to\n-\tpotentially 64-bit types.\n-\n-2018-09-21  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* Makefile.am: Remove NO_WMISSING_FIELD_INITIALIZERS.\n-\t* Makefile.in: Re-generate.\n-\t* aclocal.m4: Re-generate.\n-\t* configure: Re-generate.\n-\t* configure.ac: Remove check for -Wno-missing-field-initializers.\n-\t* csky-opc.h (csky_v1_opcodes): Initialize all fields of last element.\n-\t(csky_v2_opcodes): Likewise.\n-\n-2018-09-20  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* arc-nps400-tbl.h: Append `ull' to large constants throughout.\n-\n-2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n-\n-\t* nds32-asm.c (operand_fields): Remove the unused fields.\n-\t(nds32_opcodes): Remove the unused instructions.\n-\t* nds32-dis.c (nds32_ex9_info): Removed.\n-\t(nds32_parse_opcode): Updated.\n-\t(print_insn_nds32): Likewise.\n-\t* nds32-asm.c (config.h, stdlib.h, string.h): New includes.\n-\t(LEX_SET_FIELD, LEX_GET_FIELD): Update defines.\n-\t(nds32_asm_init, build_operand_hash_table, build_keyword_hash_table,\n-\tbuild_opcode_hash_table): New functions.\n-\t(nds32_keyword_table, nds32_keyword_count_table, nds32_field_table,\n-\tnds32_opcode_table): New.\n-\t(hw_ktabs): Declare it to a pointer rather than an array.\n-\t(build_hash_table): Removed.\n-\t* nds32-asm.h (enum): Add SYN_INPUT, SYN_OUTPUT, SYN_LOPT,\n-\tSYN_ROPT and upadte HW_GPR and HW_INT.\n-\t* nds32-dis.c (keywords): Remove const.\n-\t(match_field): New function.\n-\t(nds32_parse_opcode): Updated.\n-\t* disassemble.c (disassemble_init_for_target):\n-\tAdd disassemble_init_nds32.\n-\t* nds32-dis.c (eum map_type): New.\n-\t(nds32_private_data): Likewise.\n-\t(get_mapping_symbol_type, is_mapping_symbol, nds32_symbol_is_valid,\n-\tnds32_add_opcode_hash_table, disassemble_init_nds32): New functions.\n-\t(print_insn_nds32): Updated.\n-\t* nds32-asm.c (parse_aext_reg): Add new parameter.\n-\t(parse_re, parse_re2, parse_aext_reg): Only reduced registers\n-\tare allowed to use.\n-\tAll callers changed.\n-\t* nds32-asm.c (keyword_usr, keyword_sr): Updated.\n-\t(operand_fields): Add new fields.\n-\t(nds32_opcodes): Add new instructions.\n-\t(keyword_aridxi_mx): New keyword.\n-\t* nds32-asm.h (enum): Add NASM_ATTR_DSP_ISAEXT, HW_AEXT_ARIDXI_MX\n-\tand NASM_ATTR_ZOL.\n-\t(ALU2_1, ALU2_2, ALU2_3): New macros.\n-\t* nds32-dis.c (nds32_filter_unknown_insn): Updated.\n-\n-2018-09-17  Kito Cheng  <kito@andestech.com>\n-\n-\t* riscv-opc.c (riscv_opcodes): Adjust the order of ble and bleu.\n-\n-2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/23670\n-\t* i386-dis-evex.h (evex_table): Use EVEX_LEN_0F6E_P_2,\n-\tEVEX_LEN_0F7E_P_1, EVEX_LEN_0F7E_P_2 and EVEX_LEN_0FD6_P_2.\n-\t(EVEX_LEN_0F6E_P_2): New EVEX_LEN_TABLE entry.\n-\t(EVEX_LEN_0F7E_P_1): Likewise.\n-\t(EVEX_LEN_0F7E_P_2): Likewise.\n-\t(EVEX_LEN_0FD6_P_2): Likewise.\n-\t* i386-dis.c (USE_EVEX_LEN_TABLE): New.\n-\t(EVEX_LEN_TABLE): Likewise.\n-\t(EVEX_LEN_0F6E_P_2): New enum.\n-\t(EVEX_LEN_0F7E_P_1): Likewise.\n-\t(EVEX_LEN_0F7E_P_2): Likewise.\n-\t(EVEX_LEN_0FD6_P_2): Likewise.\n-\t(evex_len_table): New.\n-\t(get_valid_dis386): Handle USE_EVEX_LEN_TABLE.\n-\t* i386-opc.tbl: Set EVex=2 on EVEX.128 only vmovd and vmovq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/23665\n-\t* i386-dis.c (vex_len_table): Update VEX_LEN_0F6E_P_2 and\n-\tVEX_LEN_0F7E_P_2 entries.\n-\t* i386-opc.tbl: Set Vex=1 on VEX.128 only vmovd and vmovq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (VZERO_Fixup): Removed.\n-\t(VZERO): Likewise.\n-\t(VEX_LEN_0F10_P_1): Likewise.\n-\t(VEX_LEN_0F10_P_3): Likewise.\n-\t(VEX_LEN_0F11_P_1): Likewise.\n-\t(VEX_LEN_0F11_P_3): Likewise.\n-\t(VEX_LEN_0F2E_P_0): Likewise.\n-\t(VEX_LEN_0F2E_P_2): Likewise.\n-\t(VEX_LEN_0F2F_P_0): Likewise.\n-\t(VEX_LEN_0F2F_P_2): Likewise.\n-\t(VEX_LEN_0F51_P_1): Likewise.\n-\t(VEX_LEN_0F51_P_3): Likewise.\n-\t(VEX_LEN_0F52_P_1): Likewise.\n-\t(VEX_LEN_0F53_P_1): Likewise.\n-\t(VEX_LEN_0F58_P_1): Likewise.\n-\t(VEX_LEN_0F58_P_3): Likewise.\n-\t(VEX_LEN_0F59_P_1): Likewise.\n-\t(VEX_LEN_0F59_P_3): Likewise.\n-\t(VEX_LEN_0F5A_P_1): Likewise.\n-\t(VEX_LEN_0F5A_P_3): Likewise.\n-\t(VEX_LEN_0F5C_P_1): Likewise.\n-\t(VEX_LEN_0F5C_P_3): Likewise.\n-\t(VEX_LEN_0F5D_P_1): Likewise.\n-\t(VEX_LEN_0F5D_P_3): Likewise.\n-\t(VEX_LEN_0F5E_P_1): Likewise.\n-\t(VEX_LEN_0F5E_P_3): Likewise.\n-\t(VEX_LEN_0F5F_P_1): Likewise.\n-\t(VEX_LEN_0F5F_P_3): Likewise.\n-\t(VEX_LEN_0FC2_P_1): Likewise.\n-\t(VEX_LEN_0FC2_P_3): Likewise.\n-\t(VEX_LEN_0F3A0A_P_2): Likewise.\n-\t(VEX_LEN_0F3A0B_P_2): Likewise.\n-\t(VEX_W_0F10_P_0): Likewise.\n-\t(VEX_W_0F10_P_1): Likewise.\n-\t(VEX_W_0F10_P_2): Likewise.\n-\t(VEX_W_0F10_P_3): Likewise.\n-\t(VEX_W_0F11_P_0): Likewise.\n-\t(VEX_W_0F11_P_1): Likewise.\n-\t(VEX_W_0F11_P_2): Likewise.\n-\t(VEX_W_0F11_P_3): Likewise.\n-\t(VEX_W_0F12_P_0_M_0): Likewise.\n-\t(VEX_W_0F12_P_0_M_1): Likewise.\n-\t(VEX_W_0F12_P_1): Likewise.\n-\t(VEX_W_0F12_P_2): Likewise.\n-\t(VEX_W_0F12_P_3): Likewise.\n-\t(VEX_W_0F13_M_0): Likewise.\n-\t(VEX_W_0F14): Likewise.\n-\t(VEX_W_0F15): Likewise.\n-\t(VEX_W_0F16_P_0_M_0): Likewise.\n-\t(VEX_W_0F16_P_0_M_1): Likewise.\n-\t(VEX_W_0F16_P_1): Likewise.\n-\t(VEX_W_0F16_P_2): Likewise.\n-\t(VEX_W_0F17_M_0): Likewise.\n-\t(VEX_W_0F28): Likewise.\n-\t(VEX_W_0F29): Likewise.\n-\t(VEX_W_0F2B_M_0): Likewise.\n-\t(VEX_W_0F2E_P_0): Likewise.\n-\t(VEX_W_0F2E_P_2): Likewise.\n-\t(VEX_W_0F2F_P_0): Likewise.\n-\t(VEX_W_0F2F_P_2): Likewise.\n-\t(VEX_W_0F50_M_0): Likewise.\n-\t(VEX_W_0F51_P_0): Likewise.\n-\t(VEX_W_0F51_P_1): Likewise.\n-\t(VEX_W_0F51_P_2): Likewise.\n-\t(VEX_W_0F51_P_3): Likewise.\n-\t(VEX_W_0F52_P_0): Likewise.\n-\t(VEX_W_0F52_P_1): Likewise.\n-\t(VEX_W_0F53_P_0): Likewise.\n-\t(VEX_W_0F53_P_1): Likewise.\n-\t(VEX_W_0F58_P_0): Likewise.\n-\t(VEX_W_0F58_P_1): Likewise.\n-\t(VEX_W_0F58_P_2): Likewise.\n-\t(VEX_W_0F58_P_3): Likewise.\n-\t(VEX_W_0F59_P_0): Likewise.\n-\t(VEX_W_0F59_P_1): Likewise.\n-\t(VEX_W_0F59_P_2): Likewise.\n-\t(VEX_W_0F59_P_3): Likewise.\n-\t(VEX_W_0F5A_P_0): Likewise.\n-\t(VEX_W_0F5A_P_1): Likewise.\n-\t(VEX_W_0F5A_P_3): Likewise.\n-\t(VEX_W_0F5B_P_0): Likewise.\n-\t(VEX_W_0F5B_P_1): Likewise.\n-\t(VEX_W_0F5B_P_2): Likewise.\n-\t(VEX_W_0F5C_P_0): Likewise.\n-\t(VEX_W_0F5C_P_1): Likewise.\n-\t(VEX_W_0F5C_P_2): Likewise.\n-\t(VEX_W_0F5C_P_3): Likewise.\n-\t(VEX_W_0F5D_P_0): Likewise.\n-\t(VEX_W_0F5D_P_1): Likewise.\n-\t(VEX_W_0F5D_P_2): Likewise.\n-\t(VEX_W_0F5D_P_3): Likewise.\n-\t(VEX_W_0F5E_P_0): Likewise.\n-\t(VEX_W_0F5E_P_1): Likewise.\n-\t(VEX_W_0F5E_P_2): Likewise.\n-\t(VEX_W_0F5E_P_3): Likewise.\n-\t(VEX_W_0F5F_P_0): Likewise.\n-\t(VEX_W_0F5F_P_1): Likewise.\n-\t(VEX_W_0F5F_P_2): Likewise.\n-\t(VEX_W_0F5F_P_3): Likewise.\n-\t(VEX_W_0F60_P_2): Likewise.\n-\t(VEX_W_0F61_P_2): Likewise.\n-\t(VEX_W_0F62_P_2): Likewise.\n-\t(VEX_W_0F63_P_2): Likewise.\n-\t(VEX_W_0F64_P_2): Likewise.\n-\t(VEX_W_0F65_P_2): Likewise.\n-\t(VEX_W_0F66_P_2): Likewise.\n-\t(VEX_W_0F67_P_2): Likewise.\n-\t(VEX_W_0F68_P_2): Likewise.\n-\t(VEX_W_0F69_P_2): Likewise.\n-\t(VEX_W_0F6A_P_2): Likewise.\n-\t(VEX_W_0F6B_P_2): Likewise.\n-\t(VEX_W_0F6C_P_2): Likewise.\n-\t(VEX_W_0F6D_P_2): Likewise.\n-\t(VEX_W_0F6F_P_1): Likewise.\n-\t(VEX_W_0F6F_P_2): Likewise.\n-\t(VEX_W_0F70_P_1): Likewise.\n-\t(VEX_W_0F70_P_2): Likewise.\n-\t(VEX_W_0F70_P_3): Likewise.\n-\t(VEX_W_0F71_R_2_P_2): Likewise.\n-\t(VEX_W_0F71_R_4_P_2): Likewise.\n-\t(VEX_W_0F71_R_6_P_2): Likewise.\n-\t(VEX_W_0F72_R_2_P_2): Likewise.\n-\t(VEX_W_0F72_R_4_P_2): Likewise.\n-\t(VEX_W_0F72_R_6_P_2): Likewise.\n-\t(VEX_W_0F73_R_2_P_2): Likewise.\n-\t(VEX_W_0F73_R_3_P_2): Likewise.\n-\t(VEX_W_0F73_R_6_P_2): Likewise.\n-\t(VEX_W_0F73_R_7_P_2): Likewise.\n-\t(VEX_W_0F74_P_2): Likewise.\n-\t(VEX_W_0F75_P_2): Likewise.\n-\t(VEX_W_0F76_P_2): Likewise.\n-\t(VEX_W_0F77_P_0): Likewise.\n-\t(VEX_W_0F7C_P_2): Likewise.\n-\t(VEX_W_0F7C_P_3): Likewise.\n-\t(VEX_W_0F7D_P_2): Likewise.\n-\t(VEX_W_0F7D_P_3): Likewise.\n-\t(VEX_W_0F7E_P_1): Likewise.\n-\t(VEX_W_0F7F_P_1): Likewise.\n-\t(VEX_W_0F7F_P_2): Likewise.\n-\t(VEX_W_0FAE_R_2_M_0): Likewise.\n-\t(VEX_W_0FAE_R_3_M_0): Likewise.\n-\t(VEX_W_0FC2_P_0): Likewise.\n-\t(VEX_W_0FC2_P_1): Likewise.\n-\t(VEX_W_0FC2_P_2): Likewise.\n-\t(VEX_W_0FC2_P_3): Likewise.\n-\t(VEX_W_0FD0_P_2): Likewise.\n-\t(VEX_W_0FD0_P_3): Likewise.\n-\t(VEX_W_0FD1_P_2): Likewise.\n-\t(VEX_W_0FD2_P_2): Likewise.\n-\t(VEX_W_0FD3_P_2): Likewise.\n-\t(VEX_W_0FD4_P_2): Likewise.\n-\t(VEX_W_0FD5_P_2): Likewise.\n-\t(VEX_W_0FD6_P_2): Likewise.\n-\t(VEX_W_0FD7_P_2_M_1): Likewise.\n-\t(VEX_W_0FD8_P_2): Likewise.\n-\t(VEX_W_0FD9_P_2): Likewise.\n-\t(VEX_W_0FDA_P_2): Likewise.\n-\t(VEX_W_0FDB_P_2): Likewise.\n-\t(VEX_W_0FDC_P_2): Likewise.\n-\t(VEX_W_0FDD_P_2): Likewise.\n-\t(VEX_W_0FDE_P_2): Likewise.\n-\t(VEX_W_0FDF_P_2): Likewise.\n-\t(VEX_W_0FE0_P_2): Likewise.\n-\t(VEX_W_0FE1_P_2): Likewise.\n-\t(VEX_W_0FE2_P_2): Likewise.\n-\t(VEX_W_0FE3_P_2): Likewise.\n-\t(VEX_W_0FE4_P_2): Likewise.\n-\t(VEX_W_0FE5_P_2): Likewise.\n-\t(VEX_W_0FE6_P_1): Likewise.\n-\t(VEX_W_0FE6_P_2): Likewise.\n-\t(VEX_W_0FE6_P_3): Likewise.\n-\t(VEX_W_0FE7_P_2_M_0): Likewise.\n-\t(VEX_W_0FE8_P_2): Likewise.\n-\t(VEX_W_0FE9_P_2): Likewise.\n-\t(VEX_W_0FEA_P_2): Likewise.\n-\t(VEX_W_0FEB_P_2): Likewise.\n-\t(VEX_W_0FEC_P_2): Likewise.\n-\t(VEX_W_0FED_P_2): Likewise.\n-\t(VEX_W_0FEE_P_2): Likewise.\n-\t(VEX_W_0FEF_P_2): Likewise.\n-\t(VEX_W_0FF0_P_3_M_0): Likewise.\n-\t(VEX_W_0FF1_P_2): Likewise.\n-\t(VEX_W_0FF2_P_2): Likewise.\n-\t(VEX_W_0FF3_P_2): Likewise.\n-\t(VEX_W_0FF4_P_2): Likewise.\n-\t(VEX_W_0FF5_P_2): Likewise.\n-\t(VEX_W_0FF6_P_2): Likewise.\n-\t(VEX_W_0FF7_P_2): Likewise.\n-\t(VEX_W_0FF8_P_2): Likewise.\n-\t(VEX_W_0FF9_P_2): Likewise.\n-\t(VEX_W_0FFA_P_2): Likewise.\n-\t(VEX_W_0FFB_P_2): Likewise.\n-\t(VEX_W_0FFC_P_2): Likewise.\n-\t(VEX_W_0FFD_P_2): Likewise.\n-\t(VEX_W_0FFE_P_2): Likewise.\n-\t(VEX_W_0F3800_P_2): Likewise.\n-\t(VEX_W_0F3801_P_2): Likewise.\n-\t(VEX_W_0F3802_P_2): Likewise.\n-\t(VEX_W_0F3803_P_2): Likewise.\n-\t(VEX_W_0F3804_P_2): Likewise.\n-\t(VEX_W_0F3805_P_2): Likewise.\n-\t(VEX_W_0F3806_P_2): Likewise.\n-\t(VEX_W_0F3807_P_2): Likewise.\n-\t(VEX_W_0F3808_P_2): Likewise.\n-\t(VEX_W_0F3809_P_2): Likewise.\n-\t(VEX_W_0F380A_P_2): Likewise.\n-\t(VEX_W_0F380B_P_2): Likewise.\n-\t(VEX_W_0F3817_P_2): Likewise.\n-\t(VEX_W_0F381C_P_2): Likewise.\n-\t(VEX_W_0F381D_P_2): Likewise.\n-\t(VEX_W_0F381E_P_2): Likewise.\n-\t(VEX_W_0F3820_P_2): Likewise.\n-\t(VEX_W_0F3821_P_2): Likewise.\n-\t(VEX_W_0F3822_P_2): Likewise.\n-\t(VEX_W_0F3823_P_2): Likewise.\n-\t(VEX_W_0F3824_P_2): Likewise.\n-\t(VEX_W_0F3825_P_2): Likewise.\n-\t(VEX_W_0F3828_P_2): Likewise.\n-\t(VEX_W_0F3829_P_2): Likewise.\n-\t(VEX_W_0F382A_P_2_M_0): Likewise.\n-\t(VEX_W_0F382B_P_2): Likewise.\n-\t(VEX_W_0F3830_P_2): Likewise.\n-\t(VEX_W_0F3831_P_2): Likewise.\n-\t(VEX_W_0F3832_P_2): Likewise.\n-\t(VEX_W_0F3833_P_2): Likewise.\n-\t(VEX_W_0F3834_P_2): Likewise.\n-\t(VEX_W_0F3835_P_2): Likewise.\n-\t(VEX_W_0F3837_P_2): Likewise.\n-\t(VEX_W_0F3838_P_2): Likewise.\n-\t(VEX_W_0F3839_P_2): Likewise.\n-\t(VEX_W_0F383A_P_2): Likewise.\n-\t(VEX_W_0F383B_P_2): Likewise.\n-\t(VEX_W_0F383C_P_2): Likewise.\n-\t(VEX_W_0F383D_P_2): Likewise.\n-\t(VEX_W_0F383E_P_2): Likewise.\n-\t(VEX_W_0F383F_P_2): Likewise.\n-\t(VEX_W_0F3840_P_2): Likewise.\n-\t(VEX_W_0F3841_P_2): Likewise.\n-\t(VEX_W_0F38DB_P_2): Likewise.\n-\t(VEX_W_0F3A08_P_2): Likewise.\n-\t(VEX_W_0F3A09_P_2): Likewise.\n-\t(VEX_W_0F3A0A_P_2): Likewise.\n-\t(VEX_W_0F3A0B_P_2): Likewise.\n-\t(VEX_W_0F3A0C_P_2): Likewise.\n-\t(VEX_W_0F3A0D_P_2): Likewise.\n-\t(VEX_W_0F3A0E_P_2): Likewise.\n-\t(VEX_W_0F3A0F_P_2): Likewise.\n-\t(VEX_W_0F3A21_P_2): Likewise.\n-\t(VEX_W_0F3A40_P_2): Likewise.\n-\t(VEX_W_0F3A41_P_2): Likewise.\n-\t(VEX_W_0F3A42_P_2): Likewise.\n-\t(VEX_W_0F3A62_P_2): Likewise.\n-\t(VEX_W_0F3A63_P_2): Likewise.\n-\t(VEX_W_0F3ADF_P_2): Likewise.\n-\t(VEX_LEN_0F77_P_0): New.\n-\t(prefix_table): Update PREFIX_VEX_0F10, PREFIX_VEX_0F11,\n-\tPREFIX_VEX_0F12, PREFIX_VEX_0F16, PREFIX_VEX_0F2E,\n-\tPREFIX_VEX_0F2F, PREFIX_VEX_0F51, PREFIX_VEX_0F52,\n-\tPREFIX_VEX_0F53, PREFIX_VEX_0F58, PREFIX_VEX_0F59,\n-\tPREFIX_VEX_0F5A, PREFIX_VEX_0F5B, PREFIX_VEX_0F5C,\n-\tPREFIX_VEX_0F5D, PREFIX_VEX_0F5E, PREFIX_VEX_0F5F,\n-\tPREFIX_VEX_0F60, PREFIX_VEX_0F61, PREFIX_VEX_0F62,\n-\tPREFIX_VEX_0F63, PREFIX_VEX_0F64, PREFIX_VEX_0F65,\n-\tPREFIX_VEX_0F66, PREFIX_VEX_0F67, PREFIX_VEX_0F68,\n-\tPREFIX_VEX_0F69, PREFIX_VEX_0F6A, PREFIX_VEX_0F6B,\n-\tPREFIX_VEX_0F6C, PREFIX_VEX_0F6D, PREFIX_VEX_0F6F,\n-\tPREFIX_VEX_0F70, PREFIX_VEX_0F71_REG_2, PREFIX_VEX_0F71_REG_4,\n-\tPREFIX_VEX_0F71_REG_6, PREFIX_VEX_0F72_REG_4,\n-\tPREFIX_VEX_0F72_REG_6, PREFIX_VEX_0F73_REG_2,\n-\tPREFIX_VEX_0F73_REG_3, PREFIX_VEX_0F73_REG_6,\n-\tPREFIX_VEX_0F73_REG_7, PREFIX_VEX_0F74, PREFIX_VEX_0F75,\n-\tPREFIX_VEX_0F76, PREFIX_VEX_0F77, PREFIX_VEX_0F7C,\n-\tPREFIX_VEX_0F7D, PREFIX_VEX_0F7F, PREFIX_VEX_0FC2,\n-\tPREFIX_VEX_0FD0, PREFIX_VEX_0FD1, PREFIX_VEX_0FD2,\n-\tPREFIX_VEX_0FD3, PREFIX_VEX_0FD4, PREFIX_VEX_0FD5,\n-\tPREFIX_VEX_0FD8, PREFIX_VEX_0FD9, PREFIX_VEX_0FDA,\n-\tPREFIX_VEX_0FDC, PREFIX_VEX_0FDD, PREFIX_VEX_0FDE,\n-\tPREFIX_VEX_0FDF, PREFIX_VEX_0FE0, PREFIX_VEX_0FE1,\n-\tPREFIX_VEX_0FE2, PREFIX_VEX_0FE3, PREFIX_VEX_0FE4,\n-\tPREFIX_VEX_0FE5, PREFIX_VEX_0FE6, PREFIX_VEX_0FE8,\n-\tPREFIX_VEX_0FE9, PREFIX_VEX_0FEA, PREFIX_VEX_0FEB,\n-\tPREFIX_VEX_0FEC, PREFIX_VEX_0FED, PREFIX_VEX_0FEE,\n-\tPREFIX_VEX_0FEF, PREFIX_VEX_0FF1. PREFIX_VEX_0FF2,\n-\tPREFIX_VEX_0FF3, PREFIX_VEX_0FF4, PREFIX_VEX_0FF5,\n-\tPREFIX_VEX_0FF6, PREFIX_VEX_0FF8, PREFIX_VEX_0FF9,\n-\tPREFIX_VEX_0FFA, PREFIX_VEX_0FFB, PREFIX_VEX_0FFC,\n-\tPREFIX_VEX_0FFD, PREFIX_VEX_0FFE, PREFIX_VEX_0F3800,\n-\tPREFIX_VEX_0F3801, PREFIX_VEX_0F3802, PREFIX_VEX_0F3803,\n-\tPREFIX_VEX_0F3804, PREFIX_VEX_0F3805, PREFIX_VEX_0F3806,\n-\tPREFIX_VEX_0F3807, PREFIX_VEX_0F3808, PREFIX_VEX_0F3809,\n-\tPREFIX_VEX_0F380A, PREFIX_VEX_0F380B, PREFIX_VEX_0F3817,\n-\tPREFIX_VEX_0F381C, PREFIX_VEX_0F381D, PREFIX_VEX_0F381E,\n-\tPREFIX_VEX_0F3820, PREFIX_VEX_0F3821, PREFIX_VEX_0F3822,\n-\tPREFIX_VEX_0F3823, PREFIX_VEX_0F3824, PREFIX_VEX_0F3825,\n-\tPREFIX_VEX_0F3828, PREFIX_VEX_0F3829, PREFIX_VEX_0F382B,\n-\tPREFIX_VEX_0F382C, PREFIX_VEX_0F3831, PREFIX_VEX_0F3832,\n-\tPREFIX_VEX_0F3833, PREFIX_VEX_0F3834, PREFIX_VEX_0F3835,\n-\tPREFIX_VEX_0F3837, PREFIX_VEX_0F3838, PREFIX_VEX_0F3839,\n-\tPREFIX_VEX_0F383A, PREFIX_VEX_0F383B, PREFIX_VEX_0F383C,\n-\tPREFIX_VEX_0F383D, PREFIX_VEX_0F383E, PREFIX_VEX_0F383F,\n-\tPREFIX_VEX_0F3840, PREFIX_VEX_0F3A08, PREFIX_VEX_0F3A09,\n-\tPREFIX_VEX_0F3A0A, PREFIX_VEX_0F3A0B, PREFIX_VEX_0F3A0C,\n-\tPREFIX_VEX_0F3A0D, PREFIX_VEX_0F3A0E, PREFIX_VEX_0F3A0F,\n-\tPREFIX_VEX_0F3A40 and PREFIX_VEX_0F3A42 entries.\n-\t(vex_table): Update VEX 0F28 and 0F29 entries.\n-\t(vex_len_table): Update VEX_LEN_0F10_P_1, VEX_LEN_0F10_P_3,\n-\tVEX_LEN_0F11_P_1, VEX_LEN_0F11_P_3, VEX_LEN_0F2E_P_0,\n-\tVEX_LEN_0F2E_P_2, VEX_LEN_0F2F_P_0, VEX_LEN_0F2F_P_2,\n-\tVEX_LEN_0F51_P_1, VEX_LEN_0F51_P_3, VEX_LEN_0F52_P_1,\n-\tVEX_LEN_0F53_P_1, VEX_LEN_0F58_P_1, VEX_LEN_0F58_P_3,\n-\tVEX_LEN_0F59_P_1, VEX_LEN_0F59_P_3, VEX_LEN_0F5A_P_1,\n-\tVEX_LEN_0F5A_P_3, VEX_LEN_0F5C_P_1, VEX_LEN_0F5C_P_3,\n-\tVEX_LEN_0F5D_P_1, VEX_LEN_0F5D_P_3, VEX_LEN_0F5E_P_1,\n-\tVEX_LEN_0F5E_P_3, VEX_LEN_0F5F_P_1, VEX_LEN_0F5F_P_3,\n-\tVEX_LEN_0FC2_P_1, VEX_LEN_0FC2_P_3, VEX_LEN_0F3A0A_P_2 and\n-\tVEX_LEN_0F3A0B_P_2 entries.\n-\t(vex_w_table): Remove VEX_W_0F10_P_0, VEX_W_0F10_P_1,\n-\tVEX_W_0F10_P_2, VEX_W_0F10_P_3, VEX_W_0F11_P_0, VEX_W_0F11_P_1,\n-\tVEX_W_0F11_P_2, VEX_W_0F11_P_3, VEX_W_0F12_P_0_M_0,\n-\tVEX_W_0F12_P_0_M_1, VEX_W_0F12_P_1, VEX_W_0F12_P_2,\n-\tVEX_W_0F12_P_3, VEX_W_0F13_M_0, VEX_W_0F14, VEX_W_0F15,\n-\tVEX_W_0F16_P_0_M_0, VEX_W_0F16_P_0_M_1, VEX_W_0F16_P_1,\n-\tVEX_W_0F16_P_2, VEX_W_0F17_M_0, VEX_W_0F28, VEX_W_0F29,\n-\tVEX_W_0F2B_M_0, VEX_W_0F2E_P_0, VEX_W_0F2E_P_2, VEX_W_0F2F_P_0,\n-\tVEX_W_0F2F_P_2, VEX_W_0F50_M_0, VEX_W_0F51_P_0, VEX_W_0F51_P_1,\n-\tVEX_W_0F51_P_2, VEX_W_0F51_P_3, VEX_W_0F52_P_0, VEX_W_0F52_P_1,\n-\tVEX_W_0F53_P_0, VEX_W_0F53_P_1, VEX_W_0F58_P_0, VEX_W_0F58_P_1,\n-\tVEX_W_0F58_P_2, VEX_W_0F58_P_3, VEX_W_0F59_P_0, VEX_W_0F59_P_1,\n-\tVEX_W_0F59_P_2, VEX_W_0F59_P_3, VEX_W_0F5A_P_0, VEX_W_0F5A_P_1,\n-\tVEX_W_0F5A_P_3, VEX_W_0F5B_P_0, VEX_W_0F5B_P_1, VEX_W_0F5B_P_2,\n-\tVEX_W_0F5C_P_0, VEX_W_0F5C_P_1, VEX_W_0F5C_P_2, VEX_W_0F5C_P_3,\n-\tVEX_W_0F5D_P_0, VEX_W_0F5D_P_1, VEX_W_0F5D_P_2, VEX_W_0F5D_P_3,\n-\tVEX_W_0F5E_P_0, VEX_W_0F5E_P_1, VEX_W_0F5E_P_2, VEX_W_0F5E_P_3,\n-\tVEX_W_0F5F_P_0, VEX_W_0F5F_P_1, VEX_W_0F5F_P_2, VEX_W_0F5F_P_3,\n-\tVEX_W_0F60_P_2, VEX_W_0F61_P_2, VEX_W_0F62_P_2, VEX_W_0F63_P_2,\n-\tVEX_W_0F64_P_2, VEX_W_0F65_P_2, VEX_W_0F66_P_2, VEX_W_0F67_P_2,\n-\tVEX_W_0F68_P_2, VEX_W_0F69_P_2, VEX_W_0F6A_P_2, VEX_W_0F6B_P_2,\n-\tVEX_W_0F6C_P_2, VEX_W_0F6D_P_2, VEX_W_0F6F_P_1, VEX_W_0F6F_P_2,\n-\tVEX_W_0F70_P_1, VEX_W_0F70_P_2, VEX_W_0F70_P_3,\n-\tVEX_W_0F71_R_2_P_2, VEX_W_0F71_R_4_P_2, VEX_W_0F71_R_6_P_2,\n-\tVEX_W_0F72_R_2_P_2, VEX_W_0F72_R_4_P_2, VEX_W_0F72_R_6_P_2,\n-\tVEX_W_0F73_R_2_P_2, VEX_W_0F73_R_3_P_2, VEX_W_0F73_R_6_P_2,\n-\tVEX_W_0F73_R_7_P_2, VEX_W_0F74_P_2, VEX_W_0F75_P_2,\n-\tVEX_W_0F76_P_2, VEX_W_0F77_P_0, VEX_W_0F7C_P_2, VEX_W_0F7C_P_3,\n-\tVEX_W_0F7D_P_2, VEX_W_0F7D_P_3, VEX_W_0F7E_P_1, VEX_W_0F7F_P_1,\n-\tVEX_W_0F7F_P_2, VEX_W_0FAE_R_2_M_0, VEX_W_0FAE_R_3_M_0,\n-\tVEX_W_0FC2_P_0, VEX_W_0FC2_P_1, VEX_W_0FC2_P_2, VEX_W_0FC2_P_3,\n-\tVEX_W_0FD0_P_2, VEX_W_0FD0_P_3, VEX_W_0FD1_P_2, VEX_W_0FD2_P_2,\n-\tVEX_W_0FD3_P_2, VEX_W_0FD4_P_2, VEX_W_0FD5_P_2, VEX_W_0FD6_P_2,\n-\tVEX_W_0FD7_P_2_M_1, VEX_W_0FD8_P_2, VEX_W_0FD9_P_2,\n-\tVEX_W_0FDA_P_2, VEX_W_0FDB_P_2, VEX_W_0FDC_P_2, VEX_W_0FDD_P_2,\n-\tVEX_W_0FDE_P_2, VEX_W_0FDF_P_2, VEX_W_0FE0_P_2, VEX_W_0FE1_P_2,\n-\tVEX_W_0FE2_P_2, VEX_W_0FE3_P_2, VEX_W_0FE4_P_2, VEX_W_0FE5_P_2,\n-\tVEX_W_0FE6_P_1, VEX_W_0FE6_P_2, VEX_W_0FE6_P_3,\n-\tVEX_W_0FE7_P_2_M_0, VEX_W_0FE8_P_2, VEX_W_0FE9_P_2,\n-\tVEX_W_0FEA_P_2, VEX_W_0FEB_P_2, VEX_W_0FEC_P_2, VEX_W_0FED_P_2,\n-\tVEX_W_0FEE_P_2, VEX_W_0FEF_P_2, VEX_W_0FF0_P_3_M_0,\n-\tVEX_W_0FF1_P_2, VEX_W_0FF2_P_2, VEX_W_0FF3_P_2, VEX_W_0FF4_P_2,\n-\tVEX_W_0FF5_P_2, VEX_W_0FF6_P_2, VEX_W_0FF7_P_2, VEX_W_0FF8_P_2,\n-\tVEX_W_0FF9_P_2, VEX_W_0FFA_P_2, VEX_W_0FFB_P_2, VEX_W_0FFC_P_2,\n-\tVEX_W_0FFD_P_2, VEX_W_0FFE_P_2, VEX_W_0F3800_P_2,\n-\tVEX_W_0F3801_P_2, VEX_W_0F3802_P_2, VEX_W_0F3803_P_2,\n-\tVEX_W_0F3804_P_2, VEX_W_0F3805_P_2, VEX_W_0F3806_P_2,\n-\tVEX_W_0F3807_P_2, VEX_W_0F3808_P_2, VEX_W_0F3809_P_2,\n-\tVEX_W_0F380A_P_2, VEX_W_0F380B_P_2, VEX_W_0F3817_P_2,\n-\tVEX_W_0F381C_P_2, VEX_W_0F381D_P_2, VEX_W_0F381E_P_2,\n-\tVEX_W_0F3820_P_2, VEX_W_0F3821_P_2, VEX_W_0F3822_P_2,\n-\tVEX_W_0F3823_P_2, VEX_W_0F3824_P_2, VEX_W_0F3825_P_2,\n-\tVEX_W_0F3828_P_2, VEX_W_0F3829_P_2, VEX_W_0F382A_P_2_M_0,\n-\tVEX_W_0F382B_P_2, VEX_W_0F3830_P_2, VEX_W_0F3831_P_2,\n-\tVEX_W_0F3832_P_2, VEX_W_0F3833_P_2, VEX_W_0F3834_P_2,\n-\tVEX_W_0F3835_P_2, VEX_W_0F3837_P_2, VEX_W_0F3838_P_2,\n-\tVEX_W_0F3839_P_2, VEX_W_0F383A_P_2, VEX_W_0F383B_P_2,\n-\tVEX_W_0F383C_P_2, VEX_W_0F383D_P_2, VEX_W_0F383E_P_2,\n-\tVEX_W_0F383F_P_2, VEX_W_0F3840_P_2, VEX_W_0F3841_P_2,\n-\tVEX_W_0F38DB_P_2, VEX_W_0F3A08_P_2, VEX_W_0F3A09_P_2,\n-\tVEX_W_0F3A0A_P_2, VEX_W_0F3A0B_P_2, VEX_W_0F3A0C_P_2,\n-\tVEX_W_0F3A0D_P_2, VEX_W_0F3A0E_P_2, VEX_W_0F3A0F_P_2,\n-\tVEX_W_0F3A21_P_2, VEX_W_0F3A40_P_2, VEX_W_0F3A41_P_2,\n-\tVEX_W_0F3A42_P_2, VEX_W_0F3A62_P_2, VEX_W_0F3A63_P_2 and\n-\tVEX_W_0F3ADF_P_2 entries.\n-\t(mod_table): Update MOD_VEX_0F2B, MOD_VEX_0F50,\n-\tMOD_VEX_0FD7_PREFIX_2, MOD_VEX_0FE7_PREFIX_2,\n-\tMOD_VEX_0FF0_PREFIX_3 and MOD_VEX_0F382A_PREFIX_2 entries.\n-\n-2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl (VexWIG): New.\n-\tReplace VexW=3 with VexWIG.\n-\n-2018-09-15  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Set VexW=3 on AVX vrsqrtss.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-15  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/23665\n-\t* i386-dis.c (vex_len_table): Update VEX_LEN_0F7E_P_1 and\n-\tVEX_LEN_0FD6_P_2 entries.\n-\t* i386-opc.tbl: Set Vex=1 on VEX.128 only vmovq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/23642\n-\t* i386-opc.h (VEXWIG): New.\n-\t* i386-opc.tbl: Set VexW=3 on VEX/EVEX WIG instructions.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23655\n-\t* i386-dis-evex.h: Replace EXxEVexR with EXxEVexR64 for\n-\tvcvtsi2sd%LQ and vcvtusi2sd%LQ.\n-\t* i386-dis.c (EXxEVexR64): New.\n-\t(evex_rounding_64_mode): Likewise.\n-\t(OP_Rounding): Handle evex_rounding_64_mode.\n-\n-2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23655\n-\t* i386-dis-evex.h (evex_table): Replace Eq with Edqa for\n-\tvcvtsi2ss%LQ, vcvtsi2sd%LQ, vcvtusi2ss%LQ and vcvtusi2sd%LQ.\n-\t* i386-dis.c (Edqa): New.\n-\t(dqa_mode): Likewise.\n-\t(intel_operand_size): Handle dqa_mode as m_mode.\n-\t(OP_E_register): Handle dqa_mode as dq_mode.\n-\t(OP_E_memory): Set shift for dqa_mode based on address_mode.\n-\n-2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (OP_E_memory): Reformat.\n-\n-2018-09-14  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (crc32): Fold byte and word forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Add VexW=1 to VEX.W0 VEX movd, cvtsi2ss, cvtsi2sd,\n-\tpextrd, pinsrd, vcvtsi2sd, vcvtsi2ss, vmovd, vpextrd and vpinsrd.\n-\tAdd VexW=2 to VEX.W1 VEX movq, pextrq, pinsrq, vmovq, vpextrq and\n-\tvpinsrq.  Remove VexW=1 from WIG VEX movq and vmovq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (mov, movq, movdir64b): Drop IgnoreSize where\n-\tmeaningless.\n-\t(invept, invvpid, vcvtph2ps, vcvtps2ph, bndmov, xrstors,\n-\txrstors64, xsaves, xsaves64, xsavec, xsavec64, rdpid, incsspq,\n-\trdsspq, saveprevssp, setssbsy, endbr32, endbr64): Drop IgnoreSize.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512_4FMAPS and\n-\tAVX512_4VNNIW insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512DQ insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512BW insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512VL insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512ER insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX512F insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SHA insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from XOP and SSE4a insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX2 insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AVX insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from GNFI insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from PCLMUL/VPCLMUL insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from AES/VAES insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSE4.2 insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSE4.1 insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSSE3 insns where\n-\tmeaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSE3 insns where meaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSE2 insns where meaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop IgnoreSize from SSE insns where meaningless.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (crc32, incsspq, rdsspq): Drop Rex64.\n-\t(vpbroadcastw, rdpid): Drop NoRex64.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vmovsd, vmovss): Fold register form load and\n-\tstore templates, adding D.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (bndmov, kmovb, kmovd, kmovq, kmovw, movapd,\n-\tmovaps, movd, movdqa, movdqu, movhpd, movhps, movlpd, movlps,\n-\tmovq, movsd, movss, movupd, movups, vmovapd, vmovaps, vmovd,\n-\tvmovdqa, vmovdqa32, vmovdqa64, vmovdqu, vmovdqu16, vmovdqu32,\n-\tvmovdqu64, vmovdqu8, vmovq, vmovsd, vmovss, vmovupd, vmovups):\n-\tFold load and store templates where possible, adding D. Drop\n-\tIgnoreSize where it was pointlessly present. Drop redundant\n-\t*word.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-09-13  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (Mv_bnd, v_bndmk_mode): New.\n-\t(mod_table): Use Mv_bnd for bndldx, bndstx, and bndmk.\n-\t(intel_operand_size): Handle v_bndmk_mode.\n-\t(OP_E_memory): Likewise. Produce (bad) when also riprel.\n-\n-2018-09-08  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* disassemble.c (ARCH_s12z): Define if ARCH_all.\n-\n-2018-08-31  Kito Cheng  <kito@andestech.com>\n-\n-\t* riscv-opc.c (riscv_opcodes): Fix incorrect subset info for\n-\tcompressed floating point instructions.\n-\n-2018-08-30  Kito Cheng  <kito@andestech.com>\n-\n-\t* riscv-dis.c (riscv_disassemble_insn): Check XLEN by\n-\triscv_opcode.xlen_requirement.\n-\t* riscv-opc.c (riscv_opcodes): Update for struct change.\n-\n-2018-08-29  Martin Aberg  <maberg@gaisler.com>\n-\n-\t* sparc-opc.c (sparc_opcodes): Add Leon specific partial write\n-        psr (PWRPSR) instruction.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add gs264e descriptors.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add gs464e descriptors.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add gs464 descriptors, Keep\n-\tloongson3a as an alias of gs464 for compatibility.\n-\t* mips-opc.c (mips_opcodes): Change Comments.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips-dis.c (parse_mips_ase_option): Handle -M loongson-ext\n-\toption.\n-\t(print_mips_disassembler_options): Document -M loongson-ext.\n-\t* mips-opc.c (LEXT2): New macro.\n-\t(mips_opcodes): Add cto, ctz, dcto, dctz instructions.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t * mips-dis.c (mips_arch_choices): Add EXT to loongson3a\n-\t descriptors.\n-\t (parse_mips_ase_option): Handle -M loongson-ext option.\n-\t (print_mips_disassembler_options): Document -M loongson-ext.\n-\t * mips-opc.c (IL3A): Delete.\n-\t * mips-opc.c (LEXT): New macro.\n-\t (mips_opcodes): Replace IL2F|IL3A marking with LEXT for EXT\n-\t instructions.\n-\n-2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add CAM to loongson3a\n-\tdescriptors.\n-\t(parse_mips_ase_option): Handle -M loongson-cam option.\n-\t(print_mips_disassembler_options): Document -M loongson-cam.\n-\t* mips-opc.c (LCAM): New macro.\n-\t(mips_opcodes): Replace IL2F|IL3A marking with LCAM for CAM\n-\tinstructions.\n-\n-2018-08-21  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (operand_value_powerpc): Init \"invalid\".\n-\t(skip_optional_operands): Count optional operands, and update\n-\tppc_optional_operand_value call.\n-\t* ppc-opc.c (extract_dxdn): Remove ATTRIBUTE_UNUSED from used arg.\n-\t(extract_vlensi): Likewise.\n-\t(extract_fxm): Return default value for missing optional operand.\n-\t(extract_ls, extract_raq, extract_tbr): Likewise.\n-\t(insert_sxl, extract_sxl): New functions.\n-\t(insert_esync, extract_esync): Remove Power9 handling and simplify.\n-\t(powerpc_operands <FXM4, TBR>): Delete PPC_OPERAND_OPTIONAL_VALUE\n-\tflag and extra entry.\n-\t(powerpc_operands <SXL>): Likewise, and use insert_sxl and\n-\textract_sxl.\n-\n-2018-08-20  Alan Modra  <amodra@gmail.com>\n-\n-\t* sh-opc.h (MASK): Simplify.\n-\n-2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* s12z-dis.c (bm_decode): Deal with cases where the mode is\n-\tBM_RESERVED0 or BM_RESERVED1\n-\t(bm_rel_decode, bm_n_bytes): Ditto.\n-\n-2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* s12z.h: Delete.\n-\n-2018-08-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (OP_E_memory): In 64-bit mode, display eiz for\n-\taddress with the addr32 prefix and without base nor index\n-\tregisters.\n-\n-2018-08-11  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Add CpuCMOV and CpuFXSR to\n-\tCPU_I686_FLAGS.  Add CPU_CMOV_FLAGS, CPU_FXSR_FLAGS,\n-\tCPU_ANY_CMOV_FLAGS and CPU_ANY_FXSR_FLAGS.\n-\t(cpu_flags): Add CpuCMOV and CpuFXSR.\n-\t* i386-opc.tbl: Replace Cpu686 with CpuFXSR on fxsave, fxsave64,\n-\tfxrstor and fxrstor64.  Replace Cpu686 with CpuCMOV on cmovCC.\n-\t* i386-init.h: Regenerated.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n-\n-\t* arc-regs.h: Update auxiliary registers.\n-\n-2018-08-06  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h (RegRip, RegEip, RegEiz, RegRiz): Drop defines.\n-\t(RegIP, RegIZ): Define.\n-\t* i386-reg.tbl: Adjust comments.\n-\t(rip): Use Qword instead of BaseIndex. Use RegIP.\n-\t(eip): Use Dword instead of BaseIndex. Use RegIP.\n-\t(riz): Add Qword. Use RegIZ.\n-\t(eiz): Add Dword. Use RegIZ.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-08-03  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (pmovsxbw, pmovsxdq, pmovsxwd, pmovzxbw,\n-\tpmovzxdq, pmovzxwd, vpmovsxbw, vpmovsxdq, vpmovsxwd, vpmovzxbw,\n-\tvpmovzxdq, vpmovzxwd): Remove NoRex64.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-08-03  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_types): Remove Mem field.\n-\t* i386-opc.h (union i386_operand_type): Remove mem field.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2018-08-01  Alan Modra  <amodra@gmail.com>\n-\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-07-31  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/sv.po: Updated Swedish translation.\n-\n-2018-07-31  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (kandnd, kandnq, kxord, kxorq): Add Optimize.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2018-07-31  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h (ZEROING_MASKING) Rename to ...\n-\t(DYNAMIC_MASKING): ... this. Adjust comment.\n-\t* i386-opc.tbl (MaskingMorZ): Define.\n-\t(vcompresspd, vcompressps, vcvtps2ph, vextractf32x4,\n-\tvextractf32x8, vextractf64x2, vextractf64x4, vextracti32x4,\n-\tvextracti32x8, vextracti64x2, vextracti64x4, vmovapd, vmovaps,\n-\tvmovdqa32, vmovdqa64, vmovdqu8, vmovdqu16, vmovdqu32, vmovdqu64,\n-\tvmovupd, vmovups, vpcompressb, vpcompressw, vpcompressd,\n-\tvpcompressq, vpmovdb, vpmovdw, vpmovqb, vpmovqd, vpmovqw,\n-\tvpmovsdb, vpmovsdw, vpmovsqb, vpmovsqd, vpmovsqw, vpmovswb,\n-\tvpmovusdb, vpmovusdw, vpmovusqb, vpmovusqd, vpmovusqw,\n-\tvpmovuswb, vpmovwb): Fold AVX512 register and memory forms.\n-\n-2018-07-31  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Use element rather than vector size for AVX512*\n-\tscatter/gather insns.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-31  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Drop CpuVREX uses.\n-\t(cpu_flags): Drop CpuVREX.\n-\t* i386-opc.h (CpuVREX): Delete.\n-\t(union i386_cpu_flags): Remove cpuvrex.\n-\t* i386-init.h, i386-tbl.h: Re-generate.\n-\n-2018-07-30  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-dis.c (riscv_disassemble_insn): Set insn_type and data_size\n-\tfields.\n-\t* riscv-opc.c (riscv_opcodes): Use new INSN_* flags to annotate insns.\n-\n-2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n-\n-\t* Makefile.am (TARGET_LIBOPCODES_CFILES): Add csky-dis.c.\n-\t* Makefile.in: Regenerated.\n-\t* configure.ac: Add C-SKY.\n-\t* configure: Regenerated.\n-\t* csky-dis.c: New file.\n-\t* csky-opc.h: New file.\n-\t* disassemble.c (ARCH_csky): Define.\n-\t(disassembler, disassemble_init_for_target): Add case for ARCH_csky.\n-\t* disassemble.h (print_insn_csky, csky_get_disassembler): Declare.\n-\n-2018-07-27  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-opc.c (insert_sprbat): Correct function parameter and\n-\treturn type.\n-\t(extract_sprbat): Likewise, variable too.\n-\n-2018-07-26  Alex Chadwick  <Alex.Chadwick@cl.cam.ac.uk>\n-\t    Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (ppc_opts): Add -mgekko and -mbroadway.\n-\t(powerpc_init_dialect): Handle bfd_mach_ppc_750.\n-\t* ppc-opc.c (insert_sprbat, extract_sprbat): New functions to\n-\tsupport disjointed BAT.\n-\t(powerpc_operands): Allow extra bit in SPRBAT_MASK.  Add SPRGQR.\n-\t(XSPRGQR_MASK, GEKKO, BROADWAY): Define.\n-\t(powerpc_opcodes): Add 750cl extended mnemonics for spr access.\n-\n-2018-07-25  H.J. Lu  <hongjiu.lu@intel.com>\n-\t    Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-gen.c (adjust_broadcast_modifier): New function.\n-\t(process_i386_opcode_modifier): Add an argument for operands.\n-\tAdjust the Broadcast value based on operands.\n-\t(output_i386_opcode): Pass operand_types to\n-\tprocess_i386_opcode_modifier.\n-\t(process_i386_opcodes): Pass NULL as operands to\n-\tprocess_i386_opcode_modifier.\n-\t* i386-opc.h (BYTE_BROADCAST): New.\n-\t(WORD_BROADCAST): Likewise.\n-\t(DWORD_BROADCAST): Likewise.\n-\t(QWORD_BROADCAST): Likewise.\n-\t(i386_opcode_modifier): Expand broadcast to 3 bits.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-07-24  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23430\n-\t* or1k-desc.h: Regenerate.\n-\n-2018-07-24  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis-evex.h (evex_table): Add %LQ to vcvtsi2ss, vcvtsi2sd,\n-\tvcvtusi2ss, and vcvtusi2sd.\n-\t* i386-opc.tbl (vcvtsi2sd, vcvtusi2sd, vcvtsi2ss, vcvtusi2ss):\n-\tConvert AVX512F variants to distinct CpuNo64 and Cpu64 forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-23  Claudiu Zissulescu <claziss@synopsys.com>\n-\n-\t* arc-opc.c (extract_w6): Fix extending the sign.\n-\n-2018-07-23  Claudiu Zissulescu <claziss@synopsys.com>\n-\n-\t* arc-tbl.h (vewt): Allow it for ARC EM family.\n-\n-2018-07-23  Alan Modra  <amodra@gmail.com>\n-\n-\tPR 23419\n-\t* ppc-opc.c (powerpc_opcodes): Add mtupmc/mfupmc/mfpmc extended\n-\topcode variants for mtspr/mfspr encodings.\n-\n-2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n-\t    Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add MMI to loongson2f and\n-\tloongson3a descriptors.\n-\t(parse_mips_ase_option): Handle -M loongson-mmi option.\n-\t(print_mips_disassembler_options): Document -M loongson-mmi.\n-\t* mips-opc.c (LMMI): New macro.\n-\t(mips_opcodes): Replace IL2F|IL3A marking with LMMI for MMI\n-\tinstructions.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vcvtpd2dq, vcvtpd2ps, vcvttpd2dq, vcvtpd2udq,\n-\tvcvtqq2ps, vcvtuqq2ps): Fold 128- and 256-bit templates. Drop\n-\tIgnoreSize and [XYZ]MMword where applicable.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vfpclasspd, vfpclassps): Fold.\n-\t(vfpclasspdz, vfpclasspsz): Drop IgnoreSize and ZmmWord.\n-\t(vfpclasspdx, vfpclasspsx): Drop IgnoreSize and XmmWord.\n-\t(vfpclasspdy, vfpclasspsy): Drop IgnoreSize and YmmWord.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Fold AVX512IFMA, AVX512VBMI, AVX512_VPOPCNTDQ,\n-\tAVX512_VBMI2, AVX512_VNNI, AVX512_BITALG, GFNI, VAES, and\n-\tVPCLMULQDQ templates into their respective AVX512VL counterparts\n-\twhere possible, using Disp8ShiftVL and CheckRegSize instead of\n-\tEvex= plus Disp8MemShift= (plus often IgnoreSize) as appropriate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Fold AVX512DQ templates into their respective\n-\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n-\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n-\tIgnoreSize) as appropriate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Fold AVX512BW templates into their respective\n-\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n-\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n-\tIgnoreSize) as appropriate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Fold AVX512CD templates into their respective\n-\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n-\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n-\tIgnoreSize) as appropriate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h (DISP8_SHIFT_VL): New.\n-\t* i386-opc.tbl (Disp8ShiftVL):  Define.\n-\t(various): Fold AVX512VL templates into their respective\n-\tAVX512F counterparts where possible, using Disp8ShiftVL and\n-\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n-\tIgnoreSize) as appropriate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-19  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* Makefile.am: Change dependencies and rule for\n-\t$(srcdir)/i386-init.h.\n-\t* Makefile.in: Re-generate.\n-\t* i386-gen.c (process_i386_opcodes): New local variable\n-\t\"marker\". Drop opening of input file. Recognize marker and line\n-\tnumber directives.\n-\t* i386-opc.tbl (OPCODE_I386_H): Define.\n-\t(i386-opc.h): Include it.\n-\t(None): Undefine.\n-\n-2018-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/23418\n-\t* i386-opc.h (Byte): Update comments.\n-\t(Word): Likewise.\n-\t(Dword): Likewise.\n-\t(Fword): Likewise.\n-\t(Qword): Likewise.\n-\t(Tbyte): Likewise.\n-\t(Xmmword): Likewise.\n-\t(Ymmword): Likewise.\n-\t(Zmmword): Likewise.\n-\t* i386-opc.tbl: Split vcvtps2qq, vcvtps2uqq, vcvttps2qq and\n-\tvcvttps2uqq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-07-12  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add entry for\n-\tssbb and pssbb and update dsb flags to F_HAS_ALIAS.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-07-12  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23192\n-\t* aarch64-tbl.h (sqdmlal, sqdmlal2, smlsl, smlsl2, sqdmlsl, sqdmlsl2,\n-\tmul, smull, smull2, sqdmull, sqdmull2, sqdmulh, sqrdmulh, mla, umlal,\n-\tumlal2, mls, umlsl, umlsl2, umull, umull2, sqdmlal, sqdmlsl, sqdmull,\n-\tsqdmulh, sqrdmulh): Use Em16.\n-\n-2018-07-11  Sudakshina Das  <sudi.das@arm.com>\n-\n-\t* arm-dis.c (arm_opcodes): Add ssbb and pssbb and move\n-\tcsdb together with them.\n-\t(thumb32_opcodes): Likewise.\n-\n-2018-07-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (monitor, monitorx): Add 64-bit template\n-\trequiring 32-bit registers as operands 2 and 3. Improve\n-\tcomments.\n-\t(mwait, mwaitx): Fold templates. Improve comments.\n-\tOPERAND_TYPE_INOUTPORTREG.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Remove\n-\tOPERAND_TYPE_REG16_INOUTPORTREG entry and one instance of\n-\tOPERAND_TYPE_INOUTPORTREG.\n-\t* i386-init.h: Re-generate.\n-\n-2018-07-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (wrssd, wrussd): Add Dword.\n-\t(wrssq, wrussq): Add Qword.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-07-11  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h: Rename OTMax to OTNum.\n-\t(OTNumOfUints): Adjust calculation.\n-\t(OTUnused): Directly alias to OTNum.\n-\n-2018-07-09  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* s12z-dis.c (lea_reg_xys_opr): Rename `reg' local variable to\n-\t`reg_xys'.\n-\t(lea_reg_xys): Likewise.\n-\t(print_insn_loop_primitive): Rename `reg' local variable to\n-\t`reg_dxy'.\n-\n-2018-07-06  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23242\n-\t* aarch64-tbl.h (ldarh): Fix disassembly mask.\n-\n-2018-07-06  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23369\n-\t* aarch64-opc.c (aarch64_sys_regs): Make read/write csselr_el1,\n-\tvsesr_el2, osdtrrx_el1, osdtrtx_el1, pmsidr_el1.\n-\n-2018-07-02  Maciej W. Rozycki  <macro@mips.com>\n-\n-\tPR tdep/8282\n-\t* mips-dis.c (mips_option_arg_t): New enumeration.\n-\t(mips_options): New variable.\n-\t(disassembler_options_mips): New function.\n-\t(print_mips_disassembler_options): Reimplement in terms of\n-\t`disassembler_options_mips'.\n-\t* arm-dis.c (disassembler_options_arm): Adapt to using the\n-\t`disasm_options_and_args_t' structure.\n-\t* ppc-dis.c (disassembler_options_powerpc): Likewise.\n-\t* s390-dis.c (disassembler_options_s390): Likewise.\n-\n-2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* testsuite/ld-arm/tls-descrelax-be8.d: Add architecture version in\n-\texpected result.\n-\t* testsuite/ld-arm/tls-descrelax-v7.d: Likewise.\n-\t* testsuite/ld-arm/tls-longplt-lib.d: Likewise.\n-\t* testsuite/ld-arm/tls-longplt.d: Likewise.\n-\n-2018-06-29  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23192\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Likewise.\n-\t* aarch64-opc-2.c: Likewise.\n-\t* aarch64-dis.c (aarch64_ext_reglane): Add AARCH64_OPND_Em16 constraint.\n-\t* aarch64-opc.c (operand_general_constraint_met_p,\n-\taarch64_print_operand): Likewise.\n-\t* aarch64-tbl.h (aarch64_opcode_table): Change Em to Em16 for smlal,\n-\tsmlal2, fmla, fmls, fmul, fmulx, sqrdmlah, sqrdlsh, fmlal, fmlsl,\n-\tfmlal2, fmlsl2.\n-\t(AARCH64_OPERANDS): Add Em2.\n-\n-2018-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\t* po/de.po: Updated German translation.\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\n-2018-06-26  Nick Clifton  <nickc@redhat.com>\n-\n-\t* nfp-dis.c: Fix spelling mistake.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\t* po/opcodes.pot: Regenerate.\n-\n-2018-06-24  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.31 branch created.\n-\n-2018-06-19  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Fix alias flag for negs\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Likewise.\n-\n-2018-06-21  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* mips-dis.c (print_mips_disassembler_options): Fix a typo in\n-\t`-M ginv' option description.\n-\n-2018-06-20  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n-\n-\tPR gas/23305\n-\t* riscv-opc.c (riscv_opcodes): Use new format specifier 'B' for\n-\tla and lla.\n-\n-2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n-\n-\t* Makefile.am (AUTOMAKE_OPTIONS): Remove 1.11.\n-\t* configure.ac: Remove AC_PREREQ.\n-\t* Makefile.in: Re-generate.\n-\t* aclocal.m4: Re-generate.\n-\t* configure: Re-generate.\n-\n-2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add GINV to mips32r6 and\n-\tmips64r6 descriptors.\n-\t(parse_mips_ase_option): Handle -Mginv option.\n-\t(print_mips_disassembler_options): Document -Mginv.\n-\t* mips-opc.c (decode_mips_operand) <+\\>: New operand format.\n-\t(GINV): New macro.\n-\t(mips_opcodes): Define ginvi and ginvt.\n-\n-2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n-\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n-\n-\t* mips-dis.c (mips_arch_choices): Add CRC and CRC64 ASEs.\n-\t* mips-opc.c (CRC, CRC64): New macros.\n-\t(mips_builtin_opcodes): Define crc32b, crc32h, crc32w,\n-\tcrc32cb, crc32ch and crc32cw for CRC.  Define crc32d and\n-\tcrc32cd for CRC64.\n-\n-2018-06-08  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n-\n-\tPR 20319\n-\t* aarch64-tbl.h: Introduce QL_INT2FP_FMOV and QL_FP2INT_FMOV.\n-\t(aarch64_opcode_table) : Use QL_INT2FP_FMOV and QL_FP2INT_FMOV.\n-\n-2018-06-06  Alan Modra  <amodra@gmail.com>\n-\n-\t* xtensa-dis.c (print_insn_xtensa): Init fmt and valid_insn after\n-\tsetjmp.  Move init for some other vars later too.\n-\n-2018-06-04  Max Filippov  <jcmvbkbc@gmail.com>\n-\n-\t* xtensa-dis.c (bfd.h, elf/xtensa.h): New includes.\n-\t(dis_private): Add new fields for property section tracking.\n-\t(xtensa_coalesce_insn_tables, xtensa_find_table_entry)\n-\t(xtensa_instruction_fits): New functions.\n-\t(fetch_data): Bump minimal fetch size to 4.\n-\t(print_insn_xtensa): Make struct dis_private static.\n-\tLoad and prepare property table on section change.\n-\tDon't disassemble literals. Don't disassemble instructions that\n-\tcross property table boundaries.\n-\n-2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure: Regenerated.\n-\n-2018-06-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (mov, movq): Fold to/from SReg* forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-06-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (sldt, str): Add NoRex64.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-06-01  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (invpcid): Add Oword.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-06-01  Alan Modra  <amodra@gmail.com>\n-\n-\t* sysdep.h (_bfd_error_handler): Don't declare.\n-\t* msp430-decode.opc: Include bfd.h.  Don't include ansidecl.h here.\n-\t* rl78-decode.opc: Likewise.\n-\t* msp430-decode.c: Regenerate.\n-\t* rl78-decode.c: Regenerate.\n-\n-2018-05-30  Amit Pawar <Amit.Pawar@amd.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Add CPU_ZNVER2_FLAGS.\n-\t* i386-init.h : Regenerated.\n-\n-2018-05-25  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.in: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-05-21  Peter Bergner  <bergner@vnet.ibm.com.com>\n-\n-\t* ppc-opc.c (insert_bat, extract_bat, insert_bba, extract_bba,\n-\tinsert_rbs, extract_rbs, insert_xb6s, extract_xb6s): Delete functions.\n-\t(insert_bab, extract_bab, insert_btab, extract_btab,\n-\tinsert_rsb, extract_rsb, insert_xab6, extract_xab6): New functions.\n-\t(BAT, BBA VBA RBS XB6S): Delete macros.\n-\t(BTAB, BAB, VAB, RAB, RSB, XAB6): New macros.\n-\t(BB, BD, RBX, XC6): Update for new macros.\n-\t(powerpc_opcodes) <evmr, evnot, vmr, vnot, crnot, crclr, crset,\n-\tcrmove, not, not., mr, mr., xxspltd, xxswapd, xvmovsp, xvmovdp,\n-\te_crnot, e_crclr, e_crset, e_crmove>: Likewise.\n-\t* ppc-dis.c (print_insn_powerpc): Delete handling of fake operands.\n-\n-2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n-\n-\t* Makefile.am: Add support for s12z architecture.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* s12z-dis.c: New file.\n-\t* s12z.h: New file.\n-\n-2018-05-18  Alan Modra  <amodra@gmail.com>\n-\n-\t* nfp-dis.c: Don't #include libbfd.h.\n-\t(init_nfp3200_priv): Use bfd_get_section_contents.\n-\t(nit_nfp6000_mecsr_sec): Likewise.\n-\n-2018-05-17  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/zh_CN.po: Updated simplified Chinese translation.\n-\n-2018-05-16  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/23109\n-\t* aarch64-tbl.h (aarch64_opcode_table): Correct sdot and udot.\n-\t* aarch64-dis-2.c: Regenerate.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* aarch64-asm.c (opintl.h): Include.\n-\t(aarch64_ins_sysreg): Enforce read/write constraints.\n-\t* aarch64-dis.c (aarch64_ext_sysreg): Likewise.\n-\t* aarch64-opc.h (F_DEPRECATED, F_ARCHEXT, F_HASXT): Moved here.\n-\t(F_REG_READ, F_REG_WRITE): New.\n-\t* aarch64-opc.c (aarch64_print_operand): Generate notes for\n-\tAARCH64_OPND_SYSREG.\n-\t(F_DEPRECATED, F_ARCHEXT, F_HASXT): Move to aarch64-opc.h.\n-\t(aarch64_sys_regs): Add constraints to currentel, midr_el1, ctr_el0,\n-\tmpidr_el1, revidr_el1, aidr_el1, dczid_el0, id_dfr0_el1, id_pfr0_el1,\n-\tid_pfr1_el1, id_afr0_el1, id_mmfr0_el1, id_mmfr1_el1, id_mmfr2_el1,\n-\tid_mmfr3_el1, id_mmfr4_el1, id_isar0_el1, id_isar1_el1, id_isar2_el1,\n-\tid_isar3_el1, id_isar4_el1, id_isar5_el1, mvfr0_el1, mvfr1_el1,\n-\tmvfr2_el1, ccsidr_el1, id_aa64pfr0_el1, id_aa64pfr1_el1,\n-\tid_aa64dfr0_el1, id_aa64dfr1_el1, id_aa64isar0_el1, id_aa64isar1_el1,\n-\tid_aa64mmfr0_el1, id_aa64mmfr1_el1, id_aa64mmfr2_el1, id_aa64afr0_el1,\n-\tid_aa64afr0_el1, id_aa64afr1_el1, id_aa64zfr0_el1, clidr_el1,\n-\tcsselr_el1, vsesr_el2, erridr_el1, erxfr_el1, rvbar_el1, rvbar_el2,\n-\trvbar_el3, isr_el1, tpidrro_el0, cntfrq_el0, cntpct_el0, cntvct_el0,\n-\tmdccsr_el0, dbgdtrrx_el0, dbgdtrtx_el0, osdtrrx_el1, osdtrtx_el1,\n-\tmdrar_el1, oslar_el1, oslsr_el1, dbgauthstatus_el1, pmbidr_el1,\n-\tpmsidr_el1, pmswinc_el0, pmceid0_el0, pmceid1_el0.\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add constraints to\n-\tmsr (F_SYS_WRITE), mrs (F_SYS_READ).\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* aarch64-dis.c (no_notes: New.\n-\t(parse_aarch64_dis_option): Support notes.\n-\t(aarch64_decode_insn, print_operands): Likewise.\n-\t(print_aarch64_disassembler_options): Document notes.\n-\t* aarch64-opc.c (aarch64_print_operand): Support notes.\n-\n-2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n-\n-\tPR binutils/21446\n-\t* aarch64-asm.h (aarch64_insert_operand, aarch64_##x): Return boolean\n-\tand take error struct.\n-\t* aarch64-asm.c (aarch64_ext_regno, aarch64_ins_reglane,\n-\taarch64_ins_reglist, aarch64_ins_ldst_reglist,\n-\taarch64_ins_ldst_reglist_r, aarch64_ins_ldst_elemlist,\n-\taarch64_ins_advsimd_imm_shift, aarch64_ins_imm, aarch64_ins_imm_half,\n-\taarch64_ins_advsimd_imm_modified, aarch64_ins_fpimm,\n-\taarch64_ins_imm_rotate1, aarch64_ins_imm_rotate2, aarch64_ins_fbits,\n-\taarch64_ins_aimm, aarch64_ins_limm_1, aarch64_ins_limm,\n-\taarch64_ins_inv_limm, aarch64_ins_ft, aarch64_ins_addr_simple,\n-\taarch64_ins_addr_regoff, aarch64_ins_addr_offset, aarch64_ins_addr_simm,\n-\taarch64_ins_addr_simm10, aarch64_ins_addr_uimm12,\n-\taarch64_ins_simd_addr_post, aarch64_ins_cond, aarch64_ins_sysreg,\n-\taarch64_ins_pstatefield, aarch64_ins_sysins_op, aarch64_ins_barrier,\n-\taarch64_ins_prfop, aarch64_ins_hint, aarch64_ins_reg_extended,\n-\taarch64_ins_reg_shifted, aarch64_ins_sve_addr_ri_s4xvl,\n-\taarch64_ins_sve_addr_ri_s6xvl, aarch64_ins_sve_addr_ri_s9xvl,\n-\taarch64_ins_sve_addr_ri_s4, aarch64_ins_sve_addr_ri_u6,\n-\taarch64_ins_sve_addr_rr_lsl, aarch64_ins_sve_addr_rz_xtw,\n-\taarch64_ins_sve_addr_zi_u5, aarch64_ext_sve_addr_zz,\n-\taarch64_ins_sve_addr_zz_lsl, aarch64_ins_sve_addr_zz_sxtw,\n-\taarch64_ins_sve_addr_zz_uxtw, aarch64_ins_sve_aimm,\n-\taarch64_ins_sve_asimm, aarch64_ins_sve_index, aarch64_ins_sve_limm_mov,\n-\taarch64_ins_sve_quad_index, aarch64_ins_sve_reglist,\n-\taarch64_ins_sve_scale, aarch64_ins_sve_shlimm, aarch64_ins_sve_shrimm,\n-\taarch64_ins_sve_float_half_one, aarch64_ins_sve_float_half_two,\n-\taarch64_ins_sve_float_zero_one, aarch64_opcode_encode): Likewise.\n-\t* aarch64-dis.h (aarch64_extract_operand, aarch64_##x): Likewise.\n-\t* aarch64-dis.c (aarch64_ext_regno, aarch64_ext_reglane,\n-\taarch64_ext_reglist, aarch64_ext_ldst_reglist,\n-\taarch64_ext_ldst_reglist_r, aarch64_ext_ldst_elemlist,\n-\taarch64_ext_advsimd_imm_shift, aarch64_ext_imm, aarch64_ext_imm_half,\n-\taarch64_ext_advsimd_imm_modified, aarch64_ext_fpimm,\n-\taarch64_ext_imm_rotate1, aarch64_ext_imm_rotate2, aarch64_ext_fbits,\n-\taarch64_ext_aimm, aarch64_ext_limm_1, aarch64_ext_limm, decode_limm,\n-\taarch64_ext_inv_limm, aarch64_ext_ft, aarch64_ext_addr_simple,\n-\taarch64_ext_addr_regoff, aarch64_ext_addr_offset, aarch64_ext_addr_simm,\n-\taarch64_ext_addr_simm10, aarch64_ext_addr_uimm12,\n-\taarch64_ext_simd_addr_post, aarch64_ext_cond, aarch64_ext_sysreg,\n-\taarch64_ext_pstatefield, aarch64_ext_sysins_op, aarch64_ext_barrier,\n-\taarch64_ext_prfop, aarch64_ext_hint, aarch64_ext_reg_extended,\n-\taarch64_ext_reg_shifted, aarch64_ext_sve_addr_ri_s4xvl,\n-\taarch64_ext_sve_addr_ri_s6xvl, aarch64_ext_sve_addr_ri_s9xvl,\n-\taarch64_ext_sve_addr_ri_s4, aarch64_ext_sve_addr_ri_u6,\n-\taarch64_ext_sve_addr_rr_lsl, aarch64_ext_sve_addr_rz_xtw,\n-\taarch64_ext_sve_addr_zi_u5, aarch64_ext_sve_addr_zz,\n-\taarch64_ext_sve_addr_zz_lsl, aarch64_ext_sve_addr_zz_sxtw,\n-\taarch64_ext_sve_addr_zz_uxtw, aarch64_ext_sve_aimm,\n-\taarch64_ext_sve_asimm, aarch64_ext_sve_index, aarch64_ext_sve_limm_mov,\n-\taarch64_ext_sve_quad_index, aarch64_ext_sve_reglist,\n-\taarch64_ext_sve_scale, aarch64_ext_sve_shlimm, aarch64_ext_sve_shrimm,\n-\taarch64_ext_sve_float_half_one, aarch64_ext_sve_float_half_two,\n-\taarch64_ext_sve_float_zero_one, aarch64_opcode_decode): Likewise.\n-\t(determine_disassembling_preference, aarch64_decode_insn,\n-\tprint_insn_aarch64_word, print_insn_data): Take errors struct.\n-\t(print_insn_aarch64): Use errors.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-gen.c (print_operand_inserter): Use errors and change type to\n-\tboolean in aarch64_insert_operan.\n-\t(print_operand_extractor): Likewise.\n-\t* aarch64-opc.c (aarch64_print_operand): Use sysreg struct.\n-\n-2018-05-15  Francois H. Theron  <francois.theron@netronome.com>\n-\n-\t* nfp-dis.c: Use uint64_t for instruction variables, not bfd_vma.\n-\n-2018-05-09  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Remove Disp<N> from movidir{i,64b}.\n-\n-2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n-\n-\t* cr16-opc.c (cr16_instruction): Comment typo fix.\n-\t* hppa-dis.c (print_insn_hppa): Likewise.\n-\n-2018-05-08  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (match_c_slli, match_slli_as_c_slli): New.\n-\t(match_c_slli64, match_srxi_as_c_srxi): New.\n-\t(riscv_opcodes) <slli, sll>: Use match_slli_as_c_slli.\n-\t<srli, srl, srai, sra>: Use match_srxi_as_c_srxi.\n-\t<c.slli, c.srli, c.srai>: Use match_s_slli.\n-\t<c.slli64, c.srli64, c.srai64>: New.\n-\n-2018-05-08  Alan Modra  <amodra@gmail.com>\n-\n-\t* ppc-dis.c (PPC_OPCD_SEGS): Define using PPC_OP.\n-\t(VLE_OPCD_SEGS, SPE2_OPCD_SEGS): Similarly, using macros used to\n-\tpartition opcode space for index lookup.\n-\n-2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n-\n-\t* ppc-dis.c (print_insn_powerpc) <insn_is_short>: Replace this...\n-\t<insn_length>: ...with this.  Update usage.\n-\tRemove duplicate call to *info->memory_error_func.\n-\n-2018-05-07  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\t    H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (Gva): New.\n-\t(enum): Add PREFIX_0F38F8, PREFIX_0F38F9,\n-\tMOD_0F38F8_PREFIX_2, MOD_0F38F9_PREFIX_0.\n-\t(prefix_table): New instructions (see prefix above).\n-\t(mod_table): New instructions (see prefix above).\n-\t(OP_G): Handle va_mode.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_MOVDIRI_FLAGS,\n-\tCPU_MOVDIR64B_FLAGS.\n-\t(cpu_flags): Add CpuMOVDIRI and CpuMOVDIR64B.\n-\t* i386-opc.h (enum): Add CpuMOVDIRI, CpuMOVDIR64B.\n-\t(i386_cpu_flags): Add cpumovdiri and cpumovdir64b.\n-\t* i386-opc.tbl: Add movidir{i,64b}.\n-\t* i386-init.h: Regenerated.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Replace AddrPrefixOp0 with\n-\tAddrPrefixOpReg.\n-\t* i386-opc.h (AddrPrefixOp0): Renamed to ...\n-\t(AddrPrefixOpReg): This.\n-\t(i386_opcode_modifier): Rename addrprefixop0 to addrprefixopreg.\n-\t* i386-opc.tbl: Replace AddrPrefixOp0 with AddrPrefixOpReg.\n-\n-2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n-\n-\t* ppc-opc.c (powerpc_num_opcodes): Change type to unsigned.\n-\t(vle_num_opcodes): Likewise.\n-\t(spe2_num_opcodes): Likewise.\n-\t* ppc-dis.c (disassemble_init_powerpc) <powerpc_opcd_indices>: Rewrite\n-\tinitialization loop.\n-\t(disassemble_init_powerpc) <vle_opcd_indices>: Likewise.\n-\t(disassemble_init_powerpc) <spe2_opcd_indices>: Likewise.  Initialize\n-\tonly once.\n-\n-2018-05-01  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-dis.c (aarch64_opcode_decode): Moved memory clear code.\n-\n-2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n-\n-\tMakefile.am: Added nfp-dis.c.\n-\tconfigure.ac: Added bfd_nfp_arch.\n-\tdisassemble.h: Added print_insn_nfp prototype.\n-\tdisassemble.c: Added ARCH_nfp and call to print_insn_nfp\n-\tnfp-dis.c: New, for NFP support.\n-\tpo/POTFILES.in: Added nfp-dis.c to the list.\n-\tMakefile.in: Regenerate.\n-\tconfigure: Regenerate.\n-\n-2018-04-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Fold various non-memory operand AVX512VL\n-\ttemplates into their base ones.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-04-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Use CPU_XOP_FLAGS for\n-\tCPU_BDVER1_FLAGS. Use CPU_AVX2_FLAGS for CPU_ZNVER1_FLAGS. Use\n-\tCPU_AVX_FLAGS for CPU_BTVER1_FLAGS. Add CPU_XSAVE_FLAGS to\n-\tCPU_LWP_FLAGS, CPU_AVX_FLAGS, CPU_MPX_FLAGS, and CPU_OSPKE_FLAGS.\n-\t* i386-init.h: Re-generate.\n-\n-2018-04-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Drop all uses of CpuRegMMX,\n-\tCpuRegXMM, CpuRegYMM, CpuRegZMM, and CpuRegMask. Use\n-\tCPU_AVX2_FLAGS for CPU_AVX512F_FLAGS and drop bogus comment.\n-\tDon't use CPU_AVX2_FLAGS for CPU_AVX512VL_FLAGS and drop bogus\n-\tcomment.\n-\t(cpu_flags): Drop CpuRegMMX, CpuRegXMM, CpuRegYMM, CpuRegZMM,\n-\tand CpuRegMask.\n-\t* i386-opc.h: CpuRegMMX, CpuRegXMM, CpuRegYMM, CpuRegZMM,\n-\tCpuRegMask: Delete.\n-\t(union i386_cpu_flags): Remove cpuregmmx, cpuregxmm, cpuregymm,\n-\tcpuregzmm, and cpuregmask.\n-\t* i386-init.h: Re-generate.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-04-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (cpu_flag_init): CPU_I586_FLAGS inherits Cpu387 only.\n-\tCPU_287_FLAGS is Cpu287 only. CPU_387_FLAGS is Cpu387 only.\n-\t* i386-init.h: Re-generate.\n-\n-2018-04-26  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (VexImmExt): Delete.\n-\t* i386-opc.h (VexImmExt, veximmext): Delete.\n-\t* i386-opc.tbl: Drop all VexImmExt uses.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-04-25  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vpslld, vpsrad, vpsrld): Drop AVX512VL\n-\tregister-only forms.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-04-25  Tamar Christina  <tamar.christina@arm.com>\n-\n-\t* aarch64-tbl.h (sqrdmlah, sqrdmlsh): Fix masks.\n-\n-2018-04-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-dis.c: Add REG_0F1C_MOD_0, MOD_0F1C_PREFIX_0,\n-\tPREFIX_0F1C.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_CLDEMOTE_FLAGS,\n-\t(cpu_flags): Add CpuCLDEMOTE.\n-\t* i386-init.h: Regenerate.\n-\t* i386-opc.h (enum): Add CpuCLDEMOTE,\n-\t(i386_cpu_flags): Add cpucldemote.\n-\t* i386-opc.tbl: Add cldemote.\n-\t* i386-tbl.h: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove sh5 and sh64 support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* sh-dis.c: Likewise.\n-\t* sh64-dis.c: Delete.\n-\t* sh64-opc.c: Delete.\n-\t* sh64-opc.h: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove w65 support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* w65-dis.c: Delete.\n-\t* w65-opc.h: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac: Remove we32k support.\n-\t* configure: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove m88k support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* m88k-dis.c: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove i370 support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* i370-dis.c: Delete.\n-\t* i370-opc.c: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* Makefile.am: Remove h8500 support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* h8500-dis.c: Delete.\n-\t* h8500-opc.h: Delete.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-16  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac: Remove tahoe support.\n-\t* configure: Regenerate.\n-\n-2018-04-15  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-dis.c (prefix_table): Replace Em with Edq on tpause and\n-\tumwait.\n-\t* i386-opc.tbl: Allow 32-bit registers for tpause and umwait in\n-\t64-bit mode.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-04-11  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-dis.c (enum): Add PREFIX_MOD_0_0FAE_REG_6,\n-\tPREFIX_MOD_1_0FAE_REG_6.\n-\t(va_mode): New.\n-\t(OP_E_register): Use va_mode.\n-\t* i386-dis-evex.h (prefix_table):\n-\tNew instructions (see prefixes above).\n-\t* i386-gen.c (cpu_flag_init): Add WAITPKG.\n-\t(cpu_flags): Likewise.\n-\t* i386-opc.h (enum): Likewise.\n-\t(i386_cpu_flags): Likewise.\n-\t* i386-opc.tbl: Add umonitor, umwait, tpause.\n-\t* i386-init.h: Regenerate.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-04-11  Alan Modra  <amodra@gmail.com>\n-\n-\t* opcodes/i860-dis.c: Delete.\n-\t* opcodes/i960-dis.c: Delete.\n-\t* Makefile.am: Remove i860 and i960 support.\n-\t* configure.ac: Likewise.\n-\t* disassemble.c: Likewise.\n-\t* disassemble.h: Likewise.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* po/POTFILES.in: Regenerate.\n-\n-2018-04-04  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR binutils/23025\n-\t* i386-dis.c (get_valid_dis386): Don't set vex.prefix nor vex.w\n-\tto 0.\n-\t(print_insn): Clear vex instead of vex.evex.\n-\n-2018-04-04  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/es.po: Updated Spanish translation.\n-\n-2018-03-28  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Delete VecESize.\n-\t* i386-opc.h (VecESize): Delete.\n-\t(struct i386_opcode_modifier): Delete vecesize.\n-\t* i386-opc.tbl: Drop VecESize.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-28  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h (NO_BROADCAST, BROADCAST_1TO16, BROADCAST_1TO8,\n-\tBROADCAST_1TO4, BROADCAST_1TO2): Delete.\n-\t(struct i386_opcode_modifier): Shrink broadcast field to 1 bit.\n-\t* i386-opc.tbl: Replace Broadcast=<N> by Broadcast.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-28  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vcvt*d2si, vcvt*d2usi, vcvt*s2si, vcvt*s2usi):\n-\tFold AVX512 forms\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-28  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (prefix_table): Drop Y for cvt*2si.\n-\t(vex_len_table): Drop Y for vcvt*2si.\n-\t(putop): Replace plain 'Y' handling by abort().\n-\n-2018-03-28  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22988\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add entries for LDFF1xx\n-\tinstructions with only a base address register.\n-\t* aarch64-opc.c (operand_general_constraint_met_p): Add code to\n-\thandle AARHC64_OPND_SVE_ADDR_R.\n-\t(aarch64_print_operand): Likewise.\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64_dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-03-22  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl: Drop VecESize from register only insn forms and\n-\tmemory forms not allowing broadcast.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-22  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vfrczs*, vphadd*, vphsub*, vpmacs*, vpmadcs*,\n-\tvprot*, vpsha*, vpshl*, bextr, blc*, bls*, t1mskc, tzmsk, sha1*,\n-\tsha256*): Drop Disp<N>.\n-\n-2018-03-22  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (EbndS, bnd_swap_mode): New.\n-\t(prefix_table): Use EbndS.\n-\t(OP_E_register, OP_E_memory): Also handle bnd_swap_mode.\n-\t* i386-opc.tbl (bndmov): Move misplaced Load.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-22  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vcvtdq2pd, vcvtps2pd, vcvtudq2pd): Use separate\n-\ttemplates allowing memory operands and folded ones for register\n-\tonly flavors.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-22  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vfrczp*, vpcmov, vpermil2p*): Fold 128- and\n-\t256-bit templates. Drop redundant leftover Disp<N>.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-14  Kito Cheng  <kito.cheng@gmail.com>\n-\n-\t* riscv-opc.c (riscv_insn_types): New.\n-\n-2018-03-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\n-2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Add Optimize to clr.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Remove OldGcc.\n-\t* i386-opc.h (OldGcc): Removed.\n-\t(i386_opcode_modifier): Remove oldgcc.\n-\t* i386-opc.tbl: Remove fsubp, fsubrp, fdivp and fdivrp\n-\tinstructions for old (<= 2.8.1) versions of gcc.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.h (EVEXDYN): New.\n-\t* i386-opc.tbl: Fold various AVX512VL templates.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vexpandpd, vexpandps, vmovapd, vmovaps,\n-\tvmovdqa32, vmovdqa64, vmovdqu32, vmovdqu64, vmovupd, vmovups,\n-\tvpexpandd, vpexpandq): Fold AFX512VF templates.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vgf2p8affineinvqb, vgf2p8affineqb, vgf2p8mulb):\n-\tFold 128- and 256-bit VEX-encoded templates.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vexpandpd, vexpandps, vmovapd, vmovaps,\n-\tvmovdqa32, vmovdqa64, vmovdqu32, vmovdqu64, vmovupd, vmovups,\n-\tvpexpandd, vpexpandq): Fold AVX512F templates.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (llwpcb, slwpcb, lwpval, lwpins): Fold 32- and\n-\t64-bit templates. Drop Disp<N>.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vfmadd*, vfmsub*, vfnmadd*, vfnmsub*): Fold 128-\n-\tand 256-bit templates.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (cmpxchg8b): Add NoRex64.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (cmpxchg16b, fisttp, fisttpll, bndmov, mwaitx):\n-\tDrop NoAVX.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (ldmxcsr, stmxcsr): Add NoAVX.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (opcode_modifiers): Delete FloatD.\n-\t* i386-opc.h (FloatD): Delete.\n-\t(struct i386_opcode_modifier): Delete floatd.\n-\t* i386-opc.tbl (fadd, fsub, fsubr, fmul, fdiv, fdivr): Replace\n-\tFloatD by D.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-dis.c (float_reg): Adjust DC and DE fsub*/fdiv* patterns.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vmovd): Disallow Qword memory operands.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-08  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vcvtpd2ps): Fold AVX 128- and 256-bit memory\n-\tforms.\n-\t* i386-tlb.h: Re-generate.\n-\n-2018-03-07  Alan Modra  <amodra@gmail.com>\n-\n-\t* disassemble.c (disassembler): Use bfd_arch_powerpc entry for\n-\tbfd_arch_rs6000.\n-\t* disassemble.h (print_insn_rs6000): Delete.\n-\t* ppc-dis.c (powerpc_init_dialect): Handle rs6000.\n-\t(disassemble_init_powerpc): Call powerpc_init_dialect for rs6000.\n-\t(print_insn_rs6000): Delete.\n-\n-2018-03-03  Alan Modra  <amodra@gmail.com>\n-\n-\t* sysdep.h (opcodes_error_handler): Define.\n-\t(_bfd_error_handler): Declare.\n-\t* Makefile.am: Remove stray #.\n-\t* opc2c.c (main): Remove bogus -l arg handling.  Print \"DO NOT\n-\tEDIT\" comment.\n-\t* aarch64-dis.c, * arc-dis.c, * arm-dis.c, * avr-dis.c,\n-\t* d30v-dis.c, * h8300-dis.c, * mmix-dis.c, * ppc-dis.c,\n-\t* riscv-dis.c, * s390-dis.c, * sparc-dis.c, * v850-dis.c: Use\n-\topcodes_error_handler to print errors.  Standardize error messages.\n-\t* msp430-decode.opc, * nios2-dis.c, * rl78-decode.opc: Likewise,\n-\tand include opintl.h.\n-\t* nds32-asm.c: Likewise, and include sysdep.h and opintl.h.\n-\t* i386-gen.c: Standardize error messages.\n-\t* msp430-decode.c, * rl78-decode.c, rx-decode.c: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* epiphany-asm.c, * epiphany-desc.c, * epiphany-dis.c,\n-\t* epiphany-ibld.c, * fr30-asm.c, * fr30-desc.c, * fr30-dis.c,\n-\t* fr30-ibld.c, * frv-asm.c, * frv-desc.c, * frv-dis.c, * frv-ibld.c,\n-\t* frv-opc.c, * ip2k-asm.c, * ip2k-desc.c, * ip2k-dis.c, * ip2k-ibld.c,\n-\t* iq2000-asm.c, * iq2000-desc.c, * iq2000-dis.c, * iq2000-ibld.c,\n-\t* lm32-asm.c, * lm32-desc.c, * lm32-dis.c, * lm32-ibld.c,\n-\t* m32c-asm.c, * m32c-desc.c, * m32c-dis.c, * m32c-ibld.c,\n-\t* m32r-asm.c, * m32r-desc.c, * m32r-dis.c, * m32r-ibld.c,\n-\t* mep-asm.c, * mep-desc.c, * mep-dis.c, * mep-ibld.c, * mt-asm.c,\n-\t* mt-desc.c, * mt-dis.c, * mt-ibld.c, * or1k-asm.c, * or1k-desc.c,\n-\t* or1k-dis.c, * or1k-ibld.c, * xc16x-asm.c, * xc16x-desc.c,\n-\t* xc16x-dis.c, * xc16x-ibld.c, * xstormy16-asm.c, * xstormy16-desc.c,\n-\t* xstormy16-dis.c, * xstormy16-ibld.c: Regenerate.\n-\n-2018-03-01  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* * i386-opc.tbl: Add \"Optimize\" to AVX256 and AVX512\n-\tvpsub[bwdq] instructions.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-03-01  Alan Modra  <amodra@gmail.com>\n-\n-\t* configure.ac (ALL_LINGUAS): Sort.\n-\t* configure: Regenerate.\n-\n-2018-02-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (print_insn_coprocessor): Replace uses of ARM_FEATURE_COPY\n-\tmacro by assignements.\n-\n-2018-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/22871\n-\t* i386-gen.c (opcode_modifiers): Add Optimize.\n-\t* i386-opc.h (Optimize): New enum.\n-\t(i386_opcode_modifier): Add optimize.\n-\t* i386-opc.tbl: Add \"Optimize\" to \"mov $imm, reg\",\n-\t\"sub reg, reg/mem\", \"test $imm, acc\", \"test $imm, reg/mem\",\n-\t\"and $imm, acc\", \"and $imm, reg/mem\", \"xor reg, reg/mem\",\n-\t\"movq $imm, reg\" and AVX256 and AVX512 versions of vandnps,\n-\tvandnpd, vpandn, vpandnd, vpandnq, vxorps, vxorpd, vpxor,\n-\tvpxord and vpxorq.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-02-26  Alan Modra  <amodra@gmail.com>\n-\n-\t* crx-dis.c (getregliststring): Allocate a large enough buffer\n-\tto silence false positive gcc8 warning.\n-\n-2018-02-22  Shea Levy <shea@shealevy.com>\n-\n-\t* disassemble.c (ARCH_riscv): Define if ARCH_all.\n-\n-2018-02-22  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* i386-opc.tbl: Add {rex},\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-02-20  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* mips16-opc.c (decode_mips16_operand) <'M'>: Remove case.\n-\t(mips16_opcodes): Replace `M' with `m' for \"restore\".\n-\n-2018-02-19  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n-\n-\t* arm-dis.c (thumb_opcodes): Fix BXNS mask.\n-\n-2018-02-13  Maciej W. Rozycki  <macro@mips.com>\n-\n-\t* wasm32-dis.c (print_insn_wasm32): Rename `index' local\n-\tvariable to `function_index'.\n-\n-2018-02-13  Nick Clifton  <nickc@redhat.com>\n-\n-\tPR 22823\n-\t* metag-dis.c (print_fmmov): Double buffer size to avoid warning\n-\tabout truncation of printing.\n-\n-2018-02-12  Henry Wong <henry@stuffedcow.net>\n-\n-\t* mips-opc.c (mips_builtin_opcodes): Correct \"sigrie\" encoding.\n-\n-2018-02-05  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n-\n-2018-01-23  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-dis.c (enum): Add pconfig.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_PCONFIG_FLAGS.\n-\t(cpu_flags): Add CpuPCONFIG.\n-\t* i386-opc.h (enum): Add CpuPCONFIG.\n-\t(i386_cpu_flags): Add cpupconfig.\n-\t* i386-opc.tbl: Add PCONFIG instruction.\n-\t* i386-init.h: Regenerate.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-01-23  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-dis.c (enum): Add PREFIX_0F09.\n-\t* i386-gen.c (cpu_flag_init): Add CPU_WBNOINVD_FLAGS.\n-\t(cpu_flags): Add CpuWBNOINVD.\n-\t* i386-opc.h (enum): Add CpuWBNOINVD.\n-\t(i386_cpu_flags): Add cpuwbnoinvd.\n-\t* i386-opc.tbl: Add WBNOINVD instruction.\n-\t* i386-init.h: Regenerate.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-01-17  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (riscv_opcodes) <addi>: Use z instead of 0.\n-\n-2018-01-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-gen.c (cpu_flag_init): Delete CPU_CET_FLAGS, CpuCET.\n-\tAdd CPU_IBT_FLAGS, CPU_SHSTK_FLAGS, CPY_ANY_IBT_FLAGS,\n-\tCPU_ANY_SHSTK_FLAGS, CpuIBT, CpuSHSTK.\n-\t(cpu_flags): Add CpuIBT, CpuSHSTK.\n-\t* i386-opc.h (enum): Add CpuIBT, CpuSHSTK.\n-\t(i386_cpu_flags): Add cpuibt, cpushstk.\n-\t* i386-opc.tbl: Change CpuCET to CpuSHSTK and CpuIBT.\n-\t* i386-init.h: Regenerate.\n-\t* i386-tbl.h: Likewise.\n-\n-2018-01-16  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/pt_BR.po: Updated Brazilian Portugese translation.\n-\t* po/de.po: Updated German translation.\n-\n-2018-01-15  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-opc.c (match_c_nop): New.\n-\t(riscv_opcodes) <addi>: Handle an addi that compresses to c.nop.\n-\n-2018-01-15  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/uk.po: Updated Ukranian translation.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* po/opcodes.pot: Regenerated.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t* configure: Regenerate.\n-\n-2018-01-13  Nick Clifton  <nickc@redhat.com>\n-\n-\t2.30 branch created.\n-\n-2018-01-11  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n-\n-\t* i386-opc.tbl: Remove VL variants for 4FMAPS and 4VNNIW insns.\n-\t* i386-tbl.h: Regenerate.\n-\n-2018-01-10  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (v4fmaddss, v4fnmaddss): Adjust Disp8MemShift.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-01-10  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-opc.tbl (vpcmpeqb, vpcmpleb, vpcmpltb, vpcmpneqb,\n-\tvpcmpnleb, vpcmpnltb, vpcmpequb, vpcmpleub, vpcmpltub,\n-\tvpcmpnequb, vpcmpnleub, vpcmpnltub, vpcmpeqw, vpcmplew,\n-\tvpcmpltw, vpcmpneqw, vpcmpnlew, vpcmpnltw, vpcmpequw, vpcmpleuw,\n-\tvpcmpltuw, vpcmpnequw, vpcmpnleuw, vpcmpnltuw): Adjust\n-\tDisp8MemShift of AVX512VL forms.\n-\t* i386-tbl.h: Re-generate.\n-\n-2018-01-09  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-dis.c (maybe_print_address): If base_reg is zero,\n-\tthen the hi_addr value is zero.\n-\n-2018-01-09  James Greenhalgh  <james.greenhalgh@arm.com>\n-\n-\t* arm-dis.c (arm_opcodes): Add csdb.\n-\t(thumb32_opcodes): Add csdb.\n-\n-2018-01-09  James Greenhalgh  <james.greenhalgh@arm.com>\n-\n-\t* aarch64-tbl.h (aarch64_opcode_table): Add \"csdb\".\n-\t* aarch64-asm-2.c: Regenerate.\n-\t* aarch64-dis-2.c: Regenerate.\n-\t* aarch64-opc-2.c: Regenerate.\n-\n-2018-01-08  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR gas/22681\n-\t* i386-opc.tbl: Properly encode vmovd with Qword memeory operand.\n-\tRemove AVX512 vmovd with 64-bit operands.\n-\t* i386-tbl.h: Regenerated.\n-\n-2018-01-05  Jim Wilson  <jimw@sifive.com>\n-\n-\t* riscv-dis.c (print_insn_args) <'s'>: Call maybe_print_address for a\n-\tjalr.\n-\n-2018-01-03  Alan Modra  <amodra@gmail.com>\n-\n-\tUpdate year range in copyright notice of all files.\n-\n-2018-01-02  Jan Beulich  <jbeulich@suse.com>\n-\n-\t* i386-gen.c (operand_type_init): Restore OPERAND_TYPE_REGYMM\n-\tand OPERAND_TYPE_REGZMM entries.\n-\n-For older changes see ChangeLog-2017\n+For older changes see ChangeLog-2018\n \f\n-Copyright (C) 2018 Free Software Foundation, Inc.\n+Copyright (C) 2019 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"
    },
    {
      "sha": "4fa14fdb2680c1eea096bc3969e8ad8301d2983e",
      "filename": "opcodes/ChangeLog-2018",
      "status": "added",
      "additions": 2550,
      "deletions": 0,
      "changes": 2550,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/opcodes/ChangeLog-2018",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d5c04e1bf81c06ab5c30e69eb41b5cea9136a109/opcodes/ChangeLog-2018",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog-2018?ref=d5c04e1bf81c06ab5c30e69eb41b5cea9136a109",
      "patch": "@@ -0,0 +1,2550 @@\n+2018-12-28  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24028\n+\t* ppc-dis.c (print_insn_powerpc): Replace PPC_INT_FMT uses with\n+\tPRId64/PRIx64.\n+\n+2018-12-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* arm-dis.c: Include bfd.h.\n+\t* aarch64-opc.c: Include bfd_stdint.h rather than stdint.h.\n+\t* csky-dis.c: Likewise.\n+\t* nds32-asm.c: Likewise.\n+\t* riscv-dis.c: Likewise.\n+\t* s12z-dis.c: Likewise.\n+\t* wasm32-dis.c: Likewise.\n+\n+2018-12-07  Jim Wilson  <jimw@sifive.com>\n+\n+\tPR gas/23956\n+\t* riscv-opc.c (riscv_opcodes) <\"add\">: Use 1 not 0 for fourth arg.\n+\n+2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* configure.ac (enable-cgen-maint): Support passing path to cgen\n+\tsource tree.\n+\t* configure: Regenerate.\n+\n+2018-12-06  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* disassembler.c (disassemble_init_for_target): Add RISC-V\n+\tinitialisation.\n+\t* riscv-dis.c (riscv_symbol_is_valid): New function.\n+\n+2018-12-03  Kito Cheng <kito@andestech.com>\n+\n+\t* riscv-opc.c: Change the type of xlen, because type of\n+\txlen_requirement changed.\n+\n+2018-12-03  Egeyar Bagcioglu <egeyar.bagcioglu@oracle.com>\n+\n+\tPR 23193\n+        PR 19721\n+        * aarch64-tbl.h (aarch64_opcode_table): Only disassemble an ORR\n+\tencoding as MOV if the shift operation is a left shift of zero.\n+\n+2018-11-29  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (unimp): Mark compressed unimp as INSN_ALIAS.\n+\t(c.unimp): New.\n+\n+2018-11-27  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (ciw): Fix whitespace to align columns.\n+\t(ca): New.\n+\n+2018-11-21  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z-dis.c (print_insn_shift) [SB_REG_REG_N]: Enter special case\n+\tif the postbyte matches the appropriate pattern.\n+\n+2018-11-13  Francois H. Theron <francois.theron@netronome.com>\n+\n+\t* nfp-dis.c: Fix crc[] disassembly if operands are swapped.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs_dc): New entries for\n+\tIGVAC, IGSW, CGSW, CIGSW, CGVAC, CGVAP, CGVADP, CIGVAC, GVA,\n+\tIGDVAC, IGDSW, CGDSW, CIGDSW, CGDVAC, CGDVAP, CGDVADP,\n+\tCIGDVAC and GZVA.\n+\t(aarch64_sys_ins_reg_supported_p): New check for above.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): New entries for TCO,\n+\tTFSRE0_SL1, TFSR_EL1, TFSR_EL2, TFSR_EL3, TFSR_EL12,\n+\tRGSR_EL1 and GCR_EL1.\n+\t(aarch64_sys_reg_supported_p): New check for above.\n+\t(aarch64_pstatefields): New entry for TCO.\n+\t(aarch64_pstatefield_supported_p): New check for above.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_ins_addr_simple_2): New.\n+\t* aarch64-asm.h (ins_addr_simple_2): Declare the above.\n+\t* aarch64-dis.c (aarch64_ext_addr_simple_2): New.\n+\t* aarch64-dis.h (ext_addr_simple_2): Declare the above.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Add case for\n+\tAARCH64_OPND_ADDR_SIMPLE_2 and ldstgv_indexed.\n+\t(aarch64_print_operand): Add case for AARCH64_OPND_ADDR_SIMPLE_2.\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add stgv and ldgv.\n+\t(AARCH64_OPERANDS): Define ADDR_SIMPLE_2.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (QL_LDG): New.\n+\t(aarch64_opcode_table): Add ldg.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_opnd_qualifiers): Add new data\n+\tfor AARCH64_OPND_QLF_imm_tag.\n+\t(operand_general_constraint_met_p): Add case for\n+\tAARCH64_OPND_ADDR_SIMM11 and AARCH64_OPND_ADDR_SIMM13.\n+\t(aarch64_print_operand): Likewise.\n+\t* aarch64-tbl.h (QL_LDST_AT, QL_STGP): New.\n+\t(aarch64_opcode_table): Add stg, stzg, st2g, stz2g and stgp\n+\tfor both offset and pre/post indexed versions.\n+\t(AARCH64_OPERANDS): Define ADDR_SIMM11 and ADDR_SIMM13.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add subp, subps and cmpp.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.h (aarch64_field_kind): New FLD_imm4_3.\n+\t(OPD_F_SHIFT_BY_4, operand_need_shift_by_four): New.\n+\t* aarch64-opc.c (fields): Add entry for imm4_3.\n+\t(operand_general_constraint_met_p): Add cases for\n+\tAARCH64_OPND_UIMM4_ADDG and AARCH64_OPND_UIMM10.\n+\t(aarch64_print_operand): Likewise.\n+\t* aarch64-tbl.h (QL_ADDG): New.\n+\t(aarch64_opcode_table): Add addg, subg, irg and gmi.\n+\t(AARCH64_OPERANDS): Define UIMM4_ADDG and UIMM10.\n+\t* aarch64-asm.c (aarch64_ins_imm): Add case for\n+\toperand_need_shift_by_four.\n+\t* aarch64-asm-2.c: Regenerated.\n+\t* aarch64-dis-2.c: Regenerated.\n+\t* aarch64-opc-2.c: Regenerated.\n+\n+2018-11-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_memtag): New.\n+\t(MEMTAG, MEMTAG_INSN): New.\n+\n+2018-11-06  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (select_arm_features): Update bfd_mach_arm_8\n+\twith Armv8.5-A. Remove reduntant ARM_EXT2_FP16_FML.\n+\n+2018-11-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (insert_arx, insert_ary, insert_rx, insert_ry, insert_ls),\n+\t(insert_evuimm1_ex0, insert_evuimm2_ex0, insert_evuimm4_ex0),\n+\t(insert_evuimm8_ex0, insert_evuimm_lt8, insert_evuimm_lt16),\n+\t(insert_rD_rS_even, insert_off_lsp, insert_off_spe2, insert_Ddd):\n+\tDon't return zero on error, insert mask bits instead.\n+\t(insert_sd4h, extract_sd4h, insert_sd4w, extract_sd4w): Delete.\n+\t(insert_sh6, extract_sh6): Delete dead code.\n+\t(insert_sprbat, insert_sprg): Use unsigned comparisions.\n+\t(powerpc_operands <OIMM>): Set shift count rather than using\n+\tPPC_OPSHIFT_INV.\n+\t<SE_SDH, SE_SDW>: Likewise.  Don't use insert/extract functions.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis-evex.h (evex_table): Use K suffix instead of %LW for\n+\tvpbroadcast{d,q} with GPR operand.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EVEX_W_0F6E_P_2, EVEX_W_0F7E_P_2): Delete.\n+\t* i386-dis-evex.h (evex_table): Move vmov[dq} with GPR operand\n+\tcases up one level in the hierarchy.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (MOD_VEX_W_0_0F92_P_3_LEN_0,\n+\tMOD_VEX_W_1_0F92_P_3_LEN_0): Fold into MOD_VEX_0F92_P_3_LEN_0.\n+\t(MOD_VEX_W_0_0F93_P_3_LEN_0, MOD_VEX_W_1_0F93_P_3_LEN_0): Fold\n+\tinto MOD_VEX_0F93_P_3_LEN_0.\n+\t(vex_len_table, vex_w_table, mod_table): Move kmov[dq} with GPR\n+\toperand cases up one level in the hierarchy.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (VEX_W_0FC4_P_2, VEX_W_0FC5_P_2, VEX_W_0F3A14_P_2,\n+\tVEX_W_0F3A15_P_2, VEX_W_0F3A20_P_2, EVEX_W_0F3A16_P_2,\n+\tEVEX_W_0F3A22_P_2): Delete.\n+\t(vex_len_table, vex_w_table): Move vpextr{b,w} and vpinsr{b,w}\n+\tentries up one level in the hierarchy.\n+\t(OP_E_memory): Handle dq_mode when determining Disp8 shift\n+\tvalue.\n+\t* i386-dis-evex.h (evex_table): Move vpextr{d,q} and vpinsr{d,q}\n+\tentries up one level in the hierarchy.\n+\t* i386-opc.tbl (vpextrb, vpextrw, vpinsrb, vpinsrw): Change to\n+\tVexWIG for AVX flavors.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vcvtsi2sd, vcvtsi2ss, vmovd, vpcmpestri,\n+\tvpcmpestrm, vpextrd, vpinsrd, vpbroadcastd, vcvtusi2sd,\n+\tvcvtusi2ss, kmovd): Drop VexW=1.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (Vex128, Vex256, VexLIG, EVex128, EVex256,\n+\tEVex512, EVexLIG, EVexDYN): New.\n+\t(ldmxcsr, stmxcsr, vldmxcsr, vstmxcsr, all BMI, BMI2, and TBM\n+\tinsns): Use Vex128 instead of Vex=3 (aka VexLIG).\n+\t(vextractps, vinsertps, vpextr*, vpinsr*): Use EVex128 instead\n+\tof EVex=4 (aka EVexLIG).\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (pextrw, vpextrw): Add Load to 0F C5 forms.\n+\t(vpmaxub): Re-order attributes on AVX512BW flavor.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vandnp*, vandp*, vcmp*, vcvtss2sd, vorp*,\n+\tvpmaxub, vmovntdqa, vmpsadbw, vphsub*): Use VexWIG instead of\n+\tVex=1 on AVX / AVX2 flavors.\n+\t(vpmaxub): Re-order attributes on AVX512BW flavor.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-11-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (VexW0, VexW1): New.\n+\t(vphadd*, vphsub*): Use VexW0 on XOP variants.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-10-22  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z-dis.c (decode_possible_symbol): Add fallback case.\n+\t(rel_15_7): Likewise.\n+\n+2018-10-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* arm-dis.c (UNKNOWN_INSTRUCTION_32BIT): Format specifier for arm mode.\n+\t(UNKNOWN_INSTRUCTION_16BIT): Format specifier for thumb mode.\n+\t(print_insn_arm, print_insn_thumb16, print_insn_thumb32): Use them.\n+\n+2018-10-16  Matthew Malcomson  <matthew.malcomson@arm.com>\n+\n+\t* aarch64-opc.c (struct operand_qualifier_data): Change qualifier data\n+\tcorresponding to AARCH64_OPND_QLF_S_4B qualifier.\n+\n+2018-10-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Drop Size16, Size32, and\n+\tSize64. Add Size.\n+\t* i386-opc.h (Size16, Size32, Size64): Delete.\n+\t(Size): New.\n+\t(SIZE16, SIZE32, SIZE64): Define.\n+\t(struct i386_opcode_modifier): Drop size16, size32, and size64.\n+\tAdd size.\n+\t* i386-opc.tbl (Size16, Size32, Size64): Define.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Add\n+\tSSBS in the check for one-bit immediate.\n+\t(aarch64_sys_regs): New entry for SSBS.\n+\t(aarch64_sys_reg_supported_p): New check for above.\n+\t(aarch64_pstatefields): New entry for SSBS.\n+\t(aarch64_pstatefield_supported_p): New check for above.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): New entries for\n+\tscxtnum_el[0,1,2,3,12] and id_pfr2_el1.\n+\t(aarch64_sys_reg_supported_p): New checks for above.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.h (HINT_OPD_NOPRINT, HINT_ENCODE): New.\n+\t(HINT_FLAG, HINT_VALUE): New macros to encode NO_PRINT flag\n+\twith the hint immediate.\n+\t* aarch64-opc.c (aarch64_hint_options): New entries for\n+\tc, j, jc and default (with HINT_OPD_F_NOPRINT flag) for BTI.\n+\t(aarch64_print_operand): Add case for AARCH64_OPND_BTI_TARGET\n+\twhile checking for HINT_OPD_F_NOPRINT flag.\n+\t* aarch64-dis.c (aarch64_ext_hint): Use new HINT_VALUE to\n+\textract value.\n+\t* aarch64-tbl.h (aarch64_feature_bti, BTI, BTI_INSN): New.\n+\t(aarch64_opcode_table): Add entry for BTI.\n+\t(AARCH64_OPERANDS): Add new description for BTI targets.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs): New entries for\n+\trndr and rndrrs.\n+\t(aarch64_sys_reg_supported_p): New check for above.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-opc.c (aarch64_sys_regs_dc): New entry for cvadp.\n+\t(aarch64_sys_ins_reg_supported_p): New check for above.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-dis.c (aarch64_ext_sysins_op): Add case for\n+\tAARCH64_OPND_SYSREG_SR.\n+\t* aarch64-opc.c (aarch64_print_operand): Likewise.\n+\t(aarch64_sys_regs_sr): Define table.\n+\t(aarch64_sys_ins_reg_supported_p): Check for RCTX with\n+\tAARCH64_FEATURE_PREDRES.\n+\t* aarch64-tbl.h (aarch64_feature_predres): New.\n+\t(PREDRES, PREDRES_INSN): New.\n+\t(aarch64_opcode_table): Add entries for cfp, dvp and cpp.\n+\t(AARCH64_OPERANDS): Add new description for SYSREG_SR.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_sb): New.\n+\t(SB, SB_INSN): New.\n+\t(aarch64_opcode_table): Add entry for sb.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_flagmanip): New.\n+\t(aarch64_feature_frintts): New.\n+\t(FLAGMANIP, FRINTTS): New.\n+\t(aarch64_opcode_table): Add entries for xaflag, axflag\n+\tand frint[32,64][x,z] instructions.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-10-09  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_feature_set aarch64_feature_v8_5): New.\n+\t(ARMV8_5, V8_5_INSN): New.\n+\n+2018-10-08  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-opc.c (verify_constraints): Use memset instead of {0}.\n+\n+2018-10-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (rm_table): Add enclv.\n+\t* i386-opc.tbl: Add enclv.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-10-05  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (arm_opcodes): Add sb.\n+\t(thumb32_opcodes): Likewise.\n+\n+2018-10-05  Richard Henderson  <rth@twiddle.net>\n+\t    Stafford Horne  <shorne@gmail.com>\n+\n+\t* or1k-desc.c: Regenerate.\n+\t* or1k-desc.h: Regenerate.\n+\t* or1k-opc.c: Regenerate.\n+\t* or1k-opc.h: Regenerate.\n+\t* or1k-opinst.c: Regenerate.\n+\n+2018-10-05  Richard Henderson  <rth@twiddle.net>\n+\n+\t* or1k-asm.c: Regenerated.\n+\t* or1k-desc.c: Regenerated.\n+\t* or1k-desc.h: Regenerated.\n+\t* or1k-dis.c: Regenerated.\n+\t* or1k-ibld.c: Regenerated.\n+\t* or1k-opc.c: Regenerated.\n+\t* or1k-opc.h: Regenerated.\n+\t* or1k-opinst.c: Regenerated.\n+\n+2018-10-05  Richard Henderson  <rth@twiddle.net>\n+\n+\t* or1k-asm.c: Regenerate.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_opcode_encode): Apply constraint verifier.\n+\t* aarch64-dis.c (print_operands): Refactor to take notes.\n+\t(print_verifier_notes): New.\n+\t(print_aarch64_insn): Apply constraint verifier.\n+\t(print_insn_aarch64_word): Update call to print_aarch64_insn.\n+\t* aarch64-opc.c (aarch64_print_operand): Remove attribute, update notes format.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-opc.c (init_insn_block): New.\n+\t(verify_constraints, aarch64_is_destructive_by_operands): New.\n+\t* aarch64-opc.h (verify_constraints): New.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (aarch64_opcode_decode): Update verifier call.\n+\t* aarch64-opc.c (verify_ldpsw): Update arguments.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (ERR_OK, ERR_UND, ERR_UNP, ERR_NYI): Remove.\n+\t(aarch64_decode_insn, print_insn_aarch64_word): Use err_type.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-asm.c (aarch64_opcode_encode): Add insn_sequence.\n+\t* aarch64-dis.c (insn_sequence): New.\n+\n+2018-10-03  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-tbl.h (CORE_INSN, __FP_INSN, SIMD_INSN, CRYP_INSN, _CRC_INSN,\n+\t_LSE_INSN, _LOR_INSN, RDMA_INSN, FF16_INSN, SF16_INSN, V8_2_INSN,\n+\t_SVE_INSN, V8_3_INSN, CNUM_INSN, RCPC_INSN, SHA2_INSN, AES_INSN,\n+\tV8_4_INSN, SHA3_INSN, SM4_INSN, FP16_V8_2_INSN, DOT_INSN): Initialize\n+\tconstraints.\n+\t(_SVE_INSNC): New.\n+\t(struct aarch64_opcode): (fjcvtzs, ldpsw, ldpsw, esb, psb): Initialize\n+\tconstraints.\n+\t(movprfx): Change _SVE_INSN into _SVE_INSNC, add C_SCAN_MOVPRFX and\n+\tF_SCAN flags.\n+\t(msb, mul, neg, not, orr, rbit, revb, revh, revw, sabd, scvtf,\n+\tsdiv, sdivr, sdot, smax, smin, smulh, splice, sqadd, sqdecd, sqdech,\n+\tsqdecp, sqdecw, sqincd, sqinch, sqincp, sqincw, sqsub, sub, subr, sxtb,\n+\tsxth, sxtw, uabd, ucvtf, udiv, udivr, udot, umax, umin, umulh, uqadd,\n+\tuqdecd, uqdech, uqdecp, uqdecw, uqincd, uqinch, uqincp, uqincw, uqsub,\n+\tuxtb, uxth, uxtw, bic, eon, orn, mov, fmov): Change _SVE_INSN into _SVE_INSNC and add\n+\tC_SCAN_MOVPRFX and C_MAX_ELEM constraints.\n+\n+2018-10-02  Palmer Dabbelt  <palmer@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes) <fence.tso>: New opcode.\n+\n+2018-09-23  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* nios2-dis.c (nios2_print_insn_arg): Make sure signed conversions\n+\tare used when extracting signed fields and converting them to\n+\tpotentially 64-bit types.\n+\n+2018-09-21  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* Makefile.am: Remove NO_WMISSING_FIELD_INITIALIZERS.\n+\t* Makefile.in: Re-generate.\n+\t* aclocal.m4: Re-generate.\n+\t* configure: Re-generate.\n+\t* configure.ac: Remove check for -Wno-missing-field-initializers.\n+\t* csky-opc.h (csky_v1_opcodes): Initialize all fields of last element.\n+\t(csky_v2_opcodes): Likewise.\n+\n+2018-09-20  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* arc-nps400-tbl.h: Append `ull' to large constants throughout.\n+\n+2018-09-20  Nelson Chu <nelson.chu1990@gmail.com>\n+\n+\t* nds32-asm.c (operand_fields): Remove the unused fields.\n+\t(nds32_opcodes): Remove the unused instructions.\n+\t* nds32-dis.c (nds32_ex9_info): Removed.\n+\t(nds32_parse_opcode): Updated.\n+\t(print_insn_nds32): Likewise.\n+\t* nds32-asm.c (config.h, stdlib.h, string.h): New includes.\n+\t(LEX_SET_FIELD, LEX_GET_FIELD): Update defines.\n+\t(nds32_asm_init, build_operand_hash_table, build_keyword_hash_table,\n+\tbuild_opcode_hash_table): New functions.\n+\t(nds32_keyword_table, nds32_keyword_count_table, nds32_field_table,\n+\tnds32_opcode_table): New.\n+\t(hw_ktabs): Declare it to a pointer rather than an array.\n+\t(build_hash_table): Removed.\n+\t* nds32-asm.h (enum): Add SYN_INPUT, SYN_OUTPUT, SYN_LOPT,\n+\tSYN_ROPT and upadte HW_GPR and HW_INT.\n+\t* nds32-dis.c (keywords): Remove const.\n+\t(match_field): New function.\n+\t(nds32_parse_opcode): Updated.\n+\t* disassemble.c (disassemble_init_for_target):\n+\tAdd disassemble_init_nds32.\n+\t* nds32-dis.c (eum map_type): New.\n+\t(nds32_private_data): Likewise.\n+\t(get_mapping_symbol_type, is_mapping_symbol, nds32_symbol_is_valid,\n+\tnds32_add_opcode_hash_table, disassemble_init_nds32): New functions.\n+\t(print_insn_nds32): Updated.\n+\t* nds32-asm.c (parse_aext_reg): Add new parameter.\n+\t(parse_re, parse_re2, parse_aext_reg): Only reduced registers\n+\tare allowed to use.\n+\tAll callers changed.\n+\t* nds32-asm.c (keyword_usr, keyword_sr): Updated.\n+\t(operand_fields): Add new fields.\n+\t(nds32_opcodes): Add new instructions.\n+\t(keyword_aridxi_mx): New keyword.\n+\t* nds32-asm.h (enum): Add NASM_ATTR_DSP_ISAEXT, HW_AEXT_ARIDXI_MX\n+\tand NASM_ATTR_ZOL.\n+\t(ALU2_1, ALU2_2, ALU2_3): New macros.\n+\t* nds32-dis.c (nds32_filter_unknown_insn): Updated.\n+\n+2018-09-17  Kito Cheng  <kito@andestech.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Adjust the order of ble and bleu.\n+\n+2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23670\n+\t* i386-dis-evex.h (evex_table): Use EVEX_LEN_0F6E_P_2,\n+\tEVEX_LEN_0F7E_P_1, EVEX_LEN_0F7E_P_2 and EVEX_LEN_0FD6_P_2.\n+\t(EVEX_LEN_0F6E_P_2): New EVEX_LEN_TABLE entry.\n+\t(EVEX_LEN_0F7E_P_1): Likewise.\n+\t(EVEX_LEN_0F7E_P_2): Likewise.\n+\t(EVEX_LEN_0FD6_P_2): Likewise.\n+\t* i386-dis.c (USE_EVEX_LEN_TABLE): New.\n+\t(EVEX_LEN_TABLE): Likewise.\n+\t(EVEX_LEN_0F6E_P_2): New enum.\n+\t(EVEX_LEN_0F7E_P_1): Likewise.\n+\t(EVEX_LEN_0F7E_P_2): Likewise.\n+\t(EVEX_LEN_0FD6_P_2): Likewise.\n+\t(evex_len_table): New.\n+\t(get_valid_dis386): Handle USE_EVEX_LEN_TABLE.\n+\t* i386-opc.tbl: Set EVex=2 on EVEX.128 only vmovd and vmovq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23665\n+\t* i386-dis.c (vex_len_table): Update VEX_LEN_0F6E_P_2 and\n+\tVEX_LEN_0F7E_P_2 entries.\n+\t* i386-opc.tbl: Set Vex=1 on VEX.128 only vmovd and vmovq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (VZERO_Fixup): Removed.\n+\t(VZERO): Likewise.\n+\t(VEX_LEN_0F10_P_1): Likewise.\n+\t(VEX_LEN_0F10_P_3): Likewise.\n+\t(VEX_LEN_0F11_P_1): Likewise.\n+\t(VEX_LEN_0F11_P_3): Likewise.\n+\t(VEX_LEN_0F2E_P_0): Likewise.\n+\t(VEX_LEN_0F2E_P_2): Likewise.\n+\t(VEX_LEN_0F2F_P_0): Likewise.\n+\t(VEX_LEN_0F2F_P_2): Likewise.\n+\t(VEX_LEN_0F51_P_1): Likewise.\n+\t(VEX_LEN_0F51_P_3): Likewise.\n+\t(VEX_LEN_0F52_P_1): Likewise.\n+\t(VEX_LEN_0F53_P_1): Likewise.\n+\t(VEX_LEN_0F58_P_1): Likewise.\n+\t(VEX_LEN_0F58_P_3): Likewise.\n+\t(VEX_LEN_0F59_P_1): Likewise.\n+\t(VEX_LEN_0F59_P_3): Likewise.\n+\t(VEX_LEN_0F5A_P_1): Likewise.\n+\t(VEX_LEN_0F5A_P_3): Likewise.\n+\t(VEX_LEN_0F5C_P_1): Likewise.\n+\t(VEX_LEN_0F5C_P_3): Likewise.\n+\t(VEX_LEN_0F5D_P_1): Likewise.\n+\t(VEX_LEN_0F5D_P_3): Likewise.\n+\t(VEX_LEN_0F5E_P_1): Likewise.\n+\t(VEX_LEN_0F5E_P_3): Likewise.\n+\t(VEX_LEN_0F5F_P_1): Likewise.\n+\t(VEX_LEN_0F5F_P_3): Likewise.\n+\t(VEX_LEN_0FC2_P_1): Likewise.\n+\t(VEX_LEN_0FC2_P_3): Likewise.\n+\t(VEX_LEN_0F3A0A_P_2): Likewise.\n+\t(VEX_LEN_0F3A0B_P_2): Likewise.\n+\t(VEX_W_0F10_P_0): Likewise.\n+\t(VEX_W_0F10_P_1): Likewise.\n+\t(VEX_W_0F10_P_2): Likewise.\n+\t(VEX_W_0F10_P_3): Likewise.\n+\t(VEX_W_0F11_P_0): Likewise.\n+\t(VEX_W_0F11_P_1): Likewise.\n+\t(VEX_W_0F11_P_2): Likewise.\n+\t(VEX_W_0F11_P_3): Likewise.\n+\t(VEX_W_0F12_P_0_M_0): Likewise.\n+\t(VEX_W_0F12_P_0_M_1): Likewise.\n+\t(VEX_W_0F12_P_1): Likewise.\n+\t(VEX_W_0F12_P_2): Likewise.\n+\t(VEX_W_0F12_P_3): Likewise.\n+\t(VEX_W_0F13_M_0): Likewise.\n+\t(VEX_W_0F14): Likewise.\n+\t(VEX_W_0F15): Likewise.\n+\t(VEX_W_0F16_P_0_M_0): Likewise.\n+\t(VEX_W_0F16_P_0_M_1): Likewise.\n+\t(VEX_W_0F16_P_1): Likewise.\n+\t(VEX_W_0F16_P_2): Likewise.\n+\t(VEX_W_0F17_M_0): Likewise.\n+\t(VEX_W_0F28): Likewise.\n+\t(VEX_W_0F29): Likewise.\n+\t(VEX_W_0F2B_M_0): Likewise.\n+\t(VEX_W_0F2E_P_0): Likewise.\n+\t(VEX_W_0F2E_P_2): Likewise.\n+\t(VEX_W_0F2F_P_0): Likewise.\n+\t(VEX_W_0F2F_P_2): Likewise.\n+\t(VEX_W_0F50_M_0): Likewise.\n+\t(VEX_W_0F51_P_0): Likewise.\n+\t(VEX_W_0F51_P_1): Likewise.\n+\t(VEX_W_0F51_P_2): Likewise.\n+\t(VEX_W_0F51_P_3): Likewise.\n+\t(VEX_W_0F52_P_0): Likewise.\n+\t(VEX_W_0F52_P_1): Likewise.\n+\t(VEX_W_0F53_P_0): Likewise.\n+\t(VEX_W_0F53_P_1): Likewise.\n+\t(VEX_W_0F58_P_0): Likewise.\n+\t(VEX_W_0F58_P_1): Likewise.\n+\t(VEX_W_0F58_P_2): Likewise.\n+\t(VEX_W_0F58_P_3): Likewise.\n+\t(VEX_W_0F59_P_0): Likewise.\n+\t(VEX_W_0F59_P_1): Likewise.\n+\t(VEX_W_0F59_P_2): Likewise.\n+\t(VEX_W_0F59_P_3): Likewise.\n+\t(VEX_W_0F5A_P_0): Likewise.\n+\t(VEX_W_0F5A_P_1): Likewise.\n+\t(VEX_W_0F5A_P_3): Likewise.\n+\t(VEX_W_0F5B_P_0): Likewise.\n+\t(VEX_W_0F5B_P_1): Likewise.\n+\t(VEX_W_0F5B_P_2): Likewise.\n+\t(VEX_W_0F5C_P_0): Likewise.\n+\t(VEX_W_0F5C_P_1): Likewise.\n+\t(VEX_W_0F5C_P_2): Likewise.\n+\t(VEX_W_0F5C_P_3): Likewise.\n+\t(VEX_W_0F5D_P_0): Likewise.\n+\t(VEX_W_0F5D_P_1): Likewise.\n+\t(VEX_W_0F5D_P_2): Likewise.\n+\t(VEX_W_0F5D_P_3): Likewise.\n+\t(VEX_W_0F5E_P_0): Likewise.\n+\t(VEX_W_0F5E_P_1): Likewise.\n+\t(VEX_W_0F5E_P_2): Likewise.\n+\t(VEX_W_0F5E_P_3): Likewise.\n+\t(VEX_W_0F5F_P_0): Likewise.\n+\t(VEX_W_0F5F_P_1): Likewise.\n+\t(VEX_W_0F5F_P_2): Likewise.\n+\t(VEX_W_0F5F_P_3): Likewise.\n+\t(VEX_W_0F60_P_2): Likewise.\n+\t(VEX_W_0F61_P_2): Likewise.\n+\t(VEX_W_0F62_P_2): Likewise.\n+\t(VEX_W_0F63_P_2): Likewise.\n+\t(VEX_W_0F64_P_2): Likewise.\n+\t(VEX_W_0F65_P_2): Likewise.\n+\t(VEX_W_0F66_P_2): Likewise.\n+\t(VEX_W_0F67_P_2): Likewise.\n+\t(VEX_W_0F68_P_2): Likewise.\n+\t(VEX_W_0F69_P_2): Likewise.\n+\t(VEX_W_0F6A_P_2): Likewise.\n+\t(VEX_W_0F6B_P_2): Likewise.\n+\t(VEX_W_0F6C_P_2): Likewise.\n+\t(VEX_W_0F6D_P_2): Likewise.\n+\t(VEX_W_0F6F_P_1): Likewise.\n+\t(VEX_W_0F6F_P_2): Likewise.\n+\t(VEX_W_0F70_P_1): Likewise.\n+\t(VEX_W_0F70_P_2): Likewise.\n+\t(VEX_W_0F70_P_3): Likewise.\n+\t(VEX_W_0F71_R_2_P_2): Likewise.\n+\t(VEX_W_0F71_R_4_P_2): Likewise.\n+\t(VEX_W_0F71_R_6_P_2): Likewise.\n+\t(VEX_W_0F72_R_2_P_2): Likewise.\n+\t(VEX_W_0F72_R_4_P_2): Likewise.\n+\t(VEX_W_0F72_R_6_P_2): Likewise.\n+\t(VEX_W_0F73_R_2_P_2): Likewise.\n+\t(VEX_W_0F73_R_3_P_2): Likewise.\n+\t(VEX_W_0F73_R_6_P_2): Likewise.\n+\t(VEX_W_0F73_R_7_P_2): Likewise.\n+\t(VEX_W_0F74_P_2): Likewise.\n+\t(VEX_W_0F75_P_2): Likewise.\n+\t(VEX_W_0F76_P_2): Likewise.\n+\t(VEX_W_0F77_P_0): Likewise.\n+\t(VEX_W_0F7C_P_2): Likewise.\n+\t(VEX_W_0F7C_P_3): Likewise.\n+\t(VEX_W_0F7D_P_2): Likewise.\n+\t(VEX_W_0F7D_P_3): Likewise.\n+\t(VEX_W_0F7E_P_1): Likewise.\n+\t(VEX_W_0F7F_P_1): Likewise.\n+\t(VEX_W_0F7F_P_2): Likewise.\n+\t(VEX_W_0FAE_R_2_M_0): Likewise.\n+\t(VEX_W_0FAE_R_3_M_0): Likewise.\n+\t(VEX_W_0FC2_P_0): Likewise.\n+\t(VEX_W_0FC2_P_1): Likewise.\n+\t(VEX_W_0FC2_P_2): Likewise.\n+\t(VEX_W_0FC2_P_3): Likewise.\n+\t(VEX_W_0FD0_P_2): Likewise.\n+\t(VEX_W_0FD0_P_3): Likewise.\n+\t(VEX_W_0FD1_P_2): Likewise.\n+\t(VEX_W_0FD2_P_2): Likewise.\n+\t(VEX_W_0FD3_P_2): Likewise.\n+\t(VEX_W_0FD4_P_2): Likewise.\n+\t(VEX_W_0FD5_P_2): Likewise.\n+\t(VEX_W_0FD6_P_2): Likewise.\n+\t(VEX_W_0FD7_P_2_M_1): Likewise.\n+\t(VEX_W_0FD8_P_2): Likewise.\n+\t(VEX_W_0FD9_P_2): Likewise.\n+\t(VEX_W_0FDA_P_2): Likewise.\n+\t(VEX_W_0FDB_P_2): Likewise.\n+\t(VEX_W_0FDC_P_2): Likewise.\n+\t(VEX_W_0FDD_P_2): Likewise.\n+\t(VEX_W_0FDE_P_2): Likewise.\n+\t(VEX_W_0FDF_P_2): Likewise.\n+\t(VEX_W_0FE0_P_2): Likewise.\n+\t(VEX_W_0FE1_P_2): Likewise.\n+\t(VEX_W_0FE2_P_2): Likewise.\n+\t(VEX_W_0FE3_P_2): Likewise.\n+\t(VEX_W_0FE4_P_2): Likewise.\n+\t(VEX_W_0FE5_P_2): Likewise.\n+\t(VEX_W_0FE6_P_1): Likewise.\n+\t(VEX_W_0FE6_P_2): Likewise.\n+\t(VEX_W_0FE6_P_3): Likewise.\n+\t(VEX_W_0FE7_P_2_M_0): Likewise.\n+\t(VEX_W_0FE8_P_2): Likewise.\n+\t(VEX_W_0FE9_P_2): Likewise.\n+\t(VEX_W_0FEA_P_2): Likewise.\n+\t(VEX_W_0FEB_P_2): Likewise.\n+\t(VEX_W_0FEC_P_2): Likewise.\n+\t(VEX_W_0FED_P_2): Likewise.\n+\t(VEX_W_0FEE_P_2): Likewise.\n+\t(VEX_W_0FEF_P_2): Likewise.\n+\t(VEX_W_0FF0_P_3_M_0): Likewise.\n+\t(VEX_W_0FF1_P_2): Likewise.\n+\t(VEX_W_0FF2_P_2): Likewise.\n+\t(VEX_W_0FF3_P_2): Likewise.\n+\t(VEX_W_0FF4_P_2): Likewise.\n+\t(VEX_W_0FF5_P_2): Likewise.\n+\t(VEX_W_0FF6_P_2): Likewise.\n+\t(VEX_W_0FF7_P_2): Likewise.\n+\t(VEX_W_0FF8_P_2): Likewise.\n+\t(VEX_W_0FF9_P_2): Likewise.\n+\t(VEX_W_0FFA_P_2): Likewise.\n+\t(VEX_W_0FFB_P_2): Likewise.\n+\t(VEX_W_0FFC_P_2): Likewise.\n+\t(VEX_W_0FFD_P_2): Likewise.\n+\t(VEX_W_0FFE_P_2): Likewise.\n+\t(VEX_W_0F3800_P_2): Likewise.\n+\t(VEX_W_0F3801_P_2): Likewise.\n+\t(VEX_W_0F3802_P_2): Likewise.\n+\t(VEX_W_0F3803_P_2): Likewise.\n+\t(VEX_W_0F3804_P_2): Likewise.\n+\t(VEX_W_0F3805_P_2): Likewise.\n+\t(VEX_W_0F3806_P_2): Likewise.\n+\t(VEX_W_0F3807_P_2): Likewise.\n+\t(VEX_W_0F3808_P_2): Likewise.\n+\t(VEX_W_0F3809_P_2): Likewise.\n+\t(VEX_W_0F380A_P_2): Likewise.\n+\t(VEX_W_0F380B_P_2): Likewise.\n+\t(VEX_W_0F3817_P_2): Likewise.\n+\t(VEX_W_0F381C_P_2): Likewise.\n+\t(VEX_W_0F381D_P_2): Likewise.\n+\t(VEX_W_0F381E_P_2): Likewise.\n+\t(VEX_W_0F3820_P_2): Likewise.\n+\t(VEX_W_0F3821_P_2): Likewise.\n+\t(VEX_W_0F3822_P_2): Likewise.\n+\t(VEX_W_0F3823_P_2): Likewise.\n+\t(VEX_W_0F3824_P_2): Likewise.\n+\t(VEX_W_0F3825_P_2): Likewise.\n+\t(VEX_W_0F3828_P_2): Likewise.\n+\t(VEX_W_0F3829_P_2): Likewise.\n+\t(VEX_W_0F382A_P_2_M_0): Likewise.\n+\t(VEX_W_0F382B_P_2): Likewise.\n+\t(VEX_W_0F3830_P_2): Likewise.\n+\t(VEX_W_0F3831_P_2): Likewise.\n+\t(VEX_W_0F3832_P_2): Likewise.\n+\t(VEX_W_0F3833_P_2): Likewise.\n+\t(VEX_W_0F3834_P_2): Likewise.\n+\t(VEX_W_0F3835_P_2): Likewise.\n+\t(VEX_W_0F3837_P_2): Likewise.\n+\t(VEX_W_0F3838_P_2): Likewise.\n+\t(VEX_W_0F3839_P_2): Likewise.\n+\t(VEX_W_0F383A_P_2): Likewise.\n+\t(VEX_W_0F383B_P_2): Likewise.\n+\t(VEX_W_0F383C_P_2): Likewise.\n+\t(VEX_W_0F383D_P_2): Likewise.\n+\t(VEX_W_0F383E_P_2): Likewise.\n+\t(VEX_W_0F383F_P_2): Likewise.\n+\t(VEX_W_0F3840_P_2): Likewise.\n+\t(VEX_W_0F3841_P_2): Likewise.\n+\t(VEX_W_0F38DB_P_2): Likewise.\n+\t(VEX_W_0F3A08_P_2): Likewise.\n+\t(VEX_W_0F3A09_P_2): Likewise.\n+\t(VEX_W_0F3A0A_P_2): Likewise.\n+\t(VEX_W_0F3A0B_P_2): Likewise.\n+\t(VEX_W_0F3A0C_P_2): Likewise.\n+\t(VEX_W_0F3A0D_P_2): Likewise.\n+\t(VEX_W_0F3A0E_P_2): Likewise.\n+\t(VEX_W_0F3A0F_P_2): Likewise.\n+\t(VEX_W_0F3A21_P_2): Likewise.\n+\t(VEX_W_0F3A40_P_2): Likewise.\n+\t(VEX_W_0F3A41_P_2): Likewise.\n+\t(VEX_W_0F3A42_P_2): Likewise.\n+\t(VEX_W_0F3A62_P_2): Likewise.\n+\t(VEX_W_0F3A63_P_2): Likewise.\n+\t(VEX_W_0F3ADF_P_2): Likewise.\n+\t(VEX_LEN_0F77_P_0): New.\n+\t(prefix_table): Update PREFIX_VEX_0F10, PREFIX_VEX_0F11,\n+\tPREFIX_VEX_0F12, PREFIX_VEX_0F16, PREFIX_VEX_0F2E,\n+\tPREFIX_VEX_0F2F, PREFIX_VEX_0F51, PREFIX_VEX_0F52,\n+\tPREFIX_VEX_0F53, PREFIX_VEX_0F58, PREFIX_VEX_0F59,\n+\tPREFIX_VEX_0F5A, PREFIX_VEX_0F5B, PREFIX_VEX_0F5C,\n+\tPREFIX_VEX_0F5D, PREFIX_VEX_0F5E, PREFIX_VEX_0F5F,\n+\tPREFIX_VEX_0F60, PREFIX_VEX_0F61, PREFIX_VEX_0F62,\n+\tPREFIX_VEX_0F63, PREFIX_VEX_0F64, PREFIX_VEX_0F65,\n+\tPREFIX_VEX_0F66, PREFIX_VEX_0F67, PREFIX_VEX_0F68,\n+\tPREFIX_VEX_0F69, PREFIX_VEX_0F6A, PREFIX_VEX_0F6B,\n+\tPREFIX_VEX_0F6C, PREFIX_VEX_0F6D, PREFIX_VEX_0F6F,\n+\tPREFIX_VEX_0F70, PREFIX_VEX_0F71_REG_2, PREFIX_VEX_0F71_REG_4,\n+\tPREFIX_VEX_0F71_REG_6, PREFIX_VEX_0F72_REG_4,\n+\tPREFIX_VEX_0F72_REG_6, PREFIX_VEX_0F73_REG_2,\n+\tPREFIX_VEX_0F73_REG_3, PREFIX_VEX_0F73_REG_6,\n+\tPREFIX_VEX_0F73_REG_7, PREFIX_VEX_0F74, PREFIX_VEX_0F75,\n+\tPREFIX_VEX_0F76, PREFIX_VEX_0F77, PREFIX_VEX_0F7C,\n+\tPREFIX_VEX_0F7D, PREFIX_VEX_0F7F, PREFIX_VEX_0FC2,\n+\tPREFIX_VEX_0FD0, PREFIX_VEX_0FD1, PREFIX_VEX_0FD2,\n+\tPREFIX_VEX_0FD3, PREFIX_VEX_0FD4, PREFIX_VEX_0FD5,\n+\tPREFIX_VEX_0FD8, PREFIX_VEX_0FD9, PREFIX_VEX_0FDA,\n+\tPREFIX_VEX_0FDC, PREFIX_VEX_0FDD, PREFIX_VEX_0FDE,\n+\tPREFIX_VEX_0FDF, PREFIX_VEX_0FE0, PREFIX_VEX_0FE1,\n+\tPREFIX_VEX_0FE2, PREFIX_VEX_0FE3, PREFIX_VEX_0FE4,\n+\tPREFIX_VEX_0FE5, PREFIX_VEX_0FE6, PREFIX_VEX_0FE8,\n+\tPREFIX_VEX_0FE9, PREFIX_VEX_0FEA, PREFIX_VEX_0FEB,\n+\tPREFIX_VEX_0FEC, PREFIX_VEX_0FED, PREFIX_VEX_0FEE,\n+\tPREFIX_VEX_0FEF, PREFIX_VEX_0FF1. PREFIX_VEX_0FF2,\n+\tPREFIX_VEX_0FF3, PREFIX_VEX_0FF4, PREFIX_VEX_0FF5,\n+\tPREFIX_VEX_0FF6, PREFIX_VEX_0FF8, PREFIX_VEX_0FF9,\n+\tPREFIX_VEX_0FFA, PREFIX_VEX_0FFB, PREFIX_VEX_0FFC,\n+\tPREFIX_VEX_0FFD, PREFIX_VEX_0FFE, PREFIX_VEX_0F3800,\n+\tPREFIX_VEX_0F3801, PREFIX_VEX_0F3802, PREFIX_VEX_0F3803,\n+\tPREFIX_VEX_0F3804, PREFIX_VEX_0F3805, PREFIX_VEX_0F3806,\n+\tPREFIX_VEX_0F3807, PREFIX_VEX_0F3808, PREFIX_VEX_0F3809,\n+\tPREFIX_VEX_0F380A, PREFIX_VEX_0F380B, PREFIX_VEX_0F3817,\n+\tPREFIX_VEX_0F381C, PREFIX_VEX_0F381D, PREFIX_VEX_0F381E,\n+\tPREFIX_VEX_0F3820, PREFIX_VEX_0F3821, PREFIX_VEX_0F3822,\n+\tPREFIX_VEX_0F3823, PREFIX_VEX_0F3824, PREFIX_VEX_0F3825,\n+\tPREFIX_VEX_0F3828, PREFIX_VEX_0F3829, PREFIX_VEX_0F382B,\n+\tPREFIX_VEX_0F382C, PREFIX_VEX_0F3831, PREFIX_VEX_0F3832,\n+\tPREFIX_VEX_0F3833, PREFIX_VEX_0F3834, PREFIX_VEX_0F3835,\n+\tPREFIX_VEX_0F3837, PREFIX_VEX_0F3838, PREFIX_VEX_0F3839,\n+\tPREFIX_VEX_0F383A, PREFIX_VEX_0F383B, PREFIX_VEX_0F383C,\n+\tPREFIX_VEX_0F383D, PREFIX_VEX_0F383E, PREFIX_VEX_0F383F,\n+\tPREFIX_VEX_0F3840, PREFIX_VEX_0F3A08, PREFIX_VEX_0F3A09,\n+\tPREFIX_VEX_0F3A0A, PREFIX_VEX_0F3A0B, PREFIX_VEX_0F3A0C,\n+\tPREFIX_VEX_0F3A0D, PREFIX_VEX_0F3A0E, PREFIX_VEX_0F3A0F,\n+\tPREFIX_VEX_0F3A40 and PREFIX_VEX_0F3A42 entries.\n+\t(vex_table): Update VEX 0F28 and 0F29 entries.\n+\t(vex_len_table): Update VEX_LEN_0F10_P_1, VEX_LEN_0F10_P_3,\n+\tVEX_LEN_0F11_P_1, VEX_LEN_0F11_P_3, VEX_LEN_0F2E_P_0,\n+\tVEX_LEN_0F2E_P_2, VEX_LEN_0F2F_P_0, VEX_LEN_0F2F_P_2,\n+\tVEX_LEN_0F51_P_1, VEX_LEN_0F51_P_3, VEX_LEN_0F52_P_1,\n+\tVEX_LEN_0F53_P_1, VEX_LEN_0F58_P_1, VEX_LEN_0F58_P_3,\n+\tVEX_LEN_0F59_P_1, VEX_LEN_0F59_P_3, VEX_LEN_0F5A_P_1,\n+\tVEX_LEN_0F5A_P_3, VEX_LEN_0F5C_P_1, VEX_LEN_0F5C_P_3,\n+\tVEX_LEN_0F5D_P_1, VEX_LEN_0F5D_P_3, VEX_LEN_0F5E_P_1,\n+\tVEX_LEN_0F5E_P_3, VEX_LEN_0F5F_P_1, VEX_LEN_0F5F_P_3,\n+\tVEX_LEN_0FC2_P_1, VEX_LEN_0FC2_P_3, VEX_LEN_0F3A0A_P_2 and\n+\tVEX_LEN_0F3A0B_P_2 entries.\n+\t(vex_w_table): Remove VEX_W_0F10_P_0, VEX_W_0F10_P_1,\n+\tVEX_W_0F10_P_2, VEX_W_0F10_P_3, VEX_W_0F11_P_0, VEX_W_0F11_P_1,\n+\tVEX_W_0F11_P_2, VEX_W_0F11_P_3, VEX_W_0F12_P_0_M_0,\n+\tVEX_W_0F12_P_0_M_1, VEX_W_0F12_P_1, VEX_W_0F12_P_2,\n+\tVEX_W_0F12_P_3, VEX_W_0F13_M_0, VEX_W_0F14, VEX_W_0F15,\n+\tVEX_W_0F16_P_0_M_0, VEX_W_0F16_P_0_M_1, VEX_W_0F16_P_1,\n+\tVEX_W_0F16_P_2, VEX_W_0F17_M_0, VEX_W_0F28, VEX_W_0F29,\n+\tVEX_W_0F2B_M_0, VEX_W_0F2E_P_0, VEX_W_0F2E_P_2, VEX_W_0F2F_P_0,\n+\tVEX_W_0F2F_P_2, VEX_W_0F50_M_0, VEX_W_0F51_P_0, VEX_W_0F51_P_1,\n+\tVEX_W_0F51_P_2, VEX_W_0F51_P_3, VEX_W_0F52_P_0, VEX_W_0F52_P_1,\n+\tVEX_W_0F53_P_0, VEX_W_0F53_P_1, VEX_W_0F58_P_0, VEX_W_0F58_P_1,\n+\tVEX_W_0F58_P_2, VEX_W_0F58_P_3, VEX_W_0F59_P_0, VEX_W_0F59_P_1,\n+\tVEX_W_0F59_P_2, VEX_W_0F59_P_3, VEX_W_0F5A_P_0, VEX_W_0F5A_P_1,\n+\tVEX_W_0F5A_P_3, VEX_W_0F5B_P_0, VEX_W_0F5B_P_1, VEX_W_0F5B_P_2,\n+\tVEX_W_0F5C_P_0, VEX_W_0F5C_P_1, VEX_W_0F5C_P_2, VEX_W_0F5C_P_3,\n+\tVEX_W_0F5D_P_0, VEX_W_0F5D_P_1, VEX_W_0F5D_P_2, VEX_W_0F5D_P_3,\n+\tVEX_W_0F5E_P_0, VEX_W_0F5E_P_1, VEX_W_0F5E_P_2, VEX_W_0F5E_P_3,\n+\tVEX_W_0F5F_P_0, VEX_W_0F5F_P_1, VEX_W_0F5F_P_2, VEX_W_0F5F_P_3,\n+\tVEX_W_0F60_P_2, VEX_W_0F61_P_2, VEX_W_0F62_P_2, VEX_W_0F63_P_2,\n+\tVEX_W_0F64_P_2, VEX_W_0F65_P_2, VEX_W_0F66_P_2, VEX_W_0F67_P_2,\n+\tVEX_W_0F68_P_2, VEX_W_0F69_P_2, VEX_W_0F6A_P_2, VEX_W_0F6B_P_2,\n+\tVEX_W_0F6C_P_2, VEX_W_0F6D_P_2, VEX_W_0F6F_P_1, VEX_W_0F6F_P_2,\n+\tVEX_W_0F70_P_1, VEX_W_0F70_P_2, VEX_W_0F70_P_3,\n+\tVEX_W_0F71_R_2_P_2, VEX_W_0F71_R_4_P_2, VEX_W_0F71_R_6_P_2,\n+\tVEX_W_0F72_R_2_P_2, VEX_W_0F72_R_4_P_2, VEX_W_0F72_R_6_P_2,\n+\tVEX_W_0F73_R_2_P_2, VEX_W_0F73_R_3_P_2, VEX_W_0F73_R_6_P_2,\n+\tVEX_W_0F73_R_7_P_2, VEX_W_0F74_P_2, VEX_W_0F75_P_2,\n+\tVEX_W_0F76_P_2, VEX_W_0F77_P_0, VEX_W_0F7C_P_2, VEX_W_0F7C_P_3,\n+\tVEX_W_0F7D_P_2, VEX_W_0F7D_P_3, VEX_W_0F7E_P_1, VEX_W_0F7F_P_1,\n+\tVEX_W_0F7F_P_2, VEX_W_0FAE_R_2_M_0, VEX_W_0FAE_R_3_M_0,\n+\tVEX_W_0FC2_P_0, VEX_W_0FC2_P_1, VEX_W_0FC2_P_2, VEX_W_0FC2_P_3,\n+\tVEX_W_0FD0_P_2, VEX_W_0FD0_P_3, VEX_W_0FD1_P_2, VEX_W_0FD2_P_2,\n+\tVEX_W_0FD3_P_2, VEX_W_0FD4_P_2, VEX_W_0FD5_P_2, VEX_W_0FD6_P_2,\n+\tVEX_W_0FD7_P_2_M_1, VEX_W_0FD8_P_2, VEX_W_0FD9_P_2,\n+\tVEX_W_0FDA_P_2, VEX_W_0FDB_P_2, VEX_W_0FDC_P_2, VEX_W_0FDD_P_2,\n+\tVEX_W_0FDE_P_2, VEX_W_0FDF_P_2, VEX_W_0FE0_P_2, VEX_W_0FE1_P_2,\n+\tVEX_W_0FE2_P_2, VEX_W_0FE3_P_2, VEX_W_0FE4_P_2, VEX_W_0FE5_P_2,\n+\tVEX_W_0FE6_P_1, VEX_W_0FE6_P_2, VEX_W_0FE6_P_3,\n+\tVEX_W_0FE7_P_2_M_0, VEX_W_0FE8_P_2, VEX_W_0FE9_P_2,\n+\tVEX_W_0FEA_P_2, VEX_W_0FEB_P_2, VEX_W_0FEC_P_2, VEX_W_0FED_P_2,\n+\tVEX_W_0FEE_P_2, VEX_W_0FEF_P_2, VEX_W_0FF0_P_3_M_0,\n+\tVEX_W_0FF1_P_2, VEX_W_0FF2_P_2, VEX_W_0FF3_P_2, VEX_W_0FF4_P_2,\n+\tVEX_W_0FF5_P_2, VEX_W_0FF6_P_2, VEX_W_0FF7_P_2, VEX_W_0FF8_P_2,\n+\tVEX_W_0FF9_P_2, VEX_W_0FFA_P_2, VEX_W_0FFB_P_2, VEX_W_0FFC_P_2,\n+\tVEX_W_0FFD_P_2, VEX_W_0FFE_P_2, VEX_W_0F3800_P_2,\n+\tVEX_W_0F3801_P_2, VEX_W_0F3802_P_2, VEX_W_0F3803_P_2,\n+\tVEX_W_0F3804_P_2, VEX_W_0F3805_P_2, VEX_W_0F3806_P_2,\n+\tVEX_W_0F3807_P_2, VEX_W_0F3808_P_2, VEX_W_0F3809_P_2,\n+\tVEX_W_0F380A_P_2, VEX_W_0F380B_P_2, VEX_W_0F3817_P_2,\n+\tVEX_W_0F381C_P_2, VEX_W_0F381D_P_2, VEX_W_0F381E_P_2,\n+\tVEX_W_0F3820_P_2, VEX_W_0F3821_P_2, VEX_W_0F3822_P_2,\n+\tVEX_W_0F3823_P_2, VEX_W_0F3824_P_2, VEX_W_0F3825_P_2,\n+\tVEX_W_0F3828_P_2, VEX_W_0F3829_P_2, VEX_W_0F382A_P_2_M_0,\n+\tVEX_W_0F382B_P_2, VEX_W_0F3830_P_2, VEX_W_0F3831_P_2,\n+\tVEX_W_0F3832_P_2, VEX_W_0F3833_P_2, VEX_W_0F3834_P_2,\n+\tVEX_W_0F3835_P_2, VEX_W_0F3837_P_2, VEX_W_0F3838_P_2,\n+\tVEX_W_0F3839_P_2, VEX_W_0F383A_P_2, VEX_W_0F383B_P_2,\n+\tVEX_W_0F383C_P_2, VEX_W_0F383D_P_2, VEX_W_0F383E_P_2,\n+\tVEX_W_0F383F_P_2, VEX_W_0F3840_P_2, VEX_W_0F3841_P_2,\n+\tVEX_W_0F38DB_P_2, VEX_W_0F3A08_P_2, VEX_W_0F3A09_P_2,\n+\tVEX_W_0F3A0A_P_2, VEX_W_0F3A0B_P_2, VEX_W_0F3A0C_P_2,\n+\tVEX_W_0F3A0D_P_2, VEX_W_0F3A0E_P_2, VEX_W_0F3A0F_P_2,\n+\tVEX_W_0F3A21_P_2, VEX_W_0F3A40_P_2, VEX_W_0F3A41_P_2,\n+\tVEX_W_0F3A42_P_2, VEX_W_0F3A62_P_2, VEX_W_0F3A63_P_2 and\n+\tVEX_W_0F3ADF_P_2 entries.\n+\t(mod_table): Update MOD_VEX_0F2B, MOD_VEX_0F50,\n+\tMOD_VEX_0FD7_PREFIX_2, MOD_VEX_0FE7_PREFIX_2,\n+\tMOD_VEX_0FF0_PREFIX_3 and MOD_VEX_0F382A_PREFIX_2 entries.\n+\n+2018-09-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl (VexWIG): New.\n+\tReplace VexW=3 with VexWIG.\n+\n+2018-09-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Set VexW=3 on AVX vrsqrtss.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23665\n+\t* i386-dis.c (vex_len_table): Update VEX_LEN_0F7E_P_1 and\n+\tVEX_LEN_0FD6_P_2 entries.\n+\t* i386-opc.tbl: Set Vex=1 on VEX.128 only vmovq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23642\n+\t* i386-opc.h (VEXWIG): New.\n+\t* i386-opc.tbl: Set VexW=3 on VEX/EVEX WIG instructions.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23655\n+\t* i386-dis-evex.h: Replace EXxEVexR with EXxEVexR64 for\n+\tvcvtsi2sd%LQ and vcvtusi2sd%LQ.\n+\t* i386-dis.c (EXxEVexR64): New.\n+\t(evex_rounding_64_mode): Likewise.\n+\t(OP_Rounding): Handle evex_rounding_64_mode.\n+\n+2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23655\n+\t* i386-dis-evex.h (evex_table): Replace Eq with Edqa for\n+\tvcvtsi2ss%LQ, vcvtsi2sd%LQ, vcvtusi2ss%LQ and vcvtusi2sd%LQ.\n+\t* i386-dis.c (Edqa): New.\n+\t(dqa_mode): Likewise.\n+\t(intel_operand_size): Handle dqa_mode as m_mode.\n+\t(OP_E_register): Handle dqa_mode as dq_mode.\n+\t(OP_E_memory): Set shift for dqa_mode based on address_mode.\n+\n+2018-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (OP_E_memory): Reformat.\n+\n+2018-09-14  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (crc32): Fold byte and word forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Add VexW=1 to VEX.W0 VEX movd, cvtsi2ss, cvtsi2sd,\n+\tpextrd, pinsrd, vcvtsi2sd, vcvtsi2ss, vmovd, vpextrd and vpinsrd.\n+\tAdd VexW=2 to VEX.W1 VEX movq, pextrq, pinsrq, vmovq, vpextrq and\n+\tvpinsrq.  Remove VexW=1 from WIG VEX movq and vmovq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (mov, movq, movdir64b): Drop IgnoreSize where\n+\tmeaningless.\n+\t(invept, invvpid, vcvtph2ps, vcvtps2ph, bndmov, xrstors,\n+\txrstors64, xsaves, xsaves64, xsavec, xsavec64, rdpid, incsspq,\n+\trdsspq, saveprevssp, setssbsy, endbr32, endbr64): Drop IgnoreSize.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512_4FMAPS and\n+\tAVX512_4VNNIW insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512DQ insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512BW insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512VL insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512ER insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX512F insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SHA insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from XOP and SSE4a insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX2 insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AVX insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from GNFI insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from PCLMUL/VPCLMUL insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from AES/VAES insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSE4.2 insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSE4.1 insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSSE3 insns where\n+\tmeaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSE3 insns where meaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSE2 insns where meaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop IgnoreSize from SSE insns where meaningless.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (crc32, incsspq, rdsspq): Drop Rex64.\n+\t(vpbroadcastw, rdpid): Drop NoRex64.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vmovsd, vmovss): Fold register form load and\n+\tstore templates, adding D.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (bndmov, kmovb, kmovd, kmovq, kmovw, movapd,\n+\tmovaps, movd, movdqa, movdqu, movhpd, movhps, movlpd, movlps,\n+\tmovq, movsd, movss, movupd, movups, vmovapd, vmovaps, vmovd,\n+\tvmovdqa, vmovdqa32, vmovdqa64, vmovdqu, vmovdqu16, vmovdqu32,\n+\tvmovdqu64, vmovdqu8, vmovq, vmovsd, vmovss, vmovupd, vmovups):\n+\tFold load and store templates where possible, adding D. Drop\n+\tIgnoreSize where it was pointlessly present. Drop redundant\n+\t*word.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-09-13  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (Mv_bnd, v_bndmk_mode): New.\n+\t(mod_table): Use Mv_bnd for bndldx, bndstx, and bndmk.\n+\t(intel_operand_size): Handle v_bndmk_mode.\n+\t(OP_E_memory): Likewise. Produce (bad) when also riprel.\n+\n+2018-09-08  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* disassemble.c (ARCH_s12z): Define if ARCH_all.\n+\n+2018-08-31  Kito Cheng  <kito@andestech.com>\n+\n+\t* riscv-opc.c (riscv_opcodes): Fix incorrect subset info for\n+\tcompressed floating point instructions.\n+\n+2018-08-30  Kito Cheng  <kito@andestech.com>\n+\n+\t* riscv-dis.c (riscv_disassemble_insn): Check XLEN by\n+\triscv_opcode.xlen_requirement.\n+\t* riscv-opc.c (riscv_opcodes): Update for struct change.\n+\n+2018-08-29  Martin Aberg  <maberg@gaisler.com>\n+\n+\t* sparc-opc.c (sparc_opcodes): Add Leon specific partial write\n+        psr (PWRPSR) instruction.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add gs264e descriptors.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add gs464e descriptors.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add gs464 descriptors, Keep\n+\tloongson3a as an alias of gs464 for compatibility.\n+\t* mips-opc.c (mips_opcodes): Change Comments.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips-dis.c (parse_mips_ase_option): Handle -M loongson-ext\n+\toption.\n+\t(print_mips_disassembler_options): Document -M loongson-ext.\n+\t* mips-opc.c (LEXT2): New macro.\n+\t(mips_opcodes): Add cto, ctz, dcto, dctz instructions.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t * mips-dis.c (mips_arch_choices): Add EXT to loongson3a\n+\t descriptors.\n+\t (parse_mips_ase_option): Handle -M loongson-ext option.\n+\t (print_mips_disassembler_options): Document -M loongson-ext.\n+\t * mips-opc.c (IL3A): Delete.\n+\t * mips-opc.c (LEXT): New macro.\n+\t (mips_opcodes): Replace IL2F|IL3A marking with LEXT for EXT\n+\t instructions.\n+\n+2018-08-29  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add CAM to loongson3a\n+\tdescriptors.\n+\t(parse_mips_ase_option): Handle -M loongson-cam option.\n+\t(print_mips_disassembler_options): Document -M loongson-cam.\n+\t* mips-opc.c (LCAM): New macro.\n+\t(mips_opcodes): Replace IL2F|IL3A marking with LCAM for CAM\n+\tinstructions.\n+\n+2018-08-21  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (operand_value_powerpc): Init \"invalid\".\n+\t(skip_optional_operands): Count optional operands, and update\n+\tppc_optional_operand_value call.\n+\t* ppc-opc.c (extract_dxdn): Remove ATTRIBUTE_UNUSED from used arg.\n+\t(extract_vlensi): Likewise.\n+\t(extract_fxm): Return default value for missing optional operand.\n+\t(extract_ls, extract_raq, extract_tbr): Likewise.\n+\t(insert_sxl, extract_sxl): New functions.\n+\t(insert_esync, extract_esync): Remove Power9 handling and simplify.\n+\t(powerpc_operands <FXM4, TBR>): Delete PPC_OPERAND_OPTIONAL_VALUE\n+\tflag and extra entry.\n+\t(powerpc_operands <SXL>): Likewise, and use insert_sxl and\n+\textract_sxl.\n+\n+2018-08-20  Alan Modra  <amodra@gmail.com>\n+\n+\t* sh-opc.h (MASK): Simplify.\n+\n+2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z-dis.c (bm_decode): Deal with cases where the mode is\n+\tBM_RESERVED0 or BM_RESERVED1\n+\t(bm_rel_decode, bm_n_bytes): Ditto.\n+\n+2018-08-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* s12z.h: Delete.\n+\n+2018-08-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (OP_E_memory): In 64-bit mode, display eiz for\n+\taddress with the addr32 prefix and without base nor index\n+\tregisters.\n+\n+2018-08-11  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Add CpuCMOV and CpuFXSR to\n+\tCPU_I686_FLAGS.  Add CPU_CMOV_FLAGS, CPU_FXSR_FLAGS,\n+\tCPU_ANY_CMOV_FLAGS and CPU_ANY_FXSR_FLAGS.\n+\t(cpu_flags): Add CpuCMOV and CpuFXSR.\n+\t* i386-opc.tbl: Replace Cpu686 with CpuFXSR on fxsave, fxsave64,\n+\tfxrstor and fxrstor64.  Replace Cpu686 with CpuCMOV on cmovCC.\n+\t* i386-init.h: Regenerated.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-08-06  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* arc-regs.h: Update auxiliary registers.\n+\n+2018-08-06  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h (RegRip, RegEip, RegEiz, RegRiz): Drop defines.\n+\t(RegIP, RegIZ): Define.\n+\t* i386-reg.tbl: Adjust comments.\n+\t(rip): Use Qword instead of BaseIndex. Use RegIP.\n+\t(eip): Use Dword instead of BaseIndex. Use RegIP.\n+\t(riz): Add Qword. Use RegIZ.\n+\t(eiz): Add Dword. Use RegIZ.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-08-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (pmovsxbw, pmovsxdq, pmovsxwd, pmovzxbw,\n+\tpmovzxdq, pmovzxwd, vpmovsxbw, vpmovsxdq, vpmovsxwd, vpmovzxbw,\n+\tvpmovzxdq, vpmovzxwd): Remove NoRex64.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-08-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_types): Remove Mem field.\n+\t* i386-opc.h (union i386_operand_type): Remove mem field.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2018-08-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-07-31  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/sv.po: Updated Swedish translation.\n+\n+2018-07-31  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (kandnd, kandnq, kxord, kxorq): Add Optimize.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2018-07-31  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h (ZEROING_MASKING) Rename to ...\n+\t(DYNAMIC_MASKING): ... this. Adjust comment.\n+\t* i386-opc.tbl (MaskingMorZ): Define.\n+\t(vcompresspd, vcompressps, vcvtps2ph, vextractf32x4,\n+\tvextractf32x8, vextractf64x2, vextractf64x4, vextracti32x4,\n+\tvextracti32x8, vextracti64x2, vextracti64x4, vmovapd, vmovaps,\n+\tvmovdqa32, vmovdqa64, vmovdqu8, vmovdqu16, vmovdqu32, vmovdqu64,\n+\tvmovupd, vmovups, vpcompressb, vpcompressw, vpcompressd,\n+\tvpcompressq, vpmovdb, vpmovdw, vpmovqb, vpmovqd, vpmovqw,\n+\tvpmovsdb, vpmovsdw, vpmovsqb, vpmovsqd, vpmovsqw, vpmovswb,\n+\tvpmovusdb, vpmovusdw, vpmovusqb, vpmovusqd, vpmovusqw,\n+\tvpmovuswb, vpmovwb): Fold AVX512 register and memory forms.\n+\n+2018-07-31  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Use element rather than vector size for AVX512*\n+\tscatter/gather insns.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-31  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Drop CpuVREX uses.\n+\t(cpu_flags): Drop CpuVREX.\n+\t* i386-opc.h (CpuVREX): Delete.\n+\t(union i386_cpu_flags): Remove cpuvrex.\n+\t* i386-init.h, i386-tbl.h: Re-generate.\n+\n+2018-07-30  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-dis.c (riscv_disassemble_insn): Set insn_type and data_size\n+\tfields.\n+\t* riscv-opc.c (riscv_opcodes): Use new INSN_* flags to annotate insns.\n+\n+2018-07-30  Andrew Jenner  <andrew@codesourcery.com>\n+\n+\t* Makefile.am (TARGET_LIBOPCODES_CFILES): Add csky-dis.c.\n+\t* Makefile.in: Regenerated.\n+\t* configure.ac: Add C-SKY.\n+\t* configure: Regenerated.\n+\t* csky-dis.c: New file.\n+\t* csky-opc.h: New file.\n+\t* disassemble.c (ARCH_csky): Define.\n+\t(disassembler, disassemble_init_for_target): Add case for ARCH_csky.\n+\t* disassemble.h (print_insn_csky, csky_get_disassembler): Declare.\n+\n+2018-07-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-opc.c (insert_sprbat): Correct function parameter and\n+\treturn type.\n+\t(extract_sprbat): Likewise, variable too.\n+\n+2018-07-26  Alex Chadwick  <Alex.Chadwick@cl.cam.ac.uk>\n+\t    Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (ppc_opts): Add -mgekko and -mbroadway.\n+\t(powerpc_init_dialect): Handle bfd_mach_ppc_750.\n+\t* ppc-opc.c (insert_sprbat, extract_sprbat): New functions to\n+\tsupport disjointed BAT.\n+\t(powerpc_operands): Allow extra bit in SPRBAT_MASK.  Add SPRGQR.\n+\t(XSPRGQR_MASK, GEKKO, BROADWAY): Define.\n+\t(powerpc_opcodes): Add 750cl extended mnemonics for spr access.\n+\n+2018-07-25  H.J. Lu  <hongjiu.lu@intel.com>\n+\t    Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-gen.c (adjust_broadcast_modifier): New function.\n+\t(process_i386_opcode_modifier): Add an argument for operands.\n+\tAdjust the Broadcast value based on operands.\n+\t(output_i386_opcode): Pass operand_types to\n+\tprocess_i386_opcode_modifier.\n+\t(process_i386_opcodes): Pass NULL as operands to\n+\tprocess_i386_opcode_modifier.\n+\t* i386-opc.h (BYTE_BROADCAST): New.\n+\t(WORD_BROADCAST): Likewise.\n+\t(DWORD_BROADCAST): Likewise.\n+\t(QWORD_BROADCAST): Likewise.\n+\t(i386_opcode_modifier): Expand broadcast to 3 bits.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-07-24  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23430\n+\t* or1k-desc.h: Regenerate.\n+\n+2018-07-24  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis-evex.h (evex_table): Add %LQ to vcvtsi2ss, vcvtsi2sd,\n+\tvcvtusi2ss, and vcvtusi2sd.\n+\t* i386-opc.tbl (vcvtsi2sd, vcvtusi2sd, vcvtsi2ss, vcvtusi2ss):\n+\tConvert AVX512F variants to distinct CpuNo64 and Cpu64 forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-23  Claudiu Zissulescu <claziss@synopsys.com>\n+\n+\t* arc-opc.c (extract_w6): Fix extending the sign.\n+\n+2018-07-23  Claudiu Zissulescu <claziss@synopsys.com>\n+\n+\t* arc-tbl.h (vewt): Allow it for ARC EM family.\n+\n+2018-07-23  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 23419\n+\t* ppc-opc.c (powerpc_opcodes): Add mtupmc/mfupmc/mfpmc extended\n+\topcode variants for mtspr/mfspr encodings.\n+\n+2018-07-20  Chenghua Xu  <paul.hua.gm@gmail.com>\n+\t    Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add MMI to loongson2f and\n+\tloongson3a descriptors.\n+\t(parse_mips_ase_option): Handle -M loongson-mmi option.\n+\t(print_mips_disassembler_options): Document -M loongson-mmi.\n+\t* mips-opc.c (LMMI): New macro.\n+\t(mips_opcodes): Replace IL2F|IL3A marking with LMMI for MMI\n+\tinstructions.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vcvtpd2dq, vcvtpd2ps, vcvttpd2dq, vcvtpd2udq,\n+\tvcvtqq2ps, vcvtuqq2ps): Fold 128- and 256-bit templates. Drop\n+\tIgnoreSize and [XYZ]MMword where applicable.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vfpclasspd, vfpclassps): Fold.\n+\t(vfpclasspdz, vfpclasspsz): Drop IgnoreSize and ZmmWord.\n+\t(vfpclasspdx, vfpclasspsx): Drop IgnoreSize and XmmWord.\n+\t(vfpclasspdy, vfpclasspsy): Drop IgnoreSize and YmmWord.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Fold AVX512IFMA, AVX512VBMI, AVX512_VPOPCNTDQ,\n+\tAVX512_VBMI2, AVX512_VNNI, AVX512_BITALG, GFNI, VAES, and\n+\tVPCLMULQDQ templates into their respective AVX512VL counterparts\n+\twhere possible, using Disp8ShiftVL and CheckRegSize instead of\n+\tEvex= plus Disp8MemShift= (plus often IgnoreSize) as appropriate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Fold AVX512DQ templates into their respective\n+\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n+\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n+\tIgnoreSize) as appropriate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Fold AVX512BW templates into their respective\n+\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n+\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n+\tIgnoreSize) as appropriate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Fold AVX512CD templates into their respective\n+\tAVX512VL counterparts where possible, using Disp8ShiftVL and\n+\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n+\tIgnoreSize) as appropriate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h (DISP8_SHIFT_VL): New.\n+\t* i386-opc.tbl (Disp8ShiftVL):  Define.\n+\t(various): Fold AVX512VL templates into their respective\n+\tAVX512F counterparts where possible, using Disp8ShiftVL and\n+\tCheckRegSize instead of Evex= plus Disp8MemShift= (plus often\n+\tIgnoreSize) as appropriate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-19  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* Makefile.am: Change dependencies and rule for\n+\t$(srcdir)/i386-init.h.\n+\t* Makefile.in: Re-generate.\n+\t* i386-gen.c (process_i386_opcodes): New local variable\n+\t\"marker\". Drop opening of input file. Recognize marker and line\n+\tnumber directives.\n+\t* i386-opc.tbl (OPCODE_I386_H): Define.\n+\t(i386-opc.h): Include it.\n+\t(None): Undefine.\n+\n+2018-07-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/23418\n+\t* i386-opc.h (Byte): Update comments.\n+\t(Word): Likewise.\n+\t(Dword): Likewise.\n+\t(Fword): Likewise.\n+\t(Qword): Likewise.\n+\t(Tbyte): Likewise.\n+\t(Xmmword): Likewise.\n+\t(Ymmword): Likewise.\n+\t(Zmmword): Likewise.\n+\t* i386-opc.tbl: Split vcvtps2qq, vcvtps2uqq, vcvttps2qq and\n+\tvcvttps2uqq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-07-12  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add entry for\n+\tssbb and pssbb and update dsb flags to F_HAS_ALIAS.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-07-12  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23192\n+\t* aarch64-tbl.h (sqdmlal, sqdmlal2, smlsl, smlsl2, sqdmlsl, sqdmlsl2,\n+\tmul, smull, smull2, sqdmull, sqdmull2, sqdmulh, sqrdmulh, mla, umlal,\n+\tumlal2, mls, umlsl, umlsl2, umull, umull2, sqdmlal, sqdmlsl, sqdmull,\n+\tsqdmulh, sqrdmulh): Use Em16.\n+\n+2018-07-11  Sudakshina Das  <sudi.das@arm.com>\n+\n+\t* arm-dis.c (arm_opcodes): Add ssbb and pssbb and move\n+\tcsdb together with them.\n+\t(thumb32_opcodes): Likewise.\n+\n+2018-07-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (monitor, monitorx): Add 64-bit template\n+\trequiring 32-bit registers as operands 2 and 3. Improve\n+\tcomments.\n+\t(mwait, mwaitx): Fold templates. Improve comments.\n+\tOPERAND_TYPE_INOUTPORTREG.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Remove\n+\tOPERAND_TYPE_REG16_INOUTPORTREG entry and one instance of\n+\tOPERAND_TYPE_INOUTPORTREG.\n+\t* i386-init.h: Re-generate.\n+\n+2018-07-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (wrssd, wrussd): Add Dword.\n+\t(wrssq, wrussq): Add Qword.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-07-11  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h: Rename OTMax to OTNum.\n+\t(OTNumOfUints): Adjust calculation.\n+\t(OTUnused): Directly alias to OTNum.\n+\n+2018-07-09  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* s12z-dis.c (lea_reg_xys_opr): Rename `reg' local variable to\n+\t`reg_xys'.\n+\t(lea_reg_xys): Likewise.\n+\t(print_insn_loop_primitive): Rename `reg' local variable to\n+\t`reg_dxy'.\n+\n+2018-07-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23242\n+\t* aarch64-tbl.h (ldarh): Fix disassembly mask.\n+\n+2018-07-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23369\n+\t* aarch64-opc.c (aarch64_sys_regs): Make read/write csselr_el1,\n+\tvsesr_el2, osdtrrx_el1, osdtrtx_el1, pmsidr_el1.\n+\n+2018-07-02  Maciej W. Rozycki  <macro@mips.com>\n+\n+\tPR tdep/8282\n+\t* mips-dis.c (mips_option_arg_t): New enumeration.\n+\t(mips_options): New variable.\n+\t(disassembler_options_mips): New function.\n+\t(print_mips_disassembler_options): Reimplement in terms of\n+\t`disassembler_options_mips'.\n+\t* arm-dis.c (disassembler_options_arm): Adapt to using the\n+\t`disasm_options_and_args_t' structure.\n+\t* ppc-dis.c (disassembler_options_powerpc): Likewise.\n+\t* s390-dis.c (disassembler_options_s390): Likewise.\n+\n+2018-07-02  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* testsuite/ld-arm/tls-descrelax-be8.d: Add architecture version in\n+\texpected result.\n+\t* testsuite/ld-arm/tls-descrelax-v7.d: Likewise.\n+\t* testsuite/ld-arm/tls-longplt-lib.d: Likewise.\n+\t* testsuite/ld-arm/tls-longplt.d: Likewise.\n+\n+2018-06-29  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23192\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Likewise.\n+\t* aarch64-opc-2.c: Likewise.\n+\t* aarch64-dis.c (aarch64_ext_reglane): Add AARCH64_OPND_Em16 constraint.\n+\t* aarch64-opc.c (operand_general_constraint_met_p,\n+\taarch64_print_operand): Likewise.\n+\t* aarch64-tbl.h (aarch64_opcode_table): Change Em to Em16 for smlal,\n+\tsmlal2, fmla, fmls, fmul, fmulx, sqrdmlah, sqrdlsh, fmlal, fmlsl,\n+\tfmlal2, fmlsl2.\n+\t(AARCH64_OPERANDS): Add Em2.\n+\n+2018-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\t* po/de.po: Updated German translation.\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\n+2018-06-26  Nick Clifton  <nickc@redhat.com>\n+\n+\t* nfp-dis.c: Fix spelling mistake.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\t* po/opcodes.pot: Regenerate.\n+\n+2018-06-24  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.31 branch created.\n+\n+2018-06-19  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Fix alias flag for negs\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Likewise.\n+\n+2018-06-21  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* mips-dis.c (print_mips_disassembler_options): Fix a typo in\n+\t`-M ginv' option description.\n+\n+2018-06-20  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\tPR gas/23305\n+\t* riscv-opc.c (riscv_opcodes): Use new format specifier 'B' for\n+\tla and lla.\n+\n+2018-06-19  Simon Marchi  <simon.marchi@ericsson.com>\n+\n+\t* Makefile.am (AUTOMAKE_OPTIONS): Remove 1.11.\n+\t* configure.ac: Remove AC_PREREQ.\n+\t* Makefile.in: Re-generate.\n+\t* aclocal.m4: Re-generate.\n+\t* configure: Re-generate.\n+\n+2018-06-14  Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add GINV to mips32r6 and\n+\tmips64r6 descriptors.\n+\t(parse_mips_ase_option): Handle -Mginv option.\n+\t(print_mips_disassembler_options): Document -Mginv.\n+\t* mips-opc.c (decode_mips_operand) <+\\>: New operand format.\n+\t(GINV): New macro.\n+\t(mips_opcodes): Define ginvi and ginvt.\n+\n+2018-06-13  Scott Egerton  <scott.egerton@imgtec.com>\n+\t    Faraz Shahbazker  <Faraz.Shahbazker@mips.com>\n+\n+\t* mips-dis.c (mips_arch_choices): Add CRC and CRC64 ASEs.\n+\t* mips-opc.c (CRC, CRC64): New macros.\n+\t(mips_builtin_opcodes): Define crc32b, crc32h, crc32w,\n+\tcrc32cb, crc32ch and crc32cw for CRC.  Define crc32d and\n+\tcrc32cd for CRC64.\n+\n+2018-06-08  Egeyar Bagcioglu  <egeyar.bagcioglu@oracle.com>\n+\n+\tPR 20319\n+\t* aarch64-tbl.h: Introduce QL_INT2FP_FMOV and QL_FP2INT_FMOV.\n+\t(aarch64_opcode_table) : Use QL_INT2FP_FMOV and QL_FP2INT_FMOV.\n+\n+2018-06-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* xtensa-dis.c (print_insn_xtensa): Init fmt and valid_insn after\n+\tsetjmp.  Move init for some other vars later too.\n+\n+2018-06-04  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* xtensa-dis.c (bfd.h, elf/xtensa.h): New includes.\n+\t(dis_private): Add new fields for property section tracking.\n+\t(xtensa_coalesce_insn_tables, xtensa_find_table_entry)\n+\t(xtensa_instruction_fits): New functions.\n+\t(fetch_data): Bump minimal fetch size to 4.\n+\t(print_insn_xtensa): Make struct dis_private static.\n+\tLoad and prepare property table on section change.\n+\tDon't disassemble literals. Don't disassemble instructions that\n+\tcross property table boundaries.\n+\n+2018-06-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure: Regenerated.\n+\n+2018-06-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (mov, movq): Fold to/from SReg* forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-06-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (sldt, str): Add NoRex64.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-06-01  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (invpcid): Add Oword.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-06-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* sysdep.h (_bfd_error_handler): Don't declare.\n+\t* msp430-decode.opc: Include bfd.h.  Don't include ansidecl.h here.\n+\t* rl78-decode.opc: Likewise.\n+\t* msp430-decode.c: Regenerate.\n+\t* rl78-decode.c: Regenerate.\n+\n+2018-05-30  Amit Pawar <Amit.Pawar@amd.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Add CPU_ZNVER2_FLAGS.\n+\t* i386-init.h : Regenerated.\n+\n+2018-05-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-05-21  Peter Bergner  <bergner@vnet.ibm.com.com>\n+\n+\t* ppc-opc.c (insert_bat, extract_bat, insert_bba, extract_bba,\n+\tinsert_rbs, extract_rbs, insert_xb6s, extract_xb6s): Delete functions.\n+\t(insert_bab, extract_bab, insert_btab, extract_btab,\n+\tinsert_rsb, extract_rsb, insert_xab6, extract_xab6): New functions.\n+\t(BAT, BBA VBA RBS XB6S): Delete macros.\n+\t(BTAB, BAB, VAB, RAB, RSB, XAB6): New macros.\n+\t(BB, BD, RBX, XC6): Update for new macros.\n+\t(powerpc_opcodes) <evmr, evnot, vmr, vnot, crnot, crclr, crset,\n+\tcrmove, not, not., mr, mr., xxspltd, xxswapd, xvmovsp, xvmovdp,\n+\te_crnot, e_crclr, e_crset, e_crmove>: Likewise.\n+\t* ppc-dis.c (print_insn_powerpc): Delete handling of fake operands.\n+\n+2018-05-18  John Darrington  <john@darrington.wattle.id.au>\n+\n+\t* Makefile.am: Add support for s12z architecture.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* s12z-dis.c: New file.\n+\t* s12z.h: New file.\n+\n+2018-05-18  Alan Modra  <amodra@gmail.com>\n+\n+\t* nfp-dis.c: Don't #include libbfd.h.\n+\t(init_nfp3200_priv): Use bfd_get_section_contents.\n+\t(nit_nfp6000_mecsr_sec): Likewise.\n+\n+2018-05-17  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/zh_CN.po: Updated simplified Chinese translation.\n+\n+2018-05-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/23109\n+\t* aarch64-tbl.h (aarch64_opcode_table): Correct sdot and udot.\n+\t* aarch64-dis-2.c: Regenerate.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* aarch64-asm.c (opintl.h): Include.\n+\t(aarch64_ins_sysreg): Enforce read/write constraints.\n+\t* aarch64-dis.c (aarch64_ext_sysreg): Likewise.\n+\t* aarch64-opc.h (F_DEPRECATED, F_ARCHEXT, F_HASXT): Moved here.\n+\t(F_REG_READ, F_REG_WRITE): New.\n+\t* aarch64-opc.c (aarch64_print_operand): Generate notes for\n+\tAARCH64_OPND_SYSREG.\n+\t(F_DEPRECATED, F_ARCHEXT, F_HASXT): Move to aarch64-opc.h.\n+\t(aarch64_sys_regs): Add constraints to currentel, midr_el1, ctr_el0,\n+\tmpidr_el1, revidr_el1, aidr_el1, dczid_el0, id_dfr0_el1, id_pfr0_el1,\n+\tid_pfr1_el1, id_afr0_el1, id_mmfr0_el1, id_mmfr1_el1, id_mmfr2_el1,\n+\tid_mmfr3_el1, id_mmfr4_el1, id_isar0_el1, id_isar1_el1, id_isar2_el1,\n+\tid_isar3_el1, id_isar4_el1, id_isar5_el1, mvfr0_el1, mvfr1_el1,\n+\tmvfr2_el1, ccsidr_el1, id_aa64pfr0_el1, id_aa64pfr1_el1,\n+\tid_aa64dfr0_el1, id_aa64dfr1_el1, id_aa64isar0_el1, id_aa64isar1_el1,\n+\tid_aa64mmfr0_el1, id_aa64mmfr1_el1, id_aa64mmfr2_el1, id_aa64afr0_el1,\n+\tid_aa64afr0_el1, id_aa64afr1_el1, id_aa64zfr0_el1, clidr_el1,\n+\tcsselr_el1, vsesr_el2, erridr_el1, erxfr_el1, rvbar_el1, rvbar_el2,\n+\trvbar_el3, isr_el1, tpidrro_el0, cntfrq_el0, cntpct_el0, cntvct_el0,\n+\tmdccsr_el0, dbgdtrrx_el0, dbgdtrtx_el0, osdtrrx_el1, osdtrtx_el1,\n+\tmdrar_el1, oslar_el1, oslsr_el1, dbgauthstatus_el1, pmbidr_el1,\n+\tpmsidr_el1, pmswinc_el0, pmceid0_el0, pmceid1_el0.\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add constraints to\n+\tmsr (F_SYS_WRITE), mrs (F_SYS_READ).\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* aarch64-dis.c (no_notes: New.\n+\t(parse_aarch64_dis_option): Support notes.\n+\t(aarch64_decode_insn, print_operands): Likewise.\n+\t(print_aarch64_disassembler_options): Document notes.\n+\t* aarch64-opc.c (aarch64_print_operand): Support notes.\n+\n+2018-05-15  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR binutils/21446\n+\t* aarch64-asm.h (aarch64_insert_operand, aarch64_##x): Return boolean\n+\tand take error struct.\n+\t* aarch64-asm.c (aarch64_ext_regno, aarch64_ins_reglane,\n+\taarch64_ins_reglist, aarch64_ins_ldst_reglist,\n+\taarch64_ins_ldst_reglist_r, aarch64_ins_ldst_elemlist,\n+\taarch64_ins_advsimd_imm_shift, aarch64_ins_imm, aarch64_ins_imm_half,\n+\taarch64_ins_advsimd_imm_modified, aarch64_ins_fpimm,\n+\taarch64_ins_imm_rotate1, aarch64_ins_imm_rotate2, aarch64_ins_fbits,\n+\taarch64_ins_aimm, aarch64_ins_limm_1, aarch64_ins_limm,\n+\taarch64_ins_inv_limm, aarch64_ins_ft, aarch64_ins_addr_simple,\n+\taarch64_ins_addr_regoff, aarch64_ins_addr_offset, aarch64_ins_addr_simm,\n+\taarch64_ins_addr_simm10, aarch64_ins_addr_uimm12,\n+\taarch64_ins_simd_addr_post, aarch64_ins_cond, aarch64_ins_sysreg,\n+\taarch64_ins_pstatefield, aarch64_ins_sysins_op, aarch64_ins_barrier,\n+\taarch64_ins_prfop, aarch64_ins_hint, aarch64_ins_reg_extended,\n+\taarch64_ins_reg_shifted, aarch64_ins_sve_addr_ri_s4xvl,\n+\taarch64_ins_sve_addr_ri_s6xvl, aarch64_ins_sve_addr_ri_s9xvl,\n+\taarch64_ins_sve_addr_ri_s4, aarch64_ins_sve_addr_ri_u6,\n+\taarch64_ins_sve_addr_rr_lsl, aarch64_ins_sve_addr_rz_xtw,\n+\taarch64_ins_sve_addr_zi_u5, aarch64_ext_sve_addr_zz,\n+\taarch64_ins_sve_addr_zz_lsl, aarch64_ins_sve_addr_zz_sxtw,\n+\taarch64_ins_sve_addr_zz_uxtw, aarch64_ins_sve_aimm,\n+\taarch64_ins_sve_asimm, aarch64_ins_sve_index, aarch64_ins_sve_limm_mov,\n+\taarch64_ins_sve_quad_index, aarch64_ins_sve_reglist,\n+\taarch64_ins_sve_scale, aarch64_ins_sve_shlimm, aarch64_ins_sve_shrimm,\n+\taarch64_ins_sve_float_half_one, aarch64_ins_sve_float_half_two,\n+\taarch64_ins_sve_float_zero_one, aarch64_opcode_encode): Likewise.\n+\t* aarch64-dis.h (aarch64_extract_operand, aarch64_##x): Likewise.\n+\t* aarch64-dis.c (aarch64_ext_regno, aarch64_ext_reglane,\n+\taarch64_ext_reglist, aarch64_ext_ldst_reglist,\n+\taarch64_ext_ldst_reglist_r, aarch64_ext_ldst_elemlist,\n+\taarch64_ext_advsimd_imm_shift, aarch64_ext_imm, aarch64_ext_imm_half,\n+\taarch64_ext_advsimd_imm_modified, aarch64_ext_fpimm,\n+\taarch64_ext_imm_rotate1, aarch64_ext_imm_rotate2, aarch64_ext_fbits,\n+\taarch64_ext_aimm, aarch64_ext_limm_1, aarch64_ext_limm, decode_limm,\n+\taarch64_ext_inv_limm, aarch64_ext_ft, aarch64_ext_addr_simple,\n+\taarch64_ext_addr_regoff, aarch64_ext_addr_offset, aarch64_ext_addr_simm,\n+\taarch64_ext_addr_simm10, aarch64_ext_addr_uimm12,\n+\taarch64_ext_simd_addr_post, aarch64_ext_cond, aarch64_ext_sysreg,\n+\taarch64_ext_pstatefield, aarch64_ext_sysins_op, aarch64_ext_barrier,\n+\taarch64_ext_prfop, aarch64_ext_hint, aarch64_ext_reg_extended,\n+\taarch64_ext_reg_shifted, aarch64_ext_sve_addr_ri_s4xvl,\n+\taarch64_ext_sve_addr_ri_s6xvl, aarch64_ext_sve_addr_ri_s9xvl,\n+\taarch64_ext_sve_addr_ri_s4, aarch64_ext_sve_addr_ri_u6,\n+\taarch64_ext_sve_addr_rr_lsl, aarch64_ext_sve_addr_rz_xtw,\n+\taarch64_ext_sve_addr_zi_u5, aarch64_ext_sve_addr_zz,\n+\taarch64_ext_sve_addr_zz_lsl, aarch64_ext_sve_addr_zz_sxtw,\n+\taarch64_ext_sve_addr_zz_uxtw, aarch64_ext_sve_aimm,\n+\taarch64_ext_sve_asimm, aarch64_ext_sve_index, aarch64_ext_sve_limm_mov,\n+\taarch64_ext_sve_quad_index, aarch64_ext_sve_reglist,\n+\taarch64_ext_sve_scale, aarch64_ext_sve_shlimm, aarch64_ext_sve_shrimm,\n+\taarch64_ext_sve_float_half_one, aarch64_ext_sve_float_half_two,\n+\taarch64_ext_sve_float_zero_one, aarch64_opcode_decode): Likewise.\n+\t(determine_disassembling_preference, aarch64_decode_insn,\n+\tprint_insn_aarch64_word, print_insn_data): Take errors struct.\n+\t(print_insn_aarch64): Use errors.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-gen.c (print_operand_inserter): Use errors and change type to\n+\tboolean in aarch64_insert_operan.\n+\t(print_operand_extractor): Likewise.\n+\t* aarch64-opc.c (aarch64_print_operand): Use sysreg struct.\n+\n+2018-05-15  Francois H. Theron  <francois.theron@netronome.com>\n+\n+\t* nfp-dis.c: Use uint64_t for instruction variables, not bfd_vma.\n+\n+2018-05-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Remove Disp<N> from movidir{i,64b}.\n+\n+2018-05-09  Sebastian Rasmussen  <sebras@gmail.com>\n+\n+\t* cr16-opc.c (cr16_instruction): Comment typo fix.\n+\t* hppa-dis.c (print_insn_hppa): Likewise.\n+\n+2018-05-08  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (match_c_slli, match_slli_as_c_slli): New.\n+\t(match_c_slli64, match_srxi_as_c_srxi): New.\n+\t(riscv_opcodes) <slli, sll>: Use match_slli_as_c_slli.\n+\t<srli, srl, srai, sra>: Use match_srxi_as_c_srxi.\n+\t<c.slli, c.srli, c.srai>: Use match_s_slli.\n+\t<c.slli64, c.srli64, c.srai64>: New.\n+\n+2018-05-08  Alan Modra  <amodra@gmail.com>\n+\n+\t* ppc-dis.c (PPC_OPCD_SEGS): Define using PPC_OP.\n+\t(VLE_OPCD_SEGS, SPE2_OPCD_SEGS): Similarly, using macros used to\n+\tpartition opcode space for index lookup.\n+\n+2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n+\n+\t* ppc-dis.c (print_insn_powerpc) <insn_is_short>: Replace this...\n+\t<insn_length>: ...with this.  Update usage.\n+\tRemove duplicate call to *info->memory_error_func.\n+\n+2018-05-07  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\t    H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (Gva): New.\n+\t(enum): Add PREFIX_0F38F8, PREFIX_0F38F9,\n+\tMOD_0F38F8_PREFIX_2, MOD_0F38F9_PREFIX_0.\n+\t(prefix_table): New instructions (see prefix above).\n+\t(mod_table): New instructions (see prefix above).\n+\t(OP_G): Handle va_mode.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_MOVDIRI_FLAGS,\n+\tCPU_MOVDIR64B_FLAGS.\n+\t(cpu_flags): Add CpuMOVDIRI and CpuMOVDIR64B.\n+\t* i386-opc.h (enum): Add CpuMOVDIRI, CpuMOVDIR64B.\n+\t(i386_cpu_flags): Add cpumovdiri and cpumovdir64b.\n+\t* i386-opc.tbl: Add movidir{i,64b}.\n+\t* i386-init.h: Regenerated.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-05-07  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Replace AddrPrefixOp0 with\n+\tAddrPrefixOpReg.\n+\t* i386-opc.h (AddrPrefixOp0): Renamed to ...\n+\t(AddrPrefixOpReg): This.\n+\t(i386_opcode_modifier): Rename addrprefixop0 to addrprefixopreg.\n+\t* i386-opc.tbl: Replace AddrPrefixOp0 with AddrPrefixOpReg.\n+\n+2018-05-07  Peter Bergner  <bergner@vnet.ibm.com.com>\n+\n+\t* ppc-opc.c (powerpc_num_opcodes): Change type to unsigned.\n+\t(vle_num_opcodes): Likewise.\n+\t(spe2_num_opcodes): Likewise.\n+\t* ppc-dis.c (disassemble_init_powerpc) <powerpc_opcd_indices>: Rewrite\n+\tinitialization loop.\n+\t(disassemble_init_powerpc) <vle_opcd_indices>: Likewise.\n+\t(disassemble_init_powerpc) <spe2_opcd_indices>: Likewise.  Initialize\n+\tonly once.\n+\n+2018-05-01  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-dis.c (aarch64_opcode_decode): Moved memory clear code.\n+\n+2018-04-30  Francois H. Theron <francois.theron@netronome.com>\n+\n+\tMakefile.am: Added nfp-dis.c.\n+\tconfigure.ac: Added bfd_nfp_arch.\n+\tdisassemble.h: Added print_insn_nfp prototype.\n+\tdisassemble.c: Added ARCH_nfp and call to print_insn_nfp\n+\tnfp-dis.c: New, for NFP support.\n+\tpo/POTFILES.in: Added nfp-dis.c to the list.\n+\tMakefile.in: Regenerate.\n+\tconfigure: Regenerate.\n+\n+2018-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Fold various non-memory operand AVX512VL\n+\ttemplates into their base ones.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Use CPU_XOP_FLAGS for\n+\tCPU_BDVER1_FLAGS. Use CPU_AVX2_FLAGS for CPU_ZNVER1_FLAGS. Use\n+\tCPU_AVX_FLAGS for CPU_BTVER1_FLAGS. Add CPU_XSAVE_FLAGS to\n+\tCPU_LWP_FLAGS, CPU_AVX_FLAGS, CPU_MPX_FLAGS, and CPU_OSPKE_FLAGS.\n+\t* i386-init.h: Re-generate.\n+\n+2018-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Drop all uses of CpuRegMMX,\n+\tCpuRegXMM, CpuRegYMM, CpuRegZMM, and CpuRegMask. Use\n+\tCPU_AVX2_FLAGS for CPU_AVX512F_FLAGS and drop bogus comment.\n+\tDon't use CPU_AVX2_FLAGS for CPU_AVX512VL_FLAGS and drop bogus\n+\tcomment.\n+\t(cpu_flags): Drop CpuRegMMX, CpuRegXMM, CpuRegYMM, CpuRegZMM,\n+\tand CpuRegMask.\n+\t* i386-opc.h: CpuRegMMX, CpuRegXMM, CpuRegYMM, CpuRegZMM,\n+\tCpuRegMask: Delete.\n+\t(union i386_cpu_flags): Remove cpuregmmx, cpuregxmm, cpuregymm,\n+\tcpuregzmm, and cpuregmask.\n+\t* i386-init.h: Re-generate.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (cpu_flag_init): CPU_I586_FLAGS inherits Cpu387 only.\n+\tCPU_287_FLAGS is Cpu287 only. CPU_387_FLAGS is Cpu387 only.\n+\t* i386-init.h: Re-generate.\n+\n+2018-04-26  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (VexImmExt): Delete.\n+\t* i386-opc.h (VexImmExt, veximmext): Delete.\n+\t* i386-opc.tbl: Drop all VexImmExt uses.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-04-25  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vpslld, vpsrad, vpsrld): Drop AVX512VL\n+\tregister-only forms.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-04-25  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* aarch64-tbl.h (sqrdmlah, sqrdmlsh): Fix masks.\n+\n+2018-04-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-dis.c: Add REG_0F1C_MOD_0, MOD_0F1C_PREFIX_0,\n+\tPREFIX_0F1C.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_CLDEMOTE_FLAGS,\n+\t(cpu_flags): Add CpuCLDEMOTE.\n+\t* i386-init.h: Regenerate.\n+\t* i386-opc.h (enum): Add CpuCLDEMOTE,\n+\t(i386_cpu_flags): Add cpucldemote.\n+\t* i386-opc.tbl: Add cldemote.\n+\t* i386-tbl.h: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove sh5 and sh64 support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* sh-dis.c: Likewise.\n+\t* sh64-dis.c: Delete.\n+\t* sh64-opc.c: Delete.\n+\t* sh64-opc.h: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove w65 support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* w65-dis.c: Delete.\n+\t* w65-opc.h: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac: Remove we32k support.\n+\t* configure: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove m88k support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* m88k-dis.c: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove i370 support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* i370-dis.c: Delete.\n+\t* i370-opc.c: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.am: Remove h8500 support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* h8500-dis.c: Delete.\n+\t* h8500-opc.h: Delete.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac: Remove tahoe support.\n+\t* configure: Regenerate.\n+\n+2018-04-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-dis.c (prefix_table): Replace Em with Edq on tpause and\n+\tumwait.\n+\t* i386-opc.tbl: Allow 32-bit registers for tpause and umwait in\n+\t64-bit mode.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-04-11  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-dis.c (enum): Add PREFIX_MOD_0_0FAE_REG_6,\n+\tPREFIX_MOD_1_0FAE_REG_6.\n+\t(va_mode): New.\n+\t(OP_E_register): Use va_mode.\n+\t* i386-dis-evex.h (prefix_table):\n+\tNew instructions (see prefixes above).\n+\t* i386-gen.c (cpu_flag_init): Add WAITPKG.\n+\t(cpu_flags): Likewise.\n+\t* i386-opc.h (enum): Likewise.\n+\t(i386_cpu_flags): Likewise.\n+\t* i386-opc.tbl: Add umonitor, umwait, tpause.\n+\t* i386-init.h: Regenerate.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-04-11  Alan Modra  <amodra@gmail.com>\n+\n+\t* opcodes/i860-dis.c: Delete.\n+\t* opcodes/i960-dis.c: Delete.\n+\t* Makefile.am: Remove i860 and i960 support.\n+\t* configure.ac: Likewise.\n+\t* disassemble.c: Likewise.\n+\t* disassemble.h: Likewise.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* po/POTFILES.in: Regenerate.\n+\n+2018-04-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR binutils/23025\n+\t* i386-dis.c (get_valid_dis386): Don't set vex.prefix nor vex.w\n+\tto 0.\n+\t(print_insn): Clear vex instead of vex.evex.\n+\n+2018-04-04  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/es.po: Updated Spanish translation.\n+\n+2018-03-28  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Delete VecESize.\n+\t* i386-opc.h (VecESize): Delete.\n+\t(struct i386_opcode_modifier): Delete vecesize.\n+\t* i386-opc.tbl: Drop VecESize.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-28  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h (NO_BROADCAST, BROADCAST_1TO16, BROADCAST_1TO8,\n+\tBROADCAST_1TO4, BROADCAST_1TO2): Delete.\n+\t(struct i386_opcode_modifier): Shrink broadcast field to 1 bit.\n+\t* i386-opc.tbl: Replace Broadcast=<N> by Broadcast.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-28  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vcvt*d2si, vcvt*d2usi, vcvt*s2si, vcvt*s2usi):\n+\tFold AVX512 forms\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-28  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (prefix_table): Drop Y for cvt*2si.\n+\t(vex_len_table): Drop Y for vcvt*2si.\n+\t(putop): Replace plain 'Y' handling by abort().\n+\n+2018-03-28  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22988\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add entries for LDFF1xx\n+\tinstructions with only a base address register.\n+\t* aarch64-opc.c (operand_general_constraint_met_p): Add code to\n+\thandle AARHC64_OPND_SVE_ADDR_R.\n+\t(aarch64_print_operand): Likewise.\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64_dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-03-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl: Drop VecESize from register only insn forms and\n+\tmemory forms not allowing broadcast.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vfrczs*, vphadd*, vphsub*, vpmacs*, vpmadcs*,\n+\tvprot*, vpsha*, vpshl*, bextr, blc*, bls*, t1mskc, tzmsk, sha1*,\n+\tsha256*): Drop Disp<N>.\n+\n+2018-03-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (EbndS, bnd_swap_mode): New.\n+\t(prefix_table): Use EbndS.\n+\t(OP_E_register, OP_E_memory): Also handle bnd_swap_mode.\n+\t* i386-opc.tbl (bndmov): Move misplaced Load.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vcvtdq2pd, vcvtps2pd, vcvtudq2pd): Use separate\n+\ttemplates allowing memory operands and folded ones for register\n+\tonly flavors.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-22  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vfrczp*, vpcmov, vpermil2p*): Fold 128- and\n+\t256-bit templates. Drop redundant leftover Disp<N>.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-14  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* riscv-opc.c (riscv_insn_types): New.\n+\n+2018-03-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\n+2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Add Optimize to clr.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-03-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Remove OldGcc.\n+\t* i386-opc.h (OldGcc): Removed.\n+\t(i386_opcode_modifier): Remove oldgcc.\n+\t* i386-opc.tbl: Remove fsubp, fsubrp, fdivp and fdivrp\n+\tinstructions for old (<= 2.8.1) versions of gcc.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.h (EVEXDYN): New.\n+\t* i386-opc.tbl: Fold various AVX512VL templates.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vexpandpd, vexpandps, vmovapd, vmovaps,\n+\tvmovdqa32, vmovdqa64, vmovdqu32, vmovdqu64, vmovupd, vmovups,\n+\tvpexpandd, vpexpandq): Fold AFX512VF templates.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vgf2p8affineinvqb, vgf2p8affineqb, vgf2p8mulb):\n+\tFold 128- and 256-bit VEX-encoded templates.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vexpandpd, vexpandps, vmovapd, vmovaps,\n+\tvmovdqa32, vmovdqa64, vmovdqu32, vmovdqu64, vmovupd, vmovups,\n+\tvpexpandd, vpexpandq): Fold AVX512F templates.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (llwpcb, slwpcb, lwpval, lwpins): Fold 32- and\n+\t64-bit templates. Drop Disp<N>.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vfmadd*, vfmsub*, vfnmadd*, vfnmsub*): Fold 128-\n+\tand 256-bit templates.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (cmpxchg8b): Add NoRex64.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (cmpxchg16b, fisttp, fisttpll, bndmov, mwaitx):\n+\tDrop NoAVX.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (ldmxcsr, stmxcsr): Add NoAVX.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (opcode_modifiers): Delete FloatD.\n+\t* i386-opc.h (FloatD): Delete.\n+\t(struct i386_opcode_modifier): Delete floatd.\n+\t* i386-opc.tbl (fadd, fsub, fsubr, fmul, fdiv, fdivr): Replace\n+\tFloatD by D.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-dis.c (float_reg): Adjust DC and DE fsub*/fdiv* patterns.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vmovd): Disallow Qword memory operands.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-08  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vcvtpd2ps): Fold AVX 128- and 256-bit memory\n+\tforms.\n+\t* i386-tlb.h: Re-generate.\n+\n+2018-03-07  Alan Modra  <amodra@gmail.com>\n+\n+\t* disassemble.c (disassembler): Use bfd_arch_powerpc entry for\n+\tbfd_arch_rs6000.\n+\t* disassemble.h (print_insn_rs6000): Delete.\n+\t* ppc-dis.c (powerpc_init_dialect): Handle rs6000.\n+\t(disassemble_init_powerpc): Call powerpc_init_dialect for rs6000.\n+\t(print_insn_rs6000): Delete.\n+\n+2018-03-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* sysdep.h (opcodes_error_handler): Define.\n+\t(_bfd_error_handler): Declare.\n+\t* Makefile.am: Remove stray #.\n+\t* opc2c.c (main): Remove bogus -l arg handling.  Print \"DO NOT\n+\tEDIT\" comment.\n+\t* aarch64-dis.c, * arc-dis.c, * arm-dis.c, * avr-dis.c,\n+\t* d30v-dis.c, * h8300-dis.c, * mmix-dis.c, * ppc-dis.c,\n+\t* riscv-dis.c, * s390-dis.c, * sparc-dis.c, * v850-dis.c: Use\n+\topcodes_error_handler to print errors.  Standardize error messages.\n+\t* msp430-decode.opc, * nios2-dis.c, * rl78-decode.opc: Likewise,\n+\tand include opintl.h.\n+\t* nds32-asm.c: Likewise, and include sysdep.h and opintl.h.\n+\t* i386-gen.c: Standardize error messages.\n+\t* msp430-decode.c, * rl78-decode.c, rx-decode.c: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* epiphany-asm.c, * epiphany-desc.c, * epiphany-dis.c,\n+\t* epiphany-ibld.c, * fr30-asm.c, * fr30-desc.c, * fr30-dis.c,\n+\t* fr30-ibld.c, * frv-asm.c, * frv-desc.c, * frv-dis.c, * frv-ibld.c,\n+\t* frv-opc.c, * ip2k-asm.c, * ip2k-desc.c, * ip2k-dis.c, * ip2k-ibld.c,\n+\t* iq2000-asm.c, * iq2000-desc.c, * iq2000-dis.c, * iq2000-ibld.c,\n+\t* lm32-asm.c, * lm32-desc.c, * lm32-dis.c, * lm32-ibld.c,\n+\t* m32c-asm.c, * m32c-desc.c, * m32c-dis.c, * m32c-ibld.c,\n+\t* m32r-asm.c, * m32r-desc.c, * m32r-dis.c, * m32r-ibld.c,\n+\t* mep-asm.c, * mep-desc.c, * mep-dis.c, * mep-ibld.c, * mt-asm.c,\n+\t* mt-desc.c, * mt-dis.c, * mt-ibld.c, * or1k-asm.c, * or1k-desc.c,\n+\t* or1k-dis.c, * or1k-ibld.c, * xc16x-asm.c, * xc16x-desc.c,\n+\t* xc16x-dis.c, * xc16x-ibld.c, * xstormy16-asm.c, * xstormy16-desc.c,\n+\t* xstormy16-dis.c, * xstormy16-ibld.c: Regenerate.\n+\n+2018-03-01  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* * i386-opc.tbl: Add \"Optimize\" to AVX256 and AVX512\n+\tvpsub[bwdq] instructions.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-03-01  Alan Modra  <amodra@gmail.com>\n+\n+\t* configure.ac (ALL_LINGUAS): Sort.\n+\t* configure: Regenerate.\n+\n+2018-02-27  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (print_insn_coprocessor): Replace uses of ARM_FEATURE_COPY\n+\tmacro by assignements.\n+\n+2018-02-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/22871\n+\t* i386-gen.c (opcode_modifiers): Add Optimize.\n+\t* i386-opc.h (Optimize): New enum.\n+\t(i386_opcode_modifier): Add optimize.\n+\t* i386-opc.tbl: Add \"Optimize\" to \"mov $imm, reg\",\n+\t\"sub reg, reg/mem\", \"test $imm, acc\", \"test $imm, reg/mem\",\n+\t\"and $imm, acc\", \"and $imm, reg/mem\", \"xor reg, reg/mem\",\n+\t\"movq $imm, reg\" and AVX256 and AVX512 versions of vandnps,\n+\tvandnpd, vpandn, vpandnd, vpandnq, vxorps, vxorpd, vpxor,\n+\tvpxord and vpxorq.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-02-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* crx-dis.c (getregliststring): Allocate a large enough buffer\n+\tto silence false positive gcc8 warning.\n+\n+2018-02-22  Shea Levy <shea@shealevy.com>\n+\n+\t* disassemble.c (ARCH_riscv): Define if ARCH_all.\n+\n+2018-02-22  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* i386-opc.tbl: Add {rex},\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-02-20  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* mips16-opc.c (decode_mips16_operand) <'M'>: Remove case.\n+\t(mips16_opcodes): Replace `M' with `m' for \"restore\".\n+\n+2018-02-19  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* arm-dis.c (thumb_opcodes): Fix BXNS mask.\n+\n+2018-02-13  Maciej W. Rozycki  <macro@mips.com>\n+\n+\t* wasm32-dis.c (print_insn_wasm32): Rename `index' local\n+\tvariable to `function_index'.\n+\n+2018-02-13  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 22823\n+\t* metag-dis.c (print_fmmov): Double buffer size to avoid warning\n+\tabout truncation of printing.\n+\n+2018-02-12  Henry Wong <henry@stuffedcow.net>\n+\n+\t* mips-opc.c (mips_builtin_opcodes): Correct \"sigrie\" encoding.\n+\n+2018-02-05  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt_BR.po: Updated Brazilian Portuguese translation.\n+\n+2018-01-23  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-dis.c (enum): Add pconfig.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_PCONFIG_FLAGS.\n+\t(cpu_flags): Add CpuPCONFIG.\n+\t* i386-opc.h (enum): Add CpuPCONFIG.\n+\t(i386_cpu_flags): Add cpupconfig.\n+\t* i386-opc.tbl: Add PCONFIG instruction.\n+\t* i386-init.h: Regenerate.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-01-23  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-dis.c (enum): Add PREFIX_0F09.\n+\t* i386-gen.c (cpu_flag_init): Add CPU_WBNOINVD_FLAGS.\n+\t(cpu_flags): Add CpuWBNOINVD.\n+\t* i386-opc.h (enum): Add CpuWBNOINVD.\n+\t(i386_cpu_flags): Add cpuwbnoinvd.\n+\t* i386-opc.tbl: Add WBNOINVD instruction.\n+\t* i386-init.h: Regenerate.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-01-17  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (riscv_opcodes) <addi>: Use z instead of 0.\n+\n+2018-01-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-gen.c (cpu_flag_init): Delete CPU_CET_FLAGS, CpuCET.\n+\tAdd CPU_IBT_FLAGS, CPU_SHSTK_FLAGS, CPY_ANY_IBT_FLAGS,\n+\tCPU_ANY_SHSTK_FLAGS, CpuIBT, CpuSHSTK.\n+\t(cpu_flags): Add CpuIBT, CpuSHSTK.\n+\t* i386-opc.h (enum): Add CpuIBT, CpuSHSTK.\n+\t(i386_cpu_flags): Add cpuibt, cpushstk.\n+\t* i386-opc.tbl: Change CpuCET to CpuSHSTK and CpuIBT.\n+\t* i386-init.h: Regenerate.\n+\t* i386-tbl.h: Likewise.\n+\n+2018-01-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/pt_BR.po: Updated Brazilian Portugese translation.\n+\t* po/de.po: Updated German translation.\n+\n+2018-01-15  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-opc.c (match_c_nop): New.\n+\t(riscv_opcodes) <addi>: Handle an addi that compresses to c.nop.\n+\n+2018-01-15  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/uk.po: Updated Ukranian translation.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* po/opcodes.pot: Regenerated.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t* configure: Regenerate.\n+\n+2018-01-13  Nick Clifton  <nickc@redhat.com>\n+\n+\t2.30 branch created.\n+\n+2018-01-11  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* i386-opc.tbl: Remove VL variants for 4FMAPS and 4VNNIW insns.\n+\t* i386-tbl.h: Regenerate.\n+\n+2018-01-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (v4fmaddss, v4fnmaddss): Adjust Disp8MemShift.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-01-10  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-opc.tbl (vpcmpeqb, vpcmpleb, vpcmpltb, vpcmpneqb,\n+\tvpcmpnleb, vpcmpnltb, vpcmpequb, vpcmpleub, vpcmpltub,\n+\tvpcmpnequb, vpcmpnleub, vpcmpnltub, vpcmpeqw, vpcmplew,\n+\tvpcmpltw, vpcmpneqw, vpcmpnlew, vpcmpnltw, vpcmpequw, vpcmpleuw,\n+\tvpcmpltuw, vpcmpnequw, vpcmpnleuw, vpcmpnltuw): Adjust\n+\tDisp8MemShift of AVX512VL forms.\n+\t* i386-tbl.h: Re-generate.\n+\n+2018-01-09  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-dis.c (maybe_print_address): If base_reg is zero,\n+\tthen the hi_addr value is zero.\n+\n+2018-01-09  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* arm-dis.c (arm_opcodes): Add csdb.\n+\t(thumb32_opcodes): Add csdb.\n+\n+2018-01-09  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* aarch64-tbl.h (aarch64_opcode_table): Add \"csdb\".\n+\t* aarch64-asm-2.c: Regenerate.\n+\t* aarch64-dis-2.c: Regenerate.\n+\t* aarch64-opc-2.c: Regenerate.\n+\n+2018-01-08  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR gas/22681\n+\t* i386-opc.tbl: Properly encode vmovd with Qword memeory operand.\n+\tRemove AVX512 vmovd with 64-bit operands.\n+\t* i386-tbl.h: Regenerated.\n+\n+2018-01-05  Jim Wilson  <jimw@sifive.com>\n+\n+\t* riscv-dis.c (print_insn_args) <'s'>: Call maybe_print_address for a\n+\tjalr.\n+\n+2018-01-03  Alan Modra  <amodra@gmail.com>\n+\n+\tUpdate year range in copyright notice of all files.\n+\n+2018-01-02  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* i386-gen.c (operand_type_init): Restore OPERAND_TYPE_REGYMM\n+\tand OPERAND_TYPE_REGZMM entries.\n+\n+For older changes see ChangeLog-2017\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved.\n+\n+Local Variables:\n+mode: change-log\n+left-margin: 8\n+fill-column: 74\n+version-control: never\n+End:"
    }
  ]
}