{
  "sha": "9c6c44713f31f7b27bfe6921de378fa69127a048",
  "node_id": "C_kwDOANOeidoAKDljNmM0NDcxM2YzMWY3YjI3YmZlNjkyMWRlMzc4ZmE2OTEyN2EwNDg",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-19T13:08:32Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "aburgess@redhat.com",
      "date": "2022-02-21T11:40:39Z"
    },
    "message": "gdb: make use of std::string in dbxread.c and xcoffread.c\n\nWhile taking a look through dbxread.c I spotted a couple of places\nwhere making use of std::string would remove the need for manual\nmemory allocation and memcpy.\n\nDuring review Simon pointed out that the same code exists in\nxcoffread.c, so I've applied the same fix there too.\n\nThere should be no user visible changes after this commit.",
    "tree": {
      "sha": "a92572af687abed7335d56c0dd8942c9d721d5b8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a92572af687abed7335d56c0dd8942c9d721d5b8"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9c6c44713f31f7b27bfe6921de378fa69127a048",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c6c44713f31f7b27bfe6921de378fa69127a048",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9c6c44713f31f7b27bfe6921de378fa69127a048",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9c6c44713f31f7b27bfe6921de378fa69127a048/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "dc5483c989f29fc9c7934965071ae1bb80cff902",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dc5483c989f29fc9c7934965071ae1bb80cff902",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dc5483c989f29fc9c7934965071ae1bb80cff902"
    }
  ],
  "stats": {
    "total": 36,
    "additions": 8,
    "deletions": 28
  },
  "files": [
    {
      "sha": "ddda5df4ee161b2de28f05a33ee723e0d07737bd",
      "filename": "gdb/dbxread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 14,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c6c44713f31f7b27bfe6921de378fa69127a048/gdb/dbxread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c6c44713f31f7b27bfe6921de378fa69127a048/gdb/dbxread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dbxread.c?ref=9c6c44713f31f7b27bfe6921de378fa69127a048",
      "patch": "@@ -1603,13 +1603,8 @@ read_dbx_symtab (minimal_symbol_reader &reader,\n \t    case 'f':\n \t      if (! pst)\n \t\t{\n-\t\t  int name_len = p - namestring;\n-\t\t  char *name = (char *) xmalloc (name_len + 1);\n-\n-\t\t  memcpy (name, namestring, name_len);\n-\t\t  name[name_len] = '\\0';\n-\t\t  function_outside_compilation_unit_complaint (name);\n-\t\t  xfree (name);\n+\t\t  std::string name (namestring, (p - namestring));\n+\t\t  function_outside_compilation_unit_complaint (name.c_str ());\n \t\t}\n \t      /* Kludges for ELF/STABS with Sun ACC.  */\n \t      last_function_name = namestring;\n@@ -1663,13 +1658,8 @@ read_dbx_symtab (minimal_symbol_reader &reader,\n \t    case 'F':\n \t      if (! pst)\n \t\t{\n-\t\t  int name_len = p - namestring;\n-\t\t  char *name = (char *) xmalloc (name_len + 1);\n-\n-\t\t  memcpy (name, namestring, name_len);\n-\t\t  name[name_len] = '\\0';\n-\t\t  function_outside_compilation_unit_complaint (name);\n-\t\t  xfree (name);\n+\t\t  std::string name (namestring, (p - namestring));\n+\t\t  function_outside_compilation_unit_complaint (name.c_str ());\n \t\t}\n \t      /* Kludges for ELF/STABS with Sun ACC.  */\n \t      last_function_name = namestring;"
    },
    {
      "sha": "f6db7f9ff7e4481c2873119ea667775f24c57c3f",
      "filename": "gdb/xcoffread.c",
      "status": "modified",
      "additions": 4,
      "deletions": 14,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9c6c44713f31f7b27bfe6921de378fa69127a048/gdb/xcoffread.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9c6c44713f31f7b27bfe6921de378fa69127a048/gdb/xcoffread.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/xcoffread.c?ref=9c6c44713f31f7b27bfe6921de378fa69127a048",
      "patch": "@@ -2734,13 +2734,8 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t      case 'f':\n \t\tif (! pst)\n \t\t  {\n-\t\t    int name_len = p - namestring;\n-\t\t    char *name = (char *) xmalloc (name_len + 1);\n-\n-\t\t    memcpy (name, namestring, name_len);\n-\t\t    name[name_len] = '\\0';\n-\t\t    function_outside_compilation_unit_complaint (name);\n-\t\t    xfree (name);\n+\t\t    std::string name (namestring, (p - namestring));\n+\t\t    function_outside_compilation_unit_complaint (name.c_str ());\n \t\t  }\n \t\tpst->add_psymbol (gdb::string_view (namestring,\n \t\t\t\t\t\t    p - namestring),\n@@ -2758,13 +2753,8 @@ scan_xcoff_symtab (minimal_symbol_reader &reader,\n \t      case 'F':\n \t\tif (! pst)\n \t\t  {\n-\t\t    int name_len = p - namestring;\n-\t\t    char *name = (char *) xmalloc (name_len + 1);\n-\n-\t\t    memcpy (name, namestring, name_len);\n-\t\t    name[name_len] = '\\0';\n-\t\t    function_outside_compilation_unit_complaint (name);\n-\t\t    xfree (name);\n+\t\t    std::string name (namestring, (p - namestring));\n+\t\t    function_outside_compilation_unit_complaint (name.c_str ());\n \t\t  }\n \n \t\t/* We need only the minimal symbols for these"
    }
  ]
}