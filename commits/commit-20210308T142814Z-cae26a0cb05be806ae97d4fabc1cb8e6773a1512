{
  "sha": "cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2FlMjZhMGNiMDViZTgwNmFlOTdkNGZhYmMxY2I4ZTY3NzNhMTUxMg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:14Z"
    },
    "message": "Introduce float_const_operation\n\nThis adds class float_const_operation, an operation holding a\nfloating-point constant.  Unlike most other new operations, this one\nrequires a custom 'dump' method.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* expprint.c (float_const_operation::dump): New method.\n\t* expop.h (float_data): New typedef.\n\t(class float_const_operation): New.",
    "tree": {
      "sha": "ac4bc202818095d9767164f92fcc317bf0d86912",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ac4bc202818095d9767164f92fcc317bf0d86912"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "75f9892d435f58fd12e26638a56564e374bfa951",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/75f9892d435f58fd12e26638a56564e374bfa951",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/75f9892d435f58fd12e26638a56564e374bfa951"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 56,
    "deletions": 0
  },
  "files": [
    {
      "sha": "036e562525393065c61384a972cf2cc344cbb206",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* expprint.c (float_const_operation::dump): New method.\n+\t* expop.h (float_data): New typedef.\n+\t(class float_const_operation): New.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* expop.h (gen_expr_binop, gen_expr_structop): Declare."
    },
    {
      "sha": "1e58262e876d79169ee159580e536273210e27fd",
      "filename": "gdb/expop.h",
      "status": "modified",
      "additions": 42,
      "deletions": 0,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/expop.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/expop.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expop.h?ref=cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
      "patch": "@@ -373,6 +373,48 @@ class maybe_constant_operation\n   }\n };\n \n+/* A floating-point constant.  The constant is encoded in the target\n+   format.  */\n+\n+typedef std::array<gdb_byte, 16> float_data;\n+\n+/* An operation that holds a floating-point constant of a given\n+   type.\n+\n+   This does not need the facilities provided by\n+   tuple_holding_operation, so it does not use it.  */\n+class float_const_operation\n+  : public operation\n+{\n+public:\n+\n+  float_const_operation (struct type *type, float_data data)\n+    : m_type (type),\n+      m_data (data)\n+  {\n+  }\n+\n+  value *evaluate (struct type *expect_type,\n+\t\t   struct expression *exp,\n+\t\t   enum noside noside) override\n+  {\n+    return value_from_contents (m_type, m_data.data ());\n+  }\n+\n+  enum exp_opcode opcode () const override\n+  { return OP_FLOAT; }\n+\n+  bool constant_p () const override\n+  { return true; }\n+\n+  void dump (struct ui_file *stream, int depth) const override;\n+\n+private:\n+\n+  struct type *m_type;\n+  float_data m_data;\n+};\n+\n } /* namespace expr */\n \n #endif /* EXPOP_H */"
    },
    {
      "sha": "5826108c1c92fa1037af5a71f85f92e5e2601768",
      "filename": "gdb/expprint.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/expprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cae26a0cb05be806ae97d4fabc1cb8e6773a1512/gdb/expprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/expprint.c?ref=cae26a0cb05be806ae97d4fabc1cb8e6773a1512",
      "patch": "@@ -1283,4 +1283,12 @@ dump_for_expression (struct ui_file *stream, int depth,\n   fprintf_filtered (stream, \"\\n\");\n }\n \n+void\n+float_const_operation::dump (struct ui_file *stream, int depth) const\n+{\n+  fprintf_filtered (stream, _(\"%*sFloat: \"), depth, \"\");\n+  print_floating (m_data.data (), m_type, stream);\n+  fprintf_filtered (stream, \"\\n\");\n+}\n+\n } /* namespace expr */"
    }
  ]
}