{
  "sha": "cf57ad6d61771f608079f31db10a93872a4553c5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2Y1N2FkNmQ2MTc3MWY2MDgwNzlmMzFkYjEwYTkzODcyYTQ1NTNjNQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-08T23:39:14Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-11-10T20:09:59Z"
    },
    "message": "gdb_vecs.h: Avoid self move assign\n\nWhile working on another patch I ran into an issue with\nunordered_remove (in gdb_vecs.h), where removing the last item of the\nvector can cause a self move assign.\n\nWhen compiling the C++ standard library in debug mode (with\n-D_GLIBCXX_DEBUG=1) this causes an error to trigger.\n\nI've fixed the issue in this patch and provided a unit test.\n\nThe provided unit test includes an assignment operator which checks\nfor self move assign, this removes the need to compile with\n-D_GLIBCXX_DEBUG=1 in order to spot the bug.  If you're keen to see\nthe error reported from the C++ standard library then remove operator=\nfrom the unit test and recompile GDB with -D_GLIBCXX_DEBUG=1.\n\ngdb/ChangeLog:\n\n\t* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add new file to the list.\n\t* unittests/vec-utils-selftests.c: New file.\n\t* gdbsupport/gdb_vecs.h (unordered_remove): Avoid self move assign.\n\nChange-Id: I80247b20cd5212038117db7412865f5e6a9257cd",
    "tree": {
      "sha": "e9d235b3444128dd55b5586bc5f1efc0d888a2f6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e9d235b3444128dd55b5586bc5f1efc0d888a2f6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cf57ad6d61771f608079f31db10a93872a4553c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf57ad6d61771f608079f31db10a93872a4553c5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cf57ad6d61771f608079f31db10a93872a4553c5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cf57ad6d61771f608079f31db10a93872a4553c5/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0b026263ea17155b57f7763901894be2cbb6c3ff",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0b026263ea17155b57f7763901894be2cbb6c3ff",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/0b026263ea17155b57f7763901894be2cbb6c3ff"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 75,
    "deletions": 1
  },
  "files": [
    {
      "sha": "b9d5f21e225f0cbef696b169d4d1836e8b2ac853",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=cf57ad6d61771f608079f31db10a93872a4553c5",
      "patch": "@@ -1,3 +1,9 @@\n+2019-11-10  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* Makefile.in (SUBDIR_UNITTESTS_SRCS): Add new file to the list.\n+\t* unittests/vec-utils-selftests.c: New file.\n+\t* gdbsupport/gdb_vecs.h (unordered_remove): Avoid self move assign.\n+\n 2019-11-10  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-wingeneral.c (tui_unhighlight_win): Use can_box."
    },
    {
      "sha": "9ca77f6412fafe557a55dd0c48ae3f88ddaf6e0e",
      "filename": "gdb/Makefile.in",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/Makefile.in?ref=cf57ad6d61771f608079f31db10a93872a4553c5",
      "patch": "@@ -440,6 +440,7 @@ SUBDIR_UNITTESTS_SRCS = \\\n \tunittests/tracepoint-selftests.c \\\n \tunittests/unpack-selftests.c \\\n \tunittests/utils-selftests.c \\\n+\tunittests/vec-utils-selftests.c \\\n \tunittests/xml-utils-selftests.c\n \n SUBDIR_UNITTESTS_OBS = $(patsubst %.c,%.o,$(SUBDIR_UNITTESTS_SRCS))"
    },
    {
      "sha": "e8af624770dbc4a974443e6b0c93e4a6ae58d447",
      "filename": "gdb/gdbsupport/gdb_vecs.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/gdbsupport/gdb_vecs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/gdbsupport/gdb_vecs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbsupport/gdb_vecs.h?ref=cf57ad6d61771f608079f31db10a93872a4553c5",
      "patch": "@@ -51,7 +51,8 @@ unordered_remove (std::vector<T> &vec, typename std::vector<T>::iterator it)\n   gdb_assert (it >= vec.begin () && it < vec.end ());\n \n   T removed = std::move (*it);\n-  *it = std::move (vec.back ());\n+  if (it != vec.end () - 1)\n+    *it = std::move (vec.back ());\n   vec.pop_back ();\n \n   return removed;"
    },
    {
      "sha": "823bbb61c25f7a3124150f4a5565ac5dca3fa657",
      "filename": "gdb/unittests/vec-utils-selftests.c",
      "status": "added",
      "additions": 66,
      "deletions": 0,
      "changes": 66,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/unittests/vec-utils-selftests.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cf57ad6d61771f608079f31db10a93872a4553c5/gdb/unittests/vec-utils-selftests.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/unittests/vec-utils-selftests.c?ref=cf57ad6d61771f608079f31db10a93872a4553c5",
      "patch": "@@ -0,0 +1,66 @@\n+/* Self tests for vector utility routines for GDB, the GNU debugger.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of GDB.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+#include \"gdbsupport/common-defs.h\"\n+#include \"gdbsupport/selftest.h\"\n+\n+#include \"gdbsupport/gdb_vecs.h\"\n+\n+namespace selftests {\n+namespace vector_utils_tests {\n+\n+static void\n+unordered_remove_tests ()\n+{\n+  /* Create vector with a single object in, and then remove that object.\n+     This test was added after a bug was discovered where unordered_remove\n+     would cause a self move assign.  If the C++ standard library is\n+     compiled in debug mode (by passing -D_GLIBCXX_DEBUG=1) and the\n+     operator= is removed from struct obj this test used to fail with an\n+     error from the C++ standard library.  */\n+  struct obj\n+  {\n+    std::vector<void *> var;\n+\n+    obj &operator= (const obj &other)\n+    {\n+      if (this == &other)\n+\terror (_(\"detected self move assign\"));\n+      this->var = other.var;\n+      return *this;\n+    }\n+  };\n+\n+  std::vector<obj> v;\n+  v.emplace_back ();\n+  auto it = v.end () - 1;\n+  unordered_remove (v, it);\n+  SELF_CHECK (v.empty ());\n+}\n+\n+} /* namespace vector_utils_tests */\n+} /* amespace selftests */\n+\n+void\n+_initialize_vec_utils_selftests ()\n+{\n+  selftests::register_test\n+    (\"unordered_remove\",\n+     selftests::vector_utils_tests::unordered_remove_tests);\n+}"
    }
  ]
}