{
  "sha": "1bace02a96a7124accf7910f271663b0b7e8754b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWJhY2UwMmE5NmE3MTI0YWNjZjc5MTBmMjcxNjYzYjBiN2U4NzU0Yg==",
  "commit": {
    "author": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2020-12-20T15:45:57Z"
    },
    "committer": {
      "name": "Hannes Domani",
      "email": "ssbssa@yahoo.de",
      "date": "2021-06-04T14:15:01Z"
    },
    "message": "Initial TUI mouse support\n\nImplements an overridable tui_win_info::click method whose arguments\nare the mouse coordinates inside the specific window, and the mouse\nbutton clicked.\n\nAnd if the curses implementation supports 5 buttons, the 4th and 5th\nbuttons are used for scrolling.\n\ngdb/ChangeLog:\n\n2021-06-04  Hannes Domani  <ssbssa@yahoo.de>\n\n\t* ser-mingw.c (console_select_thread): Handle MOUSE_EVENT.\n\t* tui/tui-data.h (struct tui_win_info): Add click function.\n\t* tui/tui-io.c (tui_prep_terminal): Enable mouse events.\n\t(tui_deprep_terminal): Disable mouse events.\n\t(tui_dispatch_ctrl_char): Handle KEY_MOUSE.\n\t* tui/tui.c (tui_disable): Disable mouse events.",
    "tree": {
      "sha": "754add41ed47ed999e37ff986811e7da33b8f2bc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/754add41ed47ed999e37ff986811e7da33b8f2bc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1bace02a96a7124accf7910f271663b0b7e8754b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bace02a96a7124accf7910f271663b0b7e8754b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1bace02a96a7124accf7910f271663b0b7e8754b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1bace02a96a7124accf7910f271663b0b7e8754b/comments",
  "author": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ssbssa",
    "id": 40947,
    "node_id": "MDQ6VXNlcjQwOTQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/40947?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ssbssa",
    "html_url": "https://github.com/ssbssa",
    "followers_url": "https://api.github.com/users/ssbssa/followers",
    "following_url": "https://api.github.com/users/ssbssa/following{/other_user}",
    "gists_url": "https://api.github.com/users/ssbssa/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ssbssa/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ssbssa/subscriptions",
    "organizations_url": "https://api.github.com/users/ssbssa/orgs",
    "repos_url": "https://api.github.com/users/ssbssa/repos",
    "events_url": "https://api.github.com/users/ssbssa/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ssbssa/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "25e821a6c2db1f7fea8a50ff0deeb34af2e72aa3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/25e821a6c2db1f7fea8a50ff0deeb34af2e72aa3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/25e821a6c2db1f7fea8a50ff0deeb34af2e72aa3"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 62,
    "deletions": 0
  },
  "files": [
    {
      "sha": "fca6750de384a6d6199aa11216e2a5fbec788ea2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1bace02a96a7124accf7910f271663b0b7e8754b",
      "patch": "@@ -1,3 +1,12 @@\n+2021-06-04  Hannes Domani  <ssbssa@yahoo.de>\n+\n+\t* ser-mingw.c (console_select_thread): Handle MOUSE_EVENT.\n+\t* tui/tui-data.h (struct tui_win_info): Add click function.\n+\t* tui/tui-io.c (tui_prep_terminal): Enable mouse events.\n+\t(tui_deprep_terminal): Disable mouse events.\n+\t(tui_dispatch_ctrl_char): Handle KEY_MOUSE.\n+\t* tui/tui.c (tui_disable): Disable mouse events.\n+\n 2021-06-03  Magne Hov  <mhov@undo.io>\n \n \tPR python/27841"
    },
    {
      "sha": "2bad51310f67cb65a5792ef2fe93243d3a9bdaf3",
      "filename": "gdb/ser-mingw.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/ser-mingw.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/ser-mingw.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ser-mingw.c?ref=1bace02a96a7124accf7910f271663b0b7e8754b",
      "patch": "@@ -599,6 +599,11 @@ console_select_thread (void *arg)\n \t\t  break;\n \t\t}\n \t    }\n+\t  else if (record.EventType == MOUSE_EVENT)\n+\t    {\n+\t      SetEvent (state->read_event);\n+\t      break;\n+\t    }\n \n \t  /* Otherwise discard it and wait again.  */\n \t  ReadConsoleInput (h, &record, 1, &n_records);"
    },
    {
      "sha": "9fa39fa58f3e6356edb6ad4508ac5f61a74e7c15",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=1bace02a96a7124accf7910f271663b0b7e8754b",
      "patch": "@@ -137,6 +137,13 @@ struct tui_win_info\n     return true;\n   }\n \n+  /* Called for each mouse click inside this window.  Coordinates MOUSE_X\n+     and MOUSE_Y are 0-based relative to the window, and MOUSE_BUTTON can\n+     be 1 (left), 2 (middle), or 3 (right).  */\n+  virtual void click (int mouse_x, int mouse_y, int mouse_button)\n+  {\n+  }\n+\n   void check_and_display_highlight_if_needed ();\n \n   /* Window handle.  */"
    },
    {
      "sha": "7df0e2f1bd30f905985a8b52fe13d6abe00830ac",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=1bace02a96a7124accf7910f271663b0b7e8754b",
      "patch": "@@ -639,13 +639,19 @@ tui_redisplay_readline (void)\n static void\n tui_prep_terminal (int notused1)\n {\n+#ifdef NCURSES_MOUSE_VERSION\n+  mousemask (ALL_MOUSE_EVENTS, NULL);\n+#endif\n }\n \n /* Readline callback to restore the terminal.  It is called once each\n    time we leave readline.  There is nothing to do in curses mode.  */\n static void\n tui_deprep_terminal (void)\n {\n+#ifdef NCURSES_MOUSE_VERSION\n+  mousemask (0, NULL);\n+#endif\n }\n \n #ifdef TUI_USE_PIPE_FOR_READLINE\n@@ -978,6 +984,37 @@ tui_dispatch_ctrl_char (unsigned int ch)\n     case KEY_LEFT:\n       win_info->right_scroll (1);\n       break;\n+#ifdef NCURSES_MOUSE_VERSION\n+    case KEY_MOUSE:\n+\t{\n+\t  MEVENT mev;\n+\t  if (getmouse (&mev) != OK)\n+\t    break;\n+\n+\t  for (tui_win_info *wi : all_tui_windows ())\n+\t    if (mev.x > wi->x && mev.x < wi->x + wi->width - 1\n+\t\t&& mev.y > wi->y && mev.y < wi->y + wi->height - 1)\n+\t      {\n+\t\tif ((mev.bstate & BUTTON1_CLICKED) != 0\n+\t\t    || (mev.bstate & BUTTON2_CLICKED) != 0\n+\t\t    || (mev.bstate & BUTTON3_CLICKED) != 0)\n+\t\t  {\n+\t\t    int button = (mev.bstate & BUTTON1_CLICKED) != 0 ? 1\n+\t\t      :         ((mev.bstate & BUTTON2_CLICKED) != 0 ? 2\n+\t\t\t\t : 3);\n+\t\t    wi->click (mev.x - wi->x - 1, mev.y - wi->y - 1, button);\n+\t\t  }\n+#ifdef BUTTON5_PRESSED\n+\t\telse if ((mev.bstate & BUTTON4_PRESSED) != 0)\n+\t\t  wi->backward_scroll (3);\n+\t\telse if ((mev.bstate & BUTTON5_PRESSED) != 0)\n+\t\t  wi->forward_scroll (3);\n+#endif\n+\t\tbreak;\n+\t      }\n+\t}\n+      break;\n+#endif\n     case '\\f':\n       break;\n     default:"
    },
    {
      "sha": "529fc62c9ac3000c4c8c1b082d45e9311679abdf",
      "filename": "gdb/tui/tui.c",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1bace02a96a7124accf7910f271663b0b7e8754b/gdb/tui/tui.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.c?ref=1bace02a96a7124accf7910f271663b0b7e8754b",
      "patch": "@@ -508,6 +508,10 @@ tui_disable (void)\n   rl_startup_hook = 0;\n   rl_already_prompted = 0;\n \n+#ifdef NCURSES_MOUSE_VERSION\n+  mousemask (0, NULL);\n+#endif\n+\n   /* Leave curses and restore previous gdb terminal setting.  */\n   endwin ();\n "
    }
  ]
}