{
  "sha": "52ff20fe7ba8e8de2660339fff5308ed932e2b32",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NTJmZjIwZmU3YmE4ZThkZTI2NjAzMzlmZmY1MzA4ZWQ5MzJlMmIzMg==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-10T11:30:46Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-02-10T11:30:46Z"
    },
    "message": "[binutils] Handle presence of both .debug_ranges and .debug_rnglists\n\nWith exec:\n...\n$ g++ src/gdb/testsuite/gdb.cp/cpexprs.cc -gdwarf-5 -fdebug-types-section\n...\nI run into:\n...\n$ readelf -w a.out > READELF\nreadelf: Error: Invalid range list entry type 126\nreadelf: Error: Invalid range list entry type 60\n...\n\nThe executable contains both a .debug_rnglists section (for CU\ncpexprs.cc) and a .debug_ranges section (for other CUs, like crti.S).  But\nwhen executing display_debug_ranges for say, section .debug_rnglists it also\ntries to use the range list references related to section .debug_ranges.\n\nFix this by filtering out the .debug_range references when handling\n.debug_rnglists and vice versa.\n\nbinutils/ChangeLog:\n\n2021-02-10  Tom de Vries  <tdevries@suse.de>\n\n\tPR binutils/27371\n\t* dwarf.c (display_debug_ranges): Filter range lists according to\n\tsection.",
    "tree": {
      "sha": "4e690f3bfe0f2769938e5833d660da23074ca1a2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4e690f3bfe0f2769938e5833d660da23074ca1a2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/52ff20fe7ba8e8de2660339fff5308ed932e2b32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52ff20fe7ba8e8de2660339fff5308ed932e2b32",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/52ff20fe7ba8e8de2660339fff5308ed932e2b32",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/52ff20fe7ba8e8de2660339fff5308ed932e2b32/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ee4c3d88019ed88c3110e22cda16891aed14f818",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ee4c3d88019ed88c3110e22cda16891aed14f818",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ee4c3d88019ed88c3110e22cda16891aed14f818"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 22,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1d6b9675dc2de22699f768c6274375caa816d2dd",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52ff20fe7ba8e8de2660339fff5308ed932e2b32/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52ff20fe7ba8e8de2660339fff5308ed932e2b32/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=52ff20fe7ba8e8de2660339fff5308ed932e2b32",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-10  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR binutils/27371\n+\t* dwarf.c (display_debug_ranges): Filter range lists according to\n+\tsection.\n+\n 2021-02-09  Tom de Vries  <tdevries@suse.de>\n \n \tPR binutils/27370"
    },
    {
      "sha": "84d63f63366e7e5bcda819f077f1b225d75a3b0f",
      "filename": "binutils/dwarf.c",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/52ff20fe7ba8e8de2660339fff5308ed932e2b32/binutils/dwarf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/52ff20fe7ba8e8de2660339fff5308ed932e2b32/binutils/dwarf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/dwarf.c?ref=52ff20fe7ba8e8de2660339fff5308ed932e2b32",
      "patch": "@@ -7673,7 +7673,15 @@ display_debug_ranges (struct dwarf_section *section,\n \n   num_range_list = 0;\n   for (i = 0; i < num_debug_info_entries; i++)\n-    num_range_list += debug_information [i].num_range_lists;\n+    {\n+      if (debug_information [i].dwarf_version < 5 && is_rnglists)\n+\t/* Skip .debug_rnglists reference.  */\n+\tcontinue;\n+      if (debug_information [i].dwarf_version >= 5 && !is_rnglists)\n+\t/* Skip .debug_range reference.  */\n+\tcontinue;\n+      num_range_list += debug_information [i].num_range_lists;\n+    }\n \n   if (num_range_list == 0)\n     {\n@@ -7692,6 +7700,13 @@ display_debug_ranges (struct dwarf_section *section,\n       debug_info *debug_info_p = &debug_information[i];\n       unsigned int j;\n \n+      if (debug_information [i].dwarf_version < 5 && is_rnglists)\n+\t/* Skip .debug_rnglists reference.  */\n+\tcontinue;\n+      if (debug_information [i].dwarf_version >= 5 && !is_rnglists)\n+\t/* Skip .debug_range reference.  */\n+\tcontinue;\n+\n       for (j = 0; j < debug_info_p->num_range_lists; j++)\n \t{\n \t  range_entry_fill->ranges_offset = debug_info_p->range_lists[j];"
    }
  ]
}