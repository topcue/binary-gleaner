{
  "sha": "1b00ef063f8230a1f110cc5aeef04d3dc1338358",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWIwMGVmMDYzZjgyMzBhMWYxMTBjYzVhZWVmMDRkM2RjMTMzODM1OA==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-28T20:04:12Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-10-28T20:04:12Z"
    },
    "message": "[gdb/symtab] Fix language of frame without debug info\n\nOn openSUSE Leap 15.2, I run into this FAIL with target board readnow and\ntest-case gdb.dwarf2/dw2-align.exp:\n...\n(gdb) set lang c++^M\nWarning: the current language does not match this frame.^M\n(gdb) FAIL: gdb.dwarf2/dw2-align.exp: set lang c++\n...\n\nAdding some extra debugging shows that the current language differs without\nand with readnow:\n...\n Breakpoint 1, 0x00000000004004ab in main ()^M\n (gdb) show lang^M\n-The current source language is \"auto; currently c\".^M\n+The current source language is \"auto; currently asm\".^M\n...\n\nThis is explained by find_pc_compunit_symtab (0x4004ab) called from\nselect_frame, which:\n- without readnow: returns NULL, and\n- with readnow: returns the symtab for the CU crtn.S, wich has language\n  \"MIPS assembler\".\n\nIn the former case, the symtab for crtn.S is not expanded, and\nfind_pc_compunit_symtab hits the default NULL return.  In the latter case, the\nsymtab for crtn.S is expanded, and the \"best match\" loop in\nfind_pc_compunit_symtab returns that symtab as its best match.\n\nThe GLOBAL_BLOCK for crtn.S has these outer limits of the address range:\n...\n(gdb) p /x b.startaddr\n$6 = 0x4003c2\n(gdb) p /x b.endaddr\n$7 = 0x40053d\n...\nand 0x4004ab indeed fits in that range, which explains why the CU is\nconsidered a match.\n\nHowever, the actual address ranges for the CU are:\n...\n    00000040 ffffffffffffffff 0000000000000000 (base address)\n    00000040 00000000004003c2 00000000004003c7\n    00000040 0000000000400538 000000000040053d\n    00000040 <End of list>\n...\nwhich confirms that the CU should not be considered a match.\n\nThe problem is that the \"best match\" loop is based on the assumption that a\nsymtab with a better match will be found, but in this case we don't find a\nbetter match because there's no debug info describing main.\n\nFix this by preferring to use the addres map in the \"best match\" loop, which\nwill accurately tell us that addrmap_find (bv.map, 0x4004ab) == NULL.\n\nTested on x86_64-linux (that is, openSUSE Leap 15.2), with and without\nreadnow.  In the case of a readnow run, brings down the number of unexpected\nfailures from 66 to 38.\n\nThe FAIL does not reproduce on f.i. Ubuntu 18.04.5, because there the exec\ndoes not contain debug info for crtn.S.  The dwarf assembly test-case mimics\nthe scenario described above, and reproduces the FAIL with and without\n-readnow, for both mentioned OS configurations.\n\nAlso fixes PR25980 - \"Overlapping Dwarf Compile Units with non-overlapping\nsubranges gives incorrect line information\".\n\ngdb/ChangeLog:\n\n2020-10-28  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26772\n\t* symtab.c (find_pc_sect_compunit_symtab): In case there's an address\n\tmap, check it in the \"best match\" loop.\n\ngdb/testsuite/ChangeLog:\n\n2020-10-28  Tom de Vries  <tdevries@suse.de>\n\n\tPR symtab/26772\n\t* gdb.dwarf2/dw2-ranges-overlap.c: New test.\n\t* gdb.dwarf2/dw2-ranges-overlap.exp: New file.",
    "tree": {
      "sha": "14c95a9c02df46e515a30c21f0571e34e7c5fb4f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/14c95a9c02df46e515a30c21f0571e34e7c5fb4f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1b00ef063f8230a1f110cc5aeef04d3dc1338358",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b00ef063f8230a1f110cc5aeef04d3dc1338358",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1b00ef063f8230a1f110cc5aeef04d3dc1338358",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1b00ef063f8230a1f110cc5aeef04d3dc1338358/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ce04ca31231138105fae3b0dda1670c6ec0e2dcb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ce04ca31231138105fae3b0dda1670c6ec0e2dcb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ce04ca31231138105fae3b0dda1670c6ec0e2dcb"
    }
  ],
  "stats": {
    "total": 143,
    "additions": 143,
    "deletions": 0
  },
  "files": [
    {
      "sha": "9dd5c0b6b22aa4d4a442cd501803801692e05809",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1b00ef063f8230a1f110cc5aeef04d3dc1338358",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-28  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26772\n+\t* symtab.c (find_pc_sect_compunit_symtab): In case there's an address\n+\tmap, check it in the \"best match\" loop.\n+\n 2020-10-27  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* m32c-tdep.c: Remove unused includes."
    },
    {
      "sha": "b7aae1bed14a24dfb4da08d1c558475d077d2691",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=1b00ef063f8230a1f110cc5aeef04d3dc1338358",
      "patch": "@@ -2923,6 +2923,14 @@ find_pc_sect_compunit_symtab (CORE_ADDR pc, struct obj_section *section)\n \t  if (!in_range_p)\n \t    continue;\n \n+\t  if (BLOCKVECTOR_MAP (bv))\n+\t    {\n+\t      if (addrmap_find (BLOCKVECTOR_MAP (bv), pc) == nullptr)\n+\t\tcontinue;\n+\n+\t      return cust;\n+\t    }\n+\n \t  CORE_ADDR range = end - start;\n \t  if (best_cust != nullptr\n \t      && range >= best_cust_range)"
    },
    {
      "sha": "6973e9fc2fd1053047988a51a2d596ef3a7892d6",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=1b00ef063f8230a1f110cc5aeef04d3dc1338358",
      "patch": "@@ -1,3 +1,9 @@\n+2020-10-28  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR symtab/26772\n+\t* gdb.dwarf2/dw2-ranges-overlap.c: New test.\n+\t* gdb.dwarf2/dw2-ranges-overlap.exp: New file.\n+\n 2020-10-28  Tom de Vries  <tdevries@suse.de>\n \n \t* lib/gdb.exp (gdb_file_cmd): Set gdb_file_cmd_msg."
    },
    {
      "sha": "cbc4551e43703557e6663a57dc5fa42973eb5ff7",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.c",
      "status": "added",
      "additions": 36,
      "deletions": 0,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.c?ref=1b00ef063f8230a1f110cc5aeef04d3dc1338358",
      "patch": "@@ -0,0 +1,36 @@\n+/*\n+   Copyright 2020 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+bar (int a)\n+{\n+  asm (\"bar_label: .globl bar_label\");\n+  return a + 1;\n+}\n+\n+int\n+foo (int a)\n+{\n+  asm (\"foo_label: .globl foo_label\");\n+  return bar (a * 2) + 3;\n+}\n+\n+int\n+main (void)\n+{\n+  asm (\"main_label: .globl main_label\");\n+  return foo (5) + 1;\n+}"
    },
    {
      "sha": "59c10c8ae249a4bec937d5b2fb4a34e4121f19f0",
      "filename": "gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.exp",
      "status": "added",
      "additions": 87,
      "deletions": 0,
      "changes": 87,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1b00ef063f8230a1f110cc5aeef04d3dc1338358/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.dwarf2/dw2-ranges-overlap.exp?ref=1b00ef063f8230a1f110cc5aeef04d3dc1338358",
      "patch": "@@ -0,0 +1,87 @@\n+# Copyright 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+load_lib dwarf.exp\n+\n+# The function foo is encapsulated by two functions from CU\n+# $srcfile (main and bar), but the debug info does not describe foo, so\n+# foo should not be seen as part of CU $srcfile.\n+# Run to foo, and check that the current language is the default auto/C.\n+# If foo is considered part of CU $srcfile, the language will be auto/C++\n+# instead.\n+\n+# This test can only be run on targets which support DWARF-2 and use gas.\n+if {![dwarf2_support]} {\n+    verbose \"Skipping $gdb_test_file_name.\"\n+    return 0\n+}\n+\n+# The .c files use __attribute__.\n+if [get_compiler_info] {\n+    return -1\n+}\n+if !$gcc_compiled {\n+    verbose \"Skipping $gdb_test_file_name.\"\n+    return 0\n+}\n+\n+standard_testfile .c -dw.S\n+\n+set asm_file [standard_output_file $srcfile2]\n+Dwarf::assemble $asm_file {\n+    global srcdir subdir srcfile srcfile2\n+    declare_labels ranges_label\n+\n+    # Find start address and length for our functions.\n+    set main_func \\\n+\t[function_range main [list ${srcdir}/${subdir}/$srcfile]]\n+    set foo_func \\\n+\t[function_range foo [list ${srcdir}/${subdir}/$srcfile]]\n+    set bar_func \\\n+\t[function_range bar [list ${srcdir}/${subdir}/$srcfile]]\n+\n+    cu {} {\n+\tcompile_unit {\n+\t    {language @DW_LANG_C_plus_plus}\n+\t    {name $srcfile}\n+\t    {ranges ${ranges_label} DW_FORM_sec_offset}\n+\t} {\n+\t    subprogram {\n+\t\t{external 1 flag}\n+\t\t{name main}\n+\t    }\n+\t}\n+    }\n+\n+    ranges {is_64 [is_64_target]} {\n+\tranges_label: sequence {\n+\t    {base [lindex $main_func 0]}\n+\t    {range 0 [lindex $main_func 1]}\n+\t    {base [lindex $bar_func 0]}\n+\t    {range 0 [lindex $bar_func 1]}\n+\t}\n+    }\n+}\n+\n+if { [prepare_for_testing \"failed to prepare\" ${testfile} \\\n+\t  [list $srcfile $asm_file] {nodebug}] } {\n+    return -1\n+}\n+\n+if ![runto foo] {\n+    return -1\n+}\n+\n+gdb_test \"show language\" \\\n+    \"The current source language is \\\"auto; currently c\\\"\\.\""
    }
  ]
}