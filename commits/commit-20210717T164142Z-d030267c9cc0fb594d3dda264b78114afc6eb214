{
  "sha": "d030267c9cc0fb594d3dda264b78114afc6eb214",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDAzMDI2N2M5Y2MwZmI1OTRkM2RkYTI2NGI3ODExNGFmYzZlYjIxNA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-07-04T18:51:52Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-07-17T16:41:42Z"
    },
    "message": "Simplify file_and_directory storage management\n\nfile_and_directory carries a std::string in case the compilation\ndirectory is computed, but a subsequent patch wants to preserve this\nstring without also having to maintain the storage for it.  So, this\npatch arranges for the compilation directory string to be stored in\nthe per-BFD string bcache instead.",
    "tree": {
      "sha": "101853657cc9d826cf7fe6c5137536e45e2c89db",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/101853657cc9d826cf7fe6c5137536e45e2c89db"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d030267c9cc0fb594d3dda264b78114afc6eb214",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d030267c9cc0fb594d3dda264b78114afc6eb214",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d030267c9cc0fb594d3dda264b78114afc6eb214",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d030267c9cc0fb594d3dda264b78114afc6eb214/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dcce7ec41082666e51e39480e2c4037124e1e1b5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dcce7ec41082666e51e39480e2c4037124e1e1b5",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dcce7ec41082666e51e39480e2c4037124e1e1b5"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 7,
    "deletions": 10
  },
  "files": [
    {
      "sha": "e0007b759a2a013c38e10a9cce0da8844599aac3",
      "filename": "gdb/dwarf2/read.c",
      "status": "modified",
      "additions": 7,
      "deletions": 10,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d030267c9cc0fb594d3dda264b78114afc6eb214/gdb/dwarf2/read.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d030267c9cc0fb594d3dda264b78114afc6eb214/gdb/dwarf2/read.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.c?ref=d030267c9cc0fb594d3dda264b78114afc6eb214",
      "patch": "@@ -1533,14 +1533,10 @@ struct file_and_directory\n   const char *name;\n \n   /* The compilation directory.  NULL if not known.  If we needed to\n-     compute a new string, this points to COMP_DIR_STORAGE, otherwise,\n-     points directly to the DW_AT_comp_dir string attribute owned by\n-     the obstack that owns the DIE.  */\n+     compute a new string, it will be stored in the per-BFD string\n+     bcache; otherwise, points directly to the DW_AT_comp_dir string\n+     attribute owned by the obstack that owns the DIE.  */\n   const char *comp_dir;\n-\n-  /* If we needed to build a new string for comp_dir, this is what\n-     owns the storage.  */\n-  std::string comp_dir_storage;\n };\n \n static file_and_directory find_file_and_directory (struct die_info *die,\n@@ -10387,9 +10383,10 @@ find_file_and_directory (struct die_info *die, struct dwarf2_cu *cu)\n       && producer_is_gcc_lt_4_3 (cu) && res.name != NULL\n       && IS_ABSOLUTE_PATH (res.name))\n     {\n-      res.comp_dir_storage = ldirname (res.name);\n-      if (!res.comp_dir_storage.empty ())\n-\tres.comp_dir = res.comp_dir_storage.c_str ();\n+      std::string comp_dir_storage = ldirname (res.name);\n+      if (!comp_dir_storage.empty ())\n+\tres.comp_dir\n+\t  = cu->per_objfile->objfile->intern (comp_dir_storage.c_str ());\n     }\n   if (res.comp_dir != NULL)\n     {"
    }
  ]
}