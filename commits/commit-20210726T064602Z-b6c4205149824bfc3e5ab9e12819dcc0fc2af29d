{
  "sha": "b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YjZjNDIwNTE0OTgyNGJmYzNlNWFiOWUxMjgxOWRjYzBmYzJhZjI5ZA==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-07-26T06:25:03Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2021-07-26T06:46:02Z"
    },
    "message": "gdb/mi: handle no condition argument case for -break-condition\n\nAs reported in PR gdb/28076 [1], passing no condition argument to the\n-break-condition command (e.g.: \"-break-condition 2\") should clear the\ncondition for breakpoint 2, just like CLI's \"condition 2\", but instead\nan error message is returned:\n\n  ^error,msg=\"-break-condition: Missing the <number> and/or <expr> argument\"\n\nThe current implementation of the -break-condition command's argument\nhandling (79aabb7308c \"gdb/mi: add a '--force' flag to the\n'-break-condition' command\") was done according to the documentation,\nwhere the condition argument seemed mandatory.  However, the\n-break-condition command originally (i.e. before the 79aabb7308c\npatch) used the CLI's \"cond\" command, and back then not passing a\ncondition argument was clearing out the condition.  So, this is a\nregression in terms of the behavior.\n\nFix the argument handling of the -break-condition command to allow not\nhaving a condition argument, and also update the document to make the\nbehavior clear.  Also add test cases to test the scenarios which were\npreviously not covered.\n\n[1] https://sourceware.org/bugzilla/show_bug.cgi?id=28076",
    "tree": {
      "sha": "62da7978ba7ce96065827a9c07095dbc1049ca70",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/62da7978ba7ce96065827a9c07095dbc1049ca70"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b924d9bad57a1ddb2e0f83229db5a33b5fb7bec6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b924d9bad57a1ddb2e0f83229db5a33b5fb7bec6",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b924d9bad57a1ddb2e0f83229db5a33b5fb7bec6"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 32,
    "deletions": 10
  },
  "files": [
    {
      "sha": "f4ce3d34a0ce4d2d2ca17a58dba400e35f96beda",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
      "patch": "@@ -30565,15 +30565,16 @@ times=\"0\"@}\n @subsubheading Synopsis\n \n @smallexample\n- -break-condition [ --force ] @var{number} @var{expr}\n+ -break-condition [ --force ] @var{number} [ @var{expr} ]\n @end smallexample\n \n Breakpoint @var{number} will stop the program only if the condition in\n @var{expr} is true.  The condition becomes part of the\n @samp{-break-list} output (see the description of the @samp{-break-list}\n command below).  If the @samp{--force} flag is passed, the condition\n is forcibly defined even when it is invalid for all locations of\n-breakpoint @var{number}.\n+breakpoint @var{number}.  If the @var{expr} argument is omitted,\n+breakpoint @var{number} becomes unconditional.\n \n @subsubheading @value{GDBN} Command\n "
    },
    {
      "sha": "c2d642d75b4059aa34821ceafb2fd95e22f68d1b",
      "filename": "gdb/mi/mi-cmd-break.c",
      "status": "modified",
      "additions": 7,
      "deletions": 8,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/mi/mi-cmd-break.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/mi/mi-cmd-break.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-cmd-break.c?ref=b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
      "patch": "@@ -423,20 +423,19 @@ mi_cmd_break_condition (const char *command, char **argv, int argc)\n \t}\n     }\n \n-  /* There must be at least two more args: a bpnum and a condition\n-     expression.  */\n-  if (oind + 1 >= argc)\n-    error (_(\"-break-condition: Missing the <number> and/or <expr> \"\n-\t     \"argument\"));\n+  /* There must be at least one more arg: a bpnum.  */\n+  if (oind >= argc)\n+    error (_(\"-break-condition: Missing the <number> argument\"));\n \n   int bpnum = atoi (argv[oind]);\n \n   /* The rest form the condition expr.  */\n-  std::string expr (argv[oind + 1]);\n-  for (int i = oind + 2; i < argc; ++i)\n+  std::string expr = \"\";\n+  for (int i = oind + 1; i < argc; ++i)\n     {\n-      expr += \" \";\n       expr += argv[i];\n+      if (i + 1 < argc)\n+\texpr += \" \";\n     }\n \n   set_breakpoint_condition (bpnum, expr.c_str (), 0 /* from_tty */,"
    },
    {
      "sha": "7d01a936947602a5c038e6d3888424121a8f6863",
      "filename": "gdb/testsuite/gdb.mi/mi-break.exp",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/testsuite/gdb.mi/mi-break.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b6c4205149824bfc3e5ab9e12819dcc0fc2af29d/gdb/testsuite/gdb.mi/mi-break.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.mi/mi-break.exp?ref=b6c4205149824bfc3e5ab9e12819dcc0fc2af29d",
      "patch": "@@ -435,6 +435,28 @@ proc_with_prefix test_forced_conditions {} {\n     mi_gdb_test \"-break-info 16\" \\\n \t\"\\\\^done,[mi_make_breakpoint_table [list $bp]]\" \\\n \t\"invalid condition is defined\"\n+\n+    # No cond argument should clear the condition.\n+    mi_gdb_test \"-break-condition 16\" \\\n+\t\"~\\\"Breakpoint 16's condition is now valid at location 1, enabling.*\\\\^done\" \\\n+\t\"clear the condition\"\n+    set bp [mi_make_breakpoint -number 16]\n+    mi_gdb_test \"-break-info 16\" \\\n+\t\"\\\\^done,[mi_make_breakpoint_table [list $bp]]\" \\\n+\t\"condition is cleared\"\n+\n+    # Zero-argument is an error.\n+    mi_gdb_test \"-break-condition\" \\\n+\t\"\\\\^error,msg=\\\"-break-condition: Missing the <number> argument\\\"\" \\\n+\t\"no arguments to -break-condition\"\n+\n+    # Passing --force with no condition should not crash or raise an error.\n+    mi_gdb_test \"-break-condition --force 16\" \\\n+\t\"\\\\^done\" \\\n+\t\"clear the condition with --force\"\n+    mi_gdb_test \"-break-condition --force\" \\\n+\t\"\\\\^error,msg=\\\"-break-condition: Missing the <number> argument\\\"\" \\\n+\t\"no arguments with --force\"\n }\n \n proc test_break {mi_mode} {"
    }
  ]
}