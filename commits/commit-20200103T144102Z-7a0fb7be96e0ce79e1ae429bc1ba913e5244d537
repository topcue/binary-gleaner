{
  "sha": "7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2EwZmI3YmU5NmUwY2U3OWUxYWU0MjliYzFiYTkxM2U1MjQ0ZDUzNw==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-03T14:41:02Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-01-03T14:41:02Z"
    },
    "message": "Fix potential illegal memory access failures in the BFD library by ensuring that the return value from bfd_malloc() is checked before it is used.\n\n\tPR 25308\n\t* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the\n\treturn value from bfd_malloc.\n\t* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.\n\t(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.\n\t(elf32_arm_filter_cmse_symbols): Likewise.\n\t(elf32_arm_write_section): Likewise.\n\t* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.\n\t(bfd_mach_o_follow_dsym): Likewise.\n\t* pef.c (bfd_pef_print_loader_section): Likewise.\n\t(bfd_pef_scan_start_address): Likewise.\n\t(bfd_pef_parse_function_stubs): Likewise.\n\t(bfd_pef_parse_symbols): Likewise.",
    "tree": {
      "sha": "2cd6d1c387030ff641bee30455eee384d516d7a9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2cd6d1c387030ff641bee30455eee384d516d7a9"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a2322019f5669e80444cdf6a8222f94a45301b3a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2322019f5669e80444cdf6a8222f94a45301b3a",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/a2322019f5669e80444cdf6a8222f94a45301b3a"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 42,
    "deletions": 5
  },
  "files": [
    {
      "sha": "7fb5bcad5953637d016335c24930c347f6f08d75",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
      "patch": "@@ -1,3 +1,19 @@\n+2020-01-03  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 25308\n+\t* elf-properties.c (_bfd_elf_convert_gnu_properties): Check the\n+\treturn value from bfd_malloc.\n+\t* elf32-arm.c (bfd_elf32_arm_vfp11_fix_veneer_locations): Likewise.\n+\t(bfd_elf32_arm_stm32l4xx_fix_veneer_locations): Likewise.\n+\t(elf32_arm_filter_cmse_symbols): Likewise.\n+\t(elf32_arm_write_section): Likewise.\n+\t* mach-o.c (bfd_mach_o_core_fetch_environment): Likewise.\n+\t(bfd_mach_o_follow_dsym): Likewise.\n+\t* pef.c (bfd_pef_print_loader_section): Likewise.\n+\t(bfd_pef_scan_start_address): Likewise.\n+\t(bfd_pef_parse_function_stubs): Likewise.\n+\t(bfd_pef_parse_symbols): Likewise.\n+\n 2020-01-03  Sergei Trofimovich  <siarheit@google.com>\n \n         * elfnn-ia64.c (elfNN_ia64_merge_private_bfd_data): don't fail"
    },
    {
      "sha": "76ddad603711112dcac702aaa3fe16eb9dd3d89d",
      "filename": "bfd/elf-properties.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/elf-properties.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/elf-properties.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf-properties.c?ref=7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
      "patch": "@@ -703,6 +703,8 @@ _bfd_elf_convert_gnu_properties (bfd *ibfd, asection *isec,\n   if (size > bfd_section_size (isec))\n     {\n       contents = (bfd_byte *) bfd_malloc (size);\n+      if (contents == NULL)\n+\treturn FALSE;\n       free (*ptr);\n       *ptr = contents;\n     }"
    },
    {
      "sha": "2bf355a331222bc3c2d1c54ee704cfddbd11443f",
      "filename": "bfd/elf32-arm.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/elf32-arm.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/elf32-arm.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf32-arm.c?ref=7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
      "patch": "@@ -7148,7 +7148,6 @@ find_arm_glue (struct bfd_link_info *link_info,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen (name)\n \t\t\t\t  + strlen (ARM2THUMB_GLUE_ENTRY_NAME) + 1);\n-\n   BFD_ASSERT (tmp_name);\n \n   sprintf (tmp_name, ARM2THUMB_GLUE_ENTRY_NAME, name);\n@@ -7323,7 +7322,6 @@ record_arm_to_thumb_glue (struct bfd_link_info * link_info,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen (name)\n \t\t\t\t  + strlen (ARM2THUMB_GLUE_ENTRY_NAME) + 1);\n-\n   BFD_ASSERT (tmp_name);\n \n   sprintf (tmp_name, ARM2THUMB_GLUE_ENTRY_NAME, name);\n@@ -7401,7 +7399,6 @@ record_arm_bx_glue (struct bfd_link_info * link_info, int reg)\n   /* Add symbol for veneer.  */\n   tmp_name = (char *)\n       bfd_malloc ((bfd_size_type) strlen (ARM_BX_GLUE_ENTRY_NAME) + 1);\n-\n   BFD_ASSERT (tmp_name);\n \n   sprintf (tmp_name, ARM_BX_GLUE_ENTRY_NAME, reg);\n@@ -7493,7 +7490,6 @@ record_vfp11_erratum_veneer (struct bfd_link_info *link_info,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen\n \t\t\t\t  (VFP11_ERRATUM_VENEER_ENTRY_NAME) + 10);\n-\n   BFD_ASSERT (tmp_name);\n \n   sprintf (tmp_name, VFP11_ERRATUM_VENEER_ENTRY_NAME,\n@@ -7613,7 +7609,6 @@ record_stm32l4xx_erratum_veneer (struct bfd_link_info *link_info,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen\n \t\t\t\t  (STM32L4XX_ERRATUM_VENEER_ENTRY_NAME) + 10);\n-\n   BFD_ASSERT (tmp_name);\n \n   sprintf (tmp_name, STM32L4XX_ERRATUM_VENEER_ENTRY_NAME,\n@@ -8644,6 +8639,7 @@ bfd_elf32_arm_vfp11_fix_veneer_locations (bfd *abfd,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen\n \t\t\t\t  (VFP11_ERRATUM_VENEER_ENTRY_NAME) + 10);\n+  BFD_ASSERT (tmp_name);\n \n   for (sec = abfd->sections; sec != NULL; sec = sec->next)\n     {\n@@ -8731,6 +8727,7 @@ bfd_elf32_arm_stm32l4xx_fix_veneer_locations (bfd *abfd,\n \n   tmp_name = (char *) bfd_malloc ((bfd_size_type) strlen\n \t\t\t\t  (STM32L4XX_ERRATUM_VENEER_ENTRY_NAME) + 10);\n+  BFD_ASSERT (tmp_name);\n \n   for (sec = abfd->sections; sec != NULL; sec = sec->next)\n     {\n@@ -18505,6 +18502,8 @@ elf32_arm_filter_cmse_symbols (bfd *abfd ATTRIBUTE_UNUSED,\n \n   maxnamelen = 128;\n   cmse_name = (char *) bfd_malloc (maxnamelen);\n+  BFD_ASSERT (cmse_name);\n+\n   for (src_count = 0; src_count < symcount; src_count++)\n     {\n       struct elf32_arm_link_hash_entry *cmse_hash;\n@@ -19700,6 +19699,8 @@ elf32_arm_write_section (bfd *output_bfd,\n       unsigned int in_index, out_index;\n       bfd_vma add_to_offsets = 0;\n \n+      if (edited_contents == NULL)\n+\treturn FALSE;\n       for (in_index = 0, out_index = 0; in_index * 8 < input_size || edit_node;)\n \t{\n \t  if (edit_node)"
    },
    {
      "sha": "3b6fbb57888eec0228af39dc00c9b633d0af3a3e",
      "filename": "bfd/mach-o.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/mach-o.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/mach-o.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/mach-o.c?ref=7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
      "patch": "@@ -5752,6 +5752,8 @@ bfd_mach_o_core_fetch_environment (bfd *abfd,\n \t  unsigned char *buf = bfd_malloc (1024);\n \t  unsigned long size = 1024;\n \n+\t  if (buf == NULL)\n+\t    return -1;\n \t  for (;;)\n \t    {\n \t      bfd_size_type nread = 0;\n@@ -5797,6 +5799,8 @@ bfd_mach_o_core_fetch_environment (bfd *abfd,\n \t\t      bottom = seg->fileoff + seg->filesize - offset;\n \t\t      top = seg->fileoff + seg->filesize - 4;\n \t\t      *rbuf = bfd_malloc (top - bottom);\n+\t\t      if (*rbuf == NULL)\n+\t\t\treturn -1;\n \t\t      *rlen = top - bottom;\n \n \t\t      memcpy (*rbuf, buf + size - *rlen, *rlen);\n@@ -5941,6 +5945,9 @@ bfd_mach_o_follow_dsym (bfd *abfd)\n   dsym_filename = (char *)bfd_malloc (strlen (base_bfd->filename)\n \t\t\t\t       + strlen (dsym_subdir) + 1\n \t\t\t\t       + strlen (base_basename) + 1);\n+  if (dsym_filename == NULL)\n+    return NULL;\n+\n   sprintf (dsym_filename, \"%s%s/%s\",\n \t   base_bfd->filename, dsym_subdir, base_basename);\n "
    },
    {
      "sha": "726b8d7493d6c69e335b955da622a915270bbdde",
      "filename": "bfd/pef.c",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/pef.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7a0fb7be96e0ce79e1ae429bc1ba913e5244d537/bfd/pef.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/pef.c?ref=7a0fb7be96e0ce79e1ae429bc1ba913e5244d537",
      "patch": "@@ -447,6 +447,8 @@ bfd_pef_print_loader_section (bfd *abfd, FILE *file)\n \n   loaderlen = loadersec->size;\n   loaderbuf = bfd_malloc (loaderlen);\n+  if (loaderbuf == NULL)\n+    return -1;\n \n   if (bfd_seek (abfd, loadersec->filepos, SEEK_SET) < 0\n       || bfd_bread ((void *) loaderbuf, loaderlen, abfd) != loaderlen\n@@ -478,6 +480,9 @@ bfd_pef_scan_start_address (bfd *abfd)\n \n   loaderlen = loadersec->size;\n   loaderbuf = bfd_malloc (loaderlen);\n+  if (loaderbuf == NULL)\n+    goto end;\n+\n   if (bfd_seek (abfd, loadersec->filepos, SEEK_SET) < 0)\n     goto error;\n   if (bfd_bread ((void *) loaderbuf, loaderlen, abfd) != loaderlen)\n@@ -753,6 +758,8 @@ bfd_pef_parse_function_stubs (bfd *abfd,\n     (header.imported_library_count * sizeof (bfd_pef_imported_library));\n   imports = bfd_malloc\n     (header.total_imported_symbol_count * sizeof (bfd_pef_imported_symbol));\n+  if (libraries == NULL || imports == NULL)\n+    goto error;\n \n   if (loaderlen < (56 + (header.imported_library_count * 24)))\n     goto error;\n@@ -897,6 +904,8 @@ bfd_pef_parse_symbols (bfd *abfd, asymbol **csym)\n     {\n       codelen = codesec->size;\n       codebuf = bfd_malloc (codelen);\n+      if (codebuf == NULL)\n+\tgoto end;\n       if (bfd_seek (abfd, codesec->filepos, SEEK_SET) < 0)\n \tgoto end;\n       if (bfd_bread ((void *) codebuf, codelen, abfd) != codelen)\n@@ -908,6 +917,8 @@ bfd_pef_parse_symbols (bfd *abfd, asymbol **csym)\n     {\n       loaderlen = loadersec->size;\n       loaderbuf = bfd_malloc (loaderlen);\n+      if (loaderbuf == NULL)\n+\tgoto end;\n       if (bfd_seek (abfd, loadersec->filepos, SEEK_SET) < 0)\n \tgoto end;\n       if (bfd_bread ((void *) loaderbuf, loaderlen, abfd) != loaderlen)"
    }
  ]
}