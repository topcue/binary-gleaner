{
  "sha": "4f13c1c00be32131845ae50aef788d4f2c652dff",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NGYxM2MxYzAwYmUzMjEzMTg0NWFlNTBhZWY3ODhkNGYyYzY1MmRmZg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-12-21T18:14:56Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-01-19T20:08:48Z"
    },
    "message": "Make \"file\" clear TUI source window\n\nI noticed that a plain \"file\" will leave the current source file in\nthe TUI source window.  Instead, I think, it should clear the source\nwindow.  This patch implements this.\n\ngdb/ChangeLog\n2020-01-19  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-winsource.c (tui_update_source_windows_with_line):\n\tHandle case where symtab is null.\n\ngdb/testsuite/ChangeLog\n2020-01-19  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.tui/main.exp: Add check for plain \"file\".\n\nChange-Id: I8424acf837f1a47f75bc6a833d1e917d4c10b51e",
    "tree": {
      "sha": "2d269ef25cb784be2931a85b69a01bfd3bbc2e75",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2d269ef25cb784be2931a85b69a01bfd3bbc2e75"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/4f13c1c00be32131845ae50aef788d4f2c652dff",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f13c1c00be32131845ae50aef788d4f2c652dff",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/4f13c1c00be32131845ae50aef788d4f2c652dff",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/4f13c1c00be32131845ae50aef788d4f2c652dff/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa47e4463ab4ee4ddc7858ab11063c7965b232ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa47e4463ab4ee4ddc7858ab11063c7965b232ac",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa47e4463ab4ee4ddc7858ab11063c7965b232ac"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 22,
    "deletions": 5
  },
  "files": [
    {
      "sha": "d8482aaaa5614371561d994216847b26331d1a05",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=4f13c1c00be32131845ae50aef788d4f2c652dff",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-19  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-winsource.c (tui_update_source_windows_with_line):\n+\tHandle case where symtab is null.\n+\n 2020-01-19  Simon Marchi  <simon.marchi@polymtl.ca>\n \n \t* linux-fork.c (one_fork_p): Simplify."
    },
    {
      "sha": "b642641376be32408e0a95532b60b55b299cc38b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=4f13c1c00be32131845ae50aef788d4f2c652dff",
      "patch": "@@ -1,3 +1,7 @@\n+2020-01-19  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.tui/main.exp: Add check for plain \"file\".\n+\n 2020-01-16  Christian Biesinger  <cbiesinger@google.com>\n \n \t* lib/gdb.exp: Fix spelling error (seperatelly)."
    },
    {
      "sha": "ae2393e6e98cba5e32821c80c7da533db26c6f14",
      "filename": "gdb/testsuite/gdb.tui/main.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/testsuite/gdb.tui/main.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/testsuite/gdb.tui/main.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/main.exp?ref=4f13c1c00be32131845ae50aef788d4f2c652dff",
      "patch": "@@ -26,9 +26,16 @@ if {[build_executable \"failed to prepare\" ${testfile} ${srcfile}] == -1} {\n # Note: don't pass the executable here\n Term::clean_restart 24 80\n \n+# Later on we'd like to avoid having to answer a question.\n+gdb_test_no_output \"set interactive-mode off\"\n+\n if {![Term::enter_tui]} {\n     unsupported \"TUI not supported\"\n }\n \n Term::command \"file [standard_output_file $testfile]\"\n Term::check_contents \"show main after file\" \"\\\\|.*21 *return 0\"\n+\n+# Ensure that \"file\" clears the source window.\n+Term::command \"file\"\n+Term::check_contents \"file clears window\" \"No Source Available\""
    },
    {
      "sha": "3ba2f2b041e93b5eb6c3e9d7d1f6da3f497ad026",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 6,
      "deletions": 5,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/4f13c1c00be32131845ae50aef788d4f2c652dff/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=4f13c1c00be32131845ae50aef788d4f2c652dff",
      "patch": "@@ -212,11 +212,12 @@ tui_update_source_windows_with_addr (struct gdbarch *gdbarch, CORE_ADDR addr)\n void\n tui_update_source_windows_with_line (struct symtab_and_line sal)\n {\n-  if (!sal.symtab)\n-    return;\n-\n-  find_line_pc (sal.symtab, sal.line, &sal.pc);\n-  struct gdbarch *gdbarch = get_objfile_arch (SYMTAB_OBJFILE (sal.symtab));\n+  struct gdbarch *gdbarch = nullptr;\n+  if (sal.symtab != nullptr)\n+    {\n+      find_line_pc (sal.symtab, sal.line, &sal.pc);\n+      gdbarch = get_objfile_arch (SYMTAB_OBJFILE (sal.symtab));\n+    }\n \n   for (struct tui_source_window_base *win_info : tui_source_windows ())\n     win_info->update_source_window (gdbarch, sal);"
    }
  ]
}