{
  "sha": "8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OGU3OTViNDZmNThkOWNkODBiODgzMWVhMjRmNTZmMTQzM2I4ZjUwYg==",
  "commit": {
    "author": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-06-04T14:38:26Z"
    },
    "committer": {
      "name": "Nick Alcock",
      "email": "nick.alcock@oracle.com",
      "date": "2020-07-22T17:02:17Z"
    },
    "message": "libctf, dump: migrate towards dumping errors rather than truncation\n\nIf we get an error emitting a single type, variable, or label, right now\nwe emit the error into the ctf_dprintf stream and propagate the error\nall the way up the stack, causing the entire output to be silently\ntruncated (unless libctf debugging is on).\n\nInstead, emit an error and keep going.  (This makes sense for this use\ncase: if you're dumping types and a type is corrupted, you want to\nknow!)\n\nNot all instances of this are fixed in this commit, only ones associated\nwith type formatting: more fixes will come.\n\nlibctf/\n\t* ctf-dump.c (ctf_dump_format_type): Emit a warning.\n\t(ctf_dump_label): Swallow errors from ctf_dump_format_type.\n\t(ctf_dump_objts): Likewise.\n\t(ctf_dump_var): Likewise.\n\t(ctf_dump_type): Do not emit a duplicate message.  Move to\n\tctf_err_warning, and swallow all errors.",
    "tree": {
      "sha": "b57b95ca12bc54c3de0ac90d58e3bdf3f7fa772a",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b57b95ca12bc54c3de0ac90d58e3bdf3f7fa772a"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8e795b46f58d9cd80b8831ea24f56f1433b8f50b/comments",
  "author": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickalcock",
    "id": 6503005,
    "node_id": "MDQ6VXNlcjY1MDMwMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6503005?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickalcock",
    "html_url": "https://github.com/nickalcock",
    "followers_url": "https://api.github.com/users/nickalcock/followers",
    "following_url": "https://api.github.com/users/nickalcock/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickalcock/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickalcock/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickalcock/subscriptions",
    "organizations_url": "https://api.github.com/users/nickalcock/orgs",
    "repos_url": "https://api.github.com/users/nickalcock/repos",
    "events_url": "https://api.github.com/users/nickalcock/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickalcock/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b255b35feb80ecf096825395e01bccd34ee02b2b",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b255b35feb80ecf096825395e01bccd34ee02b2b",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b255b35feb80ecf096825395e01bccd34ee02b2b"
    }
  ],
  "stats": {
    "total": 29,
    "additions": 19,
    "deletions": 10
  },
  "files": [
    {
      "sha": "b13c51c88e6d4d5f761b1db3454273ccd3c5f99a",
      "filename": "libctf/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e795b46f58d9cd80b8831ea24f56f1433b8f50b/libctf/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e795b46f58d9cd80b8831ea24f56f1433b8f50b/libctf/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ChangeLog?ref=8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n+\n+\t* ctf-dump.c (ctf_dump_format_type): Emit a warning.\n+\t(ctf_dump_label): Swallow errors from ctf_dump_format_type.\n+\t(ctf_dump_objts): Likewise.\n+\t(ctf_dump_var): Likewise.\n+\t(ctf_dump_type): Do not emit a duplicate message.  Move to\n+\tctf_err_warning, and swallow all errors.\n+\n 2020-07-22  Nick Alcock  <nick.alcock@oracle.com>\n \n \t* ctf-decl.c (ctf_decl_fini): Free the cd_buf."
    },
    {
      "sha": "55aa496e8b75ac6851bbcac9e2d0b84ba16e37b3",
      "filename": "libctf/ctf-dump.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/8e795b46f58d9cd80b8831ea24f56f1433b8f50b/libctf/ctf-dump.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/8e795b46f58d9cd80b8831ea24f56f1433b8f50b/libctf/ctf-dump.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/libctf/ctf-dump.c?ref=8e795b46f58d9cd80b8831ea24f56f1433b8f50b",
      "patch": "@@ -169,6 +169,8 @@ ctf_dump_format_type (ctf_file_t *fp, ctf_id_t id, int flag)\n  oom:\n   ctf_set_errno (fp, errno);\n  err:\n+  ctf_err_warn (fp, 1, \"Cannot format name dumping type 0x%lx: %s\", id,\n+\t\tctf_errmsg (ctf_errno (fp)));\n   free (buf);\n   free (str);\n   free (bit);\n@@ -318,7 +320,7 @@ ctf_dump_label (const char *name, const ctf_lblinfo_t *info,\n \t\t\t\t       CTF_ADD_ROOT)) == NULL)\n     {\n       free (str);\n-      return -1;\t\t\t/* errno is set for us.  */\n+      return 0;\t\t\t\t/* Swallow the error.  */\n     }\n \n   str = str_append (str, typestr);\n@@ -375,7 +377,7 @@ ctf_dump_objts (ctf_file_t *fp, ctf_dump_state_t *state)\n \t\t\t\t\t   CTF_ADD_ROOT)) == NULL)\n \t{\n \t  free (str);\n-\t  return -1;\t\t\t/* errno is set for us.  */\n+\t  return 0;\t\t\t/* Swallow the error.  */\n \t}\n \n       str = str_append (str, typestr);\n@@ -495,7 +497,7 @@ ctf_dump_var (const char *name, ctf_id_t type, void *arg)\n \t\t\t\t       CTF_ADD_ROOT)) == NULL)\n     {\n       free (str);\n-      return -1;\t\t\t/* errno is set for us.  */\n+      return 0;\t\t\t/* Swallow the error.  */\n     }\n \n   str = str_append (str, typestr);\n@@ -579,10 +581,7 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n   size_t len;\n \n   if ((str = ctf_dump_format_type (state->cds_fp, id, flag)) == NULL)\n-    {\n-      err = \"format type\";\n-      goto err;\n-    }\n+    goto err_nomsg;\t\t/* Error already logged for us.  */\n \n   str = str_append (str, \"\\n\");\n   if ((ctf_type_visit (state->cds_fp, id, ctf_dump_member, &membstate)) < 0)\n@@ -605,10 +604,11 @@ ctf_dump_type (ctf_id_t id, int flag, void *arg)\n   return 0;\n \n  err:\n-  ctf_dprintf (\"Cannot %s dumping type 0x%lx: %s\\n\", err, id,\n-\t       ctf_errmsg (ctf_errno (state->cds_fp)));\n+  ctf_err_warn (state->cds_fp, 1, \"Cannot %s dumping type 0x%lx: %s\",\n+\t\terr, id, ctf_errmsg (ctf_errno (state->cds_fp)));\n+ err_nomsg:\n   free (str);\n-  return -1;\t\t\t\t/* errno is set for us.  */\n+  return 0;\t\t\t\t/* Swallow the error.  */\n }\n \n /* Dump the string table into the cds_items.  */"
    }
  ]
}