{
  "sha": "755251522afd2f33de7e64f8a30ddd732f30b2de",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NzU1MjUxNTIyYWZkMmYzM2RlN2U2NGY4YTMwZGRkNzMyZjMwYjJkZQ==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-21T19:47:28Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2020-02-21T19:47:28Z"
    },
    "message": "[gdb/testsuite] Fix gdb.go/methods.exp\n\nWith gccgo-6/7, we have:\n...\nFAIL: gdb.go/methods.exp: setting breakpoint at main.T.Foo\nXFAIL: gdb.go/methods.exp: going to first breakpoint \\\n  (the program exited)\nFAIL: gdb.go/methods.exp: setting breakpoint at (*main.T).Bar\nXFAIL: gdb.go/methods.exp: going to second breakpoint \\\n  (the program is no longer running)\n...\n\nAnd with gccgo-8/9/10, we have:\n...\nPASS: gdb.go/methods.exp: setting breakpoint 1\nXFAIL: gdb.go/methods.exp: going to first breakpoint\nFAIL: gdb.go/methods.exp: setting breakpoint at (*main.T).Bar\nXFAIL: gdb.go/methods.exp: going to second breakpoint \\\n  (the program exited)\n...\n\nThe first test passes and fails with different messages:\n...\nFAIL: gdb.go/methods.exp: setting breakpoint at main.T.Foo\n...\nor:\n...\nPASS: gdb.go/methods.exp: setting breakpoint 1\n...\nFix this by removing the explicit pass call and using the message argument for\ngdb_breakpoint, for both breakpoint locations.\n\nThe setup of the xfails is non-specific:\n...\nsetup_xfail \"*-*-*\" ;# mangling issues IIRC\n...\nso let's start with removing these.\n\nThe first FAIL with gccgo-6:\n...\nFAIL: gdb.go/methods.exp: setting breakpoint at main.T.Foo\n...\nis due an incorrect DW_AT_name attribute:\n...\n    #    <554>   DW_AT_name        : main.Foo.N6_main.T\n...\nFix this by recognizing the incorrect attribute, and xfailing the test.\n\nFurthermore, if setting the breakpoint fails, there's not much point in trying\nto continue to the breakpoint:\n...\nFAIL: gdb.go/methods.exp: setting breakpoint at main.T.Foo\nFAIL: gdb.go/methods.exp: going to first breakpoint (the program exited)\n...\nFix this by skipping the second test if the first one fails, also for the\nsecond breakpoint.\n\nWith gccgo-10, we manage to set the first breakpoint, but continuing to\nbreakpoint test fails:\n...\nPASS: gdb.go/methods.exp: setting breakpoint 1\nFAIL: gdb.go/methods.exp: going to first breakpoint\n...\nThis is due to an incorrect regexp, requiring a colon in front of the\nbreakpoint location.  Fix this for both breakpoints.\n\nSetting the second breakpoint fails:\n...\nFAIL: gdb.go/methods.exp: setting breakpoint at (*main.T).Bar\n...\npresumably because the breakpoint location \"(*main.T).Bar\" does not follow the\nnaming convention explained at https://golang.org/doc/gdb#Naming.  Fix this by\nupdating the breakpoint location to \"main.(*T).Bar\".\n\nStill this test fails, for gccgo-6/7 because of an incorrect DW_AT_name\nattribute:\n...\n    # <529>   DW_AT_name        : main.Bar.pN6_main.T\n...\nand for gccgo-8/9/10 because of incorrect DW_AT_name/DW_AT_linkage_name\nattributes (filed as gcc PR93866):\n...\n    #    <6e5>   DW_AT_name        : main.Bar..1main.T\n    #    <6ec>   DW_AT_linkage_name: main.T.Bar\n..\nAdd xfails for both of these.\n\nAll in all, now we have with gccgo-6/7:\n...\nXFAIL: gdb.go/methods.exp: setting breakpoint at main.T.Foo\nXFAIL: gdb.go/methods.exp: setting breakpoint at main.(*T).Bar\n...\nand with gccgo-8/9/10, we have:\n...\nPASS: gdb.go/methods.exp: setting breakpoint at main.T.Foo\nPASS: gdb.go/methods.exp: going to first breakpoint\nXFAIL: gdb.go/methods.exp: setting breakpoint at main.(*T).Bar\n...\n\nTested on x86_64-linux with gccgo-6/7/8/9/10.\n\ngdb/testsuite/ChangeLog:\n\n2020-02-21  Tom de Vries  <tdevries@suse.de>\n\n\tPR go/18926\n\t* lib/gdb.exp (bp_location2/bp_location2_regexp): Fix.\n\tRemove blanket xfails.  Use message argument for gdb_breakpoint.\n\tMake continuing to breakpoint test conditional on setting breakpoint.\n\tFix continuing to breakpoint regexp.  Add xfails for gccgo-6/7\n\tDW_AT_name attribute.  Add xfail for GCC PR93866.",
    "tree": {
      "sha": "68a727dfb7b98add42281143cc0dc29d5051c901",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/68a727dfb7b98add42281143cc0dc29d5051c901"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/755251522afd2f33de7e64f8a30ddd732f30b2de",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/755251522afd2f33de7e64f8a30ddd732f30b2de",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/755251522afd2f33de7e64f8a30ddd732f30b2de",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/755251522afd2f33de7e64f8a30ddd732f30b2de/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e94e944bf2834d9bceafa1e1e4246bfa87b89677",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e94e944bf2834d9bceafa1e1e4246bfa87b89677",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e94e944bf2834d9bceafa1e1e4246bfa87b89677"
    }
  ],
  "stats": {
    "total": 84,
    "additions": 74,
    "deletions": 10
  },
  "files": [
    {
      "sha": "5dd1d3386a524dd5f644f920a113299191481f09",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/755251522afd2f33de7e64f8a30ddd732f30b2de/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/755251522afd2f33de7e64f8a30ddd732f30b2de/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=755251522afd2f33de7e64f8a30ddd732f30b2de",
      "patch": "@@ -1,3 +1,12 @@\n+2020-02-21  Tom de Vries  <tdevries@suse.de>\n+\n+\tPR go/18926\n+\t* lib/gdb.exp (bp_location2/bp_location2_regexp): Fix.\n+\tRemove blanket xfails.  Use message argument for gdb_breakpoint.\n+\tMake continuing to breakpoint test conditional on setting breakpoint.\n+\tFix continuing to breakpoint regexp.  Add xfails for gccgo-6/7\n+\tDW_AT_name attribute.  Add xfail for GCC PR93866.\n+\n 2020-02-21  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.dwarf2/cpp-linkage-name.c: New file."
    },
    {
      "sha": "b24ee14cf2cf3e10c6bb9621b9ac0607c632429e",
      "filename": "gdb/testsuite/gdb.go/methods.exp",
      "status": "modified",
      "additions": 65,
      "deletions": 10,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/755251522afd2f33de7e64f8a30ddd732f30b2de/gdb/testsuite/gdb.go/methods.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/755251522afd2f33de7e64f8a30ddd732f30b2de/gdb/testsuite/gdb.go/methods.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.go/methods.exp?ref=755251522afd2f33de7e64f8a30ddd732f30b2de",
      "patch": "@@ -29,22 +29,77 @@ if { [prepare_for_testing \"failed to prepare\" ${testfile} ${srcfile} {debug go}]\n }\n \n set bp_location1 {main.T.Foo}\n-set bp_location2 {(*main.T).Bar}\n-set bp_location2_regexp {\\(*main.T\\).Bar}\n+set bp_location2 {main.(*T).Bar}\n+set bp_location2_regexp {main.\\(\\*T\\).Bar}\n \n if { [go_runto_main] < 0 } {\n     untested \"could not run to main\"\n     return -1\n }\n \n-if { [gdb_breakpoint ${bp_location1}] } {\n-    pass \"setting breakpoint 1\"\n+set found_wrong_foo 0\n+set found_wrong_bar 0\n+gdb_test_multiple \"maintenance print symbols\" \"\" {\n+    -re \"^\\r\\n void main.Foo.N6_main.T\\[^\\r\\n\\]*(?=\\r\\n)\" {\n+\tset found_wrong_foo 1\n+\texp_continue\n+    }\n+    -re \"^\\r\\n void main.Bar.pN6_main.T\\[^\\r\\n\\]*(?=\\r\\n)\" {\n+\tset found_wrong_bar 1\n+\texp_continue\n+    }\n+    -re \"^\\r\\n void main.T.Bar\\[^\\r\\n\\]*(?=\\r\\n)\" {\n+\tset found_wrong_bar 2\n+\texp_continue\n+    }\n+    -re \"\\r\\n$gdb_prompt $\" {\n+\tpass $gdb_test_name\n+    }\n+    -re \"\\r\\n\\[^\\r\\n\\]*(?=\\r\\n)\" {\n+\texp_continue\n+    }\n }\n-setup_xfail \"*-*-*\" ;# mangling issues IIRC\n-gdb_test \"cont\" \"Breakpoint .*:${bp_location1}.*\" \"going to first breakpoint\"\n \n-if { [gdb_breakpoint ${bp_location2}] } {\n-    pass \"setting breakpoint 2\"\n+if { $found_wrong_foo } {\n+    # We have with gccgo-6/7:\n+    # <1><553>: Abbrev Number: 21 (DW_TAG_subprogram)\n+    #    <554>   DW_AT_name        : main.Foo.N6_main.T\n+    setup_xfail \"*-*-*\"\n+} else {\n+    # We have with gccgo-8/9/10:\n+    # <1><1e24>: Abbrev Number: 40 (DW_TAG_subprogram)\n+    #    <1e25>   DW_AT_name        : main.Foo.main.T\n+    #    <1e2c>   DW_AT_linkage_name: main.T.Foo\n+\n+    # For reference: with go1.11.13:\n+    # <1><6c46b>: Abbrev Number: 2 (DW_TAG_subprogram)\n+    #    <6c46c>   DW_AT_name        : main.T.Foo\n+}\n+\n+if { [gdb_breakpoint ${bp_location1} message]} {\n+    gdb_test \"cont\" \"Breakpoint .*, ${bp_location1}.*\" \\\n+\t\"going to first breakpoint\"\n+}\n+\n+if { $found_wrong_bar == 1 } {\n+    # We have with gccgo-6/7:\n+    # <1><528>: Abbrev Number: 19 (DW_TAG_subprogram)\n+    # <529>   DW_AT_name        : main.Bar.pN6_main.T\n+    setup_xfail \"*-*-*\"\n+} elseif { $found_wrong_bar == 2 } {\n+    # We have with gccgo-8/9/10:\n+    # <1><6e4>: Abbrev Number: 24 (DW_TAG_subprogram)\n+    #    <6e5>   DW_AT_name        : main.Bar..1main.T\n+    #    <6ec>   DW_AT_linkage_name: main.T.Bar\n+    # xfail for GCC PR93866\n+    setup_xfail \"*-*-*\"\n+} else {\n+    # For reference: with go1.11.13:\n+    # <1><6c49a>: Abbrev Number: 2 (DW_TAG_subprogram)\n+    #    <6c49b>   DW_AT_name        : main.(*T).Bar\n+ }\n+\n+if { [gdb_breakpoint ${bp_location2} message] } {\n+    gdb_test \"cont\" \"Breakpoint .*, ${bp_location2_regexp}.*\" \\\n+\t\"going to second breakpoint\"\n }\n-setup_xfail \"*-*-*\" ;# mangling issues IIRC\n-gdb_test \"cont\" \"Breakpoint .*:${bp_location2_regexp}.*\" \"going to second breakpoint\""
    }
  ]
}