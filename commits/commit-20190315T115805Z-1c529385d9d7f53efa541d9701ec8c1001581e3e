{
  "sha": "1c529385d9d7f53efa541d9701ec8c1001581e3e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MWM1MjkzODVkOWQ3ZjUzZWZhNTQxZDk3MDFlYzhjMTAwMTU4MWUzZQ==",
  "commit": {
    "author": {
      "name": "Li Hao",
      "email": "li.hao296@zte.com.cn",
      "date": "2019-03-15T11:58:05Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-03-15T11:58:05Z"
    },
    "message": "Fix a potential illegal memory access whilt parsing an x86 insn.\n\n\tPR 24308\n\t* config/tc-i386.c (parse_insn): Check mnemp before using it to\n\tdetermine if a suffix can be trimmed.",
    "tree": {
      "sha": "4b1ebe2623663766cff9937e481edfd59a8d6232",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4b1ebe2623663766cff9937e481edfd59a8d6232"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1c529385d9d7f53efa541d9701ec8c1001581e3e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c529385d9d7f53efa541d9701ec8c1001581e3e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1c529385d9d7f53efa541d9701ec8c1001581e3e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1c529385d9d7f53efa541d9701ec8c1001581e3e/comments",
  "author": null,
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fe3fef62ad11115fc3b03c0c0dcb9c38b2f544cb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fe3fef62ad11115fc3b03c0c0dcb9c38b2f544cb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fe3fef62ad11115fc3b03c0c0dcb9c38b2f544cb"
    }
  ],
  "stats": {
    "total": 74,
    "additions": 42,
    "deletions": 32
  },
  "files": [
    {
      "sha": "bf0c1710011250bc0328b0933d743c219d3ee5f8",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c529385d9d7f53efa541d9701ec8c1001581e3e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c529385d9d7f53efa541d9701ec8c1001581e3e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=1c529385d9d7f53efa541d9701ec8c1001581e3e",
      "patch": "@@ -1,3 +1,9 @@\n+2019-03-15  Li Hao  <li.hao296@zte.com.cn>\n+\n+\tPR 24308\n+\t* config/tc-i386.c (parse_insn): Check mnemp before using it to\n+\tdetermine if a suffix can be trimmed.\n+\n 2019-03-13  Christian Eggers  <ceggers@gmx.de>\n \n \t* dwarf2dbg.c (out_set_addr): Align relocation within .debug_line."
    },
    {
      "sha": "1b1b0a95da89ae24fe601959fa15e54fcc12939d",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 36,
      "deletions": 32,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1c529385d9d7f53efa541d9701ec8c1001581e3e/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1c529385d9d7f53efa541d9701ec8c1001581e3e/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=1c529385d9d7f53efa541d9701ec8c1001581e3e",
      "patch": "@@ -4561,46 +4561,50 @@ parse_insn (char *line, char *mnemonic)\n   if (!current_templates)\n     {\n check_suffix:\n-      /* See if we can get a match by trimming off a suffix.  */\n-      switch (mnem_p[-1])\n+      if (mnem_p > mnemonic)\n \t{\n-\tcase WORD_MNEM_SUFFIX:\n-\t  if (intel_syntax && (intel_float_operand (mnemonic) & 2))\n-\t    i.suffix = SHORT_MNEM_SUFFIX;\n-\t  else\n-\t    /* Fall through.  */\n-\tcase BYTE_MNEM_SUFFIX:\n-\tcase QWORD_MNEM_SUFFIX:\n-\t  i.suffix = mnem_p[-1];\n-\t  mnem_p[-1] = '\\0';\n-\t  current_templates = (const templates *) hash_find (op_hash,\n-                                                             mnemonic);\n-\t  break;\n-\tcase SHORT_MNEM_SUFFIX:\n-\tcase LONG_MNEM_SUFFIX:\n-\t  if (!intel_syntax)\n-\t    {\n-\t      i.suffix = mnem_p[-1];\n-\t      mnem_p[-1] = '\\0';\n-\t      current_templates = (const templates *) hash_find (op_hash,\n-                                                                 mnemonic);\n-\t    }\n-\t  break;\n-\n-\t  /* Intel Syntax.  */\n-\tcase 'd':\n-\t  if (intel_syntax)\n+\t  /* See if we can get a match by trimming off a suffix.  */\n+\t  switch (mnem_p[-1])\n \t    {\n-\t      if (intel_float_operand (mnemonic) == 1)\n+\t    case WORD_MNEM_SUFFIX:\n+\t      if (intel_syntax && (intel_float_operand (mnemonic) & 2))\n \t\ti.suffix = SHORT_MNEM_SUFFIX;\n \t      else\n-\t\ti.suffix = LONG_MNEM_SUFFIX;\n+\t\t/* Fall through.  */\n+\t      case BYTE_MNEM_SUFFIX:\n+\t      case QWORD_MNEM_SUFFIX:\n+\t\ti.suffix = mnem_p[-1];\n \t      mnem_p[-1] = '\\0';\n \t      current_templates = (const templates *) hash_find (op_hash,\n-                                                                 mnemonic);\n+\t\t\t\t\t\t\t\t mnemonic);\n+\t      break;\n+\t    case SHORT_MNEM_SUFFIX:\n+\t    case LONG_MNEM_SUFFIX:\n+\t      if (!intel_syntax)\n+\t\t{\n+\t\t  i.suffix = mnem_p[-1];\n+\t\t  mnem_p[-1] = '\\0';\n+\t\t  current_templates = (const templates *) hash_find (op_hash,\n+\t\t\t\t\t\t\t\t     mnemonic);\n+\t\t}\n+\t      break;\n+\n+\t      /* Intel Syntax.  */\n+\t    case 'd':\n+\t      if (intel_syntax)\n+\t\t{\n+\t\t  if (intel_float_operand (mnemonic) == 1)\n+\t\t    i.suffix = SHORT_MNEM_SUFFIX;\n+\t\t  else\n+\t\t    i.suffix = LONG_MNEM_SUFFIX;\n+\t\t  mnem_p[-1] = '\\0';\n+\t\t  current_templates = (const templates *) hash_find (op_hash,\n+\t\t\t\t\t\t\t\t     mnemonic);\n+\t\t}\n+\t      break;\n \t    }\n-\t  break;\n \t}\n+\n       if (!current_templates)\n \t{\n \t  as_bad (_(\"no such instruction: `%s'\"), token_start);"
    }
  ]
}