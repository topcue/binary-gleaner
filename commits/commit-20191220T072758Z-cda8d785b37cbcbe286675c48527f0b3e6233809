{
  "sha": "cda8d785b37cbcbe286675c48527f0b3e6233809",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Y2RhOGQ3ODViMzdjYmNiZTI4NjY3NWM0ODUyN2YwYjNlNjIzMzgwOQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-20T07:26:35Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-20T07:27:58Z"
    },
    "message": "PR25281, sh disassembler abort\n\n\tPR 25281\n\t* sh-dis.c (print_insn_ddt): Properly check validity of MOVX_NOPY\n\tand MOVY_NOPX insns.  For invalid cases include 0xf000 in the word\n\tprinted.  Print .word in more cases.",
    "tree": {
      "sha": "86c8a1f34f97088e152333ec6622a3cdccb2cd60",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/86c8a1f34f97088e152333ec6622a3cdccb2cd60"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/cda8d785b37cbcbe286675c48527f0b3e6233809",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cda8d785b37cbcbe286675c48527f0b3e6233809",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/cda8d785b37cbcbe286675c48527f0b3e6233809",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/cda8d785b37cbcbe286675c48527f0b3e6233809/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bcd9f578a96b9776e34e5cec963928f5a96b80e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/bcd9f578a96b9776e34e5cec963928f5a96b80e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/bcd9f578a96b9776e34e5cec963928f5a96b80e7"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 17,
    "deletions": 6
  },
  "files": [
    {
      "sha": "d6d731113201c86f31013607c0fd5c9bfed9962b",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda8d785b37cbcbe286675c48527f0b3e6233809/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda8d785b37cbcbe286675c48527f0b3e6233809/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=cda8d785b37cbcbe286675c48527f0b3e6233809",
      "patch": "@@ -1,3 +1,10 @@\n+2019-12-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 25281\n+\t* sh-dis.c (print_insn_ddt): Properly check validity of MOVX_NOPY\n+\tand MOVY_NOPX insns.  For invalid cases include 0xf000 in the word\n+\tprinted.  Print .word in more cases.\n+\n 2019-12-20  Alan Modra  <amodra@gmail.com>\n \n \t* or1k-ibld.c: Regenerate."
    },
    {
      "sha": "03c1e3a5ba206964d27fd0ae5788398e89ea5bc0",
      "filename": "opcodes/sh-dis.c",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/cda8d785b37cbcbe286675c48527f0b3e6233809/opcodes/sh-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/cda8d785b37cbcbe286675c48527f0b3e6233809/opcodes/sh-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/sh-dis.c?ref=cda8d785b37cbcbe286675c48527f0b3e6233809",
      "patch": "@@ -102,8 +102,7 @@ print_movxy (const sh_opcode_info *op,\n \n /* Print a double data transfer insn.  INSN is just the lower three\n    nibbles of the insn, i.e. field a and the bit that indicates if\n-   a parallel processing insn follows.\n-   Return nonzero if a field b of a parallel processing insns follows.  */\n+   a parallel processing insn follows.  */\n \n static void\n print_insn_ddt (int insn, struct disassemble_info *info)\n@@ -113,16 +112,19 @@ print_insn_ddt (int insn, struct disassemble_info *info)\n \n   /* If this is just a nop, make sure to emit something.  */\n   if (insn == 0x000)\n-    fprintf_fn (stream, \"nopx\\tnopy\");\n+    {\n+      fprintf_fn (stream, \"nopx\\tnopy\");\n+      return;\n+    }\n \n   /* If a parallel processing insn was printed before,\n      and we got a non-nop, emit a tab.  */\n   if ((insn & 0x800) && (insn & 0x3ff))\n     fprintf_fn (stream, \"\\t\");\n \n   /* Check if either the x or y part is invalid.  */\n-  if (((insn & 0xc) == 0 && (insn & 0x2a0))\n-      || ((insn & 3) == 0 && (insn & 0x150)))\n+  if (((insn & 3) != 0 && (insn & 0xc) == 0 && (insn & 0x2a0))\n+      || ((insn & 3) == 0 && (insn & 0xc) != 0 && (insn & 0x150)))\n     if (info->mach != bfd_mach_sh_dsp\n         && info->mach != bfd_mach_sh3_dsp)\n       {\n@@ -157,7 +159,7 @@ print_insn_ddt (int insn, struct disassemble_info *info)\n \t\t     fprintf_fn, stream);\n       }\n     else\n-      fprintf_fn (stream, \".word 0x%x\", insn);\n+      fprintf_fn (stream, \".word 0x%x\", insn | 0xf000);\n   else\n     {\n       static const sh_opcode_info *first_movx, *first_movy;\n@@ -189,6 +191,8 @@ print_insn_ddt (int insn, struct disassemble_info *info)\n \t  print_movxy (opy, ((insn >> 8) & 1) + 6, (insn >> 6) & 1,\n \t\t       fprintf_fn, stream);\n \t}\n+      if (!insn_x && !insn_y && ((insn & 0x3ff) != 0 || (insn & 0x800) == 0))\n+\tfprintf_fn (stream, \".word 0x%x\", insn | 0xf000);\n     }\n }\n "
    }
  ]
}