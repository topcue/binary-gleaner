{
  "sha": "eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZWI0OTdhMmE3NzIxOWQ5Y2Q0ZDA1YWEzMmJkNTY5ZjVmZjQwYjI2Ng==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:54Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:06Z"
    },
    "message": "gdbserver: turn target op 'request_interrupt' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's request_interrupt op into a method of\n\tprocess_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\n\tUpdate the derived classes and callers below.\n\n\t* remote-utils.cc (putpkt_binary_1): Update.\n\t(input_interrupt): Update.\n\t(getpkt): Update.\n\t* server.cc (handle_v_requests): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_request_interrupt): Turn into ...\n\t(linux_process_target::request_interrupt): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t(lynx_request_interrupt): Turn into ...\n\t(lynx_process_target::request_interrupt): ... this.\n\t* lynx-low.h (class lynx_process_target): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_request_interrupt): Turn into ...\n\t(nto_process_target::request_interrupt): ... this.\n\t* nto-low.h (class nto_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_request_interrupt): Turn into ...\n\t(win32_process_target::request_interrupt): ... this.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "3c36c0f4d4ff0f4eec53d8ffda7a206a109a0627",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3c36c0f4d4ff0f4eec53d8ffda7a206a109a0627"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2a31c7aa00fcb29e2f4191a9a25b164755986e04",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/2a31c7aa00fcb29e2f4191a9a25b164755986e04"
    }
  ],
  "stats": {
    "total": 80,
    "additions": 57,
    "deletions": 23
  },
  "files": [
    {
      "sha": "75fb3489c5e7b47da827b366a4541771f5c2f5f8",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -1,3 +1,34 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's request_interrupt op into a method of\n+\tprocess_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* remote-utils.cc (putpkt_binary_1): Update.\n+\t(input_interrupt): Update.\n+\t(getpkt): Update.\n+\t* server.cc (handle_v_requests): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_request_interrupt): Turn into ...\n+\t(linux_process_target::request_interrupt): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t(lynx_request_interrupt): Turn into ...\n+\t(lynx_process_target::request_interrupt): ... this.\n+\t* lynx-low.h (class lynx_process_target): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_request_interrupt): Turn into ...\n+\t(nto_process_target::request_interrupt): ... this.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_request_interrupt): Turn into ...\n+\t(win32_process_target::request_interrupt): ... this.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's look_up_symbols op into a method of"
    },
    {
      "sha": "3d02cb5431cf5ac44f6d60c8fe6887f053ee6c24",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -5911,12 +5911,12 @@ linux_process_target::look_up_symbols ()\n #endif\n }\n \n-static void\n-linux_request_interrupt (void)\n+void\n+linux_process_target::request_interrupt ()\n {\n   /* Send a SIGINT to the process group.  This acts just like the user\n      typed a ^C on the controlling terminal.  */\n-  kill (-signal_pid, SIGINT);\n+  ::kill (-signal_pid, SIGINT);\n }\n \n /* Copy LEN bytes from inferior's auxiliary vector starting at OFFSET\n@@ -7369,7 +7369,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_request_interrupt,\n   linux_read_auxv,\n   linux_supports_z_point_type,\n   linux_insert_point,"
    },
    {
      "sha": "197a0bbe1d4b29a82d921e4f65fe261ee6040083",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -307,6 +307,8 @@ class linux_process_target : public process_target\n \t\t    int len) override;\n \n   void look_up_symbols () override;\n+\n+  void request_interrupt () override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "8b5300f08c29c4bfcf2e795fad059216a8907fac",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -714,8 +714,8 @@ lynx_process_target::write_memory (CORE_ADDR memaddr,\n \n /* Implement the kill_request target_ops method.  */\n \n-static void\n-lynx_request_interrupt (void)\n+void\n+lynx_process_target::request_interrupt ()\n {\n   ptid_t inferior_ptid = ptid_of (get_first_thread ());\n \n@@ -729,7 +729,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  lynx_request_interrupt,\n   NULL,  /* read_auxv */\n   NULL,  /* supports_z_point_type */\n   NULL,  /* insert_point */"
    },
    {
      "sha": "795603af0d7d95a932c48f0da41f5308615ca473",
      "filename": "gdbserver/lynx-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/lynx-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/lynx-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.h?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -87,6 +87,8 @@ class lynx_process_target : public process_target\n \n   int write_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t    int len) override;\n+\n+  void request_interrupt () override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "d60f72affd54f8645229a36bc461eefa47c15309",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -746,8 +746,8 @@ nto_process_target::write_memory (CORE_ADDR memaddr,\n \n /* Stop inferior.  We always stop all threads.  */\n \n-static void\n-nto_request_interrupt (void)\n+void\n+nto_process_target::request_interrupt ()\n {\n   TRACE (\"%s\\n\", __func__);\n   nto_set_thread (ptid_t (nto_inferior.pid, 1, 0));\n@@ -943,7 +943,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  nto_request_interrupt,\n   nto_read_auxv,\n   nto_supports_z_point_type,\n   nto_insert_point,"
    },
    {
      "sha": "c6e0c295662448bd64cda99b1b636d902f680048",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -77,6 +77,8 @@ class nto_process_target : public process_target\n \n   int write_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t    int len) override;\n+\n+  void request_interrupt () override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "b5248ab368eadbe7f06f8d90d1aa9c6cda50950a",
      "filename": "gdbserver/remote-utils.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/remote-utils.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/remote-utils.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/remote-utils.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -710,7 +710,7 @@ putpkt_binary_1 (char *buf, int cnt, int is_notif)\n \n       /* Check for an input interrupt while we're here.  */\n       if (cc == '\\003' && current_thread != NULL)\n-\t(*the_target->request_interrupt) ();\n+\tthe_target->pt->request_interrupt ();\n     }\n   while (cc != '+');\n \n@@ -779,7 +779,7 @@ input_interrupt (int unused)\n \t  return;\n \t}\n \n-      (*the_target->request_interrupt) ();\n+      the_target->pt->request_interrupt ();\n     }\n }\n \n@@ -986,7 +986,7 @@ getpkt (char *buf)\n \t     check for an input interrupt.  */\n \t  if (c == '\\003')\n \t    {\n-\t      (*the_target->request_interrupt) ();\n+\t      the_target->pt->request_interrupt ();\n \t      continue;\n \t    }\n \n@@ -1076,7 +1076,7 @@ getpkt (char *buf)\n     {\n       /* Consume the interrupt character in the buffer.  */\n       readchar ();\n-      (*the_target->request_interrupt) ();\n+      the_target->pt->request_interrupt ();\n     }\n \n   return bp - buf;"
    },
    {
      "sha": "bc497f87b7f27bff7203b4d9bd595fb31b4681fa",
      "filename": "gdbserver/server.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/server.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/server.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/server.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -3088,7 +3088,7 @@ handle_v_requests (char *own_buf, int packet_len, int *new_packet_len)\n     {\n       if (strcmp (own_buf, \"vCtrlC\") == 0)\n \t{\n-\t  (*the_target->request_interrupt) ();\n+\t  the_target->pt->request_interrupt ();\n \t  write_ok (own_buf);\n \t  return;\n \t}"
    },
    {
      "sha": "234a183427e7b85e6b844a05f5a38c672fa8f7f6",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -70,11 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Send an interrupt request to the inferior process,\n-     however is appropriate.  */\n-\n-  void (*request_interrupt) (void);\n-\n   /* Read auxiliary vector data from the inferior process.\n \n      Read LEN bytes at OFFSET into a buffer at MYADDR.  */\n@@ -475,6 +470,10 @@ class process_target\n      query, which corresponds to every time more symbols (might)\n      become available.  */\n   virtual void look_up_symbols ();\n+\n+  /* Send an interrupt request to the inferior process,\n+     however is appropriate.  */\n+  virtual void request_interrupt () = 0;\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "098da30017d75439755f8c4d840ebbbdce9820e4",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -1695,8 +1695,8 @@ win32_process_target::write_memory (CORE_ADDR memaddr,\n }\n \n /* Send an interrupt request to the inferior process. */\n-static void\n-win32_request_interrupt (void)\n+void\n+win32_process_target::request_interrupt ()\n {\n   winapi_DebugBreakProcess DebugBreakProcess;\n   winapi_GenerateConsoleCtrlEvent GenerateConsoleCtrlEvent;\n@@ -1838,7 +1838,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_request_interrupt,\n   NULL, /* read_auxv */\n   win32_supports_z_point_type,\n   win32_insert_point,"
    },
    {
      "sha": "2cb38a1419563f36067af0ce66b6cd43a4981e9a",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/eb497a2a77219d9cd4d05aa32bd569f5ff40b266/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=eb497a2a77219d9cd4d05aa32bd569f5ff40b266",
      "patch": "@@ -136,6 +136,8 @@ class win32_process_target : public process_target\n \n   int write_memory (CORE_ADDR memaddr, const unsigned char *myaddr,\n \t\t    int len) override;\n+\n+  void request_interrupt () override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}