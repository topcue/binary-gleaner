{
  "sha": "fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmJiNDYyOTZkN2UwZDA5ZTc5MmE3YzlkNzg0MWNiMjY3NTNjYjNjZQ==",
  "commit": {
    "author": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-04-17T11:10:23Z"
    },
    "committer": {
      "name": "Lancelot SIX",
      "email": "lsix@lancelotsix.com",
      "date": "2021-04-25T17:00:54Z"
    },
    "message": "[PR gdb/22640] ptype: add option to use hexadecimal notation\n\nThis commit adds a flag to the ptype command in order to print the\noffsets and sizes of struct members using the hexadecimal notation.  The\n'x' flag ensures use of the hexadecimal notation while the 'd' flag\nensures use of the decimal notation.  The default is to use decimal\nnotation.\n\nBefore this patch, gdb only uses decimal notation, as pointed out in PR\ngdb/22640.\n\nHere is an example of this new behavior with hex output turned on:\n\n    (gdb) ptype /ox struct type_print_options\n    /* offset      |    size */  type = struct type_print_options {\n    /* 0x0000: 0x0 |  0x0004 */    unsigned int raw : 1;\n    /* 0x0000: 0x1 |  0x0004 */    unsigned int print_methods : 1;\n    /* 0x0000: 0x2 |  0x0004 */    unsigned int print_typedefs : 1;\n    /* 0x0000: 0x3 |  0x0004 */    unsigned int print_offsets : 1;\n    /* 0x0000: 0x4 |  0x0004 */    unsigned int print_in_hex : 1;\n    /* XXX  3-bit hole       */\n    /* XXX  3-byte hole      */\n    /* 0x0004      |  0x0004 */    int print_nested_type_limit;\n    /* 0x0008      |  0x0008 */    typedef_hash_table *local_typedefs;\n    /* 0x0010      |  0x0008 */    typedef_hash_table *global_typedefs;\n    /* 0x0018      |  0x0008 */    ext_lang_type_printers *global_printers;\n\n                                   /* total size (bytes):   32 */\n                                 }\n\nThis patch also adds the 'set print type hex' and 'show print type hex'\ncommands in order to set and inspect the default behavior regarding the\nuse of decimal or hexadecimal notation when printing struct sizes and\noffsets.\n\nTested using on x86_64.\n\ngdb/ChangeLog:\n\n\tPR gdb/22640\n\t* typeprint.h (struct type_print_options): Add print_in_hex\n\tflag.\n\t(struct print_offset_data): Add print_in_hex flag, add a\n\tconstructor accepting a type_print_options* argument.\n\t* typeprint.c (type_print_raw_options, default_ptype_flags): Set\n\tdefault value for print_in_hex.\n\t(print_offset_data::indentation): Allow more horizontal space.\n\t(print_offset_data::print_offset_data): Add ctor.\n\t(print_offset_data::maybe_print_hole, print_offset_data::update):\n\tHandle the print_in_hex flag.\n\t(whatis_exp): Handle 'x' and 'd' flags.\n\t(print_offsets_and_sizes_in_hex): Declare.\n\t(set_print_offsets_and_sizes_in_hex): Create.\n\t(show_print_offsets_and_sizes_in_hex): Create.\n\t(_initialize_typeprint): Update help message for the ptype\n\tcommand, register the 'set print type hex' and 'show print type\n\thex' commands.\n\t* c-typeprint.c (c_print_type, c_type_print_base_struct_union)\n\t(c_type_print_base): Construct the print_offset_data\n\tobject using the type_print_optons parameter.\n\t* rust-lang.c (rust_language::print_type): Construct the\n\tprint_offset_data object using the type_print_optons parameter.\n\t* NEWS: Mention the new flags of the ptype command.\n\ngdb/doc/ChangeLog:\n\n\tPR gdb/22640\n\t* gdb.texinfo (Symbols): Describe the 'x' and 'd' flags of the\n\tptype command, describe 'set print type hex' and 'show print\n\ttype hex' commands.  Update 'ptype/o' examples.\n\ngdb/testsuite/ChangeLog:\n\n\tPR gdb/22640\n\t* gdb.base/ptype-offsets.exp: Add tests to verify the behavior\n\tof 'ptype/ox' and 'ptype/od'. Check that 'set print type hex'\n\tchanges the default behavior of 'ptype/o'.  Update to take into\n\taccount new horizontal layout.\n\t* gdb.rust/simple.exp: Update ptype test to check new horizontal\n\tlayout.\n\t* gdb.rust/union.exp: Same.",
    "tree": {
      "sha": "57a8906aac5ac27c70664f749980f2d3b6c6f517",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/57a8906aac5ac27c70664f749980f2d3b6c6f517"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/comments",
  "author": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "lsix",
    "id": 724339,
    "node_id": "MDQ6VXNlcjcyNDMzOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/724339?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lsix",
    "html_url": "https://github.com/lsix",
    "followers_url": "https://api.github.com/users/lsix/followers",
    "following_url": "https://api.github.com/users/lsix/following{/other_user}",
    "gists_url": "https://api.github.com/users/lsix/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lsix/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lsix/subscriptions",
    "organizations_url": "https://api.github.com/users/lsix/orgs",
    "repos_url": "https://api.github.com/users/lsix/repos",
    "events_url": "https://api.github.com/users/lsix/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lsix/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "18bbba46a974d8b667f9b60c5a7d41bb3cb07369",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/18bbba46a974d8b667f9b60c5a7d41bb3cb07369",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/18bbba46a974d8b667f9b60c5a7d41bb3cb07369"
    }
  ],
  "stats": {
    "total": 854,
    "additions": 559,
    "deletions": 295
  },
  "files": [
    {
      "sha": "fef76a0d9da7a43d73d529246c6707fd522e4b0e",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -1,3 +1,30 @@\n+2021-04-25  Lancelot Six  <lsix@lancelotsix.com>\n+\n+\tPR gdb/22640\n+\t* typeprint.h (struct type_print_options): Add print_in_hex\n+\tflag.\n+\t(struct print_offset_data): Add print_in_hex flag, add a\n+\tconstructor accepting a type_print_options* argument.\n+\t* typeprint.c (type_print_raw_options, default_ptype_flags): Set\n+\tdefault value for print_in_hex.\n+\t(print_offset_data::indentation): Allow more horizontal space.\n+\t(print_offset_data::print_offset_data): Add ctor.\n+\t(print_offset_data::maybe_print_hole, print_offset_data::update):\n+\tHandle the print_in_hex flag.\n+\t(whatis_exp): Handle 'x' and 'd' flags.\n+\t(print_offsets_and_sizes_in_hex): Declare.\n+\t(set_print_offsets_and_sizes_in_hex): Create.\n+\t(show_print_offsets_and_sizes_in_hex): Create.\n+\t(_initialize_typeprint): Update help message for the ptype\n+\tcommand, register the 'set print type hex' and 'show print type\n+\thex' commands.\n+\t* c-typeprint.c (c_print_type, c_type_print_base_struct_union)\n+\t(c_type_print_base): Construct the print_offset_data\n+\tobject using the type_print_optons parameter.\n+\t* rust-lang.c (rust_language::print_type): Construct the\n+\tprint_offset_data object using the type_print_optons parameter.\n+\t* NEWS: Mention the new flags of the ptype command.\n+\n 2021-04-25  Lancelot Six  <lsix@lancelotsix.com>\n \n \t* typeprint.h (struct type_print_options): Move before"
    },
    {
      "sha": "1cdf19c09a01ad00a09e2ab3a31e330a876b0459",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -101,6 +101,11 @@ show startup-quietly\n   initialization file (e.g. ~/.config/gdb/gdbearlyinit) in order to\n   affect GDB.\n \n+set print type hex on|off\n+show print type hex\n+  When 'on', the 'ptype' command uses hexadecimal notation to print sizes\n+  and offsets of struct members.  When 'off', decimal notation is used.\n+\n * Changed commands\n \n break [PROBE_MODIFIER] [LOCATION] [thread THREADNUM]\n@@ -145,6 +150,13 @@ maintenance info sections\n   line flag.  It is now possible to filter which sections are printed\n   even when -all-objects is passed.\n \n+ptype[/FLAGS] TYPE | EXPRESSION\n+  The 'ptype' command has two new flags.  When '/x' is set, hexadecimal\n+  notation is used when printing sizes and offsets of struct members.\n+  When '/d' is set, decimal notation is used when printing sizes and\n+  offsets of struct members.  Default behavior is given by 'show print\n+  type hex'.\n+\n * Removed targets and native configurations\n \n ARM Symbian\t\t\tarm*-*-symbianelf*"
    },
    {
      "sha": "0502d31eff9605e7e2e430c8ad72908792c1b475",
      "filename": "gdb/c-typeprint.c",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/c-typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/c-typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/c-typeprint.c?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -171,7 +171,7 @@ c_print_type (struct type *type,\n \t      int show, int level,\n \t      const struct type_print_options *flags)\n {\n-  struct print_offset_data podata;\n+  struct print_offset_data podata (flags);\n \n   c_print_type_1 (type, varstring, stream, show, level,\n \t\t  current_language->la_language, flags, &podata);\n@@ -188,7 +188,7 @@ c_print_type (struct type *type,\n \t      enum language language,\n \t      const struct type_print_options *flags)\n {\n-  struct print_offset_data podata;\n+  struct print_offset_data podata (flags);\n \n   c_print_type_1 (type, varstring, stream, show, level, language, flags,\n \t\t  &podata);\n@@ -1148,7 +1148,7 @@ c_type_print_base_struct_union (struct type *type, struct ui_file *stream,\n       int len = type->num_fields ();\n       vptr_fieldno = get_vptr_fieldno (type, &basetype);\n \n-      struct print_offset_data local_podata;\n+      struct print_offset_data local_podata (flags);\n \n       for (int i = TYPE_N_BASECLASSES (type); i < len; i++)\n \t{\n@@ -1723,7 +1723,7 @@ c_type_print_base (struct type *type, struct ui_file *stream,\n \t\t   int show, int level,\n \t\t   const struct type_print_options *flags)\n {\n-  struct print_offset_data podata;\n+  struct print_offset_data podata (flags);\n \n   c_type_print_base_1 (type, stream, show, level,\n \t\t       current_language->la_language, flags, &podata);"
    },
    {
      "sha": "c22d4a6a6fecba22aeb15b590526937bc8861c2b",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -1,3 +1,10 @@\n+2021-04-25  Lancelot Six  <lsix@lancelotsix.com>\n+\n+\tPR gdb/22640\n+\t* gdb.texinfo (Symbols): Describe the 'x' and 'd' flags of the\n+\tptype command, describe 'set print type hex' and 'show print\n+\ttype hex' commands.  Update 'ptype/o' examples.\n+\n 2021-04-21  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \t* gdb.texinfo (GDB/MI Breakpoint Information): Update the"
    },
    {
      "sha": "a068de6c95be4e4569c4faaccbe2108f6360436e",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 68,
      "deletions": 45,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -18885,6 +18885,21 @@ types.\n This command shows the current setting of typedef display when\n printing classes.\n \n+@kindex set print type hex\n+@item set print type hex\n+@itemx set print type hex on\n+@itemx set print type hex off\n+\n+When @value{GDBN} prints sizes and offsets of struct members, it can use\n+either the decimal or hexadecimal notation.  You can select one or the\n+other either by passing the appropriate flag to @code{ptype}, or by using\n+the @command{set print type hex} command.\n+\n+@kindex show print type hex\n+@item show print type hex\n+This command shows whether the sizes and offsets of struct members are\n+printed in decimal or hexadecimal notation.\n+\n @kindex info address\n @cindex address of a symbol\n @item info address @var{symbol}\n@@ -18997,6 +19012,14 @@ exists in case you change the default with @command{set print type typedefs}.\n Print the offsets and sizes of fields in a struct, similar to what the\n @command{pahole} tool does.  This option implies the @code{/tm} flags.\n \n+@item x\n+Use hexadecimal notation when printing offsets and sizes of fields in a\n+struct.\n+\n+@item d\n+Use decimal notation when printing offsets and sizes of fields in a\n+struct.\n+\n For example, given the following declarations:\n \n @smallexample\n@@ -19037,14 +19060,14 @@ Issuing a @kbd{ptype /o struct tuv} command would print:\n \n @smallexample\n (@value{GDBP}) ptype /o struct tuv\n-/* offset    |  size */  type = struct tuv @{\n-/*    0      |     4 */    int a1;\n-/* XXX  4-byte hole  */\n-/*    8      |     8 */    char *a2;\n-/*   16      |     4 */    int a3;\n+/* offset      |    size */  type = struct tuv @{\n+/*      0      |       4 */    int a1;\n+/* XXX  4-byte hole      */\n+/*      8      |       8 */    char *a2;\n+/*     16      |       4 */    int a3;\n \n-                           /* total size (bytes):   24 */\n-                         @}\n+                               /* total size (bytes):   24 */\n+                             @}\n @end smallexample\n \n Notice the format of the first column of comments.  There, you can\n@@ -19059,34 +19082,34 @@ It is also possible to print offsets inside an union:\n \n @smallexample\n (@value{GDBP}) ptype /o union qwe\n-/* offset    |  size */  type = union qwe @{\n-/*                24 */    struct tuv @{\n-/*    0      |     4 */        int a1;\n-/* XXX  4-byte hole  */\n-/*    8      |     8 */        char *a2;\n-/*   16      |     4 */        int a3;\n-\n-                               /* total size (bytes):   24 */\n-                           @} fff1;\n-/*                40 */    struct xyz @{\n-/*    0      |     4 */        int f1;\n-/*    4      |     1 */        char f2;\n-/* XXX  3-byte hole  */\n-/*    8      |     8 */        void *f3;\n-/*   16      |    24 */        struct tuv @{\n-/*   16      |     4 */            int a1;\n-/* XXX  4-byte hole  */\n-/*   24      |     8 */            char *a2;\n-/*   32      |     4 */            int a3;\n+/* offset      |    size */  type = union qwe @{\n+/*                    24 */    struct tuv @{\n+/*      0      |       4 */        int a1;\n+/* XXX  4-byte hole      */\n+/*      8      |       8 */        char *a2;\n+/*     16      |       4 */        int a3;\n \n                                    /* total size (bytes):   24 */\n-                               @} f4;\n+                               @} fff1;\n+/*                    40 */    struct xyz @{\n+/*      0      |       4 */        int f1;\n+/*      4      |       1 */        char f2;\n+/* XXX  3-byte hole      */\n+/*      8      |       8 */        void *f3;\n+/*     16      |      24 */        struct tuv @{\n+/*     16      |       4 */            int a1;\n+/* XXX  4-byte hole      */\n+/*     24      |       8 */            char *a2;\n+/*     32      |       4 */            int a3;\n+\n+                                       /* total size (bytes):   24 */\n+                                   @} f4;\n+\n+                                   /* total size (bytes):   40 */\n+                               @} fff2;\n \n                                /* total size (bytes):   40 */\n-                           @} fff2;\n-\n-                           /* total size (bytes):   40 */\n-                         @}\n+                             @}\n @end smallexample\n \n In this case, since @code{struct tuv} and @code{struct xyz} occupy the\n@@ -19099,20 +19122,20 @@ bitfields:\n \n @smallexample\n (@value{GDBP}) ptype /o struct tyu\n-/* offset    |  size */  type = struct tyu @{\n-/*    0:31   |     4 */    int a1 : 1;\n-/*    0:28   |     4 */    int a2 : 3;\n-/*    0: 5   |     4 */    int a3 : 23;\n-/*    3: 3   |     1 */    signed char a4 : 2;\n-/* XXX  3-bit hole   */\n-/* XXX  4-byte hole  */\n-/*    8      |     8 */    int64_t a5;\n-/*   16: 0   |     4 */    int a6 : 5;\n-/*   16: 5   |     8 */    int64_t a7 : 3;\n-\"/* XXX  7-byte padding  */\n-\n-                           /* total size (bytes):   24 */\n-                         @}\n+/* offset      |    size */  type = struct tyu @{\n+/*      0:31   |       4 */    int a1 : 1;\n+/*      0:28   |       4 */    int a2 : 3;\n+/*      0: 5   |       4 */    int a3 : 23;\n+/*      3: 3   |       1 */    signed char a4 : 2;\n+/* XXX  3-bit hole       */\n+/* XXX  4-byte hole      */\n+/*      8      |       8 */    int64_t a5;\n+/*     16: 0   |       4 */    int a6 : 5;\n+/*     16: 5   |       8 */    int64_t a7 : 3;\n+/* XXX  7-byte padding   */\n+\n+                               /* total size (bytes):   24 */\n+                             @}\n @end smallexample\n \n Note how the offset information is now extended to also include the"
    },
    {
      "sha": "8c4d209b07ad5bc3f04f1fa546418a0993a2348b",
      "filename": "gdb/rust-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/rust-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/rust-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/rust-lang.c?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -1574,7 +1574,7 @@ rust_language::print_type (struct type *type, const char *varstring,\n \t\t\t   struct ui_file *stream, int show, int level,\n \t\t\t   const struct type_print_options *flags) const\n {\n-  print_offset_data podata;\n+  print_offset_data podata (flags);\n   rust_internal_print_type (type, varstring, stream, show, level,\n \t\t\t    flags, false, &podata);\n }"
    },
    {
      "sha": "8f41b3a82270cad90671e6ef5751178e15c10673",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -1,3 +1,14 @@\n+2021-04-25  Lancelot Six  <lsix@lancelotsix.com>\n+\n+\tPR gdb/22640\n+\t* gdb.base/ptype-offsets.exp: Add tests to verify the behavior\n+\tof 'ptype/ox' and 'ptype/od'. Check that 'set print type hex'\n+\tchanges the default behavior of 'ptype/o'.  Update to take into\n+\taccount new horizontal layout.\n+\t* gdb.rust/simple.exp: Update ptype test to check new horizontal\n+\tlayout.\n+\t* gdb.rust/union.exp: Same.\n+\n 2021-04-23  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/info_sources.exp: Add new tests."
    },
    {
      "sha": "cc017ad79093c8647eb4525acf8f787538f2f5e7",
      "filename": "gdb/testsuite/gdb.base/ptype-offsets.exp",
      "status": "modified",
      "additions": 338,
      "deletions": 224,
      "changes": 562,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.base/ptype-offsets.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.base/ptype-offsets.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/ptype-offsets.exp?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -35,216 +35,271 @@ if { [prepare_for_testing \"failed to prepare\" $testfile $srcfile \\\n # Test general offset printing, ctor/dtor printing, union, formatting.\n gdb_test \"ptype /o struct abc\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct abc \\{\" \\\n-\"                         public:\" \\\n-\"/*    8      |     8 */    void *field1;\" \\\n-\"/*   16: 0   |     4 */    unsigned int field2 : 1;\" \\\n-\"/* XXX  7-bit hole   */\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   20      |     4 */    int field3;\" \\\n-\"/*   24      |     1 */    signed char field4;\" \\\n-\"/* XXX  7-byte hole  */\" \\\n-\"/*   32      |     8 */    uint64_t field5;\" \\\n-\"/*   40      |     8 */    union \\{\" \\\n-\"/*                 8 */        void *field6;\" \\\n-\"/*                 4 */        int field7;\" \\\n+\"/* offset      |    size */  type = struct abc \\{\" \\\n+\"                             public:\" \\\n+\"/*      8      |       8 */    void *field1;\" \\\n+\"/*     16: 0   |       4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole       */\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     20      |       4 */    int field3;\" \\\n+\"/*     24      |       1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole      */\" \\\n+\"/*     32      |       8 */    uint64_t field5;\" \\\n+\"/*     40      |       8 */    union \\{\" \\\n+\"/*                     8 */        void *field6;\" \\\n+\"/*                     4 */        int field7;\" \\\n \"\" \\\n-\"                               /* total size (bytes):    8 */\" \\\n-\"                           \\} field8;\" \\\n-\"/*   48      |     2 */    my_int_type field9;\" \\\n-\"/* XXX  6-byte padding  */\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} field8;\" \\\n+\"/*     48      |       2 */    my_int_type field9;\" \\\n+\"/* XXX  6-byte padding   */\" \\\n \"\" \\\n-\"                           /* total size (bytes):   56 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n+\n+# test \"ptype /ox\"\n+gdb_test \"ptype /ox struct abc\" \\\n+    [string_to_regexp [multi_line \\\n+\"/* offset      |    size */  type = struct abc {\" \\\n+\"                             public:\" \\\n+\"/* 0x0008      |  0x0008 */    void *field1;\" \\\n+\"/* 0x0010: 0x0 |  0x0004 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole       */\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/* 0x0014      |  0x0004 */    int field3;\" \\\n+\"/* 0x0018      |  0x0001 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole      */\" \\\n+\"/* 0x0020      |  0x0008 */    uint64_t field5;\" \\\n+\"/* 0x0028      |  0x0008 */    union \\{\" \\\n+\"/*                0x0008 */        void *field6;\" \\\n+\"/*                0x0004 */        int field7;\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} field8;\" \\\n+\"/* 0x0030      |  0x0002 */    my_int_type field9;\" \\\n+\"/* XXX  6-byte padding   */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n \n # Test \"ptype /oTM\".\n gdb_test \"ptype /oTM struct abc\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct abc \\{\" \\\n-\"                         public:\" \\\n-\"/*    8      |     8 */    void *field1;\" \\\n-\"/*   16: 0   |     4 */    unsigned int field2 : 1;\" \\\n-\"/* XXX  7-bit hole   */\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   20      |     4 */    int field3;\" \\\n-\"/*   24      |     1 */    signed char field4;\" \\\n-\"/* XXX  7-byte hole  */\" \\\n-\"/*   32      |     8 */    uint64_t field5;\" \\\n-\"/*   40      |     8 */    union \\{\" \\\n-\"/*                 8 */        void *field6;\" \\\n-\"/*                 4 */        int field7;\" \\\n+\"/* offset      |    size */  type = struct abc \\{\" \\\n+\"                             public:\" \\\n+\"/*      8      |       8 */    void *field1;\" \\\n+\"/*     16: 0   |       4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole       */\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     20      |       4 */    int field3;\" \\\n+\"/*     24      |       1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole      */\" \\\n+\"/*     32      |       8 */    uint64_t field5;\" \\\n+\"/*     40      |       8 */    union \\{\" \\\n+\"/*                     8 */        void *field6;\" \\\n+\"/*                     4 */        int field7;\" \\\n \"\" \\\n-\"                               /* total size (bytes):    8 */\" \\\n-\"                           \\} field8;\" \\\n-\"/*   48      |     2 */    my_int_type field9;\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} field8;\" \\\n+\"/*     48      |       2 */    my_int_type field9;\" \\\n \"\" \\\n-\"                           abc(void);\" \\\n-\"                           ~abc();\" \\\n+\"                               abc(void);\" \\\n+\"                               ~abc();\" \\\n \"\" \\\n-\"                           typedef short my_int_type;\" \\\n-\"/* XXX  6-byte padding  */\" \\\n+\"                               typedef short my_int_type;\" \\\n+\"/* XXX  6-byte padding   */\" \\\n \"\" \\\n-\"                           /* total size (bytes):   56 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n \n # Test \"ptype /TMo\".  This should be the same as \"ptype /o\".\n gdb_test \"ptype /TMo struct abc\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct abc \\{\" \\\n-\"                         public:\" \\\n-\"/*    8      |     8 */    void *field1;\" \\\n-\"/*   16: 0   |     4 */    unsigned int field2 : 1;\" \\\n-\"/* XXX  7-bit hole   */\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   20      |     4 */    int field3;\" \\\n-\"/*   24      |     1 */    signed char field4;\" \\\n-\"/* XXX  7-byte hole  */\" \\\n-\"/*   32      |     8 */    uint64_t field5;\" \\\n-\"/*   40      |     8 */    union \\{\" \\\n-\"/*                 8 */        void *field6;\" \\\n-\"/*                 4 */        int field7;\" \\\n+\"/* offset      |    size */  type = struct abc \\{\" \\\n+\"                             public:\" \\\n+\"/*      8      |       8 */    void *field1;\" \\\n+\"/*     16: 0   |       4 */    unsigned int field2 : 1;\" \\\n+\"/* XXX  7-bit hole       */\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     20      |       4 */    int field3;\" \\\n+\"/*     24      |       1 */    signed char field4;\" \\\n+\"/* XXX  7-byte hole      */\" \\\n+\"/*     32      |       8 */    uint64_t field5;\" \\\n+\"/*     40      |       8 */    union \\{\" \\\n+\"/*                     8 */        void *field6;\" \\\n+\"/*                     4 */        int field7;\" \\\n \"\" \\\n-\"                               /* total size (bytes):    8 */\" \\\n-\"                           \\} field8;\" \\\n-\"/*   48      |     2 */    my_int_type field9;\" \\\n-\"/* XXX  6-byte padding  */\" \\\n+\"                                   /* total size (bytes):    8 */\" \\\n+\"                               \\} field8;\" \\\n+\"/*     48      |       2 */    my_int_type field9;\" \\\n+\"/* XXX  6-byte padding   */\" \\\n \"\" \\\n-\"                           /* total size (bytes):   56 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n \n # Test nested structs.\n gdb_test \"ptype /o struct pqr\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct pqr \\{\" \\\n-\"/*    0      |     4 */    int ff1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*    8      |    40 */    struct xyz \\{\" \\\n-\"/*    8      |     4 */        int f1;\" \\\n-\"/*   12      |     1 */        signed char f2;\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   16      |     8 */        void *f3;\" \\\n-\"/*   24      |    24 */        struct tuv \\{\" \\\n-\"/*   24      |     4 */            int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   32      |     8 */            signed char *a2;\" \\\n-\"/*   40      |     4 */            int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n+\"/* offset      |    size */  type = struct pqr \\{\" \\\n+\"/*      0      |       4 */    int ff1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*      8      |      40 */    struct xyz \\{\" \\\n+\"/*      8      |       4 */        int f1;\" \\\n+\"/*     12      |       1 */        signed char f2;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     16      |       8 */        void *f3;\" \\\n+\"/*     24      |      24 */        struct tuv \\{\" \\\n+\"/*     24      |       4 */            int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     32      |       8 */            signed char *a2;\" \\\n+\"/*     40      |       4 */            int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n-\"                                   /* total size (bytes):   24 */\" \\\n-\"                               \\} f4;\" \\\n+\"                                       /* total size (bytes):   24 */\" \\\n+\"                                   \\} f4;\" \\\n \"\" \\\n-\"                               /* total size (bytes):   40 */\" \\\n-\"                           \\} ff2;\" \\\n-\"/*   48      |     1 */    signed char ff3;\" \\\n-\"/* XXX  7-byte padding  */\" \\\n+\"                                   /* total size (bytes):   40 */\" \\\n+\"                               \\} ff2;\" \\\n+\"/*     48      |       1 */    signed char ff3;\" \\\n+\"/* XXX  7-byte padding   */\" \\\n \"\" \\\n-\"                           /* total size (bytes):   56 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n \n-# Test that the offset is properly reset when we are printing a union\n-# and go inside two inner structs.\n-# This also tests a struct inside a struct inside a union.\n-gdb_test \"ptype /o union qwe\" \\\n+# Test nested struct with /x\n+gdb_test \"ptype /ox struct pqr\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = union qwe \\{\" \\\n-\"/*                24 */    struct tuv \\{\" \\\n-\"/*    0      |     4 */        int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*    8      |     8 */        signed char *a2;\" \\\n-\"/*   16      |     4 */        int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n+\"/* offset      |    size */  type = struct pqr \\{\" \\\n+\"/* 0x0000      |  0x0004 */    int ff1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/* 0x0008      |  0x0028 */    struct xyz \\{\" \\\n+\"/* 0x0008      |  0x0004 */        int f1;\" \\\n+\"/* 0x000c      |  0x0001 */        signed char f2;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/* 0x0010      |  0x0008 */        void *f3;\" \\\n+\"/* 0x0018      |  0x0018 */        struct tuv \\{\" \\\n+\"/* 0x0018      |  0x0004 */            int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/* 0x0020      |  0x0008 */            signed char *a2;\" \\\n+\"/* 0x0028      |  0x0004 */            int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n-\"                               /* total size (bytes):   24 */\" \\\n-\"                           \\} fff1;\" \\\n-\"/*                40 */    struct xyz \\{\" \\\n-\"/*    0      |     4 */        int f1;\" \\\n-\"/*    4      |     1 */        signed char f2;\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*    8      |     8 */        void *f3;\" \\\n-\"/*   16      |    24 */        struct tuv \\{\" \\\n-\"/*   16      |     4 */            int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   24      |     8 */            signed char *a2;\" \\\n-\"/*   32      |     4 */            int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n-\"\" \\\n-\"                                   /* total size (bytes):   24 */\" \\\n-\"                               \\} f4;\" \\\n+\"                                       /* total size (bytes):   24 */\" \\\n+\"                                   \\} f4;\" \\\n \"\" \\\n-\"                               /* total size (bytes):   40 */\" \\\n-\"                           \\} fff2;\" \\\n+\"                                   /* total size (bytes):   40 */\" \\\n+\"                               \\} ff2;\" \\\n+\"/* 0x0030      |  0x0001 */    signed char ff3;\" \\\n+\"/* XXX  7-byte padding   */\" \\\n \"\" \\\n-\"                           /* total size (bytes):   40 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):   56 */\" \\\n+\"                             \\}\"]]\n \n-# Test printing a struct that contains a union, and that also\n-# contains a struct.\n-gdb_test \"ptype /o struct poi\" \\\n+\n+# Test that the offset is properly reset when we are printing a union\n+# and go inside two inner structs.\n+# This also tests a struct inside a struct inside a union.\n+gdb_test \"ptype /o union qwe\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct poi \\{\" \\\n-\"/*    0      |     4 */    int f1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*    8      |    40 */    union qwe \\{\" \\\n-\"/*                24 */        struct tuv \\{\" \\\n-\"/*    8      |     4 */            int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   16      |     8 */            signed char *a2;\" \\\n-\"/*   24      |     4 */            int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n+\"/* offset      |    size */  type = union qwe \\{\" \\\n+\"/*                    24 */    struct tuv \\{\" \\\n+\"/*      0      |       4 */        int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*      8      |       8 */        signed char *a2;\" \\\n+\"/*     16      |       4 */        int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n \"                                   /* total size (bytes):   24 */\" \\\n \"                               \\} fff1;\" \\\n-\"/*                40 */        struct xyz \\{\" \\\n-\"/*    8      |     4 */            int f1;\" \\\n-\"/*   12      |     1 */            signed char f2;\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   16      |     8 */            void *f3;\" \\\n-\"/*   24      |    24 */            struct tuv \\{\" \\\n-\"/*   24      |     4 */                int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   32      |     8 */                signed char *a2;\" \\\n-\"/*   40      |     4 */                int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n+\"/*                    40 */    struct xyz \\{\" \\\n+\"/*      0      |       4 */        int f1;\" \\\n+\"/*      4      |       1 */        signed char f2;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*      8      |       8 */        void *f3;\" \\\n+\"/*     16      |      24 */        struct tuv \\{\" \\\n+\"/*     16      |       4 */            int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     24      |       8 */            signed char *a2;\" \\\n+\"/*     32      |       4 */            int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n \"                                       /* total size (bytes):   24 */\" \\\n \"                                   \\} f4;\" \\\n \"\" \\\n \"                                   /* total size (bytes):   40 */\" \\\n \"                               \\} fff2;\" \\\n-\"/* XXX 32-byte padding  */\" \\\n \"\" \\\n \"                               /* total size (bytes):   40 */\" \\\n-\"                           \\} f2;\" \\\n-\"/*   48      |     2 */    uint16_t f3;\" \\\n-\"/* XXX  6-byte hole  */\" \\\n-\"/*   56      |    56 */    struct pqr \\{\" \\\n-\"/*   56      |     4 */        int ff1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   64      |    40 */        struct xyz \\{\" \\\n-\"/*   64      |     4 */            int f1;\" \\\n-\"/*   68      |     1 */            signed char f2;\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*   72      |     8 */            void *f3;\" \\\n-\"/*   80      |    24 */            struct tuv \\{\" \\\n-\"/*   80      |     4 */                int a1;\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*   88      |     8 */                signed char *a2;\" \\\n-\"/*   96      |     4 */                int a3;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n+\"                             \\}\"]]\n+\n+# Test printing a struct that contains a union, and that also\n+# contains a struct.\n+gdb_test \"ptype /o struct poi\" \\\n+    [string_to_regexp [multi_line \\\n+\"/* offset      |    size */  type = struct poi \\{\" \\\n+\"/*      0      |       4 */    int f1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*      8      |      40 */    union qwe \\{\" \\\n+\"/*                    24 */        struct tuv \\{\" \\\n+\"/*      8      |       4 */            int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     16      |       8 */            signed char *a2;\" \\\n+\"/*     24      |       4 */            int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n \"                                       /* total size (bytes):   24 */\" \\\n-\"                                   \\} f4;\" \\\n+\"                                   \\} fff1;\" \\\n+\"/*                    40 */        struct xyz \\{\" \\\n+\"/*      8      |       4 */            int f1;\" \\\n+\"/*     12      |       1 */            signed char f2;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     16      |       8 */            void *f3;\" \\\n+\"/*     24      |      24 */            struct tuv \\{\" \\\n+\"/*     24      |       4 */                int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     32      |       8 */                signed char *a2;\" \\\n+\"/*     40      |       4 */                int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n+\"\" \\\n+\"                                           /* total size (bytes):   24 */\" \\\n+\"                                       \\} f4;\" \\\n+\"\" \\\n+\"                                       /* total size (bytes):   40 */\" \\\n+\"                                   \\} fff2;\" \\\n+\"/* XXX 32-byte padding   */\" \\\n \"\" \\\n \"                                   /* total size (bytes):   40 */\" \\\n-\"                               \\} ff2;\" \\\n-\"/*  104      |     1 */        signed char ff3;\" \\\n-\"/* XXX  7-byte padding  */\" \\\n+\"                               \\} f2;\" \\\n+\"/*     48      |       2 */    uint16_t f3;\" \\\n+\"/* XXX  6-byte hole      */\" \\\n+\"/*     56      |      56 */    struct pqr \\{\" \\\n+\"/*     56      |       4 */        int ff1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     64      |      40 */        struct xyz \\{\" \\\n+\"/*     64      |       4 */            int f1;\" \\\n+\"/*     68      |       1 */            signed char f2;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*     72      |       8 */            void *f3;\" \\\n+\"/*     80      |      24 */            struct tuv \\{\" \\\n+\"/*     80      |       4 */                int a1;\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*     88      |       8 */                signed char *a2;\" \\\n+\"/*     96      |       4 */                int a3;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n \"\" \\\n-\"                               /* total size (bytes):   56 */\" \\\n-\"                           \\} f4;\" \\\n+\"                                           /* total size (bytes):   24 */\" \\\n+\"                                       \\} f4;\" \\\n+\"\" \\\n+\"                                       /* total size (bytes):   40 */\" \\\n+\"                                   \\} ff2;\" \\\n+\"/*    104      |       1 */        signed char ff3;\" \\\n+\"/* XXX  7-byte padding   */\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   56 */\" \\\n+\"                               \\} f4;\" \\\n \"\" \\\n-\"                           /* total size (bytes):  112 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):  112 */\" \\\n+\"                             \\}\"]]\n \n # Test printing a struct with several bitfields, laid out in various\n # ways.\n@@ -263,58 +318,58 @@ gdb_test \"ptype /o struct poi\" \\\n #   0x7fffffffd550: 0xff    0x00    0x00    0x00    0x00    0x00    0x00    0x00\n gdb_test \"ptype /o struct tyu\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct tyu \\{\" \\\n-\"/*    0: 0   |     4 */    int a1 : 1;\" \\\n-\"/*    0: 1   |     4 */    int a2 : 3;\" \\\n-\"/*    0: 4   |     4 */    int a3 : 23;\" \\\n-\"/*    3: 3   |     1 */    signed char a4 : 2;\" \\\n-\"/* XXX  3-bit hole   */\" \\\n-\"/* XXX  4-byte hole  */\" \\\n-\"/*    8      |     8 */    int64_t a5;\" \\\n-\"/*   16: 0   |     4 */    int a6 : 5;\" \\\n-\"/*   16: 5   |     8 */    int64_t a7 : 3;\" \\\n-\"/* XXX  7-byte padding  */\" \\\n-\"\" \\\n-\"                           /* total size (bytes):   24 */\" \\\n-\"                         \\}\"]]\n+\"/* offset      |    size */  type = struct tyu \\{\" \\\n+\"/*      0: 0   |       4 */    int a1 : 1;\" \\\n+\"/*      0: 1   |       4 */    int a2 : 3;\" \\\n+\"/*      0: 4   |       4 */    int a3 : 23;\" \\\n+\"/*      3: 3   |       1 */    signed char a4 : 2;\" \\\n+\"/* XXX  3-bit hole       */\" \\\n+\"/* XXX  4-byte hole      */\" \\\n+\"/*      8      |       8 */    int64_t a5;\" \\\n+\"/*     16: 0   |       4 */    int a6 : 5;\" \\\n+\"/*     16: 5   |       8 */    int64_t a7 : 3;\" \\\n+\"/* XXX  7-byte padding   */\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   24 */\" \\\n+\"                             \\}\"]]\n \n gdb_test \"ptype /o struct asd\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct asd \\{\" \\\n-\"/*    0      |    32 */    struct asd::jkl \\{\" \\\n-\"/*    0      |     8 */        signed char *f1;\" \\\n-\"/*    8      |     8 */        union \\{\" \\\n-\"/*                 8 */            void *ff1;\" \\\n+\"/* offset      |    size */  type = struct asd \\{\" \\\n+\"/*      0      |      32 */    struct asd::jkl \\{\" \\\n+\"/*      0      |       8 */        signed char *f1;\" \\\n+\"/*      8      |       8 */        union \\{\" \\\n+\"/*                     8 */            void *ff1;\" \\\n \"\" \\\n-\"                                   /* total size (bytes):    8 */\" \\\n-\"                               \\} f2;\" \\\n-\"/*   16      |     8 */        union \\{\" \\\n-\"/*                 8 */            signed char *ff2;\" \\\n+\"                                       /* total size (bytes):    8 */\" \\\n+\"                                   \\} f2;\" \\\n+\"/*     16      |       8 */        union \\{\" \\\n+\"/*                     8 */            signed char *ff2;\" \\\n \"\" \\\n-\"                                   /* total size (bytes):    8 */\" \\\n-\"                               \\} f3;\" \\\n-\"/*   24: 0   |     4 */        int f4 : 5;\" \\\n-\"/*   24: 5   |     4 */        unsigned int f5 : 1;\" \\\n-\"/* XXX  2-bit hole   */\" \\\n-\"/* XXX  1-byte hole  */\" \\\n-\"/*   26      |     2 */        short f6;\" \\\n-\"/* XXX  4-byte padding  */\" \\\n-\"\" \\\n-\"                               /* total size (bytes):   32 */\" \\\n-\"                           \\} f7;\" \\\n-\"/*   32      |     8 */    unsigned long f8;\" \\\n-\"/*   40      |     8 */    signed char *f9;\" \\\n-\"/*   48: 0   |     4 */    int f10 : 4;\" \\\n-\"/*   48: 4   |     4 */    unsigned int f11 : 1;\" \\\n-\"/*   48: 5   |     4 */    unsigned int f12 : 1;\" \\\n-\"/*   48: 6   |     4 */    unsigned int f13 : 1;\" \\\n-\"/*   48: 7   |     4 */    unsigned int f14 : 1;\" \\\n-\"/* XXX  7-byte hole  */\" \\\n-\"/*   56      |     8 */    void *f15;\" \\\n-\"/*   64      |     8 */    void *f16;\" \\\n-\"\" \\\n-\"                           /* total size (bytes):   72 */\" \\\n-\"                         \\}\"]]\n+\"                                       /* total size (bytes):    8 */\" \\\n+\"                                   \\} f3;\" \\\n+\"/*     24: 0   |       4 */        int f4 : 5;\" \\\n+\"/*     24: 5   |       4 */        unsigned int f5 : 1;\" \\\n+\"/* XXX  2-bit hole       */\" \\\n+\"/* XXX  1-byte hole      */\" \\\n+\"/*     26      |       2 */        short f6;\" \\\n+\"/* XXX  4-byte padding   */\" \\\n+\"\" \\\n+\"                                   /* total size (bytes):   32 */\" \\\n+\"                               \\} f7;\" \\\n+\"/*     32      |       8 */    unsigned long f8;\" \\\n+\"/*     40      |       8 */    signed char *f9;\" \\\n+\"/*     48: 0   |       4 */    int f10 : 4;\" \\\n+\"/*     48: 4   |       4 */    unsigned int f11 : 1;\" \\\n+\"/*     48: 5   |       4 */    unsigned int f12 : 1;\" \\\n+\"/*     48: 6   |       4 */    unsigned int f13 : 1;\" \\\n+\"/*     48: 7   |       4 */    unsigned int f14 : 1;\" \\\n+\"/* XXX  7-byte hole      */\" \\\n+\"/*     56      |       8 */    void *f15;\" \\\n+\"/*     64      |       8 */    void *f16;\" \\\n+\"\" \\\n+\"                               /* total size (bytes):   72 */\" \\\n+\"                             \\}\"]]\n \n # Test that we don't print any header when issuing a \"ptype /o\" on a\n # non-struct, non-union, non-class type.\n@@ -334,24 +389,83 @@ gdb_test_multiple \"$test\" \"$test\" {\n # get us into an infinite loop.\n gdb_test \"ptype/o static_member\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct static_member \\{\" \\\n-\"                           static static_member Empty;\" \\\n-\"/*    0      |     4 */    int abc;\" \\\n+\"/* offset      |    size */  type = struct static_member \\{\" \\\n+\"                               static static_member Empty;\" \\\n+\"/*      0      |       4 */    int abc;\" \\\n \"\" \\\n-\"                           /* total size (bytes):    4 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):    4 */\" \\\n+\"                             \\}\"]]\n \n # Test that the \"no data fields\" text is indented properly.\n gdb_test \"ptype/o empty_member\" \\\n     [string_to_regexp [multi_line \\\n-\"/* offset    |  size */  type = struct empty_member \\{\" \\\n-\"/*    0      |     1 */    struct {\" \\\n-\"                               <no data fields>\" \\\n+\"/* offset      |    size */  type = struct empty_member \\{\" \\\n+\"/*      0      |       1 */    struct {\" \\\n+\"                                   <no data fields>\" \\\n \"\" \\\n-\"                               /* total size (bytes):    1 */\" \\\n-\"                           } empty;\" \\\n-\"/* XXX  3-byte hole  */\" \\\n-\"/*    4      |     4 */    int an_int;\" \\\n+\"                                   /* total size (bytes):    1 */\" \\\n+\"                               } empty;\" \\\n+\"/* XXX  3-byte hole      */\" \\\n+\"/*      4      |       4 */    int an_int;\" \\\n \"\" \\\n-\"                           /* total size (bytes):    8 */\" \\\n-\"                         \\}\"]]\n+\"                               /* total size (bytes):    8 */\" \\\n+\"                             \\}\"]]\n+\n+with_test_prefix \"with_hex_default\" {\n+  # Test setting default display to hex\n+  send_gdb \"set print type hex on\\n\"\n+  gdb_test \"show print type hex\" \\\n+           \"Display of struct members offsets and sizes in hexadecimal is on\"\n+\n+  # test \"ptype /o\" is now equivalent to \"ptype /ox\"\n+  gdb_test \"ptype /o struct abc\" \\\n+      [string_to_regexp [multi_line \\\n+  \"/* offset      |    size */  type = struct abc \\{\" \\\n+  \"                             public:\" \\\n+  \"/* 0x0008      |  0x0008 */    void *field1;\" \\\n+  \"/* 0x0010: 0x0 |  0x0004 */    unsigned int field2 : 1;\" \\\n+  \"/* XXX  7-bit hole       */\" \\\n+  \"/* XXX  3-byte hole      */\" \\\n+  \"/* 0x0014      |  0x0004 */    int field3;\" \\\n+  \"/* 0x0018      |  0x0001 */    signed char field4;\" \\\n+  \"/* XXX  7-byte hole      */\" \\\n+  \"/* 0x0020      |  0x0008 */    uint64_t field5;\" \\\n+  \"/* 0x0028      |  0x0008 */    union \\{\" \\\n+  \"/*                0x0008 */        void *field6;\" \\\n+  \"/*                0x0004 */        int field7;\" \\\n+  \"\" \\\n+  \"                                   /* total size (bytes):    8 */\" \\\n+  \"                               \\} field8;\" \\\n+  \"/* 0x0030      |  0x0002 */    my_int_type field9;\" \\\n+  \"/* XXX  6-byte padding   */\" \\\n+  \"\" \\\n+  \"                               /* total size (bytes):   56 */\" \\\n+  \"                             \\}\"]]\n+\n+  gdb_test \"ptype /od struct abc\" \\\n+      [string_to_regexp [multi_line \\\n+  \"/* offset      |    size */  type = struct abc \\{\" \\\n+  \"                             public:\" \\\n+  \"/*      8      |       8 */    void *field1;\" \\\n+  \"/*     16: 0   |       4 */    unsigned int field2 : 1;\" \\\n+  \"/* XXX  7-bit hole       */\" \\\n+  \"/* XXX  3-byte hole      */\" \\\n+  \"/*     20      |       4 */    int field3;\" \\\n+  \"/*     24      |       1 */    signed char field4;\" \\\n+  \"/* XXX  7-byte hole      */\" \\\n+  \"/*     32      |       8 */    uint64_t field5;\" \\\n+  \"/*     40      |       8 */    union \\{\" \\\n+  \"/*                     8 */        void *field6;\" \\\n+  \"/*                     4 */        int field7;\" \\\n+  \"\" \\\n+  \"                                   /* total size (bytes):    8 */\" \\\n+  \"                               \\} field8;\" \\\n+  \"/*     48      |       2 */    my_int_type field9;\" \\\n+  \"/* XXX  6-byte padding   */\" \\\n+  \"\" \\\n+  \"                               /* total size (bytes):   56 */\" \\\n+  \"                             \\}\"]]\n+\n+  # restore\n+  send_gdb \"set print type hex off\\n\"\n+}"
    },
    {
      "sha": "cf9d400a092ebeb0ecde841653beeb7a18acaf92",
      "filename": "gdb/testsuite/gdb.rust/simple.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.rust/simple.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.rust/simple.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/simple.exp?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -364,12 +364,12 @@ gdb_test \"print parametrized\" \\\n     \" = simple::ParametrizedStruct<i32> \\\\{next: simple::ParametrizedEnum<\\[a-z:\\]*Box<simple::ParametrizedStruct<i32>.*>>::Val\\\\{val: $hex\\\\}, value: 0\\\\}\"\n \n gdb_test_sequence \"ptype/o SimpleLayout\" \"\" {\n-    \"/\\\\* offset    |  size \\\\*/  type = struct simple::SimpleLayout {\"\n-    \"/\\\\*    0      |     2 \\\\*/    f1: u16,\"\n-    \"/\\\\*    2      |     2 \\\\*/    f2: u16,\"\n+    \"/\\\\* offset      |    size \\\\*/  type = struct simple::SimpleLayout {\"\n+    \"/\\\\*      0      |       2 \\\\*/    f1: u16,\"\n+    \"/\\\\*      2      |       2 \\\\*/    f2: u16,\"\n     \"\"\n-    \"                           /\\\\* total size \\\\(bytes\\\\):    4 \\\\*/\"\n-    \"                         }\"\n+    \"                               /\\\\* total size \\\\(bytes\\\\):    4 \\\\*/\"\n+    \"                             }\"\n }\n \n gdb_test \"print nonzero_offset\" \" = simple::EnumWithNonzeroOffset {a: core::option::Option<u8>::Some\\\\(1\\\\), b: core::option::Option<u8>::None}\""
    },
    {
      "sha": "ce59a364b0c01b590524cb6a25c55e758d18fd58",
      "filename": "gdb/testsuite/gdb.rust/union.exp",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.rust/union.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/testsuite/gdb.rust/union.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.rust/union.exp?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -34,12 +34,12 @@ if {![runto ${srcfile}:$line]} {\n gdb_test \"print u\" \" = union::Union {f1: -1, f2: 255}\"\n \n gdb_test_sequence \"ptype/o Union\" \"\" {\n-    \"/\\\\* offset    |  size \\\\*/  type = union union::Union {\"\n-    \"/\\\\*                 1 \\\\*/    f1: i8,\"\n-    \"/\\\\*                 1 \\\\*/    f2: u8,\"\n+    \"/\\\\* offset      |    size \\\\*/  type = union union::Union {\"\n+    \"/\\\\*                     1 \\\\*/    f1: i8,\"\n+    \"/\\\\*                     1 \\\\*/    f2: u8,\"\n     \"\"\n-    \"                           /\\\\* total size \\\\(bytes\\\\):    1 \\\\*/\"\n-    \"                         }\"\n+    \"                               /\\\\* total size \\\\(bytes\\\\):    1 \\\\*/\"\n+    \"                             }\"\n }\n \n gdb_test \"print u2\" \" = union::Union2 {name: \\\\\\[1\\\\\\]}\""
    },
    {
      "sha": "eb47d9129f9bd6bddd1c5961d1f353a13ca20b88",
      "filename": "gdb/typeprint.c",
      "status": "modified",
      "additions": 72,
      "deletions": 11,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/typeprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/typeprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.c?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -44,6 +44,7 @@ const struct type_print_options type_print_raw_options =\n   1,\t\t\t\t/* print_methods */\n   1,\t\t\t\t/* print_typedefs */\n   0,\t\t\t\t/* print_offsets */\n+  0,\t\t\t\t/* print_in_hex */\n   0,\t\t\t\t/* print_nested_type_limit  */\n   NULL,\t\t\t\t/* local_typedefs */\n   NULL,\t\t\t\t/* global_table */\n@@ -58,6 +59,7 @@ static struct type_print_options default_ptype_flags =\n   1,\t\t\t\t/* print_methods */\n   1,\t\t\t\t/* print_typedefs */\n   0,\t\t\t\t/* print_offsets */\n+  0,\t\t\t\t/* print_in_hex */\n   0,\t\t\t\t/* print_nested_type_limit  */\n   NULL,\t\t\t\t/* local_typedefs */\n   NULL,\t\t\t\t/* global_table */\n@@ -68,8 +70,15 @@ static struct type_print_options default_ptype_flags =\n \n /* See typeprint.h.  */\n \n-const int print_offset_data::indentation = 23;\n+const int print_offset_data::indentation = 27;\n \n+/* See typeprint.h.  */\n+\n+print_offset_data::print_offset_data (const struct type_print_options *flags)\n+{\n+  if (flags != nullptr)\n+    print_in_hex = flags->print_in_hex;\n+}\n \n /* See typeprint.h.  */\n \n@@ -95,11 +104,11 @@ print_offset_data::maybe_print_hole (struct ui_file *stream,\n       unsigned int hole_bit = hole % TARGET_CHAR_BIT;\n \n       if (hole_bit > 0)\n-\tfprintf_filtered (stream, \"/* XXX %2u-bit %s   */\\n\", hole_bit,\n+\tfprintf_filtered (stream, \"/* XXX %2u-bit %-7s    */\\n\", hole_bit,\n \t\t\t  for_what);\n \n       if (hole_byte > 0)\n-\tfprintf_filtered (stream, \"/* XXX %2u-byte %s  */\\n\", hole_byte,\n+\tfprintf_filtered (stream, \"/* XXX %2u-byte %-7s   */\\n\", hole_byte,\n \t\t\t  for_what);\n     }\n }\n@@ -121,8 +130,10 @@ print_offset_data::update (struct type *type, unsigned int field_idx,\n     {\n       /* Since union fields don't have the concept of offsets, we just\n \t print their sizes.  */\n-      fprintf_filtered (stream, \"/*              %4s */\",\n-\t\t\tpulongest (TYPE_LENGTH (ftype)));\n+      fprintf_filtered (stream, \"/*                %6s */\",\n+\t\t\t(print_in_hex ?\n+\t\t\t hex_string_custom (TYPE_LENGTH (ftype), 4) :\n+\t\t\t pulongest (TYPE_LENGTH (ftype))));\n       return;\n     }\n \n@@ -140,20 +151,23 @@ print_offset_data::update (struct type *type, unsigned int field_idx,\n \n       unsigned real_bitpos = bitpos + offset_bitpos;\n \n-      fprintf_filtered (stream, \"/* %4u:%2u\", real_bitpos / TARGET_CHAR_BIT,\n+      fprintf_filtered (stream,\n+\t\t\t(print_in_hex ? \"/* 0x%04x: 0x%x\" : \"/* %6u:%2u  \"),\n+\t\t\treal_bitpos / TARGET_CHAR_BIT,\n \t\t\treal_bitpos % TARGET_CHAR_BIT);\n     }\n   else\n     {\n       /* The position of the field, relative to the beginning of the\n \t struct.  */\n-      fprintf_filtered (stream, \"/* %4u\",\n+      fprintf_filtered (stream, (print_in_hex ?  \"/* 0x%04x\" : \"/* %6u\"),\n \t\t\t(bitpos + offset_bitpos) / TARGET_CHAR_BIT);\n \n-      fprintf_filtered (stream, \"   \");\n+      fprintf_filtered (stream, \"     \");\n     }\n \n-  fprintf_filtered (stream, \"   |  %4u */\", fieldsize_byte);\n+  fprintf_filtered (stream, (print_in_hex ? \" |  0x%04x */\" : \" |  %6u */\"),\n+\t\t    fieldsize_byte);\n \n   end_bitpos = bitpos + fieldsize_bit;\n }\n@@ -468,6 +482,12 @@ whatis_exp (const char *exp, int show)\n \t\t      }\n \t\t    break;\n \t\t  }\n+\t\tcase 'x':\n+\t\t  flags.print_in_hex = 1;\n+\t\t  break;\n+\t\tcase 'd':\n+\t\t  flags.print_in_hex = 0;\n+\t\t  break;\n \t\tdefault:\n \t\t  error (_(\"unrecognized flag '%c'\"), *exp);\n \t\t}\n@@ -528,7 +548,7 @@ whatis_exp (const char *exp, int show)\n   if (flags.print_offsets\n       && (type->code () == TYPE_CODE_STRUCT\n \t  || type->code () == TYPE_CODE_UNION))\n-    fprintf_filtered (gdb_stdout, \"/* offset    |  size */  \");\n+    fprintf_filtered (gdb_stdout, \"/* offset      |    size */  \");\n \n   printf_filtered (\"type = \");\n \n@@ -763,6 +783,35 @@ show_print_type_nested_types  (struct ui_file *file, int from_tty,\n     }\n }\n \n+/* When printing structs, offsets and sizes of members can be displayed using\n+   decimal notation or hexadecimal notation.  By default, Decimal notation is\n+   used.  */\n+\n+static bool print_offsets_and_sizes_in_hex = false;\n+\n+/* Set the flags that instructs if sizes and offsets of struct members are\n+   displayed in hexadecimal or decimal notation.  */\n+\n+static void\n+set_print_offsets_and_sizes_in_hex (const char *args,\n+\t\t\t\t    int from_tty, struct cmd_list_element *c)\n+{\n+  default_ptype_flags.print_in_hex = print_offsets_and_sizes_in_hex;\n+}\n+\n+/* Display whether struct members sizes and offsets are printed\n+   using decimal or hexadecimal notation.  */\n+\n+static void\n+show_print_offsets_and_sizes_in_hex (struct ui_file *file, int from_tty,\n+\t\t\t\t     struct cmd_list_element *c,\n+\t\t\t\t     const char *value)\n+{\n+  fprintf_filtered (file, _(\"\\\n+Display of struct members offsets and sizes in hexadecimal is %s\\n\"),\n+\t\t    value);\n+}\n+\n void _initialize_typeprint ();\n void\n _initialize_typeprint ()\n@@ -784,7 +833,11 @@ Available FLAGS are:\\n\\\n   /M    print methods defined in a class\\n\\\n   /t    do not print typedefs defined in a class\\n\\\n   /T    print typedefs defined in a class\\n\\\n-  /o    print offsets and sizes of fields in a struct (like pahole)\"));\n+  /o    print offsets and sizes of fields in a struct (like pahole)\\n\\\n+  /x    use hexadecimal notation when displaying sizes and offsets\\n\\\n+        of struct members\\n\\\n+  /d    use decimal notation when displaying sizes and offsets\\n\\\n+        of struct members \"));\n   set_cmd_completer (c, expression_completer);\n \n   c = add_com (\"whatis\", class_vars, whatis_command,\n@@ -825,6 +878,14 @@ Show the number of recursive nested type definitions to print.\"), NULL,\n \t\t\t\t       set_print_type_nested_types,\n \t\t\t\t       show_print_type_nested_types,\n \t\t\t\t       &setprinttypelist, &showprinttypelist);\n+\n+  add_setshow_boolean_cmd (\"hex\", no_class, &print_offsets_and_sizes_in_hex,\n+\t\t\t   _(\"\\\n+Set printing of struct members sizes and offsets using hex notation.\"), _(\"\\\n+Show whether sizes and offsets of struct members are printed using hex \\\n+notation.\"), nullptr, set_print_offsets_and_sizes_in_hex,\n+\t\t\t   show_print_offsets_and_sizes_in_hex,\n+\t\t\t   &setprinttypelist, &showprinttypelist);\n }\n \n /* Print <not allocated> status to stream STREAM.  */"
    },
    {
      "sha": "86e781378f9f54406bcf996d3ee546fdc2c53d1b",
      "filename": "gdb/typeprint.h",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/typeprint.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fbb46296d7e0d09e792a7c9d7841cb26753cb3ce/gdb/typeprint.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/typeprint.h?ref=fbb46296d7e0d09e792a7c9d7841cb26753cb3ce",
      "patch": "@@ -40,6 +40,9 @@ struct type_print_options\n   /* True means to print offsets, a la 'pahole'.  */\n   unsigned int print_offsets : 1;\n \n+  /* True means to print offsets in hex, otherwise use decimal.  */\n+  unsigned int print_in_hex : 1;\n+\n   /* The number of nested type definitions to print.  -1 == all.  */\n   int print_nested_type_limit;\n \n@@ -58,6 +61,10 @@ struct type_print_options\n \n struct print_offset_data\n {\n+  /* Indicate if the offset an d size fields should be printed in decimal\n+     (default) or hexadecimal.  */\n+  bool print_in_hex  = false;\n+\n   /* The offset to be applied to bitpos when PRINT_OFFSETS is true.\n      This is needed for when we are printing nested structs and want\n      to make sure that the printed offset for each field carries over\n@@ -92,6 +99,8 @@ struct print_offset_data\n      certain field.  */\n   static const int indentation;\n \n+  explicit print_offset_data (const struct type_print_options *flags);\n+\n private:\n \n   /* Helper function for ptype/o implementation that prints"
    }
  ]
}