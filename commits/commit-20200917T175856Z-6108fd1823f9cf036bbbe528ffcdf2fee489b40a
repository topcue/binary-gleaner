{
  "sha": "6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjEwOGZkMTgyM2Y5Y2YwMzZiYmJlNTI4ZmZjZGYyZmVlNDg5YjQwYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:47:50Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-09-17T17:58:56Z"
    },
    "message": "Use htab_up in type copying\n\nThis changes create_copied_types_hash to return an htab_up, then\nmodifies the callers to avoid explicit use of htab_delete.\n\ngdb/ChangeLog\n2020-09-17  Tom Tromey  <tom@tromey.com>\n\n\t* value.c (preserve_values): Update.\n\t* python/py-type.c (save_objfile_types): Update.\n\t* guile/scm-type.c (save_objfile_types): Update.\n\t* gdbtypes.h (create_copied_types_hash): Return htab_up.\n\t* gdbtypes.c (create_copied_types_hash): Return htab_up.\n\t* compile/compile-object-run.c (compile_object_run): Update.",
    "tree": {
      "sha": "0be755427c836f6981902a0a49b5b84f0f36f4dc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0be755427c836f6981902a0a49b5b84f0f36f4dc"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "fa9b11648c07ecb02a9c038304d646a5c652a5e7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa9b11648c07ecb02a9c038304d646a5c652a5e7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/fa9b11648c07ecb02a9c038304d646a5c652a5e7"
    }
  ],
  "stats": {
    "total": 55,
    "additions": 27,
    "deletions": 28
  },
  "files": [
    {
      "sha": "b7e93c127ba45b7c68279bfe15fddcc120ec362a",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -1,3 +1,12 @@\n+2020-09-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* value.c (preserve_values): Update.\n+\t* python/py-type.c (save_objfile_types): Update.\n+\t* guile/scm-type.c (save_objfile_types): Update.\n+\t* gdbtypes.h (create_copied_types_hash): Return htab_up.\n+\t* gdbtypes.c (create_copied_types_hash): Return htab_up.\n+\t* compile/compile-object-run.c (compile_object_run): Update.\n+\n 2020-09-17  Tom Tromey  <tom@tromey.com>\n \n \t* typeprint.h (class typedef_hash_table) <~typedef_hash_table>:"
    },
    {
      "sha": "533478a0fb46c8b25646a7a06415bee0668f547f",
      "filename": "gdb/compile/compile-object-run.c",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/compile/compile-object-run.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/compile/compile-object-run.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/compile/compile-object-run.c?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -140,14 +140,12 @@ compile_object_run (struct compile_module *module)\n   try\n     {\n       struct type *func_type = SYMBOL_TYPE (func_sym);\n-      htab_t copied_types;\n       int current_arg = 0;\n       struct value **vargs;\n \n       /* OBJFILE may disappear while FUNC_TYPE still will be in use.  */\n-      copied_types = create_copied_types_hash (objfile);\n-      func_type = copy_type_recursive (objfile, func_type, copied_types);\n-      htab_delete (copied_types);\n+      htab_up copied_types = create_copied_types_hash (objfile);\n+      func_type = copy_type_recursive (objfile, func_type, copied_types.get ());\n \n       gdb_assert (func_type->code () == TYPE_CODE_FUNC);\n       func_val = value_from_pointer (lookup_pointer_type (func_type),"
    },
    {
      "sha": "63f0d7c84895e0d69552a1a447ea066cd6424ac5",
      "filename": "gdb/gdbtypes.c",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/gdbtypes.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/gdbtypes.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.c?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -5227,13 +5227,13 @@ type_pair_eq (const void *item_lhs, const void *item_rhs)\n    types without duplicates.  We use OBJFILE's obstack, because\n    OBJFILE is about to be deleted.  */\n \n-htab_t\n+htab_up\n create_copied_types_hash (struct objfile *objfile)\n {\n-  return htab_create_alloc_ex (1, type_pair_hash, type_pair_eq,\n-\t\t\t       NULL, &objfile->objfile_obstack,\n-\t\t\t       hashtab_obstack_allocate,\n-\t\t\t       dummy_obstack_deallocate);\n+  return htab_up (htab_create_alloc_ex (1, type_pair_hash, type_pair_eq,\n+\t\t\t\t\tNULL, &objfile->objfile_obstack,\n+\t\t\t\t\thashtab_obstack_allocate,\n+\t\t\t\t\tdummy_obstack_deallocate));\n }\n \n /* Recursively copy (deep copy) a dynamic attribute list of a type.  */"
    },
    {
      "sha": "4b67efe3cbfb04e5d1fc5e0dae3af0e61aa5a67f",
      "filename": "gdb/gdbtypes.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/gdbtypes.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/gdbtypes.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/gdbtypes.h?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -2472,7 +2472,7 @@ extern int class_or_union_p (const struct type *);\n \n extern void maintenance_print_type (const char *, int);\n \n-extern htab_t create_copied_types_hash (struct objfile *objfile);\n+extern htab_up create_copied_types_hash (struct objfile *objfile);\n \n extern struct type *copy_type_recursive (struct objfile *objfile,\n \t\t\t\t\t struct type *type,"
    },
    {
      "sha": "8fc9629eb0d0911913912e8c3304fe84ada15ad2",
      "filename": "gdb/guile/scm-type.c",
      "status": "modified",
      "additions": 2,
      "deletions": 5,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/guile/scm-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/guile/scm-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/guile/scm-type.c?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -387,20 +387,17 @@ static void\n save_objfile_types (struct objfile *objfile, void *datum)\n {\n   htab_t htab = (htab_t) datum;\n-  htab_t copied_types;\n \n   if (!gdb_scheme_initialized)\n     return;\n \n-  copied_types = create_copied_types_hash (objfile);\n+  htab_up copied_types = create_copied_types_hash (objfile);\n \n   if (htab != NULL)\n     {\n-      htab_traverse_noresize (htab, tyscm_copy_type_recursive, copied_types);\n+      htab_traverse_noresize (htab, tyscm_copy_type_recursive, copied_types.get ());\n       htab_delete (htab);\n     }\n-\n-  htab_delete (copied_types);\n }\n \f\n /* Administrivia for field smobs.  */"
    },
    {
      "sha": "55d8264fea9891b56cce57153325c97ececde891",
      "filename": "gdb/python/py-type.c",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/python/py-type.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/python/py-type.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/python/py-type.c?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -1066,7 +1066,6 @@ static void\n save_objfile_types (struct objfile *objfile, void *datum)\n {\n   type_object *obj = (type_object *) datum;\n-  htab_t copied_types;\n \n   if (!gdb_python_initialized)\n     return;\n@@ -1075,23 +1074,22 @@ save_objfile_types (struct objfile *objfile, void *datum)\n      operating on.  */\n   gdbpy_enter enter_py (objfile->arch (), current_language);\n \n-  copied_types = create_copied_types_hash (objfile);\n+  htab_up copied_types = create_copied_types_hash (objfile);\n \n   while (obj)\n     {\n       type_object *next = obj->next;\n \n-      htab_empty (copied_types);\n+      htab_empty (copied_types.get ());\n \n-      obj->type = copy_type_recursive (objfile, obj->type, copied_types);\n+      obj->type = copy_type_recursive (objfile, obj->type,\n+\t\t\t\t       copied_types.get ());\n \n       obj->next = NULL;\n       obj->prev = NULL;\n \n       obj = next;\n     }\n-\n-  htab_delete (copied_types);\n }\n \n static void"
    },
    {
      "sha": "4b28213594a830dbf5d2263e301ebf3246c93de3",
      "filename": "gdb/value.c",
      "status": "modified",
      "additions": 4,
      "deletions": 7,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/value.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6108fd1823f9cf036bbbe528ffcdf2fee489b40a/gdb/value.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/value.c?ref=6108fd1823f9cf036bbbe528ffcdf2fee489b40a",
      "patch": "@@ -2519,22 +2519,19 @@ preserve_one_internalvar (struct internalvar *var, struct objfile *objfile,\n void\n preserve_values (struct objfile *objfile)\n {\n-  htab_t copied_types;\n   struct internalvar *var;\n \n   /* Create the hash table.  We allocate on the objfile's obstack, since\n      it is soon to be deleted.  */\n-  copied_types = create_copied_types_hash (objfile);\n+  htab_up copied_types = create_copied_types_hash (objfile);\n \n   for (const value_ref_ptr &item : value_history)\n-    preserve_one_value (item.get (), objfile, copied_types);\n+    preserve_one_value (item.get (), objfile, copied_types.get ());\n \n   for (var = internalvars; var; var = var->next)\n-    preserve_one_internalvar (var, objfile, copied_types);\n+    preserve_one_internalvar (var, objfile, copied_types.get ());\n \n-  preserve_ext_lang_values (objfile, copied_types);\n-\n-  htab_delete (copied_types);\n+  preserve_ext_lang_values (objfile, copied_types.get ());\n }\n \n static void"
    }
  ]
}