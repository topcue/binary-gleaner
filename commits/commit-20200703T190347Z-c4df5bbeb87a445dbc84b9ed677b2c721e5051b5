{
  "sha": "c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YzRkZjViYmViODdhNDQ1ZGJjODRiOWVkNjc3YjJjNzIxZTUwNTFiNQ==",
  "commit": {
    "author": {
      "name": "Sebastian Huber",
      "email": "sebastian.huber@embedded-brains.de",
      "date": "2020-07-02T16:10:49Z"
    },
    "committer": {
      "name": "Sebastian Huber",
      "email": "sebastian.huber@embedded-brains.de",
      "date": "2020-07-03T19:03:47Z"
    },
    "message": "sim/igen: Fix linker error with -fno-common\n\nGCC 10 enables -fno-common by default.  This resulted in multiple\ndefinition linker errors since a global variable was declared and\ndefined in a header file:\n\n  ld: libsim.a(idecode.o):sim/v850/idecode.h:71: multiple definition of\n  `idecode_issue'; libsim.a(irun.o):sim/v850/idecode.h:71: first defined\n  here\n\n  ld: libsim.a(engine.o):sim/v850/idecode.h:71: multiple definition of\n  `idecode_issue'; libsim.a(irun.o):sim/v850/idecode.h:71: first defined\n  here\n\n  ld: libsim.a(support.o):sim/v850/idecode.h:71: multiple definition of\n  `idecode_issue'; libsim.a(irun.o):sim/v850/idecode.h:71: first defined\n  here\n\n  ld: libsim.a(semantics.o):sim/v850/idecode.h:71: multiple definition\n  of `idecode_issue'; libsim.a(irun.o):sim/v850/idecode.h:71: first\n  defined here\n\nsim/igen\n\n\tPR sim/26194\n\n\t* lf.h (lf_get_file_type): Declare.\n\t* lf.c (lf_get_file_type): Define.\n\t* gen-idecode.c (print_idecode_issue_function_header): Use\n\tlf_get_file_type() to issue an extern variable declaration in\n\tcase of header files.",
    "tree": {
      "sha": "ed41eb7b0c7a0d1b17f98783bc78b27ac1c8f425",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/ed41eb7b0c7a0d1b17f98783bc78b27ac1c8f425"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/comments",
  "author": {
    "login": "sebhub",
    "id": 932056,
    "node_id": "MDQ6VXNlcjkzMjA1Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebhub",
    "html_url": "https://github.com/sebhub",
    "followers_url": "https://api.github.com/users/sebhub/followers",
    "following_url": "https://api.github.com/users/sebhub/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions",
    "organizations_url": "https://api.github.com/users/sebhub/orgs",
    "repos_url": "https://api.github.com/users/sebhub/repos",
    "events_url": "https://api.github.com/users/sebhub/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebhub/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "sebhub",
    "id": 932056,
    "node_id": "MDQ6VXNlcjkzMjA1Ng==",
    "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sebhub",
    "html_url": "https://github.com/sebhub",
    "followers_url": "https://api.github.com/users/sebhub/followers",
    "following_url": "https://api.github.com/users/sebhub/following{/other_user}",
    "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions",
    "organizations_url": "https://api.github.com/users/sebhub/orgs",
    "repos_url": "https://api.github.com/users/sebhub/repos",
    "events_url": "https://api.github.com/users/sebhub/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sebhub/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad8464f799a4c96c7ab8bdfec3f95846cf54f9b0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad8464f799a4c96c7ab8bdfec3f95846cf54f9b0",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad8464f799a4c96c7ab8bdfec3f95846cf54f9b0"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 20,
    "deletions": 0
  },
  "files": [
    {
      "sha": "f3f50f4d3fa85ad69cb0f210d3363a55c26c0a3f",
      "filename": "sim/igen/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/ChangeLog?ref=c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
      "patch": "@@ -1,3 +1,12 @@\n+2020-07-03  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\tPR sim/26194\n+\t* lf.h (lf_get_file_type): Declare.\n+\t* lf.c (lf_get_file_type): Define.\n+\t* gen-idecode.c (print_idecode_issue_function_header): Use\n+\tlf_get_file_type() to issue an extern variable declaration in\n+\tcase of header files.\n+\n 2019-12-19  Tom Tromey  <tromey@adacore.com>\n \n \tPR build/24572:"
    },
    {
      "sha": "741498a1be9784a857843d1c00b37d5f7447fdd7",
      "filename": "sim/igen/gen-idecode.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/gen-idecode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/gen-idecode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/gen-idecode.c?ref=c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
      "patch": "@@ -930,6 +930,8 @@ print_idecode_issue_function_header (lf *file,\n \t\t\t\t\t\"INLINE_IDECODE\", \"\\n\");\n       break;\n     case is_function_variable:\n+      if (lf_get_file_type (file) == lf_is_h)\n+\tlf_printf (file, \"extern \");\n       print_semantic_function_type (file);\n       lf_printf (file, \" (*\");\n       break;"
    },
    {
      "sha": "937e3d939ffdf2e0383e707356c1862f290177b2",
      "filename": "sim/igen/lf.c",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/lf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/lf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/lf.c?ref=c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
      "patch": "@@ -86,6 +86,13 @@ lf_open (char *name,\n }\n \n \n+lf_file_type\n+lf_get_file_type (const lf *file)\n+{\n+  return file->type;\n+}\n+\n+\n void\n lf_close (lf *file)\n {"
    },
    {
      "sha": "6d86fac8d3fdcb842ec1985fdade003d68b362a9",
      "filename": "sim/igen/lf.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/lf.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c4df5bbeb87a445dbc84b9ed677b2c721e5051b5/sim/igen/lf.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/igen/lf.h?ref=c4df5bbeb87a445dbc84b9ed677b2c721e5051b5",
      "patch": "@@ -54,6 +54,8 @@ extern lf *lf_open\n    lf_file_references file_references,\n    lf_file_type type, const char *program);\n \n+extern lf_file_type lf_get_file_type (const lf *file);\n+\n extern void lf_close (lf *file);\n \n "
    }
  ]
}