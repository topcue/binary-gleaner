{
  "sha": "865288236d881acecdcf0aaa636fd28fd811d862",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODY1Mjg4MjM2ZDg4MWFjZWNkY2YwYWFhNjM2ZmQyOGZkODExZDg2Mg==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-05T08:27:19Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-06T00:29:46Z"
    },
    "message": "sim: fr30: delete unused testsuite\n\nLooking through the history, it doesn't seem like the fr30 port was\never merged.  There used to be a testsuite/fr30-elf/ dir, but that\nwas punted back in 2005 as being dead too.  Since there's no refs\nand the dir hasn't been touched since 1999, lets assume no one will\never notice or care.",
    "tree": {
      "sha": "6c55c9f4a83bc6ce1d5cbaeab8d8c9b6acb6c913",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6c55c9f4a83bc6ce1d5cbaeab8d8c9b6acb6c913"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/865288236d881acecdcf0aaa636fd28fd811d862",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865288236d881acecdcf0aaa636fd28fd811d862",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/865288236d881acecdcf0aaa636fd28fd811d862",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/865288236d881acecdcf0aaa636fd28fd811d862/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4"
    }
  ],
  "stats": {
    "total": 7230,
    "additions": 4,
    "deletions": 7226
  },
  "files": [
    {
      "sha": "4363bb566ddfeba4e70668da87bb9de90d06f92f",
      "filename": "sim/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/865288236d881acecdcf0aaa636fd28fd811d862/sim/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/865288236d881acecdcf0aaa636fd28fd811d862/sim/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/ChangeLog?ref=865288236d881acecdcf0aaa636fd28fd811d862",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* sim/fr30/: Delete.\n+\n 2021-01-05  Mike Frysinger  <vapier@gentoo.org>\n \n \t* common/Make-common.in: Delete."
    },
    {
      "sha": "f09850d7a6b6be3500a5c60c3429dd5863c37df3",
      "filename": "sim/testsuite/sim/fr30/ChangeLog",
      "status": "removed",
      "additions": 0,
      "deletions": 112,
      "changes": 112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ChangeLog?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,112 +0,0 @@\n-Mon Mar 22 13:28:56 1999  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* stb.cgs: Correct for unaligned access.\n-\t* sth.cgs: Correct for unaligned access.\n-\t* ldub.cgs: Fix typo: lduh->ldub. Correct\n-\tfor unaligned access.\n-\t* and.cgs: Test unaligned access.\n-\n-1999-01-05  Doug Evans  <devans@casey.cygnus.com>\n-\n-\t* allinsn.exp: Set all_machs.\n-\t* misc.exp: Likewise.\n-\n-Fri Dec 18 17:19:34 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* ldres.cgs: New testcase.\n-\t* copld.cgs: New testcase.\n-\t* copst.cgs: New testcase.\n-\t* copsv.cgs: New testcase.\n-\t* nop.cgs: New testcase.\n-\t* andccr.cgs: New testcase.\n-\t* orccr.cgs: New testcase.\n-\t* addsp.cgs: New testcase.\n-\t* stilm.cgs: New testcase.\n-\t* extsb.cgs: New testcase.\n-\t* extub.cgs: New testcase.\n-\t* extsh.cgs: New testcase.\n-\t* extuh.cgs: New testcase.\n-\t* enter.cgs: New testcase.\n-\t* leave.cgs: New testcase.\n-\t* xchb.cgs: New testcase.\n-\t* dmovb.cgs: New testcase.\n-\t* dmov.cgs: New testcase.\n-\t* dmovh.cgs: New testcase.\n-\n-Thu Dec 17 17:18:43 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* testutils.inc (take_branch{_d},no_branch{_d}): New macros.\n-\t* ret.cgs: Add tests fir ret:d.\n-\t* inte.cgs: New testcase.\n-\t* reti.cgs: New testcase.\n-\t* bra.cgs: New testcase.\n-\t* bno.cgs: New testcase.\n-\t* beq.cgs: New testcase.\n-\t* bne.cgs: New testcase.\n-\t* bc.cgs: New testcase.\n-\t* bnc.cgs: New testcase.\n-\t* bn.cgs: New testcase.\n-\t* bp.cgs: New testcase.\n-\t* bv.cgs: New testcase.\n-\t* bnv.cgs: New testcase.\n-\t* blt.cgs: New testcase.\n-\t* bge.cgs: New testcase.\n-\t* ble.cgs: New testcase.\n-\t* bgt.cgs: New testcase.\n-\t* bls.cgs: New testcase.\n-\t* bhi.cgs: New testcase.\n-\n-Tue Dec 15 17:47:13 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* div.cgs (int): Add signed division scenario.\n-\t* int.cgs (int): Complete testcase.\n-\t* testutils.inc (_start): Initialize tbr.\n-\t(test_s_user,test_s_system,set_i,test_i): New macros.\n-\n-1998-12-14  Doug Evans  <devans@casey.cygnus.com>\n-\n-\t* hello.ms: Add trailing \\n to expected output.\n-\n-1998-12-14  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* call.cgs: Test ret here as well.\n-\t* ld.cgs: Remove bogus comment.\n-\t* testutils.inc (save_rp,restore_rp): New macros.\n-\t* div.ms: New testcase.\n-\t* st.cgs: New testcase.\n-\t* sth.cgs: New testcase.\n-\t* stb.cgs: New testcase.\n-\t* mov.cgs: New testcase.\n-\t* jmp.cgs: New testcase.\n-\t* ret.cgs: New testcase.\n-\t* int.cgs: New testcase.\n-\n-Thu Dec 10 18:46:25 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* div0s.cgs: New testcase.\n-\t* div0u.cgs: New testcase.\n-\t* div1.cgs: New testcase.\n-\t* div2.cgs: New testcase.\n-\t* div3.cgs: New testcase.\n-\t* div4s.cgs: New testcase.\n-\t* testutils.inc (mvi_h_dr,set_dbits,test_dbits): New Macros.\n-\n-Tue Dec  8 13:16:53 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* testutils.inc (set_s_user): Correct Mask.\n-\t(set_s_system): Correct Mask.\n-\t* ld.cgs (ld): Move previously failing test back\n-\tinto place.\n-\t* ldm0.cgs: New testcase.\n-\t* ldm1.cgs: New testcase.\n-\t* stm0.cgs: New testcase.\n-\t* stm1.cgs: New testcase.\n-\n-Thu Dec  3 14:20:03 1998  Dave Brolley  <brolley@cygnus.com>\n-\n-\t* ld.cgs: Implement more loads.\n-\t* call.cgs: New testcase.\n-\t* testutils.inc (testr_h_dr): New macro.\n-\t(set_s_user,set_s_system): New macros.\n-\n-\t* .: New Directory."
    },
    {
      "sha": "1409df1b6fee63a28a4956dede270f6fe0f2b9ec",
      "filename": "sim/testsuite/sim/fr30/add.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/add.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,55 +0,0 @@\n-# fr30 testcase for add $Rj,$Ri, add $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global add\n-add:\n-\t; Test add $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tadd      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t3,r8\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tadd\t\tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tadd\t\tr8,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0,r8\n-\n-\t; Test add $u4Ri\n-\tmvi_h_gr   \t4,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tadd\t\t0,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t4,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tadd\t\t1,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t5,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tadd\t\t15,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t20,r8\n-\tmvi_h_gr   \t0x7fffffff,r8\t; test neg and overflow bits\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tadd\t\t1,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tadd\t\tr8,r8\t\t; test zero, carry and overflow bits\n-\ttest_cc\t\t0 1 1 1;\n-\ttest_h_gr  \t0,r8\n-\n-\tpass"
    },
    {
      "sha": "9da6868a110e4513c0491e7a4dedf034f12603c4",
      "filename": "sim/testsuite/sim/fr30/add.ms",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add.ms",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add.ms",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/add.ms?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,13 +0,0 @@\n-# fr30 testcase for add $Rj,$Ri\n-# cpu {}\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global add\n-add:\n-\tadd ac,ac\n-\tfail\n-\tEXIT 0"
    },
    {
      "sha": "856acde6fe8b2c9c09de9a3898b97d0074b013b9",
      "filename": "sim/testsuite/sim/fr30/add2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/add2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/add2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,43 +0,0 @@\n-# fr30 testcase for add2 $m4,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global add\n-add:\n-\tmvi_h_gr   \t30,r8\n-\tset_cc          0x0e\t; Set mask opposite of expected\n-\tadd2       \t-16,r8\t; Max value of immediate field\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_gr  \t14,r8\n-\n-\tset_cc          0x0e\t; Set mask opposite of expected\n-\tadd2       \t-3,r8\t; Mid value of immediate field\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_gr  \t11,r8\n-\n-\tset_cc          0x0e\t; Set mask opposite of expected\n-\tadd2       \t-1,r8\t; Min value of immediate field\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_gr  \t10,r8\n-\n-\tset_cc          0x0a\t; Set mask opposite of expected\n-\tadd2       \t-10,r8\t; Test zero and carry bits\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_gr  \t0,r8\n-\n-\tset_cc          0x07\t; Set mask opposite of expected\n-\tadd2       \t-16,r8\t; Test negative bit\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t-16,r8\n-\n-\tmvi_h_gr\t0x80000000,r8\n-\tset_cc          0x0c\t; Set mask opposite of expected\n-\tadd2       \t-1,r8\t; Test overflow bit\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tpass"
    },
    {
      "sha": "e13547894b6ff77dc0870c0551487354b3f25098",
      "filename": "sim/testsuite/sim/fr30/addc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 50,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/addc.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,50 +0,0 @@\n-# fr30 testcase for addc $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global add\n-add:\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Make sure carry bit is off\n-\taddc      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t3,r8\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x04\t\t; Make sure carry bit is off\n-\taddc\t\tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tset_cc          0x08\t\t; Make sure carry bit is off\n-\taddc\t\tr8,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0,r8\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Make sure carry bit is on\n-\taddc      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t4,r8\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x05\t\t; Make sure carry bit is on\n-\taddc\t\tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\n-\tset_cc          0x0b\t\t; Make sure carry bit is on\n-\taddc\t\tr7,r8\n-\ttest_cc\t\t0 1 0 1;\n-\ttest_h_gr  \t0,r8\n-\n-\tpass"
    },
    {
      "sha": "b7638d6199591ca9154583ab9297922e20339cb0",
      "filename": "sim/testsuite/sim/fr30/addn.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addn.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addn.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/addn.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,55 +0,0 @@\n-# fr30 testcase for addn $Rj,$Ri, addn $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global addn\n-addn:\n-\t; Test addn $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of normal result\n-\taddn      \tr7,r8\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t3,r8\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x05\t\t; Set mask opposite of normal result\n-\taddn\t\tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tset_cc          0x08\t\t; Set mask opposite of normal result\n-\taddn\t\tr8,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0,r8\n-\n-\t; Test addn $u4Ri\n-\tmvi_h_gr   \t4,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of normal result\n-\taddn\t\t0,r8\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t4,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of normal result\n-\taddn\t\t1,r8\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t5,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of normal result\n-\taddn\t\t15,r8\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t20,r8\n-\tmvi_h_gr   \t0x7fffffff,r8\t; test neg and overflow bits\n-\tset_cc          0x05\t\t; Set mask opposite of normal result\n-\taddn\t\t1,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_gr  \t0x80000000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of normal result\n-\taddn\t\tr8,r8\t\t; test zero, carry and overflow bits\n-\ttest_cc\t\t1 0 0 0;\n-\ttest_h_gr  \t0,r8\n-\n-\tpass"
    },
    {
      "sha": "9525baf4502fb0059f53ee857af1e8c7a2f8d178",
      "filename": "sim/testsuite/sim/fr30/addn2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 43,
      "changes": 43,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addn2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addn2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/addn2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,43 +0,0 @@\n-# fr30 testcase for addn2 $m4,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global add\n-add:\n-\tmvi_h_gr   \t30,r8\n-\tset_cc          0x0e\t; Set mask opposite of normal result\n-\taddn2       \t-16,r8\t; Max value of immediate field\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t14,r8\n-\n-\tset_cc          0x0e\t; Set mask opposite of normal result\n-\taddn2       \t-3,r8\t; Mid value of immediate field\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t11,r8\n-\n-\tset_cc          0x0e\t; Set mask opposite of normal result\n-\taddn2       \t-1,r8\t; Min value of immediate field\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t10,r8\n-\n-\tset_cc          0x0a\t; Set mask opposite of normal result\n-\taddn2       \t-10,r8\t; Test zero and carry bits\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0,r8\n-\n-\tset_cc          0x07\t; Set mask opposite of normal result\n-\taddn2       \t-16,r8\t; Test negative bit\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t-16,r8\n-\n-\tmvi_h_gr\t0x80000000,r8\n-\tset_cc          0x0c\t; Set mask opposite of normal result\n-\taddn2       \t-1,r8\t; Test overflow bit\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tpass"
    },
    {
      "sha": "da5bc36b86a3eca0c809c802df5967c70f9eb527",
      "filename": "sim/testsuite/sim/fr30/addsp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addsp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/addsp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/addsp.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,31 +0,0 @@\n-# fr30 testcase for addsp $s10\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global addsp\n-addsp:\n-\t; Test addsp $s10\n-\tmvr_h_gr   \tsp,r7\t\t\t; save stack pointer permanently\n-\tmvr_h_gr\tsp,r8\t\t\t; Shadow updated sp\n-\tset_cc\t0x0f\t\t\t; Condition codes are irrelevent\n-\taddsp      \t508\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t508,r8\n-\ttestr_h_gr\tr8,sp\n-\n-\tset_cc\t0x0e\t\t\t; Condition codes are irrelevent\n-\taddsp      \t0\n-\ttest_cc\t\t1 1 1 0\n-\ttestr_h_gr\tr8,sp\n-\n-\tset_cc\t0x0d\t\t\t; Condition codes are irrelevent\n-\taddsp      \t-512\n-\ttest_cc\t\t1 1 0 1\n-\tinci_h_gr\t-512,r8\n-\ttestr_h_gr\tr8,sp\n-\n-\tpass"
    },
    {
      "sha": "8c3d5121113f41f2a2f7b833008d1b453b28c857",
      "filename": "sim/testsuite/sim/fr30/allinsn.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/allinsn.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/allinsn.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/allinsn.exp?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,19 +0,0 @@\n-# FR30 simulator testsuite.\n-\n-if [istarget fr30*-*-*] {\n-    # load support procs\n-    # load_lib cgen.exp\n-\n-    # all machines\n-    set all_machs \"fr30\"\n-\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.cgs]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n-    }\n-}"
    },
    {
      "sha": "3148a3119156e99bd56443cbcb9ece459c945dd8",
      "filename": "sim/testsuite/sim/fr30/and.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/and.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/and.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/and.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,57 +0,0 @@\n-# fr30 testcase for and $Rj,$Ri, and $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global and\n-and:\n-\t; Test and $Rj,$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_gr   \t0x55555555,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tand      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0,r8\n-\n-\tmvi_h_gr   \t0xffff0000,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tand\t\tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0xaaaa0000,r8\n-\n-\tmvi_h_gr   \t0xffff,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tand\t\tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_gr  \t0xaaaa,r8\n-\n-\t; Test and $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tand      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0,sp\n-\n-\tmvi_h_mem  \t0xffff0000,sp\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tand\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_mem \t0xaaaa0000,sp\n-\n-\tmvr_h_gr\tsp,r9\n-\tinci_h_gr\t4,r9\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tmvi_h_mem  \t0xffff0000,r9\n-\tinci_h_gr\t1,sp\t\t; test unaligned access\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tand\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\tinci_h_gr\t-1,sp\n-\ttest_h_mem \t0xaaaaaaaa,sp\n-\ttest_h_mem \t0xffff0000,r9\n-\n-\tpass"
    },
    {
      "sha": "c01d49d276bb4c683f7fd59f65da56d01a153a28",
      "filename": "sim/testsuite/sim/fr30/andb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/andb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,31 +0,0 @@\n-# fr30 testcase for andb $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global andb\n-andb:\n-\t; Test andb $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tandb      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x00555555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tandb\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_mem \t0xaaffffff,sp\n-\n-\tmvi_h_mem  \t0x0fffffff,sp\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tandb\t\tr7,@sp\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_mem \t0x0affffff,sp\n-\n-\tpass"
    },
    {
      "sha": "7f8f99e25f58d6e4463d636a8e052e450d0d2cc3",
      "filename": "sim/testsuite/sim/fr30/andccr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andccr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andccr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/andccr.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,51 +0,0 @@\n-# fr30 testcase for andccr $u8\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global andccr\n-andccr:\n-\tset_cc\t\t0x00\n-\tset_i\t\t\t0\n-\tset_s_system\n-\tandccr      \t0xff\n-\ttest_cc\t\t0 0 0 0\n-\ttest_i\t\t0\n-\ttest_s_system\n-\n-\tset_cc\t\t0x0f\n-\tset_i\t\t\t1\n-\tset_s_user\n-\tandccr      \t0xff\n-\ttest_cc\t\t1 1 1 1\n-\ttest_i\t\t1\n-\ttest_s_user\n-\n-\tset_cc\t\t0x0f\n-\tset_i\t\t\t1\n-\tset_s_user\n-\tandccr      \t0xaa\n-\ttest_cc\t\t1 0 1 0\n-\ttest_i\t\t0\n-\ttest_s_user\n-\n-\tset_cc\t\t0x0f\n-\tset_i\t\t\t1\n-\tset_s_user\n-\tandccr      \t0xc0\n-\ttest_cc\t\t0 0 0 0\n-\ttest_i\t\t0\n-\ttest_s_system\n-\n-\tset_cc\t\t0x0f\n-\tset_i\t\t\t1\n-\tset_s_user\n-\tandccr      \t0x3f\t\t; no effect\n-\ttest_cc\t\t1 1 1 1\n-\ttest_i\t\t1\n-\ttest_s_user\n-\n-\tpass"
    },
    {
      "sha": "a172fc764f243b83c25ea50b78cbf4963165ef54",
      "filename": "sim/testsuite/sim/fr30/andh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/andh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/andh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,31 +0,0 @@\n-# fr30 testcase for andh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global andh\n-andh:\n-\t; Test andh $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tandh      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x00005555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tandh\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_mem \t0xaaaaffff,sp\n-\n-\tmvi_h_mem  \t0x00ffffff,sp\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tandh\t\tr7,@sp\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_mem \t0x00aaffff,sp\n-\n-\tpass"
    },
    {
      "sha": "f783d41ba3d05dc56b829ac873b27bc82f2cd1f6",
      "filename": "sim/testsuite/sim/fr30/asr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/asr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/asr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/asr.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,65 +0,0 @@\n-# fr30 testcase for asr $Rj,$Ri, asr $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global asr\n-asr:\n-\t; Test asr $Rj,$Ri\n-\tmvi_h_gr   \t0xdeadbee0,r7\t; Shift by 0\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tasr      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0xdeadbee1,r7\t; Shift by 1\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0xc0000000,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; Shift by 31\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t-1,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; clear register\n-\tmvi_h_gr   \t0x40000000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tasr      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\t; Test asr $u4Ri\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tasr      \t0,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr      \t1,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0xc0000000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr      \t15,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0xffff0000,r8\n-\n-\tmvi_h_gr   \t0x00004000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tasr      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "884e40d5c848892e8818fd989f061186e152a599",
      "filename": "sim/testsuite/sim/fr30/asr2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/asr2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/asr2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/asr2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for asr2 $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global asr2\n-asr2:\n-\t; Test asr2 $u4Ri\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tasr2      \t0,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0xffff8000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr2      \t1,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0xffffc000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tasr2      \t15,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t-1,r8\n-\n-\tmvi_h_gr   \t0x40000000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tasr2      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "45ab5e59f3a625a7ccbff766f52ac884fe760e6c",
      "filename": "sim/testsuite/sim/fr30/bandh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bandh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bandh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bandh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for bandh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bandh\n-bandh:\n-\t; Test bandh $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tbandh      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0x05555555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tbandh\t\t0x0a,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0xafffffff,sp\n-\n-\tmvi_h_mem  \t0xe5ffffff,sp\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tbandh\t\t0x07,@sp\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem \t0x65ffffff,sp\n-\n-\tpass"
    },
    {
      "sha": "9cd4825965a730f787cc44fb263ada4ddca123ec",
      "filename": "sim/testsuite/sim/fr30/bandl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bandl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bandl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bandl.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for bandl $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bandl\n-bandl:\n-\t; Test bandl $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tbandl      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0x50555555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tbandl\t\t0x0a,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0xfaffffff,sp\n-\n-\tmvi_h_mem  \t0x5effffff,sp\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tbandl\t\t0x07,@sp\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem \t0x56ffffff,sp\n-\n-\tpass"
    },
    {
      "sha": "0502625d32eac91d0c30236b45e98265eb411d92",
      "filename": "sim/testsuite/sim/fr30/bc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bc.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bc $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bc\n-bc:\n-\t; Test bc $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbc\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbc\n-\n-\t; Test bc:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbc:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbc:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "6d07f1af78825e0183a8ee0a9a0bbf4144c1ac75",
      "filename": "sim/testsuite/sim/fr30/beorh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beorh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beorh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/beorh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for beorh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global beorh\n-beorh:\n-\t; Test beorh $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tbeorh      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0xf5555555,sp\n-\n-\tmvi_h_mem  \t0x0fffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tbeorh\t\t0x00,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x0fffffff,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tbeorh\t\t0x0f,@sp\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem \t0x0fffffff,sp\n-\n-\tmvi_h_mem  \t0x9eadbeef,sp\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tbeorh\t\t0x04,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "f7ea05347b344428807a630c952602497fe04839",
      "filename": "sim/testsuite/sim/fr30/beorl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beorl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beorl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/beorl.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for beorl $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global beorl\n-beorl:\n-\t; Test beorl $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tbeorl      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0x5f555555,sp\n-\n-\tmvi_h_mem  \t0xf0ffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tbeorl\t\t0x00,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0xf0ffffff,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tbeorl\t\t0x0f,@sp\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem \t0xf0ffffff,sp\n-\n-\tmvi_h_mem  \t0xddadbeef,sp\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tbeorl\t\t0x03,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "edd797e4ed260be6cb47b0110471fb70910d34a4",
      "filename": "sim/testsuite/sim/fr30/beq.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beq.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/beq.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/beq.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for beq $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global beq\n-beq:\n-\t; Test beq $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbeq\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbeq\n-\n-\t; Test beq:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbeq:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbeq:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "dd7796ccd942e8f7046e2a91c20050f1cfbac6c9",
      "filename": "sim/testsuite/sim/fr30/bge.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bge.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bge.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bge.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bge $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bge\n-bge:\n-\t; Test bge $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbge\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbge\n-\n-\t; Test bge:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbge:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbge:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "525ac2e8f323997690daba57f23df9730e172e44",
      "filename": "sim/testsuite/sim/fr30/bgt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bgt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bgt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bgt.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bgt $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bgt\n-bgt:\n-\t; Test bgt $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbgt\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbgt\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbgt\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbgt\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbgt\n-\n-\t; Test bgt:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbgt:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbgt:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbgt:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbgt:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbgt:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "f5a15492063bd271675f835a2b02e6132be1ad9a",
      "filename": "sim/testsuite/sim/fr30/bhi.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bhi.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bhi.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bhi.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bhi $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bhi\n-bhi:\n-\t; Test bhi $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbhi\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbhi\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbhi\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbhi\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbhi\n-\n-\t; Test bhi:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbhi:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbhi:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbhi:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbhi:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbhi:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "1a33f783ce33ba8b22a4d0eb91555894315f68cb",
      "filename": "sim/testsuite/sim/fr30/ble.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ble.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ble.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ble.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for ble $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ble\n-ble:\n-\t; Test ble $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tble\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tble\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tble\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tble\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tble\n-\n-\t; Test ble:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tble:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tble:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tble:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tble:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tble:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "c0148b7b9015a8c27c8a1c0e8eabb105900394ae",
      "filename": "sim/testsuite/sim/fr30/bls.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bls.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bls.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bls.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bls $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bls\n-bls:\n-\t; Test bls $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbls\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbls\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbls\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbls\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbls\n-\n-\t; Test bls:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbls:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbls:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbls:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbls:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbls:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "f7b6ff114bfe218ba6dd981f44f6354a4060553a",
      "filename": "sim/testsuite/sim/fr30/blt.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/blt.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/blt.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/blt.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for blt $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global blt\n-blt:\n-\t; Test blt $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tblt\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tblt\n-\n-\t; Test blt:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tblt:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tblt:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "45858fc97ee5c1c488405c67a5f3a520c14e58b1",
      "filename": "sim/testsuite/sim/fr30/bn.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bn.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bn.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bn.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bn $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bn\n-bn:\n-\t; Test bn $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbn\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbn\n-\n-\t; Test bn:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbn:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbn:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "9968c43737c7f59ff3bf460e061ced6f7f7df7ee",
      "filename": "sim/testsuite/sim/fr30/bnc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bnc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bnc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bnc.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bnc $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bnc\n-bc:\n-\t; Test bnc $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbnc\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbnc\n-\n-\t; Test bnc:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnc:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnc:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "58971de13268223a14d80c125b28ed661742397d",
      "filename": "sim/testsuite/sim/fr30/bne.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bne.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bne.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bne.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bne $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bne\n-bne:\n-\t; Test bne $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbne\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbne\n-\n-\t; Test bne:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbne:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbne:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "faef9ba038070e88748136b9bfcf1434f0b15532",
      "filename": "sim/testsuite/sim/fr30/bno.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bno.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bno.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bno.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bno $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bno\n-bno:\n-\t; Test bno $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbno\n-\n-\t; Test bno:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbno:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "7615abd6c7d64f29077fd9df30436d95a1b1971a",
      "filename": "sim/testsuite/sim/fr30/bnv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bnv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bnv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bnv.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bnv $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bnv\n-bnv:\n-\t; Test bnv $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch \tbnv\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbnv\n-\n-\t; Test bnv:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\tno_branch_d \tbnv:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbnv:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "039f18a37e29915662c62ef7f93350c6b6cf8c8b",
      "filename": "sim/testsuite/sim/fr30/borh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/borh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/borh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/borh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for borh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global borh\n-borh:\n-\t; Test borh $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tborh      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0xf5555555,sp\n-\n-\tmvi_h_mem  \t0x0fffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tborh\t\t0x00,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x0fffffff,sp\n-\n-\tmvi_h_mem  \t0xceadbeef,sp\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tborh\t\t0x01,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "beb2bbbaa2de33edc24b9aa19e5ccad0a0166a3b",
      "filename": "sim/testsuite/sim/fr30/borl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/borl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/borl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/borl.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for borl $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global borl\n-borl:\n-\t; Test borl $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tborl      \t0x0a,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem \t0x5f555555,sp\n-\n-\tmvi_h_mem  \t0xf0ffffff,sp\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tborl\t\t0x00,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0xf0ffffff,sp\n-\n-\tmvi_h_mem  \t0xdcadbeef,sp\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tborl\t\t0x02,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "375328305e04519db84a3eeef07ff974f7c1d2bc",
      "filename": "sim/testsuite/sim/fr30/bp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bp.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bp $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bp\n-bp:\n-\t; Test bp $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbp\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbp\n-\n-\t; Test bp:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbp:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbp:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "3732f74a3edff51ecb78ec487fd30331221030b8",
      "filename": "sim/testsuite/sim/fr30/bra.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bra.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bra.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bra.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bra $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bra\n-bra:\n-\t; Test bra $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch \tbra\n-\n-\t; Test bra:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbra:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "2897c340555c1e380f38838991e6fbec113895f9",
      "filename": "sim/testsuite/sim/fr30/btsth.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/btsth.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/btsth.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/btsth.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for btsth $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global btsth\n-btsth:\n-\t; Test btsth $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tbtsth      \t0x0a,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x55555555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tbtsth\t\t0x0a,@sp\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_mem \t0xffffffff,sp\n-\n-\tmvi_h_mem  \t0xe5ffffff,sp\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tbtsth\t\t0x07,@sp\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_mem \t0xe5ffffff,sp\n-\n-\tpass"
    },
    {
      "sha": "cef5a927190dc518b7d08dae662cf262f105b808",
      "filename": "sim/testsuite/sim/fr30/btstl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/btstl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/btstl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/btstl.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,30 +0,0 @@\n-# fr30 testcase for btstl $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global btstl\n-btstl:\n-\t; Test btstl $Rj,@$Ri\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tbtstl      \t0x0a,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x55555555,sp\n-\n-\tmvi_h_mem  \t0xffffffff,sp\n-\tset_cc          0x0c\t\t; Set mask opposite of expected\n-\tbtstl\t\t0x0a,@sp\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_mem \t0xffffffff,sp\n-\n-\tmvi_h_mem  \t0x5effffff,sp\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tbtstl\t\t0x07,@sp\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_mem \t0x5effffff,sp\n-\n-\tpass"
    },
    {
      "sha": "68cb9acf165bd1c81e55025fab7521379f9514f6",
      "filename": "sim/testsuite/sim/fr30/bv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 109,
      "changes": 109,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/bv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/bv.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,109 +0,0 @@\n-# fr30 testcase for bv $label9\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global bv\n-bv:\n-\t; Test bv $label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch \tbv\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch \tbv\n-\n-\t; Test bv:d label9\n-\tset_cc          0x0f\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0xf\n-\n-\tset_cc          0x0e\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0xe\n-\n-\tset_cc          0x0d\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0xd\n-\n-\tset_cc          0x0c\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0xc\n-\n-\tset_cc          0x0b\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0xb\n-\n-\tset_cc          0x0a\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0xa\n-\n-\tset_cc          0x09\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x9\n-\n-\tset_cc          0x08\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x8\n-\n-\tset_cc          0x07\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0x7\n-\n-\tset_cc          0x06\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0x6\n-\n-\tset_cc          0x05\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x5\n-\n-\tset_cc          0x04\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x4\n-\n-\tset_cc          0x03\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0x3\n-\n-\tset_cc          0x02\t\t; condition codes are irrelevent\n-\ttake_branch_d \tbv:d 0x2\n-\n-\tset_cc          0x01\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x1\n-\n-\tset_cc          0x00\t\t; condition codes are irrelevent\n-\tno_branch_d \tbv:d 0x0\n-\n-\tpass"
    },
    {
      "sha": "413840ed350544e59860b13e71700d95b96c9b97",
      "filename": "sim/testsuite/sim/fr30/call.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 69,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/call.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/call.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/call.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,69 +0,0 @@\n-# fr30 testcase for call @$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global call\n-\n-\t; Test call $Ri\n-\tmvi_h_gr\t0xdeadbeef,r9\n-\tmvi_h_gr   \t#func1,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call1:\n-\tcall\t\t@r0\n-\ttest_h_gr\t0xbeefdead,r9\n-\tpass\n-\n-func1:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call1,r7\n-\tinci_h_gr\t2,r7\n-\ttestr_h_dr\tr7,rp\n-\tsave_rp\n-\n-\tmvi_h_gr   \t#func2,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call2:\n-\tcall:d\t\t@r0\n-\tldi:8\t\t1,r0\t\t; Must assume this works\n-\trestore_rp\n-\tret\n-func2:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call2,r7\n-\tinci_h_gr\t4,r7\n-\ttestr_h_dr\tr7,rp\n-\ttestr_h_gr\t1,r0\n-\tsave_rp\n-\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call3:\n-\tcall\t\tfunc3\n-\trestore_rp\n-\tret\n-func3:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call3,r7\n-\tinci_h_gr\t2,r7\n-\ttestr_h_dr\tr7,rp\n-\tsave_rp\n-\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call4:\n-\tcall:d\t\tfunc4\n-\tldi:8\t\t1,r0\t\t; Must assume this works\n-\trestore_rp\n-\tret\n-func4:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call4,r7\n-\tinci_h_gr\t4,r7\n-\ttestr_h_dr\tr7,rp\n-\ttestr_h_gr\t1,r0\n-\tmvi_h_gr\t0xbeefdead,r9\n-\tret\n-\n-\tfail"
    },
    {
      "sha": "7bfbbf8f1c9cf333b48471540c01f0fe61e804c2",
      "filename": "sim/testsuite/sim/fr30/cmp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 53,
      "changes": 53,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/cmp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/cmp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/cmp.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,53 +0,0 @@\n-# fr30 testcase for cmp $Rj,$Ri, cmp $u4,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global cmp\n-cmp:\n-\t; Test cmp $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tcmp      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tcmp\t\tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tcmp\t\tr8,r8\n-\ttest_cc\t\t0 1 0 0\n-\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tcmp\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\n-\t; Test cmp $u4,$Ri\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tcmp      \t1,r8\n-\ttest_cc\t\t0 0 0 0\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tcmp\t\t1,r8\n-\ttest_cc\t\t0 0 1 0\n-\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tcmp\t\t0,r8\n-\ttest_cc\t\t0 1 0 0\n-\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tcmp\t\t15,r8\n-\ttest_cc\t\t1 0 0 1\n-\n-\tpass"
    },
    {
      "sha": "7ba62013cadc6022af460f298c8a8c8d3a2e9636",
      "filename": "sim/testsuite/sim/fr30/cmp2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/cmp2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/cmp2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/cmp2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,27 +0,0 @@\n-# fr30 testcase for cmp2 $u4,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global cmp2\n-cmp2:\n-\t; Test cmp2 $u4,$Ri\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tcmp2      \t-1,r8\n-\ttest_cc\t\t0 0 0 1\n-\n-\tmvi_h_gr   \t0x7ffffffe,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tcmp2\t\t-2,r8\n-\ttest_cc\t\t1 0 1 1\n-\n-\tmvi_h_gr   \t-16,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tcmp2\t\t-16,r8\n-\ttest_cc\t\t0 1 0 0\n-\n-\tpass"
    },
    {
      "sha": "e0ababb0e85438c7fb994b1369330c59ba1046f0",
      "filename": "sim/testsuite/sim/fr30/copld.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copld.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copld.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/copld.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,21 +0,0 @@\n-# fr30 testcase for copld $u4,$cc,$Rj,CRi\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global copld\n-copld:\n-\t; Test copld copld $u4,$cc,$Rj,CRi\n-\t; The current implementation is a noop\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tcopld      \t0,0,r0,cr15\n-\ttest_cc\t\t1 1 1 1\n-\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\tcopld      \t15,255,r15,cr0\n-\ttest_cc\t\t1 1 1 0\n-\n-\tpass"
    },
    {
      "sha": "b0afd77005b60ebf3983f0b8eb7296a543812c7e",
      "filename": "sim/testsuite/sim/fr30/copop.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copop.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copop.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/copop.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,21 +0,0 @@\n-# fr30 testcase for copop $u4,$cc,$CRj,CRi\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global copop\n-copop:\n-\t; Test copop copop $u4,$cc,$CRj,CRi\n-\t; The current implementation is a noop\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tcopop      \t0,0,cr0,cr15\n-\ttest_cc\t\t1 1 1 1\n-\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\tcopop      \t15,255,cr0,cr15\n-\ttest_cc\t\t1 1 1 0\n-\n-\tpass"
    },
    {
      "sha": "00120b2096c4f386f5136ea9c0b8bd9284bc6e6f",
      "filename": "sim/testsuite/sim/fr30/copst.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copst.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copst.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/copst.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,21 +0,0 @@\n-# fr30 testcase for copst $u4,$cc,$CRj,Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global copst\n-copst:\n-\t; Test copst copst $u4,$cc,$CRj,Ri\n-\t; The current implementation is a noop\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tcopst      \t0,0,cr0,r15\n-\ttest_cc\t\t1 1 1 1\n-\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\tcopst      \t15,255,cr15,r0\n-\ttest_cc\t\t1 1 1 0\n-\n-\tpass"
    },
    {
      "sha": "e00a4f5315ca0b14275f4acdf3ae79afb927414f",
      "filename": "sim/testsuite/sim/fr30/copsv.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 21,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copsv.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/copsv.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/copsv.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,21 +0,0 @@\n-# fr30 testcase for copsv $u4,$cc,$CRj,Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global copsv\n-copsv:\n-\t; Test copsv copsv $u4,$cc,$CRj,Ri\n-\t; The current implementation is a noop\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tcopsv      \t0,0,cr0,r15\n-\ttest_cc\t\t1 1 1 1\n-\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\tcopsv      \t15,255,cr15,r0\n-\ttest_cc\t\t1 1 1 0\n-\n-\tpass"
    },
    {
      "sha": "7e3aaf20ae0ad4780e19d12c6cfc2d8f7bb6971a",
      "filename": "sim/testsuite/sim/fr30/div.ms",
      "status": "removed",
      "additions": 0,
      "deletions": 176,
      "changes": 176,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div.ms",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div.ms",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div.ms?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,176 +0,0 @@\n-# fr30 testcase for division\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div\n-div:\n-\t; simple division 12 / 3\n-\tmvi_h_gr   \t0x00000003,r2\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0x0000000c,mdl\n-\tdiv0s      \tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv2            r2\n-\tdiv3\n-\tdiv4s\n-\ttest_h_gr  \t0x00000003,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x00000004,mdl\n-\ttest_dbits\t0x0\n-\n-\t; example 1 from div0s the manual\n-\tmvi_h_gr   \t0x01234567,r2\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0xfedcba98,mdl\n-\tdiv0s      \tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv2            r2\n-\tdiv3\n-\tdiv4s\n-\ttest_h_gr  \t0x01234567,r2\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0xffffffff,mdl\n-\ttest_dbits\t0x3\n-\n-\t; example 2 from div0s the manual\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0xfedcba98,mdl\n-\tmvi_h_gr   \t0x1234567,r2\n-\tmvi_h_gr   \t1,r0\n-\tmvi_h_gr   \t32,r1\n-\tdiv0s      \tr2\n-loop1:\tsub\t\tr0,r1\n-\tbne:d\t\tloop1\n-\tdiv1\t\tr2\n-\tdiv2\t\tr2\n-\tdiv3\n-\tdiv4s\n-\ttest_h_gr  \t0x01234567,r2\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0xffffffff,mdl\n-\ttest_dbits\t0x3\n-\n-\t; example 1 from div0u in the manual\n-\tmvi_h_gr   \t0x01234567,r2\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0xfedcba98,mdl\n-\tdiv0u      \tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\tdiv1\t\tr2\n-\ttest_h_gr  \t0x01234567,r2\n-\ttest_h_dr  \t0x00000078,mdh\n-\ttest_h_dr  \t0x000000e0,mdl\n-\ttest_dbits\t0x0\n-\n-\t; example 2 from div0u in the manual\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0xfedcba98,mdl\n-\tmvi_h_gr   \t0x1234567,r2\n-\tmvi_h_gr   \t1,r0\n-\tmvi_h_gr   \t32,r1\n-\tdiv0u      \tr2\n-loop2:\tsub\t\tr0,r1\n-\tbne:d\t\tloop2\n-\tdiv1\t\tr2\n-\ttest_h_gr  \t0x01234567,r2\n-\ttest_h_dr  \t0x00000078,mdh\n-\ttest_h_dr  \t0x000000e0,mdl\n-\ttest_dbits\t0x0\n-\n-\tpass"
    },
    {
      "sha": "84d76c4bfb9b5dd09895e360a0d85b786a4f0e19",
      "filename": "sim/testsuite/sim/fr30/div0s.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 64,
      "changes": 64,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div0s.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div0s.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div0s.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,64 +0,0 @@\n-# fr30 testcase for div0s $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div0s\n-div0s:\n-\t; Test div0s $Rj,$Ri\n-\t; example from the manual - negative dividend\n-\tmvi_h_gr   \t0x0fffffff,r2\n-\tmvi_h_dr   \t0x00000000,mdh\n-\tmvi_h_dr   \t0xfffffff0,mdl\n-\tset_dbits\t0x0\t\t; Set opposite of expected\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tdiv0s      \tr2\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x0fffffff,r2\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0xfffffff0,mdl\n-\ttest_dbits\t0x3\n-\n-\t; negative divisor\n-\tmvi_h_gr   \t0xffffffff,r2\n-\tmvi_h_dr   \t0xffffffff,mdh\n-\tmvi_h_dr   \t0x7fffffff,mdl\n-\tset_dbits\t0x1\t\t; Set opposite of expected\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tdiv0s      \tr2\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xffffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x7fffffff,mdl\n-\ttest_dbits\t0x2\n-\n-\t; Both sign bits 0\n-\tmvi_h_gr   \t0x0fffffff,r2\n-\tmvi_h_dr   \t0xffffffff,mdh\n-\tmvi_h_dr   \t0x7ffffff0,mdl\n-\tset_dbits\t0x3\t\t; Set opposite of expected\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tdiv0s      \tr2\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x0fffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x7ffffff0,mdl\n-\ttest_dbits\t0x0\n-\n-\t; Both sign bits 1\n-\tmvi_h_gr   \t0xffffffff,r2\n-\tmvi_h_dr   \t0x00000000,mdh\n-\tmvi_h_dr   \t0xffffffff,mdl\n-\tset_dbits\t0x2\t\t; Set opposite of expected\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tdiv0s      \tr2\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xffffffff,r2\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0xffffffff,mdl\n-\ttest_dbits\t0x1\n-\n-\tpass"
    },
    {
      "sha": "8fd84a6c22b8ebff05e72932047c80c4ac767af0",
      "filename": "sim/testsuite/sim/fr30/div0u.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div0u.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div0u.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div0u.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,25 +0,0 @@\n-# fr30 testcase for div0u $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div0u\n-div0u:\n-\t; Test div0u $Rj,$Ri\n-\t; operand register has no effect\n-\tmvi_h_gr   \t0xdeadbeef,r2\n-\tmvi_h_dr   \t0xdeadbeef,mdh\n-\tmvi_h_dr   \t0x0ffffff0,mdl\n-\tset_dbits\t0x3\t\t; Set opposite of expected\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tdiv0u      \tr2\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x0ffffff0,mdl\n-\ttest_dbits\t0x0\n-\n-\tpass"
    },
    {
      "sha": "dac35fe15c47af8e255aa7b6c93a46af305aec88",
      "filename": "sim/testsuite/sim/fr30/div1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 113,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div1.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,113 +0,0 @@\n-# fr30 testcase for div1 $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div1\n-div1:\n-\t; Test div1 $Ri\n-\t; example from the manual -- all status bits 0\n-\tmvi_h_gr   \t0x00ffffff,r2\n-\tmvi_h_dr   \t0x00ffffff,mdh\n-\tmvi_h_dr   \t0x00000000,mdl\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00ffffff,mdh\t; misprinted in manual?\n-\ttest_h_dr  \t0x00000001,mdl\n-\n-\t; D0 == 1\n-\tset_dbits\t0x1\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x1\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x01fffffe,mdh\n-\ttest_h_dr  \t0x00000002,mdl\n-\n-\t; D1 == 1\n-\tset_dbits\t0x2\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x2\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x03fffffc,mdh\n-\ttest_h_dr  \t0x00000004,mdl\n-\n-\t; D0 == 1, D1 == 1\n-\tset_dbits\t0x3\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x3\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x08fffff7,mdh\n-\ttest_h_dr  \t0x00000009,mdl\n-\n-\t; C == 1\n-\tmvi_h_gr  \t0x11ffffef,r2\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x11ffffef,r2\n-\ttest_h_dr  \t0x11ffffee,mdh\n-\ttest_h_dr  \t0x00000012,mdl\n-\n-\t; D0 == 1, C == 1\n-\tmvi_h_gr  \t0x23ffffdd,r2\n-\tset_dbits\t0x1\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x1\n-\ttest_h_gr  \t0x23ffffdd,r2\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0x00000025,mdl\n-\n-\t; D1 == 1, C == 1\n-\tmvi_h_gr  \t0x00000003,r2\n-\tset_dbits\t0x2\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x2\n-\ttest_h_gr  \t0x00000003,r2\n-\ttest_h_dr  \t0x00000001,mdh\n-\ttest_h_dr  \t0x0000004b,mdl\n-\n-\t; D0 == 1, D1 == 1, C == 1\n-\tmvi_h_gr  \t0xfffffffe,r2\n-\tset_dbits\t0x3\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x3\n-\ttest_h_gr  \t0xfffffffe,r2\n-\ttest_h_dr  \t0x00000002,mdh\n-\ttest_h_dr  \t0x00000096,mdl\n-\n-\t; remainder is zero\n-\tmvi_h_gr  \t0x00000004,r2\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv1      \tr2\n-\ttest_cc\t\t0 1 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00000004,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x0000012d,mdl\n-\n-\tpass\n-\n-\n-"
    },
    {
      "sha": "03000a242427384d41857fb3bb4d76b1b2e87381",
      "filename": "sim/testsuite/sim/fr30/div2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 120,
      "changes": 120,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,120 +0,0 @@\n-# fr30 testcase for div2 $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div2\n-div2:\n-\t; Test div2 $Ri\n-\t; example from the manual -- all status bits 0\n-\tmvi_h_gr   \t0x00ffffff,r2\n-\tmvi_h_dr   \t0x00ffffff,mdh\n-\tmvi_h_dr   \t0x0000000f,mdl\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 1 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D0 == 1\n-\tmvi_h_dr   \t0x00ffffff,mdh\n-\tset_dbits\t0x1\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 1 0 0\n-\ttest_dbits\t0x1\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D1 == 1\n-\tmvi_h_dr   \t0x00ffffff,mdh\n-\tset_dbits\t0x2\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x2\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00ffffff,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D0 == 1, D1 == 1\n-\tset_dbits\t0x3\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x3\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00ffffff,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; C == 1\n-\tmvi_h_dr   \t0x11ffffee,mdh\n-\tmvi_h_gr  \t0x11ffffef,r2\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x11ffffef,r2\n-\ttest_h_dr  \t0x11ffffee,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D0 == 1, C == 1\n-\tmvi_h_dr   \t0x23ffffdc,mdh\n-\tmvi_h_gr  \t0x23ffffdd,r2\n-\tset_dbits\t0x1\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x1\n-\ttest_h_gr  \t0x23ffffdd,r2\n-\ttest_h_dr  \t0x23ffffdc,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D1 == 1, C == 1\n-\tmvi_h_dr   \t0xfffffffd,mdh\n-\tmvi_h_gr  \t0x00000004,r2\n-\tset_dbits\t0x2\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x2\n-\ttest_h_gr  \t0x00000004,r2\n-\ttest_h_dr  \t0xfffffffd,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; D0 == 1, D1 == 1, C == 1\n-\tmvi_h_dr   \t0x00000002,mdh\n-\tmvi_h_gr  \t0xffffffff,r2\n-\tset_dbits\t0x3\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 0 0 1\n-\ttest_dbits\t0x3\n-\ttest_h_gr  \t0xffffffff,r2\n-\ttest_h_dr  \t0x00000002,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\t; remainder is zero\n-\tmvi_h_dr   \t0x00000004,mdh\n-\tmvi_h_gr  \t0x00000004,r2\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv2      \tr2\n-\ttest_cc\t\t0 1 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00000004,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x0000000f,mdl\n-\n-\tpass\n-\n-\n-"
    },
    {
      "sha": "ee7da1a8042fb7b2fc88109230adaa2735c664e2",
      "filename": "sim/testsuite/sim/fr30/div3.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div3.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div3.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div3.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,34 +0,0 @@\n-# fr30 testcase for div3\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div3\n-div3:\n-\t; Test div3\n-\t; example from the manual\n-\tmvi_h_gr   \t0x00ffffff,r2\n-\tmvi_h_dr   \t0x00000000,mdh\n-\tmvi_h_dr   \t0x0000000f,mdl\n-\tset_dbits\t0x0\n-\tset_cc          0x04\n-\tdiv3\n-\ttest_cc\t\t0 1 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x00000010,mdl\n-\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv3\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0x00000010,mdl\n-\n-\tpass"
    },
    {
      "sha": "3b98ecaf1c3793a349f33962b067300b27345a91",
      "filename": "sim/testsuite/sim/fr30/div4s.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div4s.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/div4s.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/div4s.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,34 +0,0 @@\n-# fr30 testcase for div4s\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global div4s\n-div4s:\n-\t; Test div4s\n-\t; example from the manual\n-\tmvi_h_gr   \t0x00ffffff,r2\n-\tmvi_h_dr   \t0x00000000,mdh\n-\tmvi_h_dr   \t0x0000000f,mdl\n-\tset_dbits\t0x3\n-\tset_cc          0x0f\n-\tdiv4s\n-\ttest_cc\t\t1 1 1 1\n-\ttest_dbits\t0x3\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0xfffffff1,mdl\n-\n-\tset_dbits\t0x0\n-\tset_cc          0x00\n-\tdiv4s\n-\ttest_cc\t\t0 0 0 0\n-\ttest_dbits\t0x0\n-\ttest_h_gr  \t0x00ffffff,r2\n-\ttest_h_dr  \t0x00000000,mdh\n-\ttest_h_dr  \t0xfffffff1,mdl\n-\n-\tpass"
    },
    {
      "sha": "bd2e5cc45ff5af8e8c96048f31c9ecc7dc73a58b",
      "filename": "sim/testsuite/sim/fr30/dmov.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 73,
      "changes": 73,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmov.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmov.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/dmov.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,73 +0,0 @@\n-# fr30 testcase for dmov\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\tSTART\n-\n-\t.text\n-\t.global dmov\n-dmov:\n-\t; Test dmov @$dir10,$R13\n-\tmvi_h_gr\t0xdeadbeef,r1\n-\tmvi_h_gr\t0x200,r2\n-\tmvr_h_mem\tr1,r2\n-\tset_cc          0x0f\t\t; Condition codes shouldn't change\n-\tdmov\t\t@0x200,r13\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr\t0xdeadbeef,r13\n-\n-\t; Test dmov $R13,@$dir10\n-\tmvi_h_gr\t0xbeefdead,r13\n-\tset_cc          0x0e\t\t; Condition codes shouldn't change\n-\tdmov\t\tr13,@0x200\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xbeefdead,r2\n-\n-\t; Test dmov @$dir10,@R13+\n-\tmvi_h_gr\t0x1fc,r13\n-\tset_cc          0x0d\t\t; Condition codes shouldn't change\n-\tdmov\t\t@0x200,@r13+\n-\ttest_cc\t\t1 1 0 1\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xbeefdead,r2\n-\tinci_h_gr\t4,r2\n-\ttest_h_mem\t0xbeefdead,r2\n-\ttest_h_gr\t0x200,r13\n-\n-\t; Test dmov @$R13+,@$dir10\n-\tmvi_h_gr\t0x1fc,r13\n-\tmvi_h_mem\t0xdeadbeef,r13\n-\tset_cc          0x0c\t\t; Condition codes shouldn't change\n-\tdmov\t\t@r13+,@0x200\n-\ttest_cc\t\t1 1 0 0\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xdeadbeef,r2\n-\tinci_h_gr\t4,r2\n-\ttest_h_mem\t0xdeadbeef,r2\n-\ttest_h_gr\t0x200,r13\n-\n-\t; Test dmov @$dir10,@-R15\n-\tmvi_h_gr\t0x200,r15\n-\tmvi_h_mem\t0xdeadbeef,r15\n-\tset_cc          0x0b\t\t; Condition codes shouldn't change\n-\tdmov\t\t@0x200,@-r15\n-\ttest_cc\t\t1 0 1 1\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xdeadbeef,r2\n-\tinci_h_gr\t4,r2\n-\ttest_h_mem\t0xdeadbeef,r2\n-\ttest_h_gr\t0x1fc,r15\n-\n-\t; Test dmov @$R15+,@$dir10\n-\tmvi_h_gr\t0x1fc,r15\n-\tmvi_h_mem\t0xbeefdead,r15\n-\tset_cc          0x0a\t\t; Condition codes shouldn't change\n-\tdmov\t\t@r15+,@0x200\n-\ttest_cc\t\t1 0 1 0\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xbeefdead,r2\n-\tinci_h_gr\t4,r2\n-\ttest_h_mem\t0xbeefdead,r2\n-\ttest_h_gr\t0x200,r15\n-\n-\tpass"
    },
    {
      "sha": "96cfb9d3e089a3793878573aa431589a87a54f9d",
      "filename": "sim/testsuite/sim/fr30/dmovb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmovb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmovb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/dmovb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,46 +0,0 @@\n-# fr30 testcase for dmovb\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\tSTART\n-\n-\t.text\n-\t.global dmovb\n-dmovb:\n-\t; Test dmovb @$dir8,$R13\n-\tmvi_h_gr\t0xdeadbeef,r1\n-\tmvi_h_gr\t0x80,r2\n-\tmvr_h_mem\tr1,r2\n-\tset_cc          0x0f\t\t; Condition codes shouldn't change\n-\tdmovb\t\t@0x80,r13\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr\t0xffffffde,r13\n-\n-\t; Test dmovb $R13,@$dir8\n-\tmvi_h_gr\t0xbeefdead,r13\n-\tset_cc          0x0e\t\t; Condition codes shouldn't change\n-\tdmovb\t\tr13,@0x80\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xadadbeef,r2\n-\n-\t; Test dmovb @$dir8,@R13+\n-\tmvi_h_gr\t0x7c,r13\n-\tmvi_h_mem\t0xdeadbeef,r13\n-\tset_cc          0x0d\t\t; Condition codes shouldn't change\n-\tdmovb\t\t@0x7f,@r13+\n-\ttest_cc\t\t1 1 0 1\n-\tmvi_h_gr\t0x7c,r2\n-\ttest_h_mem\t0xefadbeef,r2\n-\ttest_h_gr\t0x7d,r13\n-\n-\t; Test dmovb @$R13+,@$dir8\n-\tmvi_h_gr\t0x7c,r13\n-\tmvi_h_mem\t0xbeefdead,r13\n-\tset_cc          0x0c\t\t; Condition codes shouldn't change\n-\tdmovb\t\t@r13+,@0x7f\n-\ttest_cc\t\t1 1 0 0\n-\tmvi_h_gr\t0x7c,r2\n-\ttest_h_mem\t0xbeefdebe,r2\n-\ttest_h_gr\t0x7d,r13\n-\n-\tpass"
    },
    {
      "sha": "86afb44f41117970964fa4c3fd5b2d9923498d47",
      "filename": "sim/testsuite/sim/fr30/dmovh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 46,
      "changes": 46,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmovh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/dmovh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/dmovh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,46 +0,0 @@\n-# fr30 testcase for dmovh\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\tSTART\n-\n-\t.text\n-\t.global dmovh\n-dmovh:\n-\t; Test dmovh @$dir9,$R13\n-\tmvi_h_gr\t0xdeadbeef,r1\n-\tmvi_h_gr\t0x100,r2\n-\tmvr_h_mem\tr1,r2\n-\tset_cc          0x0f\t\t; Condition codes shouldn't change\n-\tdmovh\t\t@0x100,r13\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr\t0xffffdead,r13\n-\n-\t; Test dmovh $R13,@$dir9\n-\tmvi_h_gr\t0xdeadbeef,r13\n-\tset_cc          0x0e\t\t; Condition codes shouldn't change\n-\tdmovh\t\tr13,@0x100\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xbeefbeef,r2\n-\n-\t; Test dmovh @$dir9,@R13+\n-\tmvi_h_gr\t0x1fc,r13\n-\tmvi_h_mem\t0xdeadbeef,r13\n-\tset_cc          0x0d\t\t; Condition codes shouldn't change\n-\tdmovh\t\t@0x1fe,@r13+\n-\ttest_cc\t\t1 1 0 1\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xbeefbeef,r2\n-\ttest_h_gr\t0x1fe,r13\n-\n-\t; Test dmovh @$R13+,@$dir9\n-\tmvi_h_gr\t0x1fc,r13\n-\tmvi_h_mem\t0xbeefdead,r13\n-\tset_cc          0x0c\t\t; Condition codes shouldn't change\n-\tdmovh\t\t@r13+,@0x1fe\n-\ttest_cc\t\t1 1 0 0\n-\tmvi_h_gr\t0x1fc,r2\n-\ttest_h_mem\t0xbeefbeef,r2\n-\ttest_h_gr\t0x1fe,r13\n-\n-\tpass"
    },
    {
      "sha": "ae75e16a2e1fceedbf680513923070350d3c4e74",
      "filename": "sim/testsuite/sim/fr30/enter.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 34,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/enter.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/enter.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/enter.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,34 +0,0 @@\n-# fr30 testcase for enter $u10\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global enter\n-enter:\n-\t; Test enter $u10\n-\tmvr_h_gr   \tsp,r7\t\t\t; save stack pointer\n-\tmvr_h_gr\tsp,r8\t\t\t; shadow stack pointer\n-\tmvr_h_gr\tsp,r14\t\t; Initialize\n-\tset_cc\t0x0f\t\t\t; Condition codes are irrelevent\n-\tenter      \t0\n-\ttest_cc\t1 1 1 1\n-\ttestr_h_gr \tr8,sp\n-\tinci_h_gr\t-4,r8\n-\ttestr_h_gr\tr14,r8\n-\ttestr_h_mem\tr7,r14\n-\n-\tmvr_h_gr\tsp,r8\t\t\t; shadow stack pointer\n-\tmvr_h_gr\tr14,r9\t\t; save\n-\tset_cc\t0x0e\t\t\t; Condition codes are irrelevent\n-\tenter      \t0x3fc\n-\ttest_cc\t1 1 1 0\n-\tinci_h_gr\t-4,r8\n-\ttestr_h_gr\tr14,r8\n-\ttestr_h_mem\tr9,r14\n-\tinci_h_gr\t-0x3f8,r8\n-\ttestr_h_gr \tr8,sp\n-\n-\tpass"
    },
    {
      "sha": "a87076151cfa105ad8c660fdd6b7b1b2a825dddd",
      "filename": "sim/testsuite/sim/fr30/eor.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 69,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eor.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eor.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/eor.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,69 +0,0 @@\n-# fr30 testcase for eor $Rj,$Ri, eor $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global eor\n-eor:\n-\t; Test eor $Rj,$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_gr   \t0x55555555,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\teor      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tmvi_h_gr   \t0x00000000,r7\n-\tmvi_h_gr   \t0x00000000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\teor\t\tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_gr   \t0xaaaaaaaa,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\teor      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tmvi_h_gr   \t0xdead0000,r7\n-\tmvi_h_gr   \t0x0000beef,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\teor\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_gr  \t0xdeadbeef,r8\n-\n-\t; Test eor $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\teor      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xffffffff,sp\n-\n-\tmvi_h_gr   \t0x00000000,r7\n-\tmvi_h_mem  \t0x00000000,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\teor\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x00000000,sp\n-\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0xaaaaaaaa,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\teor      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x00000000,sp\n-\n-\tmvi_h_gr   \t0xdead0000,r7\n-\tmvi_h_mem  \t0x0000beef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\teor\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "540f3f7aa1f5e4314ed1f1eebccbfab575933be4",
      "filename": "sim/testsuite/sim/fr30/eorb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eorb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eorb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/eorb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,40 +0,0 @@\n-# fr30 testcase for eorb $Rj,$Ri, eorb $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global eorb\n-eorb:\n-\t; Test eorb $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\teorb      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xff555555,sp\n-\n-\tmvi_h_gr   \t0xaaaaaa00,r7\n-\tmvi_h_mem  \t0x00555555,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\teorb\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x00555555,sp\n-\n-\tmvi_h_gr   \t0xaaaaaa55,r7\n-\tmvi_h_mem  \t0x55aaaaaa,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\teorb      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x00aaaaaa,sp\n-\n-\tmvi_h_gr   \t0x000000d0,r7\n-\tmvi_h_mem  \t0x0eadbeef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\teorb\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "7cf84735959769242bdaf1c8ea8fe266c558deeb",
      "filename": "sim/testsuite/sim/fr30/eorh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eorh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/eorh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/eorh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,40 +0,0 @@\n-# fr30 testcase for eorh $Rj,$Ri, eorh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global eorh\n-eorh:\n-\t; Test eorh $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\teorh      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xffff5555,sp\n-\n-\tmvi_h_gr   \t0xaaaa0000,r7\n-\tmvi_h_mem  \t0x00005555,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\teorh\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x00005555,sp\n-\n-\tmvi_h_gr   \t0xaaaa5555,r7\n-\tmvi_h_mem  \t0x5555aaaa,sp\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\teorh      \tr7,@sp\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem \t0x0000aaaa,sp\n-\n-\tmvi_h_gr   \t0x0000de00,r7\n-\tmvi_h_mem  \t0x00adbeef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\teorh\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "6a18d7e7daebebb6ae5ab1c9fa67c0356efa5d0f",
      "filename": "sim/testsuite/sim/fr30/extsb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extsb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extsb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/extsb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for extsb $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global extsb\n-extsb:\n-\t; Test extsb $Ri\n-\tmvi_h_gr   \t0,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\textsb      \tr7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_gr   \t0x7f,r7\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\textsb      \tr7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x7f,r7\n-\n- \tmvi_h_gr   \t0x80,r7\n-\tset_cc          0x0d\t\t; Condition codes are irrelevent\n-\textsb      \tr7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0xffffff80,r7\n-\n-\tmvi_h_gr   \t0xffffff7f,r7\n-\tset_cc          0x0c\t\t; Condition codes are irrelevent\n-\textsb      \tr7\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0x7f,r7\n-\n-\tpass"
    },
    {
      "sha": "eb12fd0aae84e144696cf28ec29de9cca3db302f",
      "filename": "sim/testsuite/sim/fr30/extsh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 48,
      "changes": 48,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extsh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extsh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/extsh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,48 +0,0 @@\n-# fr30 testcase for extsh $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global extsh\n-extsh:\n-\t; Test extsh $Ri\n-\tmvi_h_gr   \t0,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_gr   \t0x7f,r7\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x7f,r7\n-\n- \tmvi_h_gr   \t0x80,r7\n-\tset_cc          0x0d\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80,r7\n-\n- \tmvi_h_gr   \t0x7fff,r7\n-\tset_cc          0x0c\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0x7fff,r7\n-\n- \tmvi_h_gr   \t0x8000,r7\n-\tset_cc          0x0b\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xffff8000,r7\n-\n-\tmvi_h_gr   \t0xffff7fff,r7\n-\tset_cc          0x0a\t\t; Condition codes are irrelevent\n-\textsh      \tr7\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x7fff,r7\n-\n-\tpass"
    },
    {
      "sha": "ddcc68361ccbfe1b0b19336469ff25b12a2e2d53",
      "filename": "sim/testsuite/sim/fr30/extub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 42,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/extub.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,42 +0,0 @@\n-# fr30 testcase for extub $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global extub\n-extub:\n-\t; Test extub $Ri\n-\tmvi_h_gr   \t0,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\textub      \tr7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_gr   \t0x7f,r7\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\textub      \tr7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x7f,r7\n-\n- \tmvi_h_gr   \t0x80,r7\n-\tset_cc          0x0d\t\t; Condition codes are irrelevent\n-\textub      \tr7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80,r7\n-\n-\tmvi_h_gr   \t0xffffff7f,r7\n-\tset_cc          0x0c\t\t; Condition codes are irrelevent\n-\textub      \tr7\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0x7f,r7\n-\n-\tmvi_h_gr   \t0xffffff80,r7\n-\tset_cc          0x0b\t\t; Condition codes are irrelevent\n-\textub      \tr7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x80,r7\n-\n-\tpass"
    },
    {
      "sha": "fa2579e469ffc60cf45d64d2dc0a0ea3b262dc0e",
      "filename": "sim/testsuite/sim/fr30/extuh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 54,
      "changes": 54,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extuh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/extuh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/extuh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,54 +0,0 @@\n-# fr30 testcase for extuh $Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global extuh\n-extuh:\n-\t; Test extuh $Ri\n-\tmvi_h_gr   \t0,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_gr   \t0x7f,r7\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x7f,r7\n-\n- \tmvi_h_gr   \t0x80,r7\n-\tset_cc          0x0d\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80,r7\n-\n-\tmvi_h_gr   \t0x7fff,r7\n-\tset_cc          0x0e\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x7fff,r7\n-\n- \tmvi_h_gr   \t0x8000,r7\n-\tset_cc          0x0d\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x8000,r7\n-\n-\tmvi_h_gr   \t0xffff7fff,r7\n-\tset_cc          0x0c\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0x7fff,r7\n-\n-\tmvi_h_gr   \t0xffff8000,r7\n-\tset_cc          0x0b\t\t; Condition codes are irrelevent\n-\textuh      \tr7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x8000,r7\n-\n-\tpass"
    },
    {
      "sha": "0f208dfb9272b6c17ddcda1f60d307b406016bc5",
      "filename": "sim/testsuite/sim/fr30/hello.ms",
      "status": "removed",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/hello.ms",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/hello.ms",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/hello.ms?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,19 +0,0 @@\n-# mach: fr30\n-# output: Hello world!\\n\n-\n-\t.global _start\n-_start:\n-\n-; write (hello world)\n-\tldi32 #14,r6\n-\tldi32 #hello,r5\n-\tldi32 #1,r4\n-\tldi32 #5,r0\n-\tint   #10\n-; exit (0)\n-\tldi32 #0,r4\n-\tldi32 #1,r0\n-\tint   #10\n-\n-length:\t.long 14\n-hello:\t.ascii \"Hello world!\\r\\n\""
    },
    {
      "sha": "7cdca7b8c9b5be4987223ce77b34f3dfb3d1e2b4",
      "filename": "sim/testsuite/sim/fr30/int.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 35,
      "changes": 35,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/int.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/int.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/int.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,35 +0,0 @@\n-# fr30 testcase for int $u8\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global int\n-int:\n-\t; Test int $u8 - setup and test an interrupt #0xfd (randomly chosen)\n-\tmvr_h_gr   \ttbr,r7\n-\tinci_h_gr\t8,r7\n-\tmvi_h_mem\tpass,r7\n-\tmvi_h_gr\tdoint,r9\n-\tinci_h_gr\t2,r9\n-\tmvr_h_gr\tssp,r10\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tset_s_user\t\t\t; Set opposite of expected\n-\tset_i\t\t1\t\t; Set opposite of expected\n-\tmvr_h_gr\tps,r8\n-doint:\tint\t\t0xfd\n-\tfail\n-\n-pass:\n-\ttest_cc\t\t1 1 1 1\n-\ttest_s_system\n-\ttest_i\t\t0\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_mem\tr8,r10\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_mem\tr9,r10\n-\ttestr_h_dr\tr10,ssp\n-\n-\tpass"
    },
    {
      "sha": "a15bfd978a2867de4e34e34d7e7fb7f9a4fefb67",
      "filename": "sim/testsuite/sim/fr30/inte.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/inte.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/inte.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/inte.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for inte\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global inte\n-inte:\n-\t; Test inte which is essentially int #9\n-\tmvr_h_gr   \ttbr,r7\n-\tinci_h_gr\t0x3d8,r7\n-\tmvi_h_mem\tpass,r7\n-\tmvi_h_gr\tdoint,r9\n-\tinci_h_gr\t2,r9\n-\tmvr_h_gr\tssp,r10\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tset_s_user\t\t\t; Set opposite of expected\n-\tset_i\t\t1\t\t; Should not change\n-\tmvr_h_gr\tps,r8\n-doint:\tinte\n-\tfail\n-\n-pass:\n-\ttest_cc\t\t1 1 1 1\n-\ttest_ilm\t4\n-\ttest_s_system\n-\ttest_i\t\t1\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_mem\tr8,r10\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_mem\tr9,r10\n-\ttestr_h_dr\tr10,ssp\n-\n-\tpass"
    },
    {
      "sha": "db4af220d3669e5e8acdc0ebbb49e94a015bc260",
      "filename": "sim/testsuite/sim/fr30/jmp.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 29,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/jmp.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/jmp.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/jmp.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,29 +0,0 @@\n-# fr30 testcase for jmp @$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global jmp\n-\n-\t; Test jmp $Ri\n-\tmvi_h_gr   \t#func1,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-jmp1:\n-\tjmp\t\t@r0\n-\tfail\n-func1:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr   \t#func2,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-jmp2:\n-\tjmp:d\t\t@r0\n-\tldi:8\t\t1,r0\t\t; Must assume this works\n-\tfail\n-func2:\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\t1,r0\n-\n-\tpass"
    },
    {
      "sha": "3f2d30bb023e8d9dbc616c7de86777fddc454d3e",
      "filename": "sim/testsuite/sim/fr30/ld.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 219,
      "changes": 219,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ld.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ld.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ld.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,219 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-# ld $Rj,$Ri\n-# ld @($R13,$Rj),$Ri\n-# ld @($R14,$disp10),$Ri\n-# ld @($R15,$udisp6),$Ri\n-# ld @$R15+,$Ri\n-# ld @$R15+,$Rs\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ld\n-ld:\n-\t; Test ld $Rj,$Ri\n-\tmvi_h_mem\t#0x00000000,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x00000001,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tld    \t\t@sp,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fffffff,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tld\t\t@sp,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7fffffff,r7\n-\n-\tmvi_h_mem\t#0x80000000,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tld      \t@sp,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80000000,r7\n-\n-\tmvi_h_mem\t#0xffffffff,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tld\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t-1,r7\n-\n-\t; Test ld @($R13,$Rj),$Ri\n-\tmvr_h_gr\tsp,r13\n-\tinci_h_gr\t-8,r13\n-\tmvi_h_gr\t8,r8\n-\n-\tmvi_h_mem\t#0x00000000,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x00000001,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tld    \t\t@(r13,r8),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fffffff,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tld\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7fffffff,r7\n-\n-\tmvi_h_mem\t#0x80000000,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tld      \t@(r13,r8),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80000000,r7\n-\n-\tmvi_h_mem\t#0xffffffff,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tld\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t-1,r7\n-\n-\t; Test ld @($R14,$disp10),$Ri\n-\tmvi_h_mem\t#0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tmvi_h_gr\t-0x1fc,r8\n-\tadd_h_gr\tr8,r14\n-\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@(r14,0x1fc),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0xfc,r14\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tld    \t\t@(r14,0x100),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0x100,r14\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tld\t\t@(r14,0x0),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0x100,r14\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tld      \t@(r14,-0x100),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0x100,r14\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tld\t\t@(r14,-0x200),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\t; Test ld @($R15,$udisp6),$Ri\n-\tmvi_h_mem\t#0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tmvi_h_gr\t-0x3c,r8\n-\tadd_h_gr\tr8,r14\n-\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@(r14,0x3c),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0x1c,r14\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tld    \t\t@(r14,0x20),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\tinci_h_gr\t0x20,r14\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tld\t\t@(r14,0x0),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\n-\t; Test ld @$R15+,$Ri\n-\tmvr_h_gr\tsp,r8\t\t; save original stack pointer\n-\tmvr_h_gr\tr8,r9\n-\tinci_h_gr\t4,r9\t\t; original stack pointer + 4\n-\tmvi_h_mem\t#0xdeadbeef,sp\t; prime memory\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,r7\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdeadbeef,sp\t; should not have been incremented\n-\n-\t; Test ld @$R15+,$Rs\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,tbr\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,tbr\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,rp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,rp\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,mdh\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,mdh\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,mdl\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,mdl\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tset_s_user\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,ssp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,ssp\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,usp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,usp\n-\ttest_h_gr\t0xdeadbeef,sp\t; should not have been incremented\n-\n-\tset_s_system\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,usp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,usp\n-\ttestr_h_gr\tsp,r9\t\t; should have been incremented\n-\n-\tmvr_h_gr\tr8,sp\t\t; restore original stack pointer\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tld\t\t@r15+,ssp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_dr  \t0xdeadbeef,ssp\n-\ttest_h_gr\t0xdeadbeef,sp\t; should not have been incremented\n-\n-\tpass"
    },
    {
      "sha": "c7a4ef4165f71de442749a41a769b91fa89d2075",
      "filename": "sim/testsuite/sim/fr30/ldi20.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi20.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi20.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldi20.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,37 +0,0 @@\n-# fr30 testcase for ldi20 $i20,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldi20\n-ldi20:\n-\t; Test ldi20 $i20,$Ri\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldi20\t\t#0x00000000,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldi:20\t\t1,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldi20\t\t0x7ffff,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x0007ffff,r7\n-\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldi:20\t\t0x80000,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x00080000,r7\n-\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldi20\t\t0xfffff,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x000fffff,r7\n-\n-\tpass"
    },
    {
      "sha": "3e56db741e350311e2b466ca0f706e8f6be0d26f",
      "filename": "sim/testsuite/sim/fr30/ldi32.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi32.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi32.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldi32.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,37 +0,0 @@\n-# fr30 testcase for ldi32 $i32,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldi32\n-ldi32:\n-\t; Test ldi32 $i32,$Ri\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldi32\t\t#0x00000000,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldi:32\t\t1,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldi32\t\t0x7fffffff,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7fffffff,r7\n-\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldi:32\t\t0x80000000,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80000000,r7\n-\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldi32\t\t0xffffffff,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t-1,r7\n-\n-\tpass"
    },
    {
      "sha": "9b15edead0c3944aab9395f3c56b796d9268d0dd",
      "filename": "sim/testsuite/sim/fr30/ldi8.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi8.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldi8.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldi8.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,37 +0,0 @@\n-# fr30 testcase for ldi8 $i8,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldi8\n-ldi8:\n-\t; Test ldi8 $i8,$Ri\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldi8\t\t#0x00000000,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldi:20\t\t1,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldi8\t\t0x7f,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x0000007f,r7\n-\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldi:20\t\t0x80,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x00000080,r7\n-\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldi8\t\t0xff,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0x000000ff,r7\n-\n-\tpass"
    },
    {
      "sha": "9deb56425440451073622d90cd820b37047b55a2",
      "filename": "sim/testsuite/sim/fr30/ldm0.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 60,
      "changes": 60,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldm0.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldm0.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldm0.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,60 +0,0 @@\n-# fr30 testcase for ldm0 ($reglist_low)\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldm0\n-ldm0:\n-\t; Test ldm0 ($reglist_low)\n-\tmvr_h_gr\tsp,r9\t\t; save stack pointer permanently\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t3,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t2,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t1,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t0,sp\n-\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm0      \t(r0,r2,r4,r6)\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r9\n-\ttest_h_gr \t0,r0\n-\ttest_h_gr \t1,r2\n-\ttest_h_gr \t2,r4\n-\ttest_h_gr   \t3,r6\n-\n-\tinci_h_gr\t-16,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm0      \t(r1,r3,r5,r7)\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r9\n-\ttest_h_gr \t0,r1\n-\ttest_h_gr \t1,r3\n-\ttest_h_gr \t2,r5\n-\ttest_h_gr   \t3,r7\n-\n-\tinci_h_gr\t-16,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm0      \t(r1,r5,r7,r3)\t; Order speficied should not matter\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r9\n-\ttest_h_gr \t0,r1\n-\ttest_h_gr \t1,r3\n-\ttest_h_gr \t2,r5\n-\ttest_h_gr   \t3,r7\n-\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm0      \t()\t\t; Nothing should happen\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r9\n-\ttest_h_gr \t0,r1\n-\ttest_h_gr \t1,r3\n-\ttest_h_gr \t2,r5\n-\ttest_h_gr   \t3,r7\n-\n-\tpass"
    },
    {
      "sha": "33cfcdba770bf3e42f5757d27db43c1b6498ef3b",
      "filename": "sim/testsuite/sim/fr30/ldm1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 59,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldm1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldm1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldm1.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,59 +0,0 @@\n-# fr30 testcase for ldm1 ($reglist_low)\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldm1\n-ldm1:\n-\t; Test ldm1 ($reglist_low)\n-\tmvr_h_gr\tsp,r1\t\t; save stack pointer permanently\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t3,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t2,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t1,sp\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem  \t0,sp\n-\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm1      \t(r8,r10,r12,r14)\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r1\n-\ttest_h_gr \t0,r8\n-\ttest_h_gr \t1,r10\n-\ttest_h_gr \t2,r12\n-\ttest_h_gr   \t3,r14\n-\n-\tinci_h_gr\t-16,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm1      \t(r9,r11,r13,r15)\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr \t0,r9\n-\ttest_h_gr \t1,r11\n-\ttest_h_gr \t2,r13\n-\ttest_h_gr   \t3,r15\n-\n-\tmvr_h_gr\tr1,sp\t\t; restore stack pointer\n-\tinci_h_gr\t-16,sp\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm1      \t(r9,r13,r15,r11); Order speficied should not matter\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr \t0,r9\n-\ttest_h_gr \t1,r11\n-\ttest_h_gr \t2,r13\n-\ttest_h_gr   \t3,r15\n-\n-\tmvr_h_gr\tr1,sp\t\t; restore stack pointer\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tldm1      \t()\t\t; Nothing should happen\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tsp,r1\n-\ttest_h_gr \t0,r9\n-\ttest_h_gr \t1,r11\n-\ttest_h_gr \t2,r13\n-\n-\tpass"
    },
    {
      "sha": "008348992d2d332f9c29c1dfdc09413f3a2dd76c",
      "filename": "sim/testsuite/sim/fr30/ldres.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldres.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldres.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldres.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,25 +0,0 @@\n-# fr30 testcase for ldres $@Ri+,$u4\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldres\n-ldres:\n-\t; Test ldres $@Ri+,$u4\n-\t; The current implementation simply increments Ri\n-\tmvi_h_gr   \t0x1000,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tldres      \t@r7+,0\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x1004,r7\n-\n-\tmvi_h_gr   \t0x1000,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tldres      \t@r7+,0xf\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x1004,r7\n-\n-\tpass"
    },
    {
      "sha": "8d42cfa8595e17fb36110f932686a25949d59211",
      "filename": "sim/testsuite/sim/fr30/ldub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 115,
      "changes": 115,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ldub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ldub.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,115 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-#  ldub $Rj,$Ri\n-#  ldub @($R13,$Rj),$Ri\n-#  ldub @($R14,$disp8),$Ri\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ldub\n-ldub:\n-\t; Test ldub $Rj,$Ri\n-\tmvi_h_mem\t#0x00adbeef,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldub\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x01adbeef,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldub    \t@sp,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fadbeef,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldub\t\t@sp,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7f,r7\n-\n-\tmvi_h_mem\t#0x80adbeef,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldub      \t@sp,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80,r7\n-\n-\tmvi_h_mem\t#0xffadbeef,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldub\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xff,r7\n-\n-\t; Test ldub @($R13,$Rj),$Ri\n-\tmvr_h_gr\tsp,r13\n-\tinci_h_gr\t-8,r13\n-\tmvi_h_gr\t8,r8\n-\n-\tmvi_h_mem\t#0x00adbeef,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldub\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x01adbeef,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldub    \t@(r13,r8),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fadbeef,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldub\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7f,r7\n-\n-\tmvi_h_mem\t#0x80adbeef,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldub      \t@(r13,r8),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x80,r7\n-\n-\tmvi_h_mem\t#0xffadbeef,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldub\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xff,r7\n-\n-\t; Test ldub @($R14,$disp8),$Ri\n-\tmvi_h_mem\t#0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tmvi_h_gr\t-0x7f,r8\n-\tadd_h_gr\tr8,r14\n-\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tldub\t\t@(r14,0x7f),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xde,r7\n-\n-\tinci_h_gr\t0x3f,r14\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tldub    \t@(r14,0x40),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0xde,r7\n-\n-\tinci_h_gr\t0x40,r14\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tldub\t\t@(r14,0x0),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xde,r7\n-\n-\tinci_h_gr\t0x40,r14\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tldub      \t@(r14,-0x40),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0xde,r7\n-\n-\tinci_h_gr\t0x40,r14\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tldub\t\t@(r14,-0x80),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xde,r7\n-\n-\tpass"
    },
    {
      "sha": "7d36b75cbcc777522a28fecc6e014df5fc700cdc",
      "filename": "sim/testsuite/sim/fr30/lduh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 115,
      "changes": 115,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lduh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lduh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/lduh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,115 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-# lduh $Rj,$Ri\n-# lduh @($R13,$Rj),$Ri\n-# lduh @($R14,$disp9),$Ri\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global lduh\n-lduh:\n-\t; Test lduh $Rj,$Ri\n-\tmvi_h_mem\t#0x0000beef,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tlduh\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x0001beef,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tlduh    \t@sp,r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fffbeef,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tlduh\t\t@sp,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7fff,r7\n-\n-\tmvi_h_mem\t#0x8000beef,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tlduh      \t@sp,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x8000,r7\n-\n-\tmvi_h_mem\t#0xffffbeef,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tlduh\t\t@sp,r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xffff,r7\n-\n-\t; Test lduh @($R13,$Rj),$Ri\n-\tmvr_h_gr\tsp,r13\n-\tinci_h_gr\t-8,r13\n-\tmvi_h_gr\t8,r8\n-\n-\tmvi_h_mem\t#0x0000beef,sp\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tlduh\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0,r7\n-\n-\tmvi_h_mem\t#0x0001beef,sp\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tlduh    \t@(r13,r8),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmvi_h_mem\t#0x7fffbeef,sp\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tlduh\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0x7fff,r7\n-\n-\tmvi_h_mem\t#0x8000beef,sp\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tlduh      \t@(r13,r8),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x8000,r7\n-\n-\tmvi_h_mem\t#0xffffbeef,sp\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tlduh\t\t@(r13,r8),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xffff,r7\n-\n-\t; Test lduh @($R14,$disp9),$Ri\n-\tmvi_h_mem\t#0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tmvi_h_gr\t-0xfe,r8\n-\tadd_h_gr\tr8,r14\n-\n-\tset_cc          0x0f\t\t; condition codes should not change\n-\tlduh\t\t@(r14,0xfe),r7\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0xdead,r7\n-\n-\tinci_h_gr\t0x7e,r14\n-\tset_cc          0x07\t\t; condition codes should not change\n-\tlduh    \t@(r14,0x80),r7\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0xdead,r7\n-\n-\tinci_h_gr\t0x80,r14\n-\tset_cc          0x0b\t\t; condition codes should not change\n-\tlduh\t\t@(r14,0x0),r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xdead,r7\n-\n-\tinci_h_gr\t0x80,r14\n-\tset_cc          0x0d\t\t; condition codes should not change\n-\tlduh      \t@(r14,-0x80),r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0xdead,r7\n-\n-\tinci_h_gr\t0x80,r14\n-\tset_cc          0x0e\t\t; condition codes should not change\n-\tlduh\t\t@(r14,-0x100),r7\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t0xdead,r7\n-\n-\tpass"
    },
    {
      "sha": "4d3dd70100ef07ad25a3b8ffa27d41e44d8a0aca",
      "filename": "sim/testsuite/sim/fr30/leave.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/leave.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/leave.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/leave.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,23 +0,0 @@\n-# fr30 testcase for leave\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global leave\n-leave:\n-\t; Test leave $u10\n-\tmvr_h_gr\tsp,r7\t\t\t; save Stack pointer\n-\tmvr_h_gr\tsp,r14\n-\tinci_h_gr\t-4,r14\n-\tmvi_h_mem\t0xdeadbeef,r14\n-\tmvi_h_gr\t0xbeefdead,r15\n-\tset_cc\t0x0f\t\t\t; Condition codes are irrelevent\n-\tleave\n-\ttest_cc\t1 1 1 1\n-\ttestr_h_gr\tsp,r7\n-\ttest_h_gr\t0xdeadbeef,r14\n-\n-\tpass"
    },
    {
      "sha": "ead749fbbb52f6ef2d036bd059e92d338328cb69",
      "filename": "sim/testsuite/sim/fr30/lsl.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsl.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsl.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/lsl.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,65 +0,0 @@\n-# fr30 testcase for lsl $Rj,$Ri, lsl $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global lsl\n-lsl:\n-\t; Test lsl $Rj,$Ri\n-\tmvi_h_gr   \t0xdeadbee0,r7\t; Shift by 0\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tlsl      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t2,r8\n-\n-\tmvi_h_gr   \t0xdeadbee1,r7\t; Shift by 1\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsl      \tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t4,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; Shift by 31\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tlsl      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; clear register\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsl      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\t; Test lsl $u4Ri\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tlsl      \t0,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t2,r8\n-\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsl      \t1,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t4,r8\n-\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tlsl      \t15,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x00008000,r8\n-\n-\tmvi_h_gr   \t0x00020000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsl      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "58acf84ef2cbb9aff302283bafe8f2845c878c12",
      "filename": "sim/testsuite/sim/fr30/lsl2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsl2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsl2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/lsl2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for lsl2 $Rj,$Ri, lsl2 $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global lsl2\n-lsl2:\n-\t; Test lsl2 $u4Ri\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tlsl2      \t0,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t0x20000,r8\n-\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsl2      \t1,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x40000,r8\n-\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tlsl2      \t15,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsl2      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "5b9587fe71f6fee845f5af9b122f6983c9f3f514",
      "filename": "sim/testsuite/sim/fr30/lsr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 65,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/lsr.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,65 +0,0 @@\n-# fr30 testcase for lsr $Rj,$Ri, lsr $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global lsr\n-lsr:\n-\t; Test lsr $Rj,$Ri\n-\tmvi_h_gr   \t0xdeadbee0,r7\t; Shift by 0\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tlsr      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0xdeadbee1,r7\t; Shift by 1\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsr      \tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x40000000,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; Shift by 31\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsr      \tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t0xdeadbeff,r7\t; clear register\n-\tmvi_h_gr   \t0x40000000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsr      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\t; Test lsr $u4Ri\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tlsr      \t0,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_gr  \t0x80000000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsr      \t1,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x40000000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tlsr      \t15,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x00010000,r8\n-\n-\tmvi_h_gr   \t0x00004000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsr      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "fd6ceaa9ff74527849fa54e9140f9cbc9c197b6f",
      "filename": "sim/testsuite/sim/fr30/lsr2.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsr2.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/lsr2.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/lsr2.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for lsr2 $u4,$Rj\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global lsr2\n-lsr2:\n-\t; Test lsr2 $u4Ri\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tlsr2      \t0,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t0x00008000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tlsr2      \t1,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x00004000,r8\n-\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tlsr2      \t15,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t0x40000000,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tlsr2      \t15,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tpass"
    },
    {
      "sha": "da1490dd9e43c77518f3e9d3733f255b60ee10b3",
      "filename": "sim/testsuite/sim/fr30/misc.exp",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/misc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/misc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/misc.exp?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,20 +0,0 @@\n-# Miscellaneous FR30 simulator testcases\n-\n-if [istarget fr30*-*-*] {\n-    # load support procs\n-    # load_lib cgen.exp\n-\n-    # all machines\n-    set all_machs \"fr30\"\n-\n-    # The .ms suffix is for \"miscellaneous .s\".\n-    foreach src [lsort [glob -nocomplain $srcdir/$subdir/*.ms]] {\n-\t# If we're only testing specific files and this isn't one of them,\n-\t# skip it.\n-\tif ![runtest_file_p $runtests $src] {\n-\t    continue\n-\t}\n-\n-\trun_sim_test $src $all_machs\n-    }\n-}"
    },
    {
      "sha": "bf99252f06196ad72c0d02e583159e0bda39f31c",
      "filename": "sim/testsuite/sim/fr30/mov.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 108,
      "changes": 108,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mov.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mov.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/mov.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,108 +0,0 @@\n-# fr30 testcase for mov $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global mov\n-mov:\n-\t; Test mov $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_dr   \t0xa,tbr\n-\tmvi_h_dr   \t0xb,rp\n-\tmvi_h_dr   \t0xc,mdh\n-\tmvi_h_dr   \t0xd,mdl\n-\tmvr_h_gr        sp,ssp\n-\tmvr_h_gr\tsp,usp\n-\n-\tmov\t\tr7,r7\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t1,r7\n-\n-\tmov\t\tr7,r8\n-\tset_cc          0x0e\t\t; Condition codes should not change\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_gr  \t1,r7\n-\ttest_h_gr  \t1,r8\n-\n-\t; Test mov $Rs,$Ri\n-\tset_cc          0x0d\t\t; Condition codes should not change\n-\tmov\t\ttbr,r7\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0xa,r7\n-\n-\tset_cc          0x0c\t\t; Condition codes should not change\n-\tmov\t\trp,r7\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_gr  \t0xb,r7\n-\n-\tset_cc          0x0b\t\t; Condition codes should not change\n-\tmov\t\tmdh,r7\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xc,r7\n-\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tmov\t\tmdl,r7\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_gr  \t0xd,r7\n-\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tmov\t\tusp,r7\n-\ttest_cc\t\t1 0 0 1\n-\ttestr_h_gr  \tsp,r7\n-\n-\tset_cc          0x08\t\t; Condition codes should not change\n-\tmov\t\tssp,r7\n-\ttest_cc\t\t1 0 0 0\n-\ttestr_h_gr  \tsp,r7\n-\n-\t; Test mov $Ri,$Rs\n-\tset_cc          0x07\t\t; Condition codes should not change\n-\tmov\t\tr8,tbr\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x1,tbr\n-\n-\tset_cc          0x06\t\t; Condition codes should not change\n-\tmov\t\tr8,rp\n-\ttest_cc\t\t0 1 1 0\n-\ttest_h_dr  \t0x1,rp\n-\n-\tset_cc          0x05\t\t; Condition codes should not change\n-\tmov\t\tr8,mdh\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0x1,mdh\n-\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tmov\t\tr8,mdl\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0x1,mdl\n-\n-\tset_cc          0x03\t\t; Condition codes should not change\n-\tmov\t\tr8,ssp\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0x1,ssp\n-\n-\tset_cc          0x02\t\t; Condition codes should not change\n-\tmov\t\tr8,usp\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_dr  \t0x1,usp\n-\n-\t; Test mov $PS,$Ri\n-\tset_cc          0x01\t\t; Condition codes affect result\n-\tset_dbits\t0x3\n-\tmov\t\tps,r7\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_gr  \t0x00000601,r7\n-\n-\t; Test mov $Ri,PS\n-\tset_cc          0x01\t\t; Set opposite of expected\n-\tset_dbits\t0x1\t\t; Set opposite of expected\n-\tmvi_h_gr\t0x0000040e,r7\n-\tmov\t\tr7,PS\n-\ttest_cc\t\t1 1 1 0\n-\ttest_dbits\t0x2\n-\n-\tpass"
    },
    {
      "sha": "f7cbf58e50e4e74849520be33676873dced2396f",
      "filename": "sim/testsuite/sim/fr30/mul.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 240,
      "changes": 240,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mul.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mul.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/mul.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,240 +0,0 @@\n-# fr30 testcase for mul $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global mul\n-mul:\n-\t; Test mul $Rj,$Ri\n-\t; Positive operands\n-\tmvi_h_gr   \t3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t2,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0x3fffffff,r7\t; 31 bit result\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x7ffffffe,mdl\n-\n-\tmvi_h_gr   \t0x40000000,r7\t; 32 bit result\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x80000000,mdl\n-\n-\tmvi_h_gr   \t0x40000000,r7\t; 33 bit result\n-\tmvi_h_gr   \t4,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t1,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\t; max positive result\n-\tmvi_h_gr   \t0x7fffffff,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0x3fffffff,mdh\n-\ttest_h_dr  \t0x00000001,mdl\n-\n-\t; Mixed operands\n-\tmvi_h_gr   \t-3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-1,mdh\n-\ttest_h_dr  \t-6,mdl\n-\n-\tmvi_h_gr   \t3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-1,mdh\n-\ttest_h_dr  \t-6,mdl\n-\n-\tmvi_h_gr   \t1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_dr  \t-1,mdh\n-\ttest_h_dr  \t-2,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-1,mdh\n-\ttest_h_dr  \t-2,mdl\n-\n-\tmvi_h_gr   \t0,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0x20000001,r7\t; 31 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0xbffffffe,mdl\n-\n-\tmvi_h_gr   \t0x40000000,r7\t; 32 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0x80000000,mdl\n-\n-\tmvi_h_gr   \t0x40000001,r7\t; 32 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0c\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0x7ffffffe,mdl\n-\n-\tmvi_h_gr   \t0x40000000,r7\t; 33 bit result\n-\tmvi_h_gr   \t-4,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0xffffffff,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\t; max negative result\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_dr  \t0xc0000000,mdh\n-\ttest_h_dr  \t0x80000000,mdl\n-\n-\t; Negative operands\n-\tmvi_h_gr   \t-3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t-1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-1,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xc0000001,r7\t; 31 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x7ffffffe,mdl\n-\n-\tmvi_h_gr   \t0xc0000000,r7\t; 32 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x80000000,mdl\n-\n-\tmvi_h_gr   \t0xc0000000,r7\t; 33 bit result\n-\tmvi_h_gr   \t-4,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t1,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tmvi_h_gr   \t0x80000001,r7\t; almost max positive result\n-\tmvi_h_gr   \t0x80000001,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0x3fffffff,mdh\n-\ttest_h_dr  \t0x00000001,mdl\n-\n-\n-\tmvi_h_gr   \t0x80000000,r7\t; max positive result\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmul      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0x40000000,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tpass"
    },
    {
      "sha": "1421f07b31a187947c521b76cff148251f7cbd08",
      "filename": "sim/testsuite/sim/fr30/mulh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 211,
      "changes": 211,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mulh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mulh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/mulh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,211 +0,0 @@\n-# fr30 testcase for mulh $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global mulh\n-mulh:\n-\t; Test mulh $Rj,$Ri\n-\t; Positive operands\n-\tmvi_h_gr   \t0xdead0003,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t0xdead0001,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xdead0002,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t0xbeef0001,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xdead0000,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0xdead0002,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0xbeef0000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0xdead3fff,r7\t; 15 bit result\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0x00007ffe,mdl\n-\n-\tmvi_h_gr   \t0xdead4000,r7\t; 16 bit result\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 0\n-\ttest_h_dr  \t0x00008000,mdl\n-\n-\tmvi_h_gr   \t0xdead4000,r7\t; 17 bit result\n-\tmvi_h_gr   \t0xbeef0004,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x00010000,mdl\n-\n-\tmvi_h_gr   \t0xdead7fff,r7\t; max positive result\n-\tmvi_h_gr   \t0xbeef7fff,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x3fff0001,mdl\n-\n-\t; Mixed operands\n-\tmvi_h_gr   \t-3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-6,mdl\n-\n-\tmvi_h_gr   \t3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-6,mdl\n-\n-\tmvi_h_gr   \t1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_dr  \t-2,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t-2,mdl\n-\n-\tmvi_h_gr   \t0,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0xdead2001,r7\t; 15 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_dr  \t0xffffbffe,mdl\n-\n-\tmvi_h_gr   \t0xdead4000,r7\t; 16 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x04\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_dr  \t0xffff8000,mdl\n-\n-\tmvi_h_gr   \t0xdead4001,r7\t; 16 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_dr  \t0xffff7ffe,mdl\n-\n-\tmvi_h_gr   \t0xdead4000,r7\t; 17 bit result\n-\tmvi_h_gr   \t-4,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_dr  \t0xffff0000,mdl\n-\n-\tmvi_h_gr   \t0xdead7fff,r7\t; max negative result\n-\tmvi_h_gr   \t0xbeef8000,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_dr  \t0xc0008000,mdl\n-\n-\t; Negative operands\n-\tmvi_h_gr   \t-3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t-1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t-2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t-1,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xdeadc001,r7\t; 15 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0x00007ffe,mdl\n-\n-\tmvi_h_gr   \t0xdeadc000,r7\t; 16 bit result\n-\tmvi_h_gr   \t-2,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 0\n-\ttest_h_dr  \t0x00008000,mdl\n-\n-\tmvi_h_gr   \t0xdeadc000,r7\t; 17 bit result\n-\tmvi_h_gr   \t-4,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x00010000,mdl\n-\n-\tmvi_h_gr   \t0xdead8001,r7\t; almost max positive result\n-\tmvi_h_gr   \t0xbeef8001,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x3fff0001,mdl\n-\n-\tmvi_h_gr   \t0xdead8000,r7\t; max positive result\n-\tmvi_h_gr   \t0xbeef8000,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x40000000,mdl\n-\n-\tpass"
    },
    {
      "sha": "477583b224d29cbc8d9a87208f16980660a18bf4",
      "filename": "sim/testsuite/sim/fr30/mulu.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 101,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mulu.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/mulu.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/mulu.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,101 +0,0 @@\n-# fr30 testcase for mulu $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global mulu\n-mulu:\n-\t; Test mulu $Rj,$Ri\n-\t; Positive operands\n-\tmvi_h_gr   \t3,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t1,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t2,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t1,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t2,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0,r8\n-\tset_cc          0x0a\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0x3fffffff,r7\t; 31 bit result\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x7ffffffe,mdl\n-\n-\tmvi_h_gr   \t0x40000000,r7\t; 32 bit result\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_dr  \t0,mdh\n-\ttest_h_dr  \t0x80000000,mdl\n-\n-\tmvi_h_gr   \t0x80000000,r7\t; 33 bit result\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t1,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tmvi_h_gr   \t0x7fffffff,r7\t; max positive result\n-\tmvi_h_gr   \t0x7fffffff,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_dr  \t0x3fffffff,mdh\n-\ttest_h_dr  \t0x00000001,mdl\n-\n-\tmvi_h_gr   \t0x80000000,r7\t; max positive result\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x40000000,mdh\n-\ttest_h_dr  \t0x00000000,mdl\n-\n-\tmvi_h_gr   \t0xffffffff,r7\t; max positive result\n-\tmvi_h_gr   \t0xffffffff,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tmulu      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_dr  \t0xfffffffe,mdh\n-\ttest_h_dr  \t0x00000001,mdl\n-\n-\tpass"
    },
    {
      "sha": "b0c847e1b9744f6c80081b0a0e0a02e17699a1dc",
      "filename": "sim/testsuite/sim/fr30/muluh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 90,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/muluh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/muluh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/muluh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,90 +0,0 @@\n-# fr30 testcase for muluh $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global muluh\n-muluh:\n-\t; Test muluh $Rj,$Ri\n-\t; Positive operands\n-\tmvi_h_gr   \t0xdead0003,r7\t\t; multiply small numbers\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t6,mdl\n-\n-\tmvi_h_gr   \t0xdead0001,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xdead0002,r7\t\t; multiply by 1\n-\tmvi_h_gr   \t0xbeef0001,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t2,mdl\n-\n-\tmvi_h_gr   \t0xdead0000,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0xdead0002,r7\t\t; multiply by 0\n-\tmvi_h_gr   \t0xbeef0000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0,mdl\n-\n-\tmvi_h_gr   \t0xdead3fff,r7\t; 15 bit result\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x09\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_dr  \t0x00007ffe,mdl\n-\n-\tmvi_h_gr   \t0xdead4000,r7\t; 16 bit result\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_dr  \t0x00008000,mdl\n-\n-\tmvi_h_gr   \t0xdead8000,r7\t; 17 bit result\n-\tmvi_h_gr   \t0xbeef0002,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x00010000,mdl\n-\n-\tmvi_h_gr   \t0xdead7fff,r7\t; max positive result\n-\tmvi_h_gr   \t0xbeef7fff,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x3fff0001,mdl\n-\n-\tmvi_h_gr   \t0xdead8000,r7\t; max positive result\n-\tmvi_h_gr   \t0xbeef8000,r8\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_dr  \t0x40000000,mdl\n-\n-\tmvi_h_gr   \t0xdeadffff,r7\t; max positive result\n-\tmvi_h_gr   \t0xbeefffff,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tmuluh      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_dr  \t0xfffe0001,mdl\n-\n-\tpass"
    },
    {
      "sha": "885c55cfd1abc0acc1ff25969b8c0e5e60f27dab",
      "filename": "sim/testsuite/sim/fr30/nop.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 16,
      "changes": 16,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/nop.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/nop.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/nop.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,16 +0,0 @@\n-# fr30 testcase for nop\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global nop\n-nop:\n-\t; Test nop\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tnop\n-\ttest_cc\t\t1 1 1 1\n-\n-\tpass"
    },
    {
      "sha": "8acb97020007e10ebc13865d0e3806d49829ddec",
      "filename": "sim/testsuite/sim/fr30/or.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 55,
      "changes": 55,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/or.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/or.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/or.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,55 +0,0 @@\n-# fr30 testcase for or $Rj,$Ri, or $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global or\n-or:\n-\t; Test or $Rj,$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_gr   \t0x55555555,r8\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tor      \tr7,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tmvi_h_gr   \t0x00000000,r7\n-\tmvi_h_gr   \t0x00000000,r8\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tor\t\tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_gr  \t0x00000000,r8\n-\n-\tmvi_h_gr   \t0xdead0000,r7\n-\tmvi_h_gr   \t0x0000beef,r8\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tor\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_gr  \t0xdeadbeef,r8\n-\n-\t; Test or $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\tor      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xffffffff,sp\n-\n-\tmvi_h_gr   \t0x00000000,r7\n-\tmvi_h_mem  \t0x00000000,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\tor\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x00000000,sp\n-\n-\tmvi_h_gr   \t0xdead0000,r7\n-\tmvi_h_mem  \t0x0000beef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\tor\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "a7b36bf5284705a118dba00e4b6e33275927fec2",
      "filename": "sim/testsuite/sim/fr30/orb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/orb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,33 +0,0 @@\n-# fr30 testcase for orb $Rj,$Ri, orb $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global orb\n-orb:\n-\t; Test orb $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\torb      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xff555555,sp\n-\n-\tmvi_h_gr   \t0xffffff00,r7\n-\tmvi_h_mem  \t0x00ffffff,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\torb\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x00ffffff,sp\n-\n-\tmvi_h_gr   \t0x000000d0,r7\n-\tmvi_h_mem  \t0x0eadbeef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\torb\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "3bc55a845705efe1dd8be4fd5befe24613cca32a",
      "filename": "sim/testsuite/sim/fr30/orccr.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 38,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orccr.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orccr.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/orccr.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,38 +0,0 @@\n-# fr30 testcase for orccr $u8\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global orccr\n-orccr:\n-\torccr      \t0xff\n-\ttest_cc\t\t1 1 1 1\n-\ttest_i\t\t1\n-\ttest_s_user\n-\n-\tset_cc\t0x0f\n-\torccr      \t0x00\n-\ttest_cc\t\t1 1 1 1\n-\ttest_i\t\t1\n-\ttest_s_user\n-\n-\tset_cc\t\t0x00\n-\tset_i\t\t\t0\n-\tset_s_system\n-\torccr      \t0xaa\n-\ttest_cc\t\t1 0 1 0\n-\ttest_i\t\t0\n-\ttest_s_user\n-\n-\tset_cc\t\t0x00\n-\tset_i\t\t\t0\n-\tset_s_system\n-\torccr      \t0xc0\n-\ttest_cc\t\t0 0 0 0\n-\ttest_i\t\t0\n-\ttest_s_system\n-\n-\tpass"
    },
    {
      "sha": "b30b4028e8532241df7ca4bbfab36c7dd2d72342",
      "filename": "sim/testsuite/sim/fr30/orh.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 33,
      "changes": 33,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orh.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/orh.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/orh.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,33 +0,0 @@\n-# fr30 testcase for orh $Rj,$Ri, orh $Rj,@$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global orh\n-orh:\n-\t; Test orh $Rj,@$Ri\n-\tmvi_h_gr   \t0xaaaaaaaa,r7\n-\tmvi_h_mem  \t0x55555555,sp\n-\tset_cc          0x07\t\t; Set mask opposite of expected\n-\torh      \tr7,@sp\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem \t0xffff5555,sp\n-\n-\tmvi_h_gr   \t0xffff0000,r7\n-\tmvi_h_mem  \t0x0000ffff,sp\n-\tset_cc          0x08\t\t; Set mask opposite of expected\n-\torh\t\tr7,@sp\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem \t0x0000ffff,sp\n-\n-\tmvi_h_gr   \t0x0000de00,r7\n-\tmvi_h_mem  \t0x00adbeef,sp\n-\tset_cc          0x05\t\t; Set mask opposite of expected\n-\torh\t\tr7,@sp\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem \t0xdeadbeef,sp\n-\n-\tpass"
    },
    {
      "sha": "7bfa0b230f9c8dde4e51ebee4f37670acccba481",
      "filename": "sim/testsuite/sim/fr30/ret.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 75,
      "changes": 75,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ret.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/ret.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/ret.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,75 +0,0 @@\n-# fr30 testcase for ret\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global ret\n-\n-\t; Test ret\n-\tmvi_h_gr\t0xdeadbeef,r9\n-\tmvi_h_gr   \t#func1,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call1:\n-\tcall\t\t@r0\n-\ttestr_h_gr\t2,r0\n-\ttest_h_gr\t0xbeefdead,r9\n-\tpass\n-\n-func1:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call1,r7\n-\tinci_h_gr\t2,r7\n-\ttestr_h_dr\tr7,rp\n-\tsave_rp\n-\n-\tmvi_h_gr   \t#func2,r0\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call2:\n-\tcall:d\t\t@r0\n-\tldi:8\t\t1,r0\t\t; Must assume this works\n-\ttestr_h_gr\t2,r0\n-\trestore_rp\n-\tret\n-func2:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call2,r7\n-\tinci_h_gr\t4,r7\n-\ttestr_h_dr\tr7,rp\n-\ttestr_h_gr\t1,r0\n-\tsave_rp\n-\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call3:\n-\tcall\t\tfunc3\n-\ttestr_h_gr\t2,r0\n-\trestore_rp\n-\tret\n-func3:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call3,r7\n-\tinci_h_gr\t2,r7\n-\ttestr_h_dr\tr7,rp\n-\tsave_rp\n-\n-\tset_cc          0x0f\t\t; condition codes shouldn't change\n-call4:\n-\tcall:d\t\tfunc4\n-\tldi:8\t\t1,r0\t\t; Must assume this works\n-\ttestr_h_gr\t3,r0\n-\trestore_rp\n-\tret:d\n-\tldi:8\t\t2,r0\t\t; Must assume this works\n-func4:\n-\ttest_cc\t\t1 1 1 1\n-\tmvi_h_gr\t#call4,r7\n-\tinci_h_gr\t4,r7\n-\ttestr_h_dr\tr7,rp\n-\ttestr_h_gr\t1,r0\n-\tmvi_h_gr\t0xbeefdead,r9\n-\tret:d\n-\tldi:8\t\t3,r0\t\t; Must assume this works\n-\n-\tfail"
    },
    {
      "sha": "76a1af0bb82a467c02e3b1b161b0bf4477b0b1e4",
      "filename": "sim/testsuite/sim/fr30/reti.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 57,
      "changes": 57,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/reti.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/reti.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/reti.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,57 +0,0 @@\n-# fr30 testcase for reti\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global reti\n-reti:\n-\t; Test reti with low reset of ilm allowed\n-\tmvr_h_gr\tsp,r8\t\t; Save stack pointer\n-\tset_s_system\n-\tset_i\t\t1\n-\tset_ilm\t\t15\t\t; attempt reset of low range\t \n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tsave_ps\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem\tret1,sp\n-\tset_i\t\t0\t\t; Set opposite of expected\n-\tset_ilm\t\t0 \t\t; attempt reset of low range\t \n-\tset_cc          0x00\t\t; Set opposite of expected\n-\n-\treti\n-\tfail\n-\n-ret1:\n-\ttest_cc\t\t1 1 1 1\n-\ttest_s_system\n-\ttest_i\t\t1\n-\ttest_ilm\t15\n-\ttestr_h_gr\tr8,sp\n-\n-\t; Test reti with low reset of ilm not allowed\n-\tmvr_h_gr\tsp,r8\t\t; Save stack pointer\n-\tset_s_system\n-\tset_i\t\t0\n-\tset_ilm\t\t15\t\t; attempt reset of low range\t \n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tsave_ps\n-\tinci_h_gr\t-4,sp\n-\tmvi_h_mem\tret2,sp\n-\tset_i\t\t0\t\t; Set opposite of expected\n-\tset_ilm\t\t16 \t\t; disallow reset of low range\n-\tset_cc          0x00\t\t; Set opposite of expected\n-\n-\treti\n-\tfail\n-\n-ret2:\n-\ttest_cc\t\t1 1 1 1\n-\ttest_s_system\n-\ttest_i\t\t0\n-\ttest_ilm\t31\n-\ttestr_h_gr\tr8,sp\n-\n-\tpass"
    },
    {
      "sha": "e458d14001b4413991e2acd53fc3b1fbb522ab95",
      "filename": "sim/testsuite/sim/fr30/st.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 194,
      "changes": 194,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/st.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/st.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/st.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,194 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-#  st $Ri,@$Rj\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global st\n-st:\n-\tmvr_h_gr\tsp,r9\t\t; Save stack pointer\n-\t; Test st $Ri,@Rj\n-\tmvi_h_gr\t0xdeadbeef,r8\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tst      \tr8,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem\t0xdeadbeef,sp\n-\ttest_h_gr\t0xdeadbeef,r8\n-\n-\t; Test st $Ri,@(R13,Rj)\n-\tmvi_h_gr\t0xbeefdead,r8\n-\tmvr_h_gr\tsp,r1\n-\tinci_h_gr\t-8,sp\n-\tmvr_h_gr\tsp,r2\n-\tinci_h_gr\t4,sp\n-\n-\tmvi_h_gr\t4,r13\n-\tset_cc          0x0e\t\t; Condition codes should not change\n-\tst      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xbeefdead,r1\n-\ttest_h_gr\t0xbeefdead,r8\n-\n-\tmvi_h_gr\t0,r13\n-\tset_cc          0x0d\t\t; Condition codes should not change\n-\tst      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_mem\t0xbeefdead,sp\n-\ttest_h_gr\t0xbeefdead,r8\n-\n-\tmvi_h_gr\t-4,r13\n-\tset_cc          0x0c\t\t; Condition codes should not change\n-\tst      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_mem\t0xbeefdead,r2\n-\ttest_h_gr\t0xbeefdead,r8\n-\n-\t; Test st $Ri,@(R14,$disp10)\n-\tmvi_h_gr\t0xdeadbeef,r8\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvr_h_gr\tsp,r14\n-\tinci_h_gr\t-508,r14\n-\tmvr_h_gr\tr14,r2\n-\tinci_h_gr\t-512,r14\n-\tmvr_h_gr\tr14,r3\n-\tinci_h_gr\t512,r14\n-\n-\tset_cc          0x0b\t\t; Condition codes should not change\n-\tst      \tr8,@(r14,508)\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem\t0xdeadbeef,r1\n-\ttest_h_gr\t0xdeadbeef,r8\n-\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tst      \tr8,@(r14,0)\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem\t0xdeadbeef,r2\n-\ttest_h_gr\t0xdeadbeef,r8\n-\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tst      \tr8,@(r14,-512)\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem\t0xdeadbeef,r3\n-\ttest_h_gr\t0xdeadbeef,r8\n-\n-\t; Test st $Ri,@(R15,$udisp6)\n-\tmvi_h_gr\t0xbeefdead,r8\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tinci_h_gr\t-60,sp\n-\n-\tset_cc          0x08\t\t; Condition codes should not change\n-\tst      \tr8,@(r15,60)\n-\ttest_cc\t\t1 0 0 0\n-\ttest_h_mem\t0xbeefdead,r9\n-\ttest_h_gr\t0xbeefdead,r8\n-\n-\tset_cc          0x07\t\t; Condition codes should not change\n-\tst      \tr8,@(r15,0)\n-\ttest_cc\t\t0 1 1 1\n-\ttest_h_mem\t0xbeefdead,r9\n-\ttest_h_gr\t0xbeefdead,r8\n-\n-\t; Test st $Ri,@-R15\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvr_h_gr\tr9,r10\n-\n-\tset_cc          0x06\t\t; Condition codes should not change\n-\tst      \tr15,@-r15\n-\ttest_cc\t\t0 1 1 0\n-\ttestr_h_mem\tr9,sp\t\t; original value stored\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tmvi_h_gr\t0xdeadbeef,r8\n-\tset_cc          0x05\t\t; Condition codes should not change\n-\tst      \tr8,@-r15\n-\ttest_cc\t\t0 1 0 1\n-\ttest_h_mem\t0xdeadbeef,sp\n-\ttest_h_gr\t0xdeadbeef,r8\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\t; Test st $Rs,@-R15\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvr_h_gr\tr9,r10\n-\tmvi_h_dr\t0xbeefdead,tbr\n-\tmvi_h_dr\t0xdeadbeef,rp\n-\tmvi_h_dr\t0x0000dead,mdh\n-\tmvi_h_dr\t0xbeef0000,mdl\n-\n-\tset_cc          0x04\t\t; Condition codes should not change\n-\tst      \ttbr,@-r15\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_mem\t0xbeefdead,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tset_cc          0x03\t\t; Condition codes should not change\n-\tst      \trp,@-r15\n-\ttest_cc\t\t0 0 1 1\n-\ttest_h_mem\t0xdeadbeef,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tset_cc          0x02\t\t; Condition codes should not change\n-\tst      \tmdh,@-r15\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_mem\t0x0000dead,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tset_cc          0x01\t\t; Condition codes should not change\n-\tst      \tmdl,@-r15\n-\ttest_cc\t\t0 0 0 1\n-\ttest_h_mem\t0xbeef0000,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tmvr_h_gr\tsp,usp\n-\tset_s_user\n-\tset_cc          0x00\t\t; Condition codes should not change\n-\tst      \tssp,@-r15\n-\ttest_cc\t\t0 0 0 0\n-\ttestr_h_mem\tr10,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tset_cc          0x00\t\t; Condition codes should not change\n-\tst      \tusp,@-r15\n-\ttest_cc\t\t0 0 0 0\n-\ttestr_h_mem\tr10,sp\t\t; original value stored\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tmvr_h_gr\tsp,ssp\n-\tset_s_system\n-\tset_cc          0x00\t\t; Condition codes should not change\n-\tst      \tusp,@-r15\n-\ttest_cc\t\t0 0 0 0\n-\ttestr_h_mem\tr10,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tset_cc          0x00\t\t; Condition codes should not change\n-\tst      \tssp,@-r15\n-\ttest_cc\t\t0 0 0 0\n-\ttestr_h_mem\tr10,sp\t\t; original value stored\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\t; Test st $PS,@-R15\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvr_h_gr\tr9,r10\n-\n-\tset_cc          0x0f\t\t; Condition codes affect result\n-\tset_dbits\t3\t\t; Division bits affect result\n-\tst      \tps,@-r15\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem\t0x0000060f,sp\n-\tinci_h_gr\t-4,r10\n-\ttestr_h_gr\tr10,sp\t\t; was decremented\n-\n-\tpass"
    },
    {
      "sha": "edbf4f22c7ea5e554f179e947e419367a4003755",
      "filename": "sim/testsuite/sim/fr30/stb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 84,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/stb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,84 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-#  stb $Ri,@$Rj\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global stb\n-stb:\n-\tmvr_h_gr\tsp,r9\t\t; Save stack pointer\n-\t; Test stb $Ri,@Rj\n-\tmvi_h_mem\t0xdeadbeef,sp\n-\tmvi_h_gr\t0xaaaaaafe,r8\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstb      \tr8,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem\t0xfeadbeef,sp\n-\ttest_h_gr\t0xaaaaaafe,r8\n-\n-\t; Test stb $Ri,@(R13,Rj)\n-\tmvi_h_mem\t0xbeefdead,sp\n-\tmvi_h_gr\t0xaaaaaade,r8\n-\tmvr_h_gr\tsp,r1\n-\tinci_h_gr\t-8,sp\n-\tmvr_h_gr\tsp,r2\n-\tmvi_h_mem\t0xbeefdead,sp\n-\tinci_h_gr\t4,sp\n-\tmvi_h_mem\t0xbeefdead,sp\n-\n-\tmvi_h_gr\t4,r13\n-\tset_cc          0x0e\t\t; Condition codes should not change\n-\tstb      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xdeefdead,r1\n-\ttest_h_gr\t0xaaaaaade,r8\n-\n-\tmvi_h_gr\t0,r13\n-\tset_cc          0x0d\t\t; Condition codes should not change\n-\tstb      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_mem\t0xdeefdead,sp\n-\ttest_h_gr\t0xaaaaaade,r8\n-\n-\tmvi_h_gr\t-4,r13\n-\tset_cc          0x0c\t\t; Condition codes should not change\n-\tstb      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_mem\t0xdeefdead,r2\n-\ttest_h_gr\t0xaaaaaade,r8\n-\n-\t; Test stb $Ri,@(R14,$disp8\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvi_h_gr\t0xaaaaaafe,r8\n-\tmvi_h_mem\t0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tinci_h_gr\t-128,r14\t; must be aligned\n-\tmvi_h_mem\t0xdeadbeef,r14\n-\tmvr_h_gr\tr14,r2\n-\tinci_h_gr\t-128,r14\t; must be aligned\n-\tmvi_h_mem\t0xdeadbeef,r14\n-\tmvr_h_gr\tr14,r3\n-\tinci_h_gr\t129,r14\n-\n-\tset_cc          0x0b\t\t; Condition codes should not change\n-\tstb      \tr8,@(r14,127)\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem\t0xfeadbeef,r1\n-\ttest_h_gr\t0xaaaaaafe,r8\n-\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tstb      \tr8,@(r14,0)\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem\t0xdefebeef,r2\n-\ttest_h_gr\t0xaaaaaafe,r8\n-\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tstb      \tr8,@(r14,-128)\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem\t0xdefebeef,r3\n-\ttest_h_gr\t0xaaaaaafe,r8\n-\n-\tpass"
    },
    {
      "sha": "8c4a1156b92cfb08c612b60781c3e28017b960b1",
      "filename": "sim/testsuite/sim/fr30/sth.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 84,
      "changes": 84,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/sth.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/sth.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/sth.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,84 +0,0 @@\n-# fr30 testcase for\n-# mach(): fr30\n-#  sth $Ri,@$Rj\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global sth\n-sth:\n-\tmvr_h_gr\tsp,r9\t\t; Save stack pointer\n-\t; Test sth $Ri,@Rj\n-\tmvi_h_mem\t0xdeadbeef,sp\n-\tmvi_h_gr\t0xaaaabeef,r8\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tsth      \tr8,@sp\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_mem\t0xbeefbeef,sp\n-\ttest_h_gr\t0xaaaabeef,r8\n-\n-\t; Test sth $Ri,@(R13,Rj)\n-\tmvi_h_mem\t0xbeefdead,sp\n-\tmvi_h_gr\t0xaaaadead,r8\n-\tmvr_h_gr\tsp,r1\n-\tinci_h_gr\t-8,sp\n-\tmvr_h_gr\tsp,r2\n-\tmvi_h_mem\t0xbeefdead,sp\n-\tinci_h_gr\t4,sp\n-\tmvi_h_mem\t0xbeefdead,sp\n-\n-\tmvi_h_gr\t4,r13\n-\tset_cc          0x0e\t\t; Condition codes should not change\n-\tsth      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 1 0\n-\ttest_h_mem\t0xdeaddead,r1\n-\ttest_h_gr\t0xaaaadead,r8\n-\n-\tmvi_h_gr\t0,r13\n-\tset_cc          0x0d\t\t; Condition codes should not change\n-\tsth      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_mem\t0xdeaddead,sp\n-\ttest_h_gr\t0xaaaadead,r8\n-\n-\tmvi_h_gr\t-4,r13\n-\tset_cc          0x0c\t\t; Condition codes should not change\n-\tsth      \tr8,@(r13,sp)\n-\ttest_cc\t\t1 1 0 0\n-\ttest_h_mem\t0xdeaddead,r2\n-\ttest_h_gr\t0xaaaadead,r8\n-\n-\t; Test sth $Ri,@(R14,$disp9)\n-\tmvr_h_gr\tr9,sp\t\t; Restore stack pointer\n-\tmvi_h_gr\t0xaaaaabcd,r8\n-\tmvi_h_mem\t0xdeadbeef,sp\n-\tmvr_h_gr\tsp,r14\n-\tinci_h_gr\t-256,r14\t; must be aligned\n-\tmvr_h_gr\tr14,r2\n-\tmvi_h_mem\t0xdeadbeef,r14\n-\tinci_h_gr\t-256,r14\n-\tmvr_h_gr\tr14,r3\n-\tmvi_h_mem\t0xdeadbeef,r14\n-\tinci_h_gr\t258,r14\n-\n-\tset_cc          0x0b\t\t; Condition codes should not change\n-\tsth      \tr8,@(r14,254)\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_mem\t0xabcdbeef,r1\n-\ttest_h_gr\t0xaaaaabcd,r8\n-\n-\tset_cc          0x0a\t\t; Condition codes should not change\n-\tsth      \tr8,@(r14,0)\n-\ttest_cc\t\t1 0 1 0\n-\ttest_h_mem\t0xdeadabcd,r2\n-\ttest_h_gr\t0xaaaaabcd,r8\n-\n-\tset_cc          0x09\t\t; Condition codes should not change\n-\tsth      \tr8,@(r14,-256)\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_mem\t0xdeadabcd,r3\n-\ttest_h_gr\t0xaaaaabcd,r8\n-\n-\tpass"
    },
    {
      "sha": "197940bbf4f51398cdec752db466e3c5e13d5ad0",
      "filename": "sim/testsuite/sim/fr30/stilm.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 41,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stilm.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stilm.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/stilm.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,41 +0,0 @@\n-# fr30 testcase for stilm $i8\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global stilm\n-stilm:\n-\tstilm      \t0\n-\ttest_ilm\t0\n-\n-\tstilm\t\t0xe0\n-\ttest_ilm\t0\n-\n-\tstilm\t\t1\n-\ttest_ilm\t1\n-\n-\tstilm\t\t15\n-\ttest_ilm\t15\n-\n-\tstilm\t\t16\n-\ttest_ilm\t16\n-\n-\tstilm\t\t0\n-\ttest_ilm\t16\n-\n-\tstilm\t\t1\n-\ttest_ilm\t17\n-\n-\tstilm\t\t18\n-\ttest_ilm\t18\n-\n-\tstilm\t\t31\n-\ttest_ilm\t31\n-\n-\tstilm\t\t0xff\n-\ttest_ilm\t31\n-\n-\tpass"
    },
    {
      "sha": "5cc162c1a31701a92bf99e40850959c20d3bcd5f",
      "filename": "sim/testsuite/sim/fr30/stm0.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 101,
      "changes": 101,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stm0.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stm0.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/stm0.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,101 +0,0 @@\n-# fr30 testcase for stm0 ($reglist_low)\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global stm0\n-stm0:\n-\t; Test stm0 ($reglist_low)\n-\tmvr_h_gr\tsp,r8\t\t; save stack pointer temporarily\n-\tmvr_h_gr\tsp,r9\t\t; save stack pointer permanently\n-\tmvi_h_gr   \t0,r0\n-\tmvi_h_gr   \t1,r1\n-\tmvi_h_gr   \t2,r2\n-\tmvi_h_gr   \t3,r3\n-\tmvi_h_gr   \t4,r4\n-\tmvi_h_gr   \t5,r5\n-\tmvi_h_gr   \t6,r6\n-\tmvi_h_gr   \t7,r7\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm0      \t(r0,r2,r4,r6)\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t6,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t4,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t2,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t0,r8\n-\n-\tmvr_h_gr\tr9,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr9,r8\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t0,r0\n-\tmvi_h_gr   \t1,r1\n-\tmvi_h_gr   \t2,r2\n-\tmvi_h_gr   \t3,r3\n-\tmvi_h_gr   \t4,r4\n-\tmvi_h_gr   \t5,r5\n-\tmvi_h_gr   \t6,r6\n-\tmvi_h_gr   \t7,r7\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm0      \t(r1,r3,r5,r7)\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t7,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t5,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t3,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t1,r8\n-\n-\tmvr_h_gr\tr9,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr9,r8\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t0,r0\n-\tmvi_h_gr   \t1,r1\n-\tmvi_h_gr   \t2,r2\n-\tmvi_h_gr   \t3,r3\n-\tmvi_h_gr   \t4,r4\n-\tmvi_h_gr   \t5,r5\n-\tmvi_h_gr   \t6,r6\n-\tmvi_h_gr   \t7,r7\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm0      \t(r1,r5,r7,r3)\t; Order specified should not matter\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t7,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t5,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t3,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t1,r8\n-\n-\tmvr_h_gr\tr9,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr9,r8\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t9,r0\n-\tmvi_h_gr   \t9,r1\n-\tmvi_h_gr   \t9,r2\n-\tmvi_h_gr   \t9,r3\n-\tmvi_h_gr   \t9,r4\n-\tmvi_h_gr   \t9,r5\n-\tmvi_h_gr   \t9,r6\n-\tmvi_h_gr   \t9,r7\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm0      \t()\t\t; should do nothing\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tr9,sp\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t7,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t5,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t3,r8\n-\tinci_h_gr\t-4,r8\n-\ttest_h_mem\t1,r8\n-\n-\tpass"
    },
    {
      "sha": "2ac373d3544e5a857e55dd540e44f6dfe1aa9bb5",
      "filename": "sim/testsuite/sim/fr30/stm1.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 97,
      "changes": 97,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stm1.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stm1.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/stm1.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,97 +0,0 @@\n-# fr30 testcase for stm1 ($reglist_low)\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global stm1\n-stm1:\n-\t; Test stm1 ($reglist_low)\n-\tmvr_h_gr\tsp,r1\t\t; save stack pointer temporarily\n-\tmvr_h_gr\tsp,r2\t\t; save stack pointer permanently\n-\tmvi_h_gr   \t8,r8\n-\tmvi_h_gr   \t9,r9\n-\tmvi_h_gr   \t10,r10\n-\tmvi_h_gr   \t11,r11\n-\tmvi_h_gr   \t12,r12\n-\tmvi_h_gr   \t13,r13\n-\tmvi_h_gr   \t14,r14\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm1      \t(r8,r10,r12,r14)\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t14,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t12,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t10,r1\n-\tinci_h_gr\t-4,r1\n-\ttestr_h_mem\t8,r1\n-\n-\tmvr_h_gr\tr2,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr2,r1\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t8,r8\n-\tmvi_h_gr   \t9,r9\n-\tmvi_h_gr   \t10,r10\n-\tmvi_h_gr   \t11,r11\n-\tmvi_h_gr   \t12,r12\n-\tmvi_h_gr   \t13,r13\n-\tmvi_h_gr   \t14,r14\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm1      \t(r9,r11,r13,r15)\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r1\n-\ttestr_h_mem\tr2,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t13,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t11,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t9,r1\t\t; saved r15 is from before stm1\n-\n-\tmvr_h_gr\tr2,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr2,r1\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t8,r8\n-\tmvi_h_gr   \t9,r9\n-\tmvi_h_gr   \t10,r10\n-\tmvi_h_gr   \t11,r11\n-\tmvi_h_gr   \t12,r12\n-\tmvi_h_gr   \t13,r13\n-\tmvi_h_gr   \t14,r14\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm1      \t(r9,r13,r15,r11); Order specified should not matter\n-\ttest_cc\t\t1 1 1 1\n-\tinci_h_gr\t-4,r1\n-\ttestr_h_mem\tr2,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t13,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t11,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t9,r1\t\t; saved r15 is from before stm1\n-\n-\tmvr_h_gr\tr2,sp\t\t; restore stack pointer\n-\tmvr_h_gr\tr2,r1\t\t; save stack pointer temporarily\n-\tmvi_h_gr   \t9,r8\n-\tmvi_h_gr   \t9,r9\n-\tmvi_h_gr   \t9,r10\n-\tmvi_h_gr   \t9,r11\n-\tmvi_h_gr   \t9,r12\n-\tmvi_h_gr   \t9,r13\n-\tmvi_h_gr   \t9,r14\n-\tset_cc          0x0f\t\t; Condition codes should not change\n-\tstm1      \t()\t\t; should do nothing\n-\ttest_cc\t\t1 1 1 1\n-\ttestr_h_gr\tr2,sp\n-\tinci_h_gr\t-4,r1\n-\ttestr_h_mem\tr2,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t13,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t11,r1\n-\tinci_h_gr\t-4,r1\n-\ttest_h_mem\t9,r1\n-\n-\tpass"
    },
    {
      "sha": "a85fdf3f9f4972a55428542957a65260649405b8",
      "filename": "sim/testsuite/sim/fr30/stres.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stres.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/stres.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/stres.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,25 +0,0 @@\n-# fr30 testcase for stres $@Ri+,$u4\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global stres\n-stres:\n-\t; Test stres $@Ri+,$u4\n-\t; The current implementation simply increments Ri\n-\tmvi_h_gr   \t0x1000,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tstres      \t0,@r7+\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x1004,r7\n-\n-\tmvi_h_gr   \t0x1000,r7\n-\tset_cc          0x0f\t\t; Condition codes are irrelevent\n-\tstres      \t0xf,@r7+\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t0x1004,r7\n-\n-\tpass"
    },
    {
      "sha": "eceaa79c5c6303eb8b0375b4ad7f50b6e69cb3ce",
      "filename": "sim/testsuite/sim/fr30/sub.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/sub.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/sub.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/sub.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for sub $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global sub\n-sub:\n-\t; Test sub $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of expected\n-\tsub      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of expected\n-\tsub\t\tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tset_cc          0x0b\t\t; Set mask opposite of expected\n-\tsub\t\tr8,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_gr  \t0,r8\n-\n-\tset_cc          0x06\t\t; Set mask opposite of expected\n-\tsub\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tpass"
    },
    {
      "sha": "2978e40c38d342a34ab3198908110c0832fa3dca",
      "filename": "sim/testsuite/sim/fr30/subc.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/subc.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/subc.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/subc.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,62 +0,0 @@\n-# fr30 testcase for subc $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global subc\n-subc:\n-\t; Test subc $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0e\t\t; Make sure carry is off\n-\tsubc      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0c\t\t; Make sure carry is off\n-\tsubc\t\tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tset_cc          0x0a\t\t; Make sure carry is off\n-\tsubc\t\tr8,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_gr  \t0,r8\n-\n-\tset_cc          0x06\t\t; Make sure carry is off\n-\tsubc\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t3,r8\n-\tset_cc          0x0f\t\t; Make sure carry is on\n-\tsubc      \tr7,r8\n-\ttest_cc\t\t0 0 0 0\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t0,r7\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Make sure carry is on\n-\tsubc\t\tr7,r8\n-\ttest_cc\t\t0 0 1 0\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tmvi_h_gr  \t0x7ffffffe,r7\n-\tset_cc          0x0b\t\t; Make sure carry is on\n-\tsubc\t\tr7,r8\n-\ttest_cc\t\t0 1 0 0\n-\ttest_h_gr  \t0,r8\n-\n-\tmvi_h_gr   \t0,r7\n-\tset_cc          0x07\t\t; Make sure carry is on\n-\tsubc\t\tr7,r8\n-\ttest_cc\t\t1 0 0 1\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tpass"
    },
    {
      "sha": "c4830468d2287807fe7707a1229450edafc9d9bd",
      "filename": "sim/testsuite/sim/fr30/subn.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/subn.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/subn.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/subn.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,36 +0,0 @@\n-# fr30 testcase for subn $Rj,$Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global subn\n-subn:\n-\t; Test subn $Rj,$Ri\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t2,r8\n-\tset_cc          0x0f\t\t; Set mask opposite of usual result\n-\tsubn      \tr7,r8\n-\ttest_cc\t\t1 1 1 1\n-\ttest_h_gr  \t1,r8\n-\n-\tmvi_h_gr   \t1,r7\n-\tmvi_h_gr   \t0x80000000,r8\n-\tset_cc          0x0d\t\t; Set mask opposite of usual result\n-\tsubn\t\tr7,r8\n-\ttest_cc\t\t1 1 0 1\n-\ttest_h_gr  \t0x7fffffff,r8\n-\n-\tset_cc          0x0b\t\t; Set mask opposite of usual result\n-\tsubn\t\tr8,r8\n-\ttest_cc\t\t1 0 1 1\n-\ttest_h_gr  \t0,r8\n-\n-\tset_cc          0x06\t\t; Set mask opposite of usual result\n-\tsubn\t\tr7,r8\n-\ttest_cc\t\t0 1 1 0\n-\ttest_h_gr  \t0xffffffff,r8\n-\n-\tpass"
    },
    {
      "sha": "7523d6f6aa5f6717c2786877dfc9dc5199882141",
      "filename": "sim/testsuite/sim/fr30/testutils.inc",
      "status": "removed",
      "additions": 0,
      "deletions": 306,
      "changes": 306,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/testutils.inc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/testutils.inc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/testutils.inc?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,306 +0,0 @@\n-# r0, r4-r6 are used as tmps, consider them call clobbered by these macros.\n-\n-\t.macro start\n-\t.data\n-failmsg:\n-\t.ascii \"fail\\n\"\n-passmsg:\n-\t.ascii \"pass\\n\"\n-\t.text\n-\t.global _start\n-_start:\n-\tldi32 0x7fffc,sp\t; TODO -- what's a good value for this?\n-\tldi32 0xffc00,r0\n-\tmov   r0,tbr\t\t; defined in manual\n-\tmov   sp,usp\n-\tmov   sp,ssp\n-\t.endm\n-\n-; Exit with return code\n-\t.macro exit rc\n-\tldi32 \\rc,r4\n-\tldi32 #1,r0\n-\tint   #10\n-\t.endm\n-\n-; Pass the test case\n-\t.macro pass\n-\tldi32 #5,r6\n-\tldi32 #passmsg,r5\n-\tldi32 #1,r4\n-\tldi32 #5,r0\n-\tint   #10\n-\texit  #0\n-\t.endm\n-\n-; Fail the testcase\n-\t.macro fail\n-\tldi32 #5,r6\n-\tldi32 #failmsg,r5\n-\tldi32 #1,r4\n-\tldi32 #5,r0\n-\tint   #10\n-\texit  #1\n-\t.endm\n-\n-; Load an immediate value into a general register\n-; TODO: use minimal sized insn\n-\t.macro mvi_h_gr val reg\n-\tldi32 \\val,\\reg\n-\t.endm\n-\n-; Load an immediate value into a dedicated register\n-\t.macro mvi_h_dr val reg\n-\tldi32 \\val,r0\n-\tmov r0,\\reg\n-\t.endm\n-\n-; Load a general register into another general register\n-\t.macro mvr_h_gr src targ\n-\tmov \\src,\\targ\n-\t.endm\n-\n-; Store an immediate into a word in memory\n-\t.macro mvi_h_mem val addr\n-\tmvi_h_gr  \\val r4\n-\tmvr_h_mem r4,\\addr\n-\t.endm\n-\n-; Store a register into a word in memory\n-\t.macro mvr_h_mem reg addr\n-\tst \\reg,@\\addr\n-\t.endm\n-\n-; Store the current ps on the stack\n-\t.macro save_ps\n-\tst ps,@-r15\n-\t.endm\n-\n-; Load a word value from memory\n-\t.macro ldmem_h_gr addr reg\n-\tld @\\addr,\\reg\n-\t.endm\n-\n-; Add 2 general registers\n-\t.macro add_h_gr reg1 reg2\n-\tadd \\reg1,\\reg2\n-\t.endm\n-\n-; Increment a register by and immediate\n-\t.macro inci_h_gr inc reg\n-\tmvi_h_gr \\inc,r4\n-\tadd r4,\\reg\n-\t.endm\n-\n-; Test the value of an immediate against a general register\n-\t.macro test_h_gr val reg\n-\t.if (\\val >= 0) && (\\val <= 15)\n-\tcmp \\val,\\reg\n-\t.else\n-\t.if (\\val < 0) && (\\val >= -16)\n-\tcmp2 \\val,\\reg\n-\t.else\n-\tldi32 \\val,r4\n-\tcmp r4,\\reg\n-\t.endif\n-\t.endif\n-\tbeq test_gr\\@\n-\tfail\n-test_gr\\@:\n-\t.endm\n-\n-; compare two general registers\n-\t.macro testr_h_gr reg1 reg2\n-\tcmp \\reg1,\\reg2\n-\tbeq testr_gr\\@\n-\tfail\n-testr_gr\\@:\n-\t.endm\n-\n-; Test the value of an immediate against a dedicated register\n-\t.macro test_h_dr val reg\n-\tmov \\reg,r5\n-\ttest_h_gr \\val r5\n-\t.endm\n-\n-; Test the value of an general register against a dedicated register\n-\t.macro testr_h_dr gr dr\n-\tmov \\dr,r5\n-\ttestr_h_gr \\gr r5\n-\t.endm\n-\n-; Compare an immediate with word in memory\n-\t.macro test_h_mem val addr\n-\tldmem_h_gr \\addr r5\n-\ttest_h_gr \\val r5\n-\t.endm\n-\n-; Compare a general register with word in memory\n-\t.macro testr_h_mem reg addr\n-\tldmem_h_gr \\addr r5\n-\ttestr_h_gr \\reg r5\n-\t.endm\n-\n-; Set the condition codes\n-\t.macro set_cc mask\n-\tandccr\t0xf0\n-\torccr\t\\mask\n-\t.endm\n-\n-; Set the stack mode\n-\t.macro set_s_user\n-\torccr\t0x20\n-\t.endm\n-\n-\t.macro set_s_system\n-\tandccr\t0x1f\n-\t.endm\n-\n-; Test the stack mode\n-\t.macro test_s_user\n-\tmvr_h_gr ps,r0\n-\tmvi_h_gr 0x20,r4\n-\tand      r4,r0\n-\ttest_h_gr 0x20,r0\n-\t.endm\n-\n-\t.macro test_s_system\n-\tmvr_h_gr ps,r0\n-\tmvi_h_gr 0x20,r4\n-\tand      r4,r0\n-\ttest_h_gr 0x0,r0\n-\t.endm\n-\n-; Set the interrupt bit\n-\t.macro set_i val\n-\t.if (\\val == 1)\n-\torccr\t0x10\n-\t.else\n-\tandccr\t0x2f\n-\t.endif\n-\t.endm\n-\n-; Test the stack mode\n-\t.macro test_i val\n-\tmvr_h_gr  ps,r0\n-\tmvi_h_gr  0x10,r4\n-\tand       r4,r0\n-\t.if (\\val == 1)\n-\ttest_h_gr 0x10,r0\n-\t.else\n-\ttest_h_gr 0x0,r0\n-\t.endif\n-\t.endm\n-\n-; Set the ilm\n-\t.macro set_ilm val\n-\tstilm \\val\n-\t.endm\n-\n-; Test the ilm\n-\t.macro test_ilm val\n-\tmvr_h_gr   ps,r0\n-\tmvi_h_gr   0x1f0000,r4\n-\tand        r4,r0\n-\tmvi_h_gr   \\val,r5\n-\tmvi_h_gr   0x1f,r4\n-\tand\t   r4,r5\n-\tlsl        15,r5\n-\tlsl        1,r5\n-\ttestr_h_gr r0,r5\n-\t.endm\n-\n-; Test the condition codes\n-\t.macro test_cc N Z V C\n-\t.if (\\N == 1)\n-\tbp fail\\@\n-\t.else\n-\tbn fail\\@\n-\t.endif\n-\t.if (\\Z == 1)\n-\tbne fail\\@\n-\t.else\n-\tbeq fail\\@\n-\t.endif\n-\t.if (\\V == 1)\n-\tbnv fail\\@\n-\t.else\n-\tbv fail\\@\n-\t.endif\n-\t.if (\\C == 1)\n-\tbnc fail\\@\n-\t.else\n-\tbc fail\\@\n-\t.endif\n-\tbra test_cc\\@\n-fail\\@:\n-\tfail\n-test_cc\\@:\n-\t.endm\n-\n-; Set the division bits\n-\t.macro set_dbits val\n-\tmvr_h_gr ps,r5\n-\tmvi_h_gr 0xfffff8ff,r4\n-\tand r4,r5\n-\tmvi_h_gr \\val,r0\n-\tmvi_h_gr 3,r4\n-\tand r4,r0\n-\tlsl 9,r0\n-\tor r0,r5\n-\tmvr_h_gr r5,ps\n-\t.endm\n-\n-; Test the division bits\n-\t.macro test_dbits val\n-\tmvr_h_gr ps,r0\n-\tlsr 9,r0\n-\tmvi_h_gr 3,r4\n-\tand r4,r0\n-\ttest_h_gr \\val,r0\n-\t.endm\n-\n-; Save the return pointer\n-\t.macro save_rp\n-\tst rp,@-R15\n-\t.ENDM\n-\n-; restore the return pointer\n-\t.macro restore_rp\n-\tld @R15+,rp\n-\t.endm\n-\n-; Ensure branch taken\n-\t.macro take_branch opcode\n-\t\\opcode take_br\\@\n-\tfail\n-take_br\\@:\n-\t.endm\n-\n-\t.macro take_branch_d opcode val\n-\t\\opcode take_brd\\@\n-\tldi:8 \\val,r0\n-\tfail\n-take_brd\\@:\n-\ttest_h_gr \\val,r0\n-\t.endm\n-\n-; Ensure branch not taken\n-\t.macro no_branch opcode\n-\t\\opcode no_brf\\@\n-\tbra\tno_brs\\@\n-no_brf\\@:\n-\tfail\n-no_brs\\@:\n-\t.endm\n-\n-\t.macro no_branch_d opcode val\n-\t\\opcode no_brdf\\@\n-\tldi:8   \\val,r0\n-\tbra\tno_brds\\@\n-no_brdf\\@:\n-\tfail\n-no_brds\\@:\n-\ttest_h_gr \\val,r0\n-\t.endm\n-"
    },
    {
      "sha": "3450a2e34cd14a9ec27528b9d0993778137d0d33",
      "filename": "sim/testsuite/sim/fr30/xchb.cgs",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/xchb.cgs",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4/sim/testsuite/sim/fr30/xchb.cgs",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/testsuite/sim/fr30/xchb.cgs?ref=c004e77f7dba0d80c5ee9a67bfb8457b9eb424a4",
      "patch": "@@ -1,20 +0,0 @@\n-# fr30 testcase for xchb @$Rj,Ri\n-# mach(): fr30\n-\n-\t.include \"testutils.inc\"\n-\n-\tSTART\n-\n-\t.text\n-\t.global xchb\n-xchb:\n-\t; Test xchb @$Rj,Ri\n-\tmvi_h_mem\t0xdeadbeef,sp\n-\tmvi_h_gr\t0xbeefdead,r0\n-\tset_cc\t0x0f\t\t\t; Condition codes are irrelevent\n-\txchb\t\t@sp,r0\n-\ttest_cc\t1 1 1 1\n-\ttest_h_gr\t0xde,r0\n-\ttest_h_mem\t0xadadbeef,sp\n-\n-\tpass"
    }
  ]
}