{
  "sha": "d4d05d13eba6e0ed01767999fc87e75599ddd86e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZDRkMDVkMTNlYmE2ZTBlZDAxNzY3OTk5ZmM4N2U3NTU5OWRkZDg2ZQ==",
  "commit": {
    "author": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-08-17T13:23:14Z"
    },
    "committer": {
      "name": "Alex Coplan",
      "email": "alex.coplan@arm.com",
      "date": "2020-08-17T13:23:14Z"
    },
    "message": "gas: Fix internal error in S_SET_SEGMENT\n\nThis patch fixes an internal error in GAS when defining a section using\na symbol that has already been named but not defined. For a minimal\nreproducer, try the following input:\n\na=b\n.sect a\n\nThe problem is that obj_elf_change_section() happily reuses the symbol\n\"a\" created by equals() without clearing the sy_value field: prior to\nthis patch, it just set bsym. This caused a problem when attempting to\nresolve the section symbol, since resolve_symbol_value() ended up\nresolving the symbol as if it were the original symbol created by\nequals(), which ends up leaving the section symbol in the undefined\nsection instead of in section a, hence the call to abort() in\nS_SET_SEGMENT().\n\ngas/ChangeLog:\n\n\t* config/obj-elf.c (obj_elf_change_section): When repurposing an\n\texisting symbol, ensure that we set sy_value as per other (fresh)\n\tsection symbols.\n\t* testsuite/gas/elf/elf.exp: Add new test.\n\t* testsuite/gas/elf/section-symbol-redef.d: New test.\n\t* testsuite/gas/elf/section-symbol-redef.s: Input for test.",
    "tree": {
      "sha": "f6334266eeab55c24929d359d6a38db7d936ef3d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/f6334266eeab55c24929d359d6a38db7d936ef3d"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/d4d05d13eba6e0ed01767999fc87e75599ddd86e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4d05d13eba6e0ed01767999fc87e75599ddd86e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/d4d05d13eba6e0ed01767999fc87e75599ddd86e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d4d05d13eba6e0ed01767999fc87e75599ddd86e/comments",
  "author": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "acoplan-arm",
    "id": 86676934,
    "node_id": "MDQ6VXNlcjg2Njc2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/acoplan-arm",
    "html_url": "https://github.com/acoplan-arm",
    "followers_url": "https://api.github.com/users/acoplan-arm/followers",
    "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}",
    "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions",
    "organizations_url": "https://api.github.com/users/acoplan-arm/orgs",
    "repos_url": "https://api.github.com/users/acoplan-arm/repos",
    "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/acoplan-arm/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "53d5a2a5c146f98dd525eda2f33d7781666463bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/53d5a2a5c146f98dd525eda2f33d7781666463bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/53d5a2a5c146f98dd525eda2f33d7781666463bf"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 26,
    "deletions": 1
  },
  "files": [
    {
      "sha": "7c06ec9349c11cb4bf926d2ac7d124cdeffcbc60",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "patch": "@@ -1,3 +1,12 @@\n+2020-08-17  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/obj-elf.c (obj_elf_change_section): When repurposing an\n+\texisting symbol, ensure that we set sy_value as per other (fresh)\n+\tsection symbols.\n+\t* testsuite/gas/elf/elf.exp: Add new test.\n+\t* testsuite/gas/elf/section-symbol-redef.d: New test.\n+\t* testsuite/gas/elf/section-symbol-redef.s: Input for test.\n+\n 2020-08-13  Nick Clifton  <nickc@redhat.com>\n \n \tPR 26359"
    },
    {
      "sha": "c11a1da229592c7c017074ee942d0c8aa5ffae89",
      "filename": "gas/config/obj-elf.c",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/config/obj-elf.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/config/obj-elf.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/obj-elf.c?ref=d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "patch": "@@ -759,7 +759,14 @@ obj_elf_change_section (const char *name,\n       /* Add a symbol for this section to the symbol table.  */\n       secsym = symbol_find (name);\n       if (secsym != NULL)\n-\tsymbol_set_bfdsym (secsym, sec->symbol);\n+\t{\n+\t  /* We could be repurposing an undefined symbol here: make sure we\n+\t     reset sy_value to look like other section symbols in order to avoid\n+\t     trying to incorrectly resolve this section symbol later on.  */\n+\t  static const expressionS expr = { .X_op = O_constant };\n+\t  symbol_set_value_expression (secsym, &expr);\n+\t  symbol_set_bfdsym (secsym, sec->symbol);\n+\t}\n       else\n \tsymbol_table_insert (section_symbol (sec));\n     }"
    },
    {
      "sha": "2f9893b3d2b23c1ed76d1cb39caa3d6683f26585",
      "filename": "gas/testsuite/gas/elf/elf.exp",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/elf.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/elf.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/elf.exp?ref=d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "patch": "@@ -305,6 +305,7 @@ if { [is_elf_format] } then {\n     run_dump_test \"strtab\"\n \n     run_dump_test \"bignums\"\n+    run_dump_test \"section-symbol-redef\"\n     \n     load_lib gas-dg.exp\n     dg-init"
    },
    {
      "sha": "2ce245246f811f61dbc9acdcec7af85fda76c80a",
      "filename": "gas/testsuite/gas/elf/section-symbol-redef.d",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/section-symbol-redef.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/section-symbol-redef.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section-symbol-redef.d?ref=d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "patch": "@@ -0,0 +1,5 @@\n+#readelf: -x myseg\n+#notarget: bfin-*-* h8300-*\n+\n+Hex dump of section .*:\n+  0x0+ 2a\\s+\\*"
    },
    {
      "sha": "87e65699b4831c58ee6ba50440ba40a107d704f1",
      "filename": "gas/testsuite/gas/elf/section-symbol-redef.s",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/section-symbol-redef.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/d4d05d13eba6e0ed01767999fc87e75599ddd86e/gas/testsuite/gas/elf/section-symbol-redef.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/elf/section-symbol-redef.s?ref=d4d05d13eba6e0ed01767999fc87e75599ddd86e",
      "patch": "@@ -0,0 +1,3 @@\n+  myseg=not_defined_here\n+  .section myseg\n+  .byte 42"
    }
  ]
}