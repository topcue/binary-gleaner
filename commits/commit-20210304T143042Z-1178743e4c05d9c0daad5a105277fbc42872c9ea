{
  "sha": "1178743e4c05d9c0daad5a105277fbc42872c9ea",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTE3ODc0M2U0YzA1ZDljMGRhYWQ1YTEwNTI3N2ZiYzQyODcyYzllYQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-04T14:30:42Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2021-03-04T14:30:42Z"
    },
    "message": "Use \"bool\" in ada-lang.c\n\nChristian suggested switching an \"int\" in ada-lang.c to \"bool\"\ninstead.  This patch makes this change.  Tested on x86-64 Fedora 32.\n\ngdb/ChangeLog\n2021-03-04  Tom Tromey  <tromey@adacore.com>\n\n\t* ada-lang.c (struct match_data) <found_sym>: Now bool.\n\t(aux_add_nonlocal_symbols): Update.\n\t(ada_add_block_symbols): Change \"found_sym\" to bool.",
    "tree": {
      "sha": "97737f58e131e3ee8028bfd857bc24f1de366d63",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/97737f58e131e3ee8028bfd857bc24f1de366d63"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/1178743e4c05d9c0daad5a105277fbc42872c9ea",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1178743e4c05d9c0daad5a105277fbc42872c9ea",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/1178743e4c05d9c0daad5a105277fbc42872c9ea",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/1178743e4c05d9c0daad5a105277fbc42872c9ea/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca0e11aa4ba877e180f7d40dcc5a89540740c501",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca0e11aa4ba877e180f7d40dcc5a89540740c501",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca0e11aa4ba877e180f7d40dcc5a89540740c501"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 16,
    "deletions": 10
  },
  "files": [
    {
      "sha": "0126083241b8ba2ffb6c23dfdc78a2387b473afd",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1178743e4c05d9c0daad5a105277fbc42872c9ea/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1178743e4c05d9c0daad5a105277fbc42872c9ea/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=1178743e4c05d9c0daad5a105277fbc42872c9ea",
      "patch": "@@ -1,3 +1,9 @@\n+2021-03-04  Tom Tromey  <tromey@adacore.com>\n+\n+\t* ada-lang.c (struct match_data) <found_sym>: Now bool.\n+\t(aux_add_nonlocal_symbols): Update.\n+\t(ada_add_block_symbols): Change \"found_sym\" to bool.\n+\n 2021-03-03  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-lang.c (ada_resolve_function): Update comment."
    },
    {
      "sha": "bb50222f81c2f89131339ecb02420aa473ec086d",
      "filename": "gdb/ada-lang.c",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/1178743e4c05d9c0daad5a105277fbc42872c9ea/gdb/ada-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/1178743e4c05d9c0daad5a105277fbc42872c9ea/gdb/ada-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ada-lang.c?ref=1178743e4c05d9c0daad5a105277fbc42872c9ea",
      "patch": "@@ -5299,7 +5299,7 @@ struct match_data\n   struct objfile *objfile = nullptr;\n   std::vector<struct block_symbol> *resultp;\n   struct symbol *arg_sym = nullptr;\n-  int found_sym = 0;\n+  bool found_sym = false;\n };\n \n /* A callback for add_nonlocal_symbols that adds symbol, found in BSYM,\n@@ -5324,7 +5324,7 @@ aux_add_nonlocal_symbols (struct block_symbol *bsym,\n \tadd_defn_to_vec (*data->resultp,\n \t\t\t fixup_symbol_section (data->arg_sym, data->objfile),\n \t\t\t block);\n-      data->found_sym = 0;\n+      data->found_sym = false;\n       data->arg_sym = NULL;\n     }\n   else \n@@ -5335,7 +5335,7 @@ aux_add_nonlocal_symbols (struct block_symbol *bsym,\n \tdata->arg_sym = sym;\n       else\n \t{\n-\t  data->found_sym = 1;\n+\t  data->found_sym = true;\n \t  add_defn_to_vec (*data->resultp,\n \t\t\t   fixup_symbol_section (sym, data->objfile),\n \t\t\t   block);\n@@ -5531,7 +5531,7 @@ add_nonlocal_symbols (std::vector<struct block_symbol> &result,\n \n \t  if (ada_add_block_renamings (result, global_block, lookup_name,\n \t\t\t\t       domain))\n-\t    data.found_sym = 1;\n+\t    data.found_sym = true;\n \t}\n     }\n \n@@ -5998,11 +5998,11 @@ ada_add_block_symbols (std::vector<struct block_symbol> &result,\n   /* A matching argument symbol, if any.  */\n   struct symbol *arg_sym;\n   /* Set true when we find a matching non-argument symbol.  */\n-  int found_sym;\n+  bool found_sym;\n   struct symbol *sym;\n \n   arg_sym = NULL;\n-  found_sym = 0;\n+  found_sym = false;\n   for (sym = block_iter_match_first (block, lookup_name, &iter);\n        sym != NULL;\n        sym = block_iter_match_next (lookup_name, &iter))\n@@ -6015,7 +6015,7 @@ ada_add_block_symbols (std::vector<struct block_symbol> &result,\n \t\targ_sym = sym;\n \t      else\n \t\t{\n-\t\t  found_sym = 1;\n+\t\t  found_sym = true;\n \t\t  add_defn_to_vec (result,\n \t\t\t\t   fixup_symbol_section (sym, objfile),\n \t\t\t\t   block);\n@@ -6027,7 +6027,7 @@ ada_add_block_symbols (std::vector<struct block_symbol> &result,\n   /* Handle renamings.  */\n \n   if (ada_add_block_renamings (result, block, lookup_name, domain))\n-    found_sym = 1;\n+    found_sym = true;\n \n   if (!found_sym && arg_sym != NULL)\n     {\n@@ -6039,7 +6039,7 @@ ada_add_block_symbols (std::vector<struct block_symbol> &result,\n   if (!lookup_name.ada ().wild_match_p ())\n     {\n       arg_sym = NULL;\n-      found_sym = 0;\n+      found_sym = false;\n       const std::string &ada_lookup_name = lookup_name.ada ().lookup_name ();\n       const char *name = ada_lookup_name.c_str ();\n       size_t name_len = ada_lookup_name.size ();\n@@ -6069,7 +6069,7 @@ ada_add_block_symbols (std::vector<struct block_symbol> &result,\n \t\t      arg_sym = sym;\n \t\t    else\n \t\t      {\n-\t\t\tfound_sym = 1;\n+\t\t\tfound_sym = true;\n \t\t\tadd_defn_to_vec (result,\n \t\t\t\t\t fixup_symbol_section (sym, objfile),\n \t\t\t\t\t block);"
    }
  ]
}