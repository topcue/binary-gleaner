{
  "sha": "125f83f66c10c89530d011f4f81324b1f43afcda",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MTI1ZjgzZjY2YzEwYzg5NTMwZDAxMWY0ZjgxMzI0YjFmNDNhZmNkYQ==",
  "commit": {
    "author": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-02T13:14:13Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2019-07-02T13:14:13Z"
    },
    "message": "Fix a bug recently introduced to the linker where it would complain about a section being larger than a file, even if the section was artificial.\n\n\tPR 24753\nbfd\t* compress.c (bfd_get_full_section_contents): Do not complain\n\tabout linker created sections that are larger than the file size.\n\nld\t* emultempl/aarch64elf.em (_aarch64_add_stub_section): Include the\n\tLINKER_CREATED section flag when creating the stub section.",
    "tree": {
      "sha": "fbe8efe47110bf9b0c6a07a225839ac3cf83d197",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/fbe8efe47110bf9b0c6a07a225839ac3cf83d197"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/125f83f66c10c89530d011f4f81324b1f43afcda",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/125f83f66c10c89530d011f4f81324b1f43afcda",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/125f83f66c10c89530d011f4f81324b1f43afcda",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/125f83f66c10c89530d011f4f81324b1f43afcda/comments",
  "author": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "163b2c58bdbf0cba9a085574ae88d4c757c6567d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/163b2c58bdbf0cba9a085574ae88d4c757c6567d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/163b2c58bdbf0cba9a085574ae88d4c757c6567d"
    }
  ],
  "stats": {
    "total": 17,
    "additions": 16,
    "deletions": 1
  },
  "files": [
    {
      "sha": "063af9ca100347d06b57d0e07830a97d2a76251c",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/125f83f66c10c89530d011f4f81324b1f43afcda/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/125f83f66c10c89530d011f4f81324b1f43afcda/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=125f83f66c10c89530d011f4f81324b1f43afcda",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24753\n+\t* compress.c (bfd_get_full_section_contents): Do not complain\n+\tabout linker created sections that are larger than the file size.\n+\n 2019-07-02  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* bfd/elf32-arm.c (CMSE_STUB_NAME): New define."
    },
    {
      "sha": "32de09923df42fa53c400a2da62b5dc527e40019",
      "filename": "bfd/compress.c",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/125f83f66c10c89530d011f4f81324b1f43afcda/bfd/compress.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/125f83f66c10c89530d011f4f81324b1f43afcda/bfd/compress.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/compress.c?ref=125f83f66c10c89530d011f4f81324b1f43afcda",
      "patch": "@@ -253,6 +253,9 @@ bfd_get_full_section_contents (bfd *abfd, sec_ptr sec, bfd_byte **ptr)\n \t  ufile_ptr filesize = bfd_get_file_size (abfd);\n \t  if (filesize > 0\n \t      && filesize < sz\n+\t      /* PR 24753: Linker created sections can be larger than\n+\t\t the file size, eg if they are being used to hold stubs.  */\n+\t      && (bfd_get_section_flags (abfd, sec) & SEC_LINKER_CREATED) == 0\n \t      /* The MMO file format supports its own special compression\n \t\t technique, but it uses COMPRESS_SECTION_NONE when loading\n \t\t a section's contents.  */"
    },
    {
      "sha": "d4916f4b698cc6216b1d49ce2e0e74100bfc8c26",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/125f83f66c10c89530d011f4f81324b1f43afcda/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/125f83f66c10c89530d011f4f81324b1f43afcda/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=125f83f66c10c89530d011f4f81324b1f43afcda",
      "patch": "@@ -1,3 +1,9 @@\n+2019-07-02  Nick Clifton  <nickc@redhat.com>\n+\n+\tPR 24753\n+\t* emultempl/aarch64elf.em (_aarch64_add_stub_section): Include the\n+\tLINKER_CREATED section flag when creating the stub section.\n+\n 2019-07-02  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n \n \t* testsuite/ld-arm/arm-elf.exp: Add tests."
    },
    {
      "sha": "93f60a9b61311fb38f67101dd4787032e2d2ffc9",
      "filename": "ld/emultempl/aarch64elf.em",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/125f83f66c10c89530d011f4f81324b1f43afcda/ld/emultempl/aarch64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/125f83f66c10c89530d011f4f81324b1f43afcda/ld/emultempl/aarch64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/aarch64elf.em?ref=125f83f66c10c89530d011f4f81324b1f43afcda",
      "patch": "@@ -169,7 +169,7 @@ elf${ELFSIZE}_aarch64_add_stub_section (const char *stub_sec_name,\n   lang_output_section_statement_type *os;\n   struct hook_stub_info info;\n \n-  flags = (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_CODE\n+  flags = (SEC_ALLOC | SEC_LOAD | SEC_READONLY | SEC_CODE | SEC_LINKER_CREATED\n \t   | SEC_HAS_CONTENTS | SEC_RELOC | SEC_IN_MEMORY | SEC_KEEP);\n   stub_sec = bfd_make_section_anyway_with_flags (stub_file->the_bfd,\n \t\t\t\t\t\t stub_sec_name, flags);"
    }
  ]
}