{
  "sha": "606d105ff12c443e5466581a095ad151ce14bc62",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjA2ZDEwNWZmMTJjNDQzZTU0NjY1ODFhMDk1YWQxNTFjZTE0YmM2Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:27:57Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2021-03-08T14:28:02Z"
    },
    "message": "Split out eval_op_neg\n\nThis splits UNOP NEG into a new function for future use.\n\ngdb/ChangeLog\n2021-03-08  Tom Tromey  <tom@tromey.com>\n\n\t* eval.c (eval_op_neg): New function.\n\t(evaluate_subexp_standard): Use it.",
    "tree": {
      "sha": "675ad6f7fe00ef07cbd55490ee21bc4ab045eb08",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/675ad6f7fe00ef07cbd55490ee21bc4ab045eb08"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/606d105ff12c443e5466581a095ad151ce14bc62",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606d105ff12c443e5466581a095ad151ce14bc62",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/606d105ff12c443e5466581a095ad151ce14bc62",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/606d105ff12c443e5466581a095ad151ce14bc62/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "39f288bea9fbae9e63c123411c150f8f34ea0059",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/39f288bea9fbae9e63c123411c150f8f34ea0059",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/39f288bea9fbae9e63c123411c150f8f34ea0059"
    }
  ],
  "stats": {
    "total": 33,
    "additions": 24,
    "deletions": 9
  },
  "files": [
    {
      "sha": "b27ed9c539f6d798eb79250590e7ddd31b94fd81",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606d105ff12c443e5466581a095ad151ce14bc62/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606d105ff12c443e5466581a095ad151ce14bc62/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=606d105ff12c443e5466581a095ad151ce14bc62",
      "patch": "@@ -1,3 +1,8 @@\n+2021-03-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* eval.c (eval_op_neg): New function.\n+\t(evaluate_subexp_standard): Use it.\n+\n 2021-03-08  Tom Tromey  <tom@tromey.com>\n \n \t* eval.c (eval_op_plus): New function."
    },
    {
      "sha": "5cc7b1844f2d1c10206707deae391cc36ccc1dee",
      "filename": "gdb/eval.c",
      "status": "modified",
      "additions": 19,
      "deletions": 9,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/606d105ff12c443e5466581a095ad151ce14bc62/gdb/eval.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/606d105ff12c443e5466581a095ad151ce14bc62/gdb/eval.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/eval.c?ref=606d105ff12c443e5466581a095ad151ce14bc62",
      "patch": "@@ -1769,6 +1769,24 @@ eval_op_plus (struct type *expect_type, struct expression *exp,\n     }\n }\n \n+/* A helper function for UNOP_NEG.  */\n+\n+static struct value *\n+eval_op_neg (struct type *expect_type, struct expression *exp,\n+\t     enum noside noside, enum exp_opcode op,\n+\t     struct value *arg1)\n+{\n+  if (noside == EVAL_SKIP)\n+    return eval_skip_value (exp);\n+  if (unop_user_defined_p (op, arg1))\n+    return value_x_unop (arg1, op, noside);\n+  else\n+    {\n+      unop_promote (exp->language_defn, exp->gdbarch, &arg1);\n+      return value_neg (arg1);\n+    }\n+}\n+\n struct value *\n evaluate_subexp_standard (struct type *expect_type,\n \t\t\t  struct expression *exp, int *pos,\n@@ -2622,15 +2640,7 @@ evaluate_subexp_standard (struct type *expect_type,\n       \n     case UNOP_NEG:\n       arg1 = evaluate_subexp (nullptr, exp, pos, noside);\n-      if (noside == EVAL_SKIP)\n-\treturn eval_skip_value (exp);\n-      if (unop_user_defined_p (op, arg1))\n-\treturn value_x_unop (arg1, op, noside);\n-      else\n-\t{\n-\t  unop_promote (exp->language_defn, exp->gdbarch, &arg1);\n-\t  return value_neg (arg1);\n-\t}\n+      return eval_op_neg (expect_type, exp, noside, op, arg1);\n \n     case UNOP_COMPLEMENT:\n       /* C++: check for and handle destructor names.  */"
    }
  ]
}