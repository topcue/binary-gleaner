{
  "sha": "0379b8837a875403866e2cf1a0315bee1d8d5694",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDM3OWI4ODM3YTg3NTQwMzg2NmUyY2YxYTAzMTViZWUxZDhkNTY5NA==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-01T02:43:32Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-17T18:19:15Z"
    },
    "message": "Clean up tui_layout_command\n\ntui_layout_command is a simple wrapper for tui_set_layout_by_name.\nThis removes the extra layer and cleans up the resulting function a\nbit -- changing it to call error rather than return a result.  This\nnecessitated a small change to tui-regs.c, to avoid calling the\nfunction that is being removed.\n\ngdb/ChangeLog\n2019-07-17  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui.h (tui_set_layout_by_name): Don't declare.\n\t* tui/tui-regs.c (tui_reg_layout): New function.\n\t(tui_show_registers, tui_reg_command): Use it.\n\t* tui/tui-layout.c (LAYOUT_USAGE): Remove.\n\t(tui_layout_command): Rename from tui_set_layout_by_name.  Change\n\tparameters.\n\t(tui_layout_command): Remove.",
    "tree": {
      "sha": "a65bfd08eeb1e49e0262119bb0c61fd80e45f613",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a65bfd08eeb1e49e0262119bb0c61fd80e45f613"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0379b8837a875403866e2cf1a0315bee1d8d5694",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0379b8837a875403866e2cf1a0315bee1d8d5694",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0379b8837a875403866e2cf1a0315bee1d8d5694",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0379b8837a875403866e2cf1a0315bee1d8d5694/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b7fbad913e8874b9a887eb149b14975343bfb7ab",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b7fbad913e8874b9a887eb149b14975343bfb7ab",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b7fbad913e8874b9a887eb149b14975343bfb7ab"
    }
  ],
  "stats": {
    "total": 125,
    "additions": 61,
    "deletions": 64
  },
  "files": [
    {
      "sha": "d9645201a1abf44fe6e339505ef1722f805704d8",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=0379b8837a875403866e2cf1a0315bee1d8d5694",
      "patch": "@@ -1,3 +1,13 @@\n+2019-07-17  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui.h (tui_set_layout_by_name): Don't declare.\n+\t* tui/tui-regs.c (tui_reg_layout): New function.\n+\t(tui_show_registers, tui_reg_command): Use it.\n+\t* tui/tui-layout.c (LAYOUT_USAGE): Remove.\n+\t(tui_layout_command): Rename from tui_set_layout_by_name.  Change\n+\tparameters.\n+\t(tui_layout_command): Remove.\n+\n 2019-07-17  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-layout.h (tui/tui-layout): Return void."
    },
    {
      "sha": "0ed7b29ce4b2560caeedadf665351f37672b22a8",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 35,
      "deletions": 59,
      "changes": 94,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=0379b8837a875403866e2cf1a0315bee1d8d5694",
      "patch": "@@ -61,8 +61,6 @@ static void extract_display_start_addr (struct gdbarch **, CORE_ADDR *);\n ** DEFINITIONS\n ***************************************/\n \n-#define LAYOUT_USAGE     \"Usage: layout prev | next | <layout_name> \\n\"\n-\n /* Show the screen layout defined.  */\n static void\n show_layout (enum tui_layout_type layout)\n@@ -361,63 +359,49 @@ Layout names are:\\n\\\n \n /* Function to set the layout to SRC, ASM, SPLIT, NEXT, PREV, DATA, or\n    REGS. */\n-enum tui_status\n-tui_set_layout_by_name (const char *layout_name)\n+static void\n+tui_layout_command (const char *layout_name, int from_tty)\n {\n-  enum tui_status status = TUI_SUCCESS;\n+  int i;\n+  enum tui_layout_type new_layout = UNDEFINED_LAYOUT;\n+  enum tui_layout_type cur_layout = tui_current_layout ();\n \n-  if (layout_name != NULL)\n-    {\n-      int i;\n-      enum tui_layout_type new_layout = UNDEFINED_LAYOUT;\n-      enum tui_layout_type cur_layout = tui_current_layout ();\n+  if (layout_name == NULL)\n+    error (_(\"Usage: layout prev | next | LAYOUT-NAME\"));\n \n-      std::string copy = layout_name;\n-      for (i = 0; i < copy.size (); i++)\n-\tcopy[i] = toupper (copy[i]);\n-      const char *buf_ptr = copy.c_str ();\n+  std::string copy = layout_name;\n+  for (i = 0; i < copy.size (); i++)\n+    copy[i] = toupper (copy[i]);\n+  const char *buf_ptr = copy.c_str ();\n \n-      /* First check for ambiguous input.  */\n-      if (strlen (buf_ptr) <= 1 && *buf_ptr == 'S')\n-\t{\n-\t  warning (_(\"Ambiguous command input.\"));\n-\t  status = TUI_FAILURE;\n-\t}\n-      else\n-\t{\n-\t  if (subset_compare (buf_ptr, \"SRC\"))\n-\t    new_layout = SRC_COMMAND;\n-\t  else if (subset_compare (buf_ptr, \"ASM\"))\n-\t    new_layout = DISASSEM_COMMAND;\n-\t  else if (subset_compare (buf_ptr, \"SPLIT\"))\n-\t    new_layout = SRC_DISASSEM_COMMAND;\n-\t  else if (subset_compare (buf_ptr, \"REGS\"))\n-\t    {\n-\t      if (cur_layout == SRC_COMMAND\n-\t\t  || cur_layout == SRC_DATA_COMMAND)\n-\t\tnew_layout = SRC_DATA_COMMAND;\n-\t      else\n-\t\tnew_layout = DISASSEM_DATA_COMMAND;\n-\t    }\n-\t  else if (subset_compare (buf_ptr, \"NEXT\"))\n-\t    new_layout = next_layout ();\n-\t  else if (subset_compare (buf_ptr, \"PREV\"))\n-\t    new_layout = prev_layout ();\n-\t  else\n-\t    status = TUI_FAILURE;\n+  /* First check for ambiguous input.  */\n+  if (strlen (buf_ptr) <= 1 && *buf_ptr == 'S')\n+    error (_(\"Ambiguous command input.\"));\n \n-\t  if (status == TUI_SUCCESS)\n-\t    {\n-\t      /* Make sure the curses mode is enabled.  */\n-\t      tui_enable ();\n-\t      tui_set_layout (new_layout);\n-\t    }\n-\t}\n+  if (subset_compare (buf_ptr, \"SRC\"))\n+    new_layout = SRC_COMMAND;\n+  else if (subset_compare (buf_ptr, \"ASM\"))\n+    new_layout = DISASSEM_COMMAND;\n+  else if (subset_compare (buf_ptr, \"SPLIT\"))\n+    new_layout = SRC_DISASSEM_COMMAND;\n+  else if (subset_compare (buf_ptr, \"REGS\"))\n+    {\n+      if (cur_layout == SRC_COMMAND\n+\t  || cur_layout == SRC_DATA_COMMAND)\n+\tnew_layout = SRC_DATA_COMMAND;\n+      else\n+\tnew_layout = DISASSEM_DATA_COMMAND;\n     }\n+  else if (subset_compare (buf_ptr, \"NEXT\"))\n+    new_layout = next_layout ();\n+  else if (subset_compare (buf_ptr, \"PREV\"))\n+    new_layout = prev_layout ();\n   else\n-    status = TUI_FAILURE;\n+    error (_(\"Unrecognized layout: %s\"), layout_name);\n \n-  return status;\n+  /* Make sure the curses mode is enabled.  */\n+  tui_enable ();\n+  tui_set_layout (new_layout);\n }\n \n \n@@ -456,14 +440,6 @@ extract_display_start_addr (struct gdbarch **gdbarch_p, CORE_ADDR *addr_p)\n }\n \n \n-static void\n-tui_layout_command (const char *arg, int from_tty)\n-{\n-  /* Switch to the selected layout.  */\n-  if (tui_set_layout_by_name (arg) != TUI_SUCCESS)\n-    warning (_(\"Invalid layout specified.\\n%s\"), LAYOUT_USAGE);\n-}\n-\n /* Answer the previous layout to cycle to.  */\n static enum tui_layout_type\n next_layout (void)"
    },
    {
      "sha": "382a44126d37fda2f45c15c42627777bd78dea63",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=0379b8837a875403866e2cf1a0315bee1d8d5694",
      "patch": "@@ -115,6 +115,20 @@ tui_data_window::first_reg_element_no_inline (int line_no) const\n     return (-1);\n }\n \n+/* A helper function to display the register window in the appropriate\n+   way.  */\n+\n+static void\n+tui_reg_layout ()\n+{\n+  enum tui_layout_type cur_layout = tui_current_layout ();\n+  enum tui_layout_type new_layout;\n+  if (cur_layout == SRC_COMMAND || cur_layout == SRC_DATA_COMMAND)\n+    new_layout = SRC_DATA_COMMAND;\n+  else\n+    new_layout = DISASSEM_DATA_COMMAND;\n+  tui_set_layout (new_layout);\n+}\n \n /* Show the registers of the given group in the data window\n    and refresh the window.  */\n@@ -127,7 +141,7 @@ tui_show_registers (struct reggroup *group)\n   /* Make sure the register window is visible.  If not, select an\n      appropriate layout.  */\n   if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible)\n-    tui_set_layout_by_name (DATA_NAME);\n+    tui_reg_layout ();\n \n   if (group == 0)\n     group = general_reggroup;\n@@ -512,7 +526,7 @@ tui_reg_command (const char *args, int from_tty)\n \t appropriate layout.  We need to do this before trying to run the\n \t 'next' or 'prev' commands.  */\n       if (TUI_DATA_WIN == NULL || !TUI_DATA_WIN->is_visible)\n-\ttui_set_layout_by_name (DATA_NAME);\n+\ttui_reg_layout ();\n \n       struct reggroup *current_group = NULL;\n       if (TUI_DATA_WIN != NULL)"
    },
    {
      "sha": "76ab01443b70825fd33d8cce646d1d70837ff0b8",
      "filename": "gdb/tui/tui.h",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0379b8837a875403866e2cf1a0315bee1d8d5694/gdb/tui/tui.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui.h?ref=0379b8837a875403866e2cf1a0315bee1d8d5694",
      "patch": "@@ -90,7 +90,4 @@ extern int tui_active;\n \n extern void tui_show_source (const char *fullname, int line);\n \n-/* tui-layout.c */\n-extern enum tui_status tui_set_layout_by_name (const char *);\n-\n #endif /* TUI_TUI_H */"
    }
  ]
}