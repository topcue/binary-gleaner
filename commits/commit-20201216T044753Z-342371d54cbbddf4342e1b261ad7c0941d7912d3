{
  "sha": "342371d54cbbddf4342e1b261ad7c0941d7912d3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MzQyMzcxZDU0Y2JiZGRmNDM0MmUxYjI2MWFkN2MwOTQxZDc5MTJkMw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-15T11:40:27Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-12-16T04:47:53Z"
    },
    "message": "XCOFF constify\n\nThere are occasions where it is reasonable to use a macro defining\nfunction parameters, but this isn't one of them.  Use typedefs\ninstead, which also simplifies declaring a const array of function\npointers.\n\n\t* libxcoff.h (struct xcoff_backend_data_rec): Constify\n\t_xcoff_glink_code.\n\t(XCOFF_RELOC_FUNCTION_ARGS, XCOFF_COMPLAIN_FUNCTION_ARGS): Delete.\n\t(xcoff_reloc_function, xcoff_complain_function): New typedef.\n\t(xcoff_calculate_relocation, xcoff_complain_overflow),\n\t(xcoff_reloc_type_noop, xcoff_reloc_type_fail),\n\t(xcoff_reloc_type_pos, xcoff_reloc_type_neg),\n\t(xcoff_reloc_type_rel, xcoff_reloc_type_toc),\n\t(xcoff_reloc_type_ba, xcoff_reloc_type_crel): Update declaration.\n\t* coff-rs6000.c (xcoff_reloc_type_br): Declare using typedef.\n\t(xcoff_complain_overflow_dont_func): Likewise.\n\t(xcoff_complain_overflow_bitfield_func): Likewise.\n\t(xcoff_complain_overflow_signed_func): Likewise.\n\t(xcoff_complain_overflow_unsigned_func): Likewise.\n\t(xcoff_calculate_relocation, xcoff_complain_overflow): Constify.\n\t(xcoff_glink_code): Constify.\n\t* coff64-rs6000.c (xcoff64_reloc_type_br): Declare using typedef.\n\t(xcoff64_calculate_relocation, xcoff64_glink_code): Constify.",
    "tree": {
      "sha": "4a04f06ce0a0f72dd55976679b28694d0570e9d2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/4a04f06ce0a0f72dd55976679b28694d0570e9d2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/342371d54cbbddf4342e1b261ad7c0941d7912d3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/342371d54cbbddf4342e1b261ad7c0941d7912d3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/342371d54cbbddf4342e1b261ad7c0941d7912d3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/342371d54cbbddf4342e1b261ad7c0941d7912d3/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "61d2295d723c7d202f530ccca1eacb4cfedf06d9",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/61d2295d723c7d202f530ccca1eacb4cfedf06d9",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/61d2295d723c7d202f530ccca1eacb4cfedf06d9"
    }
  ],
  "stats": {
    "total": 96,
    "additions": 56,
    "deletions": 40
  },
  "files": [
    {
      "sha": "ebbf970631859ba669665702d14ab267b3558690",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=342371d54cbbddf4342e1b261ad7c0941d7912d3",
      "patch": "@@ -1,3 +1,24 @@\n+2020-12-16  Alan Modra  <amodra@gmail.com>\n+\n+\t* libxcoff.h (struct xcoff_backend_data_rec): Constify\n+\t_xcoff_glink_code.\n+\t(XCOFF_RELOC_FUNCTION_ARGS, XCOFF_COMPLAIN_FUNCTION_ARGS): Delete.\n+\t(xcoff_reloc_function, xcoff_complain_function): New typedef.\n+\t(xcoff_calculate_relocation, xcoff_complain_overflow),\n+\t(xcoff_reloc_type_noop, xcoff_reloc_type_fail),\n+\t(xcoff_reloc_type_pos, xcoff_reloc_type_neg),\n+\t(xcoff_reloc_type_rel, xcoff_reloc_type_toc),\n+\t(xcoff_reloc_type_ba, xcoff_reloc_type_crel): Update declaration.\n+\t* coff-rs6000.c (xcoff_reloc_type_br): Declare using typedef.\n+\t(xcoff_complain_overflow_dont_func): Likewise.\n+\t(xcoff_complain_overflow_bitfield_func): Likewise.\n+\t(xcoff_complain_overflow_signed_func): Likewise.\n+\t(xcoff_complain_overflow_unsigned_func): Likewise.\n+\t(xcoff_calculate_relocation, xcoff_complain_overflow): Constify.\n+\t(xcoff_glink_code): Constify.\n+\t* coff64-rs6000.c (xcoff64_reloc_type_br): Declare using typedef.\n+\t(xcoff64_calculate_relocation, xcoff64_glink_code): Constify.\n+\n 2020-12-16  Alan Modra  <amodra@gmail.com>\n \n \t* elf32-xtensa.c (narrowable, widenable): Constify."
    },
    {
      "sha": "2854f928dbecfc874010af18e0a0ce26b55159f3",
      "filename": "bfd/coff-rs6000.c",
      "status": "modified",
      "additions": 12,
      "deletions": 16,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/coff-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/coff-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff-rs6000.c?ref=342371d54cbbddf4342e1b261ad7c0941d7912d3",
      "patch": "@@ -148,19 +148,15 @@ static bfd_boolean do_pad (bfd *, unsigned int);\n static bfd_boolean do_copy (bfd *, bfd *);\n \n /* Relocation functions */\n-static bfd_boolean xcoff_reloc_type_br (XCOFF_RELOC_FUNCTION_ARGS);\n-\n-static bfd_boolean xcoff_complain_overflow_dont_func\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS);\n-static bfd_boolean xcoff_complain_overflow_bitfield_func\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS);\n-static bfd_boolean xcoff_complain_overflow_signed_func\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS);\n-static bfd_boolean xcoff_complain_overflow_unsigned_func\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS);\n-\n-bfd_boolean (*xcoff_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION])\n-  (XCOFF_RELOC_FUNCTION_ARGS) =\n+static xcoff_reloc_function xcoff_reloc_type_br;\n+\n+static xcoff_complain_function xcoff_complain_overflow_dont_func;\n+static xcoff_complain_function xcoff_complain_overflow_bitfield_func;\n+static xcoff_complain_function xcoff_complain_overflow_signed_func;\n+static xcoff_complain_function xcoff_complain_overflow_unsigned_func;\n+\n+xcoff_reloc_function *const\n+xcoff_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION] =\n {\n   xcoff_reloc_type_pos,\t /* R_POS   (0x00) */\n   xcoff_reloc_type_neg,\t /* R_NEG   (0x01) */\n@@ -192,8 +188,8 @@ bfd_boolean (*xcoff_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION])\n   xcoff_reloc_type_ba,\t /* R_RBRC  (0x1b) */\n };\n \n-bfd_boolean (*xcoff_complain_overflow[XCOFF_MAX_COMPLAIN_OVERFLOW])\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS) =\n+xcoff_complain_function *const\n+xcoff_complain_overflow[XCOFF_MAX_COMPLAIN_OVERFLOW] =\n {\n   xcoff_complain_overflow_dont_func,\n   xcoff_complain_overflow_bitfield_func,\n@@ -3981,7 +3977,7 @@ HOWTO (0,\t\t\t/* type */\n    The first word of global linkage code must be modified by filling in\n    the correct TOC offset.  */\n \n-static unsigned long xcoff_glink_code[9] =\n+static const unsigned long xcoff_glink_code[9] =\n   {\n     0x81820000,\t/* lwz r12,0(r2) */\n     0x90410014,\t/* stw r2,20(r1) */"
    },
    {
      "sha": "6b7cd34b333833bb61a3c539657f611bf46aaa4f",
      "filename": "bfd/coff64-rs6000.c",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/coff64-rs6000.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/coff64-rs6000.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/coff64-rs6000.c?ref=342371d54cbbddf4342e1b261ad7c0941d7912d3",
      "patch": "@@ -177,11 +177,10 @@ static bfd_boolean xcoff64_bad_format_hook\n   (bfd *, void *);\n \n /* Relocation functions */\n-static bfd_boolean xcoff64_reloc_type_br\n-  (XCOFF_RELOC_FUNCTION_ARGS);\n+static xcoff_reloc_function xcoff64_reloc_type_br;\n \n-bfd_boolean (*xcoff64_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION])\n-  (XCOFF_RELOC_FUNCTION_ARGS) =\n+xcoff_reloc_function *const\n+xcoff64_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION] =\n {\n   xcoff_reloc_type_pos,\t /* R_POS   (0x00) */\n   xcoff_reloc_type_neg,\t /* R_NEG   (0x01) */\n@@ -2539,7 +2538,7 @@ HOWTO (0,\t\t\t/* type */\n        MINUS_ONE,\t\t/* dst_mask */\n        FALSE);\t\t\t/* pcrel_offset */\n \n-static unsigned long xcoff64_glink_code[10] =\n+static const unsigned long xcoff64_glink_code[10] =\n {\n   0xe9820000,\t/* ld r12,0(r2) */\n   0xf8410028,\t/* std r2,40(r1) */"
    },
    {
      "sha": "c4b69ac1b7dc12b6c5817d64b1b68cdbb8df920f",
      "filename": "bfd/libxcoff.h",
      "status": "modified",
      "additions": 19,
      "deletions": 19,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/libxcoff.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/342371d54cbbddf4342e1b261ad7c0941d7912d3/bfd/libxcoff.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/libxcoff.h?ref=342371d54cbbddf4342e1b261ad7c0941d7912d3",
      "patch": "@@ -90,7 +90,7 @@ struct xcoff_backend_data_rec\n \n   /* Global linkage.  The first word of global linkage code must be be\n      modified by filling in the correct TOC offset.  */\n-  unsigned long *_xcoff_glink_code;\n+  const unsigned long *_xcoff_glink_code;\n \n   /* Size of the global link code in bytes of the xcoff_glink_code table.  */\n   unsigned long _xcoff_glink_size;\n@@ -210,30 +210,30 @@ struct xcoff_backend_data_rec\n #endif\n #define N_ONES(n) (((((bfd_vma) 1 << ((n) - 1)) - 1) << 1) | 1)\n \n-#define XCOFF_RELOC_FUNCTION_ARGS \\\n-  bfd *, asection *, bfd *, struct internal_reloc *, \\\n-  struct internal_syment *, struct reloc_howto_struct *, bfd_vma, bfd_vma, \\\n-  bfd_vma *relocation, bfd_byte *contents\n+typedef bfd_boolean xcoff_reloc_function (bfd *, asection *, bfd *,\n+\t\t\t\t\t  struct internal_reloc *,\n+\t\t\t\t\t  struct internal_syment *,\n+\t\t\t\t\t  struct reloc_howto_struct *,\n+\t\t\t\t\t  bfd_vma, bfd_vma,\n+\t\t\t\t\t  bfd_vma *, bfd_byte *);\n \n-#define XCOFF_COMPLAIN_FUNCTION_ARGS \\\n-  bfd *, bfd_vma, bfd_vma, struct reloc_howto_struct *howto\n+typedef bfd_boolean xcoff_complain_function (bfd *, bfd_vma, bfd_vma,\n+\t\t\t\t\t     struct reloc_howto_struct *);\n \n-extern bfd_boolean (*xcoff_calculate_relocation[XCOFF_MAX_CALCULATE_RELOCATION])\n-  (XCOFF_RELOC_FUNCTION_ARGS);\n-extern bfd_boolean (*xcoff_complain_overflow[XCOFF_MAX_COMPLAIN_OVERFLOW])\n-  (XCOFF_COMPLAIN_FUNCTION_ARGS);\n+extern xcoff_reloc_function *const xcoff_calculate_relocation[];\n+extern xcoff_complain_function *const xcoff_complain_overflow[];\n \n #define XCOFF_NO_LONG_SECTION_NAMES  (FALSE), bfd_coff_set_long_section_names_disallowed\n \n /* Relocation functions */\n-bfd_boolean xcoff_reloc_type_noop (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_fail (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_pos  (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_neg  (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_rel  (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_toc  (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_ba   (XCOFF_RELOC_FUNCTION_ARGS);\n-bfd_boolean xcoff_reloc_type_crel (XCOFF_RELOC_FUNCTION_ARGS);\n+extern xcoff_reloc_function xcoff_reloc_type_noop;\n+extern xcoff_reloc_function xcoff_reloc_type_fail;\n+extern xcoff_reloc_function xcoff_reloc_type_pos;\n+extern xcoff_reloc_function xcoff_reloc_type_neg;\n+extern xcoff_reloc_function xcoff_reloc_type_rel;\n+extern xcoff_reloc_function xcoff_reloc_type_toc;\n+extern xcoff_reloc_function xcoff_reloc_type_ba;\n+extern xcoff_reloc_function xcoff_reloc_type_crel;\n \n /* Structure to describe dwarf sections.\n    Useful to convert from XCOFF section name to flag and vice-versa."
    }
  ]
}