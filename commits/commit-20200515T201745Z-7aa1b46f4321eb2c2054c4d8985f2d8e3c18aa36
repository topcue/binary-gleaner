{
  "sha": "7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6N2FhMWI0NmY0MzIxZWIyYzIwNTRjNGQ4OTg1ZjJkOGUzYzE4YWEzNg==",
  "commit": {
    "author": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-10T06:36:29Z"
    },
    "committer": {
      "name": "Philippe Waroquiers",
      "email": "philippe.waroquiers@skynet.be",
      "date": "2020-05-15T20:17:45Z"
    },
    "message": "Fix inconsistent output of prefix and bugs in 'show' command\n\ncmd_show_list function implements the 'show' command.\n\ncmd_show_list output is inconsistent: it sometimes shows a prefix\nand sometimes does not.\nFor example, in the below, you see that there is a prefix before\neach value, except for 'enabled'.\n\n    (gdb) show style\n    style address background:  The \"address\" style background color is: none\n    style address foreground:  The \"address\" style foreground color is: blue\n    style address intensity:  The \"address\" style display intensity is: normal\n    enabled:  CLI output styling is enabled.\n    style filename background:  The \"filename\" style background color is: none\n    ...\n\nThere are other inconsistencies or bugs e.g. in\nthe below we see twice insn-number-max, once with a prefix\nand once without prefix : last line, just before the value of\ninstruction-history-size which is itself without prefix.\n\n    (gdb) show record\n    record btrace bts buffer-size:  The record/replay bts buffer size is 65536.\n    record btrace cpu:  btrace cpu is 'auto'.\n    record btrace pt buffer-size:  The record/replay pt buffer size is 16384.\n    record btrace replay-memory-access:  Replay memory access is read-only.\n    record full insn-number-max:  Record/replay buffer limit is 200000.\n    record full memory-query:  Whether query if PREC cannot record memory change of next instruction is off.\n    record full stop-at-limit:  Whether record/replay stops when record/replay buffer becomes full is on.\n    function-call-history-size:  Number of functions to print in \"record function-call-history\" is 10.\n    insn-number-max:  instruction-history-size:  Number of instructions to print in \"record instruction-history\" is 10.\n    (gdb)\n\nAlso, some values are output several times due to some aliases, so avoid outputting duplicated\nvalues by skipping all aliases.\n\nNow that the command structure has a correct 'back-pointer' from a command\nto its prefix command, we can simplify cmd_show_list by removing its prefix argument\nand at the same time fix the output inconsistencies and bugs.\n\ngdb/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* cli/cli-setshow.h (cmd_show_list): Remove prefix argument.\n\t* cli/cli-decode.c (do_show_prefix_cmd): Likewise.\n\t* command.h (cmd_show_list): Likewise.\n\t* dwarf2/index-cache.c (show_index_cache_command): Likewise.\n\t* cli/cli-setshow.c (cmd_show_list): Use the prefix to produce the output.  Skip aliases.\n\ngdb/testsuite/ChangeLog\n\n2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n\n\t* gdb.base/default.exp: Update output following fixes.",
    "tree": {
      "sha": "6113a21731ac4c5b287f5c5fe32d30b57458eba7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6113a21731ac4c5b287f5c5fe32d30b57458eba7"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/comments",
  "author": null,
  "committer": null,
  "parents": [
    {
      "sha": "89bcba74f89baceba3fa7387622e3d60e1de02e8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89bcba74f89baceba3fa7387622e3d60e1de02e8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/89bcba74f89baceba3fa7387622e3d60e1de02e8"
    }
  ],
  "stats": {
    "total": 63,
    "additions": 40,
    "deletions": 23
  },
  "files": [
    {
      "sha": "80c027df8ac48e3b7076626f16f5a47d92766986",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -1,3 +1,11 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* cli/cli-setshow.h (cmd_show_list): Remove prefix argument.\n+\t* cli/cli-decode.c (do_show_prefix_cmd): Likewise.\n+\t* command.h (cmd_show_list): Likewise.\n+\t* dwarf2/index-cache.c (show_index_cache_command): Likewise.\n+\t* cli/cli-setshow.c (cmd_show_list): Use the prefix to produce the output.  Skip aliases.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* unittests/command-def-selftests.c (traverse_command_structure):"
    },
    {
      "sha": "c37dfaffb5c1adcb2f3b4d8b526b2572dfd2df2f",
      "filename": "gdb/cli/cli-decode.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-decode.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-decode.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-decode.c?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -428,7 +428,7 @@ add_basic_prefix_cmd (const char *name, enum command_class theclass,\n static void\n do_show_prefix_cmd (const char *args, int from_tty, struct cmd_list_element *c)\n {\n-  cmd_show_list (*c->prefixlist, from_tty, \"\");\n+  cmd_show_list (*c->prefixlist, from_tty);\n }\n \n /* See command.h.  */"
    },
    {
      "sha": "19a5565bfe0afa77f17ff63c871b33dcfa796974",
      "filename": "gdb/cli/cli-setshow.c",
      "status": "modified",
      "additions": 22,
      "deletions": 16,
      "changes": 38,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-setshow.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-setshow.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.c?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -733,39 +733,45 @@ do_show_command (const char *arg, int from_tty, struct cmd_list_element *c)\n /* Show all the settings in a list of show commands.  */\n \n void\n-cmd_show_list (struct cmd_list_element *list, int from_tty, const char *prefix)\n+cmd_show_list (struct cmd_list_element *list, int from_tty)\n {\n   struct ui_out *uiout = current_uiout;\n \n   ui_out_emit_tuple tuple_emitter (uiout, \"showlist\");\n   for (; list != NULL; list = list->next)\n     {\n+      /* We skip show command aliases to avoid showing duplicated values.  */\n+\n       /* If we find a prefix, run its list, prefixing our output by its\n          prefix (with \"show \" skipped).  */\n-      if (list->prefixlist && !list->abbrev_flag)\n+      if (list->prefixlist && list->cmd_pointer == nullptr)\n \t{\n \t  ui_out_emit_tuple optionlist_emitter (uiout, \"optionlist\");\n \t  const char *new_prefix = strstr (list->prefixname, \"show \") + 5;\n \n \t  if (uiout->is_mi_like_p ())\n \t    uiout->field_string (\"prefix\", new_prefix);\n-\t  cmd_show_list (*list->prefixlist, from_tty, new_prefix);\n+\t  cmd_show_list (*list->prefixlist, from_tty);\n \t}\n-      else\n+      else if (list->theclass != no_set_class && list->cmd_pointer == nullptr)\n \t{\n-\t  if (list->theclass != no_set_class)\n-\t    {\n-\t      ui_out_emit_tuple option_emitter (uiout, \"option\");\n-\n-\t      uiout->text (prefix);\n-\t      uiout->field_string (\"name\", list->name);\n-\t      uiout->text (\":  \");\n-\t      if (list->type == show_cmd)\n-\t\tdo_show_command (NULL, from_tty, list);\n-\t      else\n-\t\tcmd_func (list, NULL, from_tty);\n-\t    }\n+\t  ui_out_emit_tuple option_emitter (uiout, \"option\");\n+\n+\t  {\n+\t    /* If we find a prefix, output it (with \"show \" skipped).  */\n+\t    const char *prefixname\n+\t      = (list->prefix == nullptr ? \"\"\n+\t\t : strstr (list->prefix->prefixname, \"show \") + 5);\n+\t    uiout->text (prefixname);\n+\t  }\n+\t  uiout->field_string (\"name\", list->name);\n+\t  uiout->text (\":  \");\n+\t  if (list->type == show_cmd)\n+\t    do_show_command (NULL, from_tty, list);\n+\t  else\n+\t    cmd_func (list, NULL, from_tty);\n \t}\n     }\n }\n \n+"
    },
    {
      "sha": "83e4984ed6caba9c57b1d704399c698d441b07d6",
      "filename": "gdb/cli/cli-setshow.h",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-setshow.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/cli/cli-setshow.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/cli/cli-setshow.h?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -60,7 +60,6 @@ extern void do_show_command (const char *arg, int from_tty,\n /* Get a string version of C's current value.  */\n extern std::string get_setshow_command_value_string (const cmd_list_element *c);\n \n-extern void cmd_show_list (struct cmd_list_element *list, int from_tty,\n-\t\t\t   const char *prefix);\n+extern void cmd_show_list (struct cmd_list_element *list, int from_tty);\n \n #endif /* CLI_CLI_SETSHOW_H */"
    },
    {
      "sha": "0a1706c545eecc72631ae44ebc876c6a0bbd4033",
      "filename": "gdb/command.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/command.h?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -464,7 +464,7 @@ extern void\n \n /* Do a \"show\" command for each thing on a command list.  */\n \n-extern void cmd_show_list (struct cmd_list_element *, int, const char *);\n+extern void cmd_show_list (struct cmd_list_element *, int);\n \n /* Used everywhere whenever at least one parameter is required and\n    none is specified.  */"
    },
    {
      "sha": "76e7ce6ab721a2cee38aa226f5314ef77ca8de53",
      "filename": "gdb/dwarf2/index-cache.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/dwarf2/index-cache.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/dwarf2/index-cache.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/index-cache.c?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -259,7 +259,7 @@ show_index_cache_command (const char *arg, int from_tty)\n   auto restore_flag = make_scoped_restore (&in_show_index_cache_command, true);\n \n   /* Call all \"show index-cache\" subcommands.  */\n-  cmd_show_list (show_index_cache_prefix_list, from_tty, \"\");\n+  cmd_show_list (show_index_cache_prefix_list, from_tty);\n \n   printf_unfiltered (\"\\n\");\n   printf_unfiltered"
    },
    {
      "sha": "bff0ad0532990a9d5679493cb51ed63c972f7cb3",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -1,3 +1,7 @@\n+2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n+\n+\t* gdb.base/default.exp: Update output following fixes.\n+\n 2020-05-15  Philippe Waroquiers  <philippe.waroquiers@skynet.be>\n \n \t* gdb.base/alias.exp: Test aliases starting with a prefix of"
    },
    {
      "sha": "c34bb9a92a956cf25739141f220c4c897b2b46e8",
      "filename": "gdb/testsuite/gdb.base/default.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/testsuite/gdb.base/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36/gdb/testsuite/gdb.base/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/default.exp?ref=7aa1b46f4321eb2c2054c4d8985f2d8e3c18aa36",
      "patch": "@@ -559,7 +559,7 @@ gdb_test \"show args\" \"Argument list to give program being debugged when it is st\n \n # test show check abbreviations\n foreach x {\"c\" \"ch\" \"check\"} {\n-    gdb_test \"show $x\" \"range:  *Range checking is \\\"auto; currently off\\\".(\\[^\\r\\n\\]*\\[\\r\\n\\])+type:  *Strict type checking is on\\..*\" \\\n+    gdb_test \"show $x\" \"check range:  *Range checking is \\\"auto; currently off\\\".(\\[^\\r\\n\\]*\\[\\r\\n\\])+check type:  *Strict type checking is on\\..*\" \\\n \t\"show check \\\"$x\\\" abbreviation\"\n }\n \n@@ -645,7 +645,7 @@ gdb_test \"show history save\" \"Saving of the history record on exit is on.\"\n #test show history size\n gdb_test \"show history size\" \"The size of the command history is.*\"\n #test show history\n-gdb_test \"show history\" \"expansion:  *History expansion on command input is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+filename:  *The filename in which to record the command history is.*.gdb_history(\\[^\\r\\n\\]*\\[\\r\\n\\])+save: *Saving of the history record on exit is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+size: * The size of the command history is.*\"\n+gdb_test \"show history\" \"history expansion:  *History expansion on command input is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+history filename:  *The filename in which to record the command history is.*.gdb_history(\\[^\\r\\n\\]*\\[\\r\\n\\])+history save: *Saving of the history record on exit is o(\\[^\\r\\n\\]*\\[\\r\\n\\])+history size: * The size of the command history is.*\"\n #test show language\n gdb_test \"show language\" \"The current source language is \\\"auto; currently c\\\".\"\n #test show listsize"
    }
  ]
}