{
  "sha": "5fd104addfddb68844fb8df67be832ee98ad9888",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWZkMTA0YWRkZmRkYjY4ODQ0ZmI4ZGY2N2JlODMyZWU5OGFkOTg4OA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-18T23:47:20Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-06-19T00:20:20Z"
    },
    "message": "Emit a warning when -z relro is unsupported\n\nld silently accepts -z relro and -z norelro for targets that lack the\nnecessary GNU_RELRO support.  This patch makes those targets emit a\nwarning instead, and adds testsuite infrastructure to detect when\nrelro is unsupported.\n\nbinutils/\n\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n\t* testsuite/lib/binutils-common.exp (check_relro_support): New proc.\n\t(run_dump_test): Use check_relro_support to decide whether to pass\n\textra ld option \"-z norelro\".\nld/\n\t* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Omit\n\t-z relro and -z norelro when target support for GNU_RELRO is lacking.\n\t(gld${EMULATION_NAME}_before_parse): Ignore RELRO default too.\n\t* emultempl/aarch64elf.em (gld${EMULATION_NAME}_before_parse): Ignore\n\tRELRO default when target support for GNU_RELRO is lacking.\n\t* emultempl/armelf.em (gld${EMULATION_NAME}_before_parse): Likewise.\n\t* emultempl/linux.em (gld${EMULATION_NAME}_before_parse): Likewise.\n\t* emultempl/scoreelf.em (gld${EMULATION_NAME}_before_parse): Likewise.\n\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n\t* testsuite/ld-elf/pr16322.d: xfail when no relro support.\n\t* testsuite/ld-elf/pr22393-1a.d: Likewise.\n\t* testsuite/ld-elf/pr22393-1b.d: Likewise.\n\t* testsuite/ld-elf/shared.exp (pr20995-2.so, pr20995-2): Likewise.\n\t* testsuite/lib/ld-lib.exp (run_ld_link_tests): Use check_relro_support\n\tto decide whether to pass extra ld option \"-z norelro\".",
    "tree": {
      "sha": "c8a0805ad47e7cdce9e7a8d3aff24eb4a158d335",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/c8a0805ad47e7cdce9e7a8d3aff24eb4a158d335"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5fd104addfddb68844fb8df67be832ee98ad9888",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fd104addfddb68844fb8df67be832ee98ad9888",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5fd104addfddb68844fb8df67be832ee98ad9888",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5fd104addfddb68844fb8df67be832ee98ad9888/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "753d1583f7e61ae4b6a016accaa65ab2ea776e41",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/753d1583f7e61ae4b6a016accaa65ab2ea776e41",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/753d1583f7e61ae4b6a016accaa65ab2ea776e41"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 101,
    "deletions": 29
  },
  "files": [
    {
      "sha": "0cac3f4f95515fab24ddc55521f0a15433eb36f1",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -1,3 +1,10 @@\n+2020-06-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n+\t* testsuite/lib/binutils-common.exp (check_relro_support): New proc.\n+\t(run_dump_test): Use check_relro_support to decide whether to pass\n+\textra ld option \"-z norelro\".\n+\n 2020-06-11  Alan Modra  <amodra@gmail.com>\n \n \t* readelf.c (process_mips_specific): Don't alloc memory for"
    },
    {
      "sha": "c02136c0b693500af9741e5c7be6b31f0292f994",
      "filename": "binutils/testsuite/config/default.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/config/default.exp?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -34,8 +34,6 @@ if ![info exists LD] then {\n if ![info exists LDFLAGS] then {\n     set LDFLAGS \"\"\n }\n-set ld_elf_shared_opt \"-z norelro\"\n-\n if ![info exists NM] then {\n     set NM [findfile $base_dir/nm-new $base_dir/nm-new [transform nm]]\n }"
    },
    {
      "sha": "491cd8db09ed8cd2f28b89309e377dd4e4028dff",
      "filename": "binutils/testsuite/lib/binutils-common.exp",
      "status": "modified",
      "additions": 23,
      "deletions": 4,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/testsuite/lib/binutils-common.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/binutils/testsuite/lib/binutils-common.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/lib/binutils-common.exp?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -308,6 +308,25 @@ proc check_pie_support { } {\n     return $pie_available_saved\n }\n \n+proc check_relro_support { } {\n+    global relro_available_saved\n+    global ld\n+\n+    if {![info exists relro_available_saved]} {\n+\tremote_file host delete norelro\n+\tset ld_output [remote_exec host $ld \"-z norelro\"]\n+\tif { [string first \"not supported\" $ld_output] >= 0\n+\t     || [string first \"unrecognized option\" $ld_output] >= 0\n+\t     || [string first \"-z norelro ignored\" $ld_output] >= 0\n+\t     || [string first \"cannot find norelro\" $ld_output] >= 0 } {\n+\t    set relro_available_saved 0\n+\t} else {\n+\t    set relro_available_saved 1\n+\t}\n+    }\n+    return $relro_available_saved\n+}\n+\n # Compare two files line-by-line.  FILE_1 is the actual output and FILE_2\n # is the expected output.  Ignore blank lines in either file.\n #\n@@ -729,7 +748,7 @@ proc run_dump_test { name {extra_options {}} } {\n     global ADDR2LINE ADDR2LINEFLAGS AS ASFLAGS ELFEDIT ELFEDITFLAGS LD LDFLAGS\n     global NM NMFLAGS OBJCOPY OBJCOPYFLAGS OBJDUMP OBJDUMPFLAGS\n     global READELF READELFFLAGS STRIP STRIPFLAGS\n-    global copyfile env ld_elf_shared_opt runtests srcdir subdir verbose\n+    global copyfile env runtests srcdir subdir verbose\n \n     if [string match \"*/*\" $name] {\n \tset file $name\n@@ -1119,9 +1138,9 @@ proc run_dump_test { name {extra_options {}} } {\n             set ld_extra_opt \"\"\n             global ld\n             set ld \"$LD\"\n-            if { [is_elf_format] && [check_shared_lib_support] } {\n-                set ld_extra_opt \"$ld_elf_shared_opt\"\n-            }\n+\t    if [check_relro_support] {\n+\t\tset ld_extra_opt \"-z norelro\"\n+\t    }\n \n             # Add -L$srcdir/$subdir so that the linker command can use\n             # linker scripts in the source directory."
    },
    {
      "sha": "7a6caa94af9ce5374b068e8a762760b50d2e0939",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -1,3 +1,21 @@\n+2020-06-19  Alan Modra  <amodra@gmail.com>\n+\n+\t* emultempl/elf.em (gld${EMULATION_NAME}_handle_option): Omit\n+\t-z relro and -z norelro when target support for GNU_RELRO is lacking.\n+\t(gld${EMULATION_NAME}_before_parse): Ignore RELRO default too.\n+\t* emultempl/aarch64elf.em (gld${EMULATION_NAME}_before_parse): Ignore\n+\tRELRO default when target support for GNU_RELRO is lacking.\n+\t* emultempl/armelf.em (gld${EMULATION_NAME}_before_parse): Likewise.\n+\t* emultempl/linux.em (gld${EMULATION_NAME}_before_parse): Likewise.\n+\t* emultempl/scoreelf.em (gld${EMULATION_NAME}_before_parse): Likewise.\n+\t* testsuite/config/default.exp (ld_elf_shared_opt): Don't set.\n+\t* testsuite/ld-elf/pr16322.d: xfail when no relro support.\n+\t* testsuite/ld-elf/pr22393-1a.d: Likewise.\n+\t* testsuite/ld-elf/pr22393-1b.d: Likewise.\n+\t* testsuite/ld-elf/shared.exp (pr20995-2.so, pr20995-2): Likewise.\n+\t* testsuite/lib/ld-lib.exp (run_ld_link_tests): Use check_relro_support\n+\tto decide whether to pass extra ld option \"-z norelro\".\n+\n 2020-06-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/ld-elf/linux-x86.exp (check_pr25749a): Append \"-w\""
    },
    {
      "sha": "a036da970e7e9bace0c3a3286ab3a39b45bff1ec",
      "filename": "ld/emultempl/aarch64elf.em",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/aarch64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/aarch64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/aarch64elf.em?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -47,7 +47,13 @@ gld${EMULATION_NAME}_before_parse (void)\n   config.has_shared = `if test -n \"$GENERATE_SHLIB_SCRIPT\" ; then echo TRUE ; else echo FALSE ; fi`;\n   config.separate_code = `if test \"x${SEPARATE_CODE}\" = xyes ; then echo TRUE ; else echo FALSE ; fi`;\n   link_info.check_relocs_after_open_input = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n+EOF\n+fi\n+fragment <<EOF\n }\n \n static void"
    },
    {
      "sha": "34372ba7b0b64055097325f39cf1959de1e75cb3",
      "filename": "ld/emultempl/armelf.em",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/armelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/armelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/armelf.em?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -60,7 +60,13 @@ gld${EMULATION_NAME}_before_parse (void)\n   config.has_shared = `if test -n \"$GENERATE_SHLIB_SCRIPT\" ; then echo TRUE ; else echo FALSE ; fi`;\n   config.separate_code = `if test \"x${SEPARATE_CODE}\" = xyes ; then echo TRUE ; else echo FALSE ; fi`;\n   link_info.check_relocs_after_open_input = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n+EOF\n+fi\n+fragment <<EOF\n }\n \n static void"
    },
    {
      "sha": "356f34538b0d20ba344441feed23f6b00787a48e",
      "filename": "ld/emultempl/elf.em",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/elf.em?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -82,7 +82,13 @@ gld${EMULATION_NAME}_before_parse (void)\n   config.has_shared = `if test -n \"$GENERATE_SHLIB_SCRIPT\" ; then echo TRUE ; else echo FALSE ; fi`;\n   config.separate_code = `if test \"x${SEPARATE_CODE}\" = xyes ; then echo TRUE ; else echo FALSE ; fi`;\n   link_info.check_relocs_after_open_input = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n+EOF\n+fi\n+fragment <<EOF\n   link_info.separate_code = DEFAULT_LD_Z_SEPARATE_CODE;\n }\n \n@@ -805,10 +811,16 @@ fragment <<EOF\n \tlink_info.combreloc = FALSE;\n       else if (strcmp (optarg, \"nocopyreloc\") == 0)\n \tlink_info.nocopyreloc = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n       else if (strcmp (optarg, \"relro\") == 0)\n \tlink_info.relro = TRUE;\n       else if (strcmp (optarg, \"norelro\") == 0)\n \tlink_info.relro = FALSE;\n+EOF\n+fi\n+fragment <<EOF\n       else if (strcmp (optarg, \"separate-code\") == 0)\n \tlink_info.separate_code = TRUE;\n       else if (strcmp (optarg, \"noseparate-code\") == 0)"
    },
    {
      "sha": "14446109eaef0f60301566c68f760a2e82734967",
      "filename": "ld/emultempl/linux.em",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/linux.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/linux.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/linux.em?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -52,7 +52,13 @@ gld${EMULATION_NAME}_before_parse (void)\n   input_flags.dynamic = TRUE;\n   config.has_shared = TRUE;\n   link_info.check_relocs_after_open_input = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n+EOF\n+fi\n+fragment <<EOF\n }\n \n /* Try to open a dynamic archive.  This is where we know that Linux"
    },
    {
      "sha": "70b9a705209dab11b2a11170d5d3ff8239111265",
      "filename": "ld/emultempl/scoreelf.em",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/scoreelf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/emultempl/scoreelf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/scoreelf.em?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -40,7 +40,13 @@ gld${EMULATION_NAME}_before_parse (void)\n   config.has_shared = `if test -n \"$GENERATE_SHLIB_SCRIPT\" ; then echo TRUE ; else echo FALSE ; fi`;\n   config.separate_code = `if test \"x${SEPARATE_CODE}\" = xyes ; then echo TRUE ; else echo FALSE ; fi`;\n   link_info.check_relocs_after_open_input = TRUE;\n+EOF\n+if test -n \"$COMMONPAGESIZE\"; then\n+fragment <<EOF\n   link_info.relro = DEFAULT_LD_Z_RELRO;\n+EOF\n+fi\n+fragment <<EOF\n }\n \n static void"
    },
    {
      "sha": "9e89ca1283472c2ab071fb65104007e3246f7a1a",
      "filename": "ld/testsuite/config/default.exp",
      "status": "modified",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/config/default.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/config/default.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/config/default.exp?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -76,9 +76,6 @@ if {[file exists tmpdir/libpath.exp]} {\n     }\n }\n \n-# Many ELF testcases expect that \"-z relro\" is off.\n-set ld_elf_shared_opt \"-z norelro\"\n-\n # The \"make check\" target in the Makefile passes in\n # \"CC=$(CC_FOR_TARGET)\".  But, if the user invokes runtest directly\n # (as when testing an installed linker), these flags may not be set.  "
    },
    {
      "sha": "1e9175c67de766d1c3b71bacf6b862a28b43f876",
      "filename": "ld/testsuite/ld-elf/pr16322.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr16322.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr16322.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr16322.d?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -2,6 +2,7 @@\n #readelf: -l --wide\n #target: *-*-linux-gnu *-*-gnu* *-*-nacl* arm*-*-uclinuxfdpiceabi\n #xfail: ![check_shared_lib_support] \n+#xfail: ![check_relro_support]\n \n #...\n   GNU_RELRO .*"
    },
    {
      "sha": "2bfa40375671b6ed8ab78245b23cc8f23981a4c2",
      "filename": "ld/testsuite/ld-elf/pr22393-1a.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr22393-1a.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr22393-1a.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr22393-1a.d?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -3,6 +3,7 @@\n #readelf: -l --wide\n #target: *-*-linux-gnu *-*-gnu* *-*-nacl* arm*-*-uclinuxfdpiceabi\n #xfail: ![check_shared_lib_support] \n+#xfail: ![check_relro_support]\n \n #failif\n #..."
    },
    {
      "sha": "96d8bc01b97787254958fe2dbc4fb6f39837340f",
      "filename": "ld/testsuite/ld-elf/pr22393-1b.d",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr22393-1b.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/pr22393-1b.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/pr22393-1b.d?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -3,6 +3,7 @@\n #readelf: -l --wide\n #target: *-*-linux-gnu *-*-gnu* *-*-nacl* arm*-*-uclinuxfdpiceabi\n #xfail: ![check_shared_lib_support] \n+#xfail: ![check_relro_support]\n \n #failif\n #..."
    },
    {
      "sha": "8f4ed71de5576a907fc658ef6eb93fc0a5dbd383",
      "filename": "ld/testsuite/ld-elf/shared.exp",
      "status": "modified",
      "additions": 11,
      "deletions": 15,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/ld-elf/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elf/shared.exp?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -454,16 +454,6 @@ run_ld_link_tests [list \\\n \t{pr20995b.s} {} \"pr20995.so\"] \\\n ]\n \n-# xfail on arm*-*-eabi*.  The list can be enlarged to those targets that\n-# don't support GNU_RELRO.  For more details, please see discussions at:\n-#   https://sourceware.org/ml/binutils/2017-01/msg00441.html\n-run_ld_link_tests [list \\\n-    [list \"Build pr20995-2.so\" \\\n-\t\"-shared -z relro\" \"\" \"$AFLAGS_PIC\" \\\n-\t{pr20995c.s} {{readelf {-l --wide} pr20995-2so.r}} \"pr20995-2.so\"] \\\n-] \"tic6x-*-*\" \"arm*-*-eabi*\" \"hppa*64*-*-hpux*\" \"aarch64*-*-elf*\" \\\n-  \"*-*-lynxos*\" \"arm*-*-nto*\" \"i?86-*-nto*\" \"sh*-*-nto*\"\n-\n # These targets don't copy dynamic variables into .bss.\n setup_xfail \"alpha-*-*\" \"bfin-*-*\" \"ia64-*-*\" \"xtensa-*-*\"\n # or don't have .data.rel.ro\n@@ -474,16 +464,22 @@ run_ld_link_tests [list \\\n \t\"$LFLAGS\" \"tmpdir/pr20995.so\" \"$AFLAGS_NONPIC\" \\\n \t{pr20995a.s} {{readelf {-S --wide} pr20995.r}} \"pr20995\"]]\n \n-# xfail on arm*-*-eabi* is particularly because of no support of GNU_RELRO.\n-# Please see the link above for details.\n-setup_xfail \"alpha-*-*\" \"bfin-*-*\" \"ia64-*-*\" \"xtensa-*-*\" \"arm*-*-eabi*\"\n-setup_xfail \"hppa*64*-*-hpux*\" \"aarch64*-*-elf*\" \"tic6x-*-*\"\n+# xfail on targets that don't support GNU_RELRO.\n+#   For more details, please see discussions at:\n+#   https://sourceware.org/ml/binutils/2017-01/msg00441.html\n+run_ld_link_tests [list \\\n+    [list \"Build pr20995-2.so\" \\\n+\t\"-shared -z relro\" \"\" \"$AFLAGS_PIC\" \\\n+\t{pr20995c.s} {{readelf {-l --wide} pr20995-2so.r}} \"pr20995-2.so\"] \\\n+] {![check_relro_support]}\n+\n+setup_xfail alpha-*-* xtensa-*-*\n run_ld_link_tests [list \\\n     [list \\\n \t\"pr20995-2\" \\\n \t\"$LFLAGS\" \"tmpdir/pr20995-2.so\" \"$AFLAGS_NONPIC\" \\\n \t{pr20995a.s} {{readelf {-S --wide} pr20995.r}} \"pr20995-2\"]\n-] \"*-*-lynxos*\" \"arm*-*-nto*\" \"i?86-*-nto*\" \"sh*-*-nto*\"\n+] {![check_relro_support]}\n \n run_ld_link_tests [list \\\n     [list \"Build pr22374 shared library\" \\"
    },
    {
      "sha": "0a256c2395faa1df515e253c8a3b90f48ce2f702",
      "filename": "ld/testsuite/lib/ld-lib.exp",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/lib/ld-lib.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5fd104addfddb68844fb8df67be832ee98ad9888/ld/testsuite/lib/ld-lib.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/lib/ld-lib.exp?ref=5fd104addfddb68844fb8df67be832ee98ad9888",
      "patch": "@@ -463,12 +463,10 @@ proc run_ld_link_tests { ldtests args } {\n     global CFLAGS\n     global runtests\n     global exec_output\n-    global ld_elf_shared_opt\n \n-    if { [is_elf_format] && [check_shared_lib_support] } {\n-\tset ld_extra_opt \"$ld_elf_shared_opt\"\n-    } else {\n-\tset ld_extra_opt \"\"\n+    set ld_extra_opt \"\"\n+    if [check_relro_support] {\n+\tset ld_extra_opt \"-z norelro\"\n     }\n \n     foreach testitem $ldtests {"
    }
  ]
}