{
  "sha": "5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWE3Y2Y1Mjc5NGU0Mjg0YTlhYjdlYTFhOGI2YzZhZThkZTk0YTI3Ng==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-13T11:03:05Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2020-11-13T13:51:09Z"
    },
    "message": "gdb: delete a couple of declarations from f-lang.h\n\nOne declaration in f-lang.h is for a function that doesn't even exist,\nanother is for a function that is only used within f-lang.c.\n\nOne declaration is deleted, the other function I make static in\nf-lang.c.\n\ngdb/ChangeLog:\n\n\t* f-lang.c (fortran_argument_convert): Add declaration.  Add\n\theader comment, taken from f-lang.h.  Make static.\n\t* f-lang.h (f77_get_dynamic_array_length): Delete declaration.\n\t(fortran_argument_convert): Delete declaration.",
    "tree": {
      "sha": "6064e76fde2093b02b876342220e180a6bd388a5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6064e76fde2093b02b876342220e180a6bd388a5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "48f4d8ce966e20e1e759e29ca8cf05a5dd328883",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/48f4d8ce966e20e1e759e29ca8cf05a5dd328883",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/48f4d8ce966e20e1e759e29ca8cf05a5dd328883"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 24,
    "deletions": 21
  },
  "files": [
    {
      "sha": "2d46ac9dac3eab38dd64f97c2f7fdfad03e1aac1",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
      "patch": "@@ -1,3 +1,10 @@\n+2020-11-13  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (fortran_argument_convert): Add declaration.  Add\n+\theader comment, taken from f-lang.h.  Make static.\n+\t* f-lang.h (f77_get_dynamic_array_length): Delete declaration.\n+\t(fortran_argument_convert): Delete declaration.\n+\n 2020-11-12  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* ada-exp.y (find_primitive_type): Make parameter const."
    },
    {
      "sha": "ec5d6d181cf507690779b36da53ed4da8399fa21",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 17,
      "deletions": 2,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
      "patch": "@@ -41,6 +41,9 @@\n \n /* Local functions */\n \n+static struct value *fortran_argument_convert (struct value *value,\n+\t\t\t\t\t       bool is_artificial);\n+\n /* Return the encoding that should be used for the character type\n    TYPE.  */\n \n@@ -844,9 +847,21 @@ _initialize_f_language ()\n   f_type_data = gdbarch_data_register_post_init (build_fortran_types);\n }\n \n-/* See f-lang.h.  */\n+/* Ensures that function argument VALUE is in the appropriate form to\n+   pass to a Fortran function.  Returns a possibly new value that should\n+   be used instead of VALUE.\n+\n+   When IS_ARTIFICIAL is true this indicates an artificial argument,\n+   e.g. hidden string lengths which the GNU Fortran argument passing\n+   convention specifies as being passed by value.\n \n-struct value *\n+   When IS_ARTIFICIAL is false, the argument is passed by pointer.  If the\n+   value is already in target memory then return a value that is a pointer\n+   to VALUE.  If VALUE is not in memory (e.g. an integer literal), allocate\n+   space in the target, copy VALUE in, and return a pointer to the in\n+   memory copy.  */\n+\n+static struct value *\n fortran_argument_convert (struct value *value, bool is_artificial)\n {\n   if (!is_artificial)"
    },
    {
      "sha": "8e693eb25e046ed4299e61cad1f8b407805f67d9",
      "filename": "gdb/f-lang.h",
      "status": "modified",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/f-lang.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276/gdb/f-lang.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.h?ref=5a7cf52794e4284a9ab7ea1a8b6c6ae8de94a276",
      "patch": "@@ -312,8 +312,6 @@ extern LONGEST f77_get_upperbound (struct type *);\n \n extern LONGEST f77_get_lowerbound (struct type *);\n \n-extern void f77_get_dynamic_array_length (struct type *);\n-\n extern int calc_f77_array_dims (struct type *);\n \n \n@@ -341,23 +339,6 @@ struct builtin_f_type\n /* Return the Fortran type table for the specified architecture.  */\n extern const struct builtin_f_type *builtin_f_type (struct gdbarch *gdbarch);\n \n-/* Ensures that function argument VALUE is in the appropriate form to\n-   pass to a Fortran function.  Returns a possibly new value that should\n-   be used instead of VALUE.\n-\n-   When IS_ARTIFICIAL is true this indicates an artificial argument,\n-   e.g. hidden string lengths which the GNU Fortran argument passing\n-   convention specifies as being passed by value.\n-\n-   When IS_ARTIFICIAL is false, the argument is passed by pointer.  If the\n-   value is already in target memory then return a value that is a pointer\n-   to VALUE.  If VALUE is not in memory (e.g. an integer literal), allocate\n-   space in the target, copy VALUE in, and return a pointer to the in\n-   memory copy.  */\n-\n-extern struct value *fortran_argument_convert (struct value *value,\n-\t\t\t\t\t       bool is_artificial);\n-\n /* Ensures that function argument TYPE is appropriate to inform the debugger\n    that ARG should be passed as a pointer.  Returns the potentially updated\n    argument type."
    }
  ]
}