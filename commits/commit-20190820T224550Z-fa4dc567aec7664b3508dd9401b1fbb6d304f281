{
  "sha": "fa4dc567aec7664b3508dd9401b1fbb6d304f281",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZmE0ZGM1NjdhZWM3NjY0YjM1MDhkZDk0MDFiMWZiYjZkMzA0ZjI4MQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-13T22:24:48Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-20T22:45:50Z"
    },
    "message": "Remove indirection from tui_data_window::regs_content\n\ntui_data_window::regs_content is currently a vector of unique_ptr.\nHowever, due to the way this is managed now, there is no need to keep\nthe pointers -- it can simply be a vector of the objects themselves.\nThis patch removes this extra layer of indirection.\n\n2019-08-20  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-regs.h (struct tui_data_window): Use\n\tDISABLE_COPY_AND_ASSIGN.\n\t<regs_content>: Change type, removing unique_ptr.\n\t<tui_data_window>: Add move constructor.\n\t* tui/tui-regs.c (tui_data_window::show_registers)\n\t(tui_data_window::show_register_group)\n\t(tui_data_window::display_registers_from)\n\t(tui_data_window::display_registers_from)\n\t(tui_data_window::first_data_item_displayed)\n\t(tui_data_window::delete_data_content_windows)\n\t(tui_data_window::rerender, tui_data_window::refresh_window)\n\t(tui_data_window::check_register_values): Update.",
    "tree": {
      "sha": "e0af80ec79a5725116d3bad98caa8366432ac500",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/e0af80ec79a5725116d3bad98caa8366432ac500"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/fa4dc567aec7664b3508dd9401b1fbb6d304f281",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa4dc567aec7664b3508dd9401b1fbb6d304f281",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/fa4dc567aec7664b3508dd9401b1fbb6d304f281",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/fa4dc567aec7664b3508dd9401b1fbb6d304f281/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ca02d7c8003ad020bb39f0b26dc93b661be67132",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ca02d7c8003ad020bb39f0b26dc93b661be67132"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 38,
    "deletions": 34
  },
  "files": [
    {
      "sha": "b49f8fde3751f10898c8b9c4f9d28a1367a63f0f",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=fa4dc567aec7664b3508dd9401b1fbb6d304f281",
      "patch": "@@ -1,3 +1,18 @@\n+2019-08-20  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-regs.h (struct tui_data_window): Use\n+\tDISABLE_COPY_AND_ASSIGN.\n+\t<regs_content>: Change type, removing unique_ptr.\n+\t<tui_data_window>: Add move constructor.\n+\t* tui/tui-regs.c (tui_data_window::show_registers)\n+\t(tui_data_window::show_register_group)\n+\t(tui_data_window::display_registers_from)\n+\t(tui_data_window::display_registers_from)\n+\t(tui_data_window::first_data_item_displayed)\n+\t(tui_data_window::delete_data_content_windows)\n+\t(tui_data_window::rerender, tui_data_window::refresh_window)\n+\t(tui_data_window::check_register_values): Update.\n+\n 2019-08-20  Tom Tromey  <tom@tromey.com>\n \n \t* tui/tui-regs.h (struct tui_data_window) <show_registers,"
    },
    {
      "sha": "675e1867d4be07cd511465d8795b3bf33ead6d19",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 18,
      "deletions": 33,
      "changes": 51,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=fa4dc567aec7664b3508dd9401b1fbb6d304f281",
      "patch": "@@ -163,10 +163,7 @@ tui_data_window::show_registers (struct reggroup *group)\n \n       /* Clear all notation of changed values.  */\n       for (auto &&data_item_win : regs_content)\n-\t{\n-\t  if (data_item_win != nullptr)\n-\t    data_item_win->highlight = false;\n-\t}\n+\tdata_item_win.highlight = false;\n       current_group = group;\n       display_all_data ();\n     }\n@@ -214,16 +211,7 @@ tui_data_window::show_register_group (struct reggroup *group,\n       nr_regs++;\n     }\n \n-  if (!refresh_values_only)\n-    regs_content.clear ();\n-\n-  if (nr_regs < regs_content.size ())\n-    regs_content.resize (nr_regs);\n-  else\n-    {\n-      for (int i = regs_content.size (); i < nr_regs; ++i)\n-\tregs_content.emplace_back (new tui_data_item_window ());\n-    }\n+  regs_content.resize (nr_regs);\n \n   /* Now set the register names and values.  */\n   pos = 0;\n@@ -242,7 +230,7 @@ tui_data_window::show_register_group (struct reggroup *group,\n       if (name == 0 || *name == '\\0')\n \tcontinue;\n \n-      data_item_win = regs_content[pos].get ();\n+      data_item_win = &regs_content[pos];\n       if (data_item_win)\n \t{\n \t  if (!refresh_values_only)\n@@ -273,7 +261,7 @@ tui_data_window::display_registers_from (int start_element_no)\n           int len;\n \n           len = 0;\n-          p = data_item_win->content.get ();\n+          p = data_item_win.content.get ();\n           if (p != 0)\n \t    len = strlen (p);\n \n@@ -301,7 +289,7 @@ tui_data_window::display_registers_from (int start_element_no)\n \t      struct tui_data_item_window *data_item_win;\n \n \t      /* Create the window if necessary.  */\n-\t      data_item_win = regs_content[i].get ();\n+\t      data_item_win = &regs_content[i];\n               if (data_item_win->handle != NULL\n                   && (data_item_win->height != 1\n                       || data_item_win->width != item_win_width\n@@ -408,7 +396,7 @@ tui_data_window::first_data_item_displayed ()\n     {\n       struct tui_gen_win_info *data_item_win;\n \n-      data_item_win = regs_content[i].get ();\n+      data_item_win = &regs_content[i];\n       if (data_item_win->is_visible ())\n \treturn i;\n     }\n@@ -423,8 +411,8 @@ tui_data_window::delete_data_content_windows ()\n {\n   for (auto &&win : regs_content)\n     {\n-      tui_delete_win (win->handle);\n-      win->handle = NULL;\n+      tui_delete_win (win.handle);\n+      win.handle = NULL;\n     }\n }\n \n@@ -523,8 +511,8 @@ tui_data_window::rerender ()\n   /* Delete all data item windows.  */\n   for (auto &&win : regs_content)\n     {\n-      tui_delete_win (win->handle);\n-      win->handle = NULL;\n+      tui_delete_win (win.handle);\n+      win.handle = NULL;\n     }\n   display_all_data ();\n }\n@@ -536,10 +524,7 @@ tui_data_window::refresh_window ()\n {\n   tui_gen_win_info::refresh_window ();\n   for (auto &&win : regs_content)\n-    {\n-      if (win != NULL)\n-\twin->refresh_window ();\n-    }\n+    win.refresh_window ();\n }\n \n /* This function check all displayed registers for changes in values,\n@@ -552,18 +537,18 @@ tui_data_window::check_register_values (struct frame_info *frame)\n     show_registers (current_group);\n   else\n     {\n-      for (auto &&data_item_win_ptr : regs_content)\n+      for (auto &&data_item_win : regs_content)\n \t{\n \t  int was_hilighted;\n \n-\t  was_hilighted = data_item_win_ptr->highlight;\n+\t  was_hilighted = data_item_win.highlight;\n \n-\t  tui_get_register (frame, data_item_win_ptr.get (),\n-\t\t\t    data_item_win_ptr->item_no,\n-\t\t\t    &data_item_win_ptr->highlight);\n+\t  tui_get_register (frame, &data_item_win,\n+\t\t\t    data_item_win.item_no,\n+\t\t\t    &data_item_win.highlight);\n \n-\t  if (data_item_win_ptr->highlight || was_hilighted)\n-\t    tui_display_register (data_item_win_ptr.get ());\n+\t  if (data_item_win.highlight || was_hilighted)\n+\t    tui_display_register (&data_item_win);\n \t}\n     }\n }"
    },
    {
      "sha": "24ec587ea2e94ded241f0bb56e05ee52649e486a",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/fa4dc567aec7664b3508dd9401b1fbb6d304f281/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=fa4dc567aec7664b3508dd9401b1fbb6d304f281",
      "patch": "@@ -33,6 +33,10 @@ struct tui_data_item_window : public tui_gen_win_info\n   {\n   }\n \n+  DISABLE_COPY_AND_ASSIGN (tui_data_item_window);\n+\n+  tui_data_item_window (tui_data_item_window &&) = default;\n+\n   const char *name = nullptr;\n   /* The register number, or data display number.  */\n   int item_no = -1;\n@@ -60,7 +64,7 @@ struct tui_data_window : public tui_win_info\n   }\n \n   /* Windows that are used to display registers.  */\n-  std::vector<std::unique_ptr<tui_data_item_window>> regs_content;\n+  std::vector<tui_data_item_window> regs_content;\n   int regs_column_count = 0;\n   /* Should regs be displayed at all?  */\n   bool display_regs = false;"
    }
  ]
}