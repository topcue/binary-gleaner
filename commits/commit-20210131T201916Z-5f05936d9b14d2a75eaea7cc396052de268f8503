{
  "sha": "5f05936d9b14d2a75eaea7cc396052de268f8503",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NWYwNTkzNmQ5YjE0ZDJhNzVlYWVhN2NjMzk2MDUyZGUyNjhmODUwMw==",
  "commit": {
    "author": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-31T20:17:18Z"
    },
    "committer": {
      "name": "Mike Frysinger",
      "email": "vapier@gentoo.org",
      "date": "2021-01-31T20:19:16Z"
    },
    "message": "sim: v850: cleanup build warnings\n\nThis port only had one minor warning left in it, so fix it and then\nenable -Werror behavior by deleting the macro call.  We'll use the\ncommon default now (which is -Werror).",
    "tree": {
      "sha": "3ea7565eb6edcddbe30f846a33bda535ad8d3aa0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/3ea7565eb6edcddbe30f846a33bda535ad8d3aa0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/5f05936d9b14d2a75eaea7cc396052de268f8503",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f05936d9b14d2a75eaea7cc396052de268f8503",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/5f05936d9b14d2a75eaea7cc396052de268f8503",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/5f05936d9b14d2a75eaea7cc396052de268f8503/comments",
  "author": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vapier",
    "id": 176950,
    "node_id": "MDQ6VXNlcjE3Njk1MA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vapier",
    "html_url": "https://github.com/vapier",
    "followers_url": "https://api.github.com/users/vapier/followers",
    "following_url": "https://api.github.com/users/vapier/following{/other_user}",
    "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vapier/subscriptions",
    "organizations_url": "https://api.github.com/users/vapier/orgs",
    "repos_url": "https://api.github.com/users/vapier/repos",
    "events_url": "https://api.github.com/users/vapier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vapier/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "44b30b7f0e6fccb3fc678c84a8c2ad7d19b4a679",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/44b30b7f0e6fccb3fc678c84a8c2ad7d19b4a679",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/44b30b7f0e6fccb3fc678c84a8c2ad7d19b4a679"
    }
  ],
  "stats": {
    "total": 231,
    "additions": 124,
    "deletions": 107
  },
  "files": [
    {
      "sha": "6be68b3c26248414ba48d2d88df9386526801267",
      "filename": "sim/v850/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/ChangeLog?ref=5f05936d9b14d2a75eaea7cc396052de268f8503",
      "patch": "@@ -1,3 +1,9 @@\n+2021-01-31  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* simops.c: Include stdlib.h.\n+\t* configure.ac (SIM_AC_OPTION_WARNINGS): Delete call.\n+\t* configure: Regenerate.\n+\n 2021-01-31  Mike Frysinger  <vapier@gentoo.org>\n \n \t* simops.c (OP_10007E0): Change reterr to RETERR."
    },
    {
      "sha": "d0f21da30ff097d9cb5938ecf322a4399041aa6f",
      "filename": "sim/v850/configure",
      "status": "modified",
      "additions": 117,
      "deletions": 106,
      "changes": 223,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure?ref=5f05936d9b14d2a75eaea7cc396052de268f8503",
      "patch": "@@ -782,11 +782,11 @@ with_pkgversion\n with_bugurl\n enable_sim_endian\n enable_sim_alignment\n+enable_sim_reserved_bits\n+enable_sim_bitsize\n enable_werror\n enable_build_warnings\n enable_sim_build_warnings\n-enable_sim_reserved_bits\n-enable_sim_bitsize\n '\n       ac_precious_vars='build_alias\n host_alias\n@@ -1441,15 +1441,15 @@ Optional Features:\n   --enable-sim-alignment=align\n                           Specify strict, nonstrict or forced alignment of\n                           memory accesses\n+  --enable-sim-reserved-bits\n+                          Specify whether to check reserved bits in\n+                          instruction\n+  --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n   --enable-werror         treat compile warnings as errors\n   --enable-build-warnings enable build-time compiler warnings if gcc is used\n   --enable-sim-build-warnings\n                           enable SIM specific build-time compiler warnings if\n                           gcc is used\n-  --enable-sim-reserved-bits\n-                          Specify whether to check reserved bits in\n-                          instruction\n-  --enable-sim-bitsize=N  Specify target bitsize (32 or 64)\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -6911,7 +6911,15 @@ fi\n test -z \"$AR\" && AR=ar\n if test -n \"$plugin_option\"; then\n   if $AR --help 2>&1 | grep -q \"\\--plugin\"; then\n-    AR=\"$AR $plugin_option\"\n+    touch conftest.c\n+    $AR $plugin_option rc conftest.a conftest.c\n+    if test \"$?\" != 0; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: Failed: $AR $plugin_option rc\" >&5\n+$as_echo \"$as_me: WARNING: Failed: $AR $plugin_option rc\" >&2;}\n+    else\n+      AR=\"$AR $plugin_option\"\n+    fi\n+    rm -f conftest.*\n   fi\n fi\n test -z \"$AR_FLAGS\" && AR_FLAGS=cru\n@@ -12935,7 +12943,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12938 \"configure\"\n+#line 12946 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13041,7 +13049,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13044 \"configure\"\n+#line 13052 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13684,103 +13692,6 @@ fi\n fi\n \n \n-# Check whether --enable-werror was given.\n-if test \"${enable_werror+set}\" = set; then :\n-  enableval=$enable_werror; case \"${enableval}\" in\n-     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n-     no | n)  ERROR_ON_WARNING=\"no\" ;;\n-     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n-   esac\n-fi\n-\n-\n-# Enable -Werror by default when using gcc\n-if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n-    ERROR_ON_WARNING=yes\n-fi\n-\n-WERROR_CFLAGS=\"\"\n-\n-build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n--Wpointer-sign \\\n--Wno-unused -Wunused-value -Wunused-function \\\n--Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n--Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n--Wold-style-declaration -Wold-style-definition\"\n-\n-# Enable -Wno-format by default when using gcc on mingw since many\n-# GCC versions complain about %I64.\n-case \"${host}\" in\n-  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n-  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n-esac\n-\n-# Check whether --enable-build-warnings was given.\n-if test \"${enable_build_warnings+set}\" = set; then :\n-  enableval=$enable_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-# Check whether --enable-sim-build-warnings was given.\n-if test \"${enable_sim_build_warnings+set}\" = set; then :\n-  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n-  yes)\t;;\n-  no)\tbuild_warnings=\"-w\";;\n-  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${build_warnings} ${t}\";;\n-  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n-        build_warnings=\"${t} ${build_warnings}\";;\n-  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n-esac\n-if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n-  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n-fi\n-fi\n-WARN_CFLAGS=\"\"\n-if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n-then\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n-$as_echo_n \"checking compiler warning flags... \" >&6; }\n-    # Separate out the -Werror flag as some files just cannot be\n-    # compiled with it enabled.\n-    for w in ${build_warnings}; do\n-\tcase $w in\n-\t-Werr*) WERROR_CFLAGS=-Werror ;;\n-\t*) # Check that GCC accepts it\n-\t    saved_CFLAGS=\"$CFLAGS\"\n-\t    CFLAGS=\"$CFLAGS $w\"\n-\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-\t    CFLAGS=\"$saved_CFLAGS\"\n-\tesac\n-    done\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n-$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n-fi\n-\n-\n default_sim_reserved_bits=\"1\"\n # Check whether --enable-sim-reserved-bits was given.\n if test \"${enable_sim_reserved_bits+set}\" = set; then :\n@@ -13882,6 +13793,106 @@ done\n \n \n \n+# Check whether --enable-werror was given.\n+if test \"${enable_werror+set}\" = set; then :\n+  enableval=$enable_werror; case \"${enableval}\" in\n+     yes | y) ERROR_ON_WARNING=\"yes\" ;;\n+     no | n)  ERROR_ON_WARNING=\"no\" ;;\n+     *) as_fn_error $? \"bad value ${enableval} for --enable-werror\" \"$LINENO\" 5 ;;\n+   esac\n+fi\n+\n+\n+# Enable -Werror by default when using gcc\n+if test \"${GCC}\" = yes -a -z \"${ERROR_ON_WARNING}\" ; then\n+    ERROR_ON_WARNING=yes\n+fi\n+\n+WERROR_CFLAGS=\"\"\n+  if test \"${ERROR_ON_WARNING}\" = yes ; then\n+    WERROR_CFLAGS=\"-Werror\"\n+  fi\n+\n+build_warnings=\"-Wall -Wdeclaration-after-statement -Wpointer-arith \\\n+-Wpointer-sign \\\n+-Wno-unused -Wunused-value -Wunused-function \\\n+-Wno-switch -Wno-char-subscripts -Wmissing-prototypes\n+-Wdeclaration-after-statement -Wempty-body -Wmissing-parameter-type \\\n+-Wold-style-declaration -Wold-style-definition\"\n+\n+# Enable -Wno-format by default when using gcc on mingw since many\n+# GCC versions complain about %I64.\n+case \"${host}\" in\n+  *-*-mingw32*) build_warnings=\"$build_warnings -Wno-format\" ;;\n+  *) build_warnings=\"$build_warnings -Wformat-nonliteral\" ;;\n+esac\n+\n+# Check whether --enable-build-warnings was given.\n+if test \"${enable_build_warnings+set}\" = set; then :\n+  enableval=$enable_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+# Check whether --enable-sim-build-warnings was given.\n+if test \"${enable_sim_build_warnings+set}\" = set; then :\n+  enableval=$enable_sim_build_warnings; case \"${enableval}\" in\n+  yes)\t;;\n+  no)\tbuild_warnings=\"-w\";;\n+  ,*)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${build_warnings} ${t}\";;\n+  *,)   t=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`\n+        build_warnings=\"${t} ${build_warnings}\";;\n+  *)    build_warnings=`echo \"${enableval}\" | sed -e \"s/,/ /g\"`;;\n+esac\n+if test x\"$silent\" != x\"yes\" && test x\"$build_warnings\" != x\"\"; then\n+  echo \"Setting GDB specific compiler warning flags = $build_warnings\" 6>&1\n+fi\n+fi\n+WARN_CFLAGS=\"\"\n+if test \"x${build_warnings}\" != x -a \"x$GCC\" = xyes\n+then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking compiler warning flags\" >&5\n+$as_echo_n \"checking compiler warning flags... \" >&6; }\n+    # Separate out the -Werror flag as some files just cannot be\n+    # compiled with it enabled.\n+    for w in ${build_warnings}; do\n+\tcase $w in\n+\t-Werr*) WERROR_CFLAGS=-Werror ;;\n+\t*) # Check that GCC accepts it\n+\t    saved_CFLAGS=\"$CFLAGS\"\n+\t    CFLAGS=\"$CFLAGS $w\"\n+\t    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  WARN_CFLAGS=\"${WARN_CFLAGS} $w\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t    CFLAGS=\"$saved_CFLAGS\"\n+\tesac\n+    done\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&5\n+$as_echo \"${WARN_CFLAGS} ${WERROR_CFLAGS}\" >&6; }\n+fi\n+\n+\n cgen_breaks=\"\"\n if grep CGEN_MAINT $srcdir/Makefile.in >/dev/null; then\n cgen_breaks=\"break cgen_rtx_error\";"
    },
    {
      "sha": "25350d9f7858a779950b9094b1f67a71949c3dcd",
      "filename": "sim/v850/configure.ac",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/configure.ac?ref=5f05936d9b14d2a75eaea7cc396052de268f8503",
      "patch": "@@ -6,7 +6,6 @@ SIM_AC_COMMON\n \n SIM_AC_OPTION_ENDIAN(LITTLE)\n SIM_AC_OPTION_ALIGNMENT(,NONSTRICT_ALIGNMENT)\n-SIM_AC_OPTION_WARNINGS(no)\n SIM_AC_OPTION_RESERVED_BITS\n SIM_AC_OPTION_BITSIZE(32,31)\n "
    },
    {
      "sha": "bd23f92aba4d56578940070e4969d1099b39c82a",
      "filename": "sim/v850/simops.c",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/simops.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/5f05936d9b14d2a75eaea7cc396052de268f8503/sim/v850/simops.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/sim/v850/simops.c?ref=5f05936d9b14d2a75eaea7cc396052de268f8503",
      "patch": "@@ -11,6 +11,7 @@\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n+#include <stdlib.h>\n #include <string.h>\n \n #include \"targ-vals.h\""
    }
  ]
}