{
  "sha": "02a79309925c71591d825f8fc4e2b79ce0faa45b",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MDJhNzkzMDk5MjVjNzE1OTFkODI1ZjhmYzRlMmI3OWNlMGZhYTQ1Yg==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-12T16:10:56Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-02-24T16:58:02Z"
    },
    "message": "gdb: add a new 'maint info target-sections' command\n\nWe already have a command 'maint info sections', this command prints\nall sections from all known object files.\n\nHowever, GDB maintains a second section table internally.  This\nsection table is used when GDB wants to read directly from an object\nfile rather than actually reading memory on the target.  As such only\nsome sections (the allocatable ones) are added to this secondary\nsection table.\n\nI recently ran into a situation where some of GDB's optimisations for\nreading directly from the files were not working.  In 'maint info\nsections' I could see that GDB knew about the object file, and did\nknow about the sections that it _should_ have been reading from.  But\nI couldn't ask GDB which sections it had copied into its secondary\nsection table.\n\nThis commit adds a new command 'maint info target-sections' that fills\nthis gap.  This command lists only those sections that GDB has copied\ninto its secondary table.\n\nYou'll notice that the testsuite includes a comment indicating that\nthere's a bug in GDB.  Normally this is not something I would add to\nthe testsuite, instead we should raise an actual bugzilla bug and then\nmark an xfail, however, a later patch in this series will remove this\ncomment once the actual bug in GDB is fixed.\n\ngdb/ChangeLog:\n\n\t* NEWS: Mention new 'maint info target-sections' command.\n\t* maint.c (maintenance_info_target_sections): New function.\n\t(_initialize_maint_cmds): Register new command.\n\ngdb/doc/ChangeLog:\n\n\t* gdb.texinfo (Files): Document new 'maint info target-sections'\n\tcommand.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.base/maint-info-sections.exp: Add new tests.\n\t(check_maint_info_target_sections_output): New proc.",
    "tree": {
      "sha": "45cef59400fc764b30f655e1933f46b30d2ed087",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/45cef59400fc764b30f655e1933f46b30d2ed087"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/02a79309925c71591d825f8fc4e2b79ce0faa45b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02a79309925c71591d825f8fc4e2b79ce0faa45b",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/02a79309925c71591d825f8fc4e2b79ce0faa45b",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/02a79309925c71591d825f8fc4e2b79ce0faa45b/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "895b7b4e4bed9eee9d4a3d55bee876055736bfd3",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/895b7b4e4bed9eee9d4a3d55bee876055736bfd3",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/895b7b4e4bed9eee9d4a3d55bee876055736bfd3"
    }
  ],
  "stats": {
    "total": 154,
    "additions": 153,
    "deletions": 1
  },
  "files": [
    {
      "sha": "41e480ab6d2ff5b4e1be6b1b55480a057dc44cee",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -1,3 +1,9 @@\n+2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* NEWS: Mention new 'maint info target-sections' command.\n+\t* maint.c (maintenance_info_target_sections): New function.\n+\t(_initialize_maint_cmds): Register new command.\n+\n 2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* riscv-tdep.c (riscv_features_from_gdbarch_info): Rename to..."
    },
    {
      "sha": "7f5a745d0c091b3d9c7a2be657d41bcc4de3759a",
      "filename": "gdb/NEWS",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/NEWS",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/NEWS",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/NEWS?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -47,6 +47,9 @@ maintenance flush register-cache\n maintenance flush dcache\n   A new command to flush the dcache.\n \n+maintenance info target-sections\n+  Print GDB's internal target sections table.\n+\n * Changed commands\n \n break [PROBE_MODIFIER] [LOCATION] [thread THREADNUM]"
    },
    {
      "sha": "add31a0cc394773c1f21423d033ae9984ccd6178",
      "filename": "gdb/doc/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/doc/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/doc/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/ChangeLog?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.texinfo (Files): Document new 'maint info target-sections'\n+\tcommand.\n+\n 2021-02-17  Lancelot Six  <lsix@lancelotsix.com>\n \n \tPR cli/17290"
    },
    {
      "sha": "80ccf74a0497b423e8dce9fa7185693f135b933d",
      "filename": "gdb/doc/gdb.texinfo",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/doc/gdb.texinfo",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/doc/gdb.texinfo",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/doc/gdb.texinfo?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -20668,6 +20668,14 @@ COFF shared library information.\n Section contains common symbols.\n @end table\n @end table\n+\n+@kindex maint info target-sections\n+@item maint info target-sections\n+This command prints @value{GDBN}'s internal section table.  For each\n+target @value{GDBN} maintains a table containing the allocatable\n+sections from all currently mapped objects, along with information\n+about where the section is mapped.\n+\n @kindex set trust-readonly-sections\n @cindex read-only sections\n @item set trust-readonly-sections on"
    },
    {
      "sha": "bfdd1d5ca3ef7d2cff682677d1399911cb284781",
      "filename": "gdb/maint.c",
      "status": "modified",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/maint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/maint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/maint.c?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -464,6 +464,56 @@ maintenance_info_sections (const char *arg, int from_tty)\n     maint_print_all_sections (_(\"Core file: \"), core_bfd, nullptr, arg);\n }\n \n+/* Implement the \"maintenance info target-sections\" command.  */\n+\n+static void\n+maintenance_info_target_sections (const char *arg, int from_tty)\n+{\n+  bfd *abfd = nullptr;\n+  int digits = 0;\n+  const target_section_table *table\n+    = target_get_section_table (current_top_target ());\n+  if (table == nullptr)\n+    return;\n+\n+  for (const target_section &sec : *table)\n+    {\n+      if (abfd == nullptr || sec.the_bfd_section->owner != abfd)\n+\t{\n+\t  abfd = sec.the_bfd_section->owner;\n+\t  digits = std::max (index_digits (gdb_bfd_count_sections (abfd)),\n+\t\t\t     digits);\n+\t}\n+    }\n+\n+  struct gdbarch *gdbarch = nullptr;\n+  int addr_size = 0;\n+  abfd = nullptr;\n+  for (const target_section &sec : *table)\n+   {\n+      if (sec.the_bfd_section->owner != abfd)\n+\t{\n+\t  abfd = sec.the_bfd_section->owner;\n+\t  gdbarch = gdbarch_from_bfd (abfd);\n+\t  addr_size = gdbarch_addr_bit (gdbarch) / 8;\n+\n+\t  printf_filtered (_(\"From '%s', file type %s:\\n\"),\n+\t\t\t   bfd_get_filename (abfd), bfd_get_target (abfd));\n+\t}\n+      print_bfd_section_info (abfd,\n+\t\t\t      sec.the_bfd_section,\n+\t\t\t      nullptr,\n+\t\t\t      digits);\n+      /* The magic '8 + digits' here ensures that the 'Start' is aligned\n+\t with the output of print_bfd_section_info.  */\n+      printf_filtered (\"%*sStart: %s, End: %s, Owner token: %p\\n\",\n+\t\t       (8 + digits), \"\",\n+\t\t       hex_string_custom (sec.addr, addr_size),\n+\t\t       hex_string_custom (sec.endaddr, addr_size),\n+\t\t       sec.owner);\n+    }\n+}\n+\n static void\n maintenance_print_statistics (const char *args, int from_tty)\n {\n@@ -1122,6 +1172,15 @@ Options:\\n\\\n \t\t &maintenanceinfolist);\n   set_cmd_completer_handle_brkchars (cmd, maint_info_sections_completer);\n \n+  add_cmd (\"target-sections\", class_maintenance,\n+\t   maintenance_info_target_sections, _(\"\\\n+List GDB's internal section table.\\n\\\n+\\n\\\n+Print the current targets section list.  This is a sub-set of all\\n\\\n+sections, from all objects currently loaded.  Usually the ALLOC\\n\\\n+sectoins.\"),\n+\t   &maintenanceinfolist);\n+\n   add_basic_prefix_cmd (\"print\", class_maintenance,\n \t\t\t_(\"Maintenance command for printing GDB internal state.\"),\n \t\t\t&maintenanceprintlist, \"maintenance print \", 0,"
    },
    {
      "sha": "ddc7c183bd0c0fe8f8154b208c11bd836e634e71",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -1,3 +1,8 @@\n+2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.base/maint-info-sections.exp: Add new tests.\n+\t(check_maint_info_target_sections_output): New proc.\n+\n 2021-02-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.arch/riscv-default-tdesc.exp: New file."
    },
    {
      "sha": "17e38ebc41690e1409d4d08867a697fadbf6758d",
      "filename": "gdb/testsuite/gdb.base/maint-info-sections.exp",
      "status": "modified",
      "additions": 67,
      "deletions": 1,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/02a79309925c71591d825f8fc4e2b79ce0faa45b/gdb/testsuite/gdb.base/maint-info-sections.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.base/maint-info-sections.exp?ref=02a79309925c71591d825f8fc4e2b79ce0faa45b",
      "patch": "@@ -13,7 +13,8 @@\n # You should have received a copy of the GNU General Public License\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-# Test just for the 'maintenance info sections' command.\n+# Test just for the 'maintenance info sections' command and the\n+# 'maintenance info target-sections' command.\n \n load_lib completion-support.exp\n \n@@ -29,6 +30,65 @@ if ![runto_main] then {\n     return -1\n }\n \n+# Check the output of 'maint info target-sections' command.\n+proc check_maint_info_target_sections_output {prefix} {\n+    global hex gdb_prompt\n+\n+    with_test_prefix $prefix {\n+\t# Check the output of the 'maint info target-sections' command.\n+\t# Ensures that all the lines have the expected format, and that we see\n+\t# an auxiliary information line after every section information line.\n+\t#\n+\t# We also check that every bfd section has the ALLOC flag.\n+\tset seen_header false\n+\tset seen_a_section false\n+\tset seen_aux_info false\n+\tset expecting_aux_info false\n+\tgdb_test_multiple \"maint info target-sections\" \"\" {\n+\t    -re \"^maint info target-sections\\r\\n\" {\n+\t\t# Consume the command we sent to GDB that the terminal echo'd\n+\t\t# back.\n+\t\texp_continue\n+\t    }\n+\t    -re \"^From '\\[^\\r\\n\\]+', file type \\[^\\r\\n\\]+:\\r\\n\" {\n+\t\t# There might be more than one header, but there should be at\n+\t\t# least one.\n+\t\tset seen_header true\n+\t\tif { $expecting_aux_info } {\n+\t\t    fail $gdb_test_name\n+\t\t} else {\n+\t\t    exp_continue\n+\t\t}\n+\t    }\n+\t    -re \"^ \\\\\\[\\[0-9\\]+\\\\\\]\\\\s+$hex->$hex at $hex: \\[^*\\r\\]+\\\\yALLOC\\\\y\\[^*\\r\\]*\\r\\n\" {\n+\t\t# A bfd section description line.\n+\t\tset seen_a_section true\n+\t\tif { $expecting_aux_info } {\n+\t\t    fail $gdb_test_name\n+\t\t} else {\n+\t\t    set expecting_aux_info true\n+\t\t    exp_continue\n+\t\t}\n+\t    }\n+\t    -re \"^\\\\s+Start: $hex, End: $hex, Owner token: $hex\\r\\n\" {\n+\t\t# A target section auxiliary information line.\n+\t\tset seen_aux_info true\n+\t\tif { !$expecting_aux_info } {\n+\t\t    fail $gdb_test_name\n+\t\t} else {\n+\t\t    set expecting_aux_info false\n+\t\t    exp_continue\n+\t\t}\n+\t    }\n+\t    -re \"^$gdb_prompt $\" {\n+\t\tgdb_assert { $seen_header && $seen_a_section && $seen_aux_info }\n+\t\tgdb_assert { !$expecting_aux_info }\n+\t\tpass $gdb_test_name\n+\t    }\n+\t}\n+    }\n+}\n+\n # Check that 'maint info sections' output looks correct.  When\n # checking the lines for each section we reject section names starting\n # with a '*' character, the internal *COM*, *UND*, *ABS*, and *IND*\n@@ -128,6 +188,8 @@ gdb_test_multiple \"maint info sections DATA\" \"\" {\n     }\n }\n \n+check_maint_info_target_sections_output \"with executable\"\n+\n # Restart GDB, but don't load the executable.\n clean_restart\n \n@@ -161,6 +223,10 @@ gdb_test_multiple \"maint info sections -all-objects\" \"\" {\n     }\n }\n \n+# NOTE: We would like to check 'maint info target-sections' again\n+# here, but GDB currently doesn't display the target sections table in\n+# this case.  This is a bug and will be fixed shortly!!\n+\n # Test the command line completion on 'maint info sections'.  First\n # the command line flag.\n test_gdb_complete_unique \\"
    }
  ]
}