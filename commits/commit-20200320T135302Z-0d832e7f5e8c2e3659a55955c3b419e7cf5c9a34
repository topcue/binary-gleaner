{
  "sha": "0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MGQ4MzJlN2Y1ZThjMmUzNjU5YTU1OTU1YzNiNDE5ZTdjZjVjOWEzNA==",
  "commit": {
    "author": {
      "name": "Sergey Belyashov",
      "email": "sergey.belyashov@gmail.com",
      "date": "2020-03-20T13:53:02Z"
    },
    "committer": {
      "name": "Nick Clifton",
      "email": "nickc@redhat.com",
      "date": "2020-03-20T13:53:02Z"
    },
    "message": "Add support for the xdef and xref pseudo-ops to the Z80 assembler.\n\n\tPR 25690\n\t* config/tc-z80.c (md_pseudo_table): Add xdef anf xref pseudo ops.\n\t* doc/c-z80.texi: Update documentation.",
    "tree": {
      "sha": "021133e1b0eb3b287e174486d197c337edc81930",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/021133e1b0eb3b287e174486d197c337edc81930"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/comments",
  "author": {
    "login": "b-s-a",
    "id": 2833802,
    "node_id": "MDQ6VXNlcjI4MzM4MDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2833802?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/b-s-a",
    "html_url": "https://github.com/b-s-a",
    "followers_url": "https://api.github.com/users/b-s-a/followers",
    "following_url": "https://api.github.com/users/b-s-a/following{/other_user}",
    "gists_url": "https://api.github.com/users/b-s-a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/b-s-a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/b-s-a/subscriptions",
    "organizations_url": "https://api.github.com/users/b-s-a/orgs",
    "repos_url": "https://api.github.com/users/b-s-a/repos",
    "events_url": "https://api.github.com/users/b-s-a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/b-s-a/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "nickclifton",
    "id": 31441682,
    "node_id": "MDQ6VXNlcjMxNDQxNjgy",
    "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nickclifton",
    "html_url": "https://github.com/nickclifton",
    "followers_url": "https://api.github.com/users/nickclifton/followers",
    "following_url": "https://api.github.com/users/nickclifton/following{/other_user}",
    "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions",
    "organizations_url": "https://api.github.com/users/nickclifton/orgs",
    "repos_url": "https://api.github.com/users/nickclifton/repos",
    "events_url": "https://api.github.com/users/nickclifton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nickclifton/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/c7da12c72c2eeb4f62e772df5cbb1f50f35a84ee"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 64,
    "deletions": 27
  },
  "files": [
    {
      "sha": "86ed22d19a066858c1d203bd3d9a52a47a357b0b",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
      "patch": "@@ -1,3 +1,9 @@\n+2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>\n+\n+\tPR 25690\n+\t* config/tc-z80.c (md_pseudo_table): Add xdef anf xref pseudo ops.\n+\t* doc/c-z80.texi: Update documentation.\n+\n 2020-03-17  Sergey Belyashov  <sergey.belyashov@gmail.com>\n \n \tPR 25641"
    },
    {
      "sha": "59cda3d03c1756e25c7efa53881f39bbb84ac463",
      "filename": "gas/config/tc-z80.c",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/config/tc-z80.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/config/tc-z80.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-z80.c?ref=0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
      "patch": "@@ -3460,6 +3460,8 @@ const pseudo_typeS md_pseudo_table[] =\n   { \"dw\", z80_cons, 2},\n   { \"psect\", psect, 0}, /* TODO: Translate attributes.  */\n   { \"set\", 0, 0}, \t\t/* Real instruction on z80.  */\n+  { \"xdef\", s_globl, 0},\t/* Synonym for .GLOBAL */\n+  { \"xref\", s_ignore, 0},\t/* Synonym for .EXTERN */\n   { NULL, 0, 0 }\n } ;\n "
    },
    {
      "sha": "2858d6f1e684d85e0ef9e7b360c53851989e195f",
      "filename": "gas/doc/c-z80.texi",
      "status": "modified",
      "additions": 56,
      "deletions": 27,
      "changes": 83,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/doc/c-z80.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34/gas/doc/c-z80.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/doc/c-z80.texi?ref=0d832e7f5e8c2e3659a55955c3b419e7cf5c9a34",
      "patch": "@@ -30,7 +30,7 @@\n @c man begin OPTIONS\n @table @gcctabopt\n \n-@cindex @samp{-march=} option, Z80\n+@cindex @code{-march=} command-line option, Z80\n @item -march=@var{CPU}[-@var{EXT}@dots{}][+@var{EXT}@dots{}]\n This option specifies the target processor. The assembler will issue\n an error message if an attempt is made to assemble an instruction which\n@@ -45,9 +45,9 @@ are recognized:\n In addition to the basic instruction set, the assembler can be told to\n accept some extention mnemonics. For example,\n @code{-march=z180+sli+infc} extends @var{z180} with @var{SLI} instructions and\n-@var{IN F,(C)}. The following instructions are currently supported:\n+@var{IN F,(C)}. The following extentions are currently supported:\n @code{full} (all known instructions),\n-@code{adl} (ADL CPU mode by default),\n+@code{adl} (ADL CPU mode by default, eZ80 only),\n @code{sli} (instruction known as @var{SLI}, @var{SLL} or @var{SL1}),\n @code{xyhl} (instructions with halves of index registers: @var{IXL}, @var{IXH},\n @var{IYL}, @var{IYH}),\n@@ -59,6 +59,8 @@ mnemonics starting with @code{-} revoke the respective functionality:\n @code{-march=z80-full+xyhl} first removes all default extentions and adds\n support for index registers halves only.\n \n+If this option is not specified then @code{-march=z80+xyhl+infc} is assumed.\n+\n @cindex @code{-local-prefix} command-line option, Z80\n @item  -local-prefix=@var{prefix}\n Mark all labels with specified prefix as local. But such label can be\n@@ -67,7 +69,7 @@ local label prefix @code{.L}, it is just adds new one.\n \n @cindex @code{-colonless} command-line option, Z80\n @item  -colonless\n-Accept colonless labels. All names at line begin are treated as labels.\n+Accept colonless labels. All symbols at line begin are treated as labels.\n \n @cindex @code{-sdcc} command-line option, Z80\n @item  -sdcc\n@@ -215,59 +217,86 @@ Supported half, single and double precision IEEE754 compatible numbers.\n \n @node Z80 Directives\n @section Z80 Assembler Directives\n+@cindex Z80-only directives\n \n @command{@value{AS}} for the Z80 supports some additional directives for\n compatibility with other assemblers.\n \n-@cindex Z80-only directives\n These are the additional directives in @code{@value{AS}} for the Z80:\n \n @table @code\n-@item assume @var{ADL}@samp{=}@var{expression}\n+@item @code{.assume ADL = @var{expression}}\n+@cindex @code{.assume} directive, Z80\n Set ADL status for eZ80. Non-zero value enable compilation in ADL mode else\n used Z80 mode. ADL and Z80 mode produces incompatible object code. Mixing\n both of them within one binary may lead problems with disassembler.\n \n-@item db @var{expression}|@var{string}[,@var{expression}|@var{string}...]\n-@itemx defb @var{expression}|@var{string}[,@var{expression}|@var{string}...]\n-@itemx defm @var{string}...]\n+@item @code{db @var{expression}|@var{string}[,@var{expression}|@var{string}...]}\n+@cindex @code{db} directive, Z80\n+@itemx @code{defb @var{expression}|@var{string}[,@var{expression}|@var{string}...]}\n+@cindex @code{defb} directive, Z80\n+@itemx @code{defm @var{string}[,@var{string}...]}\n+@cindex @code{defm} directive, Z80\n For each @var{string} the characters are copied to the object file, for\n each other @var{expression} the value is stored in one byte.\n A warning is issued in case of an overflow.\n Backslash symbol in the strings is generic symbol, it cannot be used as\n-escape character (for this purpose use @code{.ascii} or @code{.asciiz}\n-directives).\n+escape character (@xref{Ascii,,@code{.ascii}}).\n \n-@item dw @var{expression}[,@var{expression}...]\n-@itemx defw @var{expression}[,@var{expression}...]\n+@item @code{dw @var{expression}[,@var{expression}...]}\n+@cindex @code{dw} directive, Z80\n+@itemx @code{defw @var{expression}[,@var{expression}...]}\n+@cindex @code{defw} directive, Z80\n For each @var{expression} the value is stored in two bytes, ignoring\n overflow.\n \n-@item d24 @var{expression}[,@var{expression}...]\n-@itemx def24 @var{expression}[,@var{expression}...]\n+@item @code{d24 @var{expression}[,@var{expression}...]}\n+@cindex @code{d24} directive, Z80\n+@itemx @code{def24 @var{expression}[,@var{expression}...]}\n+@cindex @code{def24} directive, Z80\n For each @var{expression} the value is stored in three bytes, ignoring\n overflow.\n \n-@item d32 @var{expression}[,@var{expression}...]\n-@itemx def32 @var{expression}[,@var{expression}...]\n+@item @code{d32 @var{expression}[,@var{expression}...]}\n+@cindex @code{d32} directive, Z80\n+@itemx @code{def32 @var{expression}[,@var{expression}...]}\n+@cindex @code{def32} directive, Z80\n For each @var{expression} the value is stored in four bytes, ignoring\n overflow.\n \n-@item ds @var{count}[, @var{value}]\n-@itemx defs @var{count}[, @var{value}]\n+@item @code{ds @var{count}[, @var{value}]}\n+@cindex @code{ds} directive, Z80\n+@itemx @code{defs @var{count}[, @var{value}]}\n+@cindex @code{defs} directive, Z80\n @c Synonyms for @code{ds.b},\n @c which should have been described elsewhere\n Fill @var{count} bytes in the object file with @var{value}, if\n @var{value} is omitted it defaults to zero.\n \n-@item @var{symbol} equ @var{expression}\n-@itemx @var{symbol} defl @var{expression}\n-These directives set the value of @var{symbol} to @var{expression}. If\n-@code{equ} is used, it is an error if @var{symbol} is already defined.\n-Symbols defined with @code{equ} are not protected from redefinition.\n-\n-@item psect @var{name}\n-A synonym for @xref{Section}, no second argument should be given.\n+@item @code{@var{symbol} defl @var{expression}}\n+@cindex @code{defl} directive, Z80\n+The @code{defl} directive is like @code{.set} but with different syntax (@xref{Set,,@code{.set}}).\n+It set the value of @var{symbol} to @var{expression}. Symbols defined\n+with @code{defl} are not protected from redefinition.\n+\n+@item @code{@var{symbol} equ @var{expression}}\n+@cindex @code{equ} directive, Z80\n+The @code{equ} directive is like @code{.equiv} but with different syntax (@xref{Equiv,,@code{.equiv}}).\n+It set the value of @var{symbol} to @var{expression}. It is an error\n+if @var{symbol} is already defined. Symbols defined with @code{equ}\n+are not protected from redefinition.\n+\n+@item @code{psect @var{name}}\n+@cindex @code{psect} directive, Z80\n+A synonym for @code{.section}, no second argument should be given (@xref{Section,,@code{.section}}).\n+\n+@item @code{xdef @var{symbol}}\n+@cindex @code{xdef} directive, Z80\n+A synonym for @code{.global}, make @var{symbol} is visible to linker (@xref{Global,,@code{.global}}).\n+\n+@item @code{xref @var{name}}\n+@cindex @code{xref} directive, Z80\n+A synonym for @code{.extern} (@ref{Extern,,@code{.extern}}).\n @ignore\n \n The following attributes will possibly be recognized in the future"
    }
  ]
}