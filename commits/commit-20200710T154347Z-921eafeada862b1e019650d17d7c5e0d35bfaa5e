{
  "sha": "921eafeada862b1e019650d17d7c5e0d35bfaa5e",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTIxZWFmZWFkYTg2MmIxZTAxOTY1MGQxN2Q3YzVlMGQzNWJmYWE1ZQ==",
  "commit": {
    "author": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-10T15:43:37Z"
    },
    "committer": {
      "name": "H.J. Lu",
      "email": "hjl.tools@gmail.com",
      "date": "2020-07-10T15:43:47Z"
    },
    "message": "x86: Extract extended states from instruction template\n\nExtract extended states from operand types in instruction template.  Set\nxstate_zmm for master register move.\n\n\t* config/tc-i386.c (_i386_insn): Remove has_regmmx, has_regxmm,\n\thas_regymm, has_regzmm and has_regtmm.  Add xstate.\n\t(md_assemble): Set i.xstate from operand types in instruction\n\ttemplate.\n\t(build_modrm_byte): Updated.\n\t(output_insn): Check i.xstate.\n\t* testsuite/gas/i386/i386.exp: Run property-6 and\n\tx86-64-property-6.\n\t* testsuite/gas/i386/property-6.d: New file.\n\t* testsuite/gas/i386/property-6.s: Updated.\n\t* testsuite/gas/i386/x86-64-property-6.d: Likewise.",
    "tree": {
      "sha": "5e0805deb7c33fab9732e201432642723546b358",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/5e0805deb7c33fab9732e201432642723546b358"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/921eafeada862b1e019650d17d7c5e0d35bfaa5e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/921eafeada862b1e019650d17d7c5e0d35bfaa5e",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/921eafeada862b1e019650d17d7c5e0d35bfaa5e",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/921eafeada862b1e019650d17d7c5e0d35bfaa5e/comments",
  "author": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "hjl-tools",
    "id": 1072356,
    "node_id": "MDQ6VXNlcjEwNzIzNTY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hjl-tools",
    "html_url": "https://github.com/hjl-tools",
    "followers_url": "https://api.github.com/users/hjl-tools/followers",
    "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}",
    "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions",
    "organizations_url": "https://api.github.com/users/hjl-tools/orgs",
    "repos_url": "https://api.github.com/users/hjl-tools/repos",
    "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hjl-tools/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d249bf867073b98eb559ac4f9829a5ee5d29f2bf",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d249bf867073b98eb559ac4f9829a5ee5d29f2bf",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d249bf867073b98eb559ac4f9829a5ee5d29f2bf"
    }
  ],
  "stats": {
    "total": 164,
    "additions": 91,
    "deletions": 73
  },
  "files": [
    {
      "sha": "003e37d3380e431739e475be4c65686ee352d86a",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -1,3 +1,17 @@\n+2020-07-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/tc-i386.c (_i386_insn): Remove has_regmmx, has_regxmm,\n+\thas_regymm, has_regzmm and has_regtmm.  Add xstate.\n+\t(md_assemble): Set i.xstate from operand types in instruction\n+\ttemplate.\n+\t(build_modrm_byte): Updated.\n+\t(output_insn): Check i.xstate.\n+\t* testsuite/gas/i386/i386.exp: Run property-6 and\n+\tx86-64-property-6.\n+\t* testsuite/gas/i386/property-6.d: New file.\n+\t* testsuite/gas/i386/property-6.s: Updated.\n+\t* testsuite/gas/i386/x86-64-property-6.d: Likewise.\n+\n 2020-07-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* testsuite/gas/i386/property-5.d: Correct test name."
    },
    {
      "sha": "0eb2b94e04b299caffebf32d7b63e9899ce40d3e",
      "filename": "gas/config/tc-i386.c",
      "status": "modified",
      "additions": 54,
      "deletions": 73,
      "changes": 127,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/config/tc-i386.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/config/tc-i386.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-i386.c?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -362,20 +362,20 @@ struct _i386_insn\n     /* The operand to a branch insn indicates an absolute branch.  */\n     bfd_boolean jumpabsolute;\n \n-    /* Has MMX register operands.  */\n-    bfd_boolean has_regmmx;\n-\n-    /* Has XMM register operands.  */\n-    bfd_boolean has_regxmm;\n-\n-    /* Has YMM register operands.  */\n-    bfd_boolean has_regymm;\n-\n-    /* Has ZMM register operands.  */\n-    bfd_boolean has_regzmm;\n-\n-    /* Has TMM register operands.  */\n-    bfd_boolean has_regtmm;\n+    /* Extended states.  */\n+    enum\n+      {\n+\t/* Use MMX state.  */\n+\txstate_mmx = 1 << 0,\n+\t/* Use XMM state.  */\n+\txstate_xmm = 1 << 1,\n+\t/* Use YMM state.  */\n+\txstate_ymm = 1 << 2 | xstate_xmm,\n+\t/* Use ZMM state.  */\n+\txstate_zmm = 1 << 3 | xstate_ymm,\n+\t/* Use TMM state.  */\n+\txstate_tmm = 1 << 4\n+      } xstate;\n \n     /* Has GOTPC or TLS relocation.  */\n     bfd_boolean has_gotpc_tls_reloc;\n@@ -4864,9 +4864,32 @@ md_assemble (char *line)\n   if (!process_suffix ())\n     return;\n \n-  /* Update operand types.  */\n+  /* Update operand types and check extended states.  */\n   for (j = 0; j < i.operands; j++)\n-    i.types[j] = operand_type_and (i.types[j], i.tm.operand_types[j]);\n+    {\n+      i.types[j] = operand_type_and (i.types[j], i.tm.operand_types[j]);\n+      switch (i.tm.operand_types[j].bitfield.class)\n+\t{\n+\tdefault:\n+\t  break;\n+\tcase RegMMX:\n+\t  i.xstate |= xstate_mmx;\n+\t  break;\n+\tcase RegMask:\n+\t  i.xstate |= xstate_zmm;\n+\t  break;\n+\tcase RegSIMD:\n+\t  if (i.tm.operand_types[j].bitfield.tmmword)\n+\t    i.xstate |= xstate_tmm;\n+\t  else if (i.tm.operand_types[j].bitfield.zmmword)\n+\t    i.xstate |= xstate_zmm;\n+\t  else if (i.tm.operand_types[j].bitfield.ymmword)\n+\t    i.xstate |= xstate_ymm;\n+\t  else if (i.tm.operand_types[j].bitfield.xmmword)\n+\t    i.xstate |= xstate_xmm;\n+\t  break;\n+\t}\n+    }\n \n   /* Make still unresolved immediate matches conform to size of immediate\n      given in i.suffix.  */\n@@ -7958,24 +7981,6 @@ build_modrm_byte (void)\n \t{\n \t  i.rm.reg = i.op[dest].regs->reg_num;\n \t  i.rm.regmem = i.op[source].regs->reg_num;\n-\t  if (i.op[dest].regs->reg_type.bitfield.class == RegMMX\n-\t       || i.op[source].regs->reg_type.bitfield.class == RegMMX)\n-\t    i.has_regmmx = TRUE;\n-\t  else if (i.op[dest].regs->reg_type.bitfield.class == RegSIMD\n-\t\t   || i.op[source].regs->reg_type.bitfield.class == RegSIMD)\n-\t    {\n-\t      if (i.types[dest].bitfield.tmmword\n-\t\t  || i.types[source].bitfield.tmmword)\n-\t\ti.has_regtmm = TRUE;\n-\t      else if (i.types[dest].bitfield.zmmword\n-\t\t       || i.types[source].bitfield.zmmword)\n-\t\ti.has_regzmm = TRUE;\n-\t      else if (i.types[dest].bitfield.ymmword\n-\t\t       || i.types[source].bitfield.ymmword)\n-\t\ti.has_regymm = TRUE;\n-\t      else\n-\t\ti.has_regxmm = TRUE;\n-\t    }\n \t  set_rex_vrex (i.op[dest].regs, REX_R, i.tm.opcode_modifier.sse2avx);\n \t  set_rex_vrex (i.op[source].regs, REX_B, FALSE);\n \t}\n@@ -8319,33 +8324,16 @@ build_modrm_byte (void)\n \t  unsigned int vex_reg = ~0;\n \n \t  for (op = 0; op < i.operands; op++)\n-\t    {\n-\t      if (i.types[op].bitfield.class == Reg\n-\t\t  || i.types[op].bitfield.class == RegBND\n-\t\t  || i.types[op].bitfield.class == RegMask\n-\t\t  || i.types[op].bitfield.class == SReg\n-\t\t  || i.types[op].bitfield.class == RegCR\n-\t\t  || i.types[op].bitfield.class == RegDR\n-\t\t  || i.types[op].bitfield.class == RegTR)\n-\t\tbreak;\n-\t      if (i.types[op].bitfield.class == RegSIMD)\n-\t\t{\n-\t\t  if (i.types[op].bitfield.tmmword)\n-\t\t    i.has_regtmm = TRUE;\n-\t\t  else if (i.types[op].bitfield.zmmword)\n-\t\t    i.has_regzmm = TRUE;\n-\t\t  else if (i.types[op].bitfield.ymmword)\n-\t\t    i.has_regymm = TRUE;\n-\t\t  else\n-\t\t    i.has_regxmm = TRUE;\n-\t\t  break;\n-\t\t}\n-\t      if (i.types[op].bitfield.class == RegMMX)\n-\t\t{\n-\t\t  i.has_regmmx = TRUE;\n-\t\t  break;\n-\t\t}\n-\t    }\n+\t    if (i.types[op].bitfield.class == Reg\n+\t\t|| i.types[op].bitfield.class == RegBND\n+\t\t|| i.types[op].bitfield.class == RegMask\n+\t\t|| i.types[op].bitfield.class == SReg\n+\t\t|| i.types[op].bitfield.class == RegCR\n+\t\t|| i.types[op].bitfield.class == RegDR\n+\t\t|| i.types[op].bitfield.class == RegTR\n+\t\t|| i.types[op].bitfield.class == RegSIMD\n+\t\t|| i.types[op].bitfield.class == RegMMX)\n+\t      break;\n \n \t  if (vex_3_sources)\n \t    op = dest;\n@@ -9177,22 +9165,15 @@ output_insn (void)\n \t  || i.tm.cpu_flags.bitfield.cpu687\n \t  || i.tm.cpu_flags.bitfield.cpufisttp)\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_X87;\n-      if (i.has_regmmx\n+      if ((i.xstate & xstate_mmx)\n \t  || i.tm.base_opcode == 0xf77 /* emms */\n-\t  || i.tm.base_opcode == 0xf0e /* femms */\n-\t  || i.tm.base_opcode == 0xf2a /* cvtpi2ps */\n-\t  || i.tm.base_opcode == 0x660f2a /* cvtpi2pd */)\n+\t  || i.tm.base_opcode == 0xf0e /* femms */)\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_MMX;\n-      if (i.has_regxmm)\n+      if ((i.xstate & xstate_xmm))\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_XMM;\n-      if (i.has_regymm\n-\t  || (i.has_regxmm\n-\t      && (i.tm.opcode_modifier.vex\n-\t\t  || i.tm.opcode_modifier.evex)))\n+      if ((i.xstate & xstate_ymm) == xstate_ymm)\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_YMM;\n-      if (i.has_regzmm\n-\t  || ((i.has_regxmm || i.has_regymm)\n-\t      && i.tm.opcode_modifier.evex))\n+      if ((i.xstate & xstate_zmm) == xstate_zmm)\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_ZMM;\n       if (i.tm.cpu_flags.bitfield.cpufxsr)\n \tx86_feature_2_used |= GNU_PROPERTY_X86_FEATURE_2_FXSR;"
    },
    {
      "sha": "ab5620997fc3f301d8a6ff0ae2130a50d68d4d49",
      "filename": "gas/testsuite/gas/i386/i386.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/i386.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/i386.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/i386.exp?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -624,6 +624,7 @@ if [expr ([istarget \"i*86-*-*\"] ||  [istarget \"x86_64-*-*\"]) && [gas_32_check]]\n \trun_dump_test \"property-3\"\n \trun_dump_test \"property-4\"\n \trun_dump_test \"property-5\"\n+\trun_dump_test \"property-6\"\n \n \tif {[istarget \"*-*-linux*\"]} then {\n \t    run_dump_test \"align-branch-3\"\n@@ -1215,6 +1216,7 @@ if [expr ([istarget \"i*86-*-*\"] || [istarget \"x86_64-*-*\"]) && [gas_64_check]] t\n \trun_dump_test \"x86-64-property-3\"\n \trun_dump_test \"x86-64-property-4\"\n \trun_dump_test \"x86-64-property-5\"\n+\trun_dump_test \"x86-64-property-6\"\n \n \tif {[istarget \"*-*-linux*\"]} then {\n \t    run_dump_test \"x86-64-align-branch-3\""
    },
    {
      "sha": "cf175c535763ef1747063155e80c025d0e37eb6d",
      "filename": "gas/testsuite/gas/i386/property-6.d",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/property-6.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/property-6.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/property-6.d?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -0,0 +1,9 @@\n+#name: i386 property 6\n+#as: -mx86-used-note=yes --generate-missing-build-notes=no\n+#readelf: -n\n+\n+Displaying notes found in: .note.gnu.property\n+[ \t]+Owner[ \t]+Data size[ \t]+Description\n+  GNU                  0x[0-9a-f]+\tNT_GNU_PROPERTY_TYPE_0\n+      Properties: x86 ISA used: AVX512F\n+\tx86 feature used: x86, XMM, YMM, ZMM"
    },
    {
      "sha": "572b58a24f234a12653c4ff79f28fd278b5767dc",
      "filename": "gas/testsuite/gas/i386/property-6.s",
      "status": "added",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/property-6.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/property-6.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/property-6.s?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -0,0 +1,2 @@\n+\t.text\n+\tkmovw\t%k1, %k2"
    },
    {
      "sha": "862d4c3536059b961ad0c214dee75ddbd359da2a",
      "filename": "gas/testsuite/gas/i386/x86-64-property-6.d",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/x86-64-property-6.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/921eafeada862b1e019650d17d7c5e0d35bfaa5e/gas/testsuite/gas/i386/x86-64-property-6.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/testsuite/gas/i386/x86-64-property-6.d?ref=921eafeada862b1e019650d17d7c5e0d35bfaa5e",
      "patch": "@@ -0,0 +1,10 @@\n+#name: x86-64 property 6\n+#source: property-6.s\n+#as: -mx86-used-note=yes --generate-missing-build-notes=no\n+#readelf: -n\n+\n+Displaying notes found in: .note.gnu.property\n+[ \t]+Owner[ \t]+Data size[ \t]+Description\n+  GNU                  0x[0-9a-f]+\tNT_GNU_PROPERTY_TYPE_0\n+      Properties: x86 ISA used: AVX512F\n+\tx86 feature used: x86, XMM, YMM, ZMM"
    }
  ]
}