{
  "sha": "6471e7d23de333a63a119220d59b920c6aaef562",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjQ3MWU3ZDIzZGUzMzNhNjNhMTE5MjIwZDU5YjkyMGM2YWFlZjU2Mg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T17:19:44Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-01-17T17:22:44Z"
    },
    "message": "Replace \"the the\" with \"the\"\n\nThis replaces \"the the\" with \"the\" in various comments.\n\nTested by rebuilding.  This didn't test the solib-dsbt.c change, but\nit looks harmless.\n\ngdb/ChangeLog\n2019-01-17  Tom Tromey  <tromey@bapiya>\n\n\t* valprint.c: Replace \"the the\" with \"the\".\n\t* symtab.c: Replace \"the the\" with \"the\".\n\t* solib.c: Replace \"the the\" with \"the\".\n\t* solib-dsbt.c: Replace \"the the\" with \"the\".\n\t* linespec.c: Replace \"the the\" with \"the\".\n\t* dwarf2loc.h: Replace \"the the\" with \"the\".\n\t* amd64-windows-tdep.c: Replace \"the the\" with \"the\".\n\t* aarch64-tdep.c: Replace \"the the\" with \"the\".",
    "tree": {
      "sha": "7138798923cabf3a27f7534d1fc606cf5f6f53c0",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/7138798923cabf3a27f7534d1fc606cf5f6f53c0"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/6471e7d23de333a63a119220d59b920c6aaef562",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6471e7d23de333a63a119220d59b920c6aaef562",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/6471e7d23de333a63a119220d59b920c6aaef562",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/6471e7d23de333a63a119220d59b920c6aaef562/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dee3ee22244df9c8b3220af7f4361e69adb84c97",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/dee3ee22244df9c8b3220af7f4361e69adb84c97",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/dee3ee22244df9c8b3220af7f4361e69adb84c97"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 21,
    "deletions": 10
  },
  "files": [
    {
      "sha": "0b403c062d451fe41f03c133c5389fda0f456f8b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -1,3 +1,14 @@\n+2019-01-17  Tom Tromey  <tromey@bapiya>\n+\n+\t* valprint.c: Replace \"the the\" with \"the\".\n+\t* symtab.c: Replace \"the the\" with \"the\".\n+\t* solib.c: Replace \"the the\" with \"the\".\n+\t* solib-dsbt.c: Replace \"the the\" with \"the\".\n+\t* linespec.c: Replace \"the the\" with \"the\".\n+\t* dwarf2loc.h: Replace \"the the\" with \"the\".\n+\t* amd64-windows-tdep.c: Replace \"the the\" with \"the\".\n+\t* aarch64-tdep.c: Replace \"the the\" with \"the\".\n+\n 2019-01-16  Keith Seitz  <keiths@redhat.com>\n \n \tPR gdb/23773"
    },
    {
      "sha": "b051563937834d5428585175e8b8182e9e483860",
      "filename": "gdb/aarch64-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/aarch64-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/aarch64-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/aarch64-tdep.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -1932,7 +1932,7 @@ aarch64_extract_return_value (struct type *type, struct regcache *regs,\n \t   || TYPE_IS_REFERENCE (type)\n \t   || TYPE_CODE (type) == TYPE_CODE_ENUM)\n     {\n-      /* If the the type is a plain integer, then the access is\n+      /* If the type is a plain integer, then the access is\n \t straight-forward.  Otherwise we have to play around a bit\n \t more.  */\n       int len = TYPE_LENGTH (type);"
    },
    {
      "sha": "47feab98b0bf9749a6ed8a22e435a58f2cbd4fef",
      "filename": "gdb/amd64-windows-tdep.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/amd64-windows-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/amd64-windows-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/amd64-windows-tdep.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -419,7 +419,7 @@ static const enum amd64_regnum amd64_windows_w2gdb_regnum[] =\n   AMD64_R15_REGNUM\n };\n \n-/* Return TRUE iff PC is the the range of the function corresponding to\n+/* Return TRUE iff PC is the range of the function corresponding to\n    CACHE.  */\n \n static int"
    },
    {
      "sha": "955e6f1b48a8535e1fd9323f39aec98fd7451f2c",
      "filename": "gdb/dwarf2loc.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/dwarf2loc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/dwarf2loc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2loc.h?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -222,7 +222,7 @@ struct dwarf2_offset_baton\n   LONGEST offset;\n \n   /* The type of the object whose property is dynamic.  In the example\n-     provided above, this would the the array's index type.  */\n+     provided above, this would the array's index type.  */\n   struct type *type;\n };\n "
    },
    {
      "sha": "71346078d748a7cb7c7e6c7ee6ecd9dce8a5833b",
      "filename": "gdb/linespec.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/linespec.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/linespec.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linespec.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -1445,7 +1445,7 @@ convert_results_to_lsals (struct linespec_state *self,\n \n /* A structure that contains two string representations of a struct\n    linespec_canonical_name:\n-     - one where the the symtab's fullname is used;\n+     - one where the symtab's fullname is used;\n      - one where the filename followed the \"set filename-display\"\n        setting.  */\n "
    },
    {
      "sha": "e45ddfe31ad91d0d38c7b385ead6e3c466e3f405",
      "filename": "gdb/mi/mi-interp.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/mi/mi-interp.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/mi/mi-interp.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/mi/mi-interp.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -526,7 +526,7 @@ find_mi_interp (void)\n }\n \n /* Observers for several run control events that print why the\n-   inferior has stopped to both the the MI event channel and to the MI\n+   inferior has stopped to both the MI event channel and to the MI\n    console.  If the MI interpreter is not active, print nothing.  */\n \n /* Observer for the signal_received notification.  */"
    },
    {
      "sha": "b2aa23298d6d98326e5d63473da8f2db685d9dad",
      "filename": "gdb/nat/aarch64-sve-linux-sigcontext.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/nat/aarch64-sve-linux-sigcontext.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/nat/aarch64-sve-linux-sigcontext.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/nat/aarch64-sve-linux-sigcontext.h?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -64,7 +64,7 @@ struct sve_context {\n  * The same convention applies when returning from a signal: a caller\n  * will need to remove or resize the sve_context block if it wants to\n  * make the SVE registers live when they were previously non-live or\n- * vice-versa.  This may require the the caller to allocate fresh\n+ * vice-versa.  This may require the caller to allocate fresh\n  * memory and/or move other context blocks in the signal frame.\n  *\n  * Changing the vector length during signal return is not permitted:"
    },
    {
      "sha": "20310144f32b2e93d6864e89ff0dc5e1f294ca5d",
      "filename": "gdb/solib-dsbt.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/solib-dsbt.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/solib-dsbt.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib-dsbt.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -650,7 +650,7 @@ dsbt_current_sos (void)\n   /* Locate the address of the first link map struct.  */\n   lm_addr = lm_base ();\n \n-  /* We have at least one link map entry.  Fetch the the lot of them,\n+  /* We have at least one link map entry.  Fetch the lot of them,\n      building the solist chain.  */\n   while (lm_addr)\n     {"
    },
    {
      "sha": "30eac1d3f571c2001ac4ea077fc8e0885b202ebc",
      "filename": "gdb/solib.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/solib.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/solib.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/solib.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -233,7 +233,7 @@ solib_find_1 (const char *in_pathname, int *fd, int is_solib)\n         | target:some/dir |           | /foo/bar.dll   |\n \n \tIOW, we don't need to add a separator if IN_PATHNAME already\n-\thas one, or when the the sysroot is exactly \"target:\".\n+\thas one, or when the sysroot is exactly \"target:\".\n \tThere's no need to check for drive spec explicitly, as we only\n \tget here if IN_PATHNAME is considered an absolute path.  */\n       need_dir_separator = !(IS_DIR_SEPARATOR (in_pathname[0])"
    },
    {
      "sha": "b6751bec6baa6aec2a21bb6e1c6e843682bdc397",
      "filename": "gdb/symtab.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/symtab.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/symtab.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/symtab.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -2301,7 +2301,7 @@ lookup_symbol_in_objfile_symtabs (struct objfile *objfile, int block_index,\n    Normally we only look in OBJFILE, and not any separate debug objfiles\n    because the outer loop will cause them to be searched too.  This case is\n    different.  Here we're called from search_symbols where it will only\n-   call us for the the objfile that contains a matching minsym.  */\n+   call us for the objfile that contains a matching minsym.  */\n \n static struct block_symbol\n lookup_symbol_in_objfile_from_linkage_name (struct objfile *objfile,"
    },
    {
      "sha": "a079c0025a748a3c4002984e0ea48c5f9b6ed4e9",
      "filename": "gdb/valprint.c",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/6471e7d23de333a63a119220d59b920c6aaef562/gdb/valprint.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/6471e7d23de333a63a119220d59b920c6aaef562/gdb/valprint.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/valprint.c?ref=6471e7d23de333a63a119220d59b920c6aaef562",
      "patch": "@@ -2513,7 +2513,7 @@ count_next_character (wchar_iterator *iter,\n \n /* Print the characters in CHARS to the OBSTACK.  QUOTE_CHAR is the quote\n    character to use with string output.  WIDTH is the size of the output\n-   character type.  BYTE_ORDER is the the target byte order.  OPTIONS\n+   character type.  BYTE_ORDER is the target byte order.  OPTIONS\n    is the user's print options.  */\n \n static void"
    }
  ]
}