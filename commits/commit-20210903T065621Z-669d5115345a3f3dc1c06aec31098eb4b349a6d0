{
  "sha": "669d5115345a3f3dc1c06aec31098eb4b349a6d0",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NjY5ZDUxMTUzNDVhM2YzZGMxYzA2YWVjMzEwOThlYjRiMzQ5YTZkMA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-03T06:56:21Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-09-03T06:56:21Z"
    },
    "message": "ld testsuite tidy\n\nFixes a few issues:\n1) If you use \"-fsanitize=address,undefined\" in CFLAGS, the Makefile\nattempt to trim off -fsanitize options left us with \",undefined\".\n2) ld_compile adds CFLAGS_FOR_TARGET itself, no need to pass it.\n3) CFLAGS might be needed linking bootstrap test.\n\n\t* Makefile.am (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Trim off\n\tall -fsanitize=*.\n\t* Makefile.in: Regenerate.\n\t* testsuite/ld-bootstrap/bootstrap.exp: Use CFLAGS when linking.\n\t* testsuite/ld-cdtest/cdtest.exp: Use CFLAGS_FOR_TARGET when\n\tlinking.\n\t* testsuite/ld-auto-import/auto-import.exp: Don't pass\n\tCFLAGS_FOR_TARGET to ld_compile.\n\t* testsuite/ld-cygwin/exe-export.exp: Likewise.\n\t* testsuite/ld-elfvers/vers.exp: Likewise.\n\t* testsuite/ld-elfvsb/elfvsb.exp: Likewise.\n\t* testsuite/ld-elfweak/elfweak.exp: Likewise.\n\t* testsuite/ld-gc/gc.exp: Likewise.\n\t* testsuite/ld-pe/pe-compile.exp: Likewise.\n\t* testsuite/ld-pe/pe-run.exp: Likewise.\n\t* testsuite/ld-pe/pe-run2.exp: Likewise.\n\t* testsuite/ld-plugin/plugin.exp: Likewise.\n\t* testsuite/ld-shared/shared.exp: Likewise.\n\t* testsuite/ld-elfcomm/elfcomm.exp: Likewise, and don't allow\n\tnios2 testing to trash CFLAGS_FOR_TARGET.\n\t* testsuite/ld-scripts/crossref.exp: Don't pass options in\n\tCC_FOR_TARGET, do so in CFLAGS_FOR_TARGET instead.\n\t* testsuite/ld-srec/srec.exp: Likewise, and for CXX.",
    "tree": {
      "sha": "0bd69d93c3e4c1b7b57d6a58e803ad3a9bd0419f",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0bd69d93c3e4c1b7b57d6a58e803ad3a9bd0419f"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/669d5115345a3f3dc1c06aec31098eb4b349a6d0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/669d5115345a3f3dc1c06aec31098eb4b349a6d0",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/669d5115345a3f3dc1c06aec31098eb4b349a6d0",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/669d5115345a3f3dc1c06aec31098eb4b349a6d0/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ad77db1c02a92c912f9719f32e2452890aa738ad",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ad77db1c02a92c912f9719f32e2452890aa738ad",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/ad77db1c02a92c912f9719f32e2452890aa738ad"
    }
  ],
  "stats": {
    "total": 210,
    "additions": 95,
    "deletions": 115
  },
  "files": [
    {
      "sha": "6cfdfddc5d171e77ef2c6e7aefd0f7e7dddf2342",
      "filename": "ld/Makefile.am",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/Makefile.am",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/Makefile.am",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.am?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -123,8 +123,8 @@ CXX_FOR_TARGET = ` \\\n   fi`\n \n # Strip out sanitization options as we want to test building binaries without any extra paraphernalia\n-CFLAGS_FOR_TARGET = `echo $(CFLAGS) | sed -e 's/-fsanitize=address//g' -e 's/-fsanitize=undefined//g'`\n-CXXFLAGS_FOR_TARGET = `echo $(CXXFLAGS) | sed -e 's/-fsanitize=address//g' -e 's/-fsanitize=undefined//g'`\n+CFLAGS_FOR_TARGET = `echo $(CFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`\n+CXXFLAGS_FOR_TARGET = `echo $(CXXFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`\n \n transform = s/^ld-new$$/$(installed_linker)/;@program_transform_name@\n bin_PROGRAMS = ld-new"
    },
    {
      "sha": "30fa918dfc878167b008994dade728544afedefb",
      "filename": "ld/Makefile.in",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/Makefile.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/Makefile.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/Makefile.in?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -619,8 +619,8 @@ CXX_FOR_TARGET = ` \\\n \n \n # Strip out sanitization options as we want to test building binaries without any extra paraphernalia\n-CFLAGS_FOR_TARGET = `echo $(CFLAGS) | sed -e 's/-fsanitize=address//g' -e 's/-fsanitize=undefined//g'`\n-CXXFLAGS_FOR_TARGET = `echo $(CXXFLAGS) | sed -e 's/-fsanitize=address//g' -e 's/-fsanitize=undefined//g'`\n+CFLAGS_FOR_TARGET = `echo $(CFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`\n+CXXFLAGS_FOR_TARGET = `echo $(CXXFLAGS) | sed -e 's/-fsanitize=[^ ]*//g'`\n info_TEXINFOS = ld.texi\n ld_TEXINFOS = configdoc.texi\n noinst_TEXINFOS = ldint.texi"
    },
    {
      "sha": "dfbd911c15fa725dd525c218f05df0b149e07637",
      "filename": "ld/testsuite/ld-auto-import/auto-import.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-auto-import/auto-import.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-auto-import/auto-import.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-auto-import/auto-import.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -118,7 +118,7 @@ if [istarget *-pc-cygwin] {\n     set MYLIBS \"-L/usr/lib -lcygwin -L/usr/lib/w32api -lkernel32\"\n     \n     # Compile the dll.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/dll.c $tmpdir/dll.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/dll.c $tmpdir/dll.o] {\n \tfail \"compiling shared lib\"\n     }\n     if ![ld_special_link \"$ld -shared --enable-auto-import -e __cygwin_dll_entry@12 --out-implib=$tmpdir/libstandard.dll.a\" $tmpdir/dll.dll \"$tmpdir/dll.o $MYLIBS\"] {\n@@ -129,7 +129,7 @@ if [istarget *-pc-cygwin] {\n     catch \"exec ln -fs dll.dll $tmpdir/libsymlinked_dll.dll.a\" ln_catch\n \n     # Compile and link the client program.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/client.c $tmpdir/client.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/client.c $tmpdir/client.o] {\n         fail \"compiling client\"\n     }\n "
    },
    {
      "sha": "e323b42868834bdd9298d0b9d429c6c5e50f3f78",
      "filename": "ld/testsuite/ld-bootstrap/bootstrap.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-bootstrap/bootstrap.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-bootstrap/bootstrap.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -168,7 +168,7 @@ foreach flags $test_flags {\n \tsetup_xfail \"mips*-*-irix5*\"\n     }\n \n-    if ![ld_link $CC tmpdir/ld1 \"$flags tmpdir/ld-partial.o $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n+    if ![ld_link $CC tmpdir/ld1 \"$CFLAGS $flags tmpdir/ld-partial.o $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n \tfail $testname\n \tcontinue\n     }\n@@ -185,13 +185,13 @@ foreach flags $test_flags {\n     }\n \n     regsub /tmpdir/ld/ $gcc_B_opt_save /tmpdir/gccld1/ gcc_B_opt\n-    if ![ld_link $CC tmpdir/ld2 \"$flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n+    if ![ld_link $CC tmpdir/ld2 \"$CFLAGS $flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n \tfail $testname\n \tcontinue\n     }\n \n     regsub /tmpdir/ld/ $gcc_B_opt_save /tmpdir/gccld2/ gcc_B_opt\n-    if ![ld_link $CC tmpdir/ld3 \"$flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n+    if ![ld_link $CC tmpdir/ld3 \"$CFLAGS $flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n \tfail $testname\n \tcontinue\n     }\n@@ -204,7 +204,7 @@ foreach flags $test_flags {\n \t# generated by different linkers, tmpdir/ld1 and tmpdir/ld2.\n \t# So we rebuild tmpdir/ld2 with tmpdir/ld3.\n \tregsub /tmpdir/ld/ $gcc_B_opt_save /tmpdir/gccld3/ gcc_B_opt\n-\tif ![ld_link $CC tmpdir/ld2 \"$flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n+\tif ![ld_link $CC tmpdir/ld2 \"$CFLAGS $flags $OFILES $CTFLIB $BFDLIB $LIBIBERTY $extralibs\"] {\n \t    fail $testname\n \t    continue\n \t}"
    },
    {
      "sha": "9bd8ba76d81bf399f47223caedea7c7110face9b",
      "filename": "ld/testsuite/ld-cdtest/cdtest.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-cdtest/cdtest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-cdtest/cdtest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cdtest/cdtest.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -48,7 +48,7 @@ if {   ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcd\n \n set expected_output \"$srcdir/$subdir/cdtest.dat\"\n \n-if ![ld_link $CC_FOR_TARGET tmpdir/cdtest {tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o}] {\n+if ![ld_link $CC_FOR_TARGET tmpdir/cdtest \"$CFLAGS_FOR_TARGET tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o\"] {\n     fail $test1\n } else {\n     send_log   \"tmpdir/cdtest >tmpdir/cdtest.out\\n\"\n@@ -100,7 +100,7 @@ if [is_pecoff_format] {\n if ![ld_relocate $ld tmpdir/cdtest.o {-Ur tmpdir/cdtest-foo.o tmpdir/cdtest-bar.o tmpdir/cdtest-main.o}] {\n     fail $test2\n } else {\n-    if ![ld_link $CC_FOR_TARGET tmpdir/cdtest tmpdir/cdtest.o] {\n+    if ![ld_link $CC_FOR_TARGET tmpdir/cdtest \"$CFLAGS_FOR_TARGET tmpdir/cdtest.o\"] {\n \tfail $test2\n     } else {\n \tsend_log   \"tmpdir/cdtest >tmpdir/cdtest.out\\n\""
    },
    {
      "sha": "741d2a9a932cf6a253df6476d3d1d030b66794f2",
      "filename": "ld/testsuite/ld-cygwin/exe-export.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-cygwin/exe-export.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-cygwin/exe-export.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-cygwin/exe-export.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -113,7 +113,7 @@ if ![run_dlltool $tmpdir/testdll.lib $srcdir/$subdir/testdll.def] {\n } \r\n \r\n # Compile the executable.\r\n-if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/testexe.c $tmpdir/testexe.o] {\r\n+if ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/testexe.c $tmpdir/testexe.o] {\r\n     fail \"compiling executable\"\r\n     return\r\n }\r\n@@ -124,7 +124,7 @@ if ![ld_special_link \"$CC_FOR_TARGET $LDFLAGS $MYLDFLAGS -e _testexe_main@16\" $t\n } \r\n \r\n # Compile the dll.\r\n-if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/testdll.c $tmpdir/testdll.o] {\r\n+if ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/testdll.c $tmpdir/testdll.o] {\r\n     fail \"compiling shared lib\"\r\n     return\r\n }\r"
    },
    {
      "sha": "bed4e8c173a8950e72e42429eb56471ec928e2b8",
      "filename": "ld/testsuite/ld-elfcomm/elfcomm.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfcomm/elfcomm.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfcomm/elfcomm.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -163,15 +163,15 @@ proc stt_common_test { options testname } {\n     return 1\n }\n \n-if [istarget nios2*-*-*] {\n-    append CFLAGS_FOR_TARGET \" -G0\"\n-}\n-\n # Explicitly use \"-fcommon\" so that even if $CFLAGS includes\n # \"-fno-common\", these tests are compiled as expected.\n-if {   ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n-    || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n-    || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -Wa,--elf-stt-common=yes -fcommon\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n+set options \"-fcommon $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n+if [istarget nios2*-*-*] {\n+    append options \" -G0\"\n+}\n+if {   ![ld_compile \"$CC_FOR_TARGET $options\" $srcdir/$subdir/common1a.c tmpdir/common1a.o]\n+    || ![ld_compile \"$CC_FOR_TARGET $options\" $srcdir/$subdir/common1b.c tmpdir/common1b.o]\n+    || ![ld_compile \"$CC_FOR_TARGET $options -Wa,--elf-stt-common=yes\" $srcdir/$subdir/common1b.c tmpdir/common1c.o] } {\n     unsupported $test1\n     return\n }"
    },
    {
      "sha": "1557f3f28deb5325e60a2386cbadb31aa937baa2",
      "filename": "ld/testsuite/ld-elfvers/vers.exp",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfvers/vers.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfvers/vers.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvers/vers.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -487,12 +487,11 @@ proc build_binary { shared pic test source libname other mapfile verexp versymex\n     global as_options\n     global objdump\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global script\n     global NOSANITIZE_CFLAGS\n     global NOLTO_CFLAGS\n \n-    if ![ld_compile \"$CC_FOR_TARGET -S $pic $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $pic $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$libname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -579,7 +578,6 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n     global as_options\n     global objdump\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global script\n \n     if [string match \"\" $other] then {\n@@ -588,7 +586,7 @@ proc test_ldfail { test flag source execname other mapfile whyfail } {\n \tset other_lib $tmpdir/$other\n     }\n \n-    if ![ld_compile \"$CC_FOR_TARGET -S $flag $CFLAGS_FOR_TARGET\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $flag\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -619,10 +617,9 @@ proc test_asfail { test flag source execname whyfail } {\n     global tmpdir\n     global as\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global NOLTO_CFLAGS\n \n-    if ![ld_compile \"$CC_FOR_TARGET -S $flag $CFLAGS_FOR_TARGET $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n+    if ![ld_compile \"$CC_FOR_TARGET -S $flag $NOLTO_CFLAGS\" $srcdir/$subdir/$source $tmpdir/$execname.s]     {\n \tunsupported \"$test\"\n \treturn\n     }\n@@ -689,15 +686,14 @@ proc build_exec { test source execname flags solibname verexp versymexp symexp }\n     global as_options\n     global objdump\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global NOSANITIZE_CFLAGS\n     global NOLTO_CFLAGS\n \n     set shared \"--shared --no-undefined-version\"\n     set script --version-script\n \n     # Disable LTO for these tests.\n-    set cc_cmd \"$CC_FOR_TARGET -S $CFLAGS_FOR_TARGET\"\n+    set cc_cmd \"$CC_FOR_TARGET -S\"\n     if {[check_lto_available]} {\n \tappend cc_cmd \" -fno-lto\"\n     }"
    },
    {
      "sha": "1866be5e66d65a537b068411d3fb43a6aa56a719",
      "filename": "ld/testsuite/ld-elfvsb/elfvsb.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 11,
      "changes": 21,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfvsb/elfvsb.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfvsb/elfvsb.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -87,7 +87,7 @@ set support_protected \"no\"\n if { [istarget *-*-linux*]\n      || [istarget *-*-nacl*]\n      || [istarget *-*-gnu*] } {\n-    if [ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET -DPROTECTED_CHECK\" $srcdir/$subdir/main.c $tmpdir/main.o] {\n+    if [ld_compile \"$CC_FOR_TARGET -g -DPROTECTED_CHECK\" $srcdir/$subdir/main.c $tmpdir/main.o] {\n       if [ld_link $CC_FOR_TARGET $tmpdir/main \"$tmpdir/main.o\"] {\n \tcatch \"exec $tmpdir/main\" support_protected\n       }\n@@ -185,7 +185,6 @@ proc visibility_test { visibility progname testname main sh1 sh2 dat args } {\n \n proc visibility_run {visibility} {\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global SHCFLAG\n     global srcdir\n     global subdir\n@@ -237,7 +236,7 @@ proc visibility_run {visibility} {\n     } else {\n     # Compile the main program.  Make sure that PLT is used since PLT\n     # is expected.\n-    if ![ld_compile \"$CC_FOR_TARGET -g $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET -g $PLT_CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n \tunsupported \"visibility ($visibility) (non PIC)\"\n \tunsupported \"visibility ($visibility)\"\n     } else {\n@@ -247,8 +246,8 @@ proc visibility_run {visibility} {\n \t# will need to do more relocation work.  However, note that not\n \t# using -fpic will cause some of the tests to return different\n \t# results.  Make sure that PLT is used since PLT is expected.\n-\tif { ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n-\t     || ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n+\tif { ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n+\t     || ![ld_compile \"$CC_FOR_TARGET -g $NOPIE_CFLAGS $PLT_CFLAGS $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n \t    unsupported \"visibility ($visibility) (non PIC)\"\n \t} else {\n \t    # SunOS non PIC shared libraries don't permit some cases of\n@@ -336,8 +335,8 @@ proc visibility_run {visibility} {\n \n \t# Now compile the code using -fpic.\n \n-\tif { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n-\t    || ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n+\tif { ![ld_compile \"$CC_FOR_TARGET -g $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n+\t    || ![ld_compile \"$CC_FOR_TARGET -g $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n \t    unsupported \"visibility ($visibility)\"\n \t} else {\n \t    if { [ string match $visibility \"protected\" ]\n@@ -354,7 +353,7 @@ proc visibility_run {visibility} {\n \t# Don't bother.\n     } else {\n     # Now do the same tests again, but this time compile main.c PIC.\n-    if ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET -g $SHCFLAG $VSBCFLAG $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n \tunsupported \"visibility ($visibility) (PIC main, non PIC so)\"\n \tunsupported \"visibility ($visibility) (PIC main)\"\n     } else {\n@@ -446,7 +445,7 @@ visibility_run protected_undef_def\n visibility_run protected_weak\n visibility_run normal\n \n-if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET -g $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/common.c tmpdir/common.o] } {\n     unsupported \"common hidden symbol\"\n } else {\n     if ![ld_link $ld tmpdir/common \"tmpdir/common.o\"] {\n@@ -456,10 +455,10 @@ if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLT\n     }\n }\n \n-if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n+if { ![ld_compile \"$CC_FOR_TARGET -g $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" $srcdir/$subdir/test.c tmpdir/test.o] } {\n     unsupported \"weak hidden symbol\"\n } else {\n-   if { ![ld_compile \"$CC_FOR_TARGET -g $CFLAGS_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n+   if { ![ld_compile \"$CC_FOR_TARGET -g $NOSANITIZE_CFLAGS $NOLTO_CFLAGS -DSHARED $picflag\" $srcdir/$subdir/sh3.c tmpdir/sh3.o] } {\n \tunsupported \"weak hidden symbol\"\n     } else {\n \tif ![ld_link $ld tmpdir/sh3.so \"-shared tmpdir/sh3.o\"] {"
    },
    {
      "sha": "d7ee9361135bb3a225914af044597488365cd189",
      "filename": "ld/testsuite/ld-elfweak/elfweak.exp",
      "status": "modified",
      "additions": 17,
      "deletions": 17,
      "changes": 34,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfweak/elfweak.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-elfweak/elfweak.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-elfweak/elfweak.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -384,16 +384,16 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n }\n verbose \"Using $picflag to compile PIC code\"\n \n-if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/main.c $tmpdir/main.o]\n+if {![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/foo.c $tmpdir/foo.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/bar.c $tmpdir/bar.o]\n+    || ![ld_compile \"$cc_cmd\" $srcdir/$subdir/main.c $tmpdir/main.o]\n     || ![ld_link $cc_cmd $tmpdir/libbar.so \"$shared $tmpdir/bar.o\"]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/foo1a.c $tmpdir/foo1a.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/foo1b.c $tmpdir/foo1b.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/bar1a.c $tmpdir/bar1a.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/bar1b.c $tmpdir/bar1b.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/bar1c.c $tmpdir/bar1c.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/main1.c $tmpdir/main1.o]} then {\n     unsupported \"ELF weak\"\n } elseif {![ld_link $cc_cmd $tmpdir/libfoo1a.so \"$shared $tmpdir/foo1a.o\"]\n \t  || ![ld_link $cc_cmd $tmpdir/libfoo1b.so \"$shared $tmpdir/foo1b.o\"]\n@@ -424,10 +424,10 @@ if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/foo.c $tm\n     build_exec \"ELF weak data last DSO common\" foo \"libfoo1b.so main1.o libbar1a.so\" \"-Wl,--no-as-needed,-rpath,.,-rpath-link,.\" weakdata weakdata.dsym \"\"\n }\n \n-if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n+if {![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/size_foo.c $tmpdir/size_foo.o]\n+    || ![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar_s.o]\n+    || ![ld_compile \"$cc_cmd $picflag -DSIZE_BIG\" $srcdir/$subdir/size_bar.c $tmpdir/size_bar.o]\n+    || ![ld_compile \"$cc_cmd\" $srcdir/$subdir/size_main.c $tmpdir/size_main.o]} then {\n     unsupported \"ELF weak (size)\"\n } else {\n     build_lib \"ELF DSO small bar (size)\" libsize_bar_s \"size_bar_s.o\" \"\"\n@@ -439,11 +439,11 @@ if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/size_foo.\n verbose \"size2\"\n run_dump_test $srcdir/$subdir/size2\n \n-if {![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n+if {![ld_compile \"$cc_cmd $picflag\" $srcdir/$subdir/alias.c $tmpdir/alias.o]\n     || ![ld_link $cc_cmd $tmpdir/alias.so \"$shared $tmpdir/alias.o\"]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n-    || ![ld_compile \"$cc_cmd $CFLAGS_FOR_TARGET\" $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n+    || ![ld_compile $cc_cmd $srcdir/$subdir/aliasmain.c $tmpdir/aliasmain.o]\n+    || ![ld_compile $cc_cmd $srcdir/$subdir/weakref1.c $tmpdir/weakref1.o]\n+    || ![ld_compile $cc_cmd $srcdir/$subdir/weakref2.c $tmpdir/weakref2.o]} then {\n     unsupported \"ELF weak (alias)\"\n } else {\n     build_exec \"ELF weak (alias)\" alias \"aliasmain.o weakref1.o weakref2.o alias.so\" \"-Wl,-rpath=.,--no-as-needed\" alias \"\" \"\""
    },
    {
      "sha": "8071222d2f4bd23fee640d255389fc203dc5d54e",
      "filename": "ld/testsuite/ld-gc/gc.exp",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-gc/gc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-gc/gc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-gc/gc.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -37,7 +37,7 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] } {\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/gc.c $objfile\n+    ld_compile \"$CC_FOR_TARGET -c $cflags\" $srcdir/$subdir/gc.c $objfile\n }\n \n proc test_gc { testname filename linker ldflags} {\n@@ -144,9 +144,9 @@ if { [check_compiler_available] } {\n     if { [istarget \"*-*-linux*\"]\n \t || [istarget \"*-*-nacl*\"]\n \t || [istarget \"*-*-gnu*\"] } {\n-\tld_compile \"$CC_FOR_TARGET -fPIC $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr11218-1.c tmpdir/pr11218-1.o\n+\tld_compile \"$CC_FOR_TARGET -fPIC $cflags\" $srcdir/$subdir/pr11218-1.c tmpdir/pr11218-1.o\n \tld_link $ld tmpdir/pr11218-1.so \"-shared tmpdir/pr11218-1.o\"\n-\tld_compile \"$CC_FOR_TARGET -c $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr11218-2.c tmpdir/pr11218-2.o\n+\tld_compile \"$CC_FOR_TARGET -c $cflags\" $srcdir/$subdir/pr11218-2.c tmpdir/pr11218-2.o\n \trun_dump_test \"pr11218\"\n     }\n }\n@@ -157,18 +157,18 @@ if [is_pecoff_format] {\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n+    ld_compile \"$CC_FOR_TARGET $cflags\" $srcdir/$subdir/pr13683.c tmpdir/pr13683.o\n     run_dump_test \"pr13683\" $symdefs\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n+    ld_compile \"$CC_FOR_TARGET $cflags $NOPIE_CFLAGS\" $srcdir/$subdir/pr14265.c tmpdir/pr14265.o\n     run_dump_test \"pr14265\" $symdefs\n }\n \n if { [check_compiler_available] } {\n-    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n-    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n+    ld_compile \"$CC_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-1.c tmpdir/pr19161-1.o\n+    ld_compile \"$CC_FOR_TARGET $cflags -O0\" $srcdir/$subdir/pr19161-2.c tmpdir/pr19161-2.o\n     if [istarget hppa*-*-linux*] {\n \tset symdefs {{ld {--defsym '\\$\\$dyncall=0'}}}\n     }"
    },
    {
      "sha": "3ffb3f2af0da42a8e55e830adff69ad71de09815",
      "filename": "ld/testsuite/ld-pe/pe-compile.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 4,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-compile.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-compile.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-compile.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -35,12 +35,11 @@ if { ![check_compiler_available] } {\n \n proc build_basefile1_o {} {\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n \n     # Compile the object file.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/basefile1.s tmpdir/basefile1.o] {\n+    if ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/basefile1.s tmpdir/basefile1.o] {\n \tfail \"compiling basefile1 object\"\n     }\n }\n@@ -76,12 +75,11 @@ proc run_basefile_test { testname } {\n \n proc build_vers_script_dll_o {} {\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n \n     # Compile the object file.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -shared\" $srcdir/$subdir/vers-script-dll.c tmpdir/vers-script-dll.o] {\n+    if ![ld_compile \"$CC_FOR_TARGET -shared\" $srcdir/$subdir/vers-script-dll.c tmpdir/vers-script-dll.o] {\n \tfail \"compiling shared lib object\"\n     }\n }"
    },
    {
      "sha": "99a397957a25c68385b05de5536b00c2f1729f98",
      "filename": "ld/testsuite/ld-pe/pe-run.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-run.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-run.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -63,21 +63,20 @@ set tmpdir tmpdir\n \n proc test_direct_link_dll {} {\n     global CC_FOR_TARGET\n-    global CFLAGS_FOR_TARGET\n     global srcdir\n     global subdir\n     global tmpdir\n \n     # Compile the dll.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct_dll.c $tmpdir/direct_dll.o ] {\n+    if ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/direct_dll.c $tmpdir/direct_dll.o ] {\n \tfail \"compiling shared lib\"\n     } elseif ![ld_link \"$CC_FOR_TARGET -shared\" $tmpdir/direct_dll.dll \"$tmpdir/direct_dll.o\" ] {\n \tfail \"linking shared lib (.dll)\"\n     } elseif ![ld_link \"$CC_FOR_TARGET -shared\" $tmpdir/direct_dll.sl \"$tmpdir/direct_dll.o\" ] {\n \tfail \"linking shared lib (.sl)\"\n     } else {\n \t# Compile and link the client program.\n-\tif ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct_client.c $tmpdir/direct_client.o ] {\n+\tif ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/direct_client.c $tmpdir/direct_client.o ] {\n \t    fail \"compiling client\"\n \t} else {\n \t    # Check linking directly to direct_dll.dll."
    },
    {
      "sha": "45a08ef2a5239316dfd2a7356d6b79548939e5b6",
      "filename": "ld/testsuite/ld-pe/pe-run2.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-run2.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-pe/pe-run2.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-pe/pe-run2.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -71,15 +71,15 @@ proc test_direct2_link_dll {} {\n     global tmpdir\n \n     # Compile the dll.\n-    if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct2_dll.c $tmpdir/direct2_dll.o ] {\n+    if ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/direct2_dll.c $tmpdir/direct2_dll.o ] {\n \tfail \"compiling shared lib fastcall/stdcall\"\n     } elseif ![ld_link \"$CC_FOR_TARGET -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.dll \"$tmpdir/direct2_dll.o\" ] {\n \tfail \"linking shared lib (.dll) fastcall/stdcall\"\n     } elseif ![ld_link \"$CC_FOR_TARGET -shared -Wl,--enable-stdcall-fixup -Wl,--kill-at \" $tmpdir/direct2_dll.sl \"$tmpdir/direct2_dll.o\" ] {\n \tfail \"linking shared lib (.sl) fastcall/stdcall\"\n     } else {\n \t# Compile and link the client program.\n-\tif ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/direct2_client.c $tmpdir/direct2_client.o ] {\n+\tif ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/direct2_client.c $tmpdir/direct2_client.o ] {\n \t    fail \"compiling client fastcall/stdcall\"\n \t} else {\n \t    # Check linking directly to direct2_dll.dll."
    },
    {
      "sha": "8fac94113d0358fc2472f35fa11842eb14fef47e",
      "filename": "ld/testsuite/ld-plugin/plugin.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-plugin/plugin.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-plugin/plugin.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-plugin/plugin.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -95,12 +95,12 @@ if { [istarget m681*-*-*] || [istarget m68hc1*-*-*] || [istarget m9s12x*-*-*] }\n }\n \n if { $can_compile && \\\n-\t(![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/main.c tmpdir/main.o] \\\n-\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func.c tmpdir/func.o] \\\n-\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/text.c tmpdir/text.o] \\\n-\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/pr20070a.c tmpdir/pr20070a.o] \\\n-\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/dummy.s tmpdir/dummy.o] \\\n-\t|| ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/pr17973.s tmpdir/pr17973.o]) } {\n+\t(![ld_compile $CC_FOR_TARGET $srcdir/$subdir/main.c tmpdir/main.o] \\\n+\t|| ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/func.c tmpdir/func.o] \\\n+\t|| ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/text.c tmpdir/text.o] \\\n+\t|| ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/pr20070a.c tmpdir/pr20070a.o] \\\n+\t|| ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/dummy.s tmpdir/dummy.o] \\\n+\t|| ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/pr17973.s tmpdir/pr17973.o]) } {\n     # Defer fail until we have list of tests set.\n     set failed_compile 1\n }\n@@ -298,9 +298,9 @@ if { !$can_compile || $failed_compile } {\n run_ld_link_tests $plugin_tests\n \n if { [is_elf_format] \\\n-     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n-     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n-     && [ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET\" $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n+     && [ld_compile $CC_FOR_TARGET $srcdir/$subdir/func1p.c tmpdir/func1p.o] \\\n+     && [ld_compile $CC_FOR_TARGET $srcdir/$subdir/func2i.c tmpdir/func2i.o] \\\n+     && [ld_compile $CC_FOR_TARGET $srcdir/$subdir/func3h.c tmpdir/func3h.o] } {\n     run_ld_link_tests $plugin_extra_elf_tests\n }\n "
    },
    {
      "sha": "ff185a747d7083ccc7c8f7f73b995d0ce7598e04",
      "filename": "ld/testsuite/ld-scripts/crossref.exp",
      "status": "modified",
      "additions": 2,
      "deletions": 9,
      "changes": 11,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-scripts/crossref.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-scripts/crossref.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-scripts/crossref.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -38,12 +38,10 @@ if { ![check_compiler_available] } {\n     return\n }\n \n-set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n-\n # Pass -fplt to CC since -fno-plt doesn't work with NOCROSSREFS tests.\n # Also add $NOPIE_CFLAGS since PIE doesn't work NOCROSSREFS tests.\n-set old_CC \"$CC_FOR_TARGET\"\n-append CC_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS\"\n \n # Xtensa targets currently default to putting literal values in a separate\n # section and that requires linker script support, so put literals in text.\n@@ -68,7 +66,6 @@ if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$su\n     unsupported $test1\n     unsupported $test2\n     set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n-    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -105,7 +102,6 @@ if [string match \"\" $exec_output] then {\n if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross3.c\" tmpdir/cross3.o] } {\n     unsupported $test2\n     set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n-    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -130,14 +126,12 @@ if [string match \"\" $exec_output] then {\n if { ![ld_compile \"$CC_FOR_TARGET $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\" \"$srcdir/$subdir/cross4.c\" tmpdir/cross4.o] } {\n     unsupported $test3\n     set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n-    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n if ![ld_relocate $ld tmpdir/cross3-partial.o \"tmpdir/cross1.o tmpdir/cross4.o\"] {\n     fail $test3\n     set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n-    set CC_FOR_TARGET \"$old_CC\"\n     return\n }\n \n@@ -211,4 +205,3 @@ if [string match \"\" $exec_output] then {\n }\n \n set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n-set CC_FOR_TARGET \"$old_CC\""
    },
    {
      "sha": "655a56da99c1e5de4d3ee0321055a72b622a2381",
      "filename": "ld/testsuite/ld-shared/shared.exp",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-shared/shared.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-shared/shared.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-shared/shared.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -212,7 +212,7 @@ if { [istarget mips*-*-*] && ! [at_least_gcc_version 4 3] } then {\n verbose \"Using $picflag to compile PIC code\"\n \n # Compile the main program.\n-if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n+if ![ld_compile \"$CC_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o] {\n     unsupported \"shared (non PIC)\"\n     unsupported \"shared\"\n } else {\n@@ -223,8 +223,8 @@ if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/mai\n     # using -fpic will cause some of the tests to return different\n     # results.  Make sure that PLT is used since PLT is expected.\n     global PLT_CFLAGS NOPIE_CFLAGS\n-    if { ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $NOPIE_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n-\t || ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $NOPIE_CFLAGS $SHCFLAG\" $srcdir/$subdir/sh1.c $tmpdir/sh1np.o]\n+\t || ![ld_compile \"$CC_FOR_TARGET $PLT_CFLAGS $SHCFLAG\" $srcdir/$subdir/sh2.c $tmpdir/sh2np.o] } {\n \tunsupported \"shared (non PIC)\"\n     } else { if { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \tshared_test shnp \"shared (nonPIC)\" mainnp.o sh1np.o sh2np.o xcoff\n@@ -284,25 +284,25 @@ if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/mai\n \n     # Now compile the code using -fpic.\n \n-    if { ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n-\t || ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n+    if { ![ld_compile \"$CC_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o]\n+\t || ![ld_compile \"$CC_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh2.c $tmpdir/sh2p.o] } {\n \tunsupported \"shared\"\n     } else {\n \tif { [istarget rs6000*-*-aix*] || [istarget powerpc*-*-aix*] } {\n \t    shared_test shp \"shared\" mainnp.o sh1p.o sh2p.o xcoff\n \t} else {\n \t    shared_test shp \"shared\" mainnp.o sh1p.o sh2p.o shared\n-\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n-\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n+\t    ld_compile \"$CC_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n+\t    ld_compile \"$CC_FOR_TARGET -DSYMBOLIC_TEST -DXCOFF_TEST $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n \t    shared_test shp \"shared -Bsymbolic\" mainnp.o sh1p.o sh2p.o symbolic \"-Bsymbolic\"\n-\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n-\t    ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n+\t    ld_compile \"$CC_FOR_TARGET $SHCFLAG\" $srcdir/$subdir/main.c $tmpdir/mainnp.o\n+\t    ld_compile \"$CC_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/sh1.c $tmpdir/sh1p.o\n \t}\n     }\n }\n \n # Now do the same tests again, but this time compile main.c PIC.\n-if ![ld_compile \"$CC_FOR_TARGET $CFLAGS_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n+if ![ld_compile \"$CC_FOR_TARGET $SHCFLAG $picflag\" $srcdir/$subdir/main.c $tmpdir/mainp.o] {\n     unsupported \"shared (PIC main, non PIC so)\"\n     unsupported \"shared (PIC main)\"\n } else {"
    },
    {
      "sha": "57380ca31464a50d18176094736667ac1b4f5564",
      "filename": "ld/testsuite/ld-srec/srec.exp",
      "status": "modified",
      "additions": 9,
      "deletions": 14,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-srec/srec.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/669d5115345a3f3dc1c06aec31098eb4b349a6d0/ld/testsuite/ld-srec/srec.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-srec/srec.exp?ref=669d5115345a3f3dc1c06aec31098eb4b349a6d0",
      "patch": "@@ -355,25 +355,23 @@ if { ![check_compiler_available] } {\n # tests. Also add $NOPIE_CFLAGS and $NOPIE_LDFLAGS if PIE doesn't work\n # with S-records.  Also add $NOCF_PROTECTION_CFLAGS for S-records.\n # Also add $NOSANITIZE_CFLAGS for S-records.\n-set old_CC \"$CC_FOR_TARGET\"\n-append CC_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n-set old_CXX \"$CXX_FOR_TARGET\"\n+set old_CFLAGS \"$CFLAGS_FOR_TARGET\"\n+append CFLAGS_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n set old_CXXFLAGS \"$CXXFLAGS_FOR_TARGET\"\n append CXXFLAGS_FOR_TARGET \" $PLT_CFLAGS $NOPIE_CFLAGS $NOPIE_LDFLAGS $NOCF_PROTECTION_CFLAGS $NOSANITIZE_CFLAGS $NOLTO_CFLAGS\"\n \n # S-records can't handle .note.gnu.property sections.\n if { [is_elf_format] \\\n      && ([istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"]) } {\n-    append CC_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n-    append CXX_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n+    append CFLAGS_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n+    append CXXFLAGS_FOR_TARGET \" -Wa,-mx86-used-note=no\"\n }\n \n if { ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/sr1.c tmpdir/sr1.o] \\\n      || ![ld_compile $CC_FOR_TARGET $srcdir/$subdir/sr2.c tmpdir/sr2.o] } {\n     unsupported $test1\n     unsupported $test2\n-    set CC_FOR_TARGET \"$old_CC\"\n-    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n     set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n@@ -446,16 +444,14 @@ run_srec_test $test1 \"tmpdir/sr1.o tmpdir/sr2.o\"\n \n if { ![is_remote host] && [which $CXX_FOR_TARGET] == 0 } {\n     untested $test2\n-    set CC_FOR_TARGET \"$old_CC\"\n-    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n     set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n \n-if ![ld_compile \"$CXX_FOR_TARGET $CXXFLAGS_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/sr3.cc tmpdir/sr3.o] {\n+if ![ld_compile \"$CXX_FOR_TARGET -fno-exceptions\" $srcdir/$subdir/sr3.cc tmpdir/sr3.o] {\n     unsupported $test2\n-    set CC_FOR_TARGET \"$old_CC\"\n-    set CXX_FOR_TARGET \"$old_CXX\"\n+    set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n     set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\"\n     return\n }\n@@ -482,6 +478,5 @@ setup_xfail \"bpf-*-*\"\n \n run_srec_test $test2 \"tmpdir/sr3.o\"\n \n-set CC_FOR_TARGET \"$old_CC\"\n-set CXX_FOR_TARGET \"$old_CXX\"\n+set CFLAGS_FOR_TARGET \"$old_CFLAGS\"\n set CXXFLAGS_FOR_TARGET \"$old_CXXFLAGS\""
    }
  ]
}