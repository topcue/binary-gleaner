{
  "sha": "ffcc2b69d1a516f55ede0e12a8847913651ea588",
  "node_id": "C_kwDOANOeidoAKGZmY2MyYjY5ZDFhNTE2ZjU1ZWRlMGUxMmE4ODQ3OTEzNjUxZWE1ODg",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-05T15:43:59Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tromey@adacore.com",
      "date": "2022-01-05T17:08:15Z"
    },
    "message": "Do not print anything when self-backtrace unavailable\n\nRight now, gdb's self-backtrace feature will still print something\nwhen a backtrace is unavailable:\n\n   sig_write (_(\"----- Backtrace -----\\n\"));\n[...]\n     sig_write (_(\"Backtrace unavailable\\n\"));\n    sig_write (\"---------------------\\n\");\n\nHowever, if GDB_PRINT_INTERNAL_BACKTRACE is undefined, it seems better\nto me to print nothing at all.\n\nThis patch implements this change.  It also makes a couple of other\nsmall changes in this same module: it adds a header guard to\nbt-utils.h, and it protects the definitions of\ngdb_internal_backtrace_1 with a check of GDB_PRINT_INTERNAL_BACKTRACE.",
    "tree": {
      "sha": "a221b92aa9db5edd6a51845338a5ae71dd067fca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/a221b92aa9db5edd6a51845338a5ae71dd067fca"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/ffcc2b69d1a516f55ede0e12a8847913651ea588",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffcc2b69d1a516f55ede0e12a8847913651ea588",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/ffcc2b69d1a516f55ede0e12a8847913651ea588",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/ffcc2b69d1a516f55ede0e12a8847913651ea588/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "93f3b8eeaac14fe1d9343ce1b8eca87be2ce5843",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/93f3b8eeaac14fe1d9343ce1b8eca87be2ce5843",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/93f3b8eeaac14fe1d9343ce1b8eca87be2ce5843"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 11,
    "deletions": 2
  },
  "files": [
    {
      "sha": "681f02c733b61b300dc14ebe3ec3abbef8e70f54",
      "filename": "gdb/bt-utils.c",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ffcc2b69d1a516f55ede0e12a8847913651ea588/gdb/bt-utils.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ffcc2b69d1a516f55ede0e12a8847913651ea588/gdb/bt-utils.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bt-utils.c?ref=ffcc2b69d1a516f55ede0e12a8847913651ea588",
      "patch": "@@ -41,6 +41,7 @@ gdb_internal_backtrace_set_cmd (const char *args, int from_tty,\n #endif\n }\n \n+#ifdef GDB_PRINT_INTERNAL_BACKTRACE\n #ifdef GDB_PRINT_INTERNAL_BACKTRACE_USING_LIBBACKTRACE\n \n /* Callback used by libbacktrace if it encounters an error.  */\n@@ -142,7 +143,10 @@ gdb_internal_backtrace_1 ()\n     sig_write (_(\"Backtrace might be incomplete.\\n\"));\n }\n \n+#else\n+#error \"unexpected internal backtrace policy\"\n #endif\n+#endif /* GDB_PRINT_INTERNAL_BACKTRACE */\n \n /* See bt-utils.h.  */\n \n@@ -152,19 +156,19 @@ gdb_internal_backtrace ()\n   if (current_ui == nullptr)\n     return;\n \n+#ifdef GDB_PRINT_INTERNAL_BACKTRACE\n   const auto sig_write = [] (const char *msg) -> void\n   {\n     gdb_stderr->write_async_safe (msg, strlen (msg));\n   };\n \n   sig_write (_(\"----- Backtrace -----\\n\"));\n \n-#ifdef GDB_PRINT_INTERNAL_BACKTRACE\n   if (gdb_stderr->fd () > -1)\n     gdb_internal_backtrace_1 ();\n   else\n-#endif\n     sig_write (_(\"Backtrace unavailable\\n\"));\n \n   sig_write (\"---------------------\\n\");\n+#endif\n }"
    },
    {
      "sha": "898af41044b6e8eeb79c49035c3d9ef1b814d834",
      "filename": "gdb/bt-utils.h",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/ffcc2b69d1a516f55ede0e12a8847913651ea588/gdb/bt-utils.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/ffcc2b69d1a516f55ede0e12a8847913651ea588/gdb/bt-utils.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/bt-utils.h?ref=ffcc2b69d1a516f55ede0e12a8847913651ea588",
      "patch": "@@ -18,6 +18,9 @@\n /* Support for printing a backtrace when GDB hits an error.  This is not\n    for printing backtraces of the inferior, but backtraces of GDB itself.  */\n \n+#ifndef BT_UTILS_H\n+#define BT_UTILS_H\n+\n #ifdef HAVE_LIBBACKTRACE\n # include \"backtrace.h\"\n # include \"backtrace-supported.h\"\n@@ -67,3 +70,5 @@ extern void gdb_internal_backtrace ();\n \n extern void gdb_internal_backtrace_set_cmd (const char *args, int from_tty,\n \t\t\t\t\t    cmd_list_element *c);\n+\n+#endif /* BT_UTILS_H */"
    }
  ]
}