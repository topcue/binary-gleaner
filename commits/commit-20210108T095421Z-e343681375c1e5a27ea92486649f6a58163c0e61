{
  "sha": "e343681375c1e5a27ea92486649f6a58163c0e61",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ZTM0MzY4MTM3NWMxZTVhMjdlYTkyNDg2NjQ5ZjZhNTgxNjNjMGU2MQ==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-07T17:13:21Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-01-08T09:54:21Z"
    },
    "message": "gdb/fortran: Correct the lval type for array elements of internal vars\n\nSince this commit:\n\n  commit a5c641b57b0b5e245b8a011cccc93a4120c8bd63\n  Date:   Thu Oct 8 16:45:59 2020 +0100\n\n      gdb/fortran: Add support for Fortran array slices at the GDB prompt\n\nA bug was introduced into GDB.  Consider this Fortan array:\n\n  integer, dimension (1:10) :: array\n  array = 1\n\nNow inside GDB:\n\n  (gdb) set $var = array\n  (gdb) set $var(1) = 2\n  Left operand of assignment is not an lvalue.\n\nThe problem is that the new code for slicing Fortran arrays now does\nnot set the lval type correctly for arrays that are not in memory.\nThis is easily fixed by making use of value_from_component.\n\nAfter this the above example behaves as you'd expect.\n\ngdb/ChangeLog:\n\n\t* f-lang.c (fortran_value_subarray): Call value_from_component.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.fortran/intvar-array.exp: New file.\n\t* gdb.fortran/intvar-array.f90: New file.",
    "tree": {
      "sha": "47d8e5fea92b292b5a90b80be8bbc08cf2106add",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/47d8e5fea92b292b5a90b80be8bbc08cf2106add"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/e343681375c1e5a27ea92486649f6a58163c0e61",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e343681375c1e5a27ea92486649f6a58163c0e61",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/e343681375c1e5a27ea92486649f6a58163c0e61",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e343681375c1e5a27ea92486649f6a58163c0e61/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f4cfa91741b71bc4b64c6e8ec132873d6d5f7957",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/f4cfa91741b71bc4b64c6e8ec132873d6d5f7957",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/f4cfa91741b71bc4b64c6e8ec132873d6d5f7957"
    }
  ],
  "stats": {
    "total": 102,
    "additions": 97,
    "deletions": 5
  },
  "files": [
    {
      "sha": "f01a1428804463bc9a9fc853a20c5c20e06fd687",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=e343681375c1e5a27ea92486649f6a58163c0e61",
      "patch": "@@ -1,3 +1,7 @@\n+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-lang.c (fortran_value_subarray): Call value_from_component.\n+\n 2021-01-07  Mike Frysinger  <vapier@gentoo.org>\n \n \t* remote-sim.c: Include memory-map.h."
    },
    {
      "sha": "832910969efee496800b44a29d4eb836d01f0de7",
      "filename": "gdb/f-lang.c",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/f-lang.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/f-lang.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-lang.c?ref=e343681375c1e5a27ea92486649f6a58163c0e61",
      "patch": "@@ -690,11 +690,7 @@ fortran_value_subarray (struct value *array, struct expression *exp,\n \t\t\t\t\t\t      + total_offset));\n \t}\n       else if (!value_lazy (array))\n-\t{\n-\t  const void *valaddr = value_contents (array) + total_offset;\n-\t  array = allocate_value (array_slice_type);\n-\t  memcpy (value_contents_raw (array), valaddr, TYPE_LENGTH (array_slice_type));\n-\t}\n+\tarray = value_from_component (array, array_slice_type, total_offset);\n       else\n \terror (_(\"cannot subscript arrays that are not in memory\"));\n     }"
    },
    {
      "sha": "5ed3e54e504e3a33e6ddfd377413888063bc8a6b",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=e343681375c1e5a27ea92486649f6a58163c0e61",
      "patch": "@@ -1,3 +1,8 @@\n+2021-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.fortran/intvar-array.exp: New file.\n+\t* gdb.fortran/intvar-array.f90: New file.\n+\n 2021-01-07  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/assign_arr.exp: Add 'others' test."
    },
    {
      "sha": "1569f51fa4e390b5c9cd766c0e16200915b561d3",
      "filename": "gdb/testsuite/gdb.fortran/intvar-array.exp",
      "status": "added",
      "additions": 59,
      "deletions": 0,
      "changes": 59,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/gdb.fortran/intvar-array.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/gdb.fortran/intvar-array.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/intvar-array.exp?ref=e343681375c1e5a27ea92486649f6a58163c0e61",
      "patch": "@@ -0,0 +1,59 @@\n+# Copyright 2021 Free Software Foundation, Inc.\n+#\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+# Place a non-dynamic array into an internal variable, then show that\n+# modifications to either the internal variable, or to the original\n+# array are independent.\n+\n+standard_testfile \".f90\"\n+load_lib \"fortran.exp\"\n+\n+if { [prepare_for_testing ${testfile}.exp ${testfile} ${srcfile} \\\n+    {debug f90 quiet}] } {\n+    return -1\n+}\n+\n+if ![fortran_runto_main] {\n+    untested \"could not run to main\"\n+    return -1\n+}\n+\n+gdb_breakpoint [gdb_get_line_number \"Break here\"]\n+gdb_continue_to_breakpoint \"Break here\"\n+\n+# Take a copy of the array into an internal variable.\n+gdb_test_no_output \"set \\$a=arr\" \"set \\$a internal variable\"\n+\n+# Validate the original contents.\n+gdb_test \"print arr\" \\\n+    \" = \\\\(1, 1, 1, 1, 1, 1, 1, 1, 1, 1\\\\)\" \\\n+    \"print arr contents\"\n+gdb_test \"print \\$a\" \\\n+    \" = \\\\(1, 1, 1, 1, 1, 1, 1, 1, 1, 1\\\\)\" \\\n+    \"print \\$a contents\"\n+\n+# Modify the original array in memory.\n+gdb_test_no_output \"set arr(5) = 5\"\n+\n+# Modify the internal variable copy.\n+gdb_test_no_output \"set \\$a(3) = 3\"\n+\n+# Now check that the two values have been updated independently.\n+gdb_test \"print arr\" \\\n+    \" = \\\\(1, 1, 1, 1, 5, 1, 1, 1, 1, 1\\\\)\" \\\n+    \"print arr contents after change\"\n+gdb_test \"print \\$a\" \\\n+    \" = \\\\(1, 1, 3, 1, 1, 1, 1, 1, 1, 1\\\\)\" \\\n+    \"print \\$a contents after change\""
    },
    {
      "sha": "3368b521378bb34c78d78fd63b69d012d5c53625",
      "filename": "gdb/testsuite/gdb.fortran/intvar-array.f90",
      "status": "added",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/gdb.fortran/intvar-array.f90",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/e343681375c1e5a27ea92486649f6a58163c0e61/gdb/testsuite/gdb.fortran/intvar-array.f90",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.fortran/intvar-array.f90?ref=e343681375c1e5a27ea92486649f6a58163c0e61",
      "patch": "@@ -0,0 +1,28 @@\n+! Copyright 2021 Free Software Foundation, Inc.\n+!\n+! This program is free software; you can redistribute it and/or modify\n+! it under the terms of the GNU General Public License as published by\n+! the Free Software Foundation; either version 3 of the License, or\n+! (at your option) any later version.\n+!\n+! This program is distributed in the hope that it will be useful,\n+! but WITHOUT ANY WARRANTY; without even the implied warranty of\n+! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+! GNU General Public License for more details.\n+!\n+! You should have received a copy of the GNU General Public License\n+! along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+program main\n+  integer, dimension (1:10) :: array\n+  array = 1\n+\n+  call take_array (array)\n+contains\n+  subroutine take_array (arr)\n+    integer :: arr (10)\n+\n+    print *, \"\"\t! Break here.\n+    print *, arr\n+  end subroutine take_array\n+end program main"
    }
  ]
}