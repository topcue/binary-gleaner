{
  "sha": "b97eff8ffac51061413437ed3fe9b3a12f136cd4",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Yjk3ZWZmOGZmYWM1MTA2MTQxMzQzN2VkM2ZlOWIzYTEyZjEzNmNkNA==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-05-20T13:09:22Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2021-06-01T09:02:49Z"
    },
    "message": "gdb: run 'maint selftest' with an executable loaded\n\nI spotted that 'maint selftest' with an executable loaded into GDB,\nwould (when GDB was compiled for all targets) crash GDB.  I fixed this\nwith a commit to bfd:\n\n  commit 427e4066afd13d1bf52c849849475f536e285d66\n  Date:   Thu May 20 09:16:41 2021 +0100\n\n      gdb/bfd: avoid crash when architecture is forced to csky or riscv\n\nHowever, this issue was not spotted as we currently only run 'maint\nselftest' without an executable loaded.\n\nThis commit extends the testsuite to run 'maint selftest' both with\nand without an executable loaded into GDB.\n\nCurrently, when no executable is loaded into GDB all of the selftest\npass (i.e. the fail count is 0), however, when running with an\nexecutable loaded, I am seeing 1 failure (on an x86-64 GNU/Linux\nhost).\n\nThis failure is from the ARM disassembler tests, it appears that the\ndisassembler somehow gets itself into a state where it thinks it is in\nthumb mode; when running the same test without an executable loaded\nthis doesn't happen.\n\nThis commit doesn't fix the ARM disassembler issue, but I thought it\nwas worth adding this anyway, as this will spot if GDB again starts to\ncrash when 'maint selftest' is run.\n\ngdb/testsuite/ChangeLog:\n\n\t* gdb.gdb/unittest.c: New file.\n\t* gdb.gdb/unittest.exp: Run with and without a binary file loaded\n\tinto GDB.",
    "tree": {
      "sha": "228dd89afb6ce6d6d6bd131340100c12788ba207",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/228dd89afb6ce6d6d6bd131340100c12788ba207"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/b97eff8ffac51061413437ed3fe9b3a12f136cd4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b97eff8ffac51061413437ed3fe9b3a12f136cd4",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/b97eff8ffac51061413437ed3fe9b3a12f136cd4",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b97eff8ffac51061413437ed3fe9b3a12f136cd4/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "9b715c68e84d93d6671fac661cad391970462ffb",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9b715c68e84d93d6671fac661cad391970462ffb",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/9b715c68e84d93d6671fac661cad391970462ffb"
    }
  ],
  "stats": {
    "total": 97,
    "additions": 78,
    "deletions": 19
  },
  "files": [
    {
      "sha": "ff26ba57d32b709033fbcb7cd1a61ffc0a81f927",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=b97eff8ffac51061413437ed3fe9b3a12f136cd4",
      "patch": "@@ -1,3 +1,9 @@\n+2021-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* gdb.gdb/unittest.c: New file.\n+\t* gdb.gdb/unittest.exp: Run with and without a binary file loaded\n+\tinto GDB.\n+\n 2021-06-01  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gdb.base/premature-dummy-frame-removal.c: New file."
    },
    {
      "sha": "9811b15f06d5a78008ab6a6c585ff933e234aea8",
      "filename": "gdb/testsuite/gdb.gdb/unittest.c",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/gdb.gdb/unittest.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/gdb.gdb/unittest.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/unittest.c?ref=b97eff8ffac51061413437ed3fe9b3a12f136cd4",
      "patch": "@@ -0,0 +1,22 @@\n+/* This testcase is part of GDB, the GNU debugger.\n+\n+   Copyright 2021 Free Software Foundation, Inc.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n+\n+int\n+main ()\n+{\n+  return 0;\n+}"
    },
    {
      "sha": "61a6c0efb4bdccb0a257e512758d18833801f857",
      "filename": "gdb/testsuite/gdb.gdb/unittest.exp",
      "status": "modified",
      "additions": 50,
      "deletions": 19,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/gdb.gdb/unittest.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/b97eff8ffac51061413437ed3fe9b3a12f136cd4/gdb/testsuite/gdb.gdb/unittest.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.gdb/unittest.exp?ref=b97eff8ffac51061413437ed3fe9b3a12f136cd4",
      "patch": "@@ -22,25 +22,56 @@ if [gdb_debug_enabled] {\n \n set do_xml_test [expr ![gdb_skip_xml_test]]\n \n-gdb_start\n-\n-set test \"maintenance selftest\"\n-gdb_test_multiple $test $test {\n-  -re \".*Running selftest \\[^\\n\\r\\]+\\.\" {\n-\t# The selftests can take some time to complete.  To prevent\n-\t# timeout spot the 'Running ...' lines going past, so long as\n-\t# these are produced quickly enough then the overall test will\n-\t# not timeout.\n-\texp_continue\n-  }\n-  -re \"Ran ($decimal) unit tests, 0 failed\\r\\n$gdb_prompt $\" {\n-\tset num_ran $expect_out(1,string)\n-\tgdb_assert \"$num_ran > 0\" $test\n-  }\n-\n-  -re \"Selftests have been disabled for this build.\\r\\n$gdb_prompt $\" {\n-\tunsupported $test\n-  }\n+standard_testfile\n+\n+if {[prepare_for_testing \"failed to prepare\" $testfile $srcfile debug]} {\n+    return -1\n+}\n+\n+proc run_selftests { binfile } {\n+    global decimal gdb_prompt\n+\n+    if { $binfile == \"\" } {\n+\tgdb_exit\n+\tgdb_start\n+    } else {\n+\tclean_restart ${binfile}\n+    }\n+\n+    set test \"maintenance selftest\"\n+    gdb_test_multiple $test $test {\n+\t-re \".*Running selftest \\[^\\n\\r\\]+\\.\" {\n+\t    # The selftests can take some time to complete.  To prevent\n+\t    # timeout spot the 'Running ...' lines going past, so long as\n+\t    # these are produced quickly enough then the overall test will\n+\t    # not timeout.\n+\t    exp_continue\n+\t}\n+\t-re \"Ran ($decimal) unit tests, ($decimal) failed\\r\\n$gdb_prompt $\" {\n+\t    set num_ran $expect_out(1,string)\n+\t    set num_failed $expect_out(2,string)\n+\t    gdb_assert \"$num_ran > 0\" \"$test, ran some tests\"\n+\n+\t    if { $binfile != \"\" } {\n+\t\t# There's a known issue here (see PR gdb/27891),\n+\t\t# however, we should not have more than 1 failure.\n+\t\tgdb_assert \"$num_failed <= 1\" \"$test, failed no more than 1\"\n+\t\tsetup_kfail \"gdb/27891\" \"*-*-*\"\n+\t    }\n+\t    gdb_assert \"$num_failed == 0\" \"$test, failed none\"\n+\t}\n+\t-re \"Selftests have been disabled for this build.\\r\\n$gdb_prompt $\" {\n+\t    unsupported $test\n+\t}\n+    }\n+}\n+\n+with_test_prefix \"no executable loaded\" {\n+    run_selftests \"\"\n+}\n+\n+with_test_prefix \"executable loaded\" {\n+    run_selftests ${binfile}\n }\n \n if { ![is_remote host] && $do_xml_test } {"
    }
  ]
}