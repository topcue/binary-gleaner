{
  "sha": "a2b2297a204898fa273a825d82385ce1b48941e3",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6YTJiMjI5N2EyMDQ4OThmYTI3M2E4MjVkODIzODVjZTFiNDg5NDFlMw==",
  "commit": {
    "author": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-17T15:11:54Z"
    },
    "committer": {
      "name": "Tankut Baris Aktemur",
      "email": "tankut.baris.aktemur@intel.com",
      "date": "2020-02-20T16:35:07Z"
    },
    "message": "gdbserver: turn target op 'supports_z_point_type' into a method\n\ngdbserver/ChangeLog:\n2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n\n\tTurn process_stratum_target's supports_z_point_type op into a\n\tmethod of process_target.\n\n\t* target.h (struct process_stratum_target): Remove the target op.\n\t(class process_target): Add the target op.\n\t* target.cc (process_target::supports_z_point_type): Define.\n\n\tUpdate the derived classes and callers below.\n\n\t* mem-break.cc (z_type_supported): Update.\n\t* linux-low.cc (linux_target_ops): Update.\n\t(linux_supports_z_point_type): Turn into ...\n\t(linux_process_target::supports_z_point_type): ... this.\n\t* linux-low.h (class linux_process_target): Update.\n\t* lynx-low.cc (lynx_target_ops): Update.\n\t* nto-low.cc (nto_target_ops): Update.\n\t(nto_supports_z_point_type): Turn into ...\n\t(nto_process_target::supports_z_point_type): ... this.\n\t* nto-low.h (class nto_process_target): Update.\n\t* win32-low.cc (win32_target_ops): Update.\n\t(win32_supports_z_point_type): Turn into ...\n\t(win32_process_target::supports_z_point_type): ... this.\n\t* win32-low.h (class win32_process_target): Update.",
    "tree": {
      "sha": "71e3d68fc4502d203cda96e0637acd371a4f4ba6",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/71e3d68fc4502d203cda96e0637acd371a4f4ba6"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/a2b2297a204898fa273a825d82385ce1b48941e3",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2b2297a204898fa273a825d82385ce1b48941e3",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/a2b2297a204898fa273a825d82385ce1b48941e3",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/a2b2297a204898fa273a825d82385ce1b48941e3/comments",
  "author": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "barisaktemur",
    "id": 55686642,
    "node_id": "MDQ6VXNlcjU1Njg2NjQy",
    "avatar_url": "https://avatars.githubusercontent.com/u/55686642?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/barisaktemur",
    "html_url": "https://github.com/barisaktemur",
    "followers_url": "https://api.github.com/users/barisaktemur/followers",
    "following_url": "https://api.github.com/users/barisaktemur/following{/other_user}",
    "gists_url": "https://api.github.com/users/barisaktemur/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/barisaktemur/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/barisaktemur/subscriptions",
    "organizations_url": "https://api.github.com/users/barisaktemur/orgs",
    "repos_url": "https://api.github.com/users/barisaktemur/repos",
    "events_url": "https://api.github.com/users/barisaktemur/events{/privacy}",
    "received_events_url": "https://api.github.com/users/barisaktemur/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eac215cc618400bd4f808ce48fa51fd53c702adc",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/eac215cc618400bd4f808ce48fa51fd53c702adc",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/eac215cc618400bd4f808ce48fa51fd53c702adc"
    }
  ],
  "stats": {
    "total": 81,
    "additions": 57,
    "deletions": 24
  },
  "files": [
    {
      "sha": "7afc59ffff7da7b11b0dddf2b81f6232ce997a88",
      "filename": "gdbserver/ChangeLog",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/ChangeLog?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -1,3 +1,29 @@\n+2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n+\n+\tTurn process_stratum_target's supports_z_point_type op into a\n+\tmethod of process_target.\n+\n+\t* target.h (struct process_stratum_target): Remove the target op.\n+\t(class process_target): Add the target op.\n+\t* target.cc (process_target::supports_z_point_type): Define.\n+\n+\tUpdate the derived classes and callers below.\n+\n+\t* mem-break.cc (z_type_supported): Update.\n+\t* linux-low.cc (linux_target_ops): Update.\n+\t(linux_supports_z_point_type): Turn into ...\n+\t(linux_process_target::supports_z_point_type): ... this.\n+\t* linux-low.h (class linux_process_target): Update.\n+\t* lynx-low.cc (lynx_target_ops): Update.\n+\t* nto-low.cc (nto_target_ops): Update.\n+\t(nto_supports_z_point_type): Turn into ...\n+\t(nto_process_target::supports_z_point_type): ... this.\n+\t* nto-low.h (class nto_process_target): Update.\n+\t* win32-low.cc (win32_target_ops): Update.\n+\t(win32_supports_z_point_type): Turn into ...\n+\t(win32_process_target::supports_z_point_type): ... this.\n+\t* win32-low.h (class win32_process_target): Update.\n+\n 2020-02-20  Tankut Baris Aktemur  <tankut.baris.aktemur@intel.com>\n \n \tTurn process_stratum_target's read_auxv op into a method of"
    },
    {
      "sha": "37e46a8ca22e21ec25f0189f2e99818c46fc4adf",
      "filename": "gdbserver/linux-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/linux-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/linux-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -5957,8 +5957,8 @@ linux_process_target::read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n    pass on the function call if the target has registered a\n    corresponding function.  */\n \n-static int\n-linux_supports_z_point_type (char z_type)\n+bool\n+linux_process_target::supports_z_point_type (char z_type)\n {\n   return (the_low_target.supports_z_point_type != NULL\n \t  && the_low_target.supports_z_point_type (z_type));\n@@ -7376,7 +7376,6 @@ linux_get_hwcap2 (int wordsize)\n static linux_process_target the_linux_target;\n \n static process_stratum_target linux_target_ops = {\n-  linux_supports_z_point_type,\n   linux_insert_point,\n   linux_remove_point,\n   linux_stopped_by_sw_breakpoint,"
    },
    {
      "sha": "052beb6c44c476b0935d60f29b5b074aae6802fd",
      "filename": "gdbserver/linux-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/linux-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/linux-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/linux-low.h?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -314,6 +314,8 @@ class linux_process_target : public process_target\n \n   int read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n \t\t unsigned int len) override;\n+\n+  bool supports_z_point_type (char z_type) override;\n };\n \n #define get_thread_lwp(thr) ((struct lwp_info *) (thread_target_data (thr)))"
    },
    {
      "sha": "dd4584797c4bc85b274e1aa75fc98408060bbc1c",
      "filename": "gdbserver/lynx-low.cc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/lynx-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/lynx-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/lynx-low.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -729,7 +729,6 @@ static lynx_process_target the_lynx_target;\n /* The LynxOS target_ops vector.  */\n \n static process_stratum_target lynx_target_ops = {\n-  NULL,  /* supports_z_point_type */\n   NULL,  /* insert_point */\n   NULL,  /* remove_point */\n   NULL,  /* stopped_by_sw_breakpoint */"
    },
    {
      "sha": "b00e9fca35399fd7e6c6210710be093bebc10c84",
      "filename": "gdbserver/mem-break.cc",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/mem-break.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/mem-break.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/mem-break.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -1005,8 +1005,7 @@ static int\n z_type_supported (char z_type)\n {\n   return (z_type >= '0' && z_type <= '4'\n-\t  && the_target->supports_z_point_type != NULL\n-\t  && the_target->supports_z_point_type (z_type));\n+\t  && the_target->pt->supports_z_point_type (z_type));\n }\n \n /* Create a new GDB breakpoint of type Z_TYPE at ADDR with kind KIND."
    },
    {
      "sha": "204d8066455e540f9bfec870529654af64b943c3",
      "filename": "gdbserver/nto-low.cc",
      "status": "modified",
      "additions": 4,
      "deletions": 5,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/nto-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/nto-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -789,8 +789,8 @@ nto_process_target::read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n   return nto_read_auxv_from_initial_stack (initial_stack, myaddr, len);\n }\n \n-static int\n-nto_supports_z_point_type (char z_type)\n+bool\n+nto_process_target::supports_z_point_type (char z_type)\n {\n   switch (z_type)\n     {\n@@ -799,9 +799,9 @@ nto_supports_z_point_type (char z_type)\n     case Z_PACKET_WRITE_WP:\n     case Z_PACKET_READ_WP:\n     case Z_PACKET_ACCESS_WP:\n-      return 1;\n+      return true;\n     default:\n-      return 0;\n+      return false;\n     }\n }\n \n@@ -950,7 +950,6 @@ nto_sw_breakpoint_from_kind (int kind, int *size)\n static nto_process_target the_nto_target;\n \n static process_stratum_target nto_target_ops = {\n-  nto_supports_z_point_type,\n   nto_insert_point,\n   nto_remove_point,\n   NULL, /* stopped_by_sw_breakpoint */"
    },
    {
      "sha": "65bbf7e818cddd3e746ecf01db2df1fd3a97f720",
      "filename": "gdbserver/nto-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/nto-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/nto-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/nto-low.h?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -84,6 +84,8 @@ class nto_process_target : public process_target\n \n   int read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n \t\t unsigned int len) override;\n+\n+  bool supports_z_point_type (char z_type) override;\n };\n \n /* The inferior's target description.  This is a global because the"
    },
    {
      "sha": "22339622e09902f6689a6578309ff6c9f7b5574d",
      "filename": "gdbserver/target.cc",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/target.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/target.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -427,3 +427,9 @@ process_target::read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n {\n   gdb_assert_not_reached (\"target op read_auxv not supported\");\n }\n+\n+bool\n+process_target::supports_z_point_type (char z_type)\n+{\n+  return false;\n+}"
    },
    {
      "sha": "3262371749e6e969fe94730af7b395e553837b54",
      "filename": "gdbserver/target.h",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/target.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/target.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/target.h?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -70,16 +70,6 @@ class process_target;\n    shared code.  */\n struct process_stratum_target\n {\n-  /* Returns true if GDB Z breakpoint type TYPE is supported, false\n-     otherwise.  The type is coded as follows:\n-       '0' - software-breakpoint\n-       '1' - hardware-breakpoint\n-       '2' - write watchpoint\n-       '3' - read watchpoint\n-       '4' - access watchpoint\n-  */\n-  int (*supports_z_point_type) (char z_type);\n-\n   /* Insert and remove a break or watchpoint.\n      Returns 0 on success, -1 on failure and 1 on unsupported.  */\n \n@@ -476,6 +466,16 @@ class process_target\n      Read LEN bytes at OFFSET into a buffer at MYADDR.  */\n   virtual int read_auxv (CORE_ADDR offset, unsigned char *myaddr,\n \t\t\t unsigned int len);\n+\n+  /* Returns true if GDB Z breakpoint type TYPE is supported, false\n+     otherwise.  The type is coded as follows:\n+       '0' - software-breakpoint\n+       '1' - hardware-breakpoint\n+       '2' - write watchpoint\n+       '3' - read watchpoint\n+       '4' - access watchpoint\n+  */\n+  virtual bool supports_z_point_type (char z_type);\n };\n \n extern process_stratum_target *the_target;"
    },
    {
      "sha": "024748e9282eb3fb4621ad4fa6a12073f5e9eecb",
      "filename": "gdbserver/win32-low.cc",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/win32-low.cc",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/win32-low.cc",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.cc?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -254,8 +254,8 @@ child_delete_thread (DWORD pid, DWORD tid)\n /* These watchpoint related wrapper functions simply pass on the function call\n    if the low target has registered a corresponding function.  */\n \n-static int\n-win32_supports_z_point_type (char z_type)\n+bool\n+win32_process_target::supports_z_point_type (char z_type)\n {\n   return (the_low_target.supports_z_point_type != NULL\n \t  && the_low_target.supports_z_point_type (z_type));\n@@ -1838,7 +1838,6 @@ win32_sw_breakpoint_from_kind (int kind, int *size)\n static win32_process_target the_win32_target;\n \n static process_stratum_target win32_target_ops = {\n-  win32_supports_z_point_type,\n   win32_insert_point,\n   win32_remove_point,\n   NULL, /* stopped_by_sw_breakpoint */"
    },
    {
      "sha": "a095ed80ffea81213f8c6748dd7bbec5f51b85fa",
      "filename": "gdbserver/win32-low.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/win32-low.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/a2b2297a204898fa273a825d82385ce1b48941e3/gdbserver/win32-low.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdbserver/win32-low.h?ref=a2b2297a204898fa273a825d82385ce1b48941e3",
      "patch": "@@ -138,6 +138,8 @@ class win32_process_target : public process_target\n \t\t    int len) override;\n \n   void request_interrupt () override;\n+\n+  bool supports_z_point_type (char z_type) override;\n };\n \n /* Retrieve the context for this thread, if not already retrieved.  */"
    }
  ]
}