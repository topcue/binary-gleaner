{
  "sha": "9e7028aa1e788d666bad91fb20159da6c95bbab1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWU3MDI4YWExZTc4OGQ2NjZiYWQ5MWZiMjAxNTlkYTZjOTViYmFiMQ==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-20T02:08:00Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2020-01-22T06:44:08Z"
    },
    "message": "PowerPC64 __tls_get_addr_desc\n\nThis implements register saving and restoring in the __tls_get_addr\ncall stub, so that when glibc supports the optimized tls call stub gcc\ncan generate code that assumes only r0, r12 and of course r3 are\nchanged on a __tls_get_addr call.  When gcc expects __tls_get_addr\ncalls to preserve registers the call will be to __tls_get_addr_desc,\nwhich will be translated by the linker to a call to __tls_get_addr_opt.\n\nbfd/\n\t* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave.\n\t* elf64-ppc.c (struct ppc_link_hash_table): Add tga_desc and\n\ttga_desc_fd.\n\t(is_tls_get_addr): Match tga_desc and tga_desc_df too.\n\t(STDU_R1_0R1, ADDI_R1_R1): Define.\n\t(tls_get_addr_prologue, tls_get_addr_epilogue): New functions.\n\t(ppc64_elf_tls_setup): Set up tga_desc and tga_desc_fd.  Indirect\n\ttga_desc_fd to opt_fd, and tga_desc to opt.  Set\n\tno_tls_get_addr_regsave.\n\t(branch_reloc_hash_match): Add hash3 and hash4.\n\t(ppc64_elf_tls_optimize): Handle tga_desc_fd and tga_desc too.\n\t(ppc64_elf_size_dynamic_sections): Likewise.\n\t(ppc64_elf_relocate_section): Likewise.\n\t(plt_stub_size, build_plt_stub): Likewise.  Size regsave\n\t__tls_get_addr stub.\n\t(build_tls_get_addr_stub): Build regsave __tls_get_addr stub and\n\teh_frame.\n\t(ppc_size_one_stub): Handle tga_desc_fd and tga_desc too.  Size\n\teh_frame for regsave __tls_get_addr.\ngas/\n\t* config/tc-ppc.c (parse_tls_arg): Handle tls arg for\n\t__tls_get_addr_desc and __tls_get_addr_opt.\nld/\n\t* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),\n\t(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Support\n\t--tls-get-addr-regsave and --no-tls-get-addr-regsave.\n\t(params): Init new field.\n\t* ld.texi (--tls-get-addr-regsave, --no-tls-get-addr-regsave):\n\tDocument.\n\t* testsuite/ld-powerpc/tlsdesc.s,\n\t* testsuite/ld-powerpc/tlsdesc.d,\n\t* testsuite/ld-powerpc/tlsdesc.wf,\n\t* testsuite/ld-powerpc/tlsdesc2.d,\n\t* testsuite/ld-powerpc/tlsdesc2.wf,\n\t* testsuite/ld-powerpc/tlsexenors.d,\n\t* testsuite/ld-powerpc/tlsexenors.r,\n\t* testsuite/ld-powerpc/tlsexers.d,\n\t* testsuite/ld-powerpc/tlsexers.r,\n\t* testsuite/ld-powerpc/tlsexetocnors.d,\n\t* testsuite/ld-powerpc/tlsexetocrs.d,\n\t* testsuite/ld-powerpc/tlsexetocrs.r,\n\t* testsuite/ld-powerpc/tlsopt6.d,\n\t* testsuite/ld-powerpc/tlsopt6.wf: New.\n\t* testsuite/ld-powerpc/powerpc.exp: Run new tests.",
    "tree": {
      "sha": "6c11e81207599183a4d222248ca2a26f282db861",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6c11e81207599183a4d222248ca2a26f282db861"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9e7028aa1e788d666bad91fb20159da6c95bbab1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7028aa1e788d666bad91fb20159da6c95bbab1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9e7028aa1e788d666bad91fb20159da6c95bbab1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9e7028aa1e788d666bad91fb20159da6c95bbab1/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "abc489c64a3137f3751797e8ce60d53a2c432e1d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/abc489c64a3137f3751797e8ce60d53a2c432e1d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/abc489c64a3137f3751797e8ce60d53a2c432e1d"
    }
  ],
  "stats": {
    "total": 1670,
    "additions": 1572,
    "deletions": 98
  },
  "files": [
    {
      "sha": "1bd9b5f979a1a91f3bc8c9ead32d361baf38a8e2",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -1,3 +1,25 @@\n+2020-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* elf64-ppc.h (struct ppc64_elf_params): Add no_tls_get_addr_regsave.\n+\t* elf64-ppc.c (struct ppc_link_hash_table): Add tga_desc and\n+\ttga_desc_fd.\n+\t(is_tls_get_addr): Match tga_desc and tga_desc_df too.\n+\t(STDU_R1_0R1, ADDI_R1_R1): Define.\n+\t(tls_get_addr_prologue, tls_get_addr_epilogue): New functions.\n+\t(ppc64_elf_tls_setup): Set up tga_desc and tga_desc_fd.  Indirect\n+\ttga_desc_fd to opt_fd, and tga_desc to opt.  Set\n+\tno_tls_get_addr_regsave.\n+\t(branch_reloc_hash_match): Add hash3 and hash4.\n+\t(ppc64_elf_tls_optimize): Handle tga_desc_fd and tga_desc too.\n+\t(ppc64_elf_size_dynamic_sections): Likewise.\n+\t(ppc64_elf_relocate_section): Likewise.\n+\t(plt_stub_size, build_plt_stub): Likewise.  Size regsave\n+\t__tls_get_addr stub.\n+\t(build_tls_get_addr_stub): Build regsave __tls_get_addr stub and\n+\teh_frame.\n+\t(ppc_size_one_stub): Handle tga_desc_fd and tga_desc too.  Size\n+\teh_frame for regsave __tls_get_addr.\n+\n 2020-01-22  Alan Modra  <amodra@gmail.com>\n \n \t* elf64-ppc.c (ppc64_elf_size_stubs): Correct condition under"
    },
    {
      "sha": "6b11a11018d0e30bd8c3dc626dbde917a14b28d8",
      "filename": "bfd/elf64-ppc.c",
      "status": "modified",
      "additions": 347,
      "deletions": 89,
      "changes": 436,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/elf64-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/elf64-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.c?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -3180,6 +3180,8 @@ struct ppc_link_hash_table\n   /* Shortcut to .__tls_get_addr and __tls_get_addr.  */\n   struct ppc_link_hash_entry *tls_get_addr;\n   struct ppc_link_hash_entry *tls_get_addr_fd;\n+  struct ppc_link_hash_entry *tga_desc;\n+  struct ppc_link_hash_entry *tga_desc_fd;\n \n   /* The size of reliplt used by got entry relocs.  */\n   bfd_size_type got_reli_size;\n@@ -5600,8 +5602,8 @@ static bfd_boolean\n is_tls_get_addr (struct elf_link_hash_entry *h,\n \t\t struct ppc_link_hash_table *htab)\n {\n-  return (h == &htab->tls_get_addr_fd->elf\n-\t  || h == &htab->tls_get_addr->elf);\n+  return (h == &htab->tls_get_addr_fd->elf || h == &htab->tga_desc_fd->elf\n+\t  || h == &htab->tls_get_addr->elf || h == &htab->tga_desc->elf);\n }\n \n static bfd_boolean func_desc_adjust (struct elf_link_hash_entry *, void *);\n@@ -6078,6 +6080,84 @@ restvr_tail (bfd *abfd, bfd_byte *p, int r)\n   return p + 4;\n }\n \n+#define STDU_R1_0R1\t0xf8210001\n+#define ADDI_R1_R1\t0x38210000\n+\n+/* Emit prologue of wrapper preserving regs around a call to\n+   __tls_get_addr_opt.  */\n+\n+static bfd_byte *\n+tls_get_addr_prologue (bfd *obfd, bfd_byte *p, struct ppc_link_hash_table *htab)\n+{\n+  unsigned int i;\n+\n+  bfd_put_32 (obfd, MFLR_R0, p);\n+  p += 4;\n+  bfd_put_32 (obfd, STD_R0_0R1 + 16, p);\n+  p += 4;\n+\n+  if (htab->opd_abi)\n+    {\n+      for (i = 4; i < 12; i++)\n+\t{\n+\t  bfd_put_32 (obfd,\n+\t\t      STD_R0_0R1 | i << 21 | (-(13 - i) * 8 & 0xffff), p);\n+\t  p += 4;\n+\t}\n+      bfd_put_32 (obfd, STDU_R1_0R1 | (-128 & 0xffff), p);\n+      p += 4;\n+    }\n+  else\n+    {\n+      for (i = 4; i < 12; i++)\n+\t{\n+\t  bfd_put_32 (obfd,\n+\t\t      STD_R0_0R1 | i << 21 | (-(12 - i) * 8 & 0xffff), p);\n+\t  p += 4;\n+\t}\n+      bfd_put_32 (obfd, STDU_R1_0R1 | (-96 & 0xffff), p);\n+      p += 4;\n+    }\n+  return p;\n+}\n+\n+/* Emit epilogue of wrapper preserving regs around a call to\n+   __tls_get_addr_opt.  */\n+\n+static bfd_byte *\n+tls_get_addr_epilogue (bfd *obfd, bfd_byte *p, struct ppc_link_hash_table *htab)\n+{\n+  unsigned int i;\n+\n+  if (htab->opd_abi)\n+    {\n+      for (i = 4; i < 12; i++)\n+\t{\n+\t  bfd_put_32 (obfd, LD_R0_0R1 | i << 21 | (128 - (13 - i) * 8), p);\n+\t  p += 4;\n+\t}\n+      bfd_put_32 (obfd, ADDI_R1_R1 | 128, p);\n+      p += 4;\n+    }\n+  else\n+    {\n+      for (i = 4; i < 12; i++)\n+\t{\n+\t  bfd_put_32 (obfd, LD_R0_0R1 | i << 21 | (96 - (12 - i) * 8), p);\n+\t  p += 4;\n+\t}\n+      bfd_put_32 (obfd, ADDI_R1_R1 | 96, p);\n+      p += 4;\n+    }\n+  bfd_put_32 (obfd, LD_R0_0R1 | 16, p);\n+  p += 4;\n+  bfd_put_32 (obfd, MTLR_R0, p);\n+  p += 4;\n+  bfd_put_32 (obfd, BLR, p);\n+  p += 4;\n+  return p;\n+}\n+\n /* Called via elf_link_hash_traverse to transfer dynamic linking\n    information on function code symbol entries to their corresponding\n    function descriptor symbol entries.  */\n@@ -7592,6 +7672,7 @@ asection *\n ppc64_elf_tls_setup (struct bfd_link_info *info)\n {\n   struct ppc_link_hash_table *htab;\n+  struct elf_link_hash_entry *tga, *tga_fd, *desc, *desc_fd;\n \n   htab = ppc_hash_table (info);\n   if (htab == NULL)\n@@ -7628,18 +7709,29 @@ ppc64_elf_tls_setup (struct bfd_link_info *info)\n       (_(\"warning: --plt-localentry is especially dangerous without \"\n \t \"ld.so support to detect ABI violations\"));\n \n-  htab->tls_get_addr = ((struct ppc_link_hash_entry *)\n-\t\t\telf_link_hash_lookup (&htab->elf, \".__tls_get_addr\",\n-\t\t\t\t\t      FALSE, FALSE, TRUE));\n+  tga = elf_link_hash_lookup (&htab->elf, \".__tls_get_addr\",\n+\t\t\t      FALSE, FALSE, TRUE);\n+  htab->tls_get_addr = ppc_elf_hash_entry (tga);\n+\n   /* Move dynamic linking info to the function descriptor sym.  */\n-  if (htab->tls_get_addr != NULL)\n-    func_desc_adjust (&htab->tls_get_addr->elf, info);\n-  htab->tls_get_addr_fd = ((struct ppc_link_hash_entry *)\n-\t\t\t   elf_link_hash_lookup (&htab->elf, \"__tls_get_addr\",\n-\t\t\t\t\t\t FALSE, FALSE, TRUE));\n+  if (tga != NULL)\n+    func_desc_adjust (tga, info);\n+  tga_fd = elf_link_hash_lookup (&htab->elf, \"__tls_get_addr\",\n+\t\t\t\t FALSE, FALSE, TRUE);\n+  htab->tls_get_addr_fd = ppc_elf_hash_entry (tga_fd);\n+\n+  desc = elf_link_hash_lookup (&htab->elf, \".__tls_get_addr_desc\",\n+\t\t\t       FALSE, FALSE, TRUE);\n+  htab->tga_desc = ppc_elf_hash_entry (desc);\n+  if (desc != NULL)\n+    func_desc_adjust (desc, info);\n+  desc_fd = elf_link_hash_lookup (&htab->elf, \"__tls_get_addr_desc\",\n+\t\t\t\t  FALSE, FALSE, TRUE);\n+  htab->tga_desc_fd = ppc_elf_hash_entry (desc_fd);\n+\n   if (htab->params->tls_get_addr_opt)\n     {\n-      struct elf_link_hash_entry *opt, *opt_fd, *tga, *tga_fd;\n+      struct elf_link_hash_entry *opt, *opt_fd;\n \n       opt = elf_link_hash_lookup (&htab->elf, \".__tls_get_addr_opt\",\n \t\t\t\t  FALSE, FALSE, TRUE);\n@@ -7655,24 +7747,49 @@ ppc64_elf_tls_setup (struct bfd_link_info *info)\n \t     signalled by the presence of __tls_get_addr_opt, and we'll\n \t     be calling __tls_get_addr via a plt call stub, then\n \t     make __tls_get_addr point to __tls_get_addr_opt.  */\n-\t  tga_fd = &htab->tls_get_addr_fd->elf;\n-\t  if (htab->elf.dynamic_sections_created\n-\t      && tga_fd != NULL\n-\t      && (tga_fd->type == STT_FUNC\n-\t\t  || tga_fd->needs_plt)\n-\t      && !(SYMBOL_CALLS_LOCAL (info, tga_fd)\n-\t\t   || UNDEFWEAK_NO_DYNAMIC_RELOC (info, tga_fd)))\n+\t  if (!(htab->elf.dynamic_sections_created\n+\t\t&& tga_fd != NULL\n+\t\t&& (tga_fd->type == STT_FUNC\n+\t\t    || tga_fd->needs_plt)\n+\t\t&& !(SYMBOL_CALLS_LOCAL (info, tga_fd)\n+\t\t     || UNDEFWEAK_NO_DYNAMIC_RELOC (info, tga_fd))))\n+\t    tga_fd = NULL;\n+\t  if (!(htab->elf.dynamic_sections_created\n+\t\t&& desc_fd != NULL\n+\t\t&& (desc_fd->type == STT_FUNC\n+\t\t    || desc_fd->needs_plt)\n+\t\t&& !(SYMBOL_CALLS_LOCAL (info, desc_fd)\n+\t\t     || UNDEFWEAK_NO_DYNAMIC_RELOC (info, desc_fd))))\n+\t    desc_fd = NULL;\n+\n+\t  if (tga_fd != NULL || desc_fd != NULL)\n \t    {\n-\t      struct plt_entry *ent;\n+\t      struct plt_entry *ent = NULL;\n \n-\t      for (ent = tga_fd->plt.plist; ent != NULL; ent = ent->next)\n-\t\tif (ent->plt.refcount > 0)\n-\t\t  break;\n+\t      if (tga_fd != NULL)\n+\t\tfor (ent = tga_fd->plt.plist; ent != NULL; ent = ent->next)\n+\t\t  if (ent->plt.refcount > 0)\n+\t\t    break;\n+\t      if (ent == NULL && desc_fd != NULL)\n+\t\tfor (ent = desc_fd->plt.plist; ent != NULL; ent = ent->next)\n+\t\t  if (ent->plt.refcount > 0)\n+\t\t    break;\n \t      if (ent != NULL)\n \t\t{\n-\t\t  tga_fd->root.type = bfd_link_hash_indirect;\n-\t\t  tga_fd->root.u.i.link = &opt_fd->root;\n-\t\t  ppc64_elf_copy_indirect_symbol (info, opt_fd, tga_fd);\n+\t\t  if (tga_fd != NULL)\n+\t\t    {\n+\t\t      tga_fd->root.type = bfd_link_hash_indirect;\n+\t\t      tga_fd->root.u.i.link = &opt_fd->root;\n+\t\t      tga_fd->root.u.i.warning = NULL;\n+\t\t      ppc64_elf_copy_indirect_symbol (info, opt_fd, tga_fd);\n+\t\t    }\n+\t\t  if (desc_fd != NULL)\n+\t\t    {\n+\t\t      desc_fd->root.type = bfd_link_hash_indirect;\n+\t\t      desc_fd->root.u.i.link = &opt_fd->root;\n+\t\t      desc_fd->root.u.i.warning = NULL;\n+\t\t      ppc64_elf_copy_indirect_symbol (info, opt_fd, desc_fd);\n+\t\t    }\n \t\t  opt_fd->mark = 1;\n \t\t  if (opt_fd->dynindx != -1)\n \t\t    {\n@@ -7683,42 +7800,76 @@ ppc64_elf_tls_setup (struct bfd_link_info *info)\n \t\t      if (!bfd_elf_link_record_dynamic_symbol (info, opt_fd))\n \t\t\treturn NULL;\n \t\t    }\n-\t\t  htab->tls_get_addr_fd = ppc_elf_hash_entry (opt_fd);\n-\t\t  tga = &htab->tls_get_addr->elf;\n-\t\t  if (opt != NULL && tga != NULL)\n+\t\t  if (tga_fd != NULL)\n \t\t    {\n-\t\t      tga->root.type = bfd_link_hash_indirect;\n-\t\t      tga->root.u.i.link = &opt->root;\n-\t\t      ppc64_elf_copy_indirect_symbol (info, opt, tga);\n-\t\t      opt->mark = 1;\n-\t\t      _bfd_elf_link_hash_hide_symbol (info, opt,\n-\t\t\t\t\t\t      tga->forced_local);\n-\t\t      htab->tls_get_addr = ppc_elf_hash_entry (opt);\n+\t\t      htab->tls_get_addr_fd = ppc_elf_hash_entry (opt_fd);\n+\t\t      tga = &htab->tls_get_addr->elf;\n+\t\t      if (opt != NULL && tga != NULL)\n+\t\t\t{\n+\t\t\t  tga->root.type = bfd_link_hash_indirect;\n+\t\t\t  tga->root.u.i.link = &opt->root;\n+\t\t\t  tga->root.u.i.warning = NULL;\n+\t\t\t  ppc64_elf_copy_indirect_symbol (info, opt, tga);\n+\t\t\t  opt->mark = 1;\n+\t\t\t  _bfd_elf_link_hash_hide_symbol (info, opt,\n+\t\t\t\t\t\t\t  tga->forced_local);\n+\t\t\t  htab->tls_get_addr = ppc_elf_hash_entry (opt);\n+\t\t\t}\n+\t\t      htab->tls_get_addr_fd->oh = htab->tls_get_addr;\n+\t\t      htab->tls_get_addr_fd->is_func_descriptor = 1;\n+\t\t      if (htab->tls_get_addr != NULL)\n+\t\t\t{\n+\t\t\t  htab->tls_get_addr->oh = htab->tls_get_addr_fd;\n+\t\t\t  htab->tls_get_addr->is_func = 1;\n+\t\t\t}\n \t\t    }\n-\t\t  htab->tls_get_addr_fd->oh = htab->tls_get_addr;\n-\t\t  htab->tls_get_addr_fd->is_func_descriptor = 1;\n-\t\t  if (htab->tls_get_addr != NULL)\n+\t\t  if (desc_fd != NULL)\n \t\t    {\n-\t\t      htab->tls_get_addr->oh = htab->tls_get_addr_fd;\n-\t\t      htab->tls_get_addr->is_func = 1;\n+\t\t      htab->tga_desc_fd = ppc_elf_hash_entry (opt_fd);\n+\t\t      if (opt != NULL && desc != NULL)\n+\t\t\t{\n+\t\t\t  desc->root.type = bfd_link_hash_indirect;\n+\t\t\t  desc->root.u.i.link = &opt->root;\n+\t\t\t  desc->root.u.i.warning = NULL;\n+\t\t\t  ppc64_elf_copy_indirect_symbol (info, opt, desc);\n+\t\t\t  opt->mark = 1;\n+\t\t\t  _bfd_elf_link_hash_hide_symbol (info, opt,\n+\t\t\t\t\t\t\t  desc->forced_local);\n+\t\t\t  htab->tga_desc = ppc_elf_hash_entry (opt);\n+\t\t\t}\n+\t\t      htab->tga_desc_fd->oh = htab->tga_desc;\n+\t\t      htab->tga_desc_fd->is_func_descriptor = 1;\n+\t\t      if (htab->tga_desc != NULL)\n+\t\t\t{\n+\t\t\t  htab->tga_desc->oh = htab->tga_desc_fd;\n+\t\t\t  htab->tga_desc->is_func = 1;\n+\t\t\t}\n \t\t    }\n \t\t}\n \t    }\n \t}\n       else if (htab->params->tls_get_addr_opt < 0)\n \thtab->params->tls_get_addr_opt = 0;\n     }\n+\n+  if (htab->tga_desc_fd != NULL\n+      && htab->params->tls_get_addr_opt\n+      && htab->params->no_tls_get_addr_regsave == -1)\n+    htab->params->no_tls_get_addr_regsave = 0;\n+\n   return _bfd_elf_tls_setup (info->output_bfd, info);\n }\n \n /* Return TRUE iff REL is a branch reloc with a global symbol matching\n-   HASH1 or HASH2.  */\n+   any of HASH1, HASH2, HASH3, or HASH4.  */\n \n static bfd_boolean\n branch_reloc_hash_match (const bfd *ibfd,\n \t\t\t const Elf_Internal_Rela *rel,\n \t\t\t const struct ppc_link_hash_entry *hash1,\n-\t\t\t const struct ppc_link_hash_entry *hash2)\n+\t\t\t const struct ppc_link_hash_entry *hash2,\n+\t\t\t const struct ppc_link_hash_entry *hash3,\n+\t\t\t const struct ppc_link_hash_entry *hash4)\n {\n   Elf_Internal_Shdr *symtab_hdr = &elf_symtab_hdr (ibfd);\n   enum elf_ppc64_reloc_type r_type = ELF64_R_TYPE (rel->r_info);\n@@ -7731,7 +7882,8 @@ branch_reloc_hash_match (const bfd *ibfd,\n \n       h = sym_hashes[r_symndx - symtab_hdr->sh_info];\n       h = elf_follow_link (h);\n-      if (h == &hash1->elf || h == &hash2->elf)\n+      if (h == &hash1->elf || h == &hash2->elf\n+\t  || h == &hash3->elf || h == &hash4->elf)\n \treturn TRUE;\n     }\n   return FALSE;\n@@ -8078,8 +8230,10 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)\n \n \t\t      if (rel + 1 < relend\n \t\t\t  && branch_reloc_hash_match (ibfd, rel + 1,\n+\t\t\t\t\t\t      htab->tls_get_addr_fd,\n+\t\t\t\t\t\t      htab->tga_desc_fd,\n \t\t\t\t\t\t      htab->tls_get_addr,\n-\t\t\t\t\t\t      htab->tls_get_addr_fd))\n+\t\t\t\t\t\t      htab->tga_desc))\n \t\t\t{\n \t\t\t  if (expecting_tls_get_addr == 2)\n \t\t\t    {\n@@ -8134,15 +8288,29 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)\n \t\t    {\n \t\t      struct plt_entry *ent = NULL;\n \n-\t\t      if (htab->tls_get_addr != NULL)\n+\t\t      if (htab->tls_get_addr_fd != NULL)\n+\t\t\tfor (ent = htab->tls_get_addr_fd->elf.plt.plist;\n+\t\t\t     ent != NULL;\n+\t\t\t     ent = ent->next)\n+\t\t\t  if (ent->addend == 0)\n+\t\t\t    break;\n+\n+\t\t      if (ent == NULL && htab->tga_desc_fd != NULL)\n+\t\t\tfor (ent = htab->tga_desc_fd->elf.plt.plist;\n+\t\t\t     ent != NULL;\n+\t\t\t     ent = ent->next)\n+\t\t\t  if (ent->addend == 0)\n+\t\t\t    break;\n+\n+\t\t      if (ent == NULL && htab->tls_get_addr != NULL)\n \t\t\tfor (ent = htab->tls_get_addr->elf.plt.plist;\n \t\t\t     ent != NULL;\n \t\t\t     ent = ent->next)\n \t\t\t  if (ent->addend == 0)\n \t\t\t    break;\n \n-\t\t      if (ent == NULL && htab->tls_get_addr_fd != NULL)\n-\t\t\tfor (ent = htab->tls_get_addr_fd->elf.plt.plist;\n+\t\t      if (ent == NULL && htab->tga_desc != NULL)\n+\t\t\tfor (ent = htab->tga_desc->elf.plt.plist;\n \t\t\t     ent != NULL;\n \t\t\t     ent = ent->next)\n \t\t\t  if (ent->addend == 0)\n@@ -10088,8 +10256,10 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,\n \t}\n \n       tls_opt = (htab->params->tls_get_addr_opt\n-\t\t && htab->tls_get_addr_fd != NULL\n-\t\t && htab->tls_get_addr_fd->elf.plt.plist != NULL);\n+\t\t && ((htab->tls_get_addr_fd != NULL\n+\t\t      && htab->tls_get_addr_fd->elf.plt.plist != NULL)\n+\t\t     || (htab->tga_desc_fd != NULL\n+\t\t\t && htab->tga_desc_fd->elf.plt.plist != NULL)));\n       if (tls_opt || !htab->opd_abi)\n \t{\n \t  if (!add_dynamic_entry (DT_PPC64_OPT, tls_opt ? PPC64_OPT_TLS : 0))\n@@ -10668,9 +10838,18 @@ plt_stub_size (struct ppc_link_hash_table *htab,\n       && is_tls_get_addr (&stub_entry->h->elf, htab)\n       && htab->params->tls_get_addr_opt)\n     {\n-      size += 7 * 4;\n-      if (stub_entry->stub_type == ppc_stub_plt_call_r2save)\n-\tsize += 6 * 4;\n+      if (htab->params->no_tls_get_addr_regsave)\n+\t{\n+\t  size += 7 * 4;\n+\t  if (stub_entry->stub_type == ppc_stub_plt_call_r2save)\n+\t    size += 6 * 4;\n+\t}\n+      else\n+\t{\n+\t  size += 30 * 4;\n+\t  if (stub_entry->stub_type == ppc_stub_plt_call_r2save)\n+\t    size += 4;\n+\t}\n     }\n   return size;\n }\n@@ -10901,6 +11080,7 @@ build_tls_get_addr_stub (struct ppc_link_hash_table *htab,\n {\n   bfd *obfd = htab->params->stub_bfd;\n   bfd_byte *loc = p;\n+  unsigned int i;\n \n   bfd_put_32 (obfd, LD_R0_0R3 + 0, p),\t\tp += 4;\n   bfd_put_32 (obfd, LD_R12_0R3 + 8, p),\t\tp += 4;\n@@ -10909,40 +11089,112 @@ build_tls_get_addr_stub (struct ppc_link_hash_table *htab,\n   bfd_put_32 (obfd, ADD_R3_R12_R13, p),\t\tp += 4;\n   bfd_put_32 (obfd, BEQLR, p),\t\t\tp += 4;\n   bfd_put_32 (obfd, MR_R3_R0, p),\t\tp += 4;\n-  if (r != NULL)\n-    r[0].r_offset += 7 * 4;\n-  if (stub_entry->stub_type != ppc_stub_plt_call_r2save)\n-    return build_plt_stub (htab, stub_entry, p, offset, r);\n+  if (htab->params->no_tls_get_addr_regsave)\n+    {\n+      if (r != NULL)\n+\tr[0].r_offset += 7 * 4;\n+      if (stub_entry->stub_type != ppc_stub_plt_call_r2save)\n+\treturn build_plt_stub (htab, stub_entry, p, offset, r);\n \n-  bfd_put_32 (obfd, MFLR_R0, p),\t\tp += 4;\n-  bfd_put_32 (obfd, STD_R0_0R1 + STK_LINKER (htab), p), p += 4;\n+      bfd_put_32 (obfd, MFLR_R0, p);\n+      p += 4;\n+      bfd_put_32 (obfd, STD_R0_0R1 + STK_LINKER (htab), p);\n+      p += 4;\n \n-  if (r != NULL)\n-    r[0].r_offset += 2 * 4;\n-  p = build_plt_stub (htab, stub_entry, p, offset, r);\n-  bfd_put_32 (obfd, BCTRL, p - 4);\n+      if (r != NULL)\n+\tr[0].r_offset += 2 * 4;\n+      p = build_plt_stub (htab, stub_entry, p, offset, r);\n+      bfd_put_32 (obfd, BCTRL, p - 4);\n \n-  bfd_put_32 (obfd, LD_R2_0R1 + STK_TOC (htab), p),\tp += 4;\n-  bfd_put_32 (obfd, LD_R0_0R1 + STK_LINKER (htab), p),\tp += 4;\n-  bfd_put_32 (obfd, MTLR_R0, p),\t\tp += 4;\n-  bfd_put_32 (obfd, BLR, p),\t\t\tp += 4;\n+      bfd_put_32 (obfd, LD_R2_0R1 + STK_TOC (htab), p);\n+      p += 4;\n+      bfd_put_32 (obfd, LD_R0_0R1 + STK_LINKER (htab), p);\n+      p += 4;\n+      bfd_put_32 (obfd, MTLR_R0, p);\n+      p += 4;\n+      bfd_put_32 (obfd, BLR, p);\n+      p += 4;\n+    }\n+  else\n+    {\n+      p = tls_get_addr_prologue (obfd, p, htab);\n+\n+      if (r != NULL)\n+\tr[0].r_offset += 18 * 4;\n+\n+      p = build_plt_stub (htab, stub_entry, p, offset, r);\n+      bfd_put_32 (obfd, BCTRL, p - 4);\n+\n+      if (stub_entry->stub_type == ppc_stub_plt_call_r2save)\n+\t{\n+\t  bfd_put_32 (obfd, LD_R2_0R1 + STK_TOC (htab), p);\n+\t  p += 4;\n+\t}\n+\n+      p = tls_get_addr_epilogue (obfd, p, htab);\n+    }\n \n   if (htab->glink_eh_frame != NULL\n       && htab->glink_eh_frame->size != 0)\n     {\n       bfd_byte *base, *eh;\n-      unsigned int lr_used, delta;\n \n       base = htab->glink_eh_frame->contents + stub_entry->group->eh_base + 17;\n       eh = base + stub_entry->group->eh_size;\n-      lr_used = stub_entry->stub_offset + (p - 20 - loc);\n-      delta = lr_used - stub_entry->group->lr_restore;\n-      stub_entry->group->lr_restore = lr_used + 16;\n-      eh = eh_advance (htab->elf.dynobj, eh, delta);\n-      *eh++ = DW_CFA_offset_extended_sf;\n-      *eh++ = 65;\n-      *eh++ = -(STK_LINKER (htab) / 8) & 0x7f;\n-      *eh++ = DW_CFA_advance_loc + 4;\n+      if (htab->params->no_tls_get_addr_regsave)\n+\t{\n+\t  unsigned int lr_used, delta;\n+\t  lr_used = stub_entry->stub_offset + (p - 20 - loc);\n+\t  delta = lr_used - stub_entry->group->lr_restore;\n+\t  stub_entry->group->lr_restore = lr_used + 16;\n+\t  eh = eh_advance (htab->elf.dynobj, eh, delta);\n+\t  *eh++ = DW_CFA_offset_extended_sf;\n+\t  *eh++ = 65;\n+\t  *eh++ = -(STK_LINKER (htab) / 8) & 0x7f;\n+\t  *eh++ = DW_CFA_advance_loc + 4;\n+\t}\n+      else\n+\t{\n+\t  unsigned int cfa_updt, delta;\n+\t  /* After the bctrl, lr has been modified so we need to emit\n+\t     .eh_frame info saying the return address is on the stack.  In\n+\t     fact we must put the EH info at or before the call rather\n+\t     than after it, because the EH info for a call needs to be\n+\t     specified by that point.\n+\t     See libgcc/unwind-dw2.c execute_cfa_program.\n+\t     Any stack pointer update must be described immediately after\n+\t     the instruction making the change, and since the stdu occurs\n+\t     after saving regs we put all the reg saves and the cfa\n+\t     change there.  */\n+\t  cfa_updt = stub_entry->stub_offset + 18 * 4;\n+\t  delta = cfa_updt - stub_entry->group->lr_restore;\n+\t  stub_entry->group->lr_restore\n+\t    = stub_entry->stub_offset + (p - loc) - 4;\n+\t  eh = eh_advance (htab->elf.dynobj, eh, delta);\n+\t  *eh++ = DW_CFA_def_cfa_offset;\n+\t  if (htab->opd_abi)\n+\t    {\n+\t      *eh++ = 128;\n+\t      *eh++ = 1;\n+\t    }\n+\t  else\n+\t    *eh++ = 96;\n+\t  *eh++ = DW_CFA_offset_extended_sf;\n+\t  *eh++ = 65;\n+\t  *eh++ = (-16 / 8) & 0x7f;\n+\t  for (i = 4; i < 12; i++)\n+\t    {\n+\t      *eh++ = DW_CFA_offset + i;\n+\t      *eh++ = (htab->opd_abi ? 13 : 12) - i;\n+\t    }\n+\t  *eh++ = (DW_CFA_advance_loc\n+\t\t   + (stub_entry->group->lr_restore - 8 - cfa_updt) / 4);\n+\t  *eh++ = DW_CFA_def_cfa_offset;\n+\t  *eh++ = 0;\n+\t  for (i = 4; i < 12; i++)\n+\t    *eh++ = DW_CFA_restore + i;\n+\t  *eh++ = DW_CFA_advance_loc + 2;\n+\t}\n       *eh++ = DW_CFA_restore_extended;\n       *eh++ = 65;\n       stub_entry->group->eh_size = eh - base;\n@@ -11920,19 +12172,23 @@ ppc_size_one_stub (struct bfd_hash_entry *gen_entry, void *in_arg)\n \t  && htab->params->tls_get_addr_opt\n \t  && stub_entry->stub_type == ppc_stub_plt_call_r2save)\n \t{\n-\t  /* After the bctrl, lr has been modified so we need to\n-\t     emit .eh_frame info saying the return address is\n-\t     on the stack.  In fact we put the EH info specifying\n-\t     that the return address is on the stack *at* the\n-\t     call rather than after it, because the EH info for a\n-\t     call needs to be specified by that point.\n-\t     See libgcc/unwind-dw2.c execute_cfa_program.  */\n-\t  lr_used = stub_entry->stub_offset + size - 20;\n-\t  /* The eh_frame info will consist of a DW_CFA_advance_loc\n-\t     or variant, DW_CFA_offset_externed_sf, 65, -stackoff,\n-\t     DW_CFA_advance_loc+4, DW_CFA_restore_extended, 65.  */\n-\t  delta = lr_used - stub_entry->group->lr_restore;\n-\t  stub_entry->group->eh_size += eh_advance_size (delta) + 6;\n+\t  if (htab->params->no_tls_get_addr_regsave)\n+\t    {\n+\t      lr_used = stub_entry->stub_offset + size - 20;\n+\t      /* The eh_frame info will consist of a DW_CFA_advance_loc\n+\t\t or variant, DW_CFA_offset_externed_sf, 65, -stackoff,\n+\t\t DW_CFA_advance_loc+4, DW_CFA_restore_extended, 65.  */\n+\t      delta = lr_used - stub_entry->group->lr_restore;\n+\t      stub_entry->group->eh_size += eh_advance_size (delta) + 6;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Adjustments to r1 need to be described.  */\n+\t      unsigned int cfa_updt = stub_entry->stub_offset + 18 * 4;\n+\t      delta = cfa_updt - stub_entry->group->lr_restore;\n+\t      stub_entry->group->eh_size += eh_advance_size (delta);\n+\t      stub_entry->group->eh_size += htab->opd_abi ? 36 : 35;\n+\t    }\n \t  stub_entry->group->lr_restore = size - 4;\n \t}\n       break;\n@@ -14756,8 +15012,10 @@ ppc64_elf_relocate_section (bfd *output_bfd,\n \t      if (input_section->nomark_tls_get_addr\n \t\t  && rel + 1 < relend\n \t\t  && branch_reloc_hash_match (input_bfd, rel + 1,\n+\t\t\t\t\t      htab->tls_get_addr_fd,\n+\t\t\t\t\t      htab->tga_desc_fd,\n \t\t\t\t\t      htab->tls_get_addr,\n-\t\t\t\t\t      htab->tls_get_addr_fd))\n+\t\t\t\t\t      htab->tga_desc))\n \t\toffset = rel[1].r_offset;\n \t      /* We read the low GOT_TLS (or TOC16) insn because we\n \t\t need to keep the destination reg.  It may be"
    },
    {
      "sha": "a2ffd4eb72ef56db0aa87d7dd37751dbee2fbf08",
      "filename": "bfd/elf64-ppc.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/elf64-ppc.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/bfd/elf64-ppc.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/elf64-ppc.h?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -36,6 +36,9 @@ struct ppc64_elf_params\n   /* Whether to use a special call stub for __tls_get_addr.  */\n   int tls_get_addr_opt;\n \n+  /* Whether the special call stub should save r4..r12.  */\n+  int no_tls_get_addr_regsave;\n+\n   /* Whether to allow multiple toc sections.  */\n   int no_multi_toc;\n "
    },
    {
      "sha": "2d247a101279948a7f2b66bc80085f53460418bf",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -1,3 +1,8 @@\n+2020-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/tc-ppc.c (parse_tls_arg): Handle tls arg for\n+\t__tls_get_addr_desc and __tls_get_addr_opt.\n+\n 2020-01-21  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/inval-crc32.s,"
    },
    {
      "sha": "0b24298c2bbdce7e6cb6f8f97851d1bd8b2fe409",
      "filename": "gas/config/tc-ppc.c",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/gas/config/tc-ppc.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/gas/config/tc-ppc.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-ppc.c?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -3255,7 +3255,10 @@ parse_tls_arg (char **str, const expressionS *exp, struct ppc_fixup *tls_fix)\n     ++sym_name;\n \n   tls_fix->reloc = BFD_RELOC_NONE;\n-  if (strcasecmp (sym_name, \"__tls_get_addr\") == 0)\n+  if (strncasecmp (sym_name, \"__tls_get_addr\", 14) == 0\n+      && (sym_name[14] == 0\n+\t  || strcasecmp (sym_name + 14, \"_desc\") == 0\n+\t  || strcasecmp (sym_name + 14, \"_opt\") == 0))\n     {\n       char *hold = input_line_pointer;\n       input_line_pointer = *str + 1;"
    },
    {
      "sha": "edfc0903921aba5e465f3726e4be236501b195ac",
      "filename": "ld/ChangeLog",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ChangeLog?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -1,3 +1,27 @@\n+2020-01-22  Alan Modra  <amodra@gmail.com>\n+\n+\t* emultempl/ppc64elf.em (ppc64_opt, PARSE_AND_LIST_LONGOPTS),\n+\t(PARSE_AND_LIST_OPTIONS, PARSE_AND_LIST_ARGS_CASES): Support\n+\t--tls-get-addr-regsave and --no-tls-get-addr-regsave.\n+\t(params): Init new field.\n+\t* ld.texi (--tls-get-addr-regsave, --no-tls-get-addr-regsave):\n+\tDocument.\n+\t* testsuite/ld-powerpc/tlsdesc.s,\n+\t* testsuite/ld-powerpc/tlsdesc.d,\n+\t* testsuite/ld-powerpc/tlsdesc.wf,\n+\t* testsuite/ld-powerpc/tlsdesc2.d,\n+\t* testsuite/ld-powerpc/tlsdesc2.wf,\n+\t* testsuite/ld-powerpc/tlsexenors.d,\n+\t* testsuite/ld-powerpc/tlsexenors.r,\n+\t* testsuite/ld-powerpc/tlsexers.d,\n+\t* testsuite/ld-powerpc/tlsexers.r,\n+\t* testsuite/ld-powerpc/tlsexetocnors.d,\n+\t* testsuite/ld-powerpc/tlsexetocrs.d,\n+\t* testsuite/ld-powerpc/tlsexetocrs.r,\n+\t* testsuite/ld-powerpc/tlsopt6.d,\n+\t* testsuite/ld-powerpc/tlsopt6.wf: New.\n+\t* testsuite/ld-powerpc/powerpc.exp: Run new tests.\n+\n 2020-01-22  Yuri Chornoivan  <yurchor@mageia.org>\n \n \tPR 25417"
    },
    {
      "sha": "6633f8156acf2dd135032e8b01ae2bd45ba59261",
      "filename": "ld/emultempl/ppc64elf.em",
      "status": "modified",
      "additions": 19,
      "deletions": 1,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/emultempl/ppc64elf.em",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/emultempl/ppc64elf.em",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/emultempl/ppc64elf.em?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -36,7 +36,7 @@ static void ppc_layout_sections_again (void);\n static struct ppc64_elf_params params = { NULL,\n \t\t\t\t\t  &ppc_add_stub_section,\n \t\t\t\t\t  &ppc_layout_sections_again,\n-\t\t\t\t\t  1, -1, 0,\n+\t\t\t\t\t  1, -1, -1, 0,\n \t\t\t\t\t  ${DEFAULT_PLT_STATIC_CHAIN-0}, -1, 5,\n \t\t\t\t\t  -1, 0, -1, -1, 0};\n \n@@ -694,6 +694,8 @@ enum ppc64_opt\n   OPTION_NO_TLS_OPT,\n   OPTION_TLS_GET_ADDR_OPT,\n   OPTION_NO_TLS_GET_ADDR_OPT,\n+  OPTION_TLS_GET_ADDR_REGSAVE,\n+  OPTION_NO_TLS_GET_ADDR_REGSAVE,\n   OPTION_NO_OPD_OPT,\n   OPTION_NO_INLINE_OPT,\n   OPTION_NO_TOC_OPT,\n@@ -722,6 +724,8 @@ PARSE_AND_LIST_LONGOPTS=${PARSE_AND_LIST_LONGOPTS}'\n   { \"no-tls-optimize\", no_argument, NULL, OPTION_NO_TLS_OPT },\n   { \"tls-get-addr-optimize\", no_argument, NULL, OPTION_TLS_GET_ADDR_OPT },\n   { \"no-tls-get-addr-optimize\", no_argument, NULL, OPTION_NO_TLS_GET_ADDR_OPT },\n+  { \"tls-get-addr-regsave\", no_argument, NULL, OPTION_TLS_GET_ADDR_REGSAVE },\n+  { \"no-tls-get-addr-regsave\", no_argument, NULL, OPTION_NO_TLS_GET_ADDR_REGSAVE},\n   { \"no-opd-optimize\", no_argument, NULL, OPTION_NO_OPD_OPT },\n   { \"no-inline-optimize\", no_argument, NULL, OPTION_NO_INLINE_OPT },\n   { \"no-toc-optimize\", no_argument, NULL, OPTION_NO_TOC_OPT },\n@@ -798,6 +802,12 @@ PARSE_AND_LIST_OPTIONS=${PARSE_AND_LIST_OPTIONS}'\n   --no-tls-get-addr-optimize  Don'\\''t use a special __tls_get_addr call\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n+  --tls-get-addr-regsave      Force register save __tls_get_addr stub\\n\"\n+\t\t   ));\n+  fprintf (file, _(\"\\\n+  --no-tls-get-addr-regsave   Don'\\''t use register save __tls_get_addr stub\\n\"\n+\t\t   ));\n+  fprintf (file, _(\"\\\n   --no-opd-optimize           Don'\\''t optimize the OPD section\\n\"\n \t\t   ));\n   fprintf (file, _(\"\\\n@@ -905,6 +915,14 @@ PARSE_AND_LIST_ARGS_CASES=${PARSE_AND_LIST_ARGS_CASES}'\n       params.tls_get_addr_opt = 0;\n       break;\n \n+    case OPTION_TLS_GET_ADDR_REGSAVE:\n+      params.no_tls_get_addr_regsave = 0;\n+      break;\n+\n+    case OPTION_NO_TLS_GET_ADDR_REGSAVE:\n+      params.no_tls_get_addr_regsave = 1;\n+      break;\n+\n     case OPTION_NO_OPD_OPT:\n       no_opd_opt = 1;\n       break;"
    },
    {
      "sha": "634b7a928081daa0af003fd6970b80c19718675e",
      "filename": "ld/ld.texi",
      "status": "modified",
      "additions": 16,
      "deletions": 7,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/ld.texi",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/ld.texi",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/ld.texi?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -7595,18 +7595,27 @@ disable the optimization.\n @cindex PowerPC64 __tls_get_addr optimization\n @kindex --tls-get-addr-optimize\n @kindex --no-tls-get-addr-optimize\n+@kindex --tls-get-addr-regsave\n+@kindex --no-tls-get-addr-regsave\n @item --tls-get-addr-optimize\n @itemx --no-tls-get-addr-optimize\n-These options control whether PowerPC64 @command{ld} uses a special\n+These options control how PowerPC64 @command{ld} uses a special\n stub to call __tls_get_addr.  PowerPC64 glibc 2.22 and later support\n an optimization that allows the second and subsequent calls to\n @code{__tls_get_addr} for a given symbol to be resolved by the special\n-stub without calling in to glibc.  By default the linker enables this\n-option when glibc advertises the availability of __tls_get_addr_opt.\n-Forcing this option on when using an older glibc won't do much besides\n-slow down your applications, but may be useful if linking an\n-application against an older glibc with the expectation that it will\n-normally be used on systems having a newer glibc.\n+stub without calling in to glibc.  By default the linker enables\n+generation of the stub when glibc advertises the availability of\n+__tls_get_addr_opt.\n+Using @option{--tls-get-addr-optimize} with an older glibc won't do\n+much besides slow down your applications, but may be useful if linking\n+an application against an older glibc with the expectation that it\n+will normally be used on systems having a newer glibc.\n+@option{--tls-get-addr-regsave} forces generation of a stub that saves\n+and restores volatile registers around the call into glibc.  Normally,\n+this is done when the linker detects a call to __tls_get_addr_desc.\n+Such calls then go via the register saving stub to __tls_get_addr_opt.\n+@option {--no-tls-get-addr-regsave} disables generation of the\n+register saves.\n \n @cindex PowerPC64 OPD optimization\n @kindex --no-opd-optimize"
    },
    {
      "sha": "d50846c806a32ad8e461c1e737867256fa690b2d",
      "filename": "ld/testsuite/ld-powerpc/powerpc.exp",
      "status": "modified",
      "additions": 27,
      "deletions": 0,
      "changes": 27,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/powerpc.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/powerpc.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/powerpc.exp?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -233,6 +233,24 @@ set ppc64elftests {\n      {{readelf -WSsrl tlstocso.r} {objdump -dr tlstocso.d}\n       {objdump -sj.got tlstocso.g} {objdump -sj.tdata tlstocso.t}}\n      \"tlstoc.so\"}\n+    {\"TLS dynamic exec (--tls-get-addr-regsave)\" \"-melf64ppc --no-plt-align --no-ld-generated-unwind-info --hash-style=sysv --tls-get-addr-regsave tmpdir/tls.o tmpdir/libtlslib.so\" \"\" \"\" {}\n+     {{readelf -WSsrl tlsexers.r} {objdump -dr tlsexers.d}\n+      {objdump -sj.got tlsexe.g} {objdump -sj.tdata tlsexe.t}}\n+     \"tlsexers\"}\n+    {\"TLS dynamic exec (--no-tls-optimize --tls-get-addr-regsave)\" \"-melf64ppc --no-tls-optimize --tls-get-addr-regsave --no-plt-align --no-ld-generated-unwind-info --hash-style=sysv tmpdir/tls.o tmpdir/libtlslib.so\" \"\" \"\" {}\n+     {{readelf -WSsrl tlsexenors.r} {objdump -dr tlsexenors.d}\n+      {objdump -sj.got tlsexeno.g} {objdump -sj.tdata tlsexe.t}}\n+     \"tlsexenors\"}\n+    {\"TLSTOC dynamic exec (--tls-get-addr-regsave)\" \"-melf64ppc --tls-get-addr-regsave --no-plt-align --no-ld-generated-unwind-info --hash-style=sysv tmpdir/tlstoc.o tmpdir/libtlslib.so\" \"\"\n+     \"\" {}\n+     {{readelf -WSsrl tlsexetocrs.r} {objdump -dr tlsexetocrs.d}\n+      {objdump -sj.got tlsexetoc.g} {objdump -sj.tdata tlsexetoc.t}}\n+     \"tlsexetocrs\"}\n+    {\"TLSTOC dynamic exec (--no-tls-optimize --tls-get-addr-regsave)\" \"-melf64ppc --no-tls-optimize --tls-get-addr-regsave --no-plt-align --no-ld-generated-unwind-info --hash-style=sysv tmpdir/tlstoc.o tmpdir/libtlslib.so\" \"\"\n+     \"\" {}\n+     {{readelf -WSsrl tlsexetocrs.r} {objdump -dr tlsexetocnors.d}\n+      {objdump -sj.got tlsexetocno.g} {objdump -sj.tdata tlsexetoc.t}}\n+     \"tlsexetocnors\"}\n     {\"TLS markers\" \"-melf64ppc\" \"\" \"-a64\"  {tlsmark.s tlslib.s}\n      {{objdump -dr tlsmark.d}}\n      \"tlsmark\"}\n@@ -253,6 +271,15 @@ set ppc64elftests {\n     {\"TLS opt 5\" \"-melf64ppc -shared --hash-style=both --gc-sections --no-plt-localentry tmpdir/tlsdll.so\" \"\" \"-a64\"  {tlsopt5.s}\n      {{objdump -dr tlsopt5.d} {readelf -wf tlsopt5.wf}}\n      \"tlsopt5\"}\n+    {\"TLS opt 6\" \"-melf64ppc -shared --hash-style=both --gc-sections --no-plt-localentry --tls-get-addr-regsave tmpdir/tlsdll.so\" \"\" \"-a64\"  {tlsopt5.s}\n+     {{objdump -dr tlsopt6.d} {readelf -wf tlsopt6.wf}}\n+     \"tlsopt6\"}\n+    {\"TLSdesc\" \"-melf64ppc -shared --hash-style=both --no-plt-localentry tmpdir/libtlslib.so\" \"\" \"-a64\"  {tlsdesc.s}\n+     {{objdump -dr tlsdesc.d} {readelf -wf tlsdesc.wf}}\n+     \"tlsdesc\"}\n+    {\"TLSdesc2\" \"-melf64ppc -shared --hash-style=both --no-plt-localentry tmpdir/tlsdll.so\" \"\" \"-a64\"  {tlsdesc.s}\n+     {{objdump -dr tlsdesc2.d} {readelf -wf tlsdesc2.wf}}\n+     \"tlsdesc2\"}\n     {\"sym@tocbase\" \"-shared -melf64ppc\" \"\" \"-a64\" {symtocbase-1.s symtocbase-2.s}\n \t{{objdump -dj.data symtocbase.d}} \"symtocbase.so\"}\n     {\"TOC opt\" \"-melf64ppc\" \"\" \"-a64\"  {tocopt.s}"
    },
    {
      "sha": "721635702f70f00d018fc93dc66e00b4f0112216",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc.d",
      "status": "added",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,68 @@\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*\\.plt_call\\.__tls_get_addr_opt>:\n+.*:\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*:\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*:\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*:\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*:\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*:\t(4d 82 00 20|20 00 82 4d) \tbeqlr\n+.*:\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff b8|b8 ff 81 f8) \tstd     r4,-72\\(r1\\)\n+.*:\t(f8 a1 ff c0|c0 ff a1 f8) \tstd     r5,-64\\(r1\\)\n+.*:\t(f8 c1 ff c8|c8 ff c1 f8) \tstd     r6,-56\\(r1\\)\n+.*:\t(f8 e1 ff d0|d0 ff e1 f8) \tstd     r7,-48\\(r1\\)\n+.*:\t(f9 01 ff d8|d8 ff 01 f9) \tstd     r8,-40\\(r1\\)\n+.*:\t(f9 21 ff e0|e0 ff 21 f9) \tstd     r9,-32\\(r1\\)\n+.*:\t(f9 41 ff e8|e8 ff 41 f9) \tstd     r10,-24\\(r1\\)\n+.*:\t(f9 61 ff f0|f0 ff 61 f9) \tstd     r11,-16\\(r1\\)\n+.*:\t(f8 21 ff 81|81 ff 21 f8) \tstdu    r1,-128\\(r1\\)\n+.*:\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n+.*:\t(e9 82 80 30|30 80 82 e9) \tld      r12,-32720\\(r2\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(7d 8b 62 78|78 62 8b 7d) \txor     r11,r12,r12\n+.*:\t(7c 42 5a 14|14 5a 42 7c) \tadd     r2,r2,r11\n+.*:\t(e8 42 80 38|38 80 42 e8) \tld      r2,-32712\\(r2\\)\n+.*:\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*:\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n+.*:\t(e8 81 00 38|38 00 81 e8) \tld      r4,56\\(r1\\)\n+.*:\t(e8 a1 00 40|40 00 a1 e8) \tld      r5,64\\(r1\\)\n+.*:\t(e8 c1 00 48|48 00 c1 e8) \tld      r6,72\\(r1\\)\n+.*:\t(e8 e1 00 50|50 00 e1 e8) \tld      r7,80\\(r1\\)\n+.*:\t(e9 01 00 58|58 00 01 e9) \tld      r8,88\\(r1\\)\n+.*:\t(e9 21 00 60|60 00 21 e9) \tld      r9,96\\(r1\\)\n+.*:\t(e9 41 00 68|68 00 41 e9) \tld      r10,104\\(r1\\)\n+.*:\t(e9 61 00 70|70 00 61 e9) \tld      r11,112\\(r1\\)\n+.*:\t(38 21 00 80|80 00 21 38) \taddi    r1,r1,128\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\t\\.\\.\\.\n+\n+.* <_start>:\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 5d|5d ff ff 4b) \tbl      .* <.*\\.plt_call\\.__tls_get_addr_opt>\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(00 00 00 00|18 03 01 00) \t.*\n+.*:\t(00 01 03 18|00 00 00 00) \t.*\n+\n+.* <__glink_PLTresolve>:\n+.*:\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*:\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*:\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*:\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*:\t(e8 4b 00 08|08 00 4b e8) \tld      r2,8\\(r11\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e9 6b 00 10|10 00 6b e9) \tld      r11,16\\(r11\\)\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+.*:\t(38 00 00 00|00 00 00 38) \tli      r0,0\n+.*:\t(4b ff ff d0|d0 ff ff 4b) \tb       .* <__glink_PLTresolve>"
    },
    {
      "sha": "0c94b7249380937a75563f5486798221d500448b",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc.s",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.s",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.s",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc.s?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,8 @@\n+ .text\n+ .globl _start\n+_start:\n+ .cfi_startproc\n+ addi 3,2,gd@got@tlsgd\n+ bl __tls_get_addr_desc(gd@tlsgd)\n+ nop\n+ .cfi_endproc"
    },
    {
      "sha": "09503fa00532b8fb395411bfa3afa178713fd5c1",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc.wf",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc.wf?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,50 @@\n+Contents of the \\.eh_frame section:\n+\n+\n+0+ 0+10 0+ CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+0+14 0+34 0+18 FDE cie=0+ pc=0+240\\.\\.0+2e0\n+  DW_CFA_advance_loc: 72 to 0+288\n+  DW_CFA_def_cfa_offset: 128\n+  DW_CFA_offset_extended_sf: r65 at cfa\\+16\n+  DW_CFA_offset: r4 at cfa-72\n+  DW_CFA_offset: r5 at cfa-64\n+  DW_CFA_offset: r6 at cfa-56\n+  DW_CFA_offset: r7 at cfa-48\n+  DW_CFA_offset: r8 at cfa-40\n+  DW_CFA_offset: r9 at cfa-32\n+  DW_CFA_offset: r10 at cfa-24\n+  DW_CFA_offset: r11 at cfa-16\n+  DW_CFA_advance_loc: 68 to 0+2cc\n+  DW_CFA_def_cfa_offset: 0\n+  DW_CFA_restore: r4\n+  DW_CFA_restore: r5\n+  DW_CFA_restore: r6\n+  DW_CFA_restore: r7\n+  DW_CFA_restore: r8\n+  DW_CFA_restore: r9\n+  DW_CFA_restore: r10\n+  DW_CFA_restore: r11\n+  DW_CFA_advance_loc: 8 to 0+2d4\n+  DW_CFA_restore_extended: r65\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+4c 0+14 0+50 FDE cie=0+ pc=0+2f8\\.\\.0+32c\n+  DW_CFA_advance_loc: 4 to 0+2fc\n+  DW_CFA_register: r65 in r12\n+  DW_CFA_advance_loc: 20 to 0+310\n+  DW_CFA_restore_extended: r65\n+\n+0+64 0+10 0+68 FDE cie=0+ pc=0+2e0\\.\\.0+2ec\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+"
    },
    {
      "sha": "47aedbecb8893394e157b223828272418c5f0527",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc2.d",
      "status": "added",
      "additions": 69,
      "deletions": 0,
      "changes": 69,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc2.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc2.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc2.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,69 @@\n+\n+.*:     file format .*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*\\.plt_call\\.__tls_get_addr_opt@@GLIBC_2\\.22>:\n+.*:\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*:\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*:\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*:\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*:\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*:\t(4d 82 00 20|20 00 82 4d) \tbeqlr\n+.*:\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff c0|c0 ff 81 f8) \tstd     r4,-64\\(r1\\)\n+.*:\t(f8 a1 ff c8|c8 ff a1 f8) \tstd     r5,-56\\(r1\\)\n+.*:\t(f8 c1 ff d0|d0 ff c1 f8) \tstd     r6,-48\\(r1\\)\n+.*:\t(f8 e1 ff d8|d8 ff e1 f8) \tstd     r7,-40\\(r1\\)\n+.*:\t(f9 01 ff e0|e0 ff 01 f9) \tstd     r8,-32\\(r1\\)\n+.*:\t(f9 21 ff e8|e8 ff 21 f9) \tstd     r9,-24\\(r1\\)\n+.*:\t(f9 41 ff f0|f0 ff 41 f9) \tstd     r10,-16\\(r1\\)\n+.*:\t(f9 61 ff f8|f8 ff 61 f9) \tstd     r11,-8\\(r1\\)\n+.*:\t(f8 21 ff a1|a1 ff 21 f8) \tstdu    r1,-96\\(r1\\)\n+.*:\t(f8 41 00 18|18 00 41 f8) \tstd     r2,24\\(r1\\)\n+.*:\t(e9 82 80 28|28 80 82 e9) \tld      r12,-32728\\(r2\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*:\t(e8 41 00 18|18 00 41 e8) \tld      r2,24\\(r1\\)\n+.*:\t(e8 81 00 20|20 00 81 e8) \tld      r4,32\\(r1\\)\n+.*:\t(e8 a1 00 28|28 00 a1 e8) \tld      r5,40\\(r1\\)\n+.*:\t(e8 c1 00 30|30 00 c1 e8) \tld      r6,48\\(r1\\)\n+.*:\t(e8 e1 00 38|38 00 e1 e8) \tld      r7,56\\(r1\\)\n+.*:\t(e9 01 00 40|40 00 01 e9) \tld      r8,64\\(r1\\)\n+.*:\t(e9 21 00 48|48 00 21 e9) \tld      r9,72\\(r1\\)\n+.*:\t(e9 41 00 50|50 00 41 e9) \tld      r10,80\\(r1\\)\n+.*:\t(e9 61 00 58|58 00 61 e9) \tld      r11,88\\(r1\\)\n+.*:\t(38 21 00 60|60 00 21 38) \taddi    r1,r1,96\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\t\\.\\.\\.\n+\n+.* <_start>:\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 5d|5d ff ff 4b) \tbl      .* <.*\\.plt_call\\.__tls_get_addr_opt@@GLIBC_2\\.22>\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(00 00 00 00|f8 02 01 00) \t.*\n+.*:\t(00 01 02 f8|00 00 00 00) \t.*\n+\n+.* <__glink_PLTresolve>:\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(f8 41 00 18|18 00 41 f8) \tstd     r2,24\\(r1\\)\n+.*:\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(7d 8b 60 50|50 60 8b 7d) \tsubf    r12,r11,r12\n+.*:\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*:\t(38 0c ff d0|d0 ff 0c 38) \taddi    r0,r12,-48\n+.*:\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*:\t(78 00 f0 82|82 f0 00 78) \trldicl  r0,r0,62,2\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e9 6b 00 08|08 00 6b e9) \tld      r11,8\\(r11\\)\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+.* <__tls_get_addr_opt@plt>:\n+.*:\t(4b ff ff c8|c8 ff ff 4b) \tb       .* <__glink_PLTresolve>"
    },
    {
      "sha": "cb92c294b15da9b14fa2fd72705c96896e8dc0b8",
      "filename": "ld/testsuite/ld-powerpc/tlsdesc2.wf",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc2.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsdesc2.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsdesc2.wf?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,49 @@\n+Contents of the \\.eh_frame section:\n+\n+0+ 0+10 0+ CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+0+14 0+34 0+18 FDE cie=0+ pc=0+260\\.\\.0+300\n+  DW_CFA_advance_loc: 72 to 0+2a8\n+  DW_CFA_def_cfa_offset: 96\n+  DW_CFA_offset_extended_sf: r65 at cfa\\+16\n+  DW_CFA_offset: r4 at cfa-64\n+  DW_CFA_offset: r5 at cfa-56\n+  DW_CFA_offset: r6 at cfa-48\n+  DW_CFA_offset: r7 at cfa-40\n+  DW_CFA_offset: r8 at cfa-32\n+  DW_CFA_offset: r9 at cfa-24\n+  DW_CFA_offset: r10 at cfa-16\n+  DW_CFA_offset: r11 at cfa-8\n+  DW_CFA_advance_loc: 56 to 0+2e0\n+  DW_CFA_def_cfa_offset: 0\n+  DW_CFA_restore: r4\n+  DW_CFA_restore: r5\n+  DW_CFA_restore: r6\n+  DW_CFA_restore: r7\n+  DW_CFA_restore: r8\n+  DW_CFA_restore: r9\n+  DW_CFA_restore: r10\n+  DW_CFA_restore: r11\n+  DW_CFA_advance_loc: 8 to 0+2e8\n+  DW_CFA_restore_extended: r65\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+4c 0+14 0+50 FDE cie=0+ pc=0+318\\.\\.0+354\n+  DW_CFA_advance_loc: 4 to 0+31c\n+  DW_CFA_register: r65 in r0\n+  DW_CFA_advance_loc: 28 to 0+338\n+  DW_CFA_restore_extended: r65\n+\n+0+64 0+10 0+68 FDE cie=0+ pc=0+300\\.\\.0+30c\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop"
    },
    {
      "sha": "09c97051afec0c115ab65934316aeb6ee0f8a640",
      "filename": "ld/testsuite/ld-powerpc/tlsexenors.d",
      "status": "added",
      "additions": 106,
      "deletions": 0,
      "changes": 106,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexenors.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexenors.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexenors.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,106 @@\n+#source: tls.s\n+#as: -a64\n+#ld: --no-tls-optimize tmpdir/libtlslib.so\n+#objdump: -dr\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*plt_call\\.__tls_get_addr(|_opt)>:\n+.*:\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*:\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*:\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*:\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*:\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*:\t(4d 82 00 20|20 00 82 4d) \tbeqlr *\n+.*:\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff b8|b8 ff 81 f8) \tstd     r4,-72\\(r1\\)\n+.*:\t(f8 a1 ff c0|c0 ff a1 f8) \tstd     r5,-64\\(r1\\)\n+.*:\t(f8 c1 ff c8|c8 ff c1 f8) \tstd     r6,-56\\(r1\\)\n+.*:\t(f8 e1 ff d0|d0 ff e1 f8) \tstd     r7,-48\\(r1\\)\n+.*:\t(f9 01 ff d8|d8 ff 01 f9) \tstd     r8,-40\\(r1\\)\n+.*:\t(f9 21 ff e0|e0 ff 21 f9) \tstd     r9,-32\\(r1\\)\n+.*:\t(f9 41 ff e8|e8 ff 41 f9) \tstd     r10,-24\\(r1\\)\n+.*:\t(f9 61 ff f0|f0 ff 61 f9) \tstd     r11,-16\\(r1\\)\n+.*:\t(f8 21 ff 81|81 ff 21 f8) \tstdu    r1,-128\\(r1\\)\n+.*:\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n+.*:\t(e9 82 80 88|88 80 82 e9) \tld      r12,-32632\\(r2\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e8 42 80 90|90 80 42 e8) \tld      r2,-32624\\(r2\\)\n+.*:\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*:\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n+.*:\t(e8 81 00 38|38 00 81 e8) \tld      r4,56\\(r1\\)\n+.*:\t(e8 a1 00 40|40 00 a1 e8) \tld      r5,64\\(r1\\)\n+.*:\t(e8 c1 00 48|48 00 c1 e8) \tld      r6,72\\(r1\\)\n+.*:\t(e8 e1 00 50|50 00 e1 e8) \tld      r7,80\\(r1\\)\n+.*:\t(e9 01 00 58|58 00 01 e9) \tld      r8,88\\(r1\\)\n+.*:\t(e9 21 00 60|60 00 21 e9) \tld      r9,96\\(r1\\)\n+.*:\t(e9 41 00 68|68 00 41 e9) \tld      r10,104\\(r1\\)\n+.*:\t(e9 61 00 70|70 00 61 e9) \tld      r11,112\\(r1\\)\n+.*:\t(38 21 00 80|80 00 21 38) \taddi    r1,r1,128\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+.* <\\._start>:\n+.*:\t(38 62 80 20|20 80 62 38) \taddi    r3,r2,-32736\n+.*:\t(4b ff ff 6d|6d ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 30|30 80 62 38) \taddi    r3,r2,-32720\n+.*:\t(4b ff ff 61|61 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 48|48 80 62 38) \taddi    r3,r2,-32696\n+.*:\t(4b ff ff 55|55 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 60|60 80 62 38) \taddi    r3,r2,-32672\n+.*:\t(4b ff ff 49|49 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(39 23 80 40|40 80 23 39) \taddi    r9,r3,-32704\n+.*:\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*:\t(81 49 80 48|48 80 49 81) \tlwz     r10,-32696\\(r9\\)\n+.*:\t(e9 22 80 40|40 80 22 e9) \tld      r9,-32704\\(r2\\)\n+.*:\t(7d 49 18 2a|2a 18 49 7d) \tldx     r10,r9,r3\n+.*:\t(e9 22 80 58|58 80 22 e9) \tld      r9,-32680\\(r2\\)\n+.*:\t(7d 49 6a 2e|2e 6a 49 7d) \tlhzx    r10,r9,r13\n+.*:\t(89 4d 90 60|60 90 4d 89) \tlbz     r10,-28576\\(r13\\)\n+.*:\t(3d 2d 00 00|00 00 2d 3d) \taddis   r9,r13,0\n+.*:\t(99 49 90 68|68 90 49 99) \tstb     r10,-28568\\(r9\\)\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 15|15 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 60|60 80 62 38) \taddi    r3,r2,-32672\n+.*:\t(4b ff ff 09|09 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(f9 43 80 08|08 80 43 f9) \tstd     r10,-32760\\(r3\\)\n+.*:\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*:\t(91 49 80 10|10 80 49 91) \tstw     r10,-32752\\(r9\\)\n+.*:\t(e9 22 80 18|18 80 22 e9) \tld      r9,-32744\\(r2\\)\n+.*:\t(7d 49 19 2a|2a 19 49 7d) \tstdx    r10,r9,r3\n+.*:\t(e9 22 80 58|58 80 22 e9) \tld      r9,-32680\\(r2\\)\n+.*:\t(7d 49 6b 2e|2e 6b 49 7d) \tsthx    r10,r9,r13\n+.*:\t(e9 4d 90 2a|2a 90 4d e9) \tlwa     r10,-28632\\(r13\\)\n+.*:\t(3d 2d 00 00|00 00 2d 3d) \taddis   r9,r13,0\n+.*:\t(a9 49 90 30|30 90 49 a9) \tlha     r10,-28624\\(r9\\)\n+.*:\t(00 00 00 00|78 02 01 00) \t.*\n+.*:\t(00 01 02 78|00 00 00 00) \t.*\n+\n+.* <__glink_PLTresolve>:\n+.*:\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*:\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*:\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*:\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*:\t(e8 4b 00 08|08 00 4b e8) \tld      r2,8\\(r11\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e9 6b 00 10|10 00 6b e9) \tld      r11,16\\(r11\\)\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+.* <__tls_get_addr_opt@plt>:\n+.*:\t(38 00 00 00|00 00 00 38) \tli      r0,0\n+.*:\t(4b ff ff d0|d0 ff ff 4b) \tb       .* <__glink_PLTresolve>"
    },
    {
      "sha": "e25fecd4d73bc452bbb051cdd6bb34a0c23564af",
      "filename": "ld/testsuite/ld-powerpc/tlsexenors.r",
      "status": "added",
      "additions": 113,
      "deletions": 0,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexenors.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexenors.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexenors.r?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,113 @@\n+#source: tls.s\n+#source: tlslib.s\n+#as: -a64\n+#ld: --no-tls-optimize\n+#readelf: -WSsrl\n+#target: powerpc64*-*-*\n+\n+There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:\n+\n+Section Headers:\n+ +\\[Nr\\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al\n+ +\\[[ 0-9]+\\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0\n+ +\\[[ 0-9]+\\] \\.interp +.*\n+ +\\[[ 0-9]+\\] \\.hash +.*\n+ +\\[[ 0-9]+\\] \\.dynsym +.*\n+ +\\[[ 0-9]+\\] \\.dynstr +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.dyn +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.plt +.*\n+ +\\[[ 0-9]+\\] \\.text +PROGBITS .* 0+164 0+ +AX +0 +0 +32\n+ +\\[[ 0-9]+\\] \\.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.dynamic +DYNAMIC .* 0+160 10 +WA +4 +0 +8\n+ +\\[[ 0-9]+\\] \\.opd .*\n+ +\\[[ 0-9]+\\] \\.got +PROGBITS .* 0+70 08 +WA +0 +0 +256\n+ +\\[[ 0-9]+\\] \\.plt +.*\n+ +\\[[ 0-9]+\\] \\.symtab +.*\n+ +\\[[ 0-9]+\\] \\.strtab +.*\n+ +\\[[ 0-9]+\\] \\.shstrtab +.*\n+#...\n+\n+Elf file type is EXEC \\(Executable file\\)\n+Entry point .*\n+There are [0-9]+ program headers, starting at offset [0-9]+\n+\n+Program Headers:\n+ +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align\n+ +PHDR +0x0+40 0x0+10000040 0x0+10000040 0x0+150 0x0+150 R +0x8\n+ +INTERP +0x0+190 0x0+10000190 0x0+10000190 0x0+11 0x0+11 R +0x1\n+ +\\[Requesting program interpreter: .*\\]\n+ +LOAD .* R E 0x10000\n+ +LOAD .* RW +0x10000\n+ +DYNAMIC .* RW +0x8\n+ +TLS .* 0x0+38 0x0+70 R +0x8\n+\n+ Section to Segment mapping:\n+ +Segment Sections\\.\\.\\.\n+ +0+ +\n+ +01 +\\.interp *\n+ +02 +\\.interp \\.hash \\.dynsym \\.dynstr \\.rela\\.dyn \\.rela\\.plt \\.text *\n+ +03 +\\.tdata \\.dynamic \\.opd \\.got \\.plt *\n+ +04 +\\.dynamic *\n+ +05 +\\.tdata \\.tbss *\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 3 entries:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPREL64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \\+ 0\n+\n+Relocation section '\\.rela\\.plt' at offset .* contains 1 entry:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr_opt \\+ 0\n+\n+Symbol table '\\.dynsym' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* NOTYPE +LOCAL +DEFAULT +UND *\n+.* TLS +GLOBAL +DEFAULT +UND gd\n+.* TLS +GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+\n+Symbol table '\\.symtab' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* 0+ +0 +NOTYPE +LOCAL +DEFAULT +UND *\n+.* SECTION +LOCAL +DEFAULT +1 *\n+.* SECTION +LOCAL +DEFAULT +2 *\n+.* SECTION +LOCAL +DEFAULT +3 *\n+.* SECTION +LOCAL +DEFAULT +4 *\n+.* SECTION +LOCAL +DEFAULT +5 *\n+.* SECTION +LOCAL +DEFAULT +6 *\n+.* SECTION +LOCAL +DEFAULT +7 *\n+.* SECTION +LOCAL +DEFAULT +8 *\n+.* SECTION +LOCAL +DEFAULT +9 *\n+.* SECTION +LOCAL +DEFAULT +10 *\n+.* SECTION +LOCAL +DEFAULT +11 *\n+.* SECTION +LOCAL +DEFAULT +12 *\n+.* SECTION +LOCAL +DEFAULT +13 *\n+.* FILE +LOCAL +DEFAULT +ABS .*\n+.* NOTYPE +LOCAL +DEFAULT +ABS TLSMARK\n+.* TLS +LOCAL +DEFAULT +8 gd4\n+.* TLS +LOCAL +DEFAULT +8 ld4\n+.* TLS +LOCAL +DEFAULT +8 ld5\n+.* TLS +LOCAL +DEFAULT +8 ld6\n+.* TLS +LOCAL +DEFAULT +8 ie4\n+.* TLS +LOCAL +DEFAULT +8 le4\n+.* TLS +LOCAL +DEFAULT +8 le5\n+.* FILE +LOCAL +DEFAULT +ABS \n+.* OBJECT +LOCAL +DEFAULT +10 _DYNAMIC\n+.* NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve\n+.* NOTYPE +LOCAL +DEFAULT +7 .*\\.plt_call\\.__tls_get_addr(|_opt)\n+.* GLOBAL +DEFAULT +UND gd\n+.* GLOBAL +DEFAULT +9 le0\n+.* GLOBAL +DEFAULT +9 ld0\n+.* GLOBAL +DEFAULT +9 le1\n+.* GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +11 _start\n+.* TLS +GLOBAL +DEFAULT +9 ld2\n+.* TLS +GLOBAL +DEFAULT +9 ld1\n+.* NOTYPE +GLOBAL +DEFAULT +13 __bss_start\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+.* NOTYPE +GLOBAL +DEFAULT +13 _edata\n+.* NOTYPE +GLOBAL +DEFAULT +13 _end\n+.* TLS +GLOBAL +DEFAULT +9 gd0\n+.* TLS +GLOBAL +DEFAULT +9 ie0"
    },
    {
      "sha": "5400d8e0a94098034d7df24afdd6d2b3c3b8606c",
      "filename": "ld/testsuite/ld-powerpc/tlsexers.d",
      "status": "added",
      "additions": 104,
      "deletions": 0,
      "changes": 104,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexers.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexers.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexers.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,104 @@\n+#source: tls.s\n+#as: -a64\n+#ld: tmpdir/libtlslib.so\n+#objdump: -dr\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*plt_call\\.__tls_get_addr(|_opt)>:\n+.*\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*\t(4d 82 00 20|20 00 82 4d) \tbeqlr *\n+.*\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*\t(f8 81 ff b8|b8 ff 81 f8) \tstd     r4,-72\\(r1\\)\n+.*\t(f8 a1 ff c0|c0 ff a1 f8) \tstd     r5,-64\\(r1\\)\n+.*\t(f8 c1 ff c8|c8 ff c1 f8) \tstd     r6,-56\\(r1\\)\n+.*\t(f8 e1 ff d0|d0 ff e1 f8) \tstd     r7,-48\\(r1\\)\n+.*\t(f9 01 ff d8|d8 ff 01 f9) \tstd     r8,-40\\(r1\\)\n+.*\t(f9 21 ff e0|e0 ff 21 f9) \tstd     r9,-32\\(r1\\)\n+.*\t(f9 41 ff e8|e8 ff 41 f9) \tstd     r10,-24\\(r1\\)\n+.*\t(f9 61 ff f0|f0 ff 61 f9) \tstd     r11,-16\\(r1\\)\n+.*\t(f8 21 ff 81|81 ff 21 f8) \tstdu    r1,-128\\(r1\\)\n+.*\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n+.*\t(e9 82 80 48|48 80 82 e9) \tld      r12,-32696\\(r2\\)\n+.*\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*\t(e8 42 80 50|50 80 42 e8) \tld      r2,-32688\\(r2\\)\n+.*\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n+.*\t(e8 81 00 38|38 00 81 e8) \tld      r4,56\\(r1\\)\n+.*\t(e8 a1 00 40|40 00 a1 e8) \tld      r5,64\\(r1\\)\n+.*\t(e8 c1 00 48|48 00 c1 e8) \tld      r6,72\\(r1\\)\n+.*\t(e8 e1 00 50|50 00 e1 e8) \tld      r7,80\\(r1\\)\n+.*\t(e9 01 00 58|58 00 01 e9) \tld      r8,88\\(r1\\)\n+.*\t(e9 21 00 60|60 00 21 e9) \tld      r9,96\\(r1\\)\n+.*\t(e9 41 00 68|68 00 41 e9) \tld      r10,104\\(r1\\)\n+.*\t(e9 61 00 70|70 00 61 e9) \tld      r11,112\\(r1\\)\n+.*\t(38 21 00 80|80 00 21 38) \taddi    r1,r1,128\n+.*\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+.* <._start>:\n+.*\t(e8 62 80 10|10 80 62 e8) \tld      r3,-32752\\(r2\\)\n+.*\t(7c 63 6a 14|14 6a 63 7c) \tadd     r3,r3,r13\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 62 80 18|18 80 62 38) \taddi    r3,r2,-32744\n+.*\t(4b ff ff 61|61 ff ff 4b) \tbl      .*\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 90 38|38 90 6d 38) \taddi    r3,r13,-28616\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 10 00|00 10 6d 38) \taddi    r3,r13,4096\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(39 23 80 40|40 80 23 39) \taddi    r9,r3,-32704\n+.*\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*\t(81 49 80 48|48 80 49 81) \tlwz     r10,-32696\\(r9\\)\n+.*\t(e9 22 80 28|28 80 22 e9) \tld      r9,-32728\\(r2\\)\n+.*\t(7d 49 18 2a|2a 18 49 7d) \tldx     r10,r9,r3\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(a1 4d 90 58|58 90 4d a1) \tlhz     r10,-28584\\(r13\\)\n+.*\t(89 4d 90 60|60 90 4d 89) \tlbz     r10,-28576\\(r13\\)\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(99 4d 90 68|68 90 4d 99) \tstb     r10,-28568\\(r13\\)\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 90 00|00 90 6d 38) \taddi    r3,r13,-28672\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 10 00|00 10 6d 38) \taddi    r3,r13,4096\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(f9 43 80 08|08 80 43 f9) \tstd     r10,-32760\\(r3\\)\n+.*\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*\t(91 49 80 10|10 80 49 91) \tstw     r10,-32752\\(r9\\)\n+.*\t(e9 22 80 08|08 80 22 e9) \tld      r9,-32760\\(r2\\)\n+.*\t(7d 49 19 2a|2a 19 49 7d) \tstdx    r10,r9,r3\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(b1 4d 90 58|58 90 4d b1) \tsth     r10,-28584\\(r13\\)\n+.*\t(e9 4d 90 2a|2a 90 4d e9) \tlwa     r10,-28632\\(r13\\)\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(a9 4d 90 30|30 90 4d a9) \tlha     r10,-28624\\(r13\\)\n+.*\t(00 00 00 00|38 02 01 00) .*\n+.*\t(00 01 02 38|00 00 00 00) .*\n+.* <__glink_PLTresolve>:\n+.*\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*\t(42 9f 00 05|05 00 9f 42) \tbcl     20,4\\*cr7\\+so,.*\n+.*\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*\t(e8 4b 00 08|08 00 4b e8) \tld      r2,8\\(r11\\)\n+.*\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*\t(e9 6b 00 10|10 00 6b e9) \tld      r11,16\\(r11\\)\n+.*\t(4e 80 04 20|20 04 80 4e) \tbctr\n+.* <__tls_get_addr_opt@plt>:\n+.*\t(38 00 00 00|00 00 00 38) \tli      r0,0\n+.*\t(4b ff ff d0|d0 ff ff 4b) \tb       .*"
    },
    {
      "sha": "3940dad347d4c6a4e4c4d6dece166ad6ba45c3f1",
      "filename": "ld/testsuite/ld-powerpc/tlsexers.r",
      "status": "added",
      "additions": 112,
      "deletions": 0,
      "changes": 112,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexers.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexers.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexers.r?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,112 @@\n+#source: tls.s\n+#source: tlslib.s\n+#as: -a64\n+#ld:\n+#readelf: -WSsrl\n+#target: powerpc64*-*-*\n+\n+There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:\n+\n+Section Headers:\n+ +\\[Nr\\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al\n+ +\\[[ 0-9]+\\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0\n+ +\\[[ 0-9]+\\] \\.interp +.*\n+ +\\[[ 0-9]+\\] \\.hash +.*\n+ +\\[[ 0-9]+\\] \\.dynsym +.*\n+ +\\[[ 0-9]+\\] \\.dynstr +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.dyn +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.plt +.*\n+ +\\[[ 0-9]+\\] \\.text +PROGBITS .* 0+164 0+ +AX +0 +0 +32\n+ +\\[[ 0-9]+\\] \\.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.dynamic +DYNAMIC .* 0+160 10 +WA +4 +0 +8\n+ +\\[[ 0-9]+\\] \\.opd .*\n+ +\\[[ 0-9]+\\] \\.got +PROGBITS .* 0+30 08 +WA +0 +0 +256\n+ +\\[[ 0-9]+\\] \\.plt +.*\n+ +\\[[ 0-9]+\\] \\.symtab +.*\n+ +\\[[ 0-9]+\\] \\.strtab +.*\n+ +\\[[ 0-9]+\\] \\.shstrtab +.*\n+#...\n+\n+Elf file type is EXEC \\(Executable file\\)\n+Entry point .*\n+There are [0-9]+ program headers, starting at offset [0-9]+\n+\n+Program Headers:\n+ +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align\n+ +PHDR +0x0+40 0x0+10000040 0x0+10000040 0x0+150 0x0+150 R +0x8\n+ +INTERP +0x0+190 0x0+10000190 0x0+10000190 0x0+11 0x0+11 R +0x1\n+ +\\[Requesting program interpreter: .*\\]\n+ +LOAD .* R E 0x10000\n+ +LOAD .* RW +0x10000\n+ +DYNAMIC .* RW +0x8\n+ +TLS .* 0x0+38 0x0+70 R +0x8\n+\n+ Section to Segment mapping:\n+ +Segment Sections\\.\\.\\.\n+ +0+ +\n+ +01 +\\.interp *\n+ +02 +\\.interp \\.hash \\.dynsym \\.dynstr \\.rela\\.dyn \\.rela\\.plt \\.text *\n+ +03 +\\.tdata \\.dynamic \\.opd \\.got \\.plt *\n+ +04 +\\.dynamic *\n+ +05 +\\.tdata \\.tbss *\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 2 entries:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_TPREL64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \\+ 0\n+\n+Relocation section '\\.rela\\.plt' at offset .* contains 1 entry:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr_opt \\+ 0\n+\n+Symbol table '\\.dynsym' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* NOTYPE +LOCAL +DEFAULT +UND *\n+.* TLS +GLOBAL +DEFAULT +UND gd\n+.* TLS +GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+\n+Symbol table '\\.symtab' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* 0+ +0 +NOTYPE +LOCAL +DEFAULT +UND *\n+.* SECTION +LOCAL +DEFAULT +1 *\n+.* SECTION +LOCAL +DEFAULT +2 *\n+.* SECTION +LOCAL +DEFAULT +3 *\n+.* SECTION +LOCAL +DEFAULT +4 *\n+.* SECTION +LOCAL +DEFAULT +5 *\n+.* SECTION +LOCAL +DEFAULT +6 *\n+.* SECTION +LOCAL +DEFAULT +7 *\n+.* SECTION +LOCAL +DEFAULT +8 *\n+.* SECTION +LOCAL +DEFAULT +9 *\n+.* SECTION +LOCAL +DEFAULT +10 *\n+.* SECTION +LOCAL +DEFAULT +11 *\n+.* SECTION +LOCAL +DEFAULT +12 *\n+.* SECTION +LOCAL +DEFAULT +13 *\n+.* FILE +LOCAL +DEFAULT +ABS .*\n+.* NOTYPE +LOCAL +DEFAULT +ABS TLSMARK\n+.* TLS +LOCAL +DEFAULT +8 gd4\n+.* TLS +LOCAL +DEFAULT +8 ld4\n+.* TLS +LOCAL +DEFAULT +8 ld5\n+.* TLS +LOCAL +DEFAULT +8 ld6\n+.* TLS +LOCAL +DEFAULT +8 ie4\n+.* TLS +LOCAL +DEFAULT +8 le4\n+.* TLS +LOCAL +DEFAULT +8 le5\n+.* FILE +LOCAL +DEFAULT +ABS \n+.* OBJECT +LOCAL +DEFAULT +10 _DYNAMIC\n+.* NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve\n+.* NOTYPE +LOCAL +DEFAULT +7 .*\\.plt_call\\.__tls_get_addr(|_opt)\n+.* GLOBAL +DEFAULT +UND gd\n+.* GLOBAL +DEFAULT +9 le0\n+.* GLOBAL +DEFAULT +9 ld0\n+.* GLOBAL +DEFAULT +9 le1\n+.* GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +11 _start\n+.* TLS +GLOBAL +DEFAULT +9 ld2\n+.* TLS +GLOBAL +DEFAULT +9 ld1\n+.* NOTYPE +GLOBAL +DEFAULT +13 __bss_start\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+.* NOTYPE +GLOBAL +DEFAULT +13 _edata\n+.* NOTYPE +GLOBAL +DEFAULT +13 _end\n+.* TLS +GLOBAL +DEFAULT +9 gd0\n+.* TLS +GLOBAL +DEFAULT +9 ie0"
    },
    {
      "sha": "53e9630d81d88e438922f99e9c5771cce9f8a618",
      "filename": "ld/testsuite/ld-powerpc/tlsexetocnors.d",
      "status": "added",
      "additions": 90,
      "deletions": 0,
      "changes": 90,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocnors.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocnors.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexetocnors.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,90 @@\n+#source: tlstoc.s\n+#as: -a64\n+#ld: --no-tls-optimize tmpdir/libtlslib.so\n+#objdump: -dr\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*plt_call\\.__tls_get_addr(|_opt)>:\n+.*:\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*:\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*:\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*:\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*:\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*:\t(4d 82 00 20|20 00 82 4d) \tbeqlr *\n+.*:\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*:\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*:\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*:\t(f8 81 ff b8|b8 ff 81 f8) \tstd     r4,-72\\(r1\\)\n+.*:\t(f8 a1 ff c0|c0 ff a1 f8) \tstd     r5,-64\\(r1\\)\n+.*:\t(f8 c1 ff c8|c8 ff c1 f8) \tstd     r6,-56\\(r1\\)\n+.*:\t(f8 e1 ff d0|d0 ff e1 f8) \tstd     r7,-48\\(r1\\)\n+.*:\t(f9 01 ff d8|d8 ff 01 f9) \tstd     r8,-40\\(r1\\)\n+.*:\t(f9 21 ff e0|e0 ff 21 f9) \tstd     r9,-32\\(r1\\)\n+.*:\t(f9 41 ff e8|e8 ff 41 f9) \tstd     r10,-24\\(r1\\)\n+.*:\t(f9 61 ff f0|f0 ff 61 f9) \tstd     r11,-16\\(r1\\)\n+.*:\t(f8 21 ff 81|81 ff 21 f8) \tstdu    r1,-128\\(r1\\)\n+.*:\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n+.*:\t(e9 82 80 70|70 80 82 e9) \tld      r12,-32656\\(r2\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e8 42 80 78|78 80 42 e8) \tld      r2,-32648\\(r2\\)\n+.*:\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*:\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n+.*:\t(e8 81 00 38|38 00 81 e8) \tld      r4,56\\(r1\\)\n+.*:\t(e8 a1 00 40|40 00 a1 e8) \tld      r5,64\\(r1\\)\n+.*:\t(e8 c1 00 48|48 00 c1 e8) \tld      r6,72\\(r1\\)\n+.*:\t(e8 e1 00 50|50 00 e1 e8) \tld      r7,80\\(r1\\)\n+.*:\t(e9 01 00 58|58 00 01 e9) \tld      r8,88\\(r1\\)\n+.*:\t(e9 21 00 60|60 00 21 e9) \tld      r9,96\\(r1\\)\n+.*:\t(e9 41 00 68|68 00 41 e9) \tld      r10,104\\(r1\\)\n+.*:\t(e9 61 00 70|70 00 61 e9) \tld      r11,112\\(r1\\)\n+.*:\t(38 21 00 80|80 00 21 38) \taddi    r1,r1,128\n+.*:\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*:\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*:\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+.* <\\._start>:\n+.*:\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*:\t(4b ff ff 6d|6d ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 18|18 80 62 38) \taddi    r3,r2,-32744\n+.*:\t(4b ff ff 61|61 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 28|28 80 62 38) \taddi    r3,r2,-32728\n+.*:\t(4b ff ff 55|55 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(38 62 80 38|38 80 62 38) \taddi    r3,r2,-32712\n+.*:\t(4b ff ff 49|49 ff ff 4b) \tbl      .*\n+.*:\t(60 00 00 00|00 00 00 60) \tnop\n+.*:\t(39 23 80 40|40 80 23 39) \taddi    r9,r3,-32704\n+.*:\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*:\t(81 49 80 48|48 80 49 81) \tlwz     r10,-32696\\(r9\\)\n+.*:\t(e9 22 80 48|48 80 22 e9) \tld      r9,-32696\\(r2\\)\n+.*:\t(7d 49 18 2a|2a 18 49 7d) \tldx     r10,r9,r3\n+.*:\t(e9 22 80 50|50 80 22 e9) \tld      r9,-32688\\(r2\\)\n+.*:\t(7d 49 6a 2e|2e 6a 49 7d) \tlhzx    r10,r9,r13\n+.*:\t(89 4d 90 60|60 90 4d 89) \tlbz     r10,-28576\\(r13\\)\n+.*:\t(3d 2d 00 00|00 00 2d 3d) \taddis   r9,r13,0\n+.*:\t(99 49 90 68|68 90 49 99) \tstb     r10,-28568\\(r9\\)\n+.*:\t(00 00 00 00|a0 02 01 00) \t.*\n+.*:\t(00 01 02 a0|00 00 00 00) \t.*\n+\n+.* <__glink_PLTresolve>:\n+.*:\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*:\t(42 9f 00 05|05 00 9f 42) \tbcl     .*\n+.*:\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*:\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*:\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*:\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*:\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*:\t(e8 4b 00 08|08 00 4b e8) \tld      r2,8\\(r11\\)\n+.*:\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*:\t(e9 6b 00 10|10 00 6b e9) \tld      r11,16\\(r11\\)\n+.*:\t(4e 80 04 20|20 04 80 4e) \tbctr\n+\n+.* <__tls_get_addr_opt@plt>:\n+.*:\t(38 00 00 00|00 00 00 38) \tli      r0,0\n+.*:\t(4b ff ff d0|d0 ff ff 4b) \tb       .* <__glink_PLTresolve>"
    },
    {
      "sha": "4adf305f0e2c410f86f8a8d0350f7718ab0e0160",
      "filename": "ld/testsuite/ld-powerpc/tlsexetocrs.d",
      "status": "added",
      "additions": 88,
      "deletions": 0,
      "changes": 88,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocrs.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocrs.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexetocrs.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,88 @@\n+#source: tlstoc.s\n+#as: -a64\n+#ld: tmpdir/libtlslib.so\n+#objdump: -dr\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*plt_call\\.__tls_get_addr(|_opt)>:\n+.*\t(e8 03 00 00|00 00 03 e8) \tld      r0,0\\(r3\\)\n+.*\t(e9 83 00 08|08 00 83 e9) \tld      r12,8\\(r3\\)\n+.*\t(2c 20 00 00|00 00 20 2c) \tcmpdi   r0,0\n+.*\t(7c 60 1b 78|78 1b 60 7c) \tmr      r0,r3\n+.*\t(7c 6c 6a 14|14 6a 6c 7c) \tadd     r3,r12,r13\n+.*\t(4d 82 00 20|20 00 82 4d) \tbeqlr *\n+.*\t(7c 03 03 78|78 03 03 7c) \tmr      r3,r0\n+.*\t(7c 08 02 a6|a6 02 08 7c) \tmflr    r0\n+.*\t(f8 01 00 10|10 00 01 f8) \tstd     r0,16\\(r1\\)\n+.*\t(f8 81 ff b8|b8 ff 81 f8) \tstd     r4,-72\\(r1\\)\n+.*\t(f8 a1 ff c0|c0 ff a1 f8) \tstd     r5,-64\\(r1\\)\n+.*\t(f8 c1 ff c8|c8 ff c1 f8) \tstd     r6,-56\\(r1\\)\n+.*\t(f8 e1 ff d0|d0 ff e1 f8) \tstd     r7,-48\\(r1\\)\n+.*\t(f9 01 ff d8|d8 ff 01 f9) \tstd     r8,-40\\(r1\\)\n+.*\t(f9 21 ff e0|e0 ff 21 f9) \tstd     r9,-32\\(r1\\)\n+.*\t(f9 41 ff e8|e8 ff 41 f9) \tstd     r10,-24\\(r1\\)\n+.*\t(f9 61 ff f0|f0 ff 61 f9) \tstd     r11,-16\\(r1\\)\n+.*\t(f8 21 ff 81|81 ff 21 f8) \tstdu    r1,-128\\(r1\\)\n+.*\t(f8 41 00 28|28 00 41 f8) \tstd     r2,40\\(r1\\)\n+.*\t(e9 82 80 70|70 80 82 e9) \tld      r12,-32656\\(r2\\)\n+.*\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*\t(e8 42 80 78|78 80 42 e8) \tld      r2,-32648\\(r2\\)\n+.*\t(4e 80 04 21|21 04 80 4e) \tbctrl\n+.*\t(e8 41 00 28|28 00 41 e8) \tld      r2,40\\(r1\\)\n+.*\t(e8 81 00 38|38 00 81 e8) \tld      r4,56\\(r1\\)\n+.*\t(e8 a1 00 40|40 00 a1 e8) \tld      r5,64\\(r1\\)\n+.*\t(e8 c1 00 48|48 00 c1 e8) \tld      r6,72\\(r1\\)\n+.*\t(e8 e1 00 50|50 00 e1 e8) \tld      r7,80\\(r1\\)\n+.*\t(e9 01 00 58|58 00 01 e9) \tld      r8,88\\(r1\\)\n+.*\t(e9 21 00 60|60 00 21 e9) \tld      r9,96\\(r1\\)\n+.*\t(e9 41 00 68|68 00 41 e9) \tld      r10,104\\(r1\\)\n+.*\t(e9 61 00 70|70 00 61 e9) \tld      r11,112\\(r1\\)\n+.*\t(38 21 00 80|80 00 21 38) \taddi    r1,r1,128\n+.*\t(e8 01 00 10|10 00 01 e8) \tld      r0,16\\(r1\\)\n+.*\t(7c 08 03 a6|a6 03 08 7c) \tmtlr    r0\n+.*\t(4e 80 00 20|20 00 80 4e) \tblr\n+\n+.* <\\._start>:\n+.*\t(38 62 80 08|08 80 62 38) \taddi    r3,r2,-32760\n+.*\t(4b ff ff 6d|6d ff ff 4b) \tbl      .*\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 62 80 18|18 80 62 38) \taddi    r3,r2,-32744\n+.*\t(4b ff ff 61|61 ff ff 4b) \tbl      .*\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 90 38|38 90 6d 38) \taddi    r3,r13,-28616\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(38 6d 10 00|00 10 6d 38) \taddi    r3,r13,4096\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(39 23 80 40|40 80 23 39) \taddi    r9,r3,-32704\n+.*\t(3d 23 00 00|00 00 23 3d) \taddis   r9,r3,0\n+.*\t(81 49 80 48|48 80 49 81) \tlwz     r10,-32696\\(r9\\)\n+.*\t(e9 22 80 48|48 80 22 e9) \tld      r9,-32696\\(r2\\)\n+.*\t(7d 49 18 2a|2a 18 49 7d) \tldx     r10,r9,r3\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(a1 4d 90 58|58 90 4d a1) \tlhz     r10,-28584\\(r13\\)\n+.*\t(89 4d 90 60|60 90 4d 89) \tlbz     r10,-28576\\(r13\\)\n+.*\t(60 00 00 00|00 00 00 60) \tnop\n+.*\t(99 4d 90 68|68 90 4d 99) \tstb     r10,-28568\\(r13\\)\n+.*\t(00 00 00 00|a0 02 01 00) .*\n+.*\t(00 01 02 a0|00 00 00 00) .*\n+.* <__glink_PLTresolve>:\n+.*\t(7d 88 02 a6|a6 02 88 7d) \tmflr    r12\n+.*\t(42 9f 00 05|05 00 9f 42) \tbcl     20,4\\*cr7\\+so,.*\n+.*\t(7d 68 02 a6|a6 02 68 7d) \tmflr    r11\n+.*\t(e8 4b ff f0|f0 ff 4b e8) \tld      r2,-16\\(r11\\)\n+.*\t(7d 88 03 a6|a6 03 88 7d) \tmtlr    r12\n+.*\t(7d 62 5a 14|14 5a 62 7d) \tadd     r11,r2,r11\n+.*\t(e9 8b 00 00|00 00 8b e9) \tld      r12,0\\(r11\\)\n+.*\t(e8 4b 00 08|08 00 4b e8) \tld      r2,8\\(r11\\)\n+.*\t(7d 89 03 a6|a6 03 89 7d) \tmtctr   r12\n+.*\t(e9 6b 00 10|10 00 6b e9) \tld      r11,16\\(r11\\)\n+.*\t(4e 80 04 20|20 04 80 4e) \tbctr\n+.* <__tls_get_addr_opt@plt>:\n+.*\t(38 00 00 00|00 00 00 38) \tli      r0,0\n+.*\t(4b ff ff d0|d0 ff ff 4b) \tb       .*"
    },
    {
      "sha": "96ada16414fbb2a4a1047a2e5d612c57b08ff087",
      "filename": "ld/testsuite/ld-powerpc/tlsexetocrs.r",
      "status": "added",
      "additions": 113,
      "deletions": 0,
      "changes": 113,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocrs.r",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsexetocrs.r",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsexetocrs.r?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,113 @@\n+#source: tlslib.s\n+#source: tlstoc.s\n+#as: -a64\n+#ld:\n+#readelf: -WSsrl\n+#target: powerpc64*-*-*\n+\n+There are [0-9]+ section headers, starting at offset 0x[0-9a-f]+:\n+\n+Section Headers:\n+ +\\[Nr\\] Name +Type +Address +Off +Size +ES Flg Lk Inf Al\n+ +\\[[ 0-9]+\\] +NULL +0+ 0+ 0+ 0+ +0 +0 +0\n+ +\\[[ 0-9]+\\] \\.interp +.*\n+ +\\[[ 0-9]+\\] \\.hash +.*\n+ +\\[[ 0-9]+\\] \\.dynsym +.*\n+ +\\[[ 0-9]+\\] \\.dynstr +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.dyn +.*\n+ +\\[[ 0-9]+\\] \\.rela\\.plt +.*\n+ +\\[[ 0-9]+\\] \\.text +PROGBITS .* 0+124 0+ +AX +0 +0 +32\n+ +\\[[ 0-9]+\\] \\.tdata +PROGBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.tbss +NOBITS .* 0+38 0+ WAT +0 +0 +8\n+ +\\[[ 0-9]+\\] \\.dynamic +DYNAMIC .* 0+160 10 +WA +4 +0 +8\n+ +\\[[ 0-9]+\\] \\.opd .*\n+ +\\[[ 0-9]+\\] \\.got +PROGBITS .* 0+58 08 +WA +0 +0 +256\n+ +\\[[ 0-9]+\\] \\.plt +.*\n+ +\\[[ 0-9]+\\] \\.symtab +.*\n+ +\\[[ 0-9]+\\] \\.strtab +.*\n+ +\\[[ 0-9]+\\] \\.shstrtab +.*\n+#...\n+\n+Elf file type is EXEC \\(Executable file\\)\n+Entry point .*\n+There are [0-9]+ program headers, starting at offset [0-9]+\n+\n+Program Headers:\n+ +Type +Offset +VirtAddr +PhysAddr +FileSiz +MemSiz +Flg Align\n+ +PHDR +0x0+40 0x0+10000040 0x0+10000040 0x0+150 0x0+150 R +0x8\n+ +INTERP +0x0+190 0x0+10000190 0x0+10000190 0x0+11 0x0+11 R +0x1\n+ +\\[Requesting program interpreter: .*\\]\n+ +LOAD .* R E 0x10000\n+ +LOAD .* RW +0x10000\n+ +DYNAMIC .* RW +0x8\n+ +TLS .* 0x0+38 0x0+70 R +0x8\n+\n+ Section to Segment mapping:\n+ +Segment Sections\\.\\.\\.\n+ +0+ +\n+ +01 +\\.interp *\n+ +02 +\\.interp \\.hash \\.dynsym \\.dynstr \\.rela\\.dyn \\.rela\\.plt \\.text *\n+ +03 +\\.tdata \\.dynamic \\.opd \\.got \\.plt *\n+ +04 +\\.dynamic *\n+ +05 +\\.tdata \\.tbss *\n+\n+Relocation section '\\.rela\\.dyn' at offset .* contains 3 entries:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPREL64 +0+ gd \\+ 0\n+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \\+ 0\n+\n+Relocation section '\\.rela\\.plt' at offset .* contains 1 entry:\n+ +Offset +Info +Type +Symbol's Value +Symbol's Name \\+ Addend\n+[0-9a-f ]+R_PPC64_JMP_SLOT +0+ __tls_get_addr_opt \\+ 0\n+\n+Symbol table '\\.dynsym' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* NOTYPE +LOCAL +DEFAULT +UND *\n+.* TLS +GLOBAL +DEFAULT +UND gd\n+.* TLS +GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+\n+Symbol table '\\.symtab' contains [0-9]+ entries:\n+ +Num: +Value +Size +Type +Bind +Vis +Ndx +Name\n+.* NOTYPE +LOCAL +DEFAULT +UND *\n+.* SECTION +LOCAL +DEFAULT +1 *\n+.* SECTION +LOCAL +DEFAULT +2 *\n+.* SECTION +LOCAL +DEFAULT +3 *\n+.* SECTION +LOCAL +DEFAULT +4 *\n+.* SECTION +LOCAL +DEFAULT +5 *\n+.* SECTION +LOCAL +DEFAULT +6 *\n+.* SECTION +LOCAL +DEFAULT +7 *\n+.* SECTION +LOCAL +DEFAULT +8 *\n+.* SECTION +LOCAL +DEFAULT +9 *\n+.* SECTION +LOCAL +DEFAULT +10 *\n+.* SECTION +LOCAL +DEFAULT +11 *\n+.* SECTION +LOCAL +DEFAULT +12 *\n+.* SECTION +LOCAL +DEFAULT +13 *\n+.* FILE +LOCAL +DEFAULT +ABS .*\n+.* TLS +LOCAL +DEFAULT +8 gd4\n+.* TLS +LOCAL +DEFAULT +8 ld4\n+.* TLS +LOCAL +DEFAULT +8 ld5\n+.* TLS +LOCAL +DEFAULT +8 ld6\n+.* TLS +LOCAL +DEFAULT +8 ie4\n+.* TLS +LOCAL +DEFAULT +8 le4\n+.* TLS +LOCAL +DEFAULT +8 le5\n+.* NOTYPE +LOCAL +DEFAULT +12 \\.Lie0\n+.* FILE +LOCAL +DEFAULT +ABS \n+.* OBJECT +LOCAL +DEFAULT +10 _DYNAMIC\n+.* NOTYPE +LOCAL +DEFAULT +7 __glink_PLTresolve\n+.* NOTYPE +LOCAL +DEFAULT +7 .*\\.plt_call\\.__tls_get_addr(|_opt)\n+.* TLS +GLOBAL +DEFAULT +UND gd\n+.* TLS +GLOBAL +DEFAULT +9 le0\n+.* TLS +GLOBAL +DEFAULT +9 ld0\n+.* TLS +GLOBAL +DEFAULT +9 le1\n+.* TLS +GLOBAL +DEFAULT +UND ld\n+.* FUNC +GLOBAL +DEFAULT +11 _start\n+.* TLS +GLOBAL +DEFAULT +9 ld2\n+.* TLS +GLOBAL +DEFAULT +9 ld1\n+.* NOTYPE +GLOBAL +DEFAULT +13 __bss_start\n+.* FUNC +GLOBAL +DEFAULT +UND __tls_get_addr_opt\n+.* NOTYPE +GLOBAL +DEFAULT +13 _edata\n+.* NOTYPE +GLOBAL +DEFAULT +13 _end\n+.* TLS +GLOBAL +DEFAULT +9 gd0\n+.* TLS +GLOBAL +DEFAULT +9 ie0"
    },
    {
      "sha": "4100302a42f65edaa95b86f79814e4521fd0f506",
      "filename": "ld/testsuite/ld-powerpc/tlsopt6.d",
      "status": "added",
      "additions": 86,
      "deletions": 0,
      "changes": 86,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsopt6.d",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsopt6.d",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsopt6.d?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,86 @@\n+#source: tlsopt5.s\n+#as: -a64\n+#ld: -shared --gc-sections --no-plt-localentry tlsdll.so\n+#objdump: -dr\n+#target: powerpc64*-*-*\n+\n+.*\n+\n+Disassembly of section \\.text:\n+\n+.* <.*\\.plt_call\\.foo>:\n+.*:\t(18 00 41 f8|f8 41 00 18) \tstd     r2,24\\(r1\\)\n+.*:\t(28 80 82 e9|e9 82 80 28) \tld      r12,-32728\\(r2\\)\n+.*:\t(a6 03 89 7d|7d 89 03 a6) \tmtctr   r12\n+.*:\t(20 04 80 4e|4e 80 04 20) \tbctr\n+\t\\.\\.\\.\n+\n+.* <.*\\.plt_call\\.__tls_get_addr_opt@@GLIBC_2\\.22>:\n+.*:\t(00 00 03 e8|e8 03 00 00) \tld      r0,0\\(r3\\)\n+.*:\t(08 00 83 e9|e9 83 00 08) \tld      r12,8\\(r3\\)\n+.*:\t(00 00 20 2c|2c 20 00 00) \tcmpdi   r0,0\n+.*:\t(78 1b 60 7c|7c 60 1b 78) \tmr      r0,r3\n+.*:\t(14 6a 6c 7c|7c 6c 6a 14) \tadd     r3,r12,r13\n+.*:\t(20 00 82 4d|4d 82 00 20) \tbeqlr *\n+.*:\t(78 03 03 7c|7c 03 03 78) \tmr      r3,r0\n+.*:\t(a6 02 08 7c|7c 08 02 a6) \tmflr    r0\n+.*:\t(10 00 01 f8|f8 01 00 10) \tstd     r0,16\\(r1\\)\n+.*:\t(c0 ff 81 f8|f8 81 ff c0) \tstd     r4,-64\\(r1\\)\n+.*:\t(c8 ff a1 f8|f8 a1 ff c8) \tstd     r5,-56\\(r1\\)\n+.*:\t(d0 ff c1 f8|f8 c1 ff d0) \tstd     r6,-48\\(r1\\)\n+.*:\t(d8 ff e1 f8|f8 e1 ff d8) \tstd     r7,-40\\(r1\\)\n+.*:\t(e0 ff 01 f9|f9 01 ff e0) \tstd     r8,-32\\(r1\\)\n+.*:\t(e8 ff 21 f9|f9 21 ff e8) \tstd     r9,-24\\(r1\\)\n+.*:\t(f0 ff 41 f9|f9 41 ff f0) \tstd     r10,-16\\(r1\\)\n+.*:\t(f8 ff 61 f9|f9 61 ff f8) \tstd     r11,-8\\(r1\\)\n+.*:\t(a1 ff 21 f8|f8 21 ff a1) \tstdu    r1,-96\\(r1\\)\n+.*:\t(18 00 41 f8|f8 41 00 18) \tstd     r2,24\\(r1\\)\n+.*:\t(30 80 82 e9|e9 82 80 30) \tld      r12,-32720\\(r2\\)\n+.*:\t(a6 03 89 7d|7d 89 03 a6) \tmtctr   r12\n+.*:\t(21 04 80 4e|4e 80 04 21) \tbctrl\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(20 00 81 e8|e8 81 00 20) \tld      r4,32\\(r1\\)\n+.*:\t(28 00 a1 e8|e8 a1 00 28) \tld      r5,40\\(r1\\)\n+.*:\t(30 00 c1 e8|e8 c1 00 30) \tld      r6,48\\(r1\\)\n+.*:\t(38 00 e1 e8|e8 e1 00 38) \tld      r7,56\\(r1\\)\n+.*:\t(40 00 01 e9|e9 01 00 40) \tld      r8,64\\(r1\\)\n+.*:\t(48 00 21 e9|e9 21 00 48) \tld      r9,72\\(r1\\)\n+.*:\t(50 00 41 e9|e9 41 00 50) \tld      r10,80\\(r1\\)\n+.*:\t(58 00 61 e9|e9 61 00 58) \tld      r11,88\\(r1\\)\n+.*:\t(60 00 21 38|38 21 00 60) \taddi    r1,r1,96\n+.*:\t(10 00 01 e8|e8 01 00 10) \tld      r0,16\\(r1\\)\n+.*:\t(a6 03 08 7c|7c 08 03 a6) \tmtlr    r0\n+.*:\t(20 00 80 4e|4e 80 00 20) \tblr\n+\t\\.\\.\\.\n+\n+.* <_start>:\n+.*:\t(08 80 62 38|38 62 80 08) \taddi    r3,r2,-32760\n+.*:\t(5d ff ff 4b|4b ff ff 5d) \tbl      .* <.*\\.plt_call\\.__tls_get_addr_opt@@GLIBC_2\\.22>\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*:\t(35 ff ff 4b|4b ff ff 35) \tbl      .* <.*\\.plt_call\\.foo>\n+.*:\t(18 00 41 e8|e8 41 00 18) \tld      r2,24\\(r1\\)\n+.*:\t(00 00 00 60|60 00 00 00) \tnop\n+.*\n+.*\n+\n+.* <__glink_PLTresolve>:\n+.*:\t(a6 02 08 7c|7c 08 02 a6) \tmflr    r0\n+.*:\t(05 00 9f 42|42 9f 00 05) \tbcl     .*\n+.*:\t(a6 02 68 7d|7d 68 02 a6) \tmflr    r11\n+.*:\t(18 00 41 f8|f8 41 00 18) \tstd     r2,24\\(r1\\)\n+.*:\t(f0 ff 4b e8|e8 4b ff f0) \tld      r2,-16\\(r11\\)\n+.*:\t(a6 03 08 7c|7c 08 03 a6) \tmtlr    r0\n+.*:\t(50 60 8b 7d|7d 8b 60 50) \tsubf    r12,r11,r12\n+.*:\t(14 5a 62 7d|7d 62 5a 14) \tadd     r11,r2,r11\n+.*:\t(d0 ff 0c 38|38 0c ff d0) \taddi    r0,r12,-48\n+.*:\t(00 00 8b e9|e9 8b 00 00) \tld      r12,0\\(r11\\)\n+.*:\t(82 f0 00 78|78 00 f0 82) \trldicl  r0,r0,62,2\n+.*:\t(a6 03 89 7d|7d 89 03 a6) \tmtctr   r12\n+.*:\t(08 00 6b e9|e9 6b 00 08) \tld      r11,8\\(r11\\)\n+.*:\t(20 04 80 4e|4e 80 04 20) \tbctr\n+\n+.* <foo@plt>:\n+.*\t(c8 ff ff 4b|4b ff ff c8) \tb       .*\n+\n+.* <__tls_get_addr_opt@plt>:\n+.*:\t(c4 ff ff 4b|4b ff ff c4) \tb       .*"
    },
    {
      "sha": "abb414a6339ef97fc26da03dc5e37e87e44d1cdb",
      "filename": "ld/testsuite/ld-powerpc/tlsopt6.wf",
      "status": "added",
      "additions": 49,
      "deletions": 0,
      "changes": 49,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsopt6.wf",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9e7028aa1e788d666bad91fb20159da6c95bbab1/ld/testsuite/ld-powerpc/tlsopt6.wf",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/ld/testsuite/ld-powerpc/tlsopt6.wf?ref=9e7028aa1e788d666bad91fb20159da6c95bbab1",
      "patch": "@@ -0,0 +1,49 @@\n+Contents of the \\.eh_frame section:\n+\n+0+ 0+10 0+ CIE\n+  Version:               1\n+  Augmentation:          \"zR\"\n+  Code alignment factor: 4\n+  Data alignment factor: -8\n+  Return address column: 65\n+  Augmentation data:     1b\n+  DW_CFA_def_cfa: r1 ofs 0\n+\n+0+14 0+34 0+18 FDE cie=0+ pc=.*\n+  DW_CFA_advance_loc: 104 to .*\n+  DW_CFA_def_cfa_offset: 96\n+  DW_CFA_offset_extended_sf: r65 at cfa\\+16\n+  DW_CFA_offset: r4 at cfa-64\n+  DW_CFA_offset: r5 at cfa-56\n+  DW_CFA_offset: r6 at cfa-48\n+  DW_CFA_offset: r7 at cfa-40\n+  DW_CFA_offset: r8 at cfa-32\n+  DW_CFA_offset: r9 at cfa-24\n+  DW_CFA_offset: r10 at cfa-16\n+  DW_CFA_offset: r11 at cfa-8\n+  DW_CFA_advance_loc: 56 to .*\n+  DW_CFA_def_cfa_offset: 0\n+  DW_CFA_restore: r4\n+  DW_CFA_restore: r5\n+  DW_CFA_restore: r6\n+  DW_CFA_restore: r7\n+  DW_CFA_restore: r8\n+  DW_CFA_restore: r9\n+  DW_CFA_restore: r10\n+  DW_CFA_restore: r11\n+  DW_CFA_advance_loc: 8 to .*\n+  DW_CFA_restore_extended: r65\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop\n+\n+0+4c 0+14 0+50 FDE cie=0+ pc=.*\n+  DW_CFA_advance_loc: 4 to .*\n+  DW_CFA_register: r65 in r0\n+  DW_CFA_advance_loc: 28 to .*\n+  DW_CFA_restore_extended: r65\n+\n+0+64 0+10 0+68 FDE cie=0+ pc=.*\n+  DW_CFA_nop\n+  DW_CFA_nop\n+  DW_CFA_nop"
    }
  ]
}