{
  "sha": "89fb8848d7f00cabeb56344762860469238c24e1",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6ODlmYjg4NDhkN2YwMGNhYmViNTYzNDQ3NjI4NjA0NjkyMzhjMjRlMQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-04-21T18:43:17Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-05-08T22:01:49Z"
    },
    "message": "Convert linux-tdep.c to type-safe registry API\n\nThis changes linux-tdep.c to use the type-safe registry API.\n\ngdb/ChangeLog\n2019-05-08  Tom Tromey  <tom@tromey.com>\n\n\t* linux-tdep.c (struct linux_info): Add initializers.\n\t(linux_inferior_data): Move.  Change type.\n\t(invalidate_linux_cache_inf): Update.\n\t(linux_inferior_data_cleanup): Remove.\n\t(get_linux_inferior_data, _initialize_linux_tdep): Update.",
    "tree": {
      "sha": "b8e7b0e217feaab72a3128a88fb0582f4d3625e2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b8e7b0e217feaab72a3128a88fb0582f4d3625e2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/89fb8848d7f00cabeb56344762860469238c24e1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89fb8848d7f00cabeb56344762860469238c24e1",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/89fb8848d7f00cabeb56344762860469238c24e1",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/89fb8848d7f00cabeb56344762860469238c24e1/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e9b89e2d01043108283df02261ed718aae705bc8",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/e9b89e2d01043108283df02261ed718aae705bc8",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/e9b89e2d01043108283df02261ed718aae705bc8"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 16,
    "deletions": 31
  },
  "files": [
    {
      "sha": "708b73605f33fe01943af86a30660884876a944b",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89fb8848d7f00cabeb56344762860469238c24e1/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89fb8848d7f00cabeb56344762860469238c24e1/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=89fb8848d7f00cabeb56344762860469238c24e1",
      "patch": "@@ -1,3 +1,11 @@\n+2019-05-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* linux-tdep.c (struct linux_info): Add initializers.\n+\t(linux_inferior_data): Move.  Change type.\n+\t(invalidate_linux_cache_inf): Update.\n+\t(linux_inferior_data_cleanup): Remove.\n+\t(get_linux_inferior_data, _initialize_linux_tdep): Update.\n+\n 2019-05-08  Tom Tromey  <tom@tromey.com>\n \n \t* auxv.c (auxv_inferior_data): Move.  Change type."
    },
    {
      "sha": "f32631f4acbfdab79f5f7ec9be8017324ed03a7a",
      "filename": "gdb/linux-tdep.c",
      "status": "modified",
      "additions": 8,
      "deletions": 31,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/89fb8848d7f00cabeb56344762860469238c24e1/gdb/linux-tdep.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/89fb8848d7f00cabeb56344762860469238c24e1/gdb/linux-tdep.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/linux-tdep.c?ref=89fb8848d7f00cabeb56344762860469238c24e1",
      "patch": "@@ -183,9 +183,6 @@ get_linux_gdbarch_data (struct gdbarch *gdbarch)\n \t  gdbarch_data (gdbarch, linux_gdbarch_data_handle));\n }\n \n-/* Per-inferior data key.  */\n-static const struct inferior_data *linux_inferior_data;\n-\n /* Linux-specific cached data.  This is used by GDB for caching\n    purposes for each inferior.  This helps reduce the overhead of\n    transfering data from a remote target to the local host.  */\n@@ -196,38 +193,24 @@ struct linux_info\n      at this info requires an auxv lookup (which is itself cached),\n      and looking through the inferior's mappings (which change\n      throughout execution and therefore cannot be cached).  */\n-  struct mem_range vsyscall_range;\n+  struct mem_range vsyscall_range {};\n \n   /* Zero if we haven't tried looking up the vsyscall's range before\n      yet.  Positive if we tried looking it up, and found it.  Negative\n      if we tried looking it up but failed.  */\n-  int vsyscall_range_p;\n+  int vsyscall_range_p = 0;\n };\n \n+/* Per-inferior data key.  */\n+static const struct inferior_key<linux_info> linux_inferior_data;\n+\n /* Frees whatever allocated space there is to be freed and sets INF's\n    linux cache data pointer to NULL.  */\n \n static void\n invalidate_linux_cache_inf (struct inferior *inf)\n {\n-  struct linux_info *info;\n-\n-  info = (struct linux_info *) inferior_data (inf, linux_inferior_data);\n-  if (info != NULL)\n-    {\n-      xfree (info);\n-      set_inferior_data (inf, linux_inferior_data, NULL);\n-    }\n-}\n-\n-/* Handles the cleanup of the linux cache for inferior INF.  ARG is\n-   ignored.  Callback for the inferior_appeared and inferior_exit\n-   events.  */\n-\n-static void\n-linux_inferior_data_cleanup (struct inferior *inf, void *arg)\n-{\n-  invalidate_linux_cache_inf (inf);\n+  linux_inferior_data.clear (inf);\n }\n \n /* Fetch the linux cache info for INF.  This function always returns a\n@@ -239,12 +222,9 @@ get_linux_inferior_data (void)\n   struct linux_info *info;\n   struct inferior *inf = current_inferior ();\n \n-  info = (struct linux_info *) inferior_data (inf, linux_inferior_data);\n+  info = linux_inferior_data.get (inf);\n   if (info == NULL)\n-    {\n-      info = XCNEW (struct linux_info);\n-      set_inferior_data (inf, linux_inferior_data, info);\n-    }\n+    info = linux_inferior_data.emplace (inf);\n \n   return info;\n }\n@@ -2582,9 +2562,6 @@ _initialize_linux_tdep (void)\n   linux_gdbarch_data_handle =\n     gdbarch_data_register_post_init (init_linux_gdbarch_data);\n \n-  /* Set a cache per-inferior.  */\n-  linux_inferior_data\n-    = register_inferior_data_with_cleanup (NULL, linux_inferior_data_cleanup);\n   /* Observers used to invalidate the cache when needed.  */\n   gdb::observers::inferior_exit.attach (invalidate_linux_cache_inf);\n   gdb::observers::inferior_appeared.attach (invalidate_linux_cache_inf);"
    }
  ]
}