{
  "sha": "9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OWJiOWMxMTVjZDNkMGI5ZGU5N2UwMmNmMmU4NjE5NzIwMTBkYWE2Zg==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-12T01:45:19Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-08-12T03:40:48Z"
    },
    "message": "PR24851, gas/testsuite/gas/epiphany/badrelax.s failure with MALLOC_PERTURB_=1\n\n\tPR 24851\n\t* config/tc-epiphany.c (md_estimate_size_before_relax): Clear\n\textra opcode bytes when changing from a 2-byte to a 4-byte insn.",
    "tree": {
      "sha": "b64696766275a96c676ddf954698c0d79efc3e03",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/b64696766275a96c676ddf954698c0d79efc3e03"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/9bb9c115cd3d0b9de97e02cf2e861972010daa6f/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b32b0a69fdf24a8b04efe9c2b90c3e830aa0c2c1",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/b32b0a69fdf24a8b04efe9c2b90c3e830aa0c2c1",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/b32b0a69fdf24a8b04efe9c2b90c3e830aa0c2c1"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 28,
    "deletions": 17
  },
  "files": [
    {
      "sha": "68c40022323edfb6b3d656c1b52ac64de6b26df7",
      "filename": "gas/ChangeLog",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9bb9c115cd3d0b9de97e02cf2e861972010daa6f/gas/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9bb9c115cd3d0b9de97e02cf2e861972010daa6f/gas/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/ChangeLog?ref=9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
      "patch": "@@ -1,3 +1,9 @@\n+2019-08-12  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 24851\n+\t* config/tc-epiphany.c (md_estimate_size_before_relax): Clear\n+\textra opcode bytes when changing from a 2-byte to a 4-byte insn.\n+\n 2019-08-09  Jan Beulich  <jbeulich@suse.com>\n \n \t* testsuite/gas/i386/ilp32/x86-64-simd-intel.d,"
    },
    {
      "sha": "5429fa9fb5f7ee3b9deac6d3ae919839f2f3098f",
      "filename": "gas/config/tc-epiphany.c",
      "status": "modified",
      "additions": 22,
      "deletions": 17,
      "changes": 39,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/9bb9c115cd3d0b9de97e02cf2e861972010daa6f/gas/config/tc-epiphany.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/9bb9c115cd3d0b9de97e02cf2e861972010daa6f/gas/config/tc-epiphany.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gas/config/tc-epiphany.c?ref=9bb9c115cd3d0b9de97e02cf2e861972010daa6f",
      "patch": "@@ -727,6 +727,8 @@ md_estimate_size_before_relax (fragS *fragP, segT segment)\n \t handling to md_convert_frag.  */\n \n       EPIPHANY_RELAX_TYPES subtype;\n+      const CGEN_INSN *insn;\n+      int i;\n       /* We haven't relaxed this at all, so the relaxation type may be\n \t completely wrong.  Set the subtype correctly.  */\n       epiphany_relax_frag (segment, fragP, 0);\n@@ -753,26 +755,29 @@ md_estimate_size_before_relax (fragS *fragP, segT segment)\n \n       fragP->fr_subtype = subtype;\n \n-      {\n-\tconst CGEN_INSN *insn;\n-\tint i;\n-\n-\t/* Update the recorded insn.  */\n+      /* Update the recorded insn.  */\n+      for (i = 0, insn = fragP->fr_cgen.insn; i < 4; i++, insn++)\n+\t{\n+\t  if (strcmp (CGEN_INSN_MNEMONIC (insn),\n+\t\t      CGEN_INSN_MNEMONIC (fragP->fr_cgen.insn)) == 0\n+\t      && CGEN_INSN_ATTR_VALUE (insn, CGEN_INSN_RELAXED))\n+\t    break;\n+\t}\n \n-\tfor (i = 0, insn = fragP->fr_cgen.insn; i < 4; i++, insn++)\n-\t  {\n-\t    if ((strcmp (CGEN_INSN_MNEMONIC (insn),\n-\t\t\t CGEN_INSN_MNEMONIC (fragP->fr_cgen.insn))\n-\t\t == 0)\n-\t\t&& CGEN_INSN_ATTR_VALUE (insn, CGEN_INSN_RELAXED))\n-\t      break;\n-\t  }\n+      if (i == 4)\n+\tabort ();\n \n-\tif (i == 4)\n-\t  abort ();\n+      /* When changing from a 2-byte to 4-byte insn, don't leave\n+\t opcode bytes uninitialised.  */\n+      if (CGEN_INSN_BITSIZE (fragP->fr_cgen.insn) < CGEN_INSN_BITSIZE (insn))\n+\t{\n+\t  gas_assert (CGEN_INSN_BITSIZE (fragP->fr_cgen.insn) == 16);\n+\t  gas_assert (CGEN_INSN_BITSIZE (insn) == 32);\n+\t  fragP->fr_opcode[2] = 0;\n+\t  fragP->fr_opcode[3] = 0;\n+\t}\n \n-\tfragP->fr_cgen.insn = insn;\n-      }\n+      fragP->fr_cgen.insn = insn;\n     }\n \n   return md_relax_table[fragP->fr_subtype].rlx_length;"
    }
  ]
}