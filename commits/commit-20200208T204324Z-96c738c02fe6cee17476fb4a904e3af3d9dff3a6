{
  "sha": "96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTZjNzM4YzAyZmU2Y2VlMTc0NzZmYjRhOTA0ZTNhZjNkOWRmZjNhNg==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:40:54Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2020-02-08T20:43:24Z"
    },
    "message": "Move dwarf2_per_cu_data::imported_symtabs earlier\n\nThis moves dwarf2_per_cu_data::imported_symtabs earlier, near where\nthe other data members are located.\n\n2020-02-08  Tom Tromey  <tom@tromey.com>\n\n\t* dwarf2/read.h (struct dwarf2_per_cu_data) <imported_symtabs>:\n\tMove earlier.\n\nChange-Id: I314ddaa6f67c53a848e513b3f6d42913bd957833",
    "tree": {
      "sha": "1ecf904876fd5308f29a358480707be349f806ca",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/1ecf904876fd5308f29a358480707be349f806ca"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/96c738c02fe6cee17476fb4a904e3af3d9dff3a6/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8fdd972c3002e45458edc1b32ac880c137762cf7",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/8fdd972c3002e45458edc1b32ac880c137762cf7",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/8fdd972c3002e45458edc1b32ac880c137762cf7"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 31,
    "deletions": 26
  },
  "files": [
    {
      "sha": "17d7c954a71924b6a602d61e117f68370d2990c4",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c738c02fe6cee17476fb4a904e3af3d9dff3a6/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c738c02fe6cee17476fb4a904e3af3d9dff3a6/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
      "patch": "@@ -1,3 +1,8 @@\n+2020-02-08  Tom Tromey  <tom@tromey.com>\n+\n+\t* dwarf2/read.h (struct dwarf2_per_cu_data) <imported_symtabs>:\n+\tMove earlier.\n+\n 2020-02-08  Tom Tromey  <tom@tromey.com>\n \n \t* dwarf2/read.h (dwarf_line_debug): Declare."
    },
    {
      "sha": "f76937c83fa1a4d309746d3ed0065fd35ffa42fc",
      "filename": "gdb/dwarf2/read.h",
      "status": "modified",
      "additions": 26,
      "deletions": 26,
      "changes": 52,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/96c738c02fe6cee17476fb4a904e3af3d9dff3a6/gdb/dwarf2/read.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/96c738c02fe6cee17476fb4a904e3af3d9dff3a6/gdb/dwarf2/read.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/read.h?ref=96c738c02fe6cee17476fb4a904e3af3d9dff3a6",
      "patch": "@@ -338,6 +338,32 @@ struct dwarf2_per_cu_data\n     struct dwarf2_per_cu_quick_data *quick;\n   } v;\n \n+  /* The CUs we import using DW_TAG_imported_unit.  This is filled in\n+     while reading psymtabs, used to compute the psymtab dependencies,\n+     and then cleared.  Then it is filled in again while reading full\n+     symbols, and only deleted when the objfile is destroyed.\n+\n+     This is also used to work around a difference between the way gold\n+     generates .gdb_index version <=7 and the way gdb does.  Arguably this\n+     is a gold bug.  For symbols coming from TUs, gold records in the index\n+     the CU that includes the TU instead of the TU itself.  This breaks\n+     dw2_lookup_symbol: It assumes that if the index says symbol X lives\n+     in CU/TU Y, then one need only expand Y and a subsequent lookup in Y\n+     will find X.  Alas TUs live in their own symtab, so after expanding CU Y\n+     we need to look in TU Z to find X.  Fortunately, this is akin to\n+     DW_TAG_imported_unit, so we just use the same mechanism: For\n+     .gdb_index version <=7 this also records the TUs that the CU referred\n+     to.  Concurrently with this change gdb was modified to emit version 8\n+     indices so we only pay a price for gold generated indices.\n+     http://sourceware.org/bugzilla/show_bug.cgi?id=15021.\n+\n+     This currently needs to be a public member due to how\n+     dwarf2_per_cu_data is allocated and used.  Ideally in future things\n+     could be refactored to make this private.  Until then please try to\n+     avoid direct access to this member, and instead use the helper\n+     functions above.  */\n+  std::vector <dwarf2_per_cu_data *> *imported_symtabs;\n+\n   /* Return true of IMPORTED_SYMTABS is empty or not yet allocated.  */\n   bool imported_symtabs_empty () const\n   {\n@@ -368,32 +394,6 @@ struct dwarf2_per_cu_data\n     delete imported_symtabs;\n     imported_symtabs = nullptr;\n   }\n-\n-  /* The CUs we import using DW_TAG_imported_unit.  This is filled in\n-     while reading psymtabs, used to compute the psymtab dependencies,\n-     and then cleared.  Then it is filled in again while reading full\n-     symbols, and only deleted when the objfile is destroyed.\n-\n-     This is also used to work around a difference between the way gold\n-     generates .gdb_index version <=7 and the way gdb does.  Arguably this\n-     is a gold bug.  For symbols coming from TUs, gold records in the index\n-     the CU that includes the TU instead of the TU itself.  This breaks\n-     dw2_lookup_symbol: It assumes that if the index says symbol X lives\n-     in CU/TU Y, then one need only expand Y and a subsequent lookup in Y\n-     will find X.  Alas TUs live in their own symtab, so after expanding CU Y\n-     we need to look in TU Z to find X.  Fortunately, this is akin to\n-     DW_TAG_imported_unit, so we just use the same mechanism: For\n-     .gdb_index version <=7 this also records the TUs that the CU referred\n-     to.  Concurrently with this change gdb was modified to emit version 8\n-     indices so we only pay a price for gold generated indices.\n-     http://sourceware.org/bugzilla/show_bug.cgi?id=15021.\n-\n-     This currently needs to be a public member due to how\n-     dwarf2_per_cu_data is allocated and used.  Ideally in future things\n-     could be refactored to make this private.  Until then please try to\n-     avoid direct access to this member, and instead use the helper\n-     functions above.  */\n-  std::vector <dwarf2_per_cu_data *> *imported_symtabs;\n };\n \n /* Entry in the signatured_types hash table.  */"
    }
  ]
}