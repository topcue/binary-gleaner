{
  "sha": "27c1c4271a14cc2ebc27227212c19d4227ef212d",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6MjdjMWM0MjcxYTE0Y2MyZWJjMjcyMjcyMTJjMTlkNDIyN2VmMjEyZA==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-23T07:28:09Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2019-12-23T07:28:09Z"
    },
    "message": "ubsan: wasm: shift is too large for 64-bit type 'bfd_vma'\n\nbfd/\n\t* wasm-module.c (wasm_read_leb128): Don't allow oversize shifts.\n\tCatch value overflow.  Sign extend only on terminating byte.\nopcodes/\n\t* wasm32-dis.c (wasm_read_leb128): Don't allow oversize shifts.\n\tCatch value overflow.  Sign extend only on terminating byte.",
    "tree": {
      "sha": "348440ee0822b82ccffa82ac55d004af21b54e35",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/348440ee0822b82ccffa82ac55d004af21b54e35"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/27c1c4271a14cc2ebc27227212c19d4227ef212d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27c1c4271a14cc2ebc27227212c19d4227ef212d",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/27c1c4271a14cc2ebc27227212c19d4227ef212d",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/27c1c4271a14cc2ebc27227212c19d4227ef212d/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "09b0d8a75fa379eacf0d9d6b27320d025475b14d",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/09b0d8a75fa379eacf0d9d6b27320d025475b14d",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/09b0d8a75fa379eacf0d9d6b27320d025475b14d"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 43,
    "deletions": 19
  },
  "files": [
    {
      "sha": "8a2120ec2a2f4f06310549998caab25426b229b2",
      "filename": "bfd/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27c1c4271a14cc2ebc27227212c19d4227ef212d/bfd/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27c1c4271a14cc2ebc27227212c19d4227ef212d/bfd/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/ChangeLog?ref=27c1c4271a14cc2ebc27227212c19d4227ef212d",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* wasm-module.c (wasm_read_leb128): Don't allow oversize shifts.\n+\tCatch value overflow.  Sign extend only on terminating byte.\n+\n 2019-12-20  Alan Modra  <amodra@gmail.com>\n \n \t* xtensa-isa.c (xtensa_insnbuf_from_chars): Avoid signed overflow."
    },
    {
      "sha": "3fa2a87fb47b311cafd46e2fa370bca1771b284c",
      "filename": "bfd/wasm-module.c",
      "status": "modified",
      "additions": 15,
      "deletions": 8,
      "changes": 23,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27c1c4271a14cc2ebc27227212c19d4227ef212d/bfd/wasm-module.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27c1c4271a14cc2ebc27227212c19d4227ef212d/bfd/wasm-module.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/bfd/wasm-module.c?ref=27c1c4271a14cc2ebc27227212c19d4227ef212d",
      "patch": "@@ -111,29 +111,36 @@ wasm_read_leb128 (bfd *\t\t  abfd,\n   unsigned int num_read = 0;\n   unsigned int shift = 0;\n   unsigned char byte = 0;\n-  bfd_boolean success = FALSE;\n+  int status = 1;\n \n   while (bfd_bread (&byte, 1, abfd) == 1)\n     {\n       num_read++;\n \n-      result |= ((bfd_vma) (byte & 0x7f)) << shift;\n+      if (shift < sizeof (result) * 8)\n+\t{\n+\t  result |= ((bfd_vma) (byte & 0x7f)) << shift;\n+\t  if ((result >> shift) != (byte & 0x7f))\n+\t    /* Overflow.  */\n+\t    status |= 2;\n+\t  shift += 7;\n+\t}\n+      else if ((byte & 0x7f) != 0)\n+\tstatus |= 2;\n \n-      shift += 7;\n       if ((byte & 0x80) == 0)\n \t{\n-\t  success = TRUE;\n+\t  status &= ~1;\n+\t  if (sign && (shift < 8 * sizeof (result)) && (byte & 0x40))\n+\t    result |= -((bfd_vma) 1 << shift);\n \t  break;\n \t}\n     }\n \n   if (length_return != NULL)\n     *length_return = num_read;\n   if (error_return != NULL)\n-    *error_return = ! success;\n-\n-  if (sign && (shift < 8 * sizeof (result)) && (byte & 0x40))\n-    result |= -((bfd_vma) 1 << shift);\n+    *error_return = status != 0;\n \n   return result;\n }"
    },
    {
      "sha": "9315ddef7ad0476ec1ae2e0fbf5fb33a5afa56e0",
      "filename": "opcodes/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27c1c4271a14cc2ebc27227212c19d4227ef212d/opcodes/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27c1c4271a14cc2ebc27227212c19d4227ef212d/opcodes/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/ChangeLog?ref=27c1c4271a14cc2ebc27227212c19d4227ef212d",
      "patch": "@@ -1,3 +1,8 @@\n+2019-12-23  Alan Modra  <amodra@gmail.com>\n+\n+\t* wasm32-dis.c (wasm_read_leb128): Don't allow oversize shifts.\n+\tCatch value overflow.  Sign extend only on terminating byte.\n+\n 2019-12-20  Alan Modra  <amodra@gmail.com>\n \n \tPR 25281"
    },
    {
      "sha": "a885148c8bdd3686a2611fae291e84e7edbd7636",
      "filename": "opcodes/wasm32-dis.c",
      "status": "modified",
      "additions": 18,
      "deletions": 11,
      "changes": 29,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/27c1c4271a14cc2ebc27227212c19d4227ef212d/opcodes/wasm32-dis.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/27c1c4271a14cc2ebc27227212c19d4227ef212d/opcodes/wasm32-dis.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/opcodes/wasm32-dis.c?ref=27c1c4271a14cc2ebc27227212c19d4227ef212d",
      "patch": "@@ -192,29 +192,36 @@ wasm_read_leb128 (bfd_vma                   pc,\n   unsigned int num_read = 0;\n   unsigned int shift = 0;\n   unsigned char byte = 0;\n-  bfd_boolean success = FALSE;\n+  int status = 1;\n \n   while (info->read_memory_func (pc + num_read, &byte, 1, info) == 0)\n     {\n       num_read++;\n \n-      result |= ((bfd_vma) (byte & 0x7f)) << shift;\n+      if (shift < sizeof (result) * 8)\n+\t{\n+\t  result |= ((uint64_t) (byte & 0x7f)) << shift;\n+\t  if ((result >> shift) != (byte & 0x7f))\n+\t    /* Overflow.  */\n+\t    status |= 2;\n+\t  shift += 7;\n+\t}\n+      else if ((byte & 0x7f) != 0)\n+\tstatus |= 2;\n \n-      shift += 7;\n       if ((byte & 0x80) == 0)\n-        {\n-          success = TRUE;\n-          break;\n-        }\n+\t{\n+\t  status &= ~1;\n+\t  if (sign && (shift < 8 * sizeof (result)) && (byte & 0x40))\n+\t    result |= -((uint64_t) 1 << shift);\n+\t  break;\n+\t}\n     }\n \n   if (length_return != NULL)\n     *length_return = num_read;\n   if (error_return != NULL)\n-    *error_return = ! success;\n-\n-  if (sign && (shift < 8 * sizeof (result)) && (byte & 0x40))\n-    result |= -((uint64_t) 1 << shift);\n+    *error_return = status != 0;\n \n   return result;\n }"
    }
  ]
}