{
  "sha": "43771869e5021b6bdc02b6eaae103a33c05a821c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6NDM3NzE4NjllNTAyMWI2YmRjMDJiNmVhYWUxMDNhMzNjMDVhODIxYw==",
  "commit": {
    "author": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-08-22T09:07:00Z"
    },
    "committer": {
      "name": "Andrew Burgess",
      "email": "andrew.burgess@embecosm.com",
      "date": "2019-08-22T11:34:42Z"
    },
    "message": "gdb/fortran: Remove some dead code from the parser\n\nThe Fortran parser contains some code that looks like it was probably\ninherited from the C/C++ parser as it checks to see if the current\nlanguage is C++, which should never be true when we're in the Fortran\nparser.\n\ngdb/ChangeLog:\n\n\t* f-exp.y (yylex): Remove is_a_field_of_this local variable, and\n\tall uses as this was never set to anything but a zero value.",
    "tree": {
      "sha": "6837e1d9d469cc7375653d441040393591d2b625",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/6837e1d9d469cc7375653d441040393591d2b625"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/43771869e5021b6bdc02b6eaae103a33c05a821c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43771869e5021b6bdc02b6eaae103a33c05a821c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/43771869e5021b6bdc02b6eaae103a33c05a821c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/43771869e5021b6bdc02b6eaae103a33c05a821c/comments",
  "author": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "T-J-Teru",
    "id": 475372,
    "node_id": "MDQ6VXNlcjQ3NTM3Mg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/475372?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/T-J-Teru",
    "html_url": "https://github.com/T-J-Teru",
    "followers_url": "https://api.github.com/users/T-J-Teru/followers",
    "following_url": "https://api.github.com/users/T-J-Teru/following{/other_user}",
    "gists_url": "https://api.github.com/users/T-J-Teru/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/T-J-Teru/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/T-J-Teru/subscriptions",
    "organizations_url": "https://api.github.com/users/T-J-Teru/orgs",
    "repos_url": "https://api.github.com/users/T-J-Teru/repos",
    "events_url": "https://api.github.com/users/T-J-Teru/events{/privacy}",
    "received_events_url": "https://api.github.com/users/T-J-Teru/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "652afeef247770b22c44ca292d1f4c65be40a696",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/652afeef247770b22c44ca292d1f4c65be40a696",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/652afeef247770b22c44ca292d1f4c65be40a696"
    }
  ],
  "stats": {
    "total": 19,
    "additions": 8,
    "deletions": 11
  },
  "files": [
    {
      "sha": "b6d200d3d8e7607ddc125f409eb4c0cc8b0726f2",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43771869e5021b6bdc02b6eaae103a33c05a821c/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43771869e5021b6bdc02b6eaae103a33c05a821c/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=43771869e5021b6bdc02b6eaae103a33c05a821c",
      "patch": "@@ -1,3 +1,8 @@\n+2019-08-22  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* f-exp.y (yylex): Remove is_a_field_of_this local variable, and\n+\tall uses as this was never set to anything but a zero value.\n+\n 2019-08-21  Bogdan Harjoc  <harjoc@gmail.com>\n \n \t* cli/cli-cmds.c (with_command_1): Error out if no arguments."
    },
    {
      "sha": "9784ad57d822b63a4aac773c684a454f24d793c0",
      "filename": "gdb/f-exp.y",
      "status": "modified",
      "additions": 3,
      "deletions": 11,
      "changes": 14,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/43771869e5021b6bdc02b6eaae103a33c05a821c/gdb/f-exp.y",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/43771869e5021b6bdc02b6eaae103a33c05a821c/gdb/f-exp.y",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/f-exp.y?ref=43771869e5021b6bdc02b6eaae103a33c05a821c",
      "patch": "@@ -1275,7 +1275,6 @@ yylex (void)\n   {\n     std::string tmp = copy_name (yylval.sval);\n     struct block_symbol result;\n-    struct field_of_this_result is_a_field_of_this;\n     enum domain_enum_tag lookup_domains[] =\n     {\n       STRUCT_DOMAIN,\n@@ -1286,15 +1285,8 @@ yylex (void)\n \n     for (int i = 0; i < ARRAY_SIZE (lookup_domains); ++i)\n       {\n-\t/* Initialize this in case we *don't* use it in this call; that\n-\t   way we can refer to it unconditionally below.  */\n-\tmemset (&is_a_field_of_this, 0, sizeof (is_a_field_of_this));\n-\n \tresult = lookup_symbol (tmp.c_str (), pstate->expression_context_block,\n-\t\t\t\tlookup_domains[i],\n-\t\t\t\tpstate->language ()->la_language\n-\t\t\t\t== language_cplus\n-\t\t\t\t  ? &is_a_field_of_this : NULL);\n+\t\t\t\tlookup_domains[i], NULL);\n \tif (result.symbol && SYMBOL_CLASS (result.symbol) == LOC_TYPEDEF)\n \t  {\n \t    yylval.tsym.type = SYMBOL_TYPE (result.symbol);\n@@ -1323,14 +1315,14 @@ yylex (void)\n \tif (hextype == INT)\n \t  {\n \t    yylval.ssym.sym = result;\n-\t    yylval.ssym.is_a_field_of_this = is_a_field_of_this.type != NULL;\n+\t    yylval.ssym.is_a_field_of_this = false;\n \t    return NAME_OR_INT;\n \t  }\n       }\n     \n     /* Any other kind of symbol */\n     yylval.ssym.sym = result;\n-    yylval.ssym.is_a_field_of_this = is_a_field_of_this.type != NULL;\n+    yylval.ssym.is_a_field_of_this = false;\n     return NAME;\n   }\n }"
    }
  ]
}