{
  "sha": "2762d288534f48dc8653524b878883472037a57c",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6Mjc2MmQyODg1MzRmNDhkYzg2NTM1MjRiODc4ODgzNDcyMDM3YTU3Yw==",
  "commit": {
    "author": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-14T10:57:58Z"
    },
    "committer": {
      "name": "Tom de Vries",
      "email": "tdevries@suse.de",
      "date": "2021-09-14T10:57:58Z"
    },
    "message": "[gdb/symtab] Fix CU list in .debug_names for dummy CUs\n\nWith current trunk and target board cc-with-debug-names we have:\n...\n(gdb) file dw2-ranges-psym^M\nReading symbols from dw2-ranges-psym...^M\nwarning: Section .debug_names in dw2-ranges-psym has abbreviation_table of \\\n  size 1 vs. written as 28, ignoring .debug_names.^M\n(gdb) set complaints 0^M\n(gdb) FAIL: gdb.dwarf2/dw2-ranges-psym.exp: No complaints\n...\n\nThe executable has 8 compilation units:\n...\n$ readelf -wi dw2-ranges-psym | grep @\n  Compilation Unit @ offset 0x0:\n  Compilation Unit @ offset 0x2e:\n  Compilation Unit @ offset 0xa5:\n  Compilation Unit @ offset 0xc7:\n  Compilation Unit @ offset 0xd2:\n  Compilation Unit @ offset 0x145:\n  Compilation Unit @ offset 0x150:\n  Compilation Unit @ offset 0x308:\n...\nof which the ones at 0xc7 and 0x145 are dummy CUs (that is, they do not\ncontain a single DIE), which were added by recent commit 5ef670d81fd\n\"[gdb/testsuite] Add dummy start and end CUs in dwarf assembly\".\n\nThe .debug_names section contains this CU table:\n...\n[  0] 0x0\n[  1] 0x2e\n[  2] 0xa5\n[  3] 0xd2\n[  4] 0x150\n[  5] 0x308\n[  6] 0x1\n[  7] 0x0\n...\nThe last two entries are incorrect, and the entries for the dummy CUs are\nmissing.\n\nThe last two entries are incorrect because here in write_debug_names we write\nthe dimension of the CU list as 8:\n...\n  /* comp_unit_count - The number of CUs in the CU list.  */\n  header.append_uint (4, dwarf5_byte_order,\n                     per_objfile->per_bfd->all_comp_units.size ()\n                     - per_objfile->per_bfd->tu_stats.nr_tus);\n...\nwhile the actual dimension of the CU list is 6.\n\nThe discrepancy is caused by this code which skips the dummy CUs:\n...\n  for (int i = 0; i < per_objfile->per_bfd->all_comp_units.size (); ++i)\n    {\n      ...\n      /* CU of a shared file from 'dwz -m' may be unused by this main\n        file.  It may be referenced from a local scope but in such\n        case it does not need to be present in .debug_names.  */\n      if (psymtab == NULL)\n       continue;\n...\nbecause they have a null partial symtab.\n\nWe can fix this by writing the actual dimension of the CU list, but that still\nleaves the dummy CUs out of the CU list.  The purpose of having these is to\ndelimit the end of preceding CUs.\n\nSo, fix this by:\n- removing the code that skips the dummy CUs (note that the same change\n  was done for .gdb_index in commit efba5c2319d '[gdb/symtab] Handle PU\n  without import in \"save gdb-index\"'.\n- verifying that all units are represented in the CU/TU lists\n- using the actual CU list size when writing the dimension of the CU list\n  (and likewise for the TU list).\n\nTested on x86_64-linux with native and target board cc-with-debug-names.\n\nBug: https://sourceware.org/bugzilla/show_bug.cgi?id=28261",
    "tree": {
      "sha": "0eb3e70bc00bfab83636a10355b06e42b911eae2",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/0eb3e70bc00bfab83636a10355b06e42b911eae2"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/2762d288534f48dc8653524b878883472037a57c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2762d288534f48dc8653524b878883472037a57c",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/2762d288534f48dc8653524b878883472037a57c",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/2762d288534f48dc8653524b878883472037a57c/comments",
  "author": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vries",
    "id": 4057235,
    "node_id": "MDQ6VXNlcjQwNTcyMzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vries",
    "html_url": "https://github.com/vries",
    "followers_url": "https://api.github.com/users/vries/followers",
    "following_url": "https://api.github.com/users/vries/following{/other_user}",
    "gists_url": "https://api.github.com/users/vries/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vries/subscriptions",
    "organizations_url": "https://api.github.com/users/vries/orgs",
    "repos_url": "https://api.github.com/users/vries/repos",
    "events_url": "https://api.github.com/users/vries/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vries/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3859e65e23b0a00fa9b95f5735b9fb73f911f7ac",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3859e65e23b0a00fa9b95f5735b9fb73f911f7ac",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/3859e65e23b0a00fa9b95f5735b9fb73f911f7ac"
    }
  ],
  "stats": {
    "total": 20,
    "additions": 8,
    "deletions": 12
  },
  "files": [
    {
      "sha": "0318b7a81b23c5f05192f4f1c235d90710111a92",
      "filename": "gdb/dwarf2/index-write.c",
      "status": "modified",
      "additions": 8,
      "deletions": 12,
      "changes": 20,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/2762d288534f48dc8653524b878883472037a57c/gdb/dwarf2/index-write.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/2762d288534f48dc8653524b878883472037a57c/gdb/dwarf2/index-write.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/dwarf2/index-write.c?ref=2762d288534f48dc8653524b878883472037a57c",
      "patch": "@@ -1431,16 +1431,10 @@ write_debug_names (dwarf2_per_objfile *per_objfile,\n \t= per_objfile->per_bfd->all_comp_units[i].get ();\n       partial_symtab *psymtab = per_cu->v.psymtab;\n \n-      /* CU of a shared file from 'dwz -m' may be unused by this main\n-\t file.  It may be referenced from a local scope but in such\n-\t case it does not need to be present in .debug_names.  */\n-      if (psymtab == NULL)\n-\tcontinue;\n-\n       int &this_counter = per_cu->is_debug_types ? types_counter : counter;\n       data_buf &this_list = per_cu->is_debug_types ? types_cu_list : cu_list;\n \n-      if (psymtab->user == NULL)\n+      if (psymtab != nullptr && psymtab->user == nullptr)\n \tnametable.recursively_write_psymbols (objfile, psymtab, psyms_seen,\n \t\t\t\t\t      this_counter);\n \n@@ -1450,6 +1444,11 @@ write_debug_names (dwarf2_per_objfile *per_objfile,\n       ++this_counter;\n     }\n \n+   /* Verify that all units are represented.  */\n+  gdb_assert (counter == (per_objfile->per_bfd->all_comp_units.size ()\n+\t\t\t  - per_objfile->per_bfd->tu_stats.nr_tus));\n+  gdb_assert (types_counter == per_objfile->per_bfd->tu_stats.nr_tus);\n+\n   nametable.build ();\n \n   /* No addr_vec - DWARF-5 uses .debug_aranges generated by GCC.  */\n@@ -1484,14 +1483,11 @@ write_debug_names (dwarf2_per_objfile *per_objfile,\n   header.append_uint (2, dwarf5_byte_order, 0);\n \n   /* comp_unit_count - The number of CUs in the CU list.  */\n-  header.append_uint (4, dwarf5_byte_order,\n-\t\t      per_objfile->per_bfd->all_comp_units.size ()\n-\t\t      - per_objfile->per_bfd->tu_stats.nr_tus);\n+  header.append_uint (4, dwarf5_byte_order, counter);\n \n   /* local_type_unit_count - The number of TUs in the local TU\n      list.  */\n-  header.append_uint (4, dwarf5_byte_order,\n-\t\t      per_objfile->per_bfd->tu_stats.nr_tus);\n+  header.append_uint (4, dwarf5_byte_order, types_counter);\n \n   /* foreign_type_unit_count - The number of TUs in the foreign TU\n      list.  */"
    }
  ]
}