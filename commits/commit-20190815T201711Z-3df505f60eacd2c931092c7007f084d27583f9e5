{
  "sha": "3df505f60eacd2c931092c7007f084d27583f9e5",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6M2RmNTA1ZjYwZWFjZDJjOTMxMDkyYzcwMDdmMDg0ZDI3NTgzZjllNQ==",
  "commit": {
    "author": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-07-09T23:29:13Z"
    },
    "committer": {
      "name": "Tom Tromey",
      "email": "tom@tromey.com",
      "date": "2019-08-15T20:17:11Z"
    },
    "message": "TUI resize unification\n\nThe TUI currently has two different ways to resize a window: the\nresize method, and the methods make_invisible_and_set_new_height and\nmake_visible_with_new_height.\n\nThere's no deep reason to have two different ways to resize a window,\nso this patch unifies them, leaving just the \"resize\" method.\n\nThis also changes the locator to be handled more like an ordinary\nwindow and less like an adjunct of the associated source window.\n\ngdb/ChangeLog\n2019-08-15  Tom Tromey  <tom@tromey.com>\n\n\t* tui/tui-io.c (tui_puts_internal): Check TUI_CMD_WIN before\n\tcalling update_cmdwin_start_line.\n\t* tui/tui-winsource.h (struct tui_source_window_base)\n\t<do_make_visible_with_new_height, set_new_height>: Don't declare.\n\t<rerender>: Declare.\n\t* tui/tui-winsource.c (tui_source_window_base::update_tab_width):\n\tCall rerender.\n\t(tui_source_window_base::set_new_height): Remove.\n\t(tui_source_window_base::rerender): Rename from\n\tdo_make_visible_with_new_height.\n\t* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Use\n\tresize method.\n\t(tui_win_info::make_invisible_and_set_new_height)\n\t(tui_win_info::make_visible_with_new_height): Remove.\n\t* tui/tui-stack.h (struct tui_locator_window) <rerender>:\n\tDeclare.\n\t* tui/tui-stack.c (tui_locator_window::rerender): New method.\n\t* tui/tui-regs.h (struct tui_data_window) <set_new_height,\n\tdo_make_visible_with_new_height>: Don't declare.\n\t<rerender>: Declare.\n\t* tui/tui-regs.c (tui_data_window::rerender): Rename from\n\tset_new_height.\n\t(tui_data_window::do_make_visible_with_new_height): Remove.\n\t* tui/tui-layout.c (show_source_disasm_command, show_data): Don't\n\tcall tui_show_locator_content.\n\t(tui_gen_win_info::resize): Call rerender.\n\t(show_source_or_disasm_and_command): Don't call\n\ttui_show_locator_content.\n\t* tui/tui-data.h (struct tui_gen_win_info) <rerender>: New\n\tmethod.\n\t(struct tui_win_info) <rerender>: Declare.\n\t<set_new_height, make_invisible_and_set_new_height,\n\tmake_visible_with_new_height>: Don't declare.\n\t* tui/tui-data.c (tui_win_list::rerender): New method.\n\t* tui/tui-command.h (struct tui_cmd_window)\n\t<do_make_visible_with_new_height>: Don't declare.\n\t* tui/tui-command.c\n\t(tui_cmd_window::do_make_visible_with_new_height): Remove.\n\ngdb/testsuite/ChangeLog\n2019-08-15  Tom Tromey  <tom@tromey.com>\n\n\t* gdb.tui/empty.exp: Enable resizing tests.",
    "tree": {
      "sha": "46ba8a87a1473d10e92433f803684184ff378948",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/46ba8a87a1473d10e92433f803684184ff378948"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/3df505f60eacd2c931092c7007f084d27583f9e5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3df505f60eacd2c931092c7007f084d27583f9e5",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/3df505f60eacd2c931092c7007f084d27583f9e5",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/3df505f60eacd2c931092c7007f084d27583f9e5/comments",
  "author": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tromey",
    "id": 1557670,
    "node_id": "MDQ6VXNlcjE1NTc2NzA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1557670?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tromey",
    "html_url": "https://github.com/tromey",
    "followers_url": "https://api.github.com/users/tromey/followers",
    "following_url": "https://api.github.com/users/tromey/following{/other_user}",
    "gists_url": "https://api.github.com/users/tromey/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tromey/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tromey/subscriptions",
    "organizations_url": "https://api.github.com/users/tromey/orgs",
    "repos_url": "https://api.github.com/users/tromey/repos",
    "events_url": "https://api.github.com/users/tromey/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tromey/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "272560b577894c388a3d0d3fda8294683714f582",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/272560b577894c388a3d0d3fda8294683714f582",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/272560b577894c388a3d0d3fda8294683714f582"
    }
  ],
  "stats": {
    "total": 322,
    "additions": 139,
    "deletions": 183
  },
  "files": [
    {
      "sha": "8512e9e332e691155b3bc5d0a6517b352ca9de88",
      "filename": "gdb/ChangeLog",
      "status": "modified",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/ChangeLog?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -1,3 +1,44 @@\n+2019-08-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* tui/tui-io.c (tui_puts_internal): Check TUI_CMD_WIN before\n+\tcalling update_cmdwin_start_line.\n+\t* tui/tui-winsource.h (struct tui_source_window_base)\n+\t<do_make_visible_with_new_height, set_new_height>: Don't declare.\n+\t<rerender>: Declare.\n+\t* tui/tui-winsource.c (tui_source_window_base::update_tab_width):\n+\tCall rerender.\n+\t(tui_source_window_base::set_new_height): Remove.\n+\t(tui_source_window_base::rerender): Rename from\n+\tdo_make_visible_with_new_height.\n+\t* tui/tui-win.c (tui_resize_all, tui_adjust_win_heights): Use\n+\tresize method.\n+\t(tui_win_info::make_invisible_and_set_new_height)\n+\t(tui_win_info::make_visible_with_new_height): Remove.\n+\t* tui/tui-stack.h (struct tui_locator_window) <rerender>:\n+\tDeclare.\n+\t* tui/tui-stack.c (tui_locator_window::rerender): New method.\n+\t* tui/tui-regs.h (struct tui_data_window) <set_new_height,\n+\tdo_make_visible_with_new_height>: Don't declare.\n+\t<rerender>: Declare.\n+\t* tui/tui-regs.c (tui_data_window::rerender): Rename from\n+\tset_new_height.\n+\t(tui_data_window::do_make_visible_with_new_height): Remove.\n+\t* tui/tui-layout.c (show_source_disasm_command, show_data): Don't\n+\tcall tui_show_locator_content.\n+\t(tui_gen_win_info::resize): Call rerender.\n+\t(show_source_or_disasm_and_command): Don't call\n+\ttui_show_locator_content.\n+\t* tui/tui-data.h (struct tui_gen_win_info) <rerender>: New\n+\tmethod.\n+\t(struct tui_win_info) <rerender>: Declare.\n+\t<set_new_height, make_invisible_and_set_new_height,\n+\tmake_visible_with_new_height>: Don't declare.\n+\t* tui/tui-data.c (tui_win_list::rerender): New method.\n+\t* tui/tui-command.h (struct tui_cmd_window)\n+\t<do_make_visible_with_new_height>: Don't declare.\n+\t* tui/tui-command.c\n+\t(tui_cmd_window::do_make_visible_with_new_height): Remove.\n+\n 2019-08-15  Tom Tromey  <tromey@adacore.com>\n \n \t* ada-exp.y (convert_char_literal): Handle \"Q%c\" encoding."
    },
    {
      "sha": "294243a661758725c65326e61c5d53d1d3e06296",
      "filename": "gdb/testsuite/ChangeLog",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/testsuite/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/testsuite/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/ChangeLog?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -1,3 +1,7 @@\n+2019-08-15  Tom Tromey  <tom@tromey.com>\n+\n+\t* gdb.tui/empty.exp: Enable resizing tests.\n+\n 2019-08-15  Tom Tromey  <tromey@adacore.com>\n \n \t* gdb.ada/char_enum.exp: Add regression tests."
    },
    {
      "sha": "8c504562803d3b1929fa7393fa5cb6923e92e0d0",
      "filename": "gdb/testsuite/gdb.tui/empty.exp",
      "status": "modified",
      "additions": 8,
      "deletions": 10,
      "changes": 18,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/testsuite/gdb.tui/empty.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/testsuite/gdb.tui/empty.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/testsuite/gdb.tui/empty.exp?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -39,14 +39,14 @@ set layouts {\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n \t}}\n-    {asm asm {{3 0 77 15}} {{3 0 87 24}}\n+    {asm asm {{3 0 77 15}} {{3 0 87 23}}\n \t{\"no asm\" \"No Assembly Available\"}}\n     {regs asm-regs {{0 0 80 8} {3 7 77 9}} {{0 0 90 13} {3 13 87 14}}\n \t{\n \t    {\"no asm\" \"No Assembly Available\"}\n \t    {\"no regs\" \"Register Values Unavailable\"}\n \t}}\n-    {split split {{3 0 77 8} {3 7 77 9}} {{3 0 87 14} {3 14 87 14}}\n+    {split split {{3 0 77 8} {3 7 77 9}} {{3 0 87 13} {3 13 87 14}}\n \t{\n \t    {\"no source\" \"No Source Available\"}\n \t    {\"no asm\" \"No Assembly Available\"}\n@@ -91,13 +91,11 @@ foreach layout $layouts {\n \t    check_text $text_list\n \t}\n \n-\t# FIXME: resizing is broken enough that we don't test it for\n-\t# now.\n-\t# Term::resize 40 90\n-\t# with_test_prefix 90x40 {\n-\t#     check_boxes $large_boxes\n-\t#     check_text $text_list\n-\t# }\n-\t# Term::resize 24 80\n+\tTerm::resize 40 90\n+\twith_test_prefix 90x40 {\n+\t    check_boxes $large_boxes\n+\t    check_text $text_list\n+\t}\n+\tTerm::resize 24 80\n     }\n }"
    },
    {
      "sha": "f2040a75417ff67cfda9c8e3ece82efa12bab0c3",
      "filename": "gdb/tui/tui-command.c",
      "status": "modified",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-command.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-command.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -31,18 +31,6 @@\n \n /* See tui-command.h.  */\n \n-void\n-tui_cmd_window::do_make_visible_with_new_height ()\n-{\n-#ifdef HAVE_WRESIZE\n-  wresize (handle, height, width);\n-#endif\n-  mvwin (handle, origin.y, origin.x);\n-  wmove (handle, 0, 0);\n-}\n-\n-/* See tui-command.h.  */\n-\n int\n tui_cmd_window::max_height () const\n {"
    },
    {
      "sha": "79516941c9885a1ac4b92f8186e377d945baf382",
      "filename": "gdb/tui/tui-command.h",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-command.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-command.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-command.h?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -74,8 +74,6 @@ struct tui_cmd_window : public tui_win_info\n   void do_scroll_horizontal (int num_to_scroll) override\n   {\n   }\n-\n-  void do_make_visible_with_new_height () override;\n };\n \n /* Refresh the command window.  */"
    },
    {
      "sha": "dc2c810b0c16e5b5db34d3004b94aa4f29617dce",
      "filename": "gdb/tui/tui-data.c",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-data.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-data.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -245,3 +245,9 @@ tui_gen_win_info::~tui_gen_win_info ()\n   tui_delete_win (handle);\n   xfree (title);\n }\n+\n+void\n+tui_win_info::rerender ()\n+{\n+  check_and_display_highlight_if_needed ();\n+}"
    },
    {
      "sha": "6c7ab056b485ee0ac5c8fab41ec2564403904b6c",
      "filename": "gdb/tui/tui-data.h",
      "status": "modified",
      "additions": 7,
      "deletions": 17,
      "changes": 24,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-data.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-data.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-data.h?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -46,6 +46,12 @@ struct tui_gen_win_info\n   {\n   }\n \n+  /* This is called after the window is resized, and should update the\n+     window's contents.  */\n+  virtual void rerender ()\n+  {\n+  }\n+\n public:\n \n   virtual ~tui_gen_win_info ();\n@@ -164,9 +170,7 @@ struct tui_win_info : public tui_gen_win_info\n      left_scroll and right_scroll.  */\n   virtual void do_scroll_horizontal (int num_to_scroll) = 0;\n \n-  /* Called after make_visible_with_new_height sets the new height.\n-     Should update the window.  */\n-  virtual void do_make_visible_with_new_height () = 0;\n+  void rerender () override;\n \n public:\n \n@@ -180,12 +184,6 @@ struct tui_win_info : public tui_gen_win_info\n   {\n   }\n \n-  /* Called after a TUI window is given a new height; this updates any\n-     related auxiliary windows.  */\n-  virtual void set_new_height (int height)\n-  {\n-  }\n-\n   /* Compute the maximum height of this window.  */\n   virtual int max_height () const;\n \n@@ -194,14 +192,6 @@ struct tui_win_info : public tui_gen_win_info\n   {\n   }\n \n-  /* Function make the target window (and auxiliary windows associated\n-     with the target) invisible, and set the new height and\n-     location.  */\n-  void make_invisible_and_set_new_height (int height);\n-\n-  /* Make the window visible after the height has been changed.  */\n-  void make_visible_with_new_height ();\n-\n   /* Set whether this window is highglighted.  */\n   void set_highlight (bool highlight)\n   {"
    },
    {
      "sha": "7bdba3f64ffd2c20d808f880427888ead4e62c95",
      "filename": "gdb/tui/tui-io.c",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-io.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-io.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-io.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -495,7 +495,8 @@ tui_puts_internal (WINDOW *w, const char *string, int *height)\n \t    }\n \t}\n     }\n-  update_cmdwin_start_line ();\n+  if (TUI_CMD_WIN != nullptr && w == TUI_CMD_WIN->handle)\n+    update_cmdwin_start_line ();\n   if (saw_nl)\n     wrefresh (w);\n }"
    },
    {
      "sha": "d81b8f9aa40b3b1dd107ace4920fa124f26e381a",
      "filename": "gdb/tui/tui-layout.c",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-layout.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-layout.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-layout.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -522,7 +522,6 @@ show_source_disasm_command (void)\n \t\t   (src_height + asm_height) - 1);\n   TUI_SRC_WIN->m_has_locator = false;\n   TUI_DISASM_WIN->m_has_locator = true;\n-  tui_show_locator_content ();\n   TUI_DISASM_WIN->show_source_content ();\n \n   if (TUI_CMD_WIN == NULL)\n@@ -580,7 +579,6 @@ show_data (enum tui_layout_type new_layout)\n \t\t       0, total_height);\n \n   base->m_has_locator = true;\n-  tui_show_locator_content ();\n   current_layout = new_layout;\n }\n \n@@ -611,6 +609,8 @@ tui_gen_win_info::resize (int height_, int width_,\n \n   if (handle == nullptr)\n     tui_make_window (this);\n+\n+  rerender ();\n }\n \n /* Show the Source/Command or the Disassem layout.  */\n@@ -651,7 +651,6 @@ show_source_or_disasm_and_command (enum tui_layout_type layout_type)\n \t\t    0);\n \n   win_info->m_has_locator = true;\n-  tui_show_locator_content ();\n   win_info->show_source_content ();\n \n   if (TUI_CMD_WIN == NULL)"
    },
    {
      "sha": "89faefa8f60fcd45f34b06ebbcbaf713f7d80163",
      "filename": "gdb/tui/tui-regs.c",
      "status": "modified",
      "additions": 1,
      "deletions": 8,
      "changes": 9,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-regs.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-regs.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -521,21 +521,14 @@ tui_data_window::do_scroll_vertical (int num_to_scroll)\n /* See tui-regs.h.  */\n \n void\n-tui_data_window::set_new_height (int height)\n+tui_data_window::rerender ()\n {\n   /* Delete all data item windows.  */\n   for (auto &&win : regs_content)\n     {\n       tui_delete_win (win->handle);\n       win->handle = NULL;\n     }\n-}\n-\n-/* See tui-regs.h.  */\n-\n-void\n-tui_data_window::do_make_visible_with_new_height ()\n-{\n   display_all_data ();\n }\n "
    },
    {
      "sha": "7b0bb505a8e499c29cc0a1c2f6dfa8a368a97e0b",
      "filename": "gdb/tui/tui-regs.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-regs.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-regs.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-regs.h?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -55,8 +55,6 @@ struct tui_data_window : public tui_win_info\n \n   void refresh_all () override;\n \n-  void set_new_height (int height) override;\n-\n   void refresh_window () override;\n \n   const char *name () const override\n@@ -111,7 +109,6 @@ struct tui_data_window : public tui_win_info\n   void do_scroll_horizontal (int num_to_scroll) override\n   {\n   }\n-  void do_make_visible_with_new_height () override;\n \n   /* Return the index of the first element displayed.  If none are\n      displayed, then return -1.  */\n@@ -122,6 +119,8 @@ struct tui_data_window : public tui_win_info\n      of the display height.  This function checks that we won't\n      display off the end of the register display.  */\n   void display_reg_element_at_line (int start_element_no, int start_line_no);\n+\n+  void rerender () override;\n };\n \n extern void tui_check_register_values (struct frame_info *);"
    },
    {
      "sha": "001133c7b5e69e89dd60b405967dccc929baa486",
      "filename": "gdb/tui/tui-stack.c",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-stack.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-stack.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -277,6 +277,11 @@ tui_show_locator_content (void)\n     }\n }\n \n+void\n+tui_locator_window::rerender ()\n+{\n+  tui_show_locator_content ();\n+}\n \n /* Set the filename portion of the locator.  */\n static void"
    },
    {
      "sha": "951cf2c407b476bea3c41a4075a4de3d3cda8078",
      "filename": "gdb/tui/tui-stack.h",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-stack.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-stack.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-stack.h?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -43,6 +43,8 @@ struct tui_locator_window : public tui_gen_win_info\n     proc_name[0] = 0;\n   }\n \n+  void rerender () override;\n+\n   char full_name[MAX_LOCATOR_ELEMENT_LEN];\n   char proc_name[MAX_LOCATOR_ELEMENT_LEN];\n   int line_no = 0;"
    },
    {
      "sha": "872e002b6cb98d6868c540f2a2eaf285a95d7d41",
      "filename": "gdb/tui/tui-win.c",
      "status": "modified",
      "additions": 52,
      "deletions": 87,
      "changes": 139,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-win.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-win.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-win.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -38,6 +38,7 @@\n #include \"tui/tui-io.h\"\n #include \"tui/tui-command.h\"\n #include \"tui/tui-data.h\"\n+#include \"tui/tui-layout.h\"\n #include \"tui/tui-wingeneral.h\"\n #include \"tui/tui-stack.h\"\n #include \"tui/tui-regs.h\"\n@@ -572,47 +573,38 @@ tui_resize_all (void)\n \tcase SRC_COMMAND:\n \tcase DISASSEM_COMMAND:\n \t  src_win = *(tui_source_windows ().begin ());\n-\t  first_win = src_win;\n-\t  first_win->width += width_diff;\n-\t  locator->width += width_diff;\n \t  /* Check for invalid heights.  */\n \t  if (height_diff == 0)\n-\t    new_height = first_win->height;\n-\t  else if ((first_win->height + split_diff) >=\n+\t    new_height = src_win->height;\n+\t  else if ((src_win->height + split_diff) >=\n \t\t   (screenheight - MIN_CMD_WIN_HEIGHT - 1))\n \t    new_height = screenheight - MIN_CMD_WIN_HEIGHT - 1;\n-\t  else if ((first_win->height + split_diff) <= 0)\n+\t  else if ((src_win->height + split_diff) <= 0)\n \t    new_height = MIN_WIN_HEIGHT;\n \t  else\n-\t    new_height = first_win->height + split_diff;\n+\t    new_height = src_win->height + split_diff;\n+\n+\t  src_win->resize (new_height, screenwidth, 0, 0);\n \n-\t  locator->origin.y = new_height + 1;\n-\t  first_win->make_invisible_and_set_new_height (new_height);\n-\t  TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n-\t  TUI_CMD_WIN->width += width_diff;\n-\t  new_height = screenheight - TUI_CMD_WIN->origin.y;\n-\t  TUI_CMD_WIN->make_invisible_and_set_new_height (new_height);\n-\t  first_win->make_visible_with_new_height ();\n-\t  TUI_CMD_WIN->make_visible_with_new_height ();\n-\t  if (src_win->content.empty ())\n-\t    src_win->erase_source_content ();\n+\t  locator->resize (2 /* 1 */, screenwidth,\n+\t\t\t   0, new_height);\n+\n+\t  new_height = screenheight - (new_height + 1);\n+\t  TUI_CMD_WIN->resize (new_height, screenwidth,\n+\t\t\t       0, locator->origin.y + 1);\n \t  break;\n \tdefault:\n \t  if (cur_layout == SRC_DISASSEM_COMMAND)\n \t    {\n \t      src_win = TUI_SRC_WIN;\n \t      first_win = src_win;\n-\t      first_win->width += width_diff;\n \t      second_win = TUI_DISASM_WIN;\n-\t      second_win->width += width_diff;\n \t    }\n \t  else\n \t    {\n \t      first_win = TUI_DATA_WIN;\n-\t      first_win->width += width_diff;\n \t      src_win = *(tui_source_windows ().begin ());\n \t      second_win = src_win;\n-\t      second_win->width += width_diff;\n \t    }\n \t  /* Change the first window's height/width.  */\n \t  /* Check for invalid heights.  */\n@@ -626,9 +618,8 @@ tui_resize_all (void)\n \t    new_height = MIN_WIN_HEIGHT;\n \t  else\n \t    new_height = first_win->height + split_diff;\n-\t  first_win->make_invisible_and_set_new_height (new_height);\n \n-\t  locator->width += width_diff;\n+\t  first_win->resize (new_height, screenwidth, 0, 0);\n \n \t  /* Change the second window's height/width.  */\n \t  /* Check for invalid heights.  */\n@@ -648,18 +639,17 @@ tui_resize_all (void)\n \t    new_height = MIN_WIN_HEIGHT;\n \t  else\n \t    new_height = second_win->height + split_diff;\n-\t  second_win->origin.y = first_win->height - 1;\n-\t  second_win->make_invisible_and_set_new_height (new_height);\n+\n+\t  second_win->resize (new_height, screenwidth,\n+\t\t\t      0, first_win->height - 1);\n+\n+\t  locator->resize (2 /* 1 */, screenwidth,\n+\t\t\t   0, second_win->origin.y + new_height);\n \n \t  /* Change the command window's height/width.  */\n-\t  TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n-\t  TUI_CMD_WIN->make_invisible_and_set_new_height (TUI_CMD_WIN->height\n-\t\t\t\t\t\t\t  + cmd_split_diff);\n-\t  first_win->make_visible_with_new_height ();\n-\t  second_win->make_visible_with_new_height ();\n-\t  TUI_CMD_WIN->make_visible_with_new_height ();\n-\t  if (src_win->content.empty ())\n-\t    src_win->erase_source_content ();\n+\t  new_height = screenheight - (locator->origin.y + 1);\n+\t  TUI_CMD_WIN->resize (new_height, screenwidth,\n+\t\t\t       0, locator->origin.y + 1);\n \t  break;\n \t}\n \n@@ -1036,14 +1026,16 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t  struct tui_win_info *win_info;\n \t  struct tui_locator_window *locator = tui_locator_win_info_ptr ();\n \t  enum tui_layout_type cur_layout = tui_current_layout ();\n+\t  int width = tui_term_width ();\n \n \t  diff = (new_height - primary_win_info->height) * (-1);\n \t  if (cur_layout == SRC_COMMAND \n \t      || cur_layout == DISASSEM_COMMAND)\n \t    {\n \t      struct tui_win_info *src_win_info;\n \n-\t      primary_win_info->make_invisible_and_set_new_height (new_height);\n+\t      primary_win_info->resize (new_height, width,\n+\t\t\t\t\t0, primary_win_info->origin.y);\n \t      if (primary_win_info->type == CMD_WIN)\n \t\t{\n \t\t  win_info = *(tui_source_windows ().begin ());\n@@ -1054,11 +1046,9 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t  win_info = tui_win_list[CMD_WIN];\n \t\t  src_win_info = primary_win_info;\n \t\t}\n-\t      win_info->make_invisible_and_set_new_height\n-\t\t(win_info->height + diff);\n+\t      win_info->resize (win_info->height + diff, width,\n+\t\t\t\t0, win_info->origin.y);\n \t      TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n-\t      win_info->make_visible_with_new_height ();\n-\t      primary_win_info->make_visible_with_new_height ();\n \t      if ((src_win_info->type == SRC_WIN\n \t\t   || src_win_info->type == DISASSEM_WIN))\n \t\t{\n@@ -1121,13 +1111,18 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t      second_split_diff++;\n \t\t      first_split_diff--;\n \t\t    }\n-\t\t  first_win->make_invisible_and_set_new_height\n-\t\t    (first_win->height + first_split_diff);\n-\t\t  second_win->origin.y = first_win->height - 1;\n-\t\t  second_win->make_invisible_and_set_new_height\n-\t\t    (second_win->height + second_split_diff);\n-\t\t  TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n-\t\t  TUI_CMD_WIN->make_invisible_and_set_new_height (new_height);\n+\t\t  first_win->resize (first_win->height + first_split_diff,\n+\t\t\t\t     width,\n+\t\t\t\t     0, first_win->origin.y);\n+\t\t  second_win->resize (second_win->height + second_split_diff,\n+\t\t\t\t      width,\n+\t\t\t\t      0, first_win->height - 1);\n+\t\t  locator->resize (2 /* 1 */, width,\n+\t\t\t\t   0, (second_win->origin.y\n+\t\t\t\t       + second_win->height + 1));\n+\n+\t\t  TUI_CMD_WIN->resize (new_height, width,\n+\t\t\t\t       0, locator->origin.y + 1);\n \t\t}\n \t      else\n \t\t{\n@@ -1148,26 +1143,26 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n \t\t\t}\n \t\t    }\n \t\t  if (primary_win_info == first_win)\n-\t\t    first_win->make_invisible_and_set_new_height (new_height);\n+\t\t    first_win->resize (new_height, width, 0, 0);\n \t\t  else\n-\t\t    first_win->make_invisible_and_set_new_height\n-\t\t      (first_win->height);\n+\t\t    first_win->resize (first_win->height, width, 0, 0);\n \t\t  second_win->origin.y = first_win->height - 1;\n \t\t  if (primary_win_info == second_win)\n-\t\t    second_win->make_invisible_and_set_new_height (new_height);\n+\t\t    second_win->resize (new_height, width,\n+\t\t\t\t\t0, first_win->height - 1);\n \t\t  else\n-\t\t    second_win->make_invisible_and_set_new_height\n-\t\t      (second_win->height);\n+\t\t    second_win->resize (second_win->height, width,\n+\t\t\t\t\t0, first_win->height - 1);\n+\t\t  locator->resize (2 /* 1 */, width,\n+\t\t\t\t   0, (second_win->origin.y\n+\t\t\t\t       + second_win->height + 1));\n \t\t  TUI_CMD_WIN->origin.y = locator->origin.y + 1;\n \t\t  if ((TUI_CMD_WIN->height + diff) < 1)\n-\t\t    TUI_CMD_WIN->make_invisible_and_set_new_height (1);\n+\t\t    TUI_CMD_WIN->resize (1, width, 0, locator->origin.y + 1);\n \t\t  else\n-\t\t    TUI_CMD_WIN->make_invisible_and_set_new_height\n-\t\t      (TUI_CMD_WIN->height + diff);\n+\t\t    TUI_CMD_WIN->resize (TUI_CMD_WIN->height + diff, width,\n+\t\t\t\t\t 0, locator->origin.y + 1);\n \t\t}\n-\t      TUI_CMD_WIN->make_visible_with_new_height ();\n-\t      second_win->make_visible_with_new_height ();\n-\t      first_win->make_visible_with_new_height ();\n \t      if (src1 != nullptr && src1->content.empty ())\n \t\tsrc1->erase_source_content ();\n \t      if (second_win->content.empty ())\n@@ -1179,36 +1174,6 @@ tui_adjust_win_heights (struct tui_win_info *primary_win_info,\n   return status;\n }\n \n-\n-/* See tui-data.h.  */\n-\n-void\n-tui_win_info::make_invisible_and_set_new_height (int height_)\n-{\n-  make_visible (false);\n-  height = height_;\n-  if (height > 1)\n-    viewport_height = height - 1;\n-  else\n-    viewport_height = height;\n-  if (this != TUI_CMD_WIN)\n-    viewport_height--;\n-\n-  /* Now deal with the auxiliary windows associated with win_info.  */\n-  set_new_height (height);\n-}\n-\n-\n-/* See tui-data.h.  */\n-\n-void\n-tui_win_info::make_visible_with_new_height ()\n-{\n-  make_visible (true);\n-  check_and_display_highlight_if_needed ();\n-  do_make_visible_with_new_height ();\n-}\n-\n /* See tui-data.h.  */\n \n int"
    },
    {
      "sha": "b6ce652d09d77b8b36f96acf0f03c83d43bf294c",
      "filename": "gdb/tui/tui-winsource.c",
      "status": "modified",
      "additions": 5,
      "deletions": 37,
      "changes": 42,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-winsource.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-winsource.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.c?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -315,42 +315,13 @@ tui_source_window_base::refresh_all ()\n void\n tui_source_window_base::update_tab_width ()\n {\n-  /* We don't really change the height of any windows, but\n-     calling these 2 functions causes a complete regeneration\n-     and redisplay of the window's contents, which will take\n-     the new tab width into account.  */\n-  make_invisible_and_set_new_height (height);\n-  make_visible_with_new_height ();\n+  werase (handle);\n+  rerender ();\n }\n \n-/* See tui-data.h.  */\n-\n-void\n-tui_source_window_base::set_new_height (int height)\n-{\n-  execution_info->make_visible (false);\n-  execution_info->height = height;\n-  execution_info->origin.y = origin.y;\n-  if (height > 1)\n-    execution_info->viewport_height = height - 1;\n-  else\n-    execution_info->viewport_height = height;\n-  execution_info->viewport_height--;\n-\n-  if (m_has_locator)\n-    {\n-      tui_locator_window *gen_win_info = tui_locator_win_info_ptr ();\n-      gen_win_info->make_visible (false);\n-      gen_win_info->origin.y = origin.y + height;\n-    }\n-}\n-\n-/* See tui-data.h.  */\n-\n void\n-tui_source_window_base::do_make_visible_with_new_height ()\n+tui_source_window_base::rerender ()\n {\n-  execution_info->make_visible (true);\n   if (!content.empty ())\n     {\n       struct tui_line_or_address line_or_addr;\n@@ -382,11 +353,8 @@ tui_source_window_base::do_make_visible_with_new_height ()\n \t}\n       tui_update_source_window (this, gdbarch, s, line, TRUE);\n     }\n-  if (m_has_locator)\n-    {\n-      tui_locator_win_info_ptr ()->make_visible (true);\n-      tui_show_locator_content ();\n-    }\n+  else\n+    erase_source_content ();\n }\n \n /* See tui-data.h.  */"
    },
    {
      "sha": "7304e726a765b2a4d8ff8d53646a48aea20408e4",
      "filename": "gdb/tui/tui-winsource.h",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-winsource.h",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/3df505f60eacd2c931092c7007f084d27583f9e5/gdb/tui/tui-winsource.h",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/gdb/tui/tui-winsource.h?ref=3df505f60eacd2c931092c7007f084d27583f9e5",
      "patch": "@@ -98,11 +98,12 @@ struct tui_source_window_base : public tui_win_info\n   DISABLE_COPY_AND_ASSIGN (tui_source_window_base);\n \n   void do_scroll_horizontal (int num_to_scroll) override;\n-  void do_make_visible_with_new_height () override;\n \n   /* Erase the content and display STRING.  */\n   void do_erase_source_content (const char *string);\n \n+  void rerender () override;\n+\n public:\n \n   void clear_detail ();\n@@ -118,8 +119,6 @@ struct tui_source_window_base : public tui_win_info\n   /* Set the location of the execution point.  */\n   void set_is_exec_point_at (struct tui_line_or_address l);\n \n-  void set_new_height (int height) override;\n-\n   void update_tab_width () override;\n \n   virtual bool location_matches_p (struct bp_location *loc, int line_no) = 0;"
    }
  ]
}