{
  "sha": "985e026451640c880e13827454aa31b7a636d1bc",
  "node_id": "MDY6Q29tbWl0MTM4Njg2ODE6OTg1ZTAyNjQ1MTY0MGM4ODBlMTM4Mjc0NTRhYTMxYjdhNjM2ZDFiYw==",
  "commit": {
    "author": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-14T15:06:42Z"
    },
    "committer": {
      "name": "Alan Modra",
      "email": "amodra@gmail.com",
      "date": "2021-04-15T08:21:17Z"
    },
    "message": "PR27725, better objcopy -p times\n\nNanosecond rather than second resolution.\n\n\tPR 27725\n\t* configure.ac: Check for sys/time.h and utimensat.  Use standard\n\tchecks for mkstemp and mkdtemp.  Whitespace.  Check for nanosecond\n\tmembers of struct stat.\n\t* rename.c: Prefer sys/time.h for utimes over utime.h for utime.\n\t(STAT_TIMESPEC, STAT_TIMESPEC_NS): Define\n\t(get_stat_atime_ns, get_stat_mtime_ns): New inline functions.\n\t(get_stat_atime, get_stat_mtime): Likewise.\n\t(set_times): Choose first available of utimensat, utimes, utime.\n\tUse above inline functions to set timespec and timeval values.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Add test of\n\tfile timestamp when --preserve-dates is used.",
    "tree": {
      "sha": "2a034beb448ef79b8b57e9d207f2e0722e38cda5",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/git/trees/2a034beb448ef79b8b57e9d207f2e0722e38cda5"
    },
    "url": "https://api.github.com/repos/bminor/binutils-gdb/git/commits/985e026451640c880e13827454aa31b7a636d1bc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/985e026451640c880e13827454aa31b7a636d1bc",
  "html_url": "https://github.com/bminor/binutils-gdb/commit/985e026451640c880e13827454aa31b7a636d1bc",
  "comments_url": "https://api.github.com/repos/bminor/binutils-gdb/commits/985e026451640c880e13827454aa31b7a636d1bc/comments",
  "author": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "amodra",
    "id": 6006325,
    "node_id": "MDQ6VXNlcjYwMDYzMjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amodra",
    "html_url": "https://github.com/amodra",
    "followers_url": "https://api.github.com/users/amodra/followers",
    "following_url": "https://api.github.com/users/amodra/following{/other_user}",
    "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amodra/subscriptions",
    "organizations_url": "https://api.github.com/users/amodra/orgs",
    "repos_url": "https://api.github.com/users/amodra/repos",
    "events_url": "https://api.github.com/users/amodra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amodra/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d0ecdcddc363ad7f05fc50cf1eee4028fa7f8964",
      "url": "https://api.github.com/repos/bminor/binutils-gdb/commits/d0ecdcddc363ad7f05fc50cf1eee4028fa7f8964",
      "html_url": "https://github.com/bminor/binutils-gdb/commit/d0ecdcddc363ad7f05fc50cf1eee4028fa7f8964"
    }
  ],
  "stats": {
    "total": 396,
    "additions": 347,
    "deletions": 49
  },
  "files": [
    {
      "sha": "212c35327ba73627ea4bf091cad7ff8d1067a437",
      "filename": "binutils/ChangeLog",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/ChangeLog",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/ChangeLog",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/ChangeLog?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -1,3 +1,20 @@\n+2021-04-15  Alan Modra  <amodra@gmail.com>\n+\n+\tPR 27725\n+\t* configure.ac: Check for sys/time.h and utimensat.  Use standard\n+\tchecks for mkstemp and mkdtemp.  Whitespace.  Check for nanosecond\n+\tmembers of struct stat.\n+\t* rename.c: Prefer sys/time.h for utimes over utime.h for utime.\n+\t(STAT_TIMESPEC, STAT_TIMESPEC_NS): Define\n+\t(get_stat_atime_ns, get_stat_mtime_ns): New inline functions.\n+\t(get_stat_atime, get_stat_mtime): Likewise.\n+\t(set_times): Choose first available of utimensat, utimes, utime.\n+\tUse above inline functions to set timespec and timeval values.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* testsuite/binutils-all/objcopy.exp (objcopy_test): Add test of\n+\tfile timestamp when --preserve-dates is used.\n+\n 2021-04-15  Alan Modra  <amodra@gmail.com>\n \n \tPR 27456"
    },
    {
      "sha": "e79967c5c14c8311dfc2d9a74c7a70c063173c52",
      "filename": "binutils/config.in",
      "status": "modified",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/config.in",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/config.in",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/config.in?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -115,6 +115,18 @@\n /* Define to 1 if you have the <string.h> header file. */\n #undef HAVE_STRING_H\n \n+/* Define to 1 if `st_atimensec' is a member of `struct stat'. */\n+#undef HAVE_STRUCT_STAT_ST_ATIMENSEC\n+\n+/* Define to 1 if `st_atimespec.tv_nsec' is a member of `struct stat'. */\n+#undef HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC\n+\n+/* Define to 1 if `st_atim.st__tim.tv_nsec' is a member of `struct stat'. */\n+#undef HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC\n+\n+/* Define to 1 if `st_atim.tv_nsec' is a member of `struct stat'. */\n+#undef HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC\n+\n /* Define to 1 if you have the <sys/file.h> header file. */\n #undef HAVE_SYS_FILE_H\n \n@@ -124,6 +136,9 @@\n /* Define to 1 if you have the <sys/stat.h> header file. */\n #undef HAVE_SYS_STAT_H\n \n+/* Define to 1 if you have the <sys/time.h> header file. */\n+#undef HAVE_SYS_TIME_H\n+\n /* Define to 1 if you have the <sys/types.h> header file. */\n #undef HAVE_SYS_TYPES_H\n \n@@ -133,6 +148,9 @@\n /* Define to 1 if you have the <unistd.h> header file. */\n #undef HAVE_UNISTD_H\n \n+/* Define to 1 if you have the `utimensat' function. */\n+#undef HAVE_UTIMENSAT\n+\n /* Define to 1 if you have the `utimes' function. */\n #undef HAVE_UTIMES\n \n@@ -182,6 +200,10 @@\n /* Define to 1 if user symbol names have a leading underscore, 0 if not. */\n #undef TARGET_PREPENDS_UNDERSCORE\n \n+/* Define to 1 if the type of the st_atim member of a struct stat is struct\n+   timespec. */\n+#undef TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC\n+\n /* Use b modifier when opening binary files? */\n #undef USE_BINARY_FOPEN\n "
    },
    {
      "sha": "1f855268c6fae6917fb58addef502f844de18bd0",
      "filename": "binutils/configure",
      "status": "modified",
      "additions": 160,
      "deletions": 22,
      "changes": 182,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/configure",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/configure",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -2153,6 +2153,63 @@ rm -f conftest.val\n \n } # ac_fn_c_compute_int\n \n+# ac_fn_c_check_member LINENO AGGR MEMBER VAR INCLUDES\n+# ----------------------------------------------------\n+# Tries to find if the field MEMBER exists in type AGGR, after including\n+# INCLUDES, setting cache variable VAR accordingly.\n+ac_fn_c_check_member ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2.$3\" >&5\n+$as_echo_n \"checking for $2.$3... \" >&6; }\n+if eval \\${$4+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$5\n+int\n+main ()\n+{\n+static $2 ac_aggr;\n+if (ac_aggr.$3)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$4=yes\"\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+$5\n+int\n+main ()\n+{\n+static $2 ac_aggr;\n+if (sizeof ac_aggr.$3)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$4=yes\"\n+else\n+  eval \"$4=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+eval ac_res=\\$$4\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n+\n+} # ac_fn_c_check_member\n+\n # ac_fn_c_check_decl LINENO SYMBOL VAR INCLUDES\n # ---------------------------------------------\n # Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n@@ -10874,7 +10931,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10877 \"configure\"\n+#line 10934 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10980,7 +11037,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10983 \"configure\"\n+#line 11040 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12984,7 +13041,7 @@ _ACEOF\n # plugin-api.h tests HAVE_STDINT_H and HAVE_INTTYPES_H\n # Besides those, we need to check anything used in binutils/ not in C99.\n for ac_header in fcntl.h inttypes.h stdint.h sys/file.h \\\n-\t\t sys/stat.h sys/types.h unistd.h\n+\t\t sys/stat.h sys/time.h sys/types.h unistd.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -13239,7 +13296,7 @@ $as_echo \"#define HAVE_MMAP 1\" >>confdefs.h\n fi\n rm -f conftest.mmap conftest.txt\n \n-for ac_func in getc_unlocked sbrk utimes\n+for ac_func in getc_unlocked mkdtemp mkstemp sbrk utimensat utimes\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\"\n@@ -13251,23 +13308,10 @@ _ACEOF\n fi\n done\n \n-ac_fn_c_check_func \"$LINENO\" \"mkstemp\" \"ac_cv_func_mkstemp\"\n-if test \"x$ac_cv_func_mkstemp\" = xyes; then :\n-\n-$as_echo \"#define HAVE_MKSTEMP 1\" >>confdefs.h\n-\n-fi\n-\n-ac_fn_c_check_func \"$LINENO\" \"mkdtemp\" \"ac_cv_func_mkdtemp\"\n-if test \"x$ac_cv_func_mkdtemp\" = xyes; then :\n \n-$as_echo \"#define HAVE_MKDTEMP 1\" >>confdefs.h\n-\n-fi\n-\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for mbstate_t\" >&5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for mbstate_t\" >&5\n $as_echo_n \"checking for mbstate_t... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <wchar.h>\n int\n@@ -13284,13 +13328,107 @@ else\n   have_mbstate_t=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $have_mbstate_t\" >&5\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $have_mbstate_t\" >&5\n $as_echo \"$have_mbstate_t\" >&6; }\n-  if test x\"$have_mbstate_t\" = xyes; then\n+if test x\"$have_mbstate_t\" = xyes; then\n \n $as_echo \"#define HAVE_MBSTATE_T 1\" >>confdefs.h\n \n-  fi\n+fi\n+\n+# Copied from gnulib stat-time.m4.\n+# We should just switch over to using gnulib.\n+ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_atim.tv_nsec\" \"ac_cv_member_struct_stat_st_atim_tv_nsec\" \"#include <sys/types.h>\n+   #include <sys/stat.h>\n+\"\n+if test \"x$ac_cv_member_struct_stat_st_atim_tv_nsec\" = xyes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC 1\n+_ACEOF\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether struct stat.st_atim is of type struct timespec\" >&5\n+$as_echo_n \"checking whether struct stat.st_atim is of type struct timespec... \" >&6; }\n+if ${ac_cv_typeof_struct_stat_st_atim_is_struct_timespec+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+          #include <sys/types.h>\n+          #include <sys/stat.h>\n+          #if HAVE_SYS_TIME_H\n+          # include <sys/time.h>\n+          #endif\n+          #include <time.h>\n+          struct timespec ts;\n+          struct stat st;\n+\n+int\n+main ()\n+{\n+\n+          st.st_atim = ts;\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes\n+else\n+  ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec\" >&5\n+$as_echo \"$ac_cv_typeof_struct_stat_st_atim_is_struct_timespec\" >&6; }\n+   if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then\n+\n+$as_echo \"#define TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC 1\" >>confdefs.h\n+\n+   fi\n+else\n+  ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_atimespec.tv_nsec\" \"ac_cv_member_struct_stat_st_atimespec_tv_nsec\" \"#include <sys/types.h>\n+      #include <sys/stat.h>\n+\"\n+if test \"x$ac_cv_member_struct_stat_st_atimespec_tv_nsec\" = xyes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC 1\n+_ACEOF\n+\n+\n+else\n+  ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_atimensec\" \"ac_cv_member_struct_stat_st_atimensec\" \"#include <sys/types.h>\n+         #include <sys/stat.h>\n+\"\n+if test \"x$ac_cv_member_struct_stat_st_atimensec\" = xyes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_STRUCT_STAT_ST_ATIMENSEC 1\n+_ACEOF\n+\n+\n+else\n+  ac_fn_c_check_member \"$LINENO\" \"struct stat\" \"st_atim.st__tim.tv_nsec\" \"ac_cv_member_struct_stat_st_atim_st__tim_tv_nsec\" \"#include <sys/types.h>\n+            #include <sys/stat.h>\n+\"\n+if test \"x$ac_cv_member_struct_stat_st_atim_st__tim_tv_nsec\" = xyes; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC 1\n+_ACEOF\n+\n+\n+fi\n+\n+fi\n+\n+fi\n+\n+fi\n+\n \n # Some systems have frexp only in -lm, not in -lc.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing frexp\" >&5"
    },
    {
      "sha": "b8ab642e06880031f7db1f7afde5ba434d5dc0b9",
      "filename": "binutils/configure.ac",
      "status": "modified",
      "additions": 49,
      "deletions": 16,
      "changes": 65,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/configure.ac",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/configure.ac",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/configure.ac?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -182,24 +182,57 @@ AC_CHECK_SIZEOF([long long])\n # plugin-api.h tests HAVE_STDINT_H and HAVE_INTTYPES_H\n # Besides those, we need to check anything used in binutils/ not in C99.\n AC_CHECK_HEADERS(fcntl.h inttypes.h stdint.h sys/file.h \\\n-\t\t sys/stat.h sys/types.h unistd.h)\n+\t\t sys/stat.h sys/time.h sys/types.h unistd.h)\n AC_HEADER_SYS_WAIT\n AC_FUNC_MMAP\n-AC_CHECK_FUNCS(getc_unlocked sbrk utimes)\n-AC_CHECK_FUNC([mkstemp],\n-\t      AC_DEFINE([HAVE_MKSTEMP], 1,\n-\t      [Define to 1 if you have the `mkstemp' function.]))\n-AC_CHECK_FUNC([mkdtemp],\n-              AC_DEFINE([HAVE_MKDTEMP], 1,\n-              [Define to 1 if you have the `mkdtemp' function.]))\n-  AC_MSG_CHECKING([for mbstate_t])\n-  AC_TRY_COMPILE([#include <wchar.h>],\n-  [mbstate_t teststate;],\n-  have_mbstate_t=yes, have_mbstate_t=no)\n-  AC_MSG_RESULT($have_mbstate_t)\n-  if test x\"$have_mbstate_t\" = xyes; then\n-    AC_DEFINE(HAVE_MBSTATE_T,1,[Define if mbstate_t exists in wchar.h.])\n-  fi\n+AC_CHECK_FUNCS(getc_unlocked mkdtemp mkstemp sbrk utimensat utimes)\n+\n+AC_MSG_CHECKING([for mbstate_t])\n+AC_TRY_COMPILE([#include <wchar.h>],\n+[mbstate_t teststate;],\n+have_mbstate_t=yes, have_mbstate_t=no)\n+AC_MSG_RESULT($have_mbstate_t)\n+if test x\"$have_mbstate_t\" = xyes; then\n+  AC_DEFINE(HAVE_MBSTATE_T,1,[Define if mbstate_t exists in wchar.h.])\n+fi\n+\n+# Copied from gnulib stat-time.m4.\n+# We should just switch over to using gnulib.\n+AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],\n+  [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],\n+     [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],\n+     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+        [[\n+          #include <sys/types.h>\n+          #include <sys/stat.h>\n+          #if HAVE_SYS_TIME_H\n+          # include <sys/time.h>\n+          #endif\n+          #include <time.h>\n+          struct timespec ts;\n+          struct stat st;\n+        ]],\n+        [[\n+          st.st_atim = ts;\n+        ]])],\n+        [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],\n+        [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])\n+   if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then\n+     AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],\n+       [Define to 1 if the type of the st_atim member of a struct stat is\n+        struct timespec.])\n+   fi],\n+  [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],\n+     [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],\n+        [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],\n+           [#include <sys/types.h>\n+            #include <sys/stat.h>])],\n+        [#include <sys/types.h>\n+         #include <sys/stat.h>])],\n+     [#include <sys/types.h>\n+      #include <sys/stat.h>])],\n+  [#include <sys/types.h>\n+   #include <sys/stat.h>])\n \n # Some systems have frexp only in -lm, not in -lc.\n AC_SEARCH_LIBS(frexp, m)"
    },
    {
      "sha": "2cbe46497aba00a2469cbc1346a429607483fc8c",
      "filename": "binutils/rename.c",
      "status": "modified",
      "additions": 87,
      "deletions": 11,
      "changes": 98,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/rename.c",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/rename.c",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/rename.c?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -22,10 +22,10 @@\n #include \"bfd.h\"\n #include \"bucomm.h\"\n \n-#ifdef HAVE_GOOD_UTIME_H\n-#include <utime.h>\n-#elif defined HAVE_UTIMES\n+#if defined HAVE_UTIMES\n #include <sys/time.h>\n+#elif defined HAVE_GOOD_UTIME_H\n+#include <utime.h>\n #endif\n \n /* The number of bytes to copy at once.  */\n@@ -86,27 +86,103 @@ simple_copy (int fromfd, const char *to,\n   return 0;\n }\n \n+/* The following defines and inline functions are copied from gnulib.\n+   FIXME: Use a gnulib import and stat-time.h instead.  */\n+#if defined HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC\n+# if defined TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC\n+#  define STAT_TIMESPEC(st, st_xtim) ((st)->st_xtim)\n+# else\n+#  define STAT_TIMESPEC_NS(st, st_xtim) ((st)->st_xtim.tv_nsec)\n+# endif\n+#elif defined HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC\n+# define STAT_TIMESPEC(st, st_xtim) ((st)->st_xtim##espec)\n+#elif defined HAVE_STRUCT_STAT_ST_ATIMENSEC\n+# define STAT_TIMESPEC_NS(st, st_xtim) ((st)->st_xtim##ensec)\n+#elif defined HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC\n+# define STAT_TIMESPEC_NS(st, st_xtim) ((st)->st_xtim.st__tim.tv_nsec)\n+#endif\n+\n+/* Return the nanosecond component of *ST's access time.  */\n+inline long int\n+get_stat_atime_ns (struct stat const *st)\n+{\n+# if defined STAT_TIMESPEC\n+  return STAT_TIMESPEC (st, st_atim).tv_nsec;\n+# elif defined STAT_TIMESPEC_NS\n+  return STAT_TIMESPEC_NS (st, st_atim);\n+# else\n+  return 0;\n+# endif\n+}\n+\n+/* Return the nanosecond component of *ST's data modification time.  */\n+inline long int\n+get_stat_mtime_ns (struct stat const *st)\n+{\n+# if defined STAT_TIMESPEC\n+  return STAT_TIMESPEC (st, st_mtim).tv_nsec;\n+# elif defined STAT_TIMESPEC_NS\n+  return STAT_TIMESPEC_NS (st, st_mtim);\n+# else\n+  return 0;\n+# endif\n+}\n+\n+/* Return *ST's access time.  */\n+inline struct timespec\n+get_stat_atime (struct stat const *st)\n+{\n+#ifdef STAT_TIMESPEC\n+  return STAT_TIMESPEC (st, st_atim);\n+#else\n+  struct timespec t;\n+  t.tv_sec = st->st_atime;\n+  t.tv_nsec = get_stat_atime_ns (st);\n+  return t;\n+#endif\n+}\n+\n+/* Return *ST's data modification time.  */\n+inline struct timespec\n+get_stat_mtime (struct stat const *st)\n+{\n+#ifdef STAT_TIMESPEC\n+  return STAT_TIMESPEC (st, st_mtim);\n+#else\n+  struct timespec t;\n+  t.tv_sec = st->st_mtime;\n+  t.tv_nsec = get_stat_mtime_ns (st);\n+  return t;\n+#endif\n+}\n+/* End FIXME.  */\n+\n /* Set the times of the file DESTINATION to be the same as those in\n    STATBUF.  */\n \n void\n set_times (const char *destination, const struct stat *statbuf)\n {\n   int result;\n-#ifdef HAVE_GOOD_UTIME_H\n-  struct utimbuf tb;\n-\n-  tb.actime = statbuf->st_atime;\n-  tb.modtime = statbuf->st_mtime;\n-  result = utime (destination, &tb);\n+#if defined HAVE_UTIMENSAT\n+  struct timespec times[2];\n+  times[0] = get_stat_atime (statbuf);\n+  times[1] = get_stat_mtime (statbuf);\n+  result = utimensat (AT_FDCWD, destination, times, 0);\n #elif defined HAVE_UTIMES\n   struct timeval tv[2];\n \n   tv[0].tv_sec = statbuf->st_atime;\n-  tv[0].tv_usec = 0;\n+  tv[0].tv_usec = get_stat_atime_ns (statbuf) / 1000;\n   tv[1].tv_sec = statbuf->st_mtime;\n-  tv[1].tv_usec = 0;\n+  tv[1].tv_usec = get_stat_mtime_ns (statbuf) / 1000;\n   result = utimes (destination, tv);\n+#elif defined HAVE_GOOD_UTIME_H\n+  struct utimbuf tb;\n+\n+  tb.actime = statbuf->st_atime;\n+  tb.modtime = statbuf->st_mtime;\n+  result = utime (destination, &tb);\n #else\n   long tb[2];\n "
    },
    {
      "sha": "e1df9ff748d098e8dafb988701a2a1f8c8aa9ab1",
      "filename": "binutils/testsuite/binutils-all/objcopy.exp",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/bminor/binutils-gdb/blob/985e026451640c880e13827454aa31b7a636d1bc/binutils/testsuite/binutils-all/objcopy.exp",
      "raw_url": "https://github.com/bminor/binutils-gdb/raw/985e026451640c880e13827454aa31b7a636d1bc/binutils/testsuite/binutils-all/objcopy.exp",
      "contents_url": "https://api.github.com/repos/bminor/binutils-gdb/contents/binutils/testsuite/binutils-all/objcopy.exp?ref=985e026451640c880e13827454aa31b7a636d1bc",
      "patch": "@@ -77,6 +77,7 @@ proc objcopy_test {testname srcfile type asflags ldflags} {\n \t    return\n \t}\n \tset xflags \"--preserve-dates\"\n+\tsleep 1\n     }\n \n     set got [binutils_run $OBJCOPY \"$OBJCOPYFLAGS $xflags $t_tempfile $t_copyfile\"]\n@@ -102,6 +103,17 @@ proc objcopy_test {testname srcfile type asflags ldflags} {\n \n \tif [string equal \"\" $exec_output] then {\n \t    pass \"objcopy $type ($testname)\"\n+\t    if { $type == \"executable\" } {\n+\t\tset dir [file dirname $t_copyfile]\n+\t\tset f2 [file tail $t_copyfile]\n+\t\tset status [remote_exec host find \"$dir -name $f2 -newer $t_tempfile -print\"]\n+\t\tset exec_output [lindex $status 1]\n+\t\tif [string equal \"\" $exec_output] then {\n+\t\t    pass \"objcopy $type ($testname) timestamp\"\n+\t\t} else {\n+\t\t    fail \"objcopy $type ($testname) timestamp\"\n+\t\t}\n+\t    }\n \t} else {\n \t    send_log \"$exec_output\\n\"\n \t    verbose \"$exec_output\" 1"
    }
  ]
}